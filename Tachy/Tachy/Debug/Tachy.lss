
Tachy.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000a08c  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000a08c  0000a08c  0001a08c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a28  20000000  0000a094  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000184  20000a28  0000aabc  00020a28  2**2
                  ALLOC
  4 .stack        00002004  20000bac  0000ac40  00020a28  2**0
                  ALLOC
  5 .ARM.attributes 0000002d  00000000  00000000  00020a28  2**0
                  CONTENTS, READONLY
  6 .comment      000000c7  00000000  00000000  00020a55  2**0
                  CONTENTS, READONLY
  7 .debug_info   0002bf82  00000000  00000000  00020b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004169  00000000  00000000  0004ca9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00011a0d  00000000  00000000  00050c07  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000e78  00000000  00000000  00062614  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001340  00000000  00000000  0006348c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00021bf0  00000000  00000000  000647cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00017806  00000000  00000000  000863bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0009dffe  00000000  00000000  0009dbc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00003728  00000000  00000000  0013bbc0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b0 2b 00 20 e5 02 00 00 e1 02 00 00 e1 02 00 00     .+. ............
	...
      2c:	e1 02 00 00 00 00 00 00 00 00 00 00 e1 02 00 00     ................
      3c:	e1 02 00 00 e1 02 00 00 e1 02 00 00 69 12 00 00     ............i...
      4c:	e1 02 00 00 e1 02 00 00 e1 02 00 00 e1 02 00 00     ................
      5c:	e1 02 00 00 e1 02 00 00 e1 02 00 00 e1 02 00 00     ................
      6c:	e1 02 00 00 e1 02 00 00 e1 02 00 00 e1 02 00 00     ................
      7c:	e1 02 00 00 e1 02 00 00 e1 02 00 00 e1 02 00 00     ................
      8c:	e1 02 00 00 e1 02 00 00 e1 02 00 00 71 22 00 00     ............q"..
      9c:	e1 02 00 00 e1 02 00 00 e1 02 00 00                 ............

000000a8 <__do_global_dtors_aux>:
      a8:	b510      	push	{r4, lr}
      aa:	4c06      	ldr	r4, [pc, #24]	; (c4 <__do_global_dtors_aux+0x1c>)
      ac:	7823      	ldrb	r3, [r4, #0]
      ae:	2b00      	cmp	r3, #0
      b0:	d107      	bne.n	c2 <__do_global_dtors_aux+0x1a>
      b2:	4b05      	ldr	r3, [pc, #20]	; (c8 <__do_global_dtors_aux+0x20>)
      b4:	2b00      	cmp	r3, #0
      b6:	d002      	beq.n	be <__do_global_dtors_aux+0x16>
      b8:	4804      	ldr	r0, [pc, #16]	; (cc <__do_global_dtors_aux+0x24>)
      ba:	e000      	b.n	be <__do_global_dtors_aux+0x16>
      bc:	bf00      	nop
      be:	2301      	movs	r3, #1
      c0:	7023      	strb	r3, [r4, #0]
      c2:	bd10      	pop	{r4, pc}
      c4:	20000a28 	.word	0x20000a28
      c8:	00000000 	.word	0x00000000
      cc:	0000a094 	.word	0x0000a094

000000d0 <frame_dummy>:
      d0:	4b08      	ldr	r3, [pc, #32]	; (f4 <frame_dummy+0x24>)
      d2:	b510      	push	{r4, lr}
      d4:	2b00      	cmp	r3, #0
      d6:	d003      	beq.n	e0 <frame_dummy+0x10>
      d8:	4907      	ldr	r1, [pc, #28]	; (f8 <frame_dummy+0x28>)
      da:	4808      	ldr	r0, [pc, #32]	; (fc <frame_dummy+0x2c>)
      dc:	e000      	b.n	e0 <frame_dummy+0x10>
      de:	bf00      	nop
      e0:	4807      	ldr	r0, [pc, #28]	; (100 <frame_dummy+0x30>)
      e2:	6803      	ldr	r3, [r0, #0]
      e4:	2b00      	cmp	r3, #0
      e6:	d100      	bne.n	ea <frame_dummy+0x1a>
      e8:	bd10      	pop	{r4, pc}
      ea:	4b06      	ldr	r3, [pc, #24]	; (104 <frame_dummy+0x34>)
      ec:	2b00      	cmp	r3, #0
      ee:	d0fb      	beq.n	e8 <frame_dummy+0x18>
      f0:	4798      	blx	r3
      f2:	e7f9      	b.n	e8 <frame_dummy+0x18>
      f4:	00000000 	.word	0x00000000
      f8:	20000a2c 	.word	0x20000a2c
      fc:	0000a094 	.word	0x0000a094
     100:	0000a094 	.word	0x0000a094
     104:	00000000 	.word	0x00000000

00000108 <adxl345_get_devid_reg>:
}

// ==========================================
// low-level register access

adxl345_err_t adxl345_get_devid_reg(adxl345_t *adxl345, uint8_t *val) {
     108:	b510      	push	{r4, lr}
     10a:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_DEVID, val);
     10c:	6800      	ldr	r0, [r0, #0]
     10e:	2100      	movs	r1, #0
     110:	4b01      	ldr	r3, [pc, #4]	; (118 <adxl345_get_devid_reg+0x10>)
     112:	4798      	blx	r3
}
     114:	bd10      	pop	{r4, pc}
     116:	46c0      	nop			; (mov r8, r8)
     118:	00000265 	.word	0x00000265

0000011c <adxl345_init>:
adxl345_err_t adxl345_init(adxl345_t *adxl345, adxl345_dev_t * dev) {
     11c:	b500      	push	{lr}
     11e:	b083      	sub	sp, #12
  adxl345->dev = dev;
     120:	6001      	str	r1, [r0, #0]
  if ((err = adxl345_get_devid_reg(adxl345, &reg)) != ADXL345_ERR_NONE) {
     122:	466b      	mov	r3, sp
     124:	1dd9      	adds	r1, r3, #7
     126:	4b06      	ldr	r3, [pc, #24]	; (140 <adxl345_init+0x24>)
     128:	4798      	blx	r3
     12a:	2800      	cmp	r0, #0
     12c:	d105      	bne.n	13a <adxl345_init+0x1e>
  } else if (reg != ADXL345_DEVICE_ID) {
     12e:	466b      	mov	r3, sp
     130:	3307      	adds	r3, #7
     132:	781b      	ldrb	r3, [r3, #0]
     134:	2be5      	cmp	r3, #229	; 0xe5
     136:	d000      	beq.n	13a <adxl345_init+0x1e>
    return ADXL354_ERR_INIT;
     138:	3004      	adds	r0, #4
}
     13a:	b003      	add	sp, #12
     13c:	bd00      	pop	{pc}
     13e:	46c0      	nop			; (mov r8, r8)
     140:	00000109 	.word	0x00000109

00000144 <adxl345_get_power_ctl_reg>:

adxl345_err_t adxl345_set_bw_rate_reg(adxl345_t *adxl345, adxl345_bw_rate_reg val) {
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_BW_RATE, val);
}

adxl345_err_t adxl345_get_power_ctl_reg(adxl345_t *adxl345, adxl345_power_ctl_reg *val) {
     144:	b510      	push	{r4, lr}
     146:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_POWER_CTL, val);
     148:	6800      	ldr	r0, [r0, #0]
     14a:	212d      	movs	r1, #45	; 0x2d
     14c:	4b01      	ldr	r3, [pc, #4]	; (154 <adxl345_get_power_ctl_reg+0x10>)
     14e:	4798      	blx	r3
}
     150:	bd10      	pop	{r4, pc}
     152:	46c0      	nop			; (mov r8, r8)
     154:	00000265 	.word	0x00000265

00000158 <adxl345_set_power_ctl_reg>:

adxl345_err_t adxl345_set_power_ctl_reg(adxl345_t *adxl345, adxl345_power_ctl_reg val) {
     158:	b510      	push	{r4, lr}
     15a:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_POWER_CTL, val);
     15c:	6800      	ldr	r0, [r0, #0]
     15e:	212d      	movs	r1, #45	; 0x2d
     160:	4b01      	ldr	r3, [pc, #4]	; (168 <adxl345_set_power_ctl_reg+0x10>)
     162:	4798      	blx	r3
}
     164:	bd10      	pop	{r4, pc}
     166:	46c0      	nop			; (mov r8, r8)
     168:	0000027d 	.word	0x0000027d

0000016c <adxl345_get_data_regs>:

adxl345_err_t adxl345_set_data_format_reg(adxl345_t *adxl345, adxl345_data_format_reg val) {
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_DATA_FORMAT, val);
}

adxl345_err_t adxl345_get_data_regs(adxl345_t *adxl345, adxl345_data_regs_t *dst) {
     16c:	b510      	push	{r4, lr}
     16e:	000a      	movs	r2, r1
  return adxl345_dev_read_regs(adxl345->dev, ADXL345_REG_DATAX0, (uint8_t *)dst, sizeof(adxl345_data_regs_t));
     170:	6800      	ldr	r0, [r0, #0]
     172:	2306      	movs	r3, #6
     174:	2132      	movs	r1, #50	; 0x32
     176:	4c01      	ldr	r4, [pc, #4]	; (17c <adxl345_get_data_regs+0x10>)
     178:	47a0      	blx	r4
}
     17a:	bd10      	pop	{r4, pc}
     17c:	000002b1 	.word	0x000002b1

00000180 <adxl345_start>:
// ==========================================
// higher level functions.  In the functions below,
// _g stands for gravity and _s stands for seconds.

/** @brief Enter measurement mode: start measuring */
adxl345_err_t adxl345_start(adxl345_t *adxl345) {
     180:	b510      	push	{r4, lr}
     182:	b082      	sub	sp, #8
     184:	0004      	movs	r4, r0
  uint8_t reg;
  adxl345_err_t err;

  err = adxl345_get_power_ctl_reg(adxl345, &reg);
     186:	466b      	mov	r3, sp
     188:	1dd9      	adds	r1, r3, #7
     18a:	4b07      	ldr	r3, [pc, #28]	; (1a8 <adxl345_start+0x28>)
     18c:	4798      	blx	r3
  if (err != ADXL345_ERR_NONE) return err;
     18e:	2800      	cmp	r0, #0
     190:	d001      	beq.n	196 <adxl345_start+0x16>

  err = adxl345_set_power_ctl_reg(adxl345, reg | ADXL345_MEASURE);
  return err;
}
     192:	b002      	add	sp, #8
     194:	bd10      	pop	{r4, pc}
  err = adxl345_set_power_ctl_reg(adxl345, reg | ADXL345_MEASURE);
     196:	466b      	mov	r3, sp
     198:	79d9      	ldrb	r1, [r3, #7]
     19a:	2308      	movs	r3, #8
     19c:	4319      	orrs	r1, r3
     19e:	0020      	movs	r0, r4
     1a0:	4b02      	ldr	r3, [pc, #8]	; (1ac <adxl345_start+0x2c>)
     1a2:	4798      	blx	r3
  return err;
     1a4:	e7f5      	b.n	192 <adxl345_start+0x12>
     1a6:	46c0      	nop			; (mov r8, r8)
     1a8:	00000145 	.word	0x00000145
     1ac:	00000159 	.word	0x00000159

000001b0 <adxl345_get_sample>:

adxl345_err_t adxl345_sample_is_available(adxl345_t *adxl345, bool *val);

/** @brief Read an x, y, z sample frame.
 */
adxl345_err_t adxl345_get_sample(adxl345_t *adxl345, adxl345_sample_t *sample) {
     1b0:	b5f0      	push	{r4, r5, r6, r7, lr}
     1b2:	46c6      	mov	lr, r8
     1b4:	b500      	push	{lr}
     1b6:	b082      	sub	sp, #8
     1b8:	000d      	movs	r5, r1
  adxl345_data_regs_t regs;
  adxl345_err_t err;

  err = adxl345_get_data_regs(adxl345, &regs);
     1ba:	4669      	mov	r1, sp
     1bc:	4b19      	ldr	r3, [pc, #100]	; (224 <adxl345_get_sample+0x74>)
     1be:	4798      	blx	r3
     1c0:	1e04      	subs	r4, r0, #0
  if (err != ADXL345_ERR_NONE) return err;
     1c2:	d12a      	bne.n	21a <adxl345_get_sample+0x6a>

  // Using default values:
  //   x1:x0 is a 16 bit signed value with 10 bits of resolution.
  //   Full scale is 2^9 = 512 corresponding to 2g
  //   This can change with sensitivity settings, packing mode, etc.
  sample->x = (int16_t)((regs.x1 << 8) | regs.x0) * ADXL345_2G_SCALE;
     1c4:	466b      	mov	r3, sp
     1c6:	785b      	ldrb	r3, [r3, #1]
     1c8:	021b      	lsls	r3, r3, #8
     1ca:	466a      	mov	r2, sp
     1cc:	7810      	ldrb	r0, [r2, #0]
     1ce:	4318      	orrs	r0, r3
     1d0:	b200      	sxth	r0, r0
     1d2:	4b15      	ldr	r3, [pc, #84]	; (228 <adxl345_get_sample+0x78>)
     1d4:	4698      	mov	r8, r3
     1d6:	4798      	blx	r3
     1d8:	4f14      	ldr	r7, [pc, #80]	; (22c <adxl345_get_sample+0x7c>)
     1da:	2200      	movs	r2, #0
     1dc:	4b14      	ldr	r3, [pc, #80]	; (230 <adxl345_get_sample+0x80>)
     1de:	47b8      	blx	r7
     1e0:	4e14      	ldr	r6, [pc, #80]	; (234 <adxl345_get_sample+0x84>)
     1e2:	47b0      	blx	r6
     1e4:	6028      	str	r0, [r5, #0]
  sample->y = (int16_t)((regs.y1 << 8) | regs.y0) * ADXL345_2G_SCALE;
     1e6:	466b      	mov	r3, sp
     1e8:	78db      	ldrb	r3, [r3, #3]
     1ea:	021b      	lsls	r3, r3, #8
     1ec:	466a      	mov	r2, sp
     1ee:	7890      	ldrb	r0, [r2, #2]
     1f0:	4318      	orrs	r0, r3
     1f2:	b200      	sxth	r0, r0
     1f4:	47c0      	blx	r8
     1f6:	2200      	movs	r2, #0
     1f8:	4b0d      	ldr	r3, [pc, #52]	; (230 <adxl345_get_sample+0x80>)
     1fa:	47b8      	blx	r7
     1fc:	47b0      	blx	r6
     1fe:	6068      	str	r0, [r5, #4]
  sample->z = (int16_t)((regs.z1 << 8) | regs.z0) * ADXL345_2G_SCALE;
     200:	466b      	mov	r3, sp
     202:	795b      	ldrb	r3, [r3, #5]
     204:	021b      	lsls	r3, r3, #8
     206:	466a      	mov	r2, sp
     208:	7910      	ldrb	r0, [r2, #4]
     20a:	4318      	orrs	r0, r3
     20c:	b200      	sxth	r0, r0
     20e:	47c0      	blx	r8
     210:	2200      	movs	r2, #0
     212:	4b07      	ldr	r3, [pc, #28]	; (230 <adxl345_get_sample+0x80>)
     214:	47b8      	blx	r7
     216:	47b0      	blx	r6
     218:	60a8      	str	r0, [r5, #8]

  return ADXL345_ERR_NONE;
}
     21a:	0020      	movs	r0, r4
     21c:	b002      	add	sp, #8
     21e:	bc04      	pop	{r2}
     220:	4690      	mov	r8, r2
     222:	bdf0      	pop	{r4, r5, r6, r7, pc}
     224:	0000016d 	.word	0x0000016d
     228:	00003cf5 	.word	0x00003cf5
     22c:	00003161 	.word	0x00003161
     230:	3f700000 	.word	0x3f700000
     234:	00003e8d 	.word	0x00003e8d

00000238 <adxl345_dev_init>:
// public code

adxl345_err_t adxl345_dev_init(adxl345_dev_t *dev,
                               struct i2c_m_sync_desc *const i2c_descriptor,
                               int16_t slave_addr,
                               int32_t addr_len) {
     238:	b570      	push	{r4, r5, r6, lr}
     23a:	000c      	movs	r4, r1
     23c:	0015      	movs	r5, r2
     23e:	001e      	movs	r6, r3
  dev->i2c_descriptor = i2c_descriptor;
     240:	6001      	str	r1, [r0, #0]
  dev->slave_addr = slave_addr;
     242:	8082      	strh	r2, [r0, #4]
  dev->addr_len = addr_len;
     244:	6083      	str	r3, [r0, #8]

  i2c_m_sync_enable(i2c_descriptor);
     246:	0008      	movs	r0, r1
     248:	4b04      	ldr	r3, [pc, #16]	; (25c <adxl345_dev_init+0x24>)
     24a:	4798      	blx	r3
  i2c_m_sync_set_slaveaddr(i2c_descriptor, slave_addr, addr_len);
     24c:	0032      	movs	r2, r6
     24e:	0029      	movs	r1, r5
     250:	0020      	movs	r0, r4
     252:	4b03      	ldr	r3, [pc, #12]	; (260 <adxl345_dev_init+0x28>)
     254:	4798      	blx	r3

  return ADXL345_ERR_NONE;
}
     256:	2000      	movs	r0, #0
     258:	bd70      	pop	{r4, r5, r6, pc}
     25a:	46c0      	nop			; (mov r8, r8)
     25c:	00000995 	.word	0x00000995
     260:	000009a1 	.word	0x000009a1

00000264 <adxl345_dev_read_reg>:
 * @param reg_addr Address of register to be read
 * @param dst Pointer to destination buffer.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_read_reg(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t *dst) {
     264:	b510      	push	{r4, lr}
  int32_t err = i2c_m_sync_cmd_read(dev->i2c_descriptor, reg_addr, dst, 1);
     266:	6800      	ldr	r0, [r0, #0]
     268:	2301      	movs	r3, #1
     26a:	4c03      	ldr	r4, [pc, #12]	; (278 <adxl345_dev_read_reg+0x14>)
     26c:	47a0      	blx	r4
  if (err < 0) {
    return ADXL345_ERR_WRITE;
     26e:	2303      	movs	r3, #3
  }
  return ADXL345_ERR_NONE;
     270:	17c0      	asrs	r0, r0, #31
     272:	4003      	ands	r3, r0
}
     274:	0018      	movs	r0, r3
     276:	bd10      	pop	{r4, pc}
     278:	000009b5 	.word	0x000009b5

0000027c <adxl345_dev_write_reg>:
 * @param reg_addr Address of register to be written.
 * @param val Value to be written.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_write_reg(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t val) {
     27c:	b500      	push	{lr}
     27e:	b085      	sub	sp, #20
  uint8_t buf[2];
  buf[0] = reg_addr;
     280:	ab03      	add	r3, sp, #12
     282:	7019      	strb	r1, [r3, #0]
  buf[1] = val;
     284:	705a      	strb	r2, [r3, #1]

  struct _i2c_m_msg msg;
  int32_t ret;
  msg.addr = dev->slave_addr;
     286:	8882      	ldrh	r2, [r0, #4]
     288:	4669      	mov	r1, sp
     28a:	800a      	strh	r2, [r1, #0]
  msg.len = sizeof(buf);
     28c:	2202      	movs	r2, #2
     28e:	9201      	str	r2, [sp, #4]
  msg.flags = I2C_M_STOP;
     290:	4a05      	ldr	r2, [pc, #20]	; (2a8 <adxl345_dev_write_reg+0x2c>)
     292:	804a      	strh	r2, [r1, #2]
  msg.buffer = buf;
     294:	9302      	str	r3, [sp, #8]

  ret = i2c_m_sync_transfer(dev->i2c_descriptor, &msg);
     296:	6800      	ldr	r0, [r0, #0]
     298:	4b04      	ldr	r3, [pc, #16]	; (2ac <adxl345_dev_write_reg+0x30>)
     29a:	4798      	blx	r3
  if (ret < 0) {
    return ADXL345_ERR_WRITE;
     29c:	2303      	movs	r3, #3
  }
  return ADXL345_ERR_NONE;
     29e:	17c0      	asrs	r0, r0, #31
     2a0:	4003      	ands	r3, r0
}
     2a2:	0018      	movs	r0, r3
     2a4:	b005      	add	sp, #20
     2a6:	bd00      	pop	{pc}
     2a8:	ffff8000 	.word	0xffff8000
     2ac:	000009fd 	.word	0x000009fd

000002b0 <adxl345_dev_read_regs>:
 * @param dst Pointer to destination buffer.  Must have capacity of n_bytes.
 * @param n_bytes Number of registers to be read.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_read_regs(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t *dst, uint8_t n_bytes) {
     2b0:	b510      	push	{r4, lr}
  int32_t err = i2c_m_sync_cmd_read(dev->i2c_descriptor, reg_addr, dst, n_bytes);
     2b2:	6800      	ldr	r0, [r0, #0]
     2b4:	4c02      	ldr	r4, [pc, #8]	; (2c0 <adxl345_dev_read_regs+0x10>)
     2b6:	47a0      	blx	r4
  if (err < 0) {
    return ADXL345_ERR_READ;
  }
  return ADXL345_ERR_NONE;
     2b8:	0fc0      	lsrs	r0, r0, #31
     2ba:	0040      	lsls	r0, r0, #1
}
     2bc:	bd10      	pop	{r4, pc}
     2be:	46c0      	nop			; (mov r8, r8)
     2c0:	000009b5 	.word	0x000009b5

000002c4 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     2c4:	b510      	push	{r4, lr}
	system_init();
     2c6:	4b03      	ldr	r3, [pc, #12]	; (2d4 <atmel_start_init+0x10>)
     2c8:	4798      	blx	r3
	stdio_redirect_init();
     2ca:	4b03      	ldr	r3, [pc, #12]	; (2d8 <atmel_start_init+0x14>)
     2cc:	4798      	blx	r3

	touch_init();
     2ce:	4b03      	ldr	r3, [pc, #12]	; (2dc <atmel_start_init+0x18>)
     2d0:	4798      	blx	r3
}
     2d2:	bd10      	pop	{r4, pc}
     2d4:	00000851 	.word	0x00000851
     2d8:	00002349 	.word	0x00002349
     2dc:	00002201 	.word	0x00002201

000002e0 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     2e0:	e7fe      	b.n	2e0 <Dummy_Handler>
	...

000002e4 <Reset_Handler>:
{
     2e4:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     2e6:	4a17      	ldr	r2, [pc, #92]	; (344 <Reset_Handler+0x60>)
     2e8:	4b17      	ldr	r3, [pc, #92]	; (348 <Reset_Handler+0x64>)
     2ea:	429a      	cmp	r2, r3
     2ec:	d011      	beq.n	312 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     2ee:	001a      	movs	r2, r3
     2f0:	4b16      	ldr	r3, [pc, #88]	; (34c <Reset_Handler+0x68>)
     2f2:	429a      	cmp	r2, r3
     2f4:	d20d      	bcs.n	312 <Reset_Handler+0x2e>
     2f6:	4a16      	ldr	r2, [pc, #88]	; (350 <Reset_Handler+0x6c>)
     2f8:	3303      	adds	r3, #3
     2fa:	1a9b      	subs	r3, r3, r2
     2fc:	089b      	lsrs	r3, r3, #2
     2fe:	3301      	adds	r3, #1
     300:	009b      	lsls	r3, r3, #2
     302:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     304:	4810      	ldr	r0, [pc, #64]	; (348 <Reset_Handler+0x64>)
     306:	490f      	ldr	r1, [pc, #60]	; (344 <Reset_Handler+0x60>)
     308:	588c      	ldr	r4, [r1, r2]
     30a:	5084      	str	r4, [r0, r2]
     30c:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     30e:	429a      	cmp	r2, r3
     310:	d1fa      	bne.n	308 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     312:	4a10      	ldr	r2, [pc, #64]	; (354 <Reset_Handler+0x70>)
     314:	4b10      	ldr	r3, [pc, #64]	; (358 <Reset_Handler+0x74>)
     316:	429a      	cmp	r2, r3
     318:	d20a      	bcs.n	330 <Reset_Handler+0x4c>
     31a:	43d3      	mvns	r3, r2
     31c:	490e      	ldr	r1, [pc, #56]	; (358 <Reset_Handler+0x74>)
     31e:	185b      	adds	r3, r3, r1
     320:	2103      	movs	r1, #3
     322:	438b      	bics	r3, r1
     324:	3304      	adds	r3, #4
     326:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     328:	2100      	movs	r1, #0
     32a:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     32c:	4293      	cmp	r3, r2
     32e:	d1fc      	bne.n	32a <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     330:	4a0a      	ldr	r2, [pc, #40]	; (35c <Reset_Handler+0x78>)
     332:	21ff      	movs	r1, #255	; 0xff
     334:	4b0a      	ldr	r3, [pc, #40]	; (360 <Reset_Handler+0x7c>)
     336:	438b      	bics	r3, r1
     338:	6093      	str	r3, [r2, #8]
        __libc_init_array();
     33a:	4b0a      	ldr	r3, [pc, #40]	; (364 <Reset_Handler+0x80>)
     33c:	4798      	blx	r3
        main();
     33e:	4b0a      	ldr	r3, [pc, #40]	; (368 <Reset_Handler+0x84>)
     340:	4798      	blx	r3
     342:	e7fe      	b.n	342 <Reset_Handler+0x5e>
     344:	0000a094 	.word	0x0000a094
     348:	20000000 	.word	0x20000000
     34c:	20000a28 	.word	0x20000a28
     350:	20000004 	.word	0x20000004
     354:	20000a28 	.word	0x20000a28
     358:	20000bac 	.word	0x20000bac
     35c:	e000ed00 	.word	0xe000ed00
     360:	00000000 	.word	0x00000000
     364:	00004271 	.word	0x00004271
     368:	00001ff9 	.word	0x00001ff9

0000036c <EDBG_0_PORT_init>:
	hri_mclk_set_APBAMASK_RTC_bit(MCLK);
	timer_init(&Timer, RTC, _rtc_get_timer());
}

void EDBG_0_PORT_init(void)
{
     36c:	b530      	push	{r4, r5, lr}
static inline void hri_port_write_PINCFG_PMUXEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index,
                                                    bool value)
{
	uint8_t tmp;
	PORT_CRITICAL_SECTION_ENTER();
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     36e:	4b11      	ldr	r3, [pc, #68]	; (3b4 <EDBG_0_PORT_init+0x48>)
     370:	22ac      	movs	r2, #172	; 0xac
     372:	0052      	lsls	r2, r2, #1
     374:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     376:	2501      	movs	r5, #1
     378:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     37a:	2401      	movs	r4, #1
     37c:	4321      	orrs	r1, r4
     37e:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     380:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     382:	209e      	movs	r0, #158	; 0x9e
     384:	0040      	lsls	r0, r0, #1
     386:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     388:	3a4a      	subs	r2, #74	; 0x4a
     38a:	3aff      	subs	r2, #255	; 0xff
     38c:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     38e:	3a0d      	subs	r2, #13
     390:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     392:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     394:	215a      	movs	r1, #90	; 0x5a
     396:	31ff      	adds	r1, #255	; 0xff
     398:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     39a:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     39c:	4322      	orrs	r2, r4
     39e:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     3a0:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     3a2:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     3a4:	394b      	subs	r1, #75	; 0x4b
     3a6:	39ff      	subs	r1, #255	; 0xff
     3a8:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     3aa:	3111      	adds	r1, #17
     3ac:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     3ae:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(PC24, PINMUX_PC24C_SERCOM0_PAD2);

	gpio_set_pin_function(PC25, PINMUX_PC25C_SERCOM0_PAD3);
}
     3b0:	bd30      	pop	{r4, r5, pc}
     3b2:	46c0      	nop			; (mov r8, r8)
     3b4:	41006000 	.word	0x41006000

000003b8 <EDBG_0_CLOCK_init>:
}

static inline void hri_gclk_write_PCHCTRL_reg(const void *const hw, uint8_t index, hri_gclk_pchctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->PCHCTRL[index].reg = data;
     3b8:	4b06      	ldr	r3, [pc, #24]	; (3d4 <EDBG_0_CLOCK_init+0x1c>)
     3ba:	2140      	movs	r1, #64	; 0x40
     3bc:	22c0      	movs	r2, #192	; 0xc0
     3be:	5099      	str	r1, [r3, r2]
     3c0:	3103      	adds	r1, #3
     3c2:	3a04      	subs	r2, #4
     3c4:	5099      	str	r1, [r3, r2]
}

static inline void hri_mclk_set_APBCMASK_SERCOM0_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM0;
     3c6:	4a04      	ldr	r2, [pc, #16]	; (3d8 <EDBG_0_CLOCK_init+0x20>)
     3c8:	69d3      	ldr	r3, [r2, #28]
     3ca:	3941      	subs	r1, #65	; 0x41
     3cc:	430b      	orrs	r3, r1
     3ce:	61d3      	str	r3, [r2, #28]
void EDBG_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM0_GCLK_ID_CORE, CONF_GCLK_SERCOM0_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM0_GCLK_ID_SLOW, CONF_GCLK_SERCOM0_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM0_bit(MCLK);
}
     3d0:	4770      	bx	lr
     3d2:	46c0      	nop			; (mov r8, r8)
     3d4:	40001c00 	.word	0x40001c00
     3d8:	40000800 	.word	0x40000800

000003dc <EDBG_0_init>:

void EDBG_0_init(void)
{
     3dc:	b510      	push	{r4, lr}
	EDBG_0_CLOCK_init();
     3de:	4b05      	ldr	r3, [pc, #20]	; (3f4 <EDBG_0_init+0x18>)
     3e0:	4798      	blx	r3
	usart_sync_init(&EDBG_0, SERCOM0, (void *)NULL);
     3e2:	2200      	movs	r2, #0
     3e4:	4904      	ldr	r1, [pc, #16]	; (3f8 <EDBG_0_init+0x1c>)
     3e6:	4805      	ldr	r0, [pc, #20]	; (3fc <EDBG_0_init+0x20>)
     3e8:	4b05      	ldr	r3, [pc, #20]	; (400 <EDBG_0_init+0x24>)
     3ea:	4798      	blx	r3
	EDBG_0_PORT_init();
     3ec:	4b05      	ldr	r3, [pc, #20]	; (404 <EDBG_0_init+0x28>)
     3ee:	4798      	blx	r3
}
     3f0:	bd10      	pop	{r4, pc}
     3f2:	46c0      	nop			; (mov r8, r8)
     3f4:	000003b9 	.word	0x000003b9
     3f8:	42000400 	.word	0x42000400
     3fc:	20000adc 	.word	0x20000adc
     400:	00000f29 	.word	0x00000f29
     404:	0000036d 	.word	0x0000036d

00000408 <ADXL345_0_PORT_init>:

void ADXL345_0_PORT_init(void)
{
     408:	b5f0      	push	{r4, r5, r6, r7, lr}
     40a:	46ce      	mov	lr, r9
     40c:	4647      	mov	r7, r8
     40e:	b580      	push	{r7, lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     410:	25c0      	movs	r5, #192	; 0xc0
     412:	05ed      	lsls	r5, r5, #23
     414:	2484      	movs	r4, #132	; 0x84
     416:	2180      	movs	r1, #128	; 0x80
     418:	05c9      	lsls	r1, r1, #23
     41a:	5129      	str	r1, [r5, r4]
}

static inline void hri_port_set_PINCFG_PULLEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
     41c:	4b1a      	ldr	r3, [pc, #104]	; (488 <ADXL345_0_PORT_init+0x80>)
     41e:	20de      	movs	r0, #222	; 0xde
     420:	5c1a      	ldrb	r2, [r3, r0]
     422:	2604      	movs	r6, #4
     424:	46b4      	mov	ip, r6
     426:	4666      	mov	r6, ip
     428:	4332      	orrs	r2, r6
     42a:	b2d2      	uxtb	r2, r2
     42c:	541a      	strb	r2, [r3, r0]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     42e:	2298      	movs	r2, #152	; 0x98
     430:	4691      	mov	r9, r2
     432:	50a9      	str	r1, [r5, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     434:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     436:	2701      	movs	r7, #1
     438:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     43a:	2601      	movs	r6, #1
     43c:	4331      	orrs	r1, r6
     43e:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     440:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     442:	381f      	subs	r0, #31
     444:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     446:	3a89      	subs	r2, #137	; 0x89
     448:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     44a:	3a0d      	subs	r2, #13
     44c:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     44e:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     450:	2280      	movs	r2, #128	; 0x80
     452:	0612      	lsls	r2, r2, #24
     454:	4690      	mov	r8, r2
     456:	512a      	str	r2, [r5, r4]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
     458:	345b      	adds	r4, #91	; 0x5b
     45a:	5d19      	ldrb	r1, [r3, r4]
     45c:	4662      	mov	r2, ip
     45e:	4311      	orrs	r1, r2
     460:	b2c9      	uxtb	r1, r1
     462:	5519      	strb	r1, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     464:	4642      	mov	r2, r8
     466:	4649      	mov	r1, r9
     468:	506a      	str	r2, [r5, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     46a:	5d1a      	ldrb	r2, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     46c:	43ba      	bics	r2, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     46e:	4332      	orrs	r2, r6
     470:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     472:	551a      	strb	r2, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     474:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     476:	3989      	subs	r1, #137	; 0x89
     478:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     47a:	3111      	adds	r1, #17
     47c:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     47e:	541a      	strb	r2, [r3, r0]
	                       // <GPIO_PULL_UP"> Pull-up
	                       // <GPIO_PULL_DOWN"> Pull-down
	                       GPIO_PULL_UP);

	gpio_set_pin_function(PB31, PINMUX_PB31C_SERCOM1_PAD1);
}
     480:	bc0c      	pop	{r2, r3}
     482:	4690      	mov	r8, r2
     484:	4699      	mov	r9, r3
     486:	bdf0      	pop	{r4, r5, r6, r7, pc}
     488:	41006000 	.word	0x41006000

0000048c <ADXL345_0_CLOCK_init>:
     48c:	4b06      	ldr	r3, [pc, #24]	; (4a8 <ADXL345_0_CLOCK_init+0x1c>)
     48e:	2140      	movs	r1, #64	; 0x40
     490:	22c4      	movs	r2, #196	; 0xc4
     492:	5099      	str	r1, [r3, r2]
     494:	3101      	adds	r1, #1
     496:	3a08      	subs	r2, #8
     498:	5099      	str	r1, [r3, r2]
}

static inline void hri_mclk_set_APBCMASK_SERCOM1_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM1;
     49a:	4a04      	ldr	r2, [pc, #16]	; (4ac <ADXL345_0_CLOCK_init+0x20>)
     49c:	69d3      	ldr	r3, [r2, #28]
     49e:	393d      	subs	r1, #61	; 0x3d
     4a0:	430b      	orrs	r3, r1
     4a2:	61d3      	str	r3, [r2, #28]
void ADXL345_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM1_GCLK_ID_CORE, CONF_GCLK_SERCOM1_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM1_GCLK_ID_SLOW, CONF_GCLK_SERCOM1_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM1_bit(MCLK);
}
     4a4:	4770      	bx	lr
     4a6:	46c0      	nop			; (mov r8, r8)
     4a8:	40001c00 	.word	0x40001c00
     4ac:	40000800 	.word	0x40000800

000004b0 <ADXL345_0_init>:

void ADXL345_0_init(void)
{
     4b0:	b510      	push	{r4, lr}
	ADXL345_0_CLOCK_init();
     4b2:	4b04      	ldr	r3, [pc, #16]	; (4c4 <ADXL345_0_init+0x14>)
     4b4:	4798      	blx	r3
	i2c_m_sync_init(&ADXL345_0, SERCOM1);
     4b6:	4904      	ldr	r1, [pc, #16]	; (4c8 <ADXL345_0_init+0x18>)
     4b8:	4804      	ldr	r0, [pc, #16]	; (4cc <ADXL345_0_init+0x1c>)
     4ba:	4b05      	ldr	r3, [pc, #20]	; (4d0 <ADXL345_0_init+0x20>)
     4bc:	4798      	blx	r3
	ADXL345_0_PORT_init();
     4be:	4b05      	ldr	r3, [pc, #20]	; (4d4 <ADXL345_0_init+0x24>)
     4c0:	4798      	blx	r3
}
     4c2:	bd10      	pop	{r4, pc}
     4c4:	0000048d 	.word	0x0000048d
     4c8:	42000800 	.word	0x42000800
     4cc:	20000ae8 	.word	0x20000ae8
     4d0:	00000955 	.word	0x00000955
     4d4:	00000409 	.word	0x00000409

000004d8 <SEGMENT_LCD_0_PORT_init>:

void SEGMENT_LCD_0_PORT_init(void)
{
     4d8:	b5f0      	push	{r4, r5, r6, r7, lr}
     4da:	46c6      	mov	lr, r8
     4dc:	b500      	push	{lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4de:	4bd0      	ldr	r3, [pc, #832]	; (820 <SEGMENT_LCD_0_PORT_init+0x348>)
     4e0:	2446      	movs	r4, #70	; 0x46
     4e2:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4e4:	2101      	movs	r1, #1
     4e6:	4388      	bics	r0, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     4e8:	2201      	movs	r2, #1
     4ea:	4310      	orrs	r0, r2
     4ec:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4ee:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     4f0:	2733      	movs	r7, #51	; 0x33
     4f2:	5dd8      	ldrb	r0, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     4f4:	3c37      	subs	r4, #55	; 0x37
     4f6:	46a0      	mov	r8, r4
     4f8:	43a0      	bics	r0, r4
	tmp |= PORT_PMUX_PMUXE(data);
     4fa:	4310      	orrs	r0, r2
     4fc:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     4fe:	55d8      	strb	r0, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     500:	3438      	adds	r4, #56	; 0x38
     502:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     504:	4388      	bics	r0, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     506:	4310      	orrs	r0, r2
     508:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     50a:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     50c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     50e:	3c38      	subs	r4, #56	; 0x38
     510:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     512:	2010      	movs	r0, #16
     514:	4306      	orrs	r6, r0
     516:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     518:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     51a:	2746      	movs	r7, #70	; 0x46
     51c:	37ff      	adds	r7, #255	; 0xff
     51e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     520:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     522:	4316      	orrs	r6, r2
     524:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     526:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     528:	3f13      	subs	r7, #19
     52a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     52c:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     52e:	4306      	orrs	r6, r0
     530:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     532:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     534:	3714      	adds	r7, #20
     536:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     538:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     53a:	4316      	orrs	r6, r2
     53c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     53e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     540:	2734      	movs	r7, #52	; 0x34
     542:	37ff      	adds	r7, #255	; 0xff
     544:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     546:	4645      	mov	r5, r8
     548:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     54a:	4316      	orrs	r6, r2
     54c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     54e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     550:	2648      	movs	r6, #72	; 0x48
     552:	36ff      	adds	r6, #255	; 0xff
     554:	46b4      	mov	ip, r6
     556:	5d9e      	ldrb	r6, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
     558:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     55a:	4316      	orrs	r6, r2
     55c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     55e:	4665      	mov	r5, ip
     560:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     562:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     564:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     566:	4306      	orrs	r6, r0
     568:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     56a:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     56c:	3feb      	subs	r7, #235	; 0xeb
     56e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     570:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     572:	4316      	orrs	r6, r2
     574:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     576:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     578:	3f14      	subs	r7, #20
     57a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     57c:	4645      	mov	r5, r8
     57e:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     580:	4316      	orrs	r6, r2
     582:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     584:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     586:	353a      	adds	r5, #58	; 0x3a
     588:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     58a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     58c:	4316      	orrs	r6, r2
     58e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     590:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     592:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     594:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     596:	4306      	orrs	r6, r0
     598:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     59a:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     59c:	3716      	adds	r7, #22
     59e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5a0:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5a2:	4316      	orrs	r6, r2
     5a4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5a6:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5a8:	3f15      	subs	r7, #21
     5aa:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     5ac:	4645      	mov	r5, r8
     5ae:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     5b0:	4316      	orrs	r6, r2
     5b2:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5b4:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5b6:	353c      	adds	r5, #60	; 0x3c
     5b8:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5ba:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5bc:	4316      	orrs	r6, r2
     5be:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5c0:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5c2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     5c4:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     5c6:	4306      	orrs	r6, r0
     5c8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5ca:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5cc:	3714      	adds	r7, #20
     5ce:	37ff      	adds	r7, #255	; 0xff
     5d0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5d2:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5d4:	4316      	orrs	r6, r2
     5d6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5d8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5da:	3f14      	subs	r7, #20
     5dc:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     5de:	4645      	mov	r5, r8
     5e0:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     5e2:	4316      	orrs	r6, r2
     5e4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5e6:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5e8:	254a      	movs	r5, #74	; 0x4a
     5ea:	35ff      	adds	r5, #255	; 0xff
     5ec:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5ee:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5f0:	4316      	orrs	r6, r2
     5f2:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5f4:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5f6:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     5f8:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     5fa:	4306      	orrs	r6, r0
     5fc:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5fe:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     600:	3716      	adds	r7, #22
     602:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     604:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     606:	4316      	orrs	r6, r2
     608:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     60a:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     60c:	2736      	movs	r7, #54	; 0x36
     60e:	37ff      	adds	r7, #255	; 0xff
     610:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     612:	4645      	mov	r5, r8
     614:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     616:	4316      	orrs	r6, r2
     618:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     61a:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     61c:	254c      	movs	r5, #76	; 0x4c
     61e:	35ff      	adds	r5, #255	; 0xff
     620:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     622:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     624:	4316      	orrs	r6, r2
     626:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     628:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     62a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     62c:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     62e:	4306      	orrs	r6, r0
     630:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     632:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     634:	3717      	adds	r7, #23
     636:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     638:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     63a:	4316      	orrs	r6, r2
     63c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     63e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     640:	3f16      	subs	r7, #22
     642:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     644:	4645      	mov	r5, r8
     646:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     648:	4316      	orrs	r6, r2
     64a:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     64c:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     64e:	254e      	movs	r5, #78	; 0x4e
     650:	35ff      	adds	r5, #255	; 0xff
     652:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     654:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     656:	4316      	orrs	r6, r2
     658:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     65a:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     65c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     65e:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     660:	4306      	orrs	r6, r0
     662:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     664:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     666:	3f6b      	subs	r7, #107	; 0x6b
     668:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     66a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     66c:	4316      	orrs	r6, r2
     66e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     670:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     672:	3f16      	subs	r7, #22
     674:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     676:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     678:	4306      	orrs	r6, r0
     67a:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     67c:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     67e:	3717      	adds	r7, #23
     680:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     682:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     684:	4316      	orrs	r6, r2
     686:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     688:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     68a:	3f16      	subs	r7, #22
     68c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     68e:	4645      	mov	r5, r8
     690:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     692:	4316      	orrs	r6, r2
     694:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     696:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     698:	35be      	adds	r5, #190	; 0xbe
     69a:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     69c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     69e:	4316      	orrs	r6, r2
     6a0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6a2:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6a4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6a6:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     6a8:	4306      	orrs	r6, r0
     6aa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6ac:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6ae:	3718      	adds	r7, #24
     6b0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6b2:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6b4:	4316      	orrs	r6, r2
     6b6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6b8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6ba:	3f17      	subs	r7, #23
     6bc:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     6be:	4645      	mov	r5, r8
     6c0:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     6c2:	4316      	orrs	r6, r2
     6c4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6c6:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6c8:	35c0      	adds	r5, #192	; 0xc0
     6ca:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6cc:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6ce:	4316      	orrs	r6, r2
     6d0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6d2:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6d4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6d6:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     6d8:	4306      	orrs	r6, r0
     6da:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6dc:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6de:	3797      	adds	r7, #151	; 0x97
     6e0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6e2:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6e4:	4316      	orrs	r6, r2
     6e6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6e8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6ea:	2738      	movs	r7, #56	; 0x38
     6ec:	37ff      	adds	r7, #255	; 0xff
     6ee:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     6f0:	4645      	mov	r5, r8
     6f2:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     6f4:	4316      	orrs	r6, r2
     6f6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6f8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6fa:	2550      	movs	r5, #80	; 0x50
     6fc:	35ff      	adds	r5, #255	; 0xff
     6fe:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     700:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     702:	4316      	orrs	r6, r2
     704:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     706:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     708:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     70a:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     70c:	4306      	orrs	r6, r0
     70e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     710:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     712:	3fe9      	subs	r7, #233	; 0xe9
     714:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     716:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     718:	4316      	orrs	r6, r2
     71a:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     71c:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     71e:	3f17      	subs	r7, #23
     720:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     722:	4645      	mov	r5, r8
     724:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     726:	4316      	orrs	r6, r2
     728:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     72a:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     72c:	3540      	adds	r5, #64	; 0x40
     72e:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     730:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     732:	4316      	orrs	r6, r2
     734:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     736:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     738:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     73a:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     73c:	4306      	orrs	r6, r0
     73e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     740:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     742:	371a      	adds	r7, #26
     744:	37ff      	adds	r7, #255	; 0xff
     746:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     748:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     74a:	4316      	orrs	r6, r2
     74c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     74e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     750:	3f18      	subs	r7, #24
     752:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     754:	4645      	mov	r5, r8
     756:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     758:	4316      	orrs	r6, r2
     75a:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     75c:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     75e:	2552      	movs	r5, #82	; 0x52
     760:	35ff      	adds	r5, #255	; 0xff
     762:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     764:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     766:	4316      	orrs	r6, r2
     768:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     76a:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     76c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     76e:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     770:	4306      	orrs	r6, r0
     772:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     774:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     776:	371a      	adds	r7, #26
     778:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     77a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     77c:	4316      	orrs	r6, r2
     77e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     780:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     782:	273a      	movs	r7, #58	; 0x3a
     784:	37ff      	adds	r7, #255	; 0xff
     786:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     788:	4645      	mov	r5, r8
     78a:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     78c:	4316      	orrs	r6, r2
     78e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     790:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     792:	2554      	movs	r5, #84	; 0x54
     794:	35ff      	adds	r5, #255	; 0xff
     796:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     798:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     79a:	4316      	orrs	r6, r2
     79c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     79e:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7a0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     7a2:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     7a4:	4306      	orrs	r6, r0
     7a6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7a8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7aa:	371b      	adds	r7, #27
     7ac:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7ae:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7b0:	4316      	orrs	r6, r2
     7b2:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7b4:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7b6:	269d      	movs	r6, #157	; 0x9d
     7b8:	0076      	lsls	r6, r6, #1
     7ba:	5d9f      	ldrb	r7, [r3, r6]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     7bc:	4645      	mov	r5, r8
     7be:	43af      	bics	r7, r5
     7c0:	003d      	movs	r5, r7
	tmp |= PORT_PMUX_PMUXE(data);
     7c2:	4315      	orrs	r5, r2
     7c4:	b2ed      	uxtb	r5, r5
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7c6:	559d      	strb	r5, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7c8:	2756      	movs	r7, #86	; 0x56
     7ca:	37ff      	adds	r7, #255	; 0xff
     7cc:	5ddd      	ldrb	r5, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7ce:	438d      	bics	r5, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7d0:	432a      	orrs	r2, r5
     7d2:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7d4:	55da      	strb	r2, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7d6:	5d9a      	ldrb	r2, [r3, r6]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     7d8:	4014      	ands	r4, r2
	tmp |= PORT_PMUX_PMUXO(data);
     7da:	4320      	orrs	r0, r4
     7dc:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7de:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7e0:	22d0      	movs	r2, #208	; 0xd0
     7e2:	5c9b      	ldrb	r3, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7e4:	438b      	bics	r3, r1
     7e6:	0019      	movs	r1, r3
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7e8:	2401      	movs	r4, #1
     7ea:	4321      	orrs	r1, r4
     7ec:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7ee:	4b0c      	ldr	r3, [pc, #48]	; (820 <SEGMENT_LCD_0_PORT_init+0x348>)
     7f0:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7f2:	20b8      	movs	r0, #184	; 0xb8
     7f4:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     7f6:	3ac1      	subs	r2, #193	; 0xc1
     7f8:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     7fa:	4321      	orrs	r1, r4
     7fc:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7fe:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     800:	21d1      	movs	r1, #209	; 0xd1
     802:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     804:	2501      	movs	r5, #1
     806:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     808:	4322      	orrs	r2, r4
     80a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     80c:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     80e:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     810:	39c2      	subs	r1, #194	; 0xc2
     812:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     814:	3101      	adds	r1, #1
     816:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     818:	541a      	strb	r2, [r3, r0]
	gpio_set_pin_function(PC21, PINMUX_PC21B_SLCD_LP41);

	gpio_set_pin_function(PB16, PINMUX_PB16B_SLCD_LP42);

	gpio_set_pin_function(PB17, PINMUX_PB17B_SLCD_LP43);
}
     81a:	bc04      	pop	{r2}
     81c:	4690      	mov	r8, r2
     81e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     820:	41006000 	.word	0x41006000

00000824 <SEGMENT_LCD_0_init>:
 * \brief SLCD initialization function
 *
 * Enables SLCD peripheral, clocks and initializes SLCD driver
 */
void SEGMENT_LCD_0_init(void)
{
     824:	b510      	push	{r4, lr}
}

static inline void hri_mclk_set_APBCMASK_SLCD_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SLCD;
     826:	4906      	ldr	r1, [pc, #24]	; (840 <SEGMENT_LCD_0_init+0x1c>)
     828:	69ca      	ldr	r2, [r1, #28]
     82a:	2380      	movs	r3, #128	; 0x80
     82c:	021b      	lsls	r3, r3, #8
     82e:	4313      	orrs	r3, r2
     830:	61cb      	str	r3, [r1, #28]
	hri_mclk_set_APBCMASK_SLCD_bit(SLCD);
	slcd_sync_init(&SEGMENT_LCD_0, SLCD);
     832:	4804      	ldr	r0, [pc, #16]	; (844 <SEGMENT_LCD_0_init+0x20>)
     834:	4b04      	ldr	r3, [pc, #16]	; (848 <SEGMENT_LCD_0_init+0x24>)
     836:	4798      	blx	r3
	SEGMENT_LCD_0_PORT_init();
     838:	4b04      	ldr	r3, [pc, #16]	; (84c <SEGMENT_LCD_0_init+0x28>)
     83a:	4798      	blx	r3
}
     83c:	bd10      	pop	{r4, pc}
     83e:	46c0      	nop			; (mov r8, r8)
     840:	42003c00 	.word	0x42003c00
     844:	20000ad8 	.word	0x20000ad8
     848:	00000a71 	.word	0x00000a71
     84c:	000004d9 	.word	0x000004d9

00000850 <system_init>:
	hri_gclk_write_PCHCTRL_reg(GCLK, PTC_GCLK_ID, CONF_GCLK_PTC_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_PTC_bit(MCLK);
}

void system_init(void)
{
     850:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     852:	4b0f      	ldr	r3, [pc, #60]	; (890 <system_init+0x40>)
     854:	4798      	blx	r3
	((Mclk *)hw)->APBAMASK.reg |= MCLK_APBAMASK_RTC;
     856:	4c0f      	ldr	r4, [pc, #60]	; (894 <system_init+0x44>)
     858:	6962      	ldr	r2, [r4, #20]
     85a:	2380      	movs	r3, #128	; 0x80
     85c:	009b      	lsls	r3, r3, #2
     85e:	4313      	orrs	r3, r2
     860:	6163      	str	r3, [r4, #20]
	timer_init(&Timer, RTC, _rtc_get_timer());
     862:	4b0d      	ldr	r3, [pc, #52]	; (898 <system_init+0x48>)
     864:	4798      	blx	r3
     866:	0002      	movs	r2, r0
     868:	490c      	ldr	r1, [pc, #48]	; (89c <system_init+0x4c>)
     86a:	480d      	ldr	r0, [pc, #52]	; (8a0 <system_init+0x50>)
     86c:	4b0d      	ldr	r3, [pc, #52]	; (8a4 <system_init+0x54>)
     86e:	4798      	blx	r3
	init_mcu();

	Timer_init();

	EDBG_0_init();
     870:	4b0d      	ldr	r3, [pc, #52]	; (8a8 <system_init+0x58>)
     872:	4798      	blx	r3

	ADXL345_0_init();
     874:	4b0d      	ldr	r3, [pc, #52]	; (8ac <system_init+0x5c>)
     876:	4798      	blx	r3
	SEGMENT_LCD_0_init();
     878:	4b0d      	ldr	r3, [pc, #52]	; (8b0 <system_init+0x60>)
     87a:	4798      	blx	r3
     87c:	2141      	movs	r1, #65	; 0x41
     87e:	23ec      	movs	r3, #236	; 0xec
     880:	4a0c      	ldr	r2, [pc, #48]	; (8b4 <system_init+0x64>)
     882:	50d1      	str	r1, [r2, r3]
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_PTC;
     884:	69e2      	ldr	r2, [r4, #28]
     886:	2380      	movs	r3, #128	; 0x80
     888:	01db      	lsls	r3, r3, #7
     88a:	4313      	orrs	r3, r2
     88c:	61e3      	str	r3, [r4, #28]

	PTC_clock_init();
}
     88e:	bd10      	pop	{r4, pc}
     890:	00001071 	.word	0x00001071
     894:	40000800 	.word	0x40000800
     898:	00001263 	.word	0x00001263
     89c:	40002400 	.word	0x40002400
     8a0:	20000abc 	.word	0x20000abc
     8a4:	00000d19 	.word	0x00000d19
     8a8:	000003dd 	.word	0x000003dd
     8ac:	000004b1 	.word	0x000004b1
     8b0:	00000825 	.word	0x00000825
     8b4:	40001c00 	.word	0x40001c00

000008b8 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     8b8:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     8bc:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     8be:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     8c0:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     8c4:	4770      	bx	lr

000008c6 <atomic_leave_critical>:
     8c6:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     8ca:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     8cc:	f383 8810 	msr	PRIMASK, r3
}
     8d0:	4770      	bx	lr
	...

000008d4 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     8d4:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     8d6:	4b04      	ldr	r3, [pc, #16]	; (8e8 <delay_ms+0x14>)
     8d8:	681c      	ldr	r4, [r3, #0]
     8da:	4b04      	ldr	r3, [pc, #16]	; (8ec <delay_ms+0x18>)
     8dc:	4798      	blx	r3
     8de:	0001      	movs	r1, r0
     8e0:	0020      	movs	r0, r4
     8e2:	4b03      	ldr	r3, [pc, #12]	; (8f0 <delay_ms+0x1c>)
     8e4:	4798      	blx	r3
}
     8e6:	bd10      	pop	{r4, pc}
     8e8:	20000a44 	.word	0x20000a44
     8ec:	0000104d 	.word	0x0000104d
     8f0:	00001069 	.word	0x00001069

000008f4 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     8f4:	b510      	push	{r4, lr}
     8f6:	b084      	sub	sp, #16
     8f8:	0014      	movs	r4, r2
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     8fa:	ab01      	add	r3, sp, #4
     8fc:	3814      	subs	r0, #20
     8fe:	8b82      	ldrh	r2, [r0, #28]
     900:	801a      	strh	r2, [r3, #0]
	msg.len    = n;
     902:	9402      	str	r4, [sp, #8]
	msg.flags  = I2C_M_STOP;
     904:	4a05      	ldr	r2, [pc, #20]	; (91c <i2c_m_sync_write+0x28>)
     906:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     908:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     90a:	0019      	movs	r1, r3
     90c:	4b04      	ldr	r3, [pc, #16]	; (920 <i2c_m_sync_write+0x2c>)
     90e:	4798      	blx	r3

	if (ret) {
     910:	2800      	cmp	r0, #0
     912:	d100      	bne.n	916 <i2c_m_sync_write+0x22>
		return ret;
	}

	return n;
     914:	0020      	movs	r0, r4
}
     916:	b004      	add	sp, #16
     918:	bd10      	pop	{r4, pc}
     91a:	46c0      	nop			; (mov r8, r8)
     91c:	ffff8000 	.word	0xffff8000
     920:	00001561 	.word	0x00001561

00000924 <i2c_m_sync_read>:
{
     924:	b510      	push	{r4, lr}
     926:	b084      	sub	sp, #16
     928:	0014      	movs	r4, r2
	msg.addr   = i2c->slave_addr;
     92a:	ab01      	add	r3, sp, #4
     92c:	3814      	subs	r0, #20
     92e:	8b82      	ldrh	r2, [r0, #28]
     930:	801a      	strh	r2, [r3, #0]
	msg.len    = n;
     932:	9402      	str	r4, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     934:	4a05      	ldr	r2, [pc, #20]	; (94c <i2c_m_sync_read+0x28>)
     936:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     938:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     93a:	0019      	movs	r1, r3
     93c:	4b04      	ldr	r3, [pc, #16]	; (950 <i2c_m_sync_read+0x2c>)
     93e:	4798      	blx	r3
	if (ret) {
     940:	2800      	cmp	r0, #0
     942:	d100      	bne.n	946 <i2c_m_sync_read+0x22>
	return n;
     944:	0020      	movs	r0, r4
}
     946:	b004      	add	sp, #16
     948:	bd10      	pop	{r4, pc}
     94a:	46c0      	nop			; (mov r8, r8)
     94c:	ffff8001 	.word	0xffff8001
     950:	00001561 	.word	0x00001561

00000954 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     954:	b570      	push	{r4, r5, r6, lr}
     956:	0004      	movs	r4, r0
     958:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     95a:	1e43      	subs	r3, r0, #1
     95c:	4198      	sbcs	r0, r3
     95e:	b2c0      	uxtb	r0, r0
     960:	225e      	movs	r2, #94	; 0x5e
     962:	4907      	ldr	r1, [pc, #28]	; (980 <i2c_m_sync_init+0x2c>)
     964:	4b07      	ldr	r3, [pc, #28]	; (984 <i2c_m_sync_init+0x30>)
     966:	4798      	blx	r3

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     968:	0029      	movs	r1, r5
     96a:	0020      	movs	r0, r4
     96c:	4b06      	ldr	r3, [pc, #24]	; (988 <i2c_m_sync_init+0x34>)
     96e:	4798      	blx	r3
	if (init_status) {
     970:	2800      	cmp	r0, #0
     972:	d103      	bne.n	97c <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     974:	4b05      	ldr	r3, [pc, #20]	; (98c <i2c_m_sync_init+0x38>)
     976:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     978:	4b05      	ldr	r3, [pc, #20]	; (990 <i2c_m_sync_init+0x3c>)
     97a:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     97c:	bd70      	pop	{r4, r5, r6, pc}
     97e:	46c0      	nop			; (mov r8, r8)
     980:	00009884 	.word	0x00009884
     984:	00000fa1 	.word	0x00000fa1
     988:	000014ad 	.word	0x000014ad
     98c:	00000925 	.word	0x00000925
     990:	000008f5 	.word	0x000008f5

00000994 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     994:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     996:	4b01      	ldr	r3, [pc, #4]	; (99c <i2c_m_sync_enable+0x8>)
     998:	4798      	blx	r3
}
     99a:	bd10      	pop	{r4, pc}
     99c:	000014dd 	.word	0x000014dd

000009a0 <i2c_m_sync_set_slaveaddr>:
/**
 * \brief Sync version of i2c set slave address
 */
int32_t i2c_m_sync_set_slaveaddr(struct i2c_m_sync_desc *i2c, int16_t addr, int32_t addr_len)
{
	return i2c->slave_addr = (addr & 0x3ff) | (addr_len & I2C_M_TEN);
     9a0:	0589      	lsls	r1, r1, #22
     9a2:	0d89      	lsrs	r1, r1, #22
     9a4:	2380      	movs	r3, #128	; 0x80
     9a6:	00db      	lsls	r3, r3, #3
     9a8:	401a      	ands	r2, r3
     9aa:	430a      	orrs	r2, r1
     9ac:	8382      	strh	r2, [r0, #28]
}
     9ae:	0010      	movs	r0, r2
     9b0:	4770      	bx	lr
	...

000009b4 <i2c_m_sync_cmd_read>:

/**
 * \brief Sync version of i2c read command
 */
int32_t i2c_m_sync_cmd_read(struct i2c_m_sync_desc *i2c, uint8_t reg, uint8_t *buffer, uint8_t length)
{
     9b4:	b570      	push	{r4, r5, r6, lr}
     9b6:	b086      	sub	sp, #24
     9b8:	0004      	movs	r4, r0
     9ba:	0016      	movs	r6, r2
     9bc:	001d      	movs	r5, r3
     9be:	466b      	mov	r3, sp
     9c0:	71d9      	strb	r1, [r3, #7]
     9c2:	3307      	adds	r3, #7
	struct _i2c_m_msg msg;
	int32_t           ret;

	msg.addr   = i2c->slave_addr;
     9c4:	a903      	add	r1, sp, #12
     9c6:	8b82      	ldrh	r2, [r0, #28]
     9c8:	800a      	strh	r2, [r1, #0]
	msg.len    = 1;
     9ca:	2201      	movs	r2, #1
     9cc:	604a      	str	r2, [r1, #4]
	msg.flags  = 0;
     9ce:	2200      	movs	r2, #0
     9d0:	804a      	strh	r2, [r1, #2]
	msg.buffer = &reg;
     9d2:	608b      	str	r3, [r1, #8]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     9d4:	4b07      	ldr	r3, [pc, #28]	; (9f4 <i2c_m_sync_cmd_read+0x40>)
     9d6:	4798      	blx	r3

	if (ret != 0) {
     9d8:	2800      	cmp	r0, #0
     9da:	d001      	beq.n	9e0 <i2c_m_sync_cmd_read+0x2c>
		/* error occurred */
		return ret;
	}

	return ERR_NONE;
}
     9dc:	b006      	add	sp, #24
     9de:	bd70      	pop	{r4, r5, r6, pc}
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     9e0:	a903      	add	r1, sp, #12
     9e2:	4b05      	ldr	r3, [pc, #20]	; (9f8 <i2c_m_sync_cmd_read+0x44>)
     9e4:	804b      	strh	r3, [r1, #2]
	msg.buffer = buffer;
     9e6:	608e      	str	r6, [r1, #8]
	msg.len    = length;
     9e8:	604d      	str	r5, [r1, #4]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     9ea:	0020      	movs	r0, r4
     9ec:	4b01      	ldr	r3, [pc, #4]	; (9f4 <i2c_m_sync_cmd_read+0x40>)
     9ee:	4798      	blx	r3
     9f0:	e7f4      	b.n	9dc <i2c_m_sync_cmd_read+0x28>
     9f2:	46c0      	nop			; (mov r8, r8)
     9f4:	00001561 	.word	0x00001561
     9f8:	ffff8001 	.word	0xffff8001

000009fc <i2c_m_sync_transfer>:

/**
 * \brief Sync version of i2c transfer command
 */
int32_t i2c_m_sync_transfer(struct i2c_m_sync_desc *const i2c, struct _i2c_m_msg *msg)
{
     9fc:	b510      	push	{r4, lr}
	return _i2c_m_sync_transfer(&i2c->device, msg);
     9fe:	4b01      	ldr	r3, [pc, #4]	; (a04 <i2c_m_sync_transfer+0x8>)
     a00:	4798      	blx	r3
}
     a02:	bd10      	pop	{r4, pc}
     a04:	00001561 	.word	0x00001561

00000a08 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     a08:	b570      	push	{r4, r5, r6, lr}
     a0a:	0006      	movs	r6, r0
     a0c:	000c      	movs	r4, r1
     a0e:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     a10:	2800      	cmp	r0, #0
     a12:	d00d      	beq.n	a30 <io_write+0x28>
     a14:	0008      	movs	r0, r1
     a16:	1e43      	subs	r3, r0, #1
     a18:	4198      	sbcs	r0, r3
     a1a:	b2c0      	uxtb	r0, r0
     a1c:	2234      	movs	r2, #52	; 0x34
     a1e:	4905      	ldr	r1, [pc, #20]	; (a34 <io_write+0x2c>)
     a20:	4b05      	ldr	r3, [pc, #20]	; (a38 <io_write+0x30>)
     a22:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     a24:	6833      	ldr	r3, [r6, #0]
     a26:	002a      	movs	r2, r5
     a28:	0021      	movs	r1, r4
     a2a:	0030      	movs	r0, r6
     a2c:	4798      	blx	r3
}
     a2e:	bd70      	pop	{r4, r5, r6, pc}
     a30:	2000      	movs	r0, #0
     a32:	e7f3      	b.n	a1c <io_write+0x14>
     a34:	000098a0 	.word	0x000098a0
     a38:	00000fa1 	.word	0x00000fa1

00000a3c <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     a3c:	b570      	push	{r4, r5, r6, lr}
     a3e:	0006      	movs	r6, r0
     a40:	000c      	movs	r4, r1
     a42:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     a44:	2800      	cmp	r0, #0
     a46:	d00d      	beq.n	a64 <io_read+0x28>
     a48:	0008      	movs	r0, r1
     a4a:	1e43      	subs	r3, r0, #1
     a4c:	4198      	sbcs	r0, r3
     a4e:	b2c0      	uxtb	r0, r0
     a50:	223d      	movs	r2, #61	; 0x3d
     a52:	4905      	ldr	r1, [pc, #20]	; (a68 <io_read+0x2c>)
     a54:	4b05      	ldr	r3, [pc, #20]	; (a6c <io_read+0x30>)
     a56:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     a58:	6873      	ldr	r3, [r6, #4]
     a5a:	002a      	movs	r2, r5
     a5c:	0021      	movs	r1, r4
     a5e:	0030      	movs	r0, r6
     a60:	4798      	blx	r3
}
     a62:	bd70      	pop	{r4, r5, r6, pc}
     a64:	2000      	movs	r0, #0
     a66:	e7f3      	b.n	a50 <io_read+0x14>
     a68:	000098a0 	.word	0x000098a0
     a6c:	00000fa1 	.word	0x00000fa1

00000a70 <slcd_sync_init>:

/**
 * \brief              Initialize SLCD Descriptor
 */
int32_t slcd_sync_init(struct slcd_sync_descriptor *const descr, void *const hw)
{
     a70:	b570      	push	{r4, r5, r6, lr}
     a72:	0004      	movs	r4, r0
     a74:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     a76:	2800      	cmp	r0, #0
     a78:	d00c      	beq.n	a94 <slcd_sync_init+0x24>
     a7a:	0008      	movs	r0, r1
     a7c:	1e43      	subs	r3, r0, #1
     a7e:	4198      	sbcs	r0, r3
     a80:	b2c0      	uxtb	r0, r0
     a82:	222b      	movs	r2, #43	; 0x2b
     a84:	4904      	ldr	r1, [pc, #16]	; (a98 <slcd_sync_init+0x28>)
     a86:	4b05      	ldr	r3, [pc, #20]	; (a9c <slcd_sync_init+0x2c>)
     a88:	4798      	blx	r3
	return _slcd_sync_init(&descr->dev, hw);
     a8a:	0029      	movs	r1, r5
     a8c:	0020      	movs	r0, r4
     a8e:	4b04      	ldr	r3, [pc, #16]	; (aa0 <slcd_sync_init+0x30>)
     a90:	4798      	blx	r3
}
     a92:	bd70      	pop	{r4, r5, r6, pc}
     a94:	2000      	movs	r0, #0
     a96:	e7f4      	b.n	a82 <slcd_sync_init+0x12>
     a98:	000098b4 	.word	0x000098b4
     a9c:	00000fa1 	.word	0x00000fa1
     aa0:	00001b0d 	.word	0x00001b0d

00000aa4 <slcd_sync_enable>:
/**
 * \brief              Enable SLCD driver
 *
 */
int32_t slcd_sync_enable(struct slcd_sync_descriptor *const descr)
{
     aa4:	b510      	push	{r4, lr}
     aa6:	0004      	movs	r4, r0
	ASSERT(descr);
     aa8:	1e43      	subs	r3, r0, #1
     aaa:	4198      	sbcs	r0, r3
     aac:	b2c0      	uxtb	r0, r0
     aae:	223e      	movs	r2, #62	; 0x3e
     ab0:	4903      	ldr	r1, [pc, #12]	; (ac0 <slcd_sync_enable+0x1c>)
     ab2:	4b04      	ldr	r3, [pc, #16]	; (ac4 <slcd_sync_enable+0x20>)
     ab4:	4798      	blx	r3
	return _slcd_sync_enable(&descr->dev);
     ab6:	0020      	movs	r0, r4
     ab8:	4b03      	ldr	r3, [pc, #12]	; (ac8 <slcd_sync_enable+0x24>)
     aba:	4798      	blx	r3
}
     abc:	bd10      	pop	{r4, pc}
     abe:	46c0      	nop			; (mov r8, r8)
     ac0:	000098b4 	.word	0x000098b4
     ac4:	00000fa1 	.word	0x00000fa1
     ac8:	00001bb1 	.word	0x00001bb1

00000acc <slcd_sync_seg_on>:
}
/**
 * \brief              Turn on a Segment
 */
int32_t slcd_sync_seg_on(struct slcd_sync_descriptor *const descr, uint32_t seg)
{
     acc:	b570      	push	{r4, r5, r6, lr}
     ace:	0004      	movs	r4, r0
     ad0:	000d      	movs	r5, r1
	ASSERT(descr);
     ad2:	1e43      	subs	r3, r0, #1
     ad4:	4198      	sbcs	r0, r3
     ad6:	b2c0      	uxtb	r0, r0
     ad8:	224f      	movs	r2, #79	; 0x4f
     ada:	4904      	ldr	r1, [pc, #16]	; (aec <slcd_sync_seg_on+0x20>)
     adc:	4b04      	ldr	r3, [pc, #16]	; (af0 <slcd_sync_seg_on+0x24>)
     ade:	4798      	blx	r3
	return _slcd_sync_seg_on(&descr->dev, seg);
     ae0:	0029      	movs	r1, r5
     ae2:	0020      	movs	r0, r4
     ae4:	4b03      	ldr	r3, [pc, #12]	; (af4 <slcd_sync_seg_on+0x28>)
     ae6:	4798      	blx	r3
}
     ae8:	bd70      	pop	{r4, r5, r6, pc}
     aea:	46c0      	nop			; (mov r8, r8)
     aec:	000098b4 	.word	0x000098b4
     af0:	00000fa1 	.word	0x00000fa1
     af4:	00001bc9 	.word	0x00001bc9

00000af8 <slcd_sync_seg_blink>:
}
/**
 * \brief              Blink a Segment
 */
int32_t slcd_sync_seg_blink(struct slcd_sync_descriptor *const descr, uint32_t seg, const uint32_t period)
{
     af8:	b570      	push	{r4, r5, r6, lr}
     afa:	0004      	movs	r4, r0
     afc:	000e      	movs	r6, r1
     afe:	0015      	movs	r5, r2
	ASSERT(descr && period);
     b00:	2800      	cmp	r0, #0
     b02:	d00d      	beq.n	b20 <slcd_sync_seg_blink+0x28>
     b04:	0010      	movs	r0, r2
     b06:	1e43      	subs	r3, r0, #1
     b08:	4198      	sbcs	r0, r3
     b0a:	b2c0      	uxtb	r0, r0
     b0c:	225f      	movs	r2, #95	; 0x5f
     b0e:	4905      	ldr	r1, [pc, #20]	; (b24 <slcd_sync_seg_blink+0x2c>)
     b10:	4b05      	ldr	r3, [pc, #20]	; (b28 <slcd_sync_seg_blink+0x30>)
     b12:	4798      	blx	r3
	return _slcd_sync_seg_blink(&descr->dev, seg, period);
     b14:	002a      	movs	r2, r5
     b16:	0031      	movs	r1, r6
     b18:	0020      	movs	r0, r4
     b1a:	4b04      	ldr	r3, [pc, #16]	; (b2c <slcd_sync_seg_blink+0x34>)
     b1c:	4798      	blx	r3
}
     b1e:	bd70      	pop	{r4, r5, r6, pc}
     b20:	2000      	movs	r0, #0
     b22:	e7f3      	b.n	b0c <slcd_sync_seg_blink+0x14>
     b24:	000098b4 	.word	0x000098b4
     b28:	00000fa1 	.word	0x00000fa1
     b2c:	00001be1 	.word	0x00001be1

00000b30 <slcd_sync_write_char>:

/**
 * \brief              Displays a character
 */
int32_t slcd_sync_write_char(struct slcd_sync_descriptor *const descr, const uint8_t character, uint32_t index)
{
     b30:	b570      	push	{r4, r5, r6, lr}
     b32:	0004      	movs	r4, r0
     b34:	000d      	movs	r5, r1
     b36:	0016      	movs	r6, r2
	ASSERT(descr);
     b38:	1e43      	subs	r3, r0, #1
     b3a:	4198      	sbcs	r0, r3
     b3c:	b2c0      	uxtb	r0, r0
     b3e:	2268      	movs	r2, #104	; 0x68
     b40:	4904      	ldr	r1, [pc, #16]	; (b54 <slcd_sync_write_char+0x24>)
     b42:	4b05      	ldr	r3, [pc, #20]	; (b58 <slcd_sync_write_char+0x28>)
     b44:	4798      	blx	r3
	return _slcd_sync_write_char(&descr->dev, character, index);
     b46:	0032      	movs	r2, r6
     b48:	0029      	movs	r1, r5
     b4a:	0020      	movs	r0, r4
     b4c:	4b03      	ldr	r3, [pc, #12]	; (b5c <slcd_sync_write_char+0x2c>)
     b4e:	4798      	blx	r3
}
     b50:	bd70      	pop	{r4, r5, r6, pc}
     b52:	46c0      	nop			; (mov r8, r8)
     b54:	000098b4 	.word	0x000098b4
     b58:	00000fa1 	.word	0x00000fa1
     b5c:	00001d21 	.word	0x00001d21

00000b60 <slcd_sync_write_string>:
/**
 * \brief              Displays character string string
 */
int32_t slcd_sync_write_string(struct slcd_sync_descriptor *const descr, uint8_t *const str, uint32_t len,
                               uint32_t index)
{
     b60:	b5f0      	push	{r4, r5, r6, r7, lr}
     b62:	46ce      	mov	lr, r9
     b64:	b500      	push	{lr}
     b66:	b082      	sub	sp, #8
     b68:	9001      	str	r0, [sp, #4]
     b6a:	000f      	movs	r7, r1
     b6c:	0016      	movs	r6, r2
     b6e:	001d      	movs	r5, r3
	uint32_t i;
	ASSERT(descr && len);
     b70:	2800      	cmp	r0, #0
     b72:	d008      	beq.n	b86 <slcd_sync_write_string+0x26>
     b74:	2a00      	cmp	r2, #0
     b76:	d115      	bne.n	ba4 <slcd_sync_write_string+0x44>
     b78:	2273      	movs	r2, #115	; 0x73
     b7a:	4913      	ldr	r1, [pc, #76]	; (bc8 <slcd_sync_write_string+0x68>)
     b7c:	2000      	movs	r0, #0
     b7e:	4b13      	ldr	r3, [pc, #76]	; (bcc <slcd_sync_write_string+0x6c>)
     b80:	4798      	blx	r3
	for (i = 0; i < len; i++) {
		if (_slcd_sync_write_char(&descr->dev, *(str + i), index + i) != ERR_NONE) {
			return ERR_INVALID_ARG;
		}
	}
	return ERR_NONE;
     b82:	2000      	movs	r0, #0
     b84:	e00a      	b.n	b9c <slcd_sync_write_string+0x3c>
	ASSERT(descr && len);
     b86:	2273      	movs	r2, #115	; 0x73
     b88:	490f      	ldr	r1, [pc, #60]	; (bc8 <slcd_sync_write_string+0x68>)
     b8a:	2000      	movs	r0, #0
     b8c:	4b0f      	ldr	r3, [pc, #60]	; (bcc <slcd_sync_write_string+0x6c>)
     b8e:	4798      	blx	r3
	return ERR_NONE;
     b90:	2000      	movs	r0, #0
	for (i = 0; i < len; i++) {
     b92:	2e00      	cmp	r6, #0
     b94:	d10b      	bne.n	bae <slcd_sync_write_string+0x4e>
     b96:	e001      	b.n	b9c <slcd_sync_write_string+0x3c>
			return ERR_INVALID_ARG;
     b98:	200d      	movs	r0, #13
     b9a:	4240      	negs	r0, r0
}
     b9c:	b002      	add	sp, #8
     b9e:	bc04      	pop	{r2}
     ba0:	4691      	mov	r9, r2
     ba2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	ASSERT(descr && len);
     ba4:	2273      	movs	r2, #115	; 0x73
     ba6:	4908      	ldr	r1, [pc, #32]	; (bc8 <slcd_sync_write_string+0x68>)
     ba8:	2001      	movs	r0, #1
     baa:	4b08      	ldr	r3, [pc, #32]	; (bcc <slcd_sync_write_string+0x6c>)
     bac:	4798      	blx	r3
{
     bae:	2400      	movs	r4, #0
		if (_slcd_sync_write_char(&descr->dev, *(str + i), index + i) != ERR_NONE) {
     bb0:	4b07      	ldr	r3, [pc, #28]	; (bd0 <slcd_sync_write_string+0x70>)
     bb2:	4699      	mov	r9, r3
     bb4:	192a      	adds	r2, r5, r4
     bb6:	5d39      	ldrb	r1, [r7, r4]
     bb8:	9801      	ldr	r0, [sp, #4]
     bba:	47c8      	blx	r9
     bbc:	2800      	cmp	r0, #0
     bbe:	d1eb      	bne.n	b98 <slcd_sync_write_string+0x38>
	for (i = 0; i < len; i++) {
     bc0:	3401      	adds	r4, #1
     bc2:	42a6      	cmp	r6, r4
     bc4:	d8f6      	bhi.n	bb4 <slcd_sync_write_string+0x54>
     bc6:	e7e9      	b.n	b9c <slcd_sync_write_string+0x3c>
     bc8:	000098b4 	.word	0x000098b4
     bcc:	00000fa1 	.word	0x00000fa1
     bd0:	00001d21 	.word	0x00001d21

00000bd4 <slcd_sync_start_animation>:
/**
 * \brief               Start animation play by a segment array
 */
int32_t slcd_sync_start_animation(struct slcd_sync_descriptor *const descr, const uint32_t segs[], uint32_t len,
                                  const uint32_t period)
{
     bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     bd6:	0004      	movs	r4, r0
     bd8:	000d      	movs	r5, r1
     bda:	0016      	movs	r6, r2
     bdc:	001f      	movs	r7, r3
	ASSERT(descr && segs && len && period);
     bde:	2800      	cmp	r0, #0
     be0:	d012      	beq.n	c08 <slcd_sync_start_animation+0x34>
     be2:	2900      	cmp	r1, #0
     be4:	d012      	beq.n	c0c <slcd_sync_start_animation+0x38>
     be6:	2000      	movs	r0, #0
     be8:	2a00      	cmp	r2, #0
     bea:	d002      	beq.n	bf2 <slcd_sync_start_animation+0x1e>
     bec:	0018      	movs	r0, r3
     bee:	1e43      	subs	r3, r0, #1
     bf0:	4198      	sbcs	r0, r3
     bf2:	2282      	movs	r2, #130	; 0x82
     bf4:	4906      	ldr	r1, [pc, #24]	; (c10 <slcd_sync_start_animation+0x3c>)
     bf6:	4b07      	ldr	r3, [pc, #28]	; (c14 <slcd_sync_start_animation+0x40>)
     bf8:	4798      	blx	r3
	return _slcd_sync_start_animation(&descr->dev, segs, len, period);
     bfa:	003b      	movs	r3, r7
     bfc:	0032      	movs	r2, r6
     bfe:	0029      	movs	r1, r5
     c00:	0020      	movs	r0, r4
     c02:	4c05      	ldr	r4, [pc, #20]	; (c18 <slcd_sync_start_animation+0x44>)
     c04:	47a0      	blx	r4
}
     c06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && segs && len && period);
     c08:	2000      	movs	r0, #0
     c0a:	e7f2      	b.n	bf2 <slcd_sync_start_animation+0x1e>
     c0c:	2000      	movs	r0, #0
     c0e:	e7f0      	b.n	bf2 <slcd_sync_start_animation+0x1e>
     c10:	000098b4 	.word	0x000098b4
     c14:	00000fa1 	.word	0x00000fa1
     c18:	00001ea5 	.word	0x00001ea5

00000c1c <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
     c1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c1e:	46ce      	mov	lr, r9
     c20:	4647      	mov	r7, r8
     c22:	b580      	push	{r7, lr}
     c24:	4681      	mov	r9, r0
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
     c26:	6803      	ldr	r3, [r0, #0]
     c28:	469c      	mov	ip, r3
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
     c2a:	2b00      	cmp	r3, #0
     c2c:	d005      	beq.n	c3a <timer_add_timer_task+0x1e>
		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
		}
		if (time_left >= new_task->interval)
     c2e:	688e      	ldr	r6, [r1, #8]
     c30:	001c      	movs	r4, r3
     c32:	2500      	movs	r5, #0
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     c34:	2701      	movs	r7, #1
     c36:	1abf      	subs	r7, r7, r2
     c38:	e00d      	b.n	c56 <timer_add_timer_task+0x3a>
		list_insert_as_head(list, new_task);
     c3a:	4b12      	ldr	r3, [pc, #72]	; (c84 <timer_add_timer_task+0x68>)
     c3c:	4798      	blx	r3
		return;
     c3e:	e018      	b.n	c72 <timer_add_timer_task+0x56>
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     c40:	18fb      	adds	r3, r7, r3
     c42:	68a0      	ldr	r0, [r4, #8]
     c44:	4680      	mov	r8, r0
     c46:	4443      	add	r3, r8
		if (time_left >= new_task->interval)
     c48:	42b3      	cmp	r3, r6
     c4a:	d20c      	bcs.n	c66 <timer_add_timer_task+0x4a>
 * \return A pointer to the next list element or NULL if there is not next
 * element
 */
static inline void *list_get_next_element(const void *const element)
{
	return element ? ((struct list_element *)element)->next : NULL;
     c4c:	6823      	ldr	r3, [r4, #0]
     c4e:	0025      	movs	r5, r4
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
     c50:	2b00      	cmp	r3, #0
     c52:	d00b      	beq.n	c6c <timer_add_timer_task+0x50>
     c54:	001c      	movs	r4, r3
		if (it->time_label <= time) {
     c56:	6863      	ldr	r3, [r4, #4]
     c58:	4293      	cmp	r3, r2
     c5a:	d8f1      	bhi.n	c40 <timer_add_timer_task+0x24>
			time_left = it->interval - (time - it->time_label);
     c5c:	68a0      	ldr	r0, [r4, #8]
     c5e:	4680      	mov	r8, r0
     c60:	4443      	add	r3, r8
     c62:	1a9b      	subs	r3, r3, r2
     c64:	e7f0      	b.n	c48 <timer_add_timer_task+0x2c>
			break;
		prev = it;
	}

	if (it == head) {
     c66:	45a4      	cmp	ip, r4
     c68:	d007      	beq.n	c7a <timer_add_timer_task+0x5e>
     c6a:	002c      	movs	r4, r5
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
     c6c:	0020      	movs	r0, r4
     c6e:	4b06      	ldr	r3, [pc, #24]	; (c88 <timer_add_timer_task+0x6c>)
     c70:	4798      	blx	r3
	}
}
     c72:	bc0c      	pop	{r2, r3}
     c74:	4690      	mov	r8, r2
     c76:	4699      	mov	r9, r3
     c78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
     c7a:	4648      	mov	r0, r9
     c7c:	4b01      	ldr	r3, [pc, #4]	; (c84 <timer_add_timer_task+0x68>)
     c7e:	4798      	blx	r3
     c80:	e7f7      	b.n	c72 <timer_add_timer_task+0x56>
     c82:	46c0      	nop			; (mov r8, r8)
     c84:	00000fcd 	.word	0x00000fcd
     c88:	00000ff9 	.word	0x00000ff9

00000c8c <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
     c8c:	b5f0      	push	{r4, r5, r6, r7, lr}
     c8e:	46c6      	mov	lr, r8
     c90:	b500      	push	{lr}
     c92:	b082      	sub	sp, #8
     c94:	0007      	movs	r7, r0
	return (void *)list->head;
     c96:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
     c98:	6903      	ldr	r3, [r0, #16]
     c9a:	3301      	adds	r3, #1
     c9c:	4698      	mov	r8, r3
     c9e:	6103      	str	r3, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
     ca0:	7e03      	ldrb	r3, [r0, #24]
     ca2:	07db      	lsls	r3, r3, #31
     ca4:	d411      	bmi.n	cca <timer_process_counted+0x3e>
     ca6:	7e03      	ldrb	r3, [r0, #24]
     ca8:	079b      	lsls	r3, r3, #30
     caa:	d40e      	bmi.n	cca <timer_process_counted+0x3e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
		return;
	}

	while (it && ((time - it->time_label) >= it->interval)) {
     cac:	2c00      	cmp	r4, #0
     cae:	d010      	beq.n	cd2 <timer_process_counted+0x46>
     cb0:	4643      	mov	r3, r8
     cb2:	6862      	ldr	r2, [r4, #4]
     cb4:	1a9b      	subs	r3, r3, r2
     cb6:	68a2      	ldr	r2, [r4, #8]
     cb8:	4293      	cmp	r3, r2
     cba:	d30a      	bcc.n	cd2 <timer_process_counted+0x46>
		struct timer_task *tmp = it;

		list_remove_head(&timer->tasks);
     cbc:	2314      	movs	r3, #20
     cbe:	469c      	mov	ip, r3
     cc0:	4484      	add	ip, r0
     cc2:	4663      	mov	r3, ip
     cc4:	9301      	str	r3, [sp, #4]
     cc6:	4e12      	ldr	r6, [pc, #72]	; (d10 <timer_process_counted+0x84>)
     cc8:	e014      	b.n	cf4 <timer_process_counted+0x68>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
     cca:	7e3b      	ldrb	r3, [r7, #24]
     ccc:	2202      	movs	r2, #2
     cce:	4313      	orrs	r3, r2
     cd0:	763b      	strb	r3, [r7, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
     cd2:	b002      	add	sp, #8
     cd4:	bc04      	pop	{r2}
     cd6:	4690      	mov	r8, r2
     cd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     cda:	697d      	ldr	r5, [r7, #20]
		tmp->cb(tmp);
     cdc:	68e3      	ldr	r3, [r4, #12]
     cde:	0020      	movs	r0, r4
     ce0:	4798      	blx	r3
	while (it && ((time - it->time_label) >= it->interval)) {
     ce2:	2d00      	cmp	r5, #0
     ce4:	d0f5      	beq.n	cd2 <timer_process_counted+0x46>
		it = (struct timer_task *)list_get_head(&timer->tasks);
     ce6:	002c      	movs	r4, r5
	while (it && ((time - it->time_label) >= it->interval)) {
     ce8:	4643      	mov	r3, r8
     cea:	686a      	ldr	r2, [r5, #4]
     cec:	1a9b      	subs	r3, r3, r2
     cee:	68aa      	ldr	r2, [r5, #8]
     cf0:	4293      	cmp	r3, r2
     cf2:	d3ee      	bcc.n	cd2 <timer_process_counted+0x46>
		list_remove_head(&timer->tasks);
     cf4:	9801      	ldr	r0, [sp, #4]
     cf6:	47b0      	blx	r6
		if (TIMER_TASK_REPEAT == tmp->mode) {
     cf8:	7c23      	ldrb	r3, [r4, #16]
     cfa:	2b01      	cmp	r3, #1
     cfc:	d1ed      	bne.n	cda <timer_process_counted+0x4e>
			tmp->time_label = time;
     cfe:	4643      	mov	r3, r8
     d00:	6063      	str	r3, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
     d02:	4642      	mov	r2, r8
     d04:	0021      	movs	r1, r4
     d06:	9801      	ldr	r0, [sp, #4]
     d08:	4b02      	ldr	r3, [pc, #8]	; (d14 <timer_process_counted+0x88>)
     d0a:	4798      	blx	r3
     d0c:	e7e5      	b.n	cda <timer_process_counted+0x4e>
     d0e:	46c0      	nop			; (mov r8, r8)
     d10:	00001001 	.word	0x00001001
     d14:	00000c1d 	.word	0x00000c1d

00000d18 <timer_init>:
{
     d18:	b570      	push	{r4, r5, r6, lr}
     d1a:	0005      	movs	r5, r0
     d1c:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     d1e:	2800      	cmp	r0, #0
     d20:	d011      	beq.n	d46 <timer_init+0x2e>
     d22:	0008      	movs	r0, r1
     d24:	1e43      	subs	r3, r0, #1
     d26:	4198      	sbcs	r0, r3
     d28:	b2c0      	uxtb	r0, r0
     d2a:	223b      	movs	r2, #59	; 0x3b
     d2c:	4907      	ldr	r1, [pc, #28]	; (d4c <timer_init+0x34>)
     d2e:	4b08      	ldr	r3, [pc, #32]	; (d50 <timer_init+0x38>)
     d30:	4798      	blx	r3
	_timer_init(&descr->device, hw);
     d32:	0021      	movs	r1, r4
     d34:	0028      	movs	r0, r5
     d36:	4b07      	ldr	r3, [pc, #28]	; (d54 <timer_init+0x3c>)
     d38:	4798      	blx	r3
	descr->time                           = 0;
     d3a:	2300      	movs	r3, #0
     d3c:	612b      	str	r3, [r5, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
     d3e:	4b06      	ldr	r3, [pc, #24]	; (d58 <timer_init+0x40>)
     d40:	602b      	str	r3, [r5, #0]
}
     d42:	2000      	movs	r0, #0
     d44:	bd70      	pop	{r4, r5, r6, pc}
     d46:	2000      	movs	r0, #0
     d48:	e7ef      	b.n	d2a <timer_init+0x12>
     d4a:	46c0      	nop			; (mov r8, r8)
     d4c:	000098d0 	.word	0x000098d0
     d50:	00000fa1 	.word	0x00000fa1
     d54:	00001181 	.word	0x00001181
     d58:	00000c8d 	.word	0x00000c8d

00000d5c <timer_start>:
{
     d5c:	b510      	push	{r4, lr}
     d5e:	0004      	movs	r4, r0
	ASSERT(descr);
     d60:	1e43      	subs	r3, r0, #1
     d62:	4198      	sbcs	r0, r3
     d64:	b2c0      	uxtb	r0, r0
     d66:	2253      	movs	r2, #83	; 0x53
     d68:	4907      	ldr	r1, [pc, #28]	; (d88 <timer_start+0x2c>)
     d6a:	4b08      	ldr	r3, [pc, #32]	; (d8c <timer_start+0x30>)
     d6c:	4798      	blx	r3
	if (_timer_is_started(&descr->device)) {
     d6e:	0020      	movs	r0, r4
     d70:	4b07      	ldr	r3, [pc, #28]	; (d90 <timer_start+0x34>)
     d72:	4798      	blx	r3
     d74:	2800      	cmp	r0, #0
     d76:	d104      	bne.n	d82 <timer_start+0x26>
	_timer_start(&descr->device);
     d78:	0020      	movs	r0, r4
     d7a:	4b06      	ldr	r3, [pc, #24]	; (d94 <timer_start+0x38>)
     d7c:	4798      	blx	r3
	return ERR_NONE;
     d7e:	2000      	movs	r0, #0
}
     d80:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     d82:	2011      	movs	r0, #17
     d84:	4240      	negs	r0, r0
     d86:	e7fb      	b.n	d80 <timer_start+0x24>
     d88:	000098d0 	.word	0x000098d0
     d8c:	00000fa1 	.word	0x00000fa1
     d90:	00001249 	.word	0x00001249
     d94:	000011ed 	.word	0x000011ed

00000d98 <timer_add_task>:
{
     d98:	b570      	push	{r4, r5, r6, lr}
     d9a:	b082      	sub	sp, #8
     d9c:	0004      	movs	r4, r0
     d9e:	000d      	movs	r5, r1
	ASSERT(descr && task);
     da0:	2800      	cmp	r0, #0
     da2:	d024      	beq.n	dee <timer_add_task+0x56>
     da4:	0008      	movs	r0, r1
     da6:	1e43      	subs	r3, r0, #1
     da8:	4198      	sbcs	r0, r3
     daa:	b2c0      	uxtb	r0, r0
     dac:	227a      	movs	r2, #122	; 0x7a
     dae:	491e      	ldr	r1, [pc, #120]	; (e28 <timer_add_task+0x90>)
     db0:	4b1e      	ldr	r3, [pc, #120]	; (e2c <timer_add_task+0x94>)
     db2:	4798      	blx	r3
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     db4:	7e23      	ldrb	r3, [r4, #24]
     db6:	2201      	movs	r2, #1
     db8:	4313      	orrs	r3, r2
     dba:	7623      	strb	r3, [r4, #24]
	if (is_list_element(&descr->tasks, task)) {
     dbc:	0026      	movs	r6, r4
     dbe:	3614      	adds	r6, #20
     dc0:	0029      	movs	r1, r5
     dc2:	0030      	movs	r0, r6
     dc4:	4b1a      	ldr	r3, [pc, #104]	; (e30 <timer_add_task+0x98>)
     dc6:	4798      	blx	r3
     dc8:	2800      	cmp	r0, #0
     dca:	d112      	bne.n	df2 <timer_add_task+0x5a>
	task->time_label = descr->time;
     dcc:	6923      	ldr	r3, [r4, #16]
     dce:	606b      	str	r3, [r5, #4]
	timer_add_timer_task(&descr->tasks, task, descr->time);
     dd0:	6922      	ldr	r2, [r4, #16]
     dd2:	0029      	movs	r1, r5
     dd4:	0030      	movs	r0, r6
     dd6:	4b17      	ldr	r3, [pc, #92]	; (e34 <timer_add_task+0x9c>)
     dd8:	4798      	blx	r3
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     dda:	7e23      	ldrb	r3, [r4, #24]
     ddc:	2201      	movs	r2, #1
     dde:	4393      	bics	r3, r2
     de0:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     de2:	7e23      	ldrb	r3, [r4, #24]
	return ERR_NONE;
     de4:	2000      	movs	r0, #0
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     de6:	079b      	lsls	r3, r3, #30
     de8:	d40f      	bmi.n	e0a <timer_add_task+0x72>
}
     dea:	b002      	add	sp, #8
     dec:	bd70      	pop	{r4, r5, r6, pc}
     dee:	2000      	movs	r0, #0
     df0:	e7dc      	b.n	dac <timer_add_task+0x14>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     df2:	7e23      	ldrb	r3, [r4, #24]
     df4:	2201      	movs	r2, #1
     df6:	4393      	bics	r3, r2
     df8:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     dfa:	327e      	adds	r2, #126	; 0x7e
     dfc:	490a      	ldr	r1, [pc, #40]	; (e28 <timer_add_task+0x90>)
     dfe:	2000      	movs	r0, #0
     e00:	4b0a      	ldr	r3, [pc, #40]	; (e2c <timer_add_task+0x94>)
     e02:	4798      	blx	r3
		return ERR_ALREADY_INITIALIZED;
     e04:	2012      	movs	r0, #18
     e06:	4240      	negs	r0, r0
     e08:	e7ef      	b.n	dea <timer_add_task+0x52>
		CRITICAL_SECTION_ENTER()
     e0a:	a801      	add	r0, sp, #4
     e0c:	4b0a      	ldr	r3, [pc, #40]	; (e38 <timer_add_task+0xa0>)
     e0e:	4798      	blx	r3
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     e10:	7e23      	ldrb	r3, [r4, #24]
     e12:	2202      	movs	r2, #2
     e14:	4393      	bics	r3, r2
     e16:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     e18:	0020      	movs	r0, r4
     e1a:	4b08      	ldr	r3, [pc, #32]	; (e3c <timer_add_task+0xa4>)
     e1c:	4798      	blx	r3
		CRITICAL_SECTION_LEAVE()
     e1e:	a801      	add	r0, sp, #4
     e20:	4b07      	ldr	r3, [pc, #28]	; (e40 <timer_add_task+0xa8>)
     e22:	4798      	blx	r3
	return ERR_NONE;
     e24:	2000      	movs	r0, #0
     e26:	e7e0      	b.n	dea <timer_add_task+0x52>
     e28:	000098d0 	.word	0x000098d0
     e2c:	00000fa1 	.word	0x00000fa1
     e30:	00000fa9 	.word	0x00000fa9
     e34:	00000c1d 	.word	0x00000c1d
     e38:	000008b9 	.word	0x000008b9
     e3c:	00001261 	.word	0x00001261
     e40:	000008c7 	.word	0x000008c7

00000e44 <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     e44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     e46:	46ce      	mov	lr, r9
     e48:	4647      	mov	r7, r8
     e4a:	b580      	push	{r7, lr}
     e4c:	0004      	movs	r4, r0
     e4e:	000f      	movs	r7, r1
     e50:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     e52:	2800      	cmp	r0, #0
     e54:	d026      	beq.n	ea4 <usart_sync_write+0x60>
     e56:	2900      	cmp	r1, #0
     e58:	d026      	beq.n	ea8 <usart_sync_write+0x64>
     e5a:	0010      	movs	r0, r2
     e5c:	1e43      	subs	r3, r0, #1
     e5e:	4198      	sbcs	r0, r3
     e60:	22f1      	movs	r2, #241	; 0xf1
     e62:	4912      	ldr	r1, [pc, #72]	; (eac <usart_sync_write+0x68>)
     e64:	4b12      	ldr	r3, [pc, #72]	; (eb0 <usart_sync_write+0x6c>)
     e66:	4798      	blx	r3
	while (!_usart_sync_is_ready_to_send(&descr->device))
     e68:	3408      	adds	r4, #8
     e6a:	4d12      	ldr	r5, [pc, #72]	; (eb4 <usart_sync_write+0x70>)
     e6c:	0020      	movs	r0, r4
     e6e:	47a8      	blx	r5
     e70:	2800      	cmp	r0, #0
     e72:	d0fb      	beq.n	e6c <usart_sync_write+0x28>
     e74:	2600      	movs	r6, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
     e76:	4b10      	ldr	r3, [pc, #64]	; (eb8 <usart_sync_write+0x74>)
     e78:	4699      	mov	r9, r3
		while (!_usart_sync_is_ready_to_send(&descr->device))
     e7a:	4d0e      	ldr	r5, [pc, #56]	; (eb4 <usart_sync_write+0x70>)
		_usart_sync_write_byte(&descr->device, buf[offset]);
     e7c:	5db9      	ldrb	r1, [r7, r6]
     e7e:	0020      	movs	r0, r4
     e80:	47c8      	blx	r9
		while (!_usart_sync_is_ready_to_send(&descr->device))
     e82:	0020      	movs	r0, r4
     e84:	47a8      	blx	r5
     e86:	2800      	cmp	r0, #0
     e88:	d0fb      	beq.n	e82 <usart_sync_write+0x3e>
			;
	} while (++offset < length);
     e8a:	3601      	adds	r6, #1
     e8c:	4546      	cmp	r6, r8
     e8e:	d3f5      	bcc.n	e7c <usart_sync_write+0x38>
	while (!_usart_sync_is_transmit_done(&descr->device))
     e90:	4d0a      	ldr	r5, [pc, #40]	; (ebc <usart_sync_write+0x78>)
     e92:	0020      	movs	r0, r4
     e94:	47a8      	blx	r5
     e96:	2800      	cmp	r0, #0
     e98:	d0fb      	beq.n	e92 <usart_sync_write+0x4e>
		;
	return (int32_t)offset;
}
     e9a:	0030      	movs	r0, r6
     e9c:	bc0c      	pop	{r2, r3}
     e9e:	4690      	mov	r8, r2
     ea0:	4699      	mov	r9, r3
     ea2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     ea4:	2000      	movs	r0, #0
     ea6:	e7db      	b.n	e60 <usart_sync_write+0x1c>
     ea8:	2000      	movs	r0, #0
     eaa:	e7d9      	b.n	e60 <usart_sync_write+0x1c>
     eac:	000098e8 	.word	0x000098e8
     eb0:	00000fa1 	.word	0x00000fa1
     eb4:	0000148d 	.word	0x0000148d
     eb8:	0000147d 	.word	0x0000147d
     ebc:	00001497 	.word	0x00001497

00000ec0 <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     ec0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     ec2:	46ce      	mov	lr, r9
     ec4:	4647      	mov	r7, r8
     ec6:	b580      	push	{r7, lr}
     ec8:	0004      	movs	r4, r0
     eca:	000f      	movs	r7, r1
     ecc:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     ece:	2800      	cmp	r0, #0
     ed0:	d01d      	beq.n	f0e <usart_sync_read+0x4e>
     ed2:	2900      	cmp	r1, #0
     ed4:	d01d      	beq.n	f12 <usart_sync_read+0x52>
     ed6:	0010      	movs	r0, r2
     ed8:	1e43      	subs	r3, r0, #1
     eda:	4198      	sbcs	r0, r3
     edc:	2286      	movs	r2, #134	; 0x86
     ede:	0052      	lsls	r2, r2, #1
     ee0:	490d      	ldr	r1, [pc, #52]	; (f18 <usart_sync_read+0x58>)
     ee2:	4b0e      	ldr	r3, [pc, #56]	; (f1c <usart_sync_read+0x5c>)
     ee4:	4798      	blx	r3
	uint32_t                      offset = 0;
     ee6:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
     ee8:	3408      	adds	r4, #8
     eea:	4d0d      	ldr	r5, [pc, #52]	; (f20 <usart_sync_read+0x60>)
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
     eec:	4b0d      	ldr	r3, [pc, #52]	; (f24 <usart_sync_read+0x64>)
     eee:	4699      	mov	r9, r3
		while (!_usart_sync_is_byte_received(&descr->device))
     ef0:	0020      	movs	r0, r4
     ef2:	47a8      	blx	r5
     ef4:	2800      	cmp	r0, #0
     ef6:	d0fb      	beq.n	ef0 <usart_sync_read+0x30>
		buf[offset] = _usart_sync_read_byte(&descr->device);
     ef8:	0020      	movs	r0, r4
     efa:	47c8      	blx	r9
     efc:	55b8      	strb	r0, [r7, r6]
	} while (++offset < length);
     efe:	3601      	adds	r6, #1
     f00:	4546      	cmp	r6, r8
     f02:	d3f5      	bcc.n	ef0 <usart_sync_read+0x30>

	return (int32_t)offset;
}
     f04:	0030      	movs	r0, r6
     f06:	bc0c      	pop	{r2, r3}
     f08:	4690      	mov	r8, r2
     f0a:	4699      	mov	r9, r3
     f0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     f0e:	2000      	movs	r0, #0
     f10:	e7e4      	b.n	edc <usart_sync_read+0x1c>
     f12:	2000      	movs	r0, #0
     f14:	e7e2      	b.n	edc <usart_sync_read+0x1c>
     f16:	46c0      	nop			; (mov r8, r8)
     f18:	000098e8 	.word	0x000098e8
     f1c:	00000fa1 	.word	0x00000fa1
     f20:	000014a1 	.word	0x000014a1
     f24:	00001485 	.word	0x00001485

00000f28 <usart_sync_init>:
{
     f28:	b570      	push	{r4, r5, r6, lr}
     f2a:	0005      	movs	r5, r0
     f2c:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     f2e:	2800      	cmp	r0, #0
     f30:	d013      	beq.n	f5a <usart_sync_init+0x32>
     f32:	0008      	movs	r0, r1
     f34:	1e43      	subs	r3, r0, #1
     f36:	4198      	sbcs	r0, r3
     f38:	b2c0      	uxtb	r0, r0
     f3a:	2234      	movs	r2, #52	; 0x34
     f3c:	4908      	ldr	r1, [pc, #32]	; (f60 <usart_sync_init+0x38>)
     f3e:	4b09      	ldr	r3, [pc, #36]	; (f64 <usart_sync_init+0x3c>)
     f40:	4798      	blx	r3
	init_status = _usart_sync_init(&descr->device, hw);
     f42:	0028      	movs	r0, r5
     f44:	3008      	adds	r0, #8
     f46:	0021      	movs	r1, r4
     f48:	4b07      	ldr	r3, [pc, #28]	; (f68 <usart_sync_init+0x40>)
     f4a:	4798      	blx	r3
	if (init_status) {
     f4c:	2800      	cmp	r0, #0
     f4e:	d103      	bne.n	f58 <usart_sync_init+0x30>
	descr->io.read  = usart_sync_read;
     f50:	4b06      	ldr	r3, [pc, #24]	; (f6c <usart_sync_init+0x44>)
     f52:	606b      	str	r3, [r5, #4]
	descr->io.write = usart_sync_write;
     f54:	4b06      	ldr	r3, [pc, #24]	; (f70 <usart_sync_init+0x48>)
     f56:	602b      	str	r3, [r5, #0]
}
     f58:	bd70      	pop	{r4, r5, r6, pc}
     f5a:	2000      	movs	r0, #0
     f5c:	e7ed      	b.n	f3a <usart_sync_init+0x12>
     f5e:	46c0      	nop			; (mov r8, r8)
     f60:	000098e8 	.word	0x000098e8
     f64:	00000fa1 	.word	0x00000fa1
     f68:	0000143d 	.word	0x0000143d
     f6c:	00000ec1 	.word	0x00000ec1
     f70:	00000e45 	.word	0x00000e45

00000f74 <usart_sync_enable>:
{
     f74:	b510      	push	{r4, lr}
     f76:	0004      	movs	r4, r0
	ASSERT(descr);
     f78:	1e43      	subs	r3, r0, #1
     f7a:	4198      	sbcs	r0, r3
     f7c:	b2c0      	uxtb	r0, r0
     f7e:	2253      	movs	r2, #83	; 0x53
     f80:	4904      	ldr	r1, [pc, #16]	; (f94 <usart_sync_enable+0x20>)
     f82:	4b05      	ldr	r3, [pc, #20]	; (f98 <usart_sync_enable+0x24>)
     f84:	4798      	blx	r3
	_usart_sync_enable(&descr->device);
     f86:	0020      	movs	r0, r4
     f88:	3008      	adds	r0, #8
     f8a:	4b04      	ldr	r3, [pc, #16]	; (f9c <usart_sync_enable+0x28>)
     f8c:	4798      	blx	r3
}
     f8e:	2000      	movs	r0, #0
     f90:	bd10      	pop	{r4, pc}
     f92:	46c0      	nop			; (mov r8, r8)
     f94:	000098e8 	.word	0x000098e8
     f98:	00000fa1 	.word	0x00000fa1
     f9c:	00001469 	.word	0x00001469

00000fa0 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     fa0:	2800      	cmp	r0, #0
     fa2:	d100      	bne.n	fa6 <assert+0x6>
		__asm("BKPT #0");
     fa4:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     fa6:	4770      	bx	lr

00000fa8 <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
     fa8:	6803      	ldr	r3, [r0, #0]
     faa:	2b00      	cmp	r3, #0
     fac:	d00a      	beq.n	fc4 <is_list_element+0x1c>
		if (it == element) {
     fae:	428b      	cmp	r3, r1
     fb0:	d00a      	beq.n	fc8 <is_list_element+0x20>
	for (it = list->head; it; it = it->next) {
     fb2:	681b      	ldr	r3, [r3, #0]
     fb4:	2b00      	cmp	r3, #0
     fb6:	d003      	beq.n	fc0 <is_list_element+0x18>
		if (it == element) {
     fb8:	4299      	cmp	r1, r3
     fba:	d1fa      	bne.n	fb2 <is_list_element+0xa>
			return true;
     fbc:	2001      	movs	r0, #1
     fbe:	e000      	b.n	fc2 <is_list_element+0x1a>
		}
	}

	return false;
     fc0:	2000      	movs	r0, #0
}
     fc2:	4770      	bx	lr
	return false;
     fc4:	2000      	movs	r0, #0
     fc6:	e7fc      	b.n	fc2 <is_list_element+0x1a>
			return true;
     fc8:	2001      	movs	r0, #1
     fca:	e7fa      	b.n	fc2 <is_list_element+0x1a>

00000fcc <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
     fcc:	b570      	push	{r4, r5, r6, lr}
     fce:	0004      	movs	r4, r0
     fd0:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
     fd2:	4b06      	ldr	r3, [pc, #24]	; (fec <list_insert_as_head+0x20>)
     fd4:	4798      	blx	r3
     fd6:	2301      	movs	r3, #1
     fd8:	4058      	eors	r0, r3
     fda:	b2c0      	uxtb	r0, r0
     fdc:	2239      	movs	r2, #57	; 0x39
     fde:	4904      	ldr	r1, [pc, #16]	; (ff0 <list_insert_as_head+0x24>)
     fe0:	4b04      	ldr	r3, [pc, #16]	; (ff4 <list_insert_as_head+0x28>)
     fe2:	4798      	blx	r3

	((struct list_element *)element)->next = list->head;
     fe4:	6823      	ldr	r3, [r4, #0]
     fe6:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
     fe8:	6025      	str	r5, [r4, #0]
}
     fea:	bd70      	pop	{r4, r5, r6, pc}
     fec:	00000fa9 	.word	0x00000fa9
     ff0:	00009904 	.word	0x00009904
     ff4:	00000fa1 	.word	0x00000fa1

00000ff8 <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
     ff8:	6803      	ldr	r3, [r0, #0]
     ffa:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
     ffc:	6001      	str	r1, [r0, #0]
}
     ffe:	4770      	bx	lr

00001000 <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
    1000:	6803      	ldr	r3, [r0, #0]
    1002:	2b00      	cmp	r3, #0
    1004:	d001      	beq.n	100a <list_remove_head+0xa>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
    1006:	681a      	ldr	r2, [r3, #0]
    1008:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
	}

	return NULL;
}
    100a:	0018      	movs	r0, r3
    100c:	4770      	bx	lr
	...

00001010 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
    1010:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
    1012:	4a06      	ldr	r2, [pc, #24]	; (102c <_sbrk+0x1c>)
    1014:	6812      	ldr	r2, [r2, #0]
    1016:	2a00      	cmp	r2, #0
    1018:	d004      	beq.n	1024 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    101a:	4a04      	ldr	r2, [pc, #16]	; (102c <_sbrk+0x1c>)
    101c:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    101e:	18c3      	adds	r3, r0, r3
    1020:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
    1022:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    1024:	4902      	ldr	r1, [pc, #8]	; (1030 <_sbrk+0x20>)
    1026:	4a01      	ldr	r2, [pc, #4]	; (102c <_sbrk+0x1c>)
    1028:	6011      	str	r1, [r2, #0]
    102a:	e7f6      	b.n	101a <_sbrk+0xa>
    102c:	20000a48 	.word	0x20000a48
    1030:	20002bb0 	.word	0x20002bb0

00001034 <_close>:
 */
extern int _close(int file)
{
	(void)file;
	return -1;
}
    1034:	2001      	movs	r0, #1
    1036:	4240      	negs	r0, r0
    1038:	4770      	bx	lr

0000103a <_fstat>:
 * \brief Replacement of C library of _fstat
 */
extern int _fstat(int file, struct stat *st)
{
	(void)file;
	st->st_mode = S_IFCHR;
    103a:	2380      	movs	r3, #128	; 0x80
    103c:	019b      	lsls	r3, r3, #6
    103e:	604b      	str	r3, [r1, #4]

	return 0;
}
    1040:	2000      	movs	r0, #0
    1042:	4770      	bx	lr

00001044 <_isatty>:
 */
extern int _isatty(int file)
{
	(void)file;
	return 1;
}
    1044:	2001      	movs	r0, #1
    1046:	4770      	bx	lr

00001048 <_lseek>:
 */
extern int _lseek(int file, int ptr, int dir)
{
	(void)file, (void)ptr, (void)dir;
	return 0;
}
    1048:	2000      	movs	r0, #0
    104a:	4770      	bx	lr

0000104c <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
    104c:	b510      	push	{r4, lr}
    104e:	0003      	movs	r3, r0
		return (ms * (freq / 100000) + 2) / 3 * 100;
    1050:	0080      	lsls	r0, r0, #2
    1052:	18c0      	adds	r0, r0, r3
    1054:	0140      	lsls	r0, r0, #5
    1056:	3002      	adds	r0, #2
    1058:	2103      	movs	r1, #3
    105a:	4b02      	ldr	r3, [pc, #8]	; (1064 <_get_cycles_for_ms+0x18>)
    105c:	4798      	blx	r3
    105e:	2364      	movs	r3, #100	; 0x64
    1060:	4358      	muls	r0, r3
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
    1062:	bd10      	pop	{r4, pc}
    1064:	00002821 	.word	0x00002821

00001068 <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
    1068:	3901      	subs	r1, #1
    106a:	d8fd      	bhi.n	1068 <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
    106c:	4770      	bx	lr
	...

00001070 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    1070:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    1072:	4a0a      	ldr	r2, [pc, #40]	; (109c <_init_chip+0x2c>)
    1074:	6853      	ldr	r3, [r2, #4]
    1076:	2104      	movs	r1, #4
    1078:	430b      	orrs	r3, r1
    107a:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_set_performance_level(2);
    107c:	2002      	movs	r0, #2
    107e:	4b08      	ldr	r3, [pc, #32]	; (10a0 <_init_chip+0x30>)
    1080:	4798      	blx	r3

	_osc32kctrl_init_sources();
    1082:	4b08      	ldr	r3, [pc, #32]	; (10a4 <_init_chip+0x34>)
    1084:	4798      	blx	r3
	_oscctrl_init_sources();
    1086:	4b08      	ldr	r3, [pc, #32]	; (10a8 <_init_chip+0x38>)
    1088:	4798      	blx	r3
	_mclk_init();
    108a:	4b08      	ldr	r3, [pc, #32]	; (10ac <_init_chip+0x3c>)
    108c:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_oscctrl_init_referenced_generators();
    108e:	4b08      	ldr	r3, [pc, #32]	; (10b0 <_init_chip+0x40>)
    1090:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    1092:	201f      	movs	r0, #31
    1094:	4b07      	ldr	r3, [pc, #28]	; (10b4 <_init_chip+0x44>)
    1096:	4798      	blx	r3
#endif

#if (CONF_PORT_EVCTRL_PORT_0 | CONF_PORT_EVCTRL_PORT_1 | CONF_PORT_EVCTRL_PORT_2 | CONF_PORT_EVCTRL_PORT_3)
	_port_event_init();
#endif
}
    1098:	bd10      	pop	{r4, pc}
    109a:	46c0      	nop			; (mov r8, r8)
    109c:	41004000 	.word	0x41004000
    10a0:	00001155 	.word	0x00001155
    10a4:	00001101 	.word	0x00001101
    10a8:	00001119 	.word	0x00001119
    10ac:	000010f1 	.word	0x000010f1
    10b0:	00001151 	.word	0x00001151
    10b4:	000010b9 	.word	0x000010b9

000010b8 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    10b8:	07c3      	lsls	r3, r0, #31
    10ba:	d507      	bpl.n	10cc <_gclk_init_generators_by_fref+0x14>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    10bc:	4a09      	ldr	r2, [pc, #36]	; (10e4 <_gclk_init_generators_by_fref+0x2c>)
    10be:	4b0a      	ldr	r3, [pc, #40]	; (10e8 <_gclk_init_generators_by_fref+0x30>)
    10c0:	621a      	str	r2, [r3, #32]
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    10c2:	0019      	movs	r1, r3
    10c4:	227d      	movs	r2, #125	; 0x7d
    10c6:	684b      	ldr	r3, [r1, #4]
    10c8:	421a      	tst	r2, r3
    10ca:	d1fc      	bne.n	10c6 <_gclk_init_generators_by_fref+0xe>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SOURCE);
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
    10cc:	0783      	lsls	r3, r0, #30
    10ce:	d507      	bpl.n	10e0 <_gclk_init_generators_by_fref+0x28>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    10d0:	4a06      	ldr	r2, [pc, #24]	; (10ec <_gclk_init_generators_by_fref+0x34>)
    10d2:	4b05      	ldr	r3, [pc, #20]	; (10e8 <_gclk_init_generators_by_fref+0x30>)
    10d4:	625a      	str	r2, [r3, #36]	; 0x24
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    10d6:	0019      	movs	r1, r3
    10d8:	227d      	movs	r2, #125	; 0x7d
    10da:	684b      	ldr	r3, [r1, #4]
    10dc:	421a      	tst	r2, r3
    10de:	d1fc      	bne.n	10da <_gclk_init_generators_by_fref+0x22>
		        | (CONF_GCLK_GEN_4_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_4_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_4_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_4_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_4_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_4_SOURCE);
	}
#endif
}
    10e0:	4770      	bx	lr
    10e2:	46c0      	nop			; (mov r8, r8)
    10e4:	00010105 	.word	0x00010105
    10e8:	40001c00 	.word	0x40001c00
    10ec:	00040105 	.word	0x00040105

000010f0 <_mclk_init>:
	((Mclk *)hw)->BUPDIV.reg = data;
    10f0:	4b02      	ldr	r3, [pc, #8]	; (10fc <_mclk_init+0xc>)
    10f2:	2208      	movs	r2, #8
    10f4:	719a      	strb	r2, [r3, #6]
	((Mclk *)hw)->CPUDIV.reg = data;
    10f6:	3a07      	subs	r2, #7
    10f8:	711a      	strb	r2, [r3, #4]
void _mclk_init(void)
{
	void *hw = (void *)MCLK;
	hri_mclk_write_BUPDIV_reg(hw, MCLK_BUPDIV_BUPDIV(CONF_MCLK_BUPDIV));
	hri_mclk_write_CPUDIV_reg(hw, MCLK_CPUDIV_CPUDIV(CONF_MCLK_CPUDIV));
}
    10fa:	4770      	bx	lr
    10fc:	40000800 	.word	0x40000800

00001100 <_osc32kctrl_init_sources>:
}

static inline hri_osc32kctrl_osculp32k_reg_t hri_osc32kctrl_read_OSCULP32K_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Osc32kctrl *)hw)->OSCULP32K.reg;
    1100:	4b04      	ldr	r3, [pc, #16]	; (1114 <_osc32kctrl_init_sources+0x14>)
    1102:	69da      	ldr	r2, [r3, #28]
	calib = hri_osc32kctrl_read_OSCULP32K_CALIB_bf(hw);
	hri_osc32kctrl_write_OSCULP32K_reg(hw,
#if CONF_OSC32K_CALIB_ENABLE == 1
	                                   OSC32KCTRL_OSCULP32K_CALIB(CONF_OSC32K_CALIB)
#else
	                                   OSC32KCTRL_OSCULP32K_CALIB(calib)
    1104:	21f8      	movs	r1, #248	; 0xf8
    1106:	0149      	lsls	r1, r1, #5
    1108:	400a      	ands	r2, r1
}

static inline void hri_osc32kctrl_write_OSCULP32K_reg(const void *const hw, hri_osc32kctrl_osculp32k_reg_t data)
{
	OSC32KCTRL_CRITICAL_SECTION_ENTER();
	((Osc32kctrl *)hw)->OSCULP32K.reg = data;
    110a:	61da      	str	r2, [r3, #28]
	((Osc32kctrl *)hw)->RTCCTRL.reg = data;
    110c:	2201      	movs	r2, #1
    110e:	741a      	strb	r2, [r3, #16]
#endif
#endif

	hri_osc32kctrl_write_RTCCTRL_reg(hw, OSC32KCTRL_RTCCTRL_RTCSEL(CONF_RTCCTRL));
	(void)calib;
}
    1110:	4770      	bx	lr
    1112:	46c0      	nop			; (mov r8, r8)
    1114:	40001400 	.word	0x40001400

00001118 <_oscctrl_init_sources>:
}

static inline void hri_oscctrl_write_OSC16MCTRL_reg(const void *const hw, hri_oscctrl_osc16mctrl_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC16MCTRL.reg = data;
    1118:	228e      	movs	r2, #142	; 0x8e
    111a:	4b0c      	ldr	r3, [pc, #48]	; (114c <_oscctrl_init_sources+0x34>)
    111c:	751a      	strb	r2, [r3, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
    111e:	0018      	movs	r0, r3
    1120:	2138      	movs	r1, #56	; 0x38
    1122:	3a8c      	subs	r2, #140	; 0x8c
    1124:	5c43      	ldrb	r3, [r0, r1]
    1126:	4213      	tst	r3, r2
    1128:	d1fc      	bne.n	1124 <_oscctrl_init_sources+0xc>
	return (((Oscctrl *)hw)->STATUS.reg & OSCCTRL_STATUS_OSC16MRDY) >> OSCCTRL_STATUS_OSC16MRDY_Pos;
    112a:	4908      	ldr	r1, [pc, #32]	; (114c <_oscctrl_init_sources+0x34>)
#endif
#endif

#if CONF_OSC16M_CONFIG == 1
#if CONF_OSC16M_ENABLE == 1
	while (!hri_oscctrl_get_STATUS_OSC16MRDY_bit(hw))
    112c:	2210      	movs	r2, #16
    112e:	68cb      	ldr	r3, [r1, #12]
    1130:	421a      	tst	r2, r3
    1132:	d0fc      	beq.n	112e <_oscctrl_init_sources+0x16>
	((Oscctrl *)hw)->OSC16MCTRL.reg |= OSCCTRL_OSC16MCTRL_ONDEMAND;
    1134:	4a05      	ldr	r2, [pc, #20]	; (114c <_oscctrl_init_sources+0x34>)
    1136:	7d13      	ldrb	r3, [r2, #20]
    1138:	2180      	movs	r1, #128	; 0x80
    113a:	430b      	orrs	r3, r1
    113c:	7513      	strb	r3, [r2, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
    113e:	0010      	movs	r0, r2
    1140:	3948      	subs	r1, #72	; 0x48
    1142:	220e      	movs	r2, #14
    1144:	5c43      	ldrb	r3, [r0, r1]
    1146:	4213      	tst	r3, r2
    1148:	d1fc      	bne.n	1144 <_oscctrl_init_sources+0x2c>
#if CONF_OSC16M_ONDEMAND == 1
	hri_oscctrl_set_OSC16MCTRL_ONDEMAND_bit(hw);
#endif
#endif
	(void)hw;
}
    114a:	4770      	bx	lr
    114c:	40001000 	.word	0x40001000

00001150 <_oscctrl_init_referenced_generators>:
#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_read_SYNCBUSY_reg(GCLK))
		;
#endif
	(void)hw, (void)tmp;
}
    1150:	4770      	bx	lr
	...

00001154 <_set_performance_level>:
}

static inline hri_pm_plcfg_reg_t hri_pm_get_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t mask)
{
	uint8_t tmp;
	tmp = ((Pm *)hw)->PLCFG.reg;
    1154:	4b09      	ldr	r3, [pc, #36]	; (117c <_set_performance_level+0x28>)
    1156:	789b      	ldrb	r3, [r3, #2]
/**
 * \brief Set performance level
 */
void _set_performance_level(const uint8_t level)
{
	if (hri_pm_get_PLCFG_PLSEL_bf(PM, PM_PLCFG_PLSEL_Msk) != level) {
    1158:	2203      	movs	r2, #3
    115a:	4013      	ands	r3, r2
    115c:	4298      	cmp	r0, r3
    115e:	d00b      	beq.n	1178 <_set_performance_level+0x24>
	((Pm *)hw)->INTFLAG.reg = mask;
    1160:	4a06      	ldr	r2, [pc, #24]	; (117c <_set_performance_level+0x28>)
    1162:	23ff      	movs	r3, #255	; 0xff
    1164:	7193      	strb	r3, [r2, #6]

static inline void hri_pm_write_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t data)
{
	uint8_t tmp;
	PM_CRITICAL_SECTION_ENTER();
	tmp = ((Pm *)hw)->PLCFG.reg;
    1166:	7893      	ldrb	r3, [r2, #2]
	tmp &= ~PM_PLCFG_PLSEL_Msk;
    1168:	2103      	movs	r1, #3
    116a:	438b      	bics	r3, r1
	tmp |= PM_PLCFG_PLSEL(data);
    116c:	4008      	ands	r0, r1
    116e:	4318      	orrs	r0, r3
	((Pm *)hw)->PLCFG.reg = tmp;
    1170:	7090      	strb	r0, [r2, #2]
	return ((Pm *)hw)->INTFLAG.reg;
    1172:	7993      	ldrb	r3, [r2, #6]
		hri_pm_clear_INTFLAG_reg(PM, 0xFF);
		hri_pm_write_PLCFG_PLSEL_bf(PM, level);
		while (!hri_pm_read_INTFLAG_reg(PM))
    1174:	2b00      	cmp	r3, #0
    1176:	d0fc      	beq.n	1172 <_set_performance_level+0x1e>
			;
	}
}
    1178:	4770      	bx	lr
    117a:	46c0      	nop			; (mov r8, r8)
    117c:	40000400 	.word	0x40000400

00001180 <_timer_init>:

/**
 * \brief Initialize Timer
 */
int32_t _timer_init(struct _timer_device *const dev, void *const hw)
{
    1180:	b570      	push	{r4, r5, r6, lr}
    1182:	0005      	movs	r5, r0
    1184:	000c      	movs	r4, r1
	ASSERT(dev);
    1186:	1e43      	subs	r3, r0, #1
    1188:	4198      	sbcs	r0, r3
    118a:	b2c0      	uxtb	r0, r0
    118c:	2230      	movs	r2, #48	; 0x30
    118e:	4912      	ldr	r1, [pc, #72]	; (11d8 <_timer_init+0x58>)
    1190:	4b12      	ldr	r3, [pc, #72]	; (11dc <_timer_init+0x5c>)
    1192:	4798      	blx	r3

	dev->hw = hw;
    1194:	60ec      	str	r4, [r5, #12]
}

static inline void hri_rtcmode0_write_CTRLA_reg(const void *const hw, hri_rtcmode0_ctrla_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.CTRLA.reg = data;
    1196:	2301      	movs	r3, #1
    1198:	8023      	strh	r3, [r4, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    119a:	4a11      	ldr	r2, [pc, #68]	; (11e0 <_timer_init+0x60>)
    119c:	6923      	ldr	r3, [r4, #16]
    119e:	4213      	tst	r3, r2
    11a0:	d1fc      	bne.n	119c <_timer_init+0x1c>

	hri_rtcmode0_write_CTRLA_reg(dev->hw, RTC_MODE0_CTRLA_SWRST);
	hri_rtcmode0_wait_for_sync(dev->hw, RTC_MODE0_SYNCBUSY_SWRST);
    11a2:	68eb      	ldr	r3, [r5, #12]
    11a4:	2101      	movs	r1, #1
    11a6:	691a      	ldr	r2, [r3, #16]
    11a8:	4211      	tst	r1, r2
    11aa:	d1fc      	bne.n	11a6 <_timer_init+0x26>
	((Rtc *)hw)->MODE0.CTRLA.reg = data;
    11ac:	4a0d      	ldr	r2, [pc, #52]	; (11e4 <_timer_init+0x64>)
    11ae:	801a      	strh	r2, [r3, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    11b0:	490b      	ldr	r1, [pc, #44]	; (11e0 <_timer_init+0x60>)
    11b2:	691a      	ldr	r2, [r3, #16]
    11b4:	420a      	tst	r2, r1
    11b6:	d1fc      	bne.n	11b2 <_timer_init+0x32>
	        | (CONF_RTC_COMPE0 << RTC_MODE0_EVCTRL_CMPEO_Pos) | (CONF_RTC_OVFEO << RTC_MODE0_EVCTRL_OVFEO_Pos));
#endif

	hri_rtcmode0_write_CTRLA_reg(
	    dev->hw, RTC_MODE0_CTRLA_PRESCALER(CONF_RTC_PRESCALER) | RTC_MODE0_CTRLA_COUNTSYNC | RTC_MODE0_CTRLA_MATCHCLR);
	hri_rtcmode0_write_COMP_reg(dev->hw, 0, CONF_RTC_COMP_VAL);
    11b8:	68ea      	ldr	r2, [r5, #12]
}

static inline void hri_rtcmode0_write_COMP_reg(const void *const hw, uint8_t index, hri_rtcmode0_comp_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.COMP[index].reg = data;
    11ba:	2320      	movs	r3, #32
    11bc:	6213      	str	r3, [r2, #32]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    11be:	2120      	movs	r1, #32
    11c0:	6913      	ldr	r3, [r2, #16]
    11c2:	4219      	tst	r1, r3
    11c4:	d1fc      	bne.n	11c0 <_timer_init+0x40>
	((Rtc *)hw)->MODE0.INTENSET.reg = RTC_MODE0_INTENSET_CMP0;
    11c6:	2380      	movs	r3, #128	; 0x80
    11c8:	005b      	lsls	r3, r3, #1
    11ca:	68ea      	ldr	r2, [r5, #12]
    11cc:	8153      	strh	r3, [r2, #10]
	hri_rtcmode0_set_INTEN_CMP0_bit(dev->hw);

	_rtc_dev = dev;
    11ce:	4b06      	ldr	r3, [pc, #24]	; (11e8 <_timer_init+0x68>)
    11d0:	601d      	str	r5, [r3, #0]

	return ERR_NONE;
}
    11d2:	2000      	movs	r0, #0
    11d4:	bd70      	pop	{r4, r5, r6, pc}
    11d6:	46c0      	nop			; (mov r8, r8)
    11d8:	00009924 	.word	0x00009924
    11dc:	00000fa1 	.word	0x00000fa1
    11e0:	00008003 	.word	0x00008003
    11e4:	ffff8080 	.word	0xffff8080
    11e8:	20000a4c 	.word	0x20000a4c

000011ec <_timer_start>:

/**
 * \brief Start hardware timer
 */
void _timer_start(struct _timer_device *const dev)
{
    11ec:	b510      	push	{r4, lr}
    11ee:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->hw);
    11f0:	d01f      	beq.n	1232 <_timer_start+0x46>
    11f2:	68c0      	ldr	r0, [r0, #12]
    11f4:	1e43      	subs	r3, r0, #1
    11f6:	4198      	sbcs	r0, r3
    11f8:	b2c0      	uxtb	r0, r0
    11fa:	225c      	movs	r2, #92	; 0x5c
    11fc:	490e      	ldr	r1, [pc, #56]	; (1238 <_timer_start+0x4c>)
    11fe:	4b0f      	ldr	r3, [pc, #60]	; (123c <_timer_start+0x50>)
    1200:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1202:	2204      	movs	r2, #4
    1204:	4b0e      	ldr	r3, [pc, #56]	; (1240 <_timer_start+0x54>)
    1206:	601a      	str	r2, [r3, #0]

	NVIC_EnableIRQ(RTC_IRQn);
	hri_rtcmode0_write_COUNT_reg(dev->hw, 0);
    1208:	68e2      	ldr	r2, [r4, #12]
	((Rtc *)hw)->MODE0.COUNT.reg = data;
    120a:	2300      	movs	r3, #0
    120c:	6193      	str	r3, [r2, #24]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    120e:	2108      	movs	r1, #8
    1210:	6913      	ldr	r3, [r2, #16]
    1212:	4219      	tst	r1, r3
    1214:	d1fc      	bne.n	1210 <_timer_start+0x24>
	hri_rtcmode0_wait_for_sync(dev->hw, RTC_MODE0_SYNCBUSY_COUNT);
    1216:	68e3      	ldr	r3, [r4, #12]
    1218:	2108      	movs	r1, #8
    121a:	691a      	ldr	r2, [r3, #16]
    121c:	4211      	tst	r1, r2
    121e:	d1fc      	bne.n	121a <_timer_start+0x2e>
	((Rtc *)hw)->MODE0.CTRLA.reg |= RTC_MODE0_CTRLA_ENABLE;
    1220:	881a      	ldrh	r2, [r3, #0]
    1222:	2102      	movs	r1, #2
    1224:	430a      	orrs	r2, r1
    1226:	801a      	strh	r2, [r3, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    1228:	4906      	ldr	r1, [pc, #24]	; (1244 <_timer_start+0x58>)
    122a:	691a      	ldr	r2, [r3, #16]
    122c:	420a      	tst	r2, r1
    122e:	d1fc      	bne.n	122a <_timer_start+0x3e>
	hri_rtcmode0_set_CTRLA_ENABLE_bit(dev->hw);
}
    1230:	bd10      	pop	{r4, pc}
    1232:	2000      	movs	r0, #0
    1234:	e7e1      	b.n	11fa <_timer_start+0xe>
    1236:	46c0      	nop			; (mov r8, r8)
    1238:	00009924 	.word	0x00009924
    123c:	00000fa1 	.word	0x00000fa1
    1240:	e000e100 	.word	0xe000e100
    1244:	00008003 	.word	0x00008003

00001248 <_timer_is_started>:
/**
 * \brief Check if timer is running
 */
bool _timer_is_started(const struct _timer_device *const dev)
{
	return hri_rtcmode0_get_CTRLA_ENABLE_bit(dev->hw);
    1248:	68c2      	ldr	r2, [r0, #12]
    124a:	4904      	ldr	r1, [pc, #16]	; (125c <_timer_is_started+0x14>)
    124c:	6913      	ldr	r3, [r2, #16]
    124e:	420b      	tst	r3, r1
    1250:	d1fc      	bne.n	124c <_timer_is_started+0x4>
	tmp = ((Rtc *)hw)->MODE0.CTRLA.reg;
    1252:	8810      	ldrh	r0, [r2, #0]
	return (bool)tmp;
    1254:	0780      	lsls	r0, r0, #30
    1256:	0fc0      	lsrs	r0, r0, #31
}
    1258:	4770      	bx	lr
    125a:	46c0      	nop			; (mov r8, r8)
    125c:	00008003 	.word	0x00008003

00001260 <_timer_set_irq>:
 * \brief Set timer IRQ
 */
void _timer_set_irq(struct _timer_device *const dev)
{
	(void)dev;
}
    1260:	4770      	bx	lr

00001262 <_rtc_get_timer>:
 * \brief Retrieve timer helper functions
 */
struct _timer_hpl_interface *_rtc_get_timer(void)
{
	return NULL;
}
    1262:	2000      	movs	r0, #0
    1264:	4770      	bx	lr
	...

00001268 <RTC_Handler>:

/**
 * \brief Rtc interrupt handler
 */
void RTC_Handler(void)
{
    1268:	b510      	push	{r4, lr}
	_rtc_timer_interrupt_handler(_rtc_dev);
    126a:	4b08      	ldr	r3, [pc, #32]	; (128c <RTC_Handler+0x24>)
    126c:	681c      	ldr	r4, [r3, #0]
	return ((Rtc *)hw)->MODE0.INTFLAG.reg;
    126e:	68e3      	ldr	r3, [r4, #12]
    1270:	899b      	ldrh	r3, [r3, #12]
	if (flag & RTC_MODE0_INTFLAG_CMP0) {
    1272:	05db      	lsls	r3, r3, #23
    1274:	d508      	bpl.n	1288 <RTC_Handler+0x20>
		if (dev->timer_cb.period_expired) {
    1276:	6823      	ldr	r3, [r4, #0]
    1278:	2b00      	cmp	r3, #0
    127a:	d001      	beq.n	1280 <RTC_Handler+0x18>
			dev->timer_cb.period_expired(dev);
    127c:	0020      	movs	r0, r4
    127e:	4798      	blx	r3
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
    1280:	68e3      	ldr	r3, [r4, #12]
	((Rtc *)hw)->MODE0.INTFLAG.reg = RTC_MODE0_INTFLAG_CMP0;
    1282:	2280      	movs	r2, #128	; 0x80
    1284:	0052      	lsls	r2, r2, #1
    1286:	819a      	strh	r2, [r3, #12]
}
    1288:	bd10      	pop	{r4, pc}
    128a:	46c0      	nop			; (mov r8, r8)
    128c:	20000a4c 	.word	0x20000a4c

00001290 <_get_i2cm_index>:
 * \param[in] hw The pointer to hardware instance

 * \return The ordinal number of the given sercom hardware instance
 */
static int8_t _get_i2cm_index(const void *const hw)
{
    1290:	b510      	push	{r4, lr}
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    1292:	4b09      	ldr	r3, [pc, #36]	; (12b8 <_get_i2cm_index+0x28>)
    1294:	469c      	mov	ip, r3
    1296:	4460      	add	r0, ip
    1298:	0a80      	lsrs	r0, r0, #10
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
	uint8_t i;

	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
		if (_i2cms[i].number == sercom_offset) {
    129a:	b2c0      	uxtb	r0, r0
    129c:	2801      	cmp	r0, #1
    129e:	d008      	beq.n	12b2 <_get_i2cm_index+0x22>
			return i;
		}
	}

	ASSERT(false);
    12a0:	22e6      	movs	r2, #230	; 0xe6
    12a2:	0092      	lsls	r2, r2, #2
    12a4:	4905      	ldr	r1, [pc, #20]	; (12bc <_get_i2cm_index+0x2c>)
    12a6:	2000      	movs	r0, #0
    12a8:	4b05      	ldr	r3, [pc, #20]	; (12c0 <_get_i2cm_index+0x30>)
    12aa:	4798      	blx	r3
	return -1;
    12ac:	2001      	movs	r0, #1
    12ae:	4240      	negs	r0, r0
}
    12b0:	bd10      	pop	{r4, pc}
			return i;
    12b2:	2000      	movs	r0, #0
    12b4:	e7fc      	b.n	12b0 <_get_i2cm_index+0x20>
    12b6:	46c0      	nop			; (mov r8, r8)
    12b8:	bdfffc00 	.word	0xbdfffc00
    12bc:	00009954 	.word	0x00009954
    12c0:	00000fa1 	.word	0x00000fa1

000012c4 <_i2c_m_sync_init_impl>:
	}
	return ERR_NONE;
}

static int32_t _i2c_m_sync_init_impl(struct _i2c_m_service *const service, void *const hw)
{
    12c4:	b570      	push	{r4, r5, r6, lr}
    12c6:	0005      	movs	r5, r0
    12c8:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
    12ca:	0008      	movs	r0, r1
    12cc:	4b31      	ldr	r3, [pc, #196]	; (1394 <_i2c_m_sync_init_impl+0xd0>)
    12ce:	4798      	blx	r3
    12d0:	b2c0      	uxtb	r0, r0
	};
}

static inline bool hri_sercomi2cm_is_syncing(const void *const hw, hri_sercomi2cm_syncbusy_reg_t reg)
{
	return ((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg;
    12d2:	69e3      	ldr	r3, [r4, #28]

	if (!hri_sercomi2cm_is_syncing(hw, SERCOM_I2CM_SYNCBUSY_SWRST)) {
    12d4:	07db      	lsls	r3, r3, #31
    12d6:	d421      	bmi.n	131c <_i2c_m_sync_init_impl+0x58>
		uint32_t mode = _i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_MODE_Msk;
    12d8:	0043      	lsls	r3, r0, #1
    12da:	181b      	adds	r3, r3, r0
    12dc:	00db      	lsls	r3, r3, #3
    12de:	4a2e      	ldr	r2, [pc, #184]	; (1398 <_i2c_m_sync_init_impl+0xd4>)
    12e0:	18d3      	adds	r3, r2, r3
    12e2:	6859      	ldr	r1, [r3, #4]
    12e4:	231c      	movs	r3, #28
    12e6:	4019      	ands	r1, r3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    12e8:	2203      	movs	r2, #3
    12ea:	69e3      	ldr	r3, [r4, #28]
    12ec:	421a      	tst	r2, r3
    12ee:	d1fc      	bne.n	12ea <_i2c_m_sync_init_impl+0x26>
static inline hri_sercomi2cm_ctrla_reg_t hri_sercomi2cm_get_CTRLA_reg(const void *const          hw,
                                                                      hri_sercomi2cm_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SWRST | SERCOM_I2CM_SYNCBUSY_ENABLE);
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    12f0:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
    12f2:	079b      	lsls	r3, r3, #30
    12f4:	d50b      	bpl.n	130e <_i2c_m_sync_init_impl+0x4a>
	((Sercom *)hw)->I2CM.CTRLA.reg &= ~SERCOM_I2CM_CTRLA_ENABLE;
    12f6:	6823      	ldr	r3, [r4, #0]
    12f8:	2202      	movs	r2, #2
    12fa:	4393      	bics	r3, r2
    12fc:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    12fe:	3201      	adds	r2, #1
    1300:	69e3      	ldr	r3, [r4, #28]
    1302:	421a      	tst	r2, r3
    1304:	d1fc      	bne.n	1300 <_i2c_m_sync_init_impl+0x3c>
    1306:	2202      	movs	r2, #2
    1308:	69e3      	ldr	r3, [r4, #28]
    130a:	421a      	tst	r2, r3
    130c:	d1fc      	bne.n	1308 <_i2c_m_sync_init_impl+0x44>
			hri_sercomi2cm_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_ENABLE);
		}
		hri_sercomi2cm_write_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_SWRST | mode);
    130e:	2301      	movs	r3, #1
    1310:	430b      	orrs	r3, r1
}

static inline void hri_sercomi2cm_write_CTRLA_reg(const void *const hw, hri_sercomi2cm_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    1312:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1314:	2203      	movs	r2, #3
    1316:	69e3      	ldr	r3, [r4, #28]
    1318:	421a      	tst	r2, r3
    131a:	d1fc      	bne.n	1316 <_i2c_m_sync_init_impl+0x52>
    131c:	2201      	movs	r2, #1
    131e:	69e3      	ldr	r3, [r4, #28]
    1320:	421a      	tst	r2, r3
    1322:	d1fc      	bne.n	131e <_i2c_m_sync_init_impl+0x5a>
	}
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SWRST);

	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a);
    1324:	0043      	lsls	r3, r0, #1
    1326:	181b      	adds	r3, r3, r0
    1328:	00db      	lsls	r3, r3, #3
    132a:	4a1b      	ldr	r2, [pc, #108]	; (1398 <_i2c_m_sync_init_impl+0xd4>)
    132c:	18d3      	adds	r3, r2, r3
    132e:	6859      	ldr	r1, [r3, #4]
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    1330:	6021      	str	r1, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1332:	2203      	movs	r2, #3
    1334:	69e3      	ldr	r3, [r4, #28]
    1336:	421a      	tst	r2, r3
    1338:	d1fc      	bne.n	1334 <_i2c_m_sync_init_impl+0x70>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
    133a:	0043      	lsls	r3, r0, #1
    133c:	181b      	adds	r3, r3, r0
    133e:	00db      	lsls	r3, r3, #3
    1340:	4a15      	ldr	r2, [pc, #84]	; (1398 <_i2c_m_sync_init_impl+0xd4>)
    1342:	18d3      	adds	r3, r2, r3
    1344:	689b      	ldr	r3, [r3, #8]
}

static inline void hri_sercomi2cm_write_CTRLB_reg(const void *const hw, hri_sercomi2cm_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
    1346:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1348:	2204      	movs	r2, #4
    134a:	69e3      	ldr	r3, [r4, #28]
    134c:	421a      	tst	r2, r3
    134e:	d1fc      	bne.n	134a <_i2c_m_sync_init_impl+0x86>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
    1350:	0043      	lsls	r3, r0, #1
    1352:	181b      	adds	r3, r3, r0
    1354:	00db      	lsls	r3, r3, #3
    1356:	4a10      	ldr	r2, [pc, #64]	; (1398 <_i2c_m_sync_init_impl+0xd4>)
    1358:	18d3      	adds	r3, r2, r3
    135a:	68db      	ldr	r3, [r3, #12]
}

static inline void hri_sercomi2cm_write_BAUD_reg(const void *const hw, hri_sercomi2cm_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.BAUD.reg = data;
    135c:	60e3      	str	r3, [r4, #12]

	service->mode = (_i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_SPEED_Msk) >> SERCOM_I2CM_CTRLA_SPEED_Pos;
    135e:	0189      	lsls	r1, r1, #6
    1360:	0f89      	lsrs	r1, r1, #30
    1362:	81a9      	strh	r1, [r5, #12]

static inline void hri_sercomi2cm_write_ADDR_HS_bit(const void *const hw, bool value)
{
	uint32_t tmp;
	SERCOM_CRITICAL_SECTION_ENTER();
	tmp = ((Sercom *)hw)->I2CM.ADDR.reg;
    1364:	6a63      	ldr	r3, [r4, #36]	; 0x24
	tmp &= ~SERCOM_I2CM_ADDR_HS;
    1366:	4e0d      	ldr	r6, [pc, #52]	; (139c <_i2c_m_sync_init_impl+0xd8>)
    1368:	401e      	ands	r6, r3
	hri_sercomi2cm_write_ADDR_HS_bit(hw, service->mode < I2C_HS ? 0 : 1);
    136a:	2301      	movs	r3, #1
    136c:	428b      	cmp	r3, r1
    136e:	419b      	sbcs	r3, r3
    1370:	425b      	negs	r3, r3
	tmp |= value << SERCOM_I2CM_ADDR_HS_Pos;
    1372:	039b      	lsls	r3, r3, #14
    1374:	4333      	orrs	r3, r6
	((Sercom *)hw)->I2CM.ADDR.reg = tmp;
    1376:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1378:	2204      	movs	r2, #4
    137a:	69e3      	ldr	r3, [r4, #28]
    137c:	421a      	tst	r2, r3
    137e:	d1fc      	bne.n	137a <_i2c_m_sync_init_impl+0xb6>

	service->trise = _i2cms[i].trise;
    1380:	0043      	lsls	r3, r0, #1
    1382:	1818      	adds	r0, r3, r0
    1384:	00c0      	lsls	r0, r0, #3
    1386:	4b04      	ldr	r3, [pc, #16]	; (1398 <_i2c_m_sync_init_impl+0xd4>)
    1388:	1818      	adds	r0, r3, r0
    138a:	8a43      	ldrh	r3, [r0, #18]
    138c:	81eb      	strh	r3, [r5, #14]

	return ERR_NONE;
}
    138e:	2000      	movs	r0, #0
    1390:	bd70      	pop	{r4, r5, r6, pc}
    1392:	46c0      	nop			; (mov r8, r8)
    1394:	00001291 	.word	0x00001291
    1398:	0000993c 	.word	0x0000993c
    139c:	ffffbfff 	.word	0xffffbfff

000013a0 <_usart_init>:
{
    13a0:	b510      	push	{r4, lr}
    13a2:	0004      	movs	r4, r0
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    13a4:	4b1f      	ldr	r3, [pc, #124]	; (1424 <_usart_init+0x84>)
    13a6:	18c3      	adds	r3, r0, r3
    13a8:	0a9b      	lsrs	r3, r3, #10
		if (_usarts[i].number == sercom_offset) {
    13aa:	b2db      	uxtb	r3, r3
    13ac:	2b00      	cmp	r3, #0
    13ae:	d004      	beq.n	13ba <_usart_init+0x1a>
	ASSERT(false);
    13b0:	4a1d      	ldr	r2, [pc, #116]	; (1428 <_usart_init+0x88>)
    13b2:	491e      	ldr	r1, [pc, #120]	; (142c <_usart_init+0x8c>)
    13b4:	2000      	movs	r0, #0
    13b6:	4b1e      	ldr	r3, [pc, #120]	; (1430 <_usart_init+0x90>)
    13b8:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
    13ba:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
    13bc:	07db      	lsls	r3, r3, #31
    13be:	d418      	bmi.n	13f2 <_usart_init+0x52>
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    13c0:	2203      	movs	r2, #3
    13c2:	69e3      	ldr	r3, [r4, #28]
    13c4:	421a      	tst	r2, r3
    13c6:	d1fc      	bne.n	13c2 <_usart_init+0x22>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    13c8:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    13ca:	079b      	lsls	r3, r3, #30
    13cc:	d50b      	bpl.n	13e6 <_usart_init+0x46>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    13ce:	6823      	ldr	r3, [r4, #0]
    13d0:	2202      	movs	r2, #2
    13d2:	4393      	bics	r3, r2
    13d4:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    13d6:	3201      	adds	r2, #1
    13d8:	69e3      	ldr	r3, [r4, #28]
    13da:	421a      	tst	r2, r3
    13dc:	d1fc      	bne.n	13d8 <_usart_init+0x38>
    13de:	2202      	movs	r2, #2
    13e0:	69e3      	ldr	r3, [r4, #28]
    13e2:	421a      	tst	r2, r3
    13e4:	d1fc      	bne.n	13e0 <_usart_init+0x40>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    13e6:	2305      	movs	r3, #5
    13e8:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    13ea:	2203      	movs	r2, #3
    13ec:	69e3      	ldr	r3, [r4, #28]
    13ee:	421a      	tst	r2, r3
    13f0:	d1fc      	bne.n	13ec <_usart_init+0x4c>
    13f2:	2201      	movs	r2, #1
    13f4:	69e3      	ldr	r3, [r4, #28]
    13f6:	421a      	tst	r2, r3
    13f8:	d1fc      	bne.n	13f4 <_usart_init+0x54>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    13fa:	4b0e      	ldr	r3, [pc, #56]	; (1434 <_usart_init+0x94>)
    13fc:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    13fe:	2203      	movs	r2, #3
    1400:	69e3      	ldr	r3, [r4, #28]
    1402:	421a      	tst	r2, r3
    1404:	d1fc      	bne.n	1400 <_usart_init+0x60>
	((Sercom *)hw)->USART.CTRLB.reg = data;
    1406:	23c0      	movs	r3, #192	; 0xc0
    1408:	029b      	lsls	r3, r3, #10
    140a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    140c:	2207      	movs	r2, #7
    140e:	69e3      	ldr	r3, [r4, #28]
    1410:	421a      	tst	r2, r3
    1412:	d1fc      	bne.n	140e <_usart_init+0x6e>
	((Sercom *)hw)->USART.BAUD.reg = data;
    1414:	4b08      	ldr	r3, [pc, #32]	; (1438 <_usart_init+0x98>)
    1416:	81a3      	strh	r3, [r4, #12]
	((Sercom *)hw)->USART.RXPL.reg = data;
    1418:	2300      	movs	r3, #0
    141a:	73a3      	strb	r3, [r4, #14]
}

static inline void hri_sercomusart_write_DBGCTRL_reg(const void *const hw, hri_sercomusart_dbgctrl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    141c:	2230      	movs	r2, #48	; 0x30
    141e:	54a3      	strb	r3, [r4, r2]
}
    1420:	2000      	movs	r0, #0
    1422:	bd10      	pop	{r4, pc}
    1424:	bdfffc00 	.word	0xbdfffc00
    1428:	0000023a 	.word	0x0000023a
    142c:	00009954 	.word	0x00009954
    1430:	00000fa1 	.word	0x00000fa1
    1434:	40310004 	.word	0x40310004
    1438:	ffffe282 	.word	0xffffe282

0000143c <_usart_sync_init>:
{
    143c:	b570      	push	{r4, r5, r6, lr}
    143e:	0005      	movs	r5, r0
    1440:	000c      	movs	r4, r1
	ASSERT(device);
    1442:	1e43      	subs	r3, r0, #1
    1444:	4198      	sbcs	r0, r3
    1446:	b2c0      	uxtb	r0, r0
    1448:	22b4      	movs	r2, #180	; 0xb4
    144a:	4904      	ldr	r1, [pc, #16]	; (145c <_usart_sync_init+0x20>)
    144c:	4b04      	ldr	r3, [pc, #16]	; (1460 <_usart_sync_init+0x24>)
    144e:	4798      	blx	r3
	device->hw = hw;
    1450:	602c      	str	r4, [r5, #0]
	return _usart_init(hw);
    1452:	0020      	movs	r0, r4
    1454:	4b03      	ldr	r3, [pc, #12]	; (1464 <_usart_sync_init+0x28>)
    1456:	4798      	blx	r3
}
    1458:	bd70      	pop	{r4, r5, r6, pc}
    145a:	46c0      	nop			; (mov r8, r8)
    145c:	00009954 	.word	0x00009954
    1460:	00000fa1 	.word	0x00000fa1
    1464:	000013a1 	.word	0x000013a1

00001468 <_usart_sync_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    1468:	6802      	ldr	r2, [r0, #0]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    146a:	6813      	ldr	r3, [r2, #0]
    146c:	2102      	movs	r1, #2
    146e:	430b      	orrs	r3, r1
    1470:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1472:	3101      	adds	r1, #1
    1474:	69d3      	ldr	r3, [r2, #28]
    1476:	4219      	tst	r1, r3
    1478:	d1fc      	bne.n	1474 <_usart_sync_enable+0xc>
}
    147a:	4770      	bx	lr

0000147c <_usart_sync_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    147c:	6803      	ldr	r3, [r0, #0]
    147e:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    1480:	8519      	strh	r1, [r3, #40]	; 0x28
}
    1482:	4770      	bx	lr

00001484 <_usart_sync_read_byte>:
	return hri_sercomusart_read_DATA_reg(device->hw);
    1484:	6803      	ldr	r3, [r0, #0]
	return ((Sercom *)hw)->USART.DATA.reg;
    1486:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    1488:	b2c0      	uxtb	r0, r0
}
    148a:	4770      	bx	lr

0000148c <_usart_sync_is_ready_to_send>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
    148c:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    148e:	7e18      	ldrb	r0, [r3, #24]
    1490:	2301      	movs	r3, #1
    1492:	4018      	ands	r0, r3
}
    1494:	4770      	bx	lr

00001496 <_usart_sync_is_transmit_done>:
	return hri_sercomusart_get_interrupt_TXC_bit(device->hw);
    1496:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    1498:	7e18      	ldrb	r0, [r3, #24]
    149a:	0780      	lsls	r0, r0, #30
    149c:	0fc0      	lsrs	r0, r0, #31
}
    149e:	4770      	bx	lr

000014a0 <_usart_sync_is_byte_received>:
	return hri_sercomusart_get_interrupt_RXC_bit(device->hw);
    14a0:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    14a2:	7e18      	ldrb	r0, [r3, #24]
    14a4:	0740      	lsls	r0, r0, #29
    14a6:	0fc0      	lsrs	r0, r0, #31
}
    14a8:	4770      	bx	lr
	...

000014ac <_i2c_m_sync_init>:
{
    14ac:	b570      	push	{r4, r5, r6, lr}
    14ae:	0004      	movs	r4, r0
    14b0:	000d      	movs	r5, r1
	ASSERT(i2c_dev);
    14b2:	1e43      	subs	r3, r0, #1
    14b4:	4198      	sbcs	r0, r3
    14b6:	b2c0      	uxtb	r0, r0
    14b8:	4a04      	ldr	r2, [pc, #16]	; (14cc <_i2c_m_sync_init+0x20>)
    14ba:	4905      	ldr	r1, [pc, #20]	; (14d0 <_i2c_m_sync_init+0x24>)
    14bc:	4b05      	ldr	r3, [pc, #20]	; (14d4 <_i2c_m_sync_init+0x28>)
    14be:	4798      	blx	r3
	i2c_dev->hw = hw;
    14c0:	6125      	str	r5, [r4, #16]
	return _i2c_m_sync_init_impl(&i2c_dev->service, hw);
    14c2:	0029      	movs	r1, r5
    14c4:	0020      	movs	r0, r4
    14c6:	4b04      	ldr	r3, [pc, #16]	; (14d8 <_i2c_m_sync_init+0x2c>)
    14c8:	4798      	blx	r3
}
    14ca:	bd70      	pop	{r4, r5, r6, pc}
    14cc:	00000507 	.word	0x00000507
    14d0:	00009954 	.word	0x00009954
    14d4:	00000fa1 	.word	0x00000fa1
    14d8:	000012c5 	.word	0x000012c5

000014dc <_i2c_m_sync_enable>:
{
    14dc:	b570      	push	{r4, r5, r6, lr}
    14de:	0004      	movs	r4, r0
	ASSERT(i2c_dev);
    14e0:	4d1a      	ldr	r5, [pc, #104]	; (154c <_i2c_m_sync_enable+0x70>)
    14e2:	1e43      	subs	r3, r0, #1
    14e4:	4198      	sbcs	r0, r3
    14e6:	b2c0      	uxtb	r0, r0
    14e8:	4a19      	ldr	r2, [pc, #100]	; (1550 <_i2c_m_sync_enable+0x74>)
    14ea:	0029      	movs	r1, r5
    14ec:	4e19      	ldr	r6, [pc, #100]	; (1554 <_i2c_m_sync_enable+0x78>)
    14ee:	47b0      	blx	r6
	return _i2c_m_enable_implementation(i2c_dev->hw);
    14f0:	6924      	ldr	r4, [r4, #16]
	ASSERT(hw);
    14f2:	0020      	movs	r0, r4
    14f4:	1e43      	subs	r3, r0, #1
    14f6:	4198      	sbcs	r0, r3
    14f8:	b2c0      	uxtb	r0, r0
    14fa:	4a17      	ldr	r2, [pc, #92]	; (1558 <_i2c_m_sync_enable+0x7c>)
    14fc:	0029      	movs	r1, r5
    14fe:	47b0      	blx	r6
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    1500:	6823      	ldr	r3, [r4, #0]
    1502:	2202      	movs	r2, #2
    1504:	4313      	orrs	r3, r2
    1506:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1508:	3201      	adds	r2, #1
    150a:	69e3      	ldr	r3, [r4, #28]
    150c:	421a      	tst	r2, r3
    150e:	d1fc      	bne.n	150a <_i2c_m_sync_enable+0x2e>
    1510:	2504      	movs	r5, #4
    1512:	2204      	movs	r2, #4
}

static inline hri_sercomi2cm_status_reg_t hri_sercomi2cm_read_STATUS_BUSSTATE_bf(const void *const hw)
{
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SYSOP);
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    1514:	2003      	movs	r0, #3
}

static inline void hri_sercomi2cm_clear_STATUS_reg(const void *const hw, hri_sercomi2cm_status_reg_t mask)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.STATUS.reg = mask;
    1516:	2610      	movs	r6, #16
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1518:	4910      	ldr	r1, [pc, #64]	; (155c <_i2c_m_sync_enable+0x80>)
    151a:	69e3      	ldr	r3, [r4, #28]
    151c:	421a      	tst	r2, r3
    151e:	d1fc      	bne.n	151a <_i2c_m_sync_enable+0x3e>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    1520:	8b63      	ldrh	r3, [r4, #26]
    1522:	091b      	lsrs	r3, r3, #4
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
    1524:	4003      	ands	r3, r0
    1526:	2b01      	cmp	r3, #1
    1528:	d00a      	beq.n	1540 <_i2c_m_sync_enable+0x64>
    152a:	3901      	subs	r1, #1
		if (timeout <= 0) {
    152c:	2900      	cmp	r1, #0
    152e:	d1f4      	bne.n	151a <_i2c_m_sync_enable+0x3e>
    1530:	3d01      	subs	r5, #1
			if (--timeout_attempt)
    1532:	2d00      	cmp	r5, #0
    1534:	d006      	beq.n	1544 <_i2c_m_sync_enable+0x68>
	((Sercom *)hw)->I2CM.STATUS.reg = mask;
    1536:	8366      	strh	r6, [r4, #26]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1538:	69e3      	ldr	r3, [r4, #28]
    153a:	421a      	tst	r2, r3
    153c:	d1fc      	bne.n	1538 <_i2c_m_sync_enable+0x5c>
    153e:	e7eb      	b.n	1518 <_i2c_m_sync_enable+0x3c>
	return ERR_NONE;
    1540:	2000      	movs	r0, #0
}
    1542:	bd70      	pop	{r4, r5, r6, pc}
				return I2C_ERR_BUSY;
    1544:	2006      	movs	r0, #6
    1546:	4240      	negs	r0, r0
	return _i2c_m_enable_implementation(i2c_dev->hw);
    1548:	e7fb      	b.n	1542 <_i2c_m_sync_enable+0x66>
    154a:	46c0      	nop			; (mov r8, r8)
    154c:	00009954 	.word	0x00009954
    1550:	00000524 	.word	0x00000524
    1554:	00000fa1 	.word	0x00000fa1
    1558:	000005f4 	.word	0x000005f4
    155c:	0000ffff 	.word	0x0000ffff

00001560 <_i2c_m_sync_transfer>:
{
    1560:	b5f0      	push	{r4, r5, r6, r7, lr}
    1562:	46de      	mov	lr, fp
    1564:	4657      	mov	r7, sl
    1566:	464e      	mov	r6, r9
    1568:	4645      	mov	r5, r8
    156a:	b5e0      	push	{r5, r6, r7, lr}
    156c:	b083      	sub	sp, #12
    156e:	0005      	movs	r5, r0
    1570:	4688      	mov	r8, r1
	void *   hw = i2c_dev->hw;
    1572:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    1574:	0006      	movs	r6, r0
    1576:	1e73      	subs	r3, r6, #1
    1578:	419e      	sbcs	r6, r3
    157a:	b2f3      	uxtb	r3, r6
    157c:	9301      	str	r3, [sp, #4]
    157e:	4fb4      	ldr	r7, [pc, #720]	; (1850 <_i2c_m_sync_transfer+0x2f0>)
    1580:	4ab4      	ldr	r2, [pc, #720]	; (1854 <_i2c_m_sync_transfer+0x2f4>)
    1582:	0039      	movs	r1, r7
    1584:	0018      	movs	r0, r3
    1586:	4eb4      	ldr	r6, [pc, #720]	; (1858 <_i2c_m_sync_transfer+0x2f8>)
    1588:	47b0      	blx	r6
	ASSERT(i2c_dev->hw);
    158a:	6928      	ldr	r0, [r5, #16]
    158c:	1e43      	subs	r3, r0, #1
    158e:	4198      	sbcs	r0, r3
    1590:	b2c0      	uxtb	r0, r0
    1592:	22b8      	movs	r2, #184	; 0xb8
    1594:	00d2      	lsls	r2, r2, #3
    1596:	0039      	movs	r1, r7
    1598:	47b0      	blx	r6
	ASSERT(msg);
    159a:	4640      	mov	r0, r8
    159c:	1e43      	subs	r3, r0, #1
    159e:	4198      	sbcs	r0, r3
    15a0:	b2c0      	uxtb	r0, r0
    15a2:	4aae      	ldr	r2, [pc, #696]	; (185c <_i2c_m_sync_transfer+0x2fc>)
    15a4:	0039      	movs	r1, r7
    15a6:	47b0      	blx	r6
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    15a8:	886b      	ldrh	r3, [r5, #2]
    15aa:	05db      	lsls	r3, r3, #23
    15ac:	d500      	bpl.n	15b0 <_i2c_m_sync_transfer+0x50>
    15ae:	e224      	b.n	19fa <_i2c_m_sync_transfer+0x49a>
	msg->flags |= I2C_M_BUSY;
    15b0:	4643      	mov	r3, r8
    15b2:	885a      	ldrh	r2, [r3, #2]
    15b4:	2380      	movs	r3, #128	; 0x80
    15b6:	005b      	lsls	r3, r3, #1
    15b8:	431a      	orrs	r2, r3
    15ba:	4641      	mov	r1, r8
    15bc:	804a      	strh	r2, [r1, #2]
	i2c_dev->service.msg = *msg;
    15be:	002a      	movs	r2, r5
    15c0:	c9c1      	ldmia	r1!, {r0, r6, r7}
    15c2:	c2c1      	stmia	r2!, {r0, r6, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
    15c4:	6862      	ldr	r2, [r4, #4]
    15c6:	4313      	orrs	r3, r2
    15c8:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    15ca:	2204      	movs	r2, #4
    15cc:	69e3      	ldr	r3, [r4, #28]
    15ce:	421a      	tst	r2, r3
    15d0:	d1fc      	bne.n	15cc <_i2c_m_sync_transfer+0x6c>
	void *             hw    = i2c_dev->hw;
    15d2:	692f      	ldr	r7, [r5, #16]
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    15d4:	683b      	ldr	r3, [r7, #0]
    15d6:	4699      	mov	r9, r3
	ASSERT(i2c_dev);
    15d8:	4aa1      	ldr	r2, [pc, #644]	; (1860 <_i2c_m_sync_transfer+0x300>)
    15da:	499d      	ldr	r1, [pc, #628]	; (1850 <_i2c_m_sync_transfer+0x2f0>)
    15dc:	9801      	ldr	r0, [sp, #4]
    15de:	4b9e      	ldr	r3, [pc, #632]	; (1858 <_i2c_m_sync_transfer+0x2f8>)
    15e0:	4798      	blx	r3
	if (msg->len == 1 && sclsm) {
    15e2:	686b      	ldr	r3, [r5, #4]
    15e4:	2b01      	cmp	r3, #1
    15e6:	d05a      	beq.n	169e <_i2c_m_sync_transfer+0x13e>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    15e8:	687b      	ldr	r3, [r7, #4]
    15ea:	4a9e      	ldr	r2, [pc, #632]	; (1864 <_i2c_m_sync_transfer+0x304>)
    15ec:	4013      	ands	r3, r2
    15ee:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    15f0:	2204      	movs	r2, #4
    15f2:	69fb      	ldr	r3, [r7, #28]
    15f4:	421a      	tst	r2, r3
    15f6:	d1fc      	bne.n	15f2 <_i2c_m_sync_transfer+0x92>
	if (msg->addr & I2C_M_TEN) {
    15f8:	882b      	ldrh	r3, [r5, #0]
    15fa:	055a      	lsls	r2, r3, #21
    15fc:	d55c      	bpl.n	16b8 <_i2c_m_sync_transfer+0x158>
		if (msg->flags & I2C_M_RD) {
    15fe:	886a      	ldrh	r2, [r5, #2]
    1600:	07d2      	lsls	r2, r2, #31
    1602:	d504      	bpl.n	160e <_i2c_m_sync_transfer+0xae>
			msg->flags |= I2C_M_TEN;
    1604:	886a      	ldrh	r2, [r5, #2]
    1606:	2180      	movs	r1, #128	; 0x80
    1608:	00c9      	lsls	r1, r1, #3
    160a:	430a      	orrs	r2, r1
    160c:	806a      	strh	r2, [r5, #2]
		                              ((msg->addr & TEN_ADDR_MASK) << 1) | SERCOM_I2CM_ADDR_TENBITEN
    160e:	005b      	lsls	r3, r3, #1
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    1610:	4995      	ldr	r1, [pc, #596]	; (1868 <_i2c_m_sync_transfer+0x308>)
    1612:	4019      	ands	r1, r3
    1614:	2204      	movs	r2, #4
    1616:	69fb      	ldr	r3, [r7, #28]
    1618:	421a      	tst	r2, r3
    161a:	d1fc      	bne.n	1616 <_i2c_m_sync_transfer+0xb6>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    161c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    161e:	2280      	movs	r2, #128	; 0x80
    1620:	01d2      	lsls	r2, r2, #7
    1622:	401a      	ands	r2, r3
		hri_sercomi2cm_write_ADDR_reg(hw,
    1624:	2380      	movs	r3, #128	; 0x80
    1626:	021b      	lsls	r3, r3, #8
    1628:	4313      	orrs	r3, r2
    162a:	4319      	orrs	r1, r3
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    162c:	6279      	str	r1, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    162e:	2204      	movs	r2, #4
    1630:	69fb      	ldr	r3, [r7, #28]
    1632:	421a      	tst	r2, r3
    1634:	d1fc      	bne.n	1630 <_i2c_m_sync_transfer+0xd0>
	void *   hw      = i2c_dev->hw;
    1636:	6929      	ldr	r1, [r5, #16]
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    1638:	7e0b      	ldrb	r3, [r1, #24]
    163a:	b2db      	uxtb	r3, r3
    163c:	4a8b      	ldr	r2, [pc, #556]	; (186c <_i2c_m_sync_transfer+0x30c>)
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    163e:	2003      	movs	r0, #3
    1640:	4218      	tst	r0, r3
    1642:	d104      	bne.n	164e <_i2c_m_sync_transfer+0xee>
    1644:	7e0b      	ldrb	r3, [r1, #24]
    1646:	b2db      	uxtb	r3, r3
    1648:	3a01      	subs	r2, #1
		if (timeout-- == 0) {
    164a:	2a00      	cmp	r2, #0
    164c:	d1f8      	bne.n	1640 <_i2c_m_sync_transfer+0xe0>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    164e:	683e      	ldr	r6, [r7, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1650:	2104      	movs	r1, #4
    1652:	69fa      	ldr	r2, [r7, #28]
    1654:	4211      	tst	r1, r2
    1656:	d1fc      	bne.n	1652 <_i2c_m_sync_transfer+0xf2>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    1658:	8b7a      	ldrh	r2, [r7, #26]
    165a:	b292      	uxth	r2, r2
	if (flags & MB_FLAG) {
    165c:	07d9      	lsls	r1, r3, #31
    165e:	d400      	bmi.n	1662 <_i2c_m_sync_transfer+0x102>
    1660:	e0a0      	b.n	17a4 <_i2c_m_sync_transfer+0x244>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    1662:	0793      	lsls	r3, r2, #30
    1664:	d53e      	bpl.n	16e4 <_i2c_m_sync_transfer+0x184>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    1666:	2301      	movs	r3, #1
    1668:	763b      	strb	r3, [r7, #24]
			msg->flags |= I2C_M_FAIL;
    166a:	886b      	ldrh	r3, [r5, #2]
    166c:	2180      	movs	r1, #128	; 0x80
    166e:	0149      	lsls	r1, r1, #5
    1670:	430b      	orrs	r3, r1
    1672:	806b      	strh	r3, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    1674:	886b      	ldrh	r3, [r5, #2]
    1676:	497e      	ldr	r1, [pc, #504]	; (1870 <_i2c_m_sync_transfer+0x310>)
    1678:	400b      	ands	r3, r1
    167a:	806b      	strh	r3, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    167c:	2001      	movs	r0, #1
    167e:	0003      	movs	r3, r0
    1680:	4013      	ands	r3, r2
			return I2C_ERR_BAD_ADDRESS;
    1682:	4258      	negs	r0, r3
    1684:	4158      	adcs	r0, r3
    1686:	3805      	subs	r0, #5
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    1688:	886b      	ldrh	r3, [r5, #2]
    168a:	4a79      	ldr	r2, [pc, #484]	; (1870 <_i2c_m_sync_transfer+0x310>)
    168c:	4013      	ands	r3, r2
    168e:	806b      	strh	r3, [r5, #2]
}
    1690:	b003      	add	sp, #12
    1692:	bc3c      	pop	{r2, r3, r4, r5}
    1694:	4690      	mov	r8, r2
    1696:	4699      	mov	r9, r3
    1698:	46a2      	mov	sl, r4
    169a:	46ab      	mov	fp, r5
    169c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (msg->len == 1 && sclsm) {
    169e:	464b      	mov	r3, r9
    16a0:	011b      	lsls	r3, r3, #4
    16a2:	d5a1      	bpl.n	15e8 <_i2c_m_sync_transfer+0x88>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    16a4:	687a      	ldr	r2, [r7, #4]
    16a6:	2380      	movs	r3, #128	; 0x80
    16a8:	02db      	lsls	r3, r3, #11
    16aa:	4313      	orrs	r3, r2
    16ac:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    16ae:	2204      	movs	r2, #4
    16b0:	69fb      	ldr	r3, [r7, #28]
    16b2:	421a      	tst	r2, r3
    16b4:	d1fc      	bne.n	16b0 <_i2c_m_sync_transfer+0x150>
    16b6:	e79f      	b.n	15f8 <_i2c_m_sync_transfer+0x98>
		                              ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0)
    16b8:	886a      	ldrh	r2, [r5, #2]
    16ba:	005b      	lsls	r3, r3, #1
    16bc:	21ff      	movs	r1, #255	; 0xff
    16be:	400b      	ands	r3, r1
    16c0:	39fe      	subs	r1, #254	; 0xfe
    16c2:	4011      	ands	r1, r2
    16c4:	4319      	orrs	r1, r3
    16c6:	2204      	movs	r2, #4
    16c8:	69fb      	ldr	r3, [r7, #28]
    16ca:	421a      	tst	r2, r3
    16cc:	d1fc      	bne.n	16c8 <_i2c_m_sync_transfer+0x168>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    16ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    16d0:	2280      	movs	r2, #128	; 0x80
    16d2:	01d2      	lsls	r2, r2, #7
    16d4:	4013      	ands	r3, r2
		hri_sercomi2cm_write_ADDR_reg(hw,
    16d6:	430b      	orrs	r3, r1
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    16d8:	627b      	str	r3, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    16da:	2204      	movs	r2, #4
    16dc:	69fb      	ldr	r3, [r7, #28]
    16de:	421a      	tst	r2, r3
    16e0:	d1fc      	bne.n	16dc <_i2c_m_sync_transfer+0x17c>
    16e2:	e7a8      	b.n	1636 <_i2c_m_sync_transfer+0xd6>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    16e4:	0753      	lsls	r3, r2, #29
    16e6:	d41b      	bmi.n	1720 <_i2c_m_sync_transfer+0x1c0>
			if (msg->flags & I2C_M_TEN) {
    16e8:	886b      	ldrh	r3, [r5, #2]
    16ea:	055b      	lsls	r3, r3, #21
    16ec:	d535      	bpl.n	175a <_i2c_m_sync_transfer+0x1fa>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
    16ee:	882b      	ldrh	r3, [r5, #0]
    16f0:	09db      	lsrs	r3, r3, #7
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    16f2:	2106      	movs	r1, #6
    16f4:	4019      	ands	r1, r3
    16f6:	2204      	movs	r2, #4
    16f8:	69fb      	ldr	r3, [r7, #28]
    16fa:	421a      	tst	r2, r3
    16fc:	d1fc      	bne.n	16f8 <_i2c_m_sync_transfer+0x198>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    16fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1700:	2280      	movs	r2, #128	; 0x80
    1702:	01d2      	lsls	r2, r2, #7
    1704:	4013      	ands	r3, r2
				hri_sercomi2cm_write_ADDR_reg(hw,
    1706:	22f1      	movs	r2, #241	; 0xf1
    1708:	4313      	orrs	r3, r2
    170a:	430b      	orrs	r3, r1
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    170c:	627b      	str	r3, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    170e:	3aed      	subs	r2, #237	; 0xed
    1710:	69fb      	ldr	r3, [r7, #28]
    1712:	421a      	tst	r2, r3
    1714:	d1fc      	bne.n	1710 <_i2c_m_sync_transfer+0x1b0>
				msg->flags &= ~I2C_M_TEN;
    1716:	886b      	ldrh	r3, [r5, #2]
    1718:	4a56      	ldr	r2, [pc, #344]	; (1874 <_i2c_m_sync_transfer+0x314>)
    171a:	4013      	ands	r3, r2
    171c:	806b      	strh	r3, [r5, #2]
    171e:	e066      	b.n	17ee <_i2c_m_sync_transfer+0x28e>
				if (msg->len > 0) {
    1720:	686b      	ldr	r3, [r5, #4]
    1722:	2b00      	cmp	r3, #0
    1724:	dd04      	ble.n	1730 <_i2c_m_sync_transfer+0x1d0>
					msg->flags |= I2C_M_FAIL;
    1726:	886b      	ldrh	r3, [r5, #2]
    1728:	2280      	movs	r2, #128	; 0x80
    172a:	0152      	lsls	r2, r2, #5
    172c:	4313      	orrs	r3, r2
    172e:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    1730:	886b      	ldrh	r3, [r5, #2]
    1732:	b21b      	sxth	r3, r3
    1734:	2b00      	cmp	r3, #0
    1736:	db06      	blt.n	1746 <_i2c_m_sync_transfer+0x1e6>
				msg->flags &= ~I2C_M_BUSY;
    1738:	886b      	ldrh	r3, [r5, #2]
    173a:	4a4d      	ldr	r2, [pc, #308]	; (1870 <_i2c_m_sync_transfer+0x310>)
    173c:	4013      	ands	r3, r2
    173e:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    1740:	2002      	movs	r0, #2
    1742:	4240      	negs	r0, r0
    1744:	e7a0      	b.n	1688 <_i2c_m_sync_transfer+0x128>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1746:	687a      	ldr	r2, [r7, #4]
    1748:	23c0      	movs	r3, #192	; 0xc0
    174a:	029b      	lsls	r3, r3, #10
    174c:	4313      	orrs	r3, r2
    174e:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1750:	2304      	movs	r3, #4
    1752:	69fa      	ldr	r2, [r7, #28]
    1754:	4213      	tst	r3, r2
    1756:	d1fc      	bne.n	1752 <_i2c_m_sync_transfer+0x1f2>
    1758:	e7ee      	b.n	1738 <_i2c_m_sync_transfer+0x1d8>
			if (msg->len == 0) {
    175a:	686b      	ldr	r3, [r5, #4]
    175c:	2b00      	cmp	r3, #0
    175e:	d112      	bne.n	1786 <_i2c_m_sync_transfer+0x226>
				if (msg->flags & I2C_M_STOP) {
    1760:	886b      	ldrh	r3, [r5, #2]
    1762:	b21b      	sxth	r3, r3
    1764:	2b00      	cmp	r3, #0
    1766:	db04      	blt.n	1772 <_i2c_m_sync_transfer+0x212>
				msg->flags &= ~I2C_M_BUSY;
    1768:	886b      	ldrh	r3, [r5, #2]
    176a:	4a41      	ldr	r2, [pc, #260]	; (1870 <_i2c_m_sync_transfer+0x310>)
    176c:	4013      	ands	r3, r2
    176e:	806b      	strh	r3, [r5, #2]
    1770:	e03d      	b.n	17ee <_i2c_m_sync_transfer+0x28e>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1772:	687a      	ldr	r2, [r7, #4]
    1774:	23c0      	movs	r3, #192	; 0xc0
    1776:	029b      	lsls	r3, r3, #10
    1778:	4313      	orrs	r3, r2
    177a:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    177c:	2204      	movs	r2, #4
    177e:	69fb      	ldr	r3, [r7, #28]
    1780:	421a      	tst	r2, r3
    1782:	d1fc      	bne.n	177e <_i2c_m_sync_transfer+0x21e>
    1784:	e7f0      	b.n	1768 <_i2c_m_sync_transfer+0x208>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    1786:	68ab      	ldr	r3, [r5, #8]
    1788:	781a      	ldrb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    178a:	2328      	movs	r3, #40	; 0x28
    178c:	54fa      	strb	r2, [r7, r3]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    178e:	2204      	movs	r2, #4
    1790:	69fb      	ldr	r3, [r7, #28]
    1792:	421a      	tst	r2, r3
    1794:	d1fc      	bne.n	1790 <_i2c_m_sync_transfer+0x230>
				msg->buffer++;
    1796:	68ab      	ldr	r3, [r5, #8]
    1798:	3301      	adds	r3, #1
    179a:	60ab      	str	r3, [r5, #8]
				msg->len--;
    179c:	686b      	ldr	r3, [r5, #4]
    179e:	3b01      	subs	r3, #1
    17a0:	606b      	str	r3, [r5, #4]
    17a2:	e024      	b.n	17ee <_i2c_m_sync_transfer+0x28e>
	} else if (flags & SB_FLAG) {
    17a4:	079b      	lsls	r3, r3, #30
    17a6:	d522      	bpl.n	17ee <_i2c_m_sync_transfer+0x28e>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    17a8:	686b      	ldr	r3, [r5, #4]
    17aa:	2b00      	cmp	r3, #0
    17ac:	d040      	beq.n	1830 <_i2c_m_sync_transfer+0x2d0>
    17ae:	0752      	lsls	r2, r2, #29
    17b0:	d43e      	bmi.n	1830 <_i2c_m_sync_transfer+0x2d0>
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
    17b2:	0136      	lsls	r6, r6, #4
    17b4:	0ff6      	lsrs	r6, r6, #31
			msg->len--;
    17b6:	3b01      	subs	r3, #1
    17b8:	606b      	str	r3, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    17ba:	2b00      	cmp	r3, #0
    17bc:	d000      	beq.n	17c0 <_i2c_m_sync_transfer+0x260>
    17be:	e11f      	b.n	1a00 <_i2c_m_sync_transfer+0x4a0>
    17c0:	2e00      	cmp	r6, #0
    17c2:	d100      	bne.n	17c6 <_i2c_m_sync_transfer+0x266>
    17c4:	e122      	b.n	1a0c <_i2c_m_sync_transfer+0x4ac>
				if (msg->flags & I2C_M_STOP) {
    17c6:	886b      	ldrh	r3, [r5, #2]
    17c8:	b21b      	sxth	r3, r3
    17ca:	2b00      	cmp	r3, #0
    17cc:	db1d      	blt.n	180a <_i2c_m_sync_transfer+0x2aa>
				msg->flags &= ~I2C_M_BUSY;
    17ce:	886b      	ldrh	r3, [r5, #2]
    17d0:	4a27      	ldr	r2, [pc, #156]	; (1870 <_i2c_m_sync_transfer+0x310>)
    17d2:	4013      	ands	r3, r2
    17d4:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    17d6:	68a9      	ldr	r1, [r5, #8]
    17d8:	1c4b      	adds	r3, r1, #1
    17da:	60ab      	str	r3, [r5, #8]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    17dc:	2204      	movs	r2, #4
    17de:	69fb      	ldr	r3, [r7, #28]
    17e0:	421a      	tst	r2, r3
    17e2:	d1fc      	bne.n	17de <_i2c_m_sync_transfer+0x27e>
	return ((Sercom *)hw)->I2CM.DATA.reg;
    17e4:	2328      	movs	r3, #40	; 0x28
    17e6:	5cfb      	ldrb	r3, [r7, r3]
    17e8:	700b      	strb	r3, [r1, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    17ea:	2302      	movs	r3, #2
    17ec:	763b      	strb	r3, [r7, #24]
			return I2C_NACK;
    17ee:	2600      	movs	r6, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    17f0:	2380      	movs	r3, #128	; 0x80
    17f2:	005b      	lsls	r3, r3, #1
    17f4:	469a      	mov	sl, r3
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    17f6:	2103      	movs	r1, #3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    17f8:	2204      	movs	r2, #4
	if (flags & MB_FLAG) {
    17fa:	3bff      	subs	r3, #255	; 0xff
    17fc:	469c      	mov	ip, r3
	} else if (flags & SB_FLAG) {
    17fe:	3301      	adds	r3, #1
    1800:	4699      	mov	r9, r3
	return ((Sercom *)hw)->I2CM.DATA.reg;
    1802:	3326      	adds	r3, #38	; 0x26
    1804:	469b      	mov	fp, r3
    1806:	9601      	str	r6, [sp, #4]
    1808:	e0c2      	b.n	1990 <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    180a:	687b      	ldr	r3, [r7, #4]
    180c:	4a18      	ldr	r2, [pc, #96]	; (1870 <_i2c_m_sync_transfer+0x310>)
    180e:	4013      	ands	r3, r2
    1810:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1812:	3206      	adds	r2, #6
    1814:	32ff      	adds	r2, #255	; 0xff
    1816:	69fb      	ldr	r3, [r7, #28]
    1818:	421a      	tst	r2, r3
    181a:	d1fc      	bne.n	1816 <_i2c_m_sync_transfer+0x2b6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    181c:	687a      	ldr	r2, [r7, #4]
    181e:	23c0      	movs	r3, #192	; 0xc0
    1820:	029b      	lsls	r3, r3, #10
    1822:	4313      	orrs	r3, r2
    1824:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1826:	2204      	movs	r2, #4
    1828:	69fb      	ldr	r3, [r7, #28]
    182a:	421a      	tst	r2, r3
    182c:	d1fc      	bne.n	1828 <_i2c_m_sync_transfer+0x2c8>
    182e:	e7ce      	b.n	17ce <_i2c_m_sync_transfer+0x26e>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1830:	2302      	movs	r3, #2
    1832:	763b      	strb	r3, [r7, #24]
			return I2C_NACK;
    1834:	2002      	movs	r0, #2
    1836:	4240      	negs	r0, r0
    1838:	e726      	b.n	1688 <_i2c_m_sync_transfer+0x128>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    183a:	6862      	ldr	r2, [r4, #4]
    183c:	23c0      	movs	r3, #192	; 0xc0
    183e:	029b      	lsls	r3, r3, #10
    1840:	4313      	orrs	r3, r2
    1842:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1844:	2204      	movs	r2, #4
    1846:	69e3      	ldr	r3, [r4, #28]
    1848:	421a      	tst	r2, r3
    184a:	d1fc      	bne.n	1846 <_i2c_m_sync_transfer+0x2e6>
    184c:	e0b5      	b.n	19ba <_i2c_m_sync_transfer+0x45a>
    184e:	46c0      	nop			; (mov r8, r8)
    1850:	00009954 	.word	0x00009954
    1854:	000005bf 	.word	0x000005bf
    1858:	00000fa1 	.word	0x00000fa1
    185c:	000005c1 	.word	0x000005c1
    1860:	00000594 	.word	0x00000594
    1864:	fffbffff 	.word	0xfffbffff
    1868:	000007fe 	.word	0x000007fe
    186c:	0000ffff 	.word	0x0000ffff
    1870:	fffffeff 	.word	0xfffffeff
    1874:	fffffbff 	.word	0xfffffbff
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    1878:	4202      	tst	r2, r0
    187a:	d11b      	bne.n	18b4 <_i2c_m_sync_transfer+0x354>
			if (msg->flags & I2C_M_TEN) {
    187c:	886b      	ldrh	r3, [r5, #2]
    187e:	055b      	lsls	r3, r3, #21
    1880:	d535      	bpl.n	18ee <_i2c_m_sync_transfer+0x38e>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
    1882:	882b      	ldrh	r3, [r5, #0]
    1884:	09db      	lsrs	r3, r3, #7
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    1886:	2006      	movs	r0, #6
    1888:	4018      	ands	r0, r3
    188a:	69e3      	ldr	r3, [r4, #28]
    188c:	421a      	tst	r2, r3
    188e:	d1fc      	bne.n	188a <_i2c_m_sync_transfer+0x32a>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    1890:	6a63      	ldr	r3, [r4, #36]	; 0x24
    1892:	2680      	movs	r6, #128	; 0x80
    1894:	01f6      	lsls	r6, r6, #7
    1896:	4033      	ands	r3, r6
				hri_sercomi2cm_write_ADDR_reg(hw,
    1898:	26f1      	movs	r6, #241	; 0xf1
    189a:	4333      	orrs	r3, r6
    189c:	4303      	orrs	r3, r0
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    189e:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    18a0:	69e3      	ldr	r3, [r4, #28]
    18a2:	421a      	tst	r2, r3
    18a4:	d1fc      	bne.n	18a0 <_i2c_m_sync_transfer+0x340>
				msg->flags &= ~I2C_M_TEN;
    18a6:	886b      	ldrh	r3, [r5, #2]
    18a8:	4878      	ldr	r0, [pc, #480]	; (1a8c <_i2c_m_sync_transfer+0x52c>)
    18aa:	4003      	ands	r3, r0
    18ac:	806b      	strh	r3, [r5, #2]
				return I2C_OK;
    18ae:	2300      	movs	r3, #0
    18b0:	9301      	str	r3, [sp, #4]
    18b2:	e06d      	b.n	1990 <_i2c_m_sync_transfer+0x430>
				if (msg->len > 0) {
    18b4:	686b      	ldr	r3, [r5, #4]
    18b6:	2b00      	cmp	r3, #0
    18b8:	dd04      	ble.n	18c4 <_i2c_m_sync_transfer+0x364>
					msg->flags |= I2C_M_FAIL;
    18ba:	886b      	ldrh	r3, [r5, #2]
    18bc:	2080      	movs	r0, #128	; 0x80
    18be:	0140      	lsls	r0, r0, #5
    18c0:	4303      	orrs	r3, r0
    18c2:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    18c4:	886b      	ldrh	r3, [r5, #2]
    18c6:	b21b      	sxth	r3, r3
    18c8:	2b00      	cmp	r3, #0
    18ca:	db07      	blt.n	18dc <_i2c_m_sync_transfer+0x37c>
				msg->flags &= ~I2C_M_BUSY;
    18cc:	886b      	ldrh	r3, [r5, #2]
    18ce:	4870      	ldr	r0, [pc, #448]	; (1a90 <_i2c_m_sync_transfer+0x530>)
    18d0:	4003      	ands	r3, r0
    18d2:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    18d4:	2302      	movs	r3, #2
    18d6:	425b      	negs	r3, r3
    18d8:	9301      	str	r3, [sp, #4]
    18da:	e059      	b.n	1990 <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    18dc:	6860      	ldr	r0, [r4, #4]
    18de:	23c0      	movs	r3, #192	; 0xc0
    18e0:	029b      	lsls	r3, r3, #10
    18e2:	4303      	orrs	r3, r0
    18e4:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    18e6:	69e3      	ldr	r3, [r4, #28]
    18e8:	421a      	tst	r2, r3
    18ea:	d1fc      	bne.n	18e6 <_i2c_m_sync_transfer+0x386>
    18ec:	e7ee      	b.n	18cc <_i2c_m_sync_transfer+0x36c>
			if (msg->len == 0) {
    18ee:	686b      	ldr	r3, [r5, #4]
    18f0:	2b00      	cmp	r3, #0
    18f2:	d113      	bne.n	191c <_i2c_m_sync_transfer+0x3bc>
				if (msg->flags & I2C_M_STOP) {
    18f4:	886b      	ldrh	r3, [r5, #2]
    18f6:	b21b      	sxth	r3, r3
    18f8:	2b00      	cmp	r3, #0
    18fa:	db06      	blt.n	190a <_i2c_m_sync_transfer+0x3aa>
				msg->flags &= ~I2C_M_BUSY;
    18fc:	886b      	ldrh	r3, [r5, #2]
    18fe:	4864      	ldr	r0, [pc, #400]	; (1a90 <_i2c_m_sync_transfer+0x530>)
    1900:	4003      	ands	r3, r0
    1902:	806b      	strh	r3, [r5, #2]
			return I2C_OK;
    1904:	2300      	movs	r3, #0
    1906:	9301      	str	r3, [sp, #4]
    1908:	e042      	b.n	1990 <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    190a:	6860      	ldr	r0, [r4, #4]
    190c:	23c0      	movs	r3, #192	; 0xc0
    190e:	029b      	lsls	r3, r3, #10
    1910:	4303      	orrs	r3, r0
    1912:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1914:	69e3      	ldr	r3, [r4, #28]
    1916:	421a      	tst	r2, r3
    1918:	d1fc      	bne.n	1914 <_i2c_m_sync_transfer+0x3b4>
    191a:	e7ef      	b.n	18fc <_i2c_m_sync_transfer+0x39c>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    191c:	68ab      	ldr	r3, [r5, #8]
    191e:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    1920:	4658      	mov	r0, fp
    1922:	5423      	strb	r3, [r4, r0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1924:	69e3      	ldr	r3, [r4, #28]
    1926:	421a      	tst	r2, r3
    1928:	d1fc      	bne.n	1924 <_i2c_m_sync_transfer+0x3c4>
				msg->buffer++;
    192a:	68ab      	ldr	r3, [r5, #8]
    192c:	3301      	adds	r3, #1
    192e:	60ab      	str	r3, [r5, #8]
				msg->len--;
    1930:	686b      	ldr	r3, [r5, #4]
    1932:	3b01      	subs	r3, #1
    1934:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    1936:	2300      	movs	r3, #0
    1938:	9301      	str	r3, [sp, #4]
    193a:	e029      	b.n	1990 <_i2c_m_sync_transfer+0x430>
	return I2C_OK;
    193c:	2600      	movs	r6, #0
    193e:	9601      	str	r6, [sp, #4]
	} else if (flags & SB_FLAG) {
    1940:	464e      	mov	r6, r9
    1942:	421e      	tst	r6, r3
    1944:	d024      	beq.n	1990 <_i2c_m_sync_transfer+0x430>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    1946:	686b      	ldr	r3, [r5, #4]
    1948:	2b00      	cmp	r3, #0
    194a:	d04d      	beq.n	19e8 <_i2c_m_sync_transfer+0x488>
    194c:	4202      	tst	r2, r0
    194e:	d14b      	bne.n	19e8 <_i2c_m_sync_transfer+0x488>
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
    1950:	0eff      	lsrs	r7, r7, #27
    1952:	4660      	mov	r0, ip
    1954:	4007      	ands	r7, r0
			msg->len--;
    1956:	3b01      	subs	r3, #1
    1958:	606b      	str	r3, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    195a:	2b00      	cmp	r3, #0
    195c:	d000      	beq.n	1960 <_i2c_m_sync_transfer+0x400>
    195e:	e082      	b.n	1a66 <_i2c_m_sync_transfer+0x506>
    1960:	2f00      	cmp	r7, #0
    1962:	d100      	bne.n	1966 <_i2c_m_sync_transfer+0x406>
    1964:	e085      	b.n	1a72 <_i2c_m_sync_transfer+0x512>
				if (msg->flags & I2C_M_STOP) {
    1966:	886b      	ldrh	r3, [r5, #2]
    1968:	b21b      	sxth	r3, r3
    196a:	2b00      	cmp	r3, #0
    196c:	db2c      	blt.n	19c8 <_i2c_m_sync_transfer+0x468>
				msg->flags &= ~I2C_M_BUSY;
    196e:	886b      	ldrh	r3, [r5, #2]
    1970:	4847      	ldr	r0, [pc, #284]	; (1a90 <_i2c_m_sync_transfer+0x530>)
    1972:	4003      	ands	r3, r0
    1974:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    1976:	68a8      	ldr	r0, [r5, #8]
    1978:	1c43      	adds	r3, r0, #1
    197a:	60ab      	str	r3, [r5, #8]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    197c:	69e3      	ldr	r3, [r4, #28]
    197e:	421a      	tst	r2, r3
    1980:	d1fc      	bne.n	197c <_i2c_m_sync_transfer+0x41c>
	return ((Sercom *)hw)->I2CM.DATA.reg;
    1982:	465b      	mov	r3, fp
    1984:	5ce3      	ldrb	r3, [r4, r3]
    1986:	7003      	strb	r3, [r0, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1988:	464b      	mov	r3, r9
    198a:	7623      	strb	r3, [r4, #24]
	return I2C_OK;
    198c:	2300      	movs	r3, #0
    198e:	9301      	str	r3, [sp, #4]
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    1990:	886b      	ldrh	r3, [r5, #2]
    1992:	4650      	mov	r0, sl
    1994:	4203      	tst	r3, r0
    1996:	d02d      	beq.n	19f4 <_i2c_m_sync_transfer+0x494>
	void *   hw      = i2c_dev->hw;
    1998:	692e      	ldr	r6, [r5, #16]
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    199a:	7e33      	ldrb	r3, [r6, #24]
    199c:	b2db      	uxtb	r3, r3
    199e:	483d      	ldr	r0, [pc, #244]	; (1a94 <_i2c_m_sync_transfer+0x534>)
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    19a0:	4219      	tst	r1, r3
    19a2:	d141      	bne.n	1a28 <_i2c_m_sync_transfer+0x4c8>
    19a4:	7e33      	ldrb	r3, [r6, #24]
    19a6:	b2db      	uxtb	r3, r3
    19a8:	3801      	subs	r0, #1
		if (timeout-- == 0) {
    19aa:	2800      	cmp	r0, #0
    19ac:	d1f8      	bne.n	19a0 <_i2c_m_sync_transfer+0x440>
			if (msg->flags & I2C_M_STOP) {
    19ae:	4643      	mov	r3, r8
    19b0:	885b      	ldrh	r3, [r3, #2]
    19b2:	b21b      	sxth	r3, r3
    19b4:	2b00      	cmp	r3, #0
    19b6:	da00      	bge.n	19ba <_i2c_m_sync_transfer+0x45a>
    19b8:	e73f      	b.n	183a <_i2c_m_sync_transfer+0x2da>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    19ba:	886b      	ldrh	r3, [r5, #2]
    19bc:	4a34      	ldr	r2, [pc, #208]	; (1a90 <_i2c_m_sync_transfer+0x530>)
    19be:	4013      	ands	r3, r2
    19c0:	806b      	strh	r3, [r5, #2]
			return I2C_ERR_BUS;
    19c2:	2005      	movs	r0, #5
    19c4:	4240      	negs	r0, r0
			return ret;
    19c6:	e663      	b.n	1690 <_i2c_m_sync_transfer+0x130>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    19c8:	6863      	ldr	r3, [r4, #4]
    19ca:	4831      	ldr	r0, [pc, #196]	; (1a90 <_i2c_m_sync_transfer+0x530>)
    19cc:	4003      	ands	r3, r0
    19ce:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    19d0:	69e3      	ldr	r3, [r4, #28]
    19d2:	421a      	tst	r2, r3
    19d4:	d1fc      	bne.n	19d0 <_i2c_m_sync_transfer+0x470>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    19d6:	6860      	ldr	r0, [r4, #4]
    19d8:	23c0      	movs	r3, #192	; 0xc0
    19da:	029b      	lsls	r3, r3, #10
    19dc:	4303      	orrs	r3, r0
    19de:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    19e0:	69e3      	ldr	r3, [r4, #28]
    19e2:	421a      	tst	r2, r3
    19e4:	d1fc      	bne.n	19e0 <_i2c_m_sync_transfer+0x480>
    19e6:	e7c2      	b.n	196e <_i2c_m_sync_transfer+0x40e>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    19e8:	464b      	mov	r3, r9
    19ea:	7623      	strb	r3, [r4, #24]
			return I2C_NACK;
    19ec:	2302      	movs	r3, #2
    19ee:	425b      	negs	r3, r3
    19f0:	9301      	str	r3, [sp, #4]
    19f2:	e7cd      	b.n	1990 <_i2c_m_sync_transfer+0x430>
    19f4:	9e01      	ldr	r6, [sp, #4]
    19f6:	0030      	movs	r0, r6
    19f8:	e64a      	b.n	1690 <_i2c_m_sync_transfer+0x130>
		return I2C_ERR_BUSY;
    19fa:	2006      	movs	r0, #6
    19fc:	4240      	negs	r0, r0
    19fe:	e647      	b.n	1690 <_i2c_m_sync_transfer+0x130>
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1a00:	2b01      	cmp	r3, #1
    1a02:	d000      	beq.n	1a06 <_i2c_m_sync_transfer+0x4a6>
    1a04:	e6e7      	b.n	17d6 <_i2c_m_sync_transfer+0x276>
    1a06:	2e00      	cmp	r6, #0
    1a08:	d100      	bne.n	1a0c <_i2c_m_sync_transfer+0x4ac>
    1a0a:	e6e4      	b.n	17d6 <_i2c_m_sync_transfer+0x276>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1a0c:	687a      	ldr	r2, [r7, #4]
    1a0e:	2380      	movs	r3, #128	; 0x80
    1a10:	02db      	lsls	r3, r3, #11
    1a12:	4313      	orrs	r3, r2
    1a14:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a16:	2204      	movs	r2, #4
    1a18:	69fb      	ldr	r3, [r7, #28]
    1a1a:	421a      	tst	r2, r3
    1a1c:	d1fc      	bne.n	1a18 <_i2c_m_sync_transfer+0x4b8>
			if (msg->len == 0) {
    1a1e:	686b      	ldr	r3, [r5, #4]
    1a20:	2b00      	cmp	r3, #0
    1a22:	d100      	bne.n	1a26 <_i2c_m_sync_transfer+0x4c6>
    1a24:	e6cf      	b.n	17c6 <_i2c_m_sync_transfer+0x266>
    1a26:	e6d6      	b.n	17d6 <_i2c_m_sync_transfer+0x276>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1a28:	6827      	ldr	r7, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a2a:	69e0      	ldr	r0, [r4, #28]
    1a2c:	4202      	tst	r2, r0
    1a2e:	d1fc      	bne.n	1a2a <_i2c_m_sync_transfer+0x4ca>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    1a30:	8b60      	ldrh	r0, [r4, #26]
    1a32:	b280      	uxth	r0, r0
	if (flags & MB_FLAG) {
    1a34:	4666      	mov	r6, ip
    1a36:	421e      	tst	r6, r3
    1a38:	d100      	bne.n	1a3c <_i2c_m_sync_transfer+0x4dc>
    1a3a:	e77f      	b.n	193c <_i2c_m_sync_transfer+0x3dc>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    1a3c:	464b      	mov	r3, r9
    1a3e:	4203      	tst	r3, r0
    1a40:	d100      	bne.n	1a44 <_i2c_m_sync_transfer+0x4e4>
    1a42:	e719      	b.n	1878 <_i2c_m_sync_transfer+0x318>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    1a44:	7626      	strb	r6, [r4, #24]
			msg->flags |= I2C_M_FAIL;
    1a46:	886b      	ldrh	r3, [r5, #2]
    1a48:	2680      	movs	r6, #128	; 0x80
    1a4a:	0176      	lsls	r6, r6, #5
    1a4c:	4333      	orrs	r3, r6
    1a4e:	806b      	strh	r3, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    1a50:	886b      	ldrh	r3, [r5, #2]
    1a52:	4e0f      	ldr	r6, [pc, #60]	; (1a90 <_i2c_m_sync_transfer+0x530>)
    1a54:	4033      	ands	r3, r6
    1a56:	806b      	strh	r3, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    1a58:	4663      	mov	r3, ip
    1a5a:	4018      	ands	r0, r3
			return I2C_ERR_BAD_ADDRESS;
    1a5c:	4246      	negs	r6, r0
    1a5e:	4146      	adcs	r6, r0
    1a60:	1f73      	subs	r3, r6, #5
    1a62:	9301      	str	r3, [sp, #4]
    1a64:	e794      	b.n	1990 <_i2c_m_sync_transfer+0x430>
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1a66:	2b01      	cmp	r3, #1
    1a68:	d000      	beq.n	1a6c <_i2c_m_sync_transfer+0x50c>
    1a6a:	e784      	b.n	1976 <_i2c_m_sync_transfer+0x416>
    1a6c:	2f00      	cmp	r7, #0
    1a6e:	d100      	bne.n	1a72 <_i2c_m_sync_transfer+0x512>
    1a70:	e781      	b.n	1976 <_i2c_m_sync_transfer+0x416>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1a72:	6860      	ldr	r0, [r4, #4]
    1a74:	2380      	movs	r3, #128	; 0x80
    1a76:	02db      	lsls	r3, r3, #11
    1a78:	4303      	orrs	r3, r0
    1a7a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a7c:	69e3      	ldr	r3, [r4, #28]
    1a7e:	421a      	tst	r2, r3
    1a80:	d1fc      	bne.n	1a7c <_i2c_m_sync_transfer+0x51c>
			if (msg->len == 0) {
    1a82:	686b      	ldr	r3, [r5, #4]
    1a84:	2b00      	cmp	r3, #0
    1a86:	d100      	bne.n	1a8a <_i2c_m_sync_transfer+0x52a>
    1a88:	e76d      	b.n	1966 <_i2c_m_sync_transfer+0x406>
    1a8a:	e774      	b.n	1976 <_i2c_m_sync_transfer+0x416>
    1a8c:	fffffbff 	.word	0xfffffbff
    1a90:	fffffeff 	.word	0xfffffeff
    1a94:	0000ffff 	.word	0x0000ffff

00001a98 <_slcd_sync_set_segment>:
	return ERR_NONE;
}

static int32_t _slcd_sync_set_segment(struct _slcd_sync_device *dev, const uint32_t com, const uint32_t seg,
                                      const bool on)
{
    1a98:	b510      	push	{r4, lr}
	if ((SLCD_COMNUM(seg) >= CONF_SLCD_COM_NUM) || (SLCD_SEGNUM(seg) >= CONF_SLCD_SEG_NUM)) {
    1a9a:	0214      	lsls	r4, r2, #8
    1a9c:	0e24      	lsrs	r4, r4, #24
    1a9e:	2c04      	cmp	r4, #4
    1aa0:	d82d      	bhi.n	1afe <_slcd_sync_set_segment+0x66>
    1aa2:	24ff      	movs	r4, #255	; 0xff
    1aa4:	4014      	ands	r4, r2
    1aa6:	2c17      	cmp	r4, #23
    1aa8:	d82c      	bhi.n	1b04 <_slcd_sync_set_segment+0x6c>
		return ERR_INVALID_ARG;
	}
	/* Use register instead hri interface to optimization code */
	if (on) {
    1aaa:	2b00      	cmp	r3, #0
    1aac:	d012      	beq.n	1ad4 <_slcd_sync_set_segment+0x3c>
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
    1aae:	0954      	lsrs	r4, r2, #5
    1ab0:	6803      	ldr	r3, [r0, #0]
    1ab2:	3324      	adds	r3, #36	; 0x24
    1ab4:	0049      	lsls	r1, r1, #1
    1ab6:	1909      	adds	r1, r1, r4
    1ab8:	0089      	lsls	r1, r1, #2
		    |= (seg < 32) ? (1 << seg) : (1 << (seg >> 5));
    1aba:	1859      	adds	r1, r3, r1
    1abc:	6808      	ldr	r0, [r1, #0]
    1abe:	2a1f      	cmp	r2, #31
    1ac0:	d805      	bhi.n	1ace <_slcd_sync_set_segment+0x36>
    1ac2:	2301      	movs	r3, #1
    1ac4:	4093      	lsls	r3, r2
    1ac6:	4303      	orrs	r3, r0
    1ac8:	600b      	str	r3, [r1, #0]
	} else {
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
	}

	return ERR_NONE;
    1aca:	2000      	movs	r0, #0
}
    1acc:	bd10      	pop	{r4, pc}
		    |= (seg < 32) ? (1 << seg) : (1 << (seg >> 5));
    1ace:	2301      	movs	r3, #1
    1ad0:	40a3      	lsls	r3, r4
    1ad2:	e7f8      	b.n	1ac6 <_slcd_sync_set_segment+0x2e>
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
    1ad4:	0954      	lsrs	r4, r2, #5
    1ad6:	6803      	ldr	r3, [r0, #0]
    1ad8:	3324      	adds	r3, #36	; 0x24
    1ada:	0049      	lsls	r1, r1, #1
    1adc:	1909      	adds	r1, r1, r4
    1ade:	0089      	lsls	r1, r1, #2
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
    1ae0:	1859      	adds	r1, r3, r1
    1ae2:	6808      	ldr	r0, [r1, #0]
    1ae4:	2a1f      	cmp	r2, #31
    1ae6:	d806      	bhi.n	1af6 <_slcd_sync_set_segment+0x5e>
    1ae8:	2301      	movs	r3, #1
    1aea:	4093      	lsls	r3, r2
    1aec:	43db      	mvns	r3, r3
    1aee:	4003      	ands	r3, r0
    1af0:	600b      	str	r3, [r1, #0]
	return ERR_NONE;
    1af2:	2000      	movs	r0, #0
    1af4:	e7ea      	b.n	1acc <_slcd_sync_set_segment+0x34>
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
    1af6:	2201      	movs	r2, #1
    1af8:	40a2      	lsls	r2, r4
    1afa:	43d3      	mvns	r3, r2
    1afc:	e7f7      	b.n	1aee <_slcd_sync_set_segment+0x56>
		return ERR_INVALID_ARG;
    1afe:	200d      	movs	r0, #13
    1b00:	4240      	negs	r0, r0
    1b02:	e7e3      	b.n	1acc <_slcd_sync_set_segment+0x34>
    1b04:	200d      	movs	r0, #13
    1b06:	4240      	negs	r0, r0
    1b08:	e7e0      	b.n	1acc <_slcd_sync_set_segment+0x34>
	...

00001b0c <_slcd_sync_init>:
	};
}

static inline bool hri_slcd_is_syncing(const void *const hw, hri_slcd_syncbusy_reg_t reg)
{
	return ((Slcd *)hw)->SYNCBUSY.reg & reg;
    1b0c:	694b      	ldr	r3, [r1, #20]
	if (!hri_slcd_is_syncing(hw, SLCD_SYNCBUSY_SWRST)) {
    1b0e:	07db      	lsls	r3, r3, #31
    1b10:	d418      	bmi.n	1b44 <_slcd_sync_init+0x38>
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b12:	2203      	movs	r2, #3
    1b14:	694b      	ldr	r3, [r1, #20]
    1b16:	421a      	tst	r2, r3
    1b18:	d1fc      	bne.n	1b14 <_slcd_sync_init+0x8>

static inline bool hri_slcd_get_CTRLA_ENABLE_bit(const void *const hw)
{
	uint32_t tmp;
	hri_slcd_wait_for_sync(hw, SLCD_SYNCBUSY_SWRST | SLCD_SYNCBUSY_ENABLE);
	tmp = ((Slcd *)hw)->CTRLA.reg;
    1b1a:	680b      	ldr	r3, [r1, #0]
		if (hri_slcd_get_CTRLA_ENABLE_bit(hw)) {
    1b1c:	079b      	lsls	r3, r3, #30
    1b1e:	d50b      	bpl.n	1b38 <_slcd_sync_init+0x2c>
}

static inline void hri_slcd_clear_CTRLA_ENABLE_bit(const void *const hw)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1b20:	680b      	ldr	r3, [r1, #0]
    1b22:	2202      	movs	r2, #2
    1b24:	4393      	bics	r3, r2
    1b26:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b28:	3201      	adds	r2, #1
    1b2a:	694b      	ldr	r3, [r1, #20]
    1b2c:	421a      	tst	r2, r3
    1b2e:	d1fc      	bne.n	1b2a <_slcd_sync_init+0x1e>
    1b30:	2202      	movs	r2, #2
    1b32:	694b      	ldr	r3, [r1, #20]
    1b34:	421a      	tst	r2, r3
    1b36:	d1fc      	bne.n	1b32 <_slcd_sync_init+0x26>
}

static inline void hri_slcd_write_CTRLA_reg(const void *const hw, hri_slcd_ctrla_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLA.reg = data;
    1b38:	2301      	movs	r3, #1
    1b3a:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b3c:	2203      	movs	r2, #3
    1b3e:	694b      	ldr	r3, [r1, #20]
    1b40:	421a      	tst	r2, r3
    1b42:	d1fc      	bne.n	1b3e <_slcd_sync_init+0x32>
    1b44:	2201      	movs	r2, #1
    1b46:	694b      	ldr	r3, [r1, #20]
    1b48:	421a      	tst	r2, r3
    1b4a:	d1fc      	bne.n	1b46 <_slcd_sync_init+0x3a>
	dev->hw = hw;
    1b4c:	6001      	str	r1, [r0, #0]
	((Slcd *)hw)->CTRLA.reg = data;
    1b4e:	4b16      	ldr	r3, [pc, #88]	; (1ba8 <_slcd_sync_init+0x9c>)
    1b50:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b52:	2203      	movs	r2, #3
    1b54:	694b      	ldr	r3, [r1, #20]
    1b56:	421a      	tst	r2, r3
    1b58:	d1fc      	bne.n	1b54 <_slcd_sync_init+0x48>
}

static inline void hri_slcd_write_CTRLB_reg(const void *const hw, hri_slcd_ctrlb_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLB.reg = data;
    1b5a:	2381      	movs	r3, #129	; 0x81
    1b5c:	808b      	strh	r3, [r1, #4]
}

static inline void hri_slcd_write_CTRLC_reg(const void *const hw, hri_slcd_ctrlc_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLC.reg = data;
    1b5e:	3b01      	subs	r3, #1
    1b60:	80cb      	strh	r3, [r1, #6]
}

static inline void hri_slcd_write_CTRLD_reg(const void *const hw, hri_slcd_ctrld_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLD.reg = data;
    1b62:	720b      	strb	r3, [r1, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b64:	2207      	movs	r2, #7
    1b66:	694b      	ldr	r3, [r1, #20]
    1b68:	421a      	tst	r2, r3
    1b6a:	d1fc      	bne.n	1b66 <_slcd_sync_init+0x5a>
}

static inline void hri_slcd_write_LPENL_reg(const void *const hw, hri_slcd_lpenl_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->LPENL.reg = data;
    1b6c:	4b0f      	ldr	r3, [pc, #60]	; (1bac <_slcd_sync_init+0xa0>)
    1b6e:	61cb      	str	r3, [r1, #28]
}

static inline void hri_slcd_write_LPENH_reg(const void *const hw, hri_slcd_lpenh_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->LPENH.reg = data;
    1b70:	23ff      	movs	r3, #255	; 0xff
    1b72:	011b      	lsls	r3, r3, #4
    1b74:	620b      	str	r3, [r1, #32]
}

static inline void hri_slcd_write_SDATAL0_reg(const void *const hw, hri_slcd_sdatal0_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL0.reg = data;
    1b76:	2300      	movs	r3, #0
    1b78:	624b      	str	r3, [r1, #36]	; 0x24
}

static inline void hri_slcd_write_SDATAH0_reg(const void *const hw, hri_slcd_sdatah0_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH0.reg = data;
    1b7a:	628b      	str	r3, [r1, #40]	; 0x28
}

static inline void hri_slcd_write_SDATAL1_reg(const void *const hw, hri_slcd_sdatal1_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL1.reg = data;
    1b7c:	62cb      	str	r3, [r1, #44]	; 0x2c
}

static inline void hri_slcd_write_SDATAH1_reg(const void *const hw, hri_slcd_sdatah1_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH1.reg = data;
    1b7e:	630b      	str	r3, [r1, #48]	; 0x30
}

static inline void hri_slcd_write_SDATAL2_reg(const void *const hw, hri_slcd_sdatal2_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL2.reg = data;
    1b80:	634b      	str	r3, [r1, #52]	; 0x34
}

static inline void hri_slcd_write_SDATAH2_reg(const void *const hw, hri_slcd_sdatah2_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH2.reg = data;
    1b82:	638b      	str	r3, [r1, #56]	; 0x38
}

static inline void hri_slcd_write_SDATAL3_reg(const void *const hw, hri_slcd_sdatal3_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL3.reg = data;
    1b84:	63cb      	str	r3, [r1, #60]	; 0x3c
}

static inline void hri_slcd_write_SDATAH3_reg(const void *const hw, hri_slcd_sdatah3_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH3.reg = data;
    1b86:	640b      	str	r3, [r1, #64]	; 0x40
}

static inline void hri_slcd_write_SDATAL4_reg(const void *const hw, hri_slcd_sdatal4_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL4.reg = data;
    1b88:	644b      	str	r3, [r1, #68]	; 0x44
}

static inline void hri_slcd_write_SDATAH4_reg(const void *const hw, hri_slcd_sdatah4_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH4.reg = data;
    1b8a:	648b      	str	r3, [r1, #72]	; 0x48
}

static inline void hri_slcd_write_SDATAL5_reg(const void *const hw, hri_slcd_sdatal5_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL5.reg = data;
    1b8c:	64cb      	str	r3, [r1, #76]	; 0x4c
}

static inline void hri_slcd_write_SDATAH5_reg(const void *const hw, hri_slcd_sdatah5_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH5.reg = data;
    1b8e:	650b      	str	r3, [r1, #80]	; 0x50
}

static inline void hri_slcd_write_SDATAL6_reg(const void *const hw, hri_slcd_sdatal6_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL6.reg = data;
    1b90:	654b      	str	r3, [r1, #84]	; 0x54
}

static inline void hri_slcd_write_SDATAH6_reg(const void *const hw, hri_slcd_sdatah6_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH6.reg = data;
    1b92:	658b      	str	r3, [r1, #88]	; 0x58
}

static inline void hri_slcd_write_SDATAL7_reg(const void *const hw, hri_slcd_sdatal7_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL7.reg = data;
    1b94:	65cb      	str	r3, [r1, #92]	; 0x5c
}

static inline void hri_slcd_write_SDATAH7_reg(const void *const hw, hri_slcd_sdatah7_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH7.reg = data;
    1b96:	660b      	str	r3, [r1, #96]	; 0x60
	hri_slcd_set_BCFG_MODE_bit(dev->hw);
    1b98:	6802      	ldr	r2, [r0, #0]
}

static inline void hri_slcd_set_BCFG_MODE_bit(const void *const hw)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_MODE;
    1b9a:	6e93      	ldr	r3, [r2, #104]	; 0x68
    1b9c:	2101      	movs	r1, #1
    1b9e:	430b      	orrs	r3, r1
    1ba0:	6693      	str	r3, [r2, #104]	; 0x68
}
    1ba2:	2000      	movs	r0, #0
    1ba4:	4770      	bx	lr
    1ba6:	46c0      	nop			; (mov r8, r8)
    1ba8:	00033014 	.word	0x00033014
    1bac:	cfffffc0 	.word	0xcfffffc0

00001bb0 <_slcd_sync_enable>:
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1bb0:	6802      	ldr	r2, [r0, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1bb2:	6813      	ldr	r3, [r2, #0]
    1bb4:	2102      	movs	r1, #2
    1bb6:	430b      	orrs	r3, r1
    1bb8:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1bba:	3101      	adds	r1, #1
    1bbc:	6953      	ldr	r3, [r2, #20]
    1bbe:	4219      	tst	r1, r3
    1bc0:	d1fc      	bne.n	1bbc <_slcd_sync_enable+0xc>
}
    1bc2:	2000      	movs	r0, #0
    1bc4:	4770      	bx	lr
	...

00001bc8 <_slcd_sync_seg_on>:
{
    1bc8:	b510      	push	{r4, lr}
	return _slcd_sync_set_segment(dev, SLCD_COMNUM(seg), SLCD_SEGNUM(seg), true);
    1bca:	23ff      	movs	r3, #255	; 0xff
    1bcc:	001a      	movs	r2, r3
    1bce:	400a      	ands	r2, r1
    1bd0:	0c09      	lsrs	r1, r1, #16
    1bd2:	4019      	ands	r1, r3
    1bd4:	3bfe      	subs	r3, #254	; 0xfe
    1bd6:	4c01      	ldr	r4, [pc, #4]	; (1bdc <_slcd_sync_seg_on+0x14>)
    1bd8:	47a0      	blx	r4
}
    1bda:	bd10      	pop	{r4, pc}
    1bdc:	00001a99 	.word	0x00001a99

00001be0 <_slcd_sync_seg_blink>:
{
    1be0:	b5f0      	push	{r4, r5, r6, r7, lr}
    1be2:	46c6      	mov	lr, r8
    1be4:	b500      	push	{lr}
    1be6:	0004      	movs	r4, r0
	if ((SLCD_COMNUM(seg) >= CONF_SLCD_COM_NUM) || (SLCD_SEGNUM(seg) >= CONF_SLCD_SEG_NUM)) {
    1be8:	020d      	lsls	r5, r1, #8
    1bea:	0e2d      	lsrs	r5, r5, #24
    1bec:	2d04      	cmp	r5, #4
    1bee:	d900      	bls.n	1bf2 <_slcd_sync_seg_blink+0x12>
    1bf0:	e087      	b.n	1d02 <_slcd_sync_seg_blink+0x122>
    1bf2:	26ff      	movs	r6, #255	; 0xff
    1bf4:	400e      	ands	r6, r1
	if (SLCD_SEGNUM(seg) >= 2) {
    1bf6:	2e01      	cmp	r6, #1
    1bf8:	d900      	bls.n	1bfc <_slcd_sync_seg_blink+0x1c>
    1bfa:	e085      	b.n	1d08 <_slcd_sync_seg_blink+0x128>
	if (period > SLCD_FC_MAX_MS || period < SLCD_FC_MIN_MS) {
    1bfc:	4945      	ldr	r1, [pc, #276]	; (1d14 <_slcd_sync_seg_blink+0x134>)
    1bfe:	0013      	movs	r3, r2
    1c00:	3b0f      	subs	r3, #15
    1c02:	428b      	cmp	r3, r1
    1c04:	d900      	bls.n	1c08 <_slcd_sync_seg_blink+0x28>
    1c06:	e082      	b.n	1d0e <_slcd_sync_seg_blink+0x12e>
	hri_slcd_clear_CTRLD_FC0EN_bit(dev->hw);
    1c08:	6801      	ldr	r1, [r0, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_FC0EN;
    1c0a:	7a0b      	ldrb	r3, [r1, #8]
    1c0c:	2010      	movs	r0, #16
    1c0e:	4383      	bics	r3, r0
    1c10:	720b      	strb	r3, [r1, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c12:	2707      	movs	r7, #7
    1c14:	694b      	ldr	r3, [r1, #20]
    1c16:	421f      	tst	r7, r3
    1c18:	d1fc      	bne.n	1c14 <_slcd_sync_seg_blink+0x34>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_CTRLD);
    1c1a:	6827      	ldr	r7, [r4, #0]
    1c1c:	2104      	movs	r1, #4
    1c1e:	697b      	ldr	r3, [r7, #20]
    1c20:	4219      	tst	r1, r3
    1c22:	d1fc      	bne.n	1c1e <_slcd_sync_seg_blink+0x3e>
	if (period <= SLCD_FC_BYPASS_MAX_MS) {
    1c24:	23f0      	movs	r3, #240	; 0xf0
    1c26:	005b      	lsls	r3, r3, #1
    1c28:	429a      	cmp	r2, r3
    1c2a:	d853      	bhi.n	1cd4 <_slcd_sync_seg_blink+0xf4>
	((Slcd *)hw)->FC0.reg |= mask;
    1c2c:	7e38      	ldrb	r0, [r7, #24]
    1c2e:	b2c3      	uxtb	r3, r0
    1c30:	4698      	mov	r8, r3
		hri_slcd_set_FC0_reg(dev->hw, SLCD_FC0_PB | ((period / (1000 / SLCD_FRAME_FREQUENCY)) - 1));
    1c32:	210f      	movs	r1, #15
    1c34:	0010      	movs	r0, r2
    1c36:	4b38      	ldr	r3, [pc, #224]	; (1d18 <_slcd_sync_seg_blink+0x138>)
    1c38:	4798      	blx	r3
    1c3a:	1e43      	subs	r3, r0, #1
    1c3c:	2080      	movs	r0, #128	; 0x80
    1c3e:	4240      	negs	r0, r0
    1c40:	4642      	mov	r2, r8
    1c42:	4310      	orrs	r0, r2
    1c44:	4303      	orrs	r3, r0
    1c46:	b2db      	uxtb	r3, r3
    1c48:	763b      	strb	r3, [r7, #24]
	hri_slcd_set_CTRLD_FC0EN_bit(dev->hw);
    1c4a:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_FC0EN;
    1c4c:	7a13      	ldrb	r3, [r2, #8]
    1c4e:	2110      	movs	r1, #16
    1c50:	430b      	orrs	r3, r1
    1c52:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c54:	3909      	subs	r1, #9
    1c56:	6953      	ldr	r3, [r2, #20]
    1c58:	4219      	tst	r1, r3
    1c5a:	d1fc      	bne.n	1c56 <_slcd_sync_seg_blink+0x76>
	_slcd_sync_set_segment(dev, SLCD_COMNUM(seg), SLCD_SEGNUM(seg), true);
    1c5c:	2301      	movs	r3, #1
    1c5e:	0032      	movs	r2, r6
    1c60:	0029      	movs	r1, r5
    1c62:	0020      	movs	r0, r4
    1c64:	4f2d      	ldr	r7, [pc, #180]	; (1d1c <_slcd_sync_seg_blink+0x13c>)
    1c66:	47b8      	blx	r7
	hri_slcd_clear_CTRLD_BLINK_bit(dev->hw);
    1c68:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_BLINK;
    1c6a:	7a13      	ldrb	r3, [r2, #8]
    1c6c:	2102      	movs	r1, #2
    1c6e:	438b      	bics	r3, r1
    1c70:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c72:	3105      	adds	r1, #5
    1c74:	6953      	ldr	r3, [r2, #20]
    1c76:	4219      	tst	r1, r3
    1c78:	d1fc      	bne.n	1c74 <_slcd_sync_seg_blink+0x94>
	hri_slcd_clear_CTRLA_ENABLE_bit(dev->hw);
    1c7a:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1c7c:	6813      	ldr	r3, [r2, #0]
    1c7e:	2102      	movs	r1, #2
    1c80:	438b      	bics	r3, r1
    1c82:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c84:	3101      	adds	r1, #1
    1c86:	6953      	ldr	r3, [r2, #20]
    1c88:	4219      	tst	r1, r3
    1c8a:	d1fc      	bne.n	1c86 <_slcd_sync_seg_blink+0xa6>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_ENABLE);
    1c8c:	6822      	ldr	r2, [r4, #0]
    1c8e:	2102      	movs	r1, #2
    1c90:	6953      	ldr	r3, [r2, #20]
    1c92:	4219      	tst	r1, r3
    1c94:	d1fc      	bne.n	1c90 <_slcd_sync_seg_blink+0xb0>
	if (SLCD_SEGNUM(seg) == 0) {
    1c96:	2e00      	cmp	r6, #0
    1c98:	d129      	bne.n	1cee <_slcd_sync_seg_blink+0x10e>
}

static inline void hri_slcd_set_BCFG_BSS0_bf(const void *const hw, hri_slcd_bcfg_reg_t mask)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_BSS0(mask);
    1c9a:	6e91      	ldr	r1, [r2, #104]	; 0x68
		hri_slcd_set_BCFG_BSS0_bf(dev->hw, 1 << SLCD_COMNUM(seg));
    1c9c:	2380      	movs	r3, #128	; 0x80
    1c9e:	045b      	lsls	r3, r3, #17
    1ca0:	40ab      	lsls	r3, r5
    1ca2:	0c1b      	lsrs	r3, r3, #16
    1ca4:	430b      	orrs	r3, r1
    1ca6:	6693      	str	r3, [r2, #104]	; 0x68
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1ca8:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1caa:	6813      	ldr	r3, [r2, #0]
    1cac:	2102      	movs	r1, #2
    1cae:	430b      	orrs	r3, r1
    1cb0:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cb2:	3101      	adds	r1, #1
    1cb4:	6953      	ldr	r3, [r2, #20]
    1cb6:	4219      	tst	r1, r3
    1cb8:	d1fc      	bne.n	1cb4 <_slcd_sync_seg_blink+0xd4>
	hri_slcd_set_CTRLD_BLINK_bit(dev->hw);
    1cba:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_BLINK;
    1cbc:	7a13      	ldrb	r3, [r2, #8]
    1cbe:	2102      	movs	r1, #2
    1cc0:	430b      	orrs	r3, r1
    1cc2:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cc4:	3105      	adds	r1, #5
    1cc6:	6953      	ldr	r3, [r2, #20]
    1cc8:	4219      	tst	r1, r3
    1cca:	d1fc      	bne.n	1cc6 <_slcd_sync_seg_blink+0xe6>
	return ERR_NONE;
    1ccc:	2000      	movs	r0, #0
}
    1cce:	bc04      	pop	{r2}
    1cd0:	4690      	mov	r8, r2
    1cd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((Slcd *)hw)->FC0.reg |= mask;
    1cd4:	7e3b      	ldrb	r3, [r7, #24]
    1cd6:	b2db      	uxtb	r3, r3
    1cd8:	4698      	mov	r8, r3
		hri_slcd_set_FC0_reg(dev->hw, (((period / (1000 / SLCD_FRAME_FREQUENCY)) / 8 - 1)));
    1cda:	2178      	movs	r1, #120	; 0x78
    1cdc:	0010      	movs	r0, r2
    1cde:	4b0e      	ldr	r3, [pc, #56]	; (1d18 <_slcd_sync_seg_blink+0x138>)
    1ce0:	4798      	blx	r3
    1ce2:	3801      	subs	r0, #1
    1ce4:	4643      	mov	r3, r8
    1ce6:	4318      	orrs	r0, r3
    1ce8:	b2c0      	uxtb	r0, r0
    1cea:	7638      	strb	r0, [r7, #24]
    1cec:	e7ad      	b.n	1c4a <_slcd_sync_seg_blink+0x6a>
}

static inline void hri_slcd_set_BCFG_BSS1_bf(const void *const hw, hri_slcd_bcfg_reg_t mask)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_BSS1(mask);
    1cee:	6e91      	ldr	r1, [r2, #104]	; 0x68
		hri_slcd_set_BCFG_BSS1_bf(dev->hw, 1 << SLCD_COMNUM(seg));
    1cf0:	2380      	movs	r3, #128	; 0x80
    1cf2:	025b      	lsls	r3, r3, #9
    1cf4:	40ab      	lsls	r3, r5
    1cf6:	20ff      	movs	r0, #255	; 0xff
    1cf8:	0400      	lsls	r0, r0, #16
    1cfa:	4003      	ands	r3, r0
    1cfc:	430b      	orrs	r3, r1
    1cfe:	6693      	str	r3, [r2, #104]	; 0x68
    1d00:	e7d2      	b.n	1ca8 <_slcd_sync_seg_blink+0xc8>
		return ERR_INVALID_ARG;
    1d02:	200d      	movs	r0, #13
    1d04:	4240      	negs	r0, r0
    1d06:	e7e2      	b.n	1cce <_slcd_sync_seg_blink+0xee>
		return ERR_INVALID_ARG;
    1d08:	200d      	movs	r0, #13
    1d0a:	4240      	negs	r0, r0
    1d0c:	e7df      	b.n	1cce <_slcd_sync_seg_blink+0xee>
		return ERR_INVALID_ARG;
    1d0e:	200d      	movs	r0, #13
    1d10:	4240      	negs	r0, r0
    1d12:	e7dc      	b.n	1cce <_slcd_sync_seg_blink+0xee>
    1d14:	00000ef1 	.word	0x00000ef1
    1d18:	00002821 	.word	0x00002821
    1d1c:	00001a99 	.word	0x00001a99

00001d20 <_slcd_sync_write_char>:
{
    1d20:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d22:	46d6      	mov	lr, sl
    1d24:	464f      	mov	r7, r9
    1d26:	4646      	mov	r6, r8
    1d28:	b5c0      	push	{r6, r7, lr}
	if (cm_setting[index].size == 7) {
    1d2a:	0094      	lsls	r4, r2, #2
    1d2c:	4b3c      	ldr	r3, [pc, #240]	; (1e20 <_slcd_sync_write_char+0x100>)
    1d2e:	191b      	adds	r3, r3, r4
    1d30:	78dd      	ldrb	r5, [r3, #3]
    1d32:	2d07      	cmp	r5, #7
    1d34:	d004      	beq.n	1d40 <_slcd_sync_write_char+0x20>
	} else if (cm_setting[index].size == 14) {
    1d36:	2d0e      	cmp	r5, #14
    1d38:	d01a      	beq.n	1d70 <_slcd_sync_write_char+0x50>
		return ERR_INVALID_ARG;
    1d3a:	200d      	movs	r0, #13
    1d3c:	4240      	negs	r0, r0
    1d3e:	e060      	b.n	1e02 <_slcd_sync_write_char+0xe2>
			if (cm7_lut[i].character == character) {
    1d40:	2900      	cmp	r1, #0
    1d42:	d00d      	beq.n	1d60 <_slcd_sync_write_char+0x40>
    1d44:	2301      	movs	r3, #1
    1d46:	4f37      	ldr	r7, [pc, #220]	; (1e24 <_slcd_sync_write_char+0x104>)
    1d48:	2630      	movs	r6, #48	; 0x30
    1d4a:	009c      	lsls	r4, r3, #2
    1d4c:	193c      	adds	r4, r7, r4
    1d4e:	5da4      	ldrb	r4, [r4, r6]
    1d50:	428c      	cmp	r4, r1
    1d52:	d006      	beq.n	1d62 <_slcd_sync_write_char+0x42>
		for (i = 0; i<sizeof(cm7_lut)>> 2; i++) {
    1d54:	3301      	adds	r3, #1
    1d56:	2b11      	cmp	r3, #17
    1d58:	d1f7      	bne.n	1d4a <_slcd_sync_write_char+0x2a>
		return ERR_INVALID_ARG;
    1d5a:	200d      	movs	r0, #13
    1d5c:	4240      	negs	r0, r0
    1d5e:	e050      	b.n	1e02 <_slcd_sync_write_char+0xe2>
			if (cm7_lut[i].character == character) {
    1d60:	2300      	movs	r3, #0
				data = cm7_lut[i].mapping;
    1d62:	009b      	lsls	r3, r3, #2
    1d64:	492f      	ldr	r1, [pc, #188]	; (1e24 <_slcd_sync_write_char+0x104>)
    1d66:	18cb      	adds	r3, r1, r3
    1d68:	6b1c      	ldr	r4, [r3, #48]	; 0x30
    1d6a:	0a23      	lsrs	r3, r4, #8
    1d6c:	469c      	mov	ip, r3
				break;
    1d6e:	e016      	b.n	1d9e <_slcd_sync_write_char+0x7e>
			if (cm14_lut[i].character == character) {
    1d70:	2930      	cmp	r1, #48	; 0x30
    1d72:	d00d      	beq.n	1d90 <_slcd_sync_write_char+0x70>
    1d74:	2301      	movs	r3, #1
    1d76:	4f2b      	ldr	r7, [pc, #172]	; (1e24 <_slcd_sync_write_char+0x104>)
    1d78:	2674      	movs	r6, #116	; 0x74
    1d7a:	009c      	lsls	r4, r3, #2
    1d7c:	193c      	adds	r4, r7, r4
    1d7e:	5da4      	ldrb	r4, [r4, r6]
    1d80:	428c      	cmp	r4, r1
    1d82:	d006      	beq.n	1d92 <_slcd_sync_write_char+0x72>
		for (i = 0; i<sizeof(cm14_lut)>> 2; i++) {
    1d84:	3301      	adds	r3, #1
    1d86:	2b33      	cmp	r3, #51	; 0x33
    1d88:	d1f7      	bne.n	1d7a <_slcd_sync_write_char+0x5a>
		return ERR_INVALID_ARG;
    1d8a:	200d      	movs	r0, #13
    1d8c:	4240      	negs	r0, r0
    1d8e:	e038      	b.n	1e02 <_slcd_sync_write_char+0xe2>
			if (cm14_lut[i].character == character) {
    1d90:	2300      	movs	r3, #0
				data = cm14_lut[i].mapping;
    1d92:	009b      	lsls	r3, r3, #2
    1d94:	4923      	ldr	r1, [pc, #140]	; (1e24 <_slcd_sync_write_char+0x104>)
    1d96:	18cb      	adds	r3, r1, r3
    1d98:	6f5c      	ldr	r4, [r3, #116]	; 0x74
    1d9a:	0a23      	lsrs	r3, r4, #8
    1d9c:	469c      	mov	ip, r3

static inline void hri_slcd_write_CMCFG_NSEG_bf(const void *const hw, hri_slcd_cmcfg_reg_t data)
{
	uint8_t tmp;
	SLCD_CRITICAL_SECTION_ENTER();
	tmp = ((Slcd *)hw)->CMCFG.reg;
    1d9e:	2470      	movs	r4, #112	; 0x70
    1da0:	6803      	ldr	r3, [r0, #0]
    1da2:	5d1b      	ldrb	r3, [r3, r4]
	tmp &= ~SLCD_CMCFG_NSEG_Msk;
    1da4:	2607      	movs	r6, #7
    1da6:	43b3      	bics	r3, r6
	hri_slcd_write_CMCFG_NSEG_bf(dev->hw, cm_setting[index].nseg);
    1da8:	491d      	ldr	r1, [pc, #116]	; (1e20 <_slcd_sync_write_char+0x100>)
    1daa:	468a      	mov	sl, r1
    1dac:	0092      	lsls	r2, r2, #2
    1dae:	188f      	adds	r7, r1, r2
	tmp |= SLCD_CMCFG_NSEG(data);
    1db0:	78be      	ldrb	r6, [r7, #2]
    1db2:	46b1      	mov	r9, r6
    1db4:	2607      	movs	r6, #7
    1db6:	4649      	mov	r1, r9
    1db8:	400e      	ands	r6, r1
    1dba:	4333      	orrs	r3, r6
	((Slcd *)hw)->CMCFG.reg = tmp;
    1dbc:	6801      	ldr	r1, [r0, #0]
    1dbe:	550b      	strb	r3, [r1, r4]
	hri_slcd_write_CMINDEX_CINDEX_bf(dev->hw, cm_setting[index].com_index);
    1dc0:	6804      	ldr	r4, [r0, #0]

static inline void hri_slcd_write_CMINDEX_CINDEX_bf(const void *const hw, hri_slcd_cmindex_reg_t data)
{
	uint16_t tmp;
	SLCD_CRITICAL_SECTION_ENTER();
	tmp = ((Slcd *)hw)->CMINDEX.reg;
    1dc2:	2684      	movs	r6, #132	; 0x84
    1dc4:	5ba3      	ldrh	r3, [r4, r6]
	tmp &= ~SLCD_CMINDEX_CINDEX_Msk;
    1dc6:	4918      	ldr	r1, [pc, #96]	; (1e28 <_slcd_sync_write_char+0x108>)
    1dc8:	400b      	ands	r3, r1
    1dca:	4651      	mov	r1, sl
    1dcc:	5c52      	ldrb	r2, [r2, r1]
	tmp |= SLCD_CMINDEX_CINDEX(data);
    1dce:	0212      	lsls	r2, r2, #8
    1dd0:	21e0      	movs	r1, #224	; 0xe0
    1dd2:	00c9      	lsls	r1, r1, #3
    1dd4:	400a      	ands	r2, r1
    1dd6:	4313      	orrs	r3, r2
	((Slcd *)hw)->CMINDEX.reg = tmp;
    1dd8:	53a3      	strh	r3, [r4, r6]
	hri_slcd_write_CMINDEX_SINDEX_bf(dev->hw, cm_setting[index].seg_index);
    1dda:	6802      	ldr	r2, [r0, #0]
	tmp = ((Slcd *)hw)->CMINDEX.reg;
    1ddc:	5b93      	ldrh	r3, [r2, r6]
	tmp &= ~SLCD_CMINDEX_SINDEX_Msk;
    1dde:	213f      	movs	r1, #63	; 0x3f
    1de0:	438b      	bics	r3, r1
	tmp |= SLCD_CMINDEX_SINDEX(data);
    1de2:	787f      	ldrb	r7, [r7, #1]
    1de4:	4039      	ands	r1, r7
    1de6:	430b      	orrs	r3, r1
	((Slcd *)hw)->CMINDEX.reg = tmp;
    1de8:	5393      	strh	r3, [r2, r6]
	if (cm_setting[index].size == 7) {
    1dea:	2d07      	cmp	r5, #7
    1dec:	d00e      	beq.n	1e0c <_slcd_sync_write_char+0xec>
	} else if (cm_setting[index].size == 14) {
    1dee:	2d0e      	cmp	r5, #14
    1df0:	d011      	beq.n	1e16 <_slcd_sync_write_char+0xf6>
	while (hri_slcd_get_STATUS_CMWRBUSY_bit(dev->hw))
    1df2:	6802      	ldr	r2, [r0, #0]
    1df4:	2108      	movs	r1, #8
	return (((Slcd *)hw)->STATUS.reg & SLCD_STATUS_CMWRBUSY) >> SLCD_STATUS_CMWRBUSY_Pos;
    1df6:	7c13      	ldrb	r3, [r2, #16]
    1df8:	420b      	tst	r3, r1
    1dfa:	d1fc      	bne.n	1df6 <_slcd_sync_write_char+0xd6>
}

static inline void hri_slcd_write_CMDATA_reg(const void *const hw, hri_slcd_cmdata_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CMDATA.reg = data;
    1dfc:	4663      	mov	r3, ip
    1dfe:	67d3      	str	r3, [r2, #124]	; 0x7c
	return ERR_NONE;
    1e00:	2000      	movs	r0, #0
}
    1e02:	bc1c      	pop	{r2, r3, r4}
    1e04:	4690      	mov	r8, r2
    1e06:	4699      	mov	r9, r3
    1e08:	46a2      	mov	sl, r4
    1e0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((Slcd *)hw)->CMDMASK.reg = data;
    1e0c:	4a07      	ldr	r2, [pc, #28]	; (1e2c <_slcd_sync_write_char+0x10c>)
    1e0e:	2380      	movs	r3, #128	; 0x80
    1e10:	6801      	ldr	r1, [r0, #0]
    1e12:	50ca      	str	r2, [r1, r3]
    1e14:	e7ed      	b.n	1df2 <_slcd_sync_write_char+0xd2>
    1e16:	4a06      	ldr	r2, [pc, #24]	; (1e30 <_slcd_sync_write_char+0x110>)
    1e18:	2380      	movs	r3, #128	; 0x80
    1e1a:	6801      	ldr	r1, [r0, #0]
    1e1c:	50ca      	str	r2, [r1, r3]
    1e1e:	e7e8      	b.n	1df2 <_slcd_sync_write_char+0xd2>
    1e20:	00009970 	.word	0x00009970
    1e24:	000099f0 	.word	0x000099f0
    1e28:	fffff8ff 	.word	0xfffff8ff
    1e2c:	00ffff80 	.word	0x00ffff80
    1e30:	00ffc000 	.word	0x00ffc000

00001e34 <_slcd_sync_set_animation_period>:
{
    1e34:	b570      	push	{r4, r5, r6, lr}
    1e36:	0005      	movs	r5, r0
    1e38:	0008      	movs	r0, r1
	hri_slcd_clear_CTRLD_FC1EN_bit(dev->hw);
    1e3a:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_FC1EN;
    1e3c:	7a13      	ldrb	r3, [r2, #8]
    1e3e:	2120      	movs	r1, #32
    1e40:	438b      	bics	r3, r1
    1e42:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1e44:	3919      	subs	r1, #25
    1e46:	6953      	ldr	r3, [r2, #20]
    1e48:	4219      	tst	r1, r3
    1e4a:	d1fc      	bne.n	1e46 <_slcd_sync_set_animation_period+0x12>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_CTRLD);
    1e4c:	682c      	ldr	r4, [r5, #0]
    1e4e:	2204      	movs	r2, #4
    1e50:	6963      	ldr	r3, [r4, #20]
    1e52:	421a      	tst	r2, r3
    1e54:	d1fc      	bne.n	1e50 <_slcd_sync_set_animation_period+0x1c>
	if (period <= SLCD_FC_BYPASS_MAX_MS) {
    1e56:	23f0      	movs	r3, #240	; 0xf0
    1e58:	005b      	lsls	r3, r3, #1
    1e5a:	4298      	cmp	r0, r3
    1e5c:	d816      	bhi.n	1e8c <_slcd_sync_set_animation_period+0x58>
	((Slcd *)hw)->FC1.reg |= mask;
    1e5e:	7e66      	ldrb	r6, [r4, #25]
    1e60:	b2f6      	uxtb	r6, r6
		hri_slcd_set_FC1_reg(dev->hw, SLCD_FC1_PB | ((period / (1000 / SLCD_FRAME_FREQUENCY)) - 1));
    1e62:	210f      	movs	r1, #15
    1e64:	4b0e      	ldr	r3, [pc, #56]	; (1ea0 <_slcd_sync_set_animation_period+0x6c>)
    1e66:	4798      	blx	r3
    1e68:	3801      	subs	r0, #1
    1e6a:	4306      	orrs	r6, r0
    1e6c:	2380      	movs	r3, #128	; 0x80
    1e6e:	425b      	negs	r3, r3
    1e70:	4333      	orrs	r3, r6
    1e72:	b2db      	uxtb	r3, r3
    1e74:	7663      	strb	r3, [r4, #25]
	hri_slcd_set_CTRLD_FC1EN_bit(dev->hw);
    1e76:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_FC1EN;
    1e78:	7a13      	ldrb	r3, [r2, #8]
    1e7a:	2120      	movs	r1, #32
    1e7c:	430b      	orrs	r3, r1
    1e7e:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1e80:	3919      	subs	r1, #25
    1e82:	6953      	ldr	r3, [r2, #20]
    1e84:	4219      	tst	r1, r3
    1e86:	d1fc      	bne.n	1e82 <_slcd_sync_set_animation_period+0x4e>
}
    1e88:	2000      	movs	r0, #0
    1e8a:	bd70      	pop	{r4, r5, r6, pc}
	((Slcd *)hw)->FC1.reg |= mask;
    1e8c:	7e66      	ldrb	r6, [r4, #25]
    1e8e:	b2f6      	uxtb	r6, r6
		hri_slcd_set_FC1_reg(dev->hw, (((period / (1000 / SLCD_FRAME_FREQUENCY)) / 8 - 1)));
    1e90:	2178      	movs	r1, #120	; 0x78
    1e92:	4b03      	ldr	r3, [pc, #12]	; (1ea0 <_slcd_sync_set_animation_period+0x6c>)
    1e94:	4798      	blx	r3
    1e96:	3801      	subs	r0, #1
    1e98:	4306      	orrs	r6, r0
    1e9a:	b2f6      	uxtb	r6, r6
    1e9c:	7666      	strb	r6, [r4, #25]
    1e9e:	e7ea      	b.n	1e76 <_slcd_sync_set_animation_period+0x42>
    1ea0:	00002821 	.word	0x00002821

00001ea4 <_slcd_sync_start_animation>:
{
    1ea4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1ea6:	46ce      	mov	lr, r9
    1ea8:	4647      	mov	r7, r8
    1eaa:	b580      	push	{r7, lr}
    1eac:	0005      	movs	r5, r0
    1eae:	000e      	movs	r6, r1
    1eb0:	0014      	movs	r4, r2
	if (len > 16) {
    1eb2:	2a10      	cmp	r2, #16
    1eb4:	d900      	bls.n	1eb8 <_slcd_sync_start_animation+0x14>
    1eb6:	e08e      	b.n	1fd6 <_slcd_sync_start_animation+0x132>
	for (i = 0; i < len; i++) {
    1eb8:	2a00      	cmp	r2, #0
    1eba:	d012      	beq.n	1ee2 <_slcd_sync_start_animation+0x3e>
		if ((SLCD_SEGNUM(segs[i]) != 2 && SLCD_SEGNUM(segs[i]) != 3)) {
    1ebc:	780a      	ldrb	r2, [r1, #0]
    1ebe:	3a02      	subs	r2, #2
    1ec0:	2a01      	cmp	r2, #1
    1ec2:	d900      	bls.n	1ec6 <_slcd_sync_start_animation+0x22>
    1ec4:	e08a      	b.n	1fdc <_slcd_sync_start_animation+0x138>
    1ec6:	1d08      	adds	r0, r1, #4
    1ec8:	00a1      	lsls	r1, r4, #2
    1eca:	1871      	adds	r1, r6, r1
    1ecc:	27ff      	movs	r7, #255	; 0xff
	for (i = 0; i < len; i++) {
    1ece:	4288      	cmp	r0, r1
    1ed0:	d007      	beq.n	1ee2 <_slcd_sync_start_animation+0x3e>
		if ((SLCD_SEGNUM(segs[i]) != 2 && SLCD_SEGNUM(segs[i]) != 3)) {
    1ed2:	c804      	ldmia	r0!, {r2}
    1ed4:	403a      	ands	r2, r7
    1ed6:	3a02      	subs	r2, #2
    1ed8:	2a01      	cmp	r2, #1
    1eda:	d9f8      	bls.n	1ece <_slcd_sync_start_animation+0x2a>
			return ERR_INVALID_ARG;
    1edc:	200d      	movs	r0, #13
    1ede:	4240      	negs	r0, r0
    1ee0:	e075      	b.n	1fce <_slcd_sync_start_animation+0x12a>
	if (period > SLCD_FC_MAX_MS || period < SLCD_FC_MIN_MS) {
    1ee2:	4941      	ldr	r1, [pc, #260]	; (1fe8 <_slcd_sync_start_animation+0x144>)
    1ee4:	001a      	movs	r2, r3
    1ee6:	3a0f      	subs	r2, #15
    1ee8:	428a      	cmp	r2, r1
    1eea:	d900      	bls.n	1eee <_slcd_sync_start_animation+0x4a>
    1eec:	e079      	b.n	1fe2 <_slcd_sync_start_animation+0x13e>
	_slcd_sync_set_animation_period(dev, period);
    1eee:	0019      	movs	r1, r3
    1ef0:	0028      	movs	r0, r5
    1ef2:	4b3e      	ldr	r3, [pc, #248]	; (1fec <_slcd_sync_start_animation+0x148>)
    1ef4:	4798      	blx	r3
	hri_slcd_clear_CTRLA_ENABLE_bit(dev->hw);
    1ef6:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1ef8:	6813      	ldr	r3, [r2, #0]
    1efa:	2102      	movs	r1, #2
    1efc:	438b      	bics	r3, r1
    1efe:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1f00:	3101      	adds	r1, #1
    1f02:	6953      	ldr	r3, [r2, #20]
    1f04:	4219      	tst	r1, r3
    1f06:	d1fc      	bne.n	1f02 <_slcd_sync_start_animation+0x5e>
	hri_slcd_clear_CTRLD_CSREN_bit(dev->hw);
    1f08:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_CSREN;
    1f0a:	7a13      	ldrb	r3, [r2, #8]
    1f0c:	2104      	movs	r1, #4
    1f0e:	438b      	bics	r3, r1
    1f10:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1f12:	3103      	adds	r1, #3
    1f14:	6953      	ldr	r3, [r2, #20]
    1f16:	4219      	tst	r1, r3
    1f18:	d1fc      	bne.n	1f14 <_slcd_sync_start_animation+0x70>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_ENABLE | SLCD_SYNCBUSY_CTRLD);
    1f1a:	682a      	ldr	r2, [r5, #0]
    1f1c:	2106      	movs	r1, #6
    1f1e:	6953      	ldr	r3, [r2, #20]
    1f20:	4219      	tst	r1, r3
    1f22:	d1fc      	bne.n	1f1e <_slcd_sync_start_animation+0x7a>
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_FCS(mask);
    1f24:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
    1f26:	2102      	movs	r1, #2
    1f28:	430b      	orrs	r3, r1
    1f2a:	66d3      	str	r3, [r2, #108]	; 0x6c
	hri_slcd_write_CSRCFG_DATA_bf(dev->hw, 0);
    1f2c:	682a      	ldr	r2, [r5, #0]
	tmp = ((Slcd *)hw)->CSRCFG.reg;
    1f2e:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
	tmp &= ~SLCD_CSRCFG_DATA_Msk;
    1f30:	492f      	ldr	r1, [pc, #188]	; (1ff0 <_slcd_sync_start_animation+0x14c>)
    1f32:	400b      	ands	r3, r1
	((Slcd *)hw)->CSRCFG.reg = tmp;
    1f34:	66d3      	str	r3, [r2, #108]	; 0x6c
	for (i = 0; i < len; i++) {
    1f36:	2c00      	cmp	r4, #0
    1f38:	d029      	beq.n	1f8e <_slcd_sync_start_animation+0xea>
    1f3a:	0030      	movs	r0, r6
    1f3c:	00a4      	lsls	r4, r4, #2
    1f3e:	1931      	adds	r1, r6, r4
    1f40:	2400      	movs	r4, #0
		hri_slcd_set_CSRCFG_DATA_bf(dev->hw, (1 << ((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2))));
    1f42:	26ff      	movs	r6, #255	; 0xff
    1f44:	2301      	movs	r3, #1
    1f46:	469c      	mov	ip, r3
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_DATA(mask);
    1f48:	4b2a      	ldr	r3, [pc, #168]	; (1ff4 <_slcd_sync_start_animation+0x150>)
    1f4a:	4698      	mov	r8, r3
    1f4c:	e002      	b.n	1f54 <_slcd_sync_start_animation+0xb0>
    1f4e:	3004      	adds	r0, #4
	for (i = 0; i < len; i++) {
    1f50:	4288      	cmp	r0, r1
    1f52:	d01c      	beq.n	1f8e <_slcd_sync_start_animation+0xea>
		hri_slcd_set_CSRCFG_DATA_bf(dev->hw, (1 << ((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2))));
    1f54:	682f      	ldr	r7, [r5, #0]
    1f56:	6802      	ldr	r2, [r0, #0]
    1f58:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    1f5a:	4699      	mov	r9, r3
    1f5c:	0c13      	lsrs	r3, r2, #16
    1f5e:	4033      	ands	r3, r6
    1f60:	005b      	lsls	r3, r3, #1
    1f62:	4032      	ands	r2, r6
    1f64:	3a02      	subs	r2, #2
    1f66:	189a      	adds	r2, r3, r2
    1f68:	4663      	mov	r3, ip
    1f6a:	4093      	lsls	r3, r2
    1f6c:	021b      	lsls	r3, r3, #8
    1f6e:	4642      	mov	r2, r8
    1f70:	4013      	ands	r3, r2
    1f72:	464a      	mov	r2, r9
    1f74:	4313      	orrs	r3, r2
    1f76:	66fb      	str	r3, [r7, #108]	; 0x6c
		if (((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2)) > csrlen) {
    1f78:	6802      	ldr	r2, [r0, #0]
    1f7a:	0c13      	lsrs	r3, r2, #16
    1f7c:	4033      	ands	r3, r6
    1f7e:	005b      	lsls	r3, r3, #1
    1f80:	4032      	ands	r2, r6
    1f82:	3a02      	subs	r2, #2
    1f84:	189b      	adds	r3, r3, r2
    1f86:	429c      	cmp	r4, r3
    1f88:	d2e1      	bcs.n	1f4e <_slcd_sync_start_animation+0xaa>
    1f8a:	001c      	movs	r4, r3
    1f8c:	e7df      	b.n	1f4e <_slcd_sync_start_animation+0xaa>
	hri_slcd_set_CSRCFG_SIZE_bf(dev->hw, csrlen + 1);
    1f8e:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_SIZE(mask);
    1f90:	6ed1      	ldr	r1, [r2, #108]	; 0x6c
    1f92:	3401      	adds	r4, #1
    1f94:	0124      	lsls	r4, r4, #4
    1f96:	23ff      	movs	r3, #255	; 0xff
    1f98:	401c      	ands	r4, r3
    1f9a:	430c      	orrs	r4, r1
    1f9c:	66d4      	str	r4, [r2, #108]	; 0x6c
	hri_slcd_set_BCFG_MODE_bit(dev->hw);
    1f9e:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_MODE;
    1fa0:	6e93      	ldr	r3, [r2, #104]	; 0x68
    1fa2:	2101      	movs	r1, #1
    1fa4:	430b      	orrs	r3, r1
    1fa6:	6693      	str	r3, [r2, #104]	; 0x68
	hri_slcd_set_CTRLD_CSREN_bit(dev->hw);
    1fa8:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_CSREN;
    1faa:	7a13      	ldrb	r3, [r2, #8]
    1fac:	3103      	adds	r1, #3
    1fae:	430b      	orrs	r3, r1
    1fb0:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1fb2:	3103      	adds	r1, #3
    1fb4:	6953      	ldr	r3, [r2, #20]
    1fb6:	4219      	tst	r1, r3
    1fb8:	d1fc      	bne.n	1fb4 <_slcd_sync_start_animation+0x110>
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1fba:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1fbc:	6813      	ldr	r3, [r2, #0]
    1fbe:	2102      	movs	r1, #2
    1fc0:	430b      	orrs	r3, r1
    1fc2:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1fc4:	3101      	adds	r1, #1
    1fc6:	6953      	ldr	r3, [r2, #20]
    1fc8:	4219      	tst	r1, r3
    1fca:	d1fc      	bne.n	1fc6 <_slcd_sync_start_animation+0x122>
	return ERR_NONE;
    1fcc:	2000      	movs	r0, #0
}
    1fce:	bc0c      	pop	{r2, r3}
    1fd0:	4690      	mov	r8, r2
    1fd2:	4699      	mov	r9, r3
    1fd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return ERR_INVALID_ARG;
    1fd6:	200d      	movs	r0, #13
    1fd8:	4240      	negs	r0, r0
    1fda:	e7f8      	b.n	1fce <_slcd_sync_start_animation+0x12a>
			return ERR_INVALID_ARG;
    1fdc:	200d      	movs	r0, #13
    1fde:	4240      	negs	r0, r0
    1fe0:	e7f5      	b.n	1fce <_slcd_sync_start_animation+0x12a>
		return ERR_INVALID_ARG;
    1fe2:	200d      	movs	r0, #13
    1fe4:	4240      	negs	r0, r0
    1fe6:	e7f2      	b.n	1fce <_slcd_sync_start_animation+0x12a>
    1fe8:	00000ef1 	.word	0x00000ef1
    1fec:	00001e35 	.word	0x00001e35
    1ff0:	ff0000ff 	.word	0xff0000ff
    1ff4:	00ffff00 	.word	0x00ffff00

00001ff8 <main>:
  slcd_sync_write_char(&SEGMENT_LCD_0, '1', 1);
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"234", 3, 2);
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"abcdefgh", 8, 5);
}

int main(void) {
    1ff8:	b5f0      	push	{r4, r5, r6, r7, lr}
    1ffa:	b097      	sub	sp, #92	; 0x5c
  atmel_start_init();
    1ffc:	4b52      	ldr	r3, [pc, #328]	; (2148 <STACK_SIZE+0x148>)
    1ffe:	4798      	blx	r3
  adxl345_err_t err;
  adxl345_sample_t sample;
  adxl345_t adxl345;
  adxl345_dev_t adxl345_dev;

  err = adxl345_dev_init(&adxl345_dev, &ADXL345_0, ADXL345_I2C_PRIMARY_ADDRESS,
    2000:	2380      	movs	r3, #128	; 0x80
    2002:	011b      	lsls	r3, r3, #4
    2004:	2253      	movs	r2, #83	; 0x53
    2006:	4951      	ldr	r1, [pc, #324]	; (214c <STACK_SIZE+0x14c>)
    2008:	a80f      	add	r0, sp, #60	; 0x3c
    200a:	4c51      	ldr	r4, [pc, #324]	; (2150 <STACK_SIZE+0x150>)
    200c:	47a0      	blx	r4
    200e:	0001      	movs	r1, r0
                         I2C_M_SEVEN);
  printf("adxl345_dev_init() => %d\n", err);
    2010:	4850      	ldr	r0, [pc, #320]	; (2154 <STACK_SIZE+0x154>)
    2012:	4e51      	ldr	r6, [pc, #324]	; (2158 <STACK_SIZE+0x158>)
    2014:	47b0      	blx	r6
  err = adxl345_init(&adxl345, &adxl345_dev);
    2016:	a90f      	add	r1, sp, #60	; 0x3c
    2018:	a812      	add	r0, sp, #72	; 0x48
    201a:	4b50      	ldr	r3, [pc, #320]	; (215c <STACK_SIZE+0x15c>)
    201c:	4798      	blx	r3
    201e:	0001      	movs	r1, r0
  printf("adxl345_init() => %d\n", err);
    2020:	484f      	ldr	r0, [pc, #316]	; (2160 <STACK_SIZE+0x160>)
    2022:	47b0      	blx	r6

  /* Replace with your application code */
  slcd_sync_enable(&SEGMENT_LCD_0);
    2024:	4c4f      	ldr	r4, [pc, #316]	; (2164 <STACK_SIZE+0x164>)
    2026:	0020      	movs	r0, r4
    2028:	4b4f      	ldr	r3, [pc, #316]	; (2168 <STACK_SIZE+0x168>)
    202a:	4798      	blx	r3
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N0);
    202c:	21c0      	movs	r1, #192	; 0xc0
    202e:	0289      	lsls	r1, r1, #10
    2030:	0020      	movs	r0, r4
    2032:	4d4e      	ldr	r5, [pc, #312]	; (216c <STACK_SIZE+0x16c>)
    2034:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N1);
    2036:	2180      	movs	r1, #128	; 0x80
    2038:	02c9      	lsls	r1, r1, #11
    203a:	0020      	movs	r0, r4
    203c:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N2);
    203e:	21a0      	movs	r1, #160	; 0xa0
    2040:	02c9      	lsls	r1, r1, #11
    2042:	0020      	movs	r0, r4
    2044:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N3);
    2046:	21c0      	movs	r1, #192	; 0xc0
    2048:	02c9      	lsls	r1, r1, #11
    204a:	0020      	movs	r0, r4
    204c:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N4);
    204e:	21e0      	movs	r1, #224	; 0xe0
    2050:	02c9      	lsls	r1, r1, #11
    2052:	0020      	movs	r0, r4
    2054:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S0);
    2056:	2115      	movs	r1, #21
    2058:	0020      	movs	r0, r4
    205a:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S1);
    205c:	2114      	movs	r1, #20
    205e:	0020      	movs	r0, r4
    2060:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S2);
    2062:	2113      	movs	r1, #19
    2064:	0020      	movs	r0, r4
    2066:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S3);
    2068:	2116      	movs	r1, #22
    206a:	0020      	movs	r0, r4
    206c:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S4);
    206e:	210e      	movs	r1, #14
    2070:	0020      	movs	r0, r4
    2072:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S5);
    2074:	210d      	movs	r1, #13
    2076:	0020      	movs	r0, r4
    2078:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S6);
    207a:	210f      	movs	r1, #15
    207c:	0020      	movs	r0, r4
    207e:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S7);
    2080:	2117      	movs	r1, #23
    2082:	0020      	movs	r0, r4
    2084:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D01);
    2086:	2110      	movs	r1, #16
    2088:	0020      	movs	r0, r4
    208a:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D02);
    208c:	2111      	movs	r1, #17
    208e:	0020      	movs	r0, r4
    2090:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D03);
    2092:	2112      	movs	r1, #18
    2094:	0020      	movs	r0, r4
    2096:	47a8      	blx	r5
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B0, 1000);
    2098:	25fa      	movs	r5, #250	; 0xfa
    209a:	00ad      	lsls	r5, r5, #2
    209c:	002a      	movs	r2, r5
    209e:	2180      	movs	r1, #128	; 0x80
    20a0:	0249      	lsls	r1, r1, #9
    20a2:	0020      	movs	r0, r4
    20a4:	4f32      	ldr	r7, [pc, #200]	; (2170 <STACK_SIZE+0x170>)
    20a6:	47b8      	blx	r7
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B1, 1000);
    20a8:	002a      	movs	r2, r5
    20aa:	2180      	movs	r1, #128	; 0x80
    20ac:	0289      	lsls	r1, r1, #10
    20ae:	0020      	movs	r0, r4
    20b0:	47b8      	blx	r7
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B2, 1000);
    20b2:	002a      	movs	r2, r5
    20b4:	2100      	movs	r1, #0
    20b6:	0020      	movs	r0, r4
    20b8:	47b8      	blx	r7
  uint32_t segs[8] = {TSLCD_SEG_W0,  TSLCD_SEG_W1,  TSLCD_SEG_W2,
    20ba:	ab07      	add	r3, sp, #28
    20bc:	469c      	mov	ip, r3
    20be:	4b2d      	ldr	r3, [pc, #180]	; (2174 <STACK_SIZE+0x174>)
    20c0:	4662      	mov	r2, ip
    20c2:	cb83      	ldmia	r3!, {r0, r1, r7}
    20c4:	c283      	stmia	r2!, {r0, r1, r7}
    20c6:	cb83      	ldmia	r3!, {r0, r1, r7}
    20c8:	c283      	stmia	r2!, {r0, r1, r7}
    20ca:	cb03      	ldmia	r3!, {r0, r1}
    20cc:	c203      	stmia	r2!, {r0, r1}
  slcd_sync_start_animation(&SEGMENT_LCD_0, segs, 8, 1000);
    20ce:	002b      	movs	r3, r5
    20d0:	2208      	movs	r2, #8
    20d2:	4661      	mov	r1, ip
    20d4:	0020      	movs	r0, r4
    20d6:	4d28      	ldr	r5, [pc, #160]	; (2178 <STACK_SIZE+0x178>)
    20d8:	47a8      	blx	r5
  slcd_sync_write_char(&SEGMENT_LCD_0, '0', 0);
    20da:	2200      	movs	r2, #0
    20dc:	2130      	movs	r1, #48	; 0x30
    20de:	0020      	movs	r0, r4
    20e0:	4d26      	ldr	r5, [pc, #152]	; (217c <STACK_SIZE+0x17c>)
    20e2:	47a8      	blx	r5
  slcd_sync_write_char(&SEGMENT_LCD_0, '1', 1);
    20e4:	2201      	movs	r2, #1
    20e6:	2131      	movs	r1, #49	; 0x31
    20e8:	0020      	movs	r0, r4
    20ea:	47a8      	blx	r5
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"234", 3, 2);
    20ec:	2302      	movs	r3, #2
    20ee:	2203      	movs	r2, #3
    20f0:	4923      	ldr	r1, [pc, #140]	; (2180 <STACK_SIZE+0x180>)
    20f2:	0020      	movs	r0, r4
    20f4:	4d23      	ldr	r5, [pc, #140]	; (2184 <STACK_SIZE+0x184>)
    20f6:	47a8      	blx	r5
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"abcdefgh", 8, 5);
    20f8:	2305      	movs	r3, #5
    20fa:	2208      	movs	r2, #8
    20fc:	4922      	ldr	r1, [pc, #136]	; (2188 <STACK_SIZE+0x188>)
    20fe:	0020      	movs	r0, r4
    2100:	47a8      	blx	r5
  turn_on_segments();
  blink_segments();
  animation_segments();
  display_characters();

  err = adxl345_start(&adxl345);
    2102:	a812      	add	r0, sp, #72	; 0x48
    2104:	4b21      	ldr	r3, [pc, #132]	; (218c <STACK_SIZE+0x18c>)
    2106:	4798      	blx	r3
    2108:	0001      	movs	r1, r0
  printf("adxl345_start() => %d\n", err);
    210a:	4821      	ldr	r0, [pc, #132]	; (2190 <STACK_SIZE+0x190>)
    210c:	47b0      	blx	r6

  // Ensure that the measure bit is set...

  while (1) {
    err = adxl345_get_sample(&adxl345, &sample);
    210e:	4e21      	ldr	r6, [pc, #132]	; (2194 <STACK_SIZE+0x194>)
    printf("err: %d x=%6f, y=%6f, z=%6f\n", err, sample.x, sample.y, sample.z);
    2110:	4d21      	ldr	r5, [pc, #132]	; (2198 <STACK_SIZE+0x198>)
    2112:	4f22      	ldr	r7, [pc, #136]	; (219c <STACK_SIZE+0x19c>)
    err = adxl345_get_sample(&adxl345, &sample);
    2114:	a913      	add	r1, sp, #76	; 0x4c
    2116:	a812      	add	r0, sp, #72	; 0x48
    2118:	47b0      	blx	r6
    211a:	0004      	movs	r4, r0
    printf("err: %d x=%6f, y=%6f, z=%6f\n", err, sample.x, sample.y, sample.z);
    211c:	9813      	ldr	r0, [sp, #76]	; 0x4c
    211e:	47a8      	blx	r5
    2120:	9004      	str	r0, [sp, #16]
    2122:	9105      	str	r1, [sp, #20]
    2124:	9815      	ldr	r0, [sp, #84]	; 0x54
    2126:	47a8      	blx	r5
    2128:	9002      	str	r0, [sp, #8]
    212a:	9103      	str	r1, [sp, #12]
    212c:	9814      	ldr	r0, [sp, #80]	; 0x50
    212e:	47a8      	blx	r5
    2130:	9000      	str	r0, [sp, #0]
    2132:	9101      	str	r1, [sp, #4]
    2134:	9a04      	ldr	r2, [sp, #16]
    2136:	9b05      	ldr	r3, [sp, #20]
    2138:	0021      	movs	r1, r4
    213a:	0038      	movs	r0, r7
    213c:	4c06      	ldr	r4, [pc, #24]	; (2158 <STACK_SIZE+0x158>)
    213e:	47a0      	blx	r4
    delay_ms(250);
    2140:	20fa      	movs	r0, #250	; 0xfa
    2142:	4b17      	ldr	r3, [pc, #92]	; (21a0 <STACK_SIZE+0x1a0>)
    2144:	4798      	blx	r3
    2146:	e7e5      	b.n	2114 <STACK_SIZE+0x114>
    2148:	000002c5 	.word	0x000002c5
    214c:	20000ae8 	.word	0x20000ae8
    2150:	00000239 	.word	0x00000239
    2154:	00009b50 	.word	0x00009b50
    2158:	000043d1 	.word	0x000043d1
    215c:	0000011d 	.word	0x0000011d
    2160:	00009b6c 	.word	0x00009b6c
    2164:	20000ad8 	.word	0x20000ad8
    2168:	00000aa5 	.word	0x00000aa5
    216c:	00000acd 	.word	0x00000acd
    2170:	00000af9 	.word	0x00000af9
    2174:	00009b30 	.word	0x00009b30
    2178:	00000bd5 	.word	0x00000bd5
    217c:	00000b31 	.word	0x00000b31
    2180:	00009b84 	.word	0x00009b84
    2184:	00000b61 	.word	0x00000b61
    2188:	00009b88 	.word	0x00009b88
    218c:	00000181 	.word	0x00000181
    2190:	00009b94 	.word	0x00009b94
    2194:	000001b1 	.word	0x000001b1
    2198:	00003de9 	.word	0x00003de9
    219c:	00009bac 	.word	0x00009bac
    21a0:	000008d5 	.word	0x000008d5

000021a4 <touch_timer_handler>:
Input  : none
Output : none
Notes  :
============================================================================*/
void touch_timer_handler(void)
{
    21a4:	b510      	push	{r4, lr}
	/* Count complete - Measure touch sensors */
	time_to_measure_touch_flag = 1u;
    21a6:	2201      	movs	r2, #1
    21a8:	4b02      	ldr	r3, [pc, #8]	; (21b4 <touch_timer_handler+0x10>)
    21aa:	705a      	strb	r2, [r3, #1]
	qtm_update_qtlib_timer(DEF_TOUCH_MEASUREMENT_PERIOD_MS);
    21ac:	2014      	movs	r0, #20
    21ae:	4b02      	ldr	r3, [pc, #8]	; (21b8 <touch_timer_handler+0x14>)
    21b0:	4798      	blx	r3
}
    21b2:	bd10      	pop	{r4, pc}
    21b4:	20000a50 	.word	0x20000a50
    21b8:	00002369 	.word	0x00002369

000021bc <Timer_task_cb>:

void Timer_task_cb(const struct timer_task *const timer_task)
{
    21bc:	b510      	push	{r4, lr}
	touch_timer_handler();
    21be:	4b01      	ldr	r3, [pc, #4]	; (21c4 <Timer_task_cb+0x8>)
    21c0:	4798      	blx	r3
}
    21c2:	bd10      	pop	{r4, pc}
    21c4:	000021a5 	.word	0x000021a5

000021c8 <touch_timer_config>:

void touch_timer_config(void)
{
    21c8:	b510      	push	{r4, lr}
	static struct timer_task Timer_task;
#if (KRONO_GESTURE_ENABLE == 1u)
	Timer_task.interval = 1;
#else
	Timer_task.interval = DEF_TOUCH_MEASUREMENT_PERIOD_MS;
    21ca:	4908      	ldr	r1, [pc, #32]	; (21ec <touch_timer_config+0x24>)
    21cc:	2314      	movs	r3, #20
    21ce:	60cb      	str	r3, [r1, #12]
#endif
	Timer_task.cb   = Timer_task_cb;
    21d0:	4b07      	ldr	r3, [pc, #28]	; (21f0 <touch_timer_config+0x28>)
    21d2:	610b      	str	r3, [r1, #16]
	Timer_task.mode = TIMER_TASK_REPEAT;
    21d4:	2301      	movs	r3, #1
    21d6:	750b      	strb	r3, [r1, #20]

	timer_add_task(&Timer, &Timer_task);
    21d8:	3104      	adds	r1, #4
    21da:	4c06      	ldr	r4, [pc, #24]	; (21f4 <touch_timer_config+0x2c>)
    21dc:	0020      	movs	r0, r4
    21de:	4b06      	ldr	r3, [pc, #24]	; (21f8 <touch_timer_config+0x30>)
    21e0:	4798      	blx	r3
	timer_start(&Timer);
    21e2:	0020      	movs	r0, r4
    21e4:	4b05      	ldr	r3, [pc, #20]	; (21fc <touch_timer_config+0x34>)
    21e6:	4798      	blx	r3
}
    21e8:	bd10      	pop	{r4, pc}
    21ea:	46c0      	nop			; (mov r8, r8)
    21ec:	20000a50 	.word	0x20000a50
    21f0:	000021bd 	.word	0x000021bd
    21f4:	20000abc 	.word	0x20000abc
    21f8:	00000d99 	.word	0x00000d99
    21fc:	00000d5d 	.word	0x00000d5d

00002200 <touch_init>:
{
    2200:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	touch_timer_config();
    2202:	4b12      	ldr	r3, [pc, #72]	; (224c <touch_init+0x4c>)
    2204:	4798      	blx	r3
	qtm_ptc_init_acquisition_module(&qtlib_acq_set1);
    2206:	4812      	ldr	r0, [pc, #72]	; (2250 <touch_init+0x50>)
    2208:	4b12      	ldr	r3, [pc, #72]	; (2254 <touch_init+0x54>)
    220a:	4798      	blx	r3
	qtm_ptc_qtlib_assign_signal_memory(&touch_acq_signals_raw[0]);
    220c:	4812      	ldr	r0, [pc, #72]	; (2258 <touch_init+0x58>)
    220e:	4b13      	ldr	r3, [pc, #76]	; (225c <touch_init+0x5c>)
    2210:	4798      	blx	r3
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++)
    2212:	2400      	movs	r4, #0
		qtm_enable_sensor_node(&qtlib_acq_set1, sensor_nodes);
    2214:	4d0e      	ldr	r5, [pc, #56]	; (2250 <touch_init+0x50>)
    2216:	4f12      	ldr	r7, [pc, #72]	; (2260 <touch_init+0x60>)
		qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_nodes);
    2218:	4e12      	ldr	r6, [pc, #72]	; (2264 <touch_init+0x64>)
		qtm_enable_sensor_node(&qtlib_acq_set1, sensor_nodes);
    221a:	0021      	movs	r1, r4
    221c:	0028      	movs	r0, r5
    221e:	47b8      	blx	r7
		qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_nodes);
    2220:	0021      	movs	r1, r4
    2222:	0028      	movs	r0, r5
    2224:	47b0      	blx	r6
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++)
    2226:	3401      	adds	r4, #1
    2228:	b2a4      	uxth	r4, r4
    222a:	2c05      	cmp	r4, #5
    222c:	d1f5      	bne.n	221a <touch_init+0x1a>
    222e:	4d0e      	ldr	r5, [pc, #56]	; (2268 <touch_init+0x68>)
    2230:	2400      	movs	r4, #0
		qtm_init_sensor_key(&qtlib_key_set1, sensor_nodes, &ptc_qtlib_node_stat1[sensor_nodes]);
    2232:	4e07      	ldr	r6, [pc, #28]	; (2250 <touch_init+0x50>)
    2234:	360c      	adds	r6, #12
    2236:	4f0d      	ldr	r7, [pc, #52]	; (226c <touch_init+0x6c>)
    2238:	b2e1      	uxtb	r1, r4
    223a:	002a      	movs	r2, r5
    223c:	0030      	movs	r0, r6
    223e:	47b8      	blx	r7
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++) {
    2240:	3401      	adds	r4, #1
    2242:	b2a4      	uxth	r4, r4
    2244:	3506      	adds	r5, #6
    2246:	2c05      	cmp	r4, #5
    2248:	d1f6      	bne.n	2238 <touch_init+0x38>
}
    224a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    224c:	000021c9 	.word	0x000021c9
    2250:	20000000 	.word	0x20000000
    2254:	000025f9 	.word	0x000025f9
    2258:	20000b30 	.word	0x20000b30
    225c:	000026c1 	.word	0x000026c1
    2260:	000026d5 	.word	0x000026d5
    2264:	000026f5 	.word	0x000026f5
    2268:	20000b10 	.word	0x20000b10
    226c:	00002379 	.word	0x00002379

00002270 <PTC_Handler>:
Input  : none
Output : none
Notes  : none
============================================================================*/
void PTC_Handler(void)
{
    2270:	b510      	push	{r4, lr}
	qtm_ptc_clear_interrupt();
    2272:	4b02      	ldr	r3, [pc, #8]	; (227c <PTC_Handler+0xc>)
    2274:	4798      	blx	r3
	qtm_saml22_ptc_handler_eoc();
    2276:	4b02      	ldr	r3, [pc, #8]	; (2280 <PTC_Handler+0x10>)
    2278:	4798      	blx	r3
}
    227a:	bd10      	pop	{r4, pc}
    227c:	00002745 	.word	0x00002745
    2280:	00002769 	.word	0x00002769

00002284 <_read>:
#include <stdio.h>

int __attribute__((weak)) _read(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _read(int file, char *ptr, int len)
{
    2284:	b510      	push	{r4, lr}
    2286:	000b      	movs	r3, r1
	int n = 0;

	if (file != 0) {
    2288:	2800      	cmp	r0, #0
    228a:	d109      	bne.n	22a0 <_read+0x1c>
		return -1;
	}

	n = stdio_io_read((uint8_t *)ptr, len);
    228c:	0011      	movs	r1, r2
    228e:	0018      	movs	r0, r3
    2290:	4b05      	ldr	r3, [pc, #20]	; (22a8 <_read+0x24>)
    2292:	4798      	blx	r3
    2294:	2800      	cmp	r0, #0
    2296:	db00      	blt.n	229a <_read+0x16>
	if (n < 0) {
		return -1;
	}

	return n;
}
    2298:	bd10      	pop	{r4, pc}
    229a:	2001      	movs	r0, #1
    229c:	4240      	negs	r0, r0
    229e:	e7fb      	b.n	2298 <_read+0x14>
		return -1;
    22a0:	2001      	movs	r0, #1
    22a2:	4240      	negs	r0, r0
    22a4:	e7f8      	b.n	2298 <_read+0x14>
    22a6:	46c0      	nop			; (mov r8, r8)
    22a8:	00002301 	.word	0x00002301

000022ac <_write>:
#include <stdio.h>

int __attribute__((weak)) _write(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _write(int file, char *ptr, int len)
{
    22ac:	b510      	push	{r4, lr}
    22ae:	000b      	movs	r3, r1
	int n = 0;

	if ((file != 1) && (file != 2) && (file != 3)) {
    22b0:	3801      	subs	r0, #1
    22b2:	2802      	cmp	r0, #2
    22b4:	d809      	bhi.n	22ca <_write+0x1e>
		return -1;
	}

	n = stdio_io_write((const uint8_t *)ptr, len);
    22b6:	0011      	movs	r1, r2
    22b8:	0018      	movs	r0, r3
    22ba:	4b05      	ldr	r3, [pc, #20]	; (22d0 <_write+0x24>)
    22bc:	4798      	blx	r3
    22be:	2800      	cmp	r0, #0
    22c0:	db00      	blt.n	22c4 <_write+0x18>
	if (n < 0) {
		return -1;
	}

	return n;
}
    22c2:	bd10      	pop	{r4, pc}
    22c4:	2001      	movs	r0, #1
    22c6:	4240      	negs	r0, r0
    22c8:	e7fb      	b.n	22c2 <_write+0x16>
		return -1;
    22ca:	2001      	movs	r0, #1
    22cc:	4240      	negs	r0, r0
    22ce:	e7f8      	b.n	22c2 <_write+0x16>
    22d0:	00002325 	.word	0x00002325

000022d4 <stdio_io_init>:

/** IO descriptor for STDIO access. */
static struct io_descriptor *stdio_io = NULL;

void stdio_io_init(struct io_descriptor *io)
{
    22d4:	b570      	push	{r4, r5, r6, lr}
    22d6:	0006      	movs	r6, r0
#if defined(__GNUC__)
	/* Specify that stdout and stdin should not be buffered. */
	setbuf(stdout, NULL);
    22d8:	4d06      	ldr	r5, [pc, #24]	; (22f4 <stdio_io_init+0x20>)
    22da:	682b      	ldr	r3, [r5, #0]
    22dc:	6898      	ldr	r0, [r3, #8]
    22de:	2100      	movs	r1, #0
    22e0:	4c05      	ldr	r4, [pc, #20]	; (22f8 <stdio_io_init+0x24>)
    22e2:	47a0      	blx	r4
	setbuf(stdin, NULL);
    22e4:	682b      	ldr	r3, [r5, #0]
    22e6:	6858      	ldr	r0, [r3, #4]
    22e8:	2100      	movs	r1, #0
    22ea:	47a0      	blx	r4
	 * and AVR GCC library:
	 * - printf() emits one character at a time.
	 * - getchar() requests only 1 byte to exit.
	 */
#endif
	stdio_io = io;
    22ec:	4b03      	ldr	r3, [pc, #12]	; (22fc <stdio_io_init+0x28>)
    22ee:	601e      	str	r6, [r3, #0]
}
    22f0:	bd70      	pop	{r4, r5, r6, pc}
    22f2:	46c0      	nop			; (mov r8, r8)
    22f4:	2000007c 	.word	0x2000007c
    22f8:	000043f5 	.word	0x000043f5
    22fc:	20000a68 	.word	0x20000a68

00002300 <stdio_io_read>:
{
	stdio_io = io;
}

int32_t stdio_io_read(uint8_t *buf, const int32_t len)
{
    2300:	b510      	push	{r4, lr}
    2302:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    2304:	4b05      	ldr	r3, [pc, #20]	; (231c <stdio_io_read+0x1c>)
    2306:	6818      	ldr	r0, [r3, #0]
    2308:	2800      	cmp	r0, #0
    230a:	d004      	beq.n	2316 <stdio_io_read+0x16>
		return 0;
	}
	return io_read(stdio_io, buf, len);
    230c:	b28a      	uxth	r2, r1
    230e:	0021      	movs	r1, r4
    2310:	4b03      	ldr	r3, [pc, #12]	; (2320 <stdio_io_read+0x20>)
    2312:	4798      	blx	r3
}
    2314:	bd10      	pop	{r4, pc}
		return 0;
    2316:	2000      	movs	r0, #0
    2318:	e7fc      	b.n	2314 <stdio_io_read+0x14>
    231a:	46c0      	nop			; (mov r8, r8)
    231c:	20000a68 	.word	0x20000a68
    2320:	00000a3d 	.word	0x00000a3d

00002324 <stdio_io_write>:

int32_t stdio_io_write(const uint8_t *buf, const int32_t len)
{
    2324:	b510      	push	{r4, lr}
    2326:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    2328:	4b05      	ldr	r3, [pc, #20]	; (2340 <stdio_io_write+0x1c>)
    232a:	6818      	ldr	r0, [r3, #0]
    232c:	2800      	cmp	r0, #0
    232e:	d004      	beq.n	233a <stdio_io_write+0x16>
		return 0;
	}
	return io_write(stdio_io, buf, len);
    2330:	b28a      	uxth	r2, r1
    2332:	0021      	movs	r1, r4
    2334:	4b03      	ldr	r3, [pc, #12]	; (2344 <stdio_io_write+0x20>)
    2336:	4798      	blx	r3
}
    2338:	bd10      	pop	{r4, pc}
		return 0;
    233a:	2000      	movs	r0, #0
    233c:	e7fc      	b.n	2338 <stdio_io_write+0x14>
    233e:	46c0      	nop			; (mov r8, r8)
    2340:	20000a68 	.word	0x20000a68
    2344:	00000a09 	.word	0x00000a09

00002348 <stdio_redirect_init>:
	/* Print welcome message */
	printf("\r\nHello ATMEL World!\r\n");
}

void stdio_redirect_init(void)
{
    2348:	b510      	push	{r4, lr}

	usart_sync_enable(&EDBG_0);
    234a:	4c04      	ldr	r4, [pc, #16]	; (235c <stdio_redirect_init+0x14>)
    234c:	0020      	movs	r0, r4
    234e:	4b04      	ldr	r3, [pc, #16]	; (2360 <stdio_redirect_init+0x18>)
    2350:	4798      	blx	r3
	stdio_io_init(&EDBG_0.io);
    2352:	0020      	movs	r0, r4
    2354:	4b03      	ldr	r3, [pc, #12]	; (2364 <stdio_redirect_init+0x1c>)
    2356:	4798      	blx	r3
}
    2358:	bd10      	pop	{r4, pc}
    235a:	46c0      	nop			; (mov r8, r8)
    235c:	20000adc 	.word	0x20000adc
    2360:	00000f75 	.word	0x00000f75
    2364:	000022d5 	.word	0x000022d5

00002368 <qtm_update_qtlib_timer>:
    2368:	4a02      	ldr	r2, [pc, #8]	; (2374 <qtm_update_qtlib_timer+0xc>)
    236a:	8813      	ldrh	r3, [r2, #0]
    236c:	18c0      	adds	r0, r0, r3
    236e:	8010      	strh	r0, [r2, #0]
    2370:	4770      	bx	lr
    2372:	46c0      	nop			; (mov r8, r8)
    2374:	20000a6c 	.word	0x20000a6c

00002378 <qtm_init_sensor_key>:
    2378:	b510      	push	{r4, lr}
    237a:	230b      	movs	r3, #11
    237c:	2800      	cmp	r0, #0
    237e:	d00b      	beq.n	2398 <qtm_init_sensor_key+0x20>
    2380:	2a00      	cmp	r2, #0
    2382:	d009      	beq.n	2398 <qtm_init_sensor_key+0x20>
    2384:	3301      	adds	r3, #1
    2386:	000c      	movs	r4, r1
    2388:	435c      	muls	r4, r3
    238a:	6881      	ldr	r1, [r0, #8]
    238c:	3b0b      	subs	r3, #11
    238e:	550b      	strb	r3, [r1, r4]
    2390:	6883      	ldr	r3, [r0, #8]
    2392:	1919      	adds	r1, r3, r4
    2394:	2300      	movs	r3, #0
    2396:	604a      	str	r2, [r1, #4]
    2398:	0018      	movs	r0, r3
    239a:	bc10      	pop	{r4}
    239c:	bc02      	pop	{r1}
    239e:	4708      	bx	r1

000023a0 <pin_mode_analog>:
    23a0:	b530      	push	{r4, r5, lr}
    23a2:	2401      	movs	r4, #1
    23a4:	084b      	lsrs	r3, r1, #1
    23a6:	01c0      	lsls	r0, r0, #7
    23a8:	4a0b      	ldr	r2, [pc, #44]	; (23d8 <pin_mode_analog+0x38>)
    23aa:	181b      	adds	r3, r3, r0
    23ac:	189b      	adds	r3, r3, r2
    23ae:	4221      	tst	r1, r4
    23b0:	d004      	beq.n	23bc <pin_mode_analog+0x1c>
    23b2:	220f      	movs	r2, #15
    23b4:	781c      	ldrb	r4, [r3, #0]
    23b6:	4022      	ands	r2, r4
    23b8:	2410      	movs	r4, #16
    23ba:	e002      	b.n	23c2 <pin_mode_analog+0x22>
    23bc:	250f      	movs	r5, #15
    23be:	781a      	ldrb	r2, [r3, #0]
    23c0:	43aa      	bics	r2, r5
    23c2:	4322      	orrs	r2, r4
    23c4:	701a      	strb	r2, [r3, #0]
    23c6:	2201      	movs	r2, #1
    23c8:	4b04      	ldr	r3, [pc, #16]	; (23dc <pin_mode_analog+0x3c>)
    23ca:	1808      	adds	r0, r1, r0
    23cc:	18c0      	adds	r0, r0, r3
    23ce:	7803      	ldrb	r3, [r0, #0]
    23d0:	4313      	orrs	r3, r2
    23d2:	7003      	strb	r3, [r0, #0]
    23d4:	bd30      	pop	{r4, r5, pc}
    23d6:	46c0      	nop			; (mov r8, r8)
    23d8:	41006030 	.word	0x41006030
    23dc:	41006040 	.word	0x41006040

000023e0 <sync_config>:
    23e0:	4a02      	ldr	r2, [pc, #8]	; (23ec <sync_config+0xc>)
    23e2:	8993      	ldrh	r3, [r2, #12]
    23e4:	2b00      	cmp	r3, #0
    23e6:	d1fc      	bne.n	23e2 <sync_config+0x2>
    23e8:	4770      	bx	lr
    23ea:	46c0      	nop			; (mov r8, r8)
    23ec:	42003800 	.word	0x42003800

000023f0 <select_next_channel_to_measure>:
    23f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    23f2:	2406      	movs	r4, #6
    23f4:	2501      	movs	r5, #1
    23f6:	490c      	ldr	r1, [pc, #48]	; (2428 <select_next_channel_to_measure+0x38>)
    23f8:	4a0c      	ldr	r2, [pc, #48]	; (242c <select_next_channel_to_measure+0x3c>)
    23fa:	6809      	ldr	r1, [r1, #0]
    23fc:	8813      	ldrh	r3, [r2, #0]
    23fe:	6808      	ldr	r0, [r1, #0]
    2400:	8800      	ldrh	r0, [r0, #0]
    2402:	4283      	cmp	r3, r0
    2404:	d20b      	bcs.n	241e <select_next_channel_to_measure+0x2e>
    2406:	0026      	movs	r6, r4
    2408:	435e      	muls	r6, r3
    240a:	688f      	ldr	r7, [r1, #8]
    240c:	5df6      	ldrb	r6, [r6, r7]
    240e:	422e      	tst	r6, r5
    2410:	d102      	bne.n	2418 <select_next_channel_to_measure+0x28>
    2412:	3301      	adds	r3, #1
    2414:	b29b      	uxth	r3, r3
    2416:	e7f4      	b.n	2402 <select_next_channel_to_measure+0x12>
    2418:	8013      	strh	r3, [r2, #0]
    241a:	2000      	movs	r0, #0
    241c:	e002      	b.n	2424 <select_next_channel_to_measure+0x34>
    241e:	2300      	movs	r3, #0
    2420:	2001      	movs	r0, #1
    2422:	8013      	strh	r3, [r2, #0]
    2424:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2426:	46c0      	nop			; (mov r8, r8)
    2428:	20000b7c 	.word	0x20000b7c
    242c:	20000a70 	.word	0x20000a70

00002430 <qtm_measure_node>:
    2430:	b5f0      	push	{r4, r5, r6, r7, lr}
    2432:	4f67      	ldr	r7, [pc, #412]	; (25d0 <qtm_measure_node+0x1a0>)
    2434:	b089      	sub	sp, #36	; 0x24
    2436:	9003      	str	r0, [sp, #12]
    2438:	47b8      	blx	r7
    243a:	2202      	movs	r2, #2
    243c:	250c      	movs	r5, #12
    243e:	4c65      	ldr	r4, [pc, #404]	; (25d4 <qtm_measure_node+0x1a4>)
    2440:	8823      	ldrh	r3, [r4, #0]
    2442:	4393      	bics	r3, r2
    2444:	8023      	strh	r3, [r4, #0]
    2446:	47b8      	blx	r7
    2448:	9b03      	ldr	r3, [sp, #12]
    244a:	4e63      	ldr	r6, [pc, #396]	; (25d8 <qtm_measure_node+0x1a8>)
    244c:	435d      	muls	r5, r3
    244e:	6833      	ldr	r3, [r6, #0]
    2450:	6c61      	ldr	r1, [r4, #68]	; 0x44
    2452:	685b      	ldr	r3, [r3, #4]
    2454:	195b      	adds	r3, r3, r5
    2456:	685b      	ldr	r3, [r3, #4]
    2458:	021b      	lsls	r3, r3, #8
    245a:	0a1a      	lsrs	r2, r3, #8
    245c:	0e0b      	lsrs	r3, r1, #24
    245e:	061b      	lsls	r3, r3, #24
    2460:	4313      	orrs	r3, r2
    2462:	6463      	str	r3, [r4, #68]	; 0x44
    2464:	47b8      	blx	r7
    2466:	6833      	ldr	r3, [r6, #0]
    2468:	685b      	ldr	r3, [r3, #4]
    246a:	595b      	ldr	r3, [r3, r5]
    246c:	63e3      	str	r3, [r4, #60]	; 0x3c
    246e:	47b8      	blx	r7
    2470:	2306      	movs	r3, #6
    2472:	9a03      	ldr	r2, [sp, #12]
    2474:	6831      	ldr	r1, [r6, #0]
    2476:	4353      	muls	r3, r2
    2478:	688a      	ldr	r2, [r1, #8]
    247a:	18d2      	adds	r2, r2, r3
    247c:	8892      	ldrh	r2, [r2, #4]
    247e:	64a2      	str	r2, [r4, #72]	; 0x48
    2480:	9703      	str	r7, [sp, #12]
    2482:	2702      	movs	r7, #2
    2484:	688a      	ldr	r2, [r1, #8]
    2486:	18d2      	adds	r2, r2, r3
    2488:	7810      	ldrb	r0, [r2, #0]
    248a:	4238      	tst	r0, r7
    248c:	d001      	beq.n	2492 <qtm_measure_node+0x62>
    248e:	2005      	movs	r0, #5
    2490:	7010      	strb	r0, [r2, #0]
    2492:	688a      	ldr	r2, [r1, #8]
    2494:	5cd7      	ldrb	r7, [r2, r3]
    2496:	9b03      	ldr	r3, [sp, #12]
    2498:	06ff      	lsls	r7, r7, #27
    249a:	0f7f      	lsrs	r7, r7, #29
    249c:	4798      	blx	r3
    249e:	2f00      	cmp	r7, #0
    24a0:	d10a      	bne.n	24b8 <qtm_measure_node+0x88>
    24a2:	6833      	ldr	r3, [r6, #0]
    24a4:	494d      	ldr	r1, [pc, #308]	; (25dc <qtm_measure_node+0x1ac>)
    24a6:	685b      	ldr	r3, [r3, #4]
    24a8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    24aa:	195b      	adds	r3, r3, r5
    24ac:	7a9b      	ldrb	r3, [r3, #10]
    24ae:	091b      	lsrs	r3, r3, #4
    24b0:	18cb      	adds	r3, r1, r3
    24b2:	7a1b      	ldrb	r3, [r3, #8]
    24b4:	041b      	lsls	r3, r3, #16
    24b6:	e002      	b.n	24be <qtm_measure_node+0x8e>
    24b8:	22fc      	movs	r2, #252	; 0xfc
    24ba:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    24bc:	0392      	lsls	r2, r2, #14
    24be:	4313      	orrs	r3, r2
    24c0:	64a3      	str	r3, [r4, #72]	; 0x48
    24c2:	9b03      	ldr	r3, [sp, #12]
    24c4:	4798      	blx	r3
    24c6:	6833      	ldr	r3, [r6, #0]
    24c8:	6921      	ldr	r1, [r4, #16]
    24ca:	685b      	ldr	r3, [r3, #4]
    24cc:	4f41      	ldr	r7, [pc, #260]	; (25d4 <qtm_measure_node+0x1a4>)
    24ce:	195b      	adds	r3, r3, r5
    24d0:	7a5a      	ldrb	r2, [r3, #9]
    24d2:	2307      	movs	r3, #7
    24d4:	0912      	lsrs	r2, r2, #4
    24d6:	401a      	ands	r2, r3
    24d8:	4b41      	ldr	r3, [pc, #260]	; (25e0 <qtm_measure_node+0x1b0>)
    24da:	0512      	lsls	r2, r2, #20
    24dc:	400b      	ands	r3, r1
    24de:	4313      	orrs	r3, r2
    24e0:	6123      	str	r3, [r4, #16]
    24e2:	9b03      	ldr	r3, [sp, #12]
    24e4:	4798      	blx	r3
    24e6:	2203      	movs	r2, #3
    24e8:	6833      	ldr	r3, [r6, #0]
    24ea:	8821      	ldrh	r1, [r4, #0]
    24ec:	685b      	ldr	r3, [r3, #4]
    24ee:	195b      	adds	r3, r3, r5
    24f0:	7a5b      	ldrb	r3, [r3, #9]
    24f2:	401a      	ands	r2, r3
    24f4:	4b3b      	ldr	r3, [pc, #236]	; (25e4 <qtm_measure_node+0x1b4>)
    24f6:	0212      	lsls	r2, r2, #8
    24f8:	400b      	ands	r3, r1
    24fa:	4313      	orrs	r3, r2
    24fc:	8023      	strh	r3, [r4, #0]
    24fe:	9b03      	ldr	r3, [sp, #12]
    2500:	4798      	blx	r3
    2502:	2107      	movs	r1, #7
    2504:	6833      	ldr	r3, [r6, #0]
    2506:	685b      	ldr	r3, [r3, #4]
    2508:	195b      	adds	r3, r3, r5
    250a:	7ada      	ldrb	r2, [r3, #11]
    250c:	6923      	ldr	r3, [r4, #16]
    250e:	400a      	ands	r2, r1
    2510:	4935      	ldr	r1, [pc, #212]	; (25e8 <qtm_measure_node+0x1b8>)
    2512:	0412      	lsls	r2, r2, #16
    2514:	400b      	ands	r3, r1
    2516:	4313      	orrs	r3, r2
    2518:	6123      	str	r3, [r4, #16]
    251a:	9b03      	ldr	r3, [sp, #12]
    251c:	4798      	blx	r3
    251e:	6833      	ldr	r3, [r6, #0]
    2520:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    2522:	685b      	ldr	r3, [r3, #4]
    2524:	195d      	adds	r5, r3, r5
    2526:	7a2b      	ldrb	r3, [r5, #8]
    2528:	2502      	movs	r5, #2
    252a:	061a      	lsls	r2, r3, #24
    252c:	020b      	lsls	r3, r1, #8
    252e:	0a1b      	lsrs	r3, r3, #8
    2530:	4313      	orrs	r3, r2
    2532:	64a3      	str	r3, [r4, #72]	; 0x48
    2534:	9b03      	ldr	r3, [sp, #12]
    2536:	4798      	blx	r3
    2538:	8823      	ldrh	r3, [r4, #0]
    253a:	432b      	orrs	r3, r5
    253c:	8023      	strh	r3, [r4, #0]
    253e:	4b2b      	ldr	r3, [pc, #172]	; (25ec <qtm_measure_node+0x1bc>)
    2540:	685e      	ldr	r6, [r3, #4]
    2542:	2e00      	cmp	r6, #0
    2544:	d03b      	beq.n	25be <qtm_measure_node+0x18e>
    2546:	2401      	movs	r4, #1
    2548:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    254a:	0e1b      	lsrs	r3, r3, #24
    254c:	9304      	str	r3, [sp, #16]
    254e:	693b      	ldr	r3, [r7, #16]
    2550:	051b      	lsls	r3, r3, #20
    2552:	0f1b      	lsrs	r3, r3, #28
    2554:	9305      	str	r3, [sp, #20]
    2556:	883b      	ldrh	r3, [r7, #0]
    2558:	059b      	lsls	r3, r3, #22
    255a:	0f9b      	lsrs	r3, r3, #30
    255c:	9306      	str	r3, [sp, #24]
    255e:	9b03      	ldr	r3, [sp, #12]
    2560:	4798      	blx	r3
    2562:	883b      	ldrh	r3, [r7, #0]
    2564:	43ab      	bics	r3, r5
    2566:	803b      	strh	r3, [r7, #0]
    2568:	9b03      	ldr	r3, [sp, #12]
    256a:	4798      	blx	r3
    256c:	793b      	ldrb	r3, [r7, #4]
    256e:	4323      	orrs	r3, r4
    2570:	713b      	strb	r3, [r7, #4]
    2572:	9b03      	ldr	r3, [sp, #12]
    2574:	4798      	blx	r3
    2576:	793b      	ldrb	r3, [r7, #4]
    2578:	432b      	orrs	r3, r5
    257a:	713b      	strb	r3, [r7, #4]
    257c:	9b03      	ldr	r3, [sp, #12]
    257e:	4798      	blx	r3
    2580:	2108      	movs	r1, #8
    2582:	693b      	ldr	r3, [r7, #16]
    2584:	9307      	str	r3, [sp, #28]
    2586:	4b1a      	ldr	r3, [pc, #104]	; (25f0 <qtm_measure_node+0x1c0>)
    2588:	681a      	ldr	r2, [r3, #0]
    258a:	7813      	ldrb	r3, [r2, #0]
    258c:	430b      	orrs	r3, r1
    258e:	7013      	strb	r3, [r2, #0]
    2590:	9b03      	ldr	r3, [sp, #12]
    2592:	4798      	blx	r3
    2594:	693b      	ldr	r3, [r7, #16]
    2596:	4a14      	ldr	r2, [pc, #80]	; (25e8 <qtm_measure_node+0x1b8>)
    2598:	4013      	ands	r3, r2
    259a:	613b      	str	r3, [r7, #16]
    259c:	9b07      	ldr	r3, [sp, #28]
    259e:	9a06      	ldr	r2, [sp, #24]
    25a0:	9905      	ldr	r1, [sp, #20]
    25a2:	9804      	ldr	r0, [sp, #16]
    25a4:	9300      	str	r3, [sp, #0]
    25a6:	4b13      	ldr	r3, [pc, #76]	; (25f4 <qtm_measure_node+0x1c4>)
    25a8:	47b0      	blx	r6
    25aa:	9b03      	ldr	r3, [sp, #12]
    25ac:	4798      	blx	r3
    25ae:	883b      	ldrh	r3, [r7, #0]
    25b0:	431d      	orrs	r5, r3
    25b2:	803d      	strh	r5, [r7, #0]
    25b4:	9b03      	ldr	r3, [sp, #12]
    25b6:	4798      	blx	r3
    25b8:	7f3b      	ldrb	r3, [r7, #28]
    25ba:	4323      	orrs	r3, r4
    25bc:	e004      	b.n	25c8 <qtm_measure_node+0x198>
    25be:	9b03      	ldr	r3, [sp, #12]
    25c0:	4798      	blx	r3
    25c2:	2201      	movs	r2, #1
    25c4:	7f3b      	ldrb	r3, [r7, #28]
    25c6:	4313      	orrs	r3, r2
    25c8:	773b      	strb	r3, [r7, #28]
    25ca:	b009      	add	sp, #36	; 0x24
    25cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    25ce:	46c0      	nop			; (mov r8, r8)
    25d0:	000023e1 	.word	0x000023e1
    25d4:	42003800 	.word	0x42003800
    25d8:	20000b7c 	.word	0x20000b7c
    25dc:	00009bca 	.word	0x00009bca
    25e0:	ff8fffff 	.word	0xff8fffff
    25e4:	fffffcff 	.word	0xfffffcff
    25e8:	fff8ffff 	.word	0xfff8ffff
    25ec:	20000a70 	.word	0x20000a70
    25f0:	20000b78 	.word	0x20000b78
    25f4:	42003810 	.word	0x42003810

000025f8 <qtm_ptc_init_acquisition_module>:
    25f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    25fa:	0001      	movs	r1, r0
    25fc:	200b      	movs	r0, #11
    25fe:	2900      	cmp	r1, #0
    2600:	d053      	beq.n	26aa <qtm_ptc_init_acquisition_module+0xb2>
    2602:	680b      	ldr	r3, [r1, #0]
    2604:	240c      	movs	r4, #12
    2606:	8818      	ldrh	r0, [r3, #0]
    2608:	2300      	movs	r3, #0
    260a:	001d      	movs	r5, r3
    260c:	001f      	movs	r7, r3
    260e:	b29a      	uxth	r2, r3
    2610:	4290      	cmp	r0, r2
    2612:	d909      	bls.n	2628 <qtm_ptc_init_acquisition_module+0x30>
    2614:	0022      	movs	r2, r4
    2616:	435a      	muls	r2, r3
    2618:	684e      	ldr	r6, [r1, #4]
    261a:	3301      	adds	r3, #1
    261c:	18b2      	adds	r2, r6, r2
    261e:	6816      	ldr	r6, [r2, #0]
    2620:	6852      	ldr	r2, [r2, #4]
    2622:	4337      	orrs	r7, r6
    2624:	4315      	orrs	r5, r2
    2626:	e7f2      	b.n	260e <qtm_ptc_init_acquisition_module+0x16>
    2628:	2002      	movs	r0, #2
    262a:	2d00      	cmp	r5, #0
    262c:	d03d      	beq.n	26aa <qtm_ptc_init_acquisition_module+0xb2>
    262e:	2400      	movs	r4, #0
    2630:	2601      	movs	r6, #1
    2632:	043b      	lsls	r3, r7, #16
    2634:	432b      	orrs	r3, r5
    2636:	9301      	str	r3, [sp, #4]
    2638:	9b01      	ldr	r3, [sp, #4]
    263a:	40e3      	lsrs	r3, r4
    263c:	4233      	tst	r3, r6
    263e:	d010      	beq.n	2662 <qtm_ptc_init_acquisition_module+0x6a>
    2640:	4b1a      	ldr	r3, [pc, #104]	; (26ac <qtm_ptc_init_acquisition_module+0xb4>)
    2642:	4a1b      	ldr	r2, [pc, #108]	; (26b0 <qtm_ptc_init_acquisition_module+0xb8>)
    2644:	330e      	adds	r3, #14
    2646:	5ce3      	ldrb	r3, [r4, r3]
    2648:	2000      	movs	r0, #0
    264a:	1e19      	subs	r1, r3, #0
    264c:	291f      	cmp	r1, #31
    264e:	d907      	bls.n	2660 <qtm_ptc_init_acquisition_module+0x68>
    2650:	3920      	subs	r1, #32
    2652:	b2c9      	uxtb	r1, r1
    2654:	2001      	movs	r0, #1
    2656:	291f      	cmp	r1, #31
    2658:	d902      	bls.n	2660 <qtm_ptc_init_acquisition_module+0x68>
    265a:	2002      	movs	r0, #2
    265c:	3b40      	subs	r3, #64	; 0x40
    265e:	b2d9      	uxtb	r1, r3
    2660:	4790      	blx	r2
    2662:	3401      	adds	r4, #1
    2664:	2c20      	cmp	r4, #32
    2666:	d1e7      	bne.n	2638 <qtm_ptc_init_acquisition_module+0x40>
    2668:	4e12      	ldr	r6, [pc, #72]	; (26b4 <qtm_ptc_init_acquisition_module+0xbc>)
    266a:	47b0      	blx	r6
    266c:	2300      	movs	r3, #0
    266e:	4c12      	ldr	r4, [pc, #72]	; (26b8 <qtm_ptc_init_acquisition_module+0xc0>)
    2670:	8023      	strh	r3, [r4, #0]
    2672:	4b12      	ldr	r3, [pc, #72]	; (26bc <qtm_ptc_init_acquisition_module+0xc4>)
    2674:	7a1b      	ldrb	r3, [r3, #8]
    2676:	9301      	str	r3, [sp, #4]
    2678:	2b00      	cmp	r3, #0
    267a:	d10d      	bne.n	2698 <qtm_ptc_init_acquisition_module+0xa0>
    267c:	47b0      	blx	r6
    267e:	9b01      	ldr	r3, [sp, #4]
    2680:	61a3      	str	r3, [r4, #24]
    2682:	69a3      	ldr	r3, [r4, #24]
    2684:	431f      	orrs	r7, r3
    2686:	61a7      	str	r7, [r4, #24]
    2688:	47b0      	blx	r6
    268a:	69a3      	ldr	r3, [r4, #24]
    268c:	4a0b      	ldr	r2, [pc, #44]	; (26bc <qtm_ptc_init_acquisition_module+0xc4>)
    268e:	431d      	orrs	r5, r3
    2690:	2301      	movs	r3, #1
    2692:	61a5      	str	r5, [r4, #24]
    2694:	7213      	strb	r3, [r2, #8]
    2696:	e007      	b.n	26a8 <qtm_ptc_init_acquisition_module+0xb0>
    2698:	47b0      	blx	r6
    269a:	69a3      	ldr	r3, [r4, #24]
    269c:	431f      	orrs	r7, r3
    269e:	61a7      	str	r7, [r4, #24]
    26a0:	47b0      	blx	r6
    26a2:	69a3      	ldr	r3, [r4, #24]
    26a4:	431d      	orrs	r5, r3
    26a6:	61a5      	str	r5, [r4, #24]
    26a8:	2000      	movs	r0, #0
    26aa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    26ac:	00009bca 	.word	0x00009bca
    26b0:	000023a1 	.word	0x000023a1
    26b4:	000023e1 	.word	0x000023e1
    26b8:	42003800 	.word	0x42003800
    26bc:	20000a70 	.word	0x20000a70

000026c0 <qtm_ptc_qtlib_assign_signal_memory>:
    26c0:	230b      	movs	r3, #11
    26c2:	2800      	cmp	r0, #0
    26c4:	d002      	beq.n	26cc <qtm_ptc_qtlib_assign_signal_memory+0xc>
    26c6:	4b02      	ldr	r3, [pc, #8]	; (26d0 <qtm_ptc_qtlib_assign_signal_memory+0x10>)
    26c8:	6018      	str	r0, [r3, #0]
    26ca:	2300      	movs	r3, #0
    26cc:	0018      	movs	r0, r3
    26ce:	4770      	bx	lr
    26d0:	20000b80 	.word	0x20000b80

000026d4 <qtm_enable_sensor_node>:
    26d4:	230b      	movs	r3, #11
    26d6:	2800      	cmp	r0, #0
    26d8:	d00a      	beq.n	26f0 <qtm_enable_sensor_node+0x1c>
    26da:	6803      	ldr	r3, [r0, #0]
    26dc:	881a      	ldrh	r2, [r3, #0]
    26de:	2302      	movs	r3, #2
    26e0:	428a      	cmp	r2, r1
    26e2:	d305      	bcc.n	26f0 <qtm_enable_sensor_node+0x1c>
    26e4:	3304      	adds	r3, #4
    26e6:	4359      	muls	r1, r3
    26e8:	6882      	ldr	r2, [r0, #8]
    26ea:	3b05      	subs	r3, #5
    26ec:	548b      	strb	r3, [r1, r2]
    26ee:	2300      	movs	r3, #0
    26f0:	0018      	movs	r0, r3
    26f2:	4770      	bx	lr

000026f4 <qtm_calibrate_sensor_node>:
    26f4:	0002      	movs	r2, r0
    26f6:	b510      	push	{r4, lr}
    26f8:	200b      	movs	r0, #11
    26fa:	2a00      	cmp	r2, #0
    26fc:	d01f      	beq.n	273e <qtm_calibrate_sensor_node+0x4a>
    26fe:	6813      	ldr	r3, [r2, #0]
    2700:	3809      	subs	r0, #9
    2702:	881c      	ldrh	r4, [r3, #0]
    2704:	428c      	cmp	r4, r1
    2706:	d31a      	bcc.n	273e <qtm_calibrate_sensor_node+0x4a>
    2708:	789b      	ldrb	r3, [r3, #2]
    270a:	6892      	ldr	r2, [r2, #8]
    270c:	2b40      	cmp	r3, #64	; 0x40
    270e:	d105      	bne.n	271c <qtm_calibrate_sensor_node+0x28>
    2710:	208d      	movs	r0, #141	; 0x8d
    2712:	3b3a      	subs	r3, #58	; 0x3a
    2714:	434b      	muls	r3, r1
    2716:	0080      	lsls	r0, r0, #2
    2718:	18d3      	adds	r3, r2, r3
    271a:	e007      	b.n	272c <qtm_calibrate_sensor_node+0x38>
    271c:	3b80      	subs	r3, #128	; 0x80
    271e:	b2db      	uxtb	r3, r3
    2720:	2b01      	cmp	r3, #1
    2722:	d805      	bhi.n	2730 <qtm_calibrate_sensor_node+0x3c>
    2724:	2306      	movs	r3, #6
    2726:	434b      	muls	r3, r1
    2728:	4805      	ldr	r0, [pc, #20]	; (2740 <qtm_calibrate_sensor_node+0x4c>)
    272a:	18d3      	adds	r3, r2, r3
    272c:	8098      	strh	r0, [r3, #4]
    272e:	2000      	movs	r0, #0
    2730:	2306      	movs	r3, #6
    2732:	4359      	muls	r1, r3
    2734:	1851      	adds	r1, r2, r1
    2736:	2202      	movs	r2, #2
    2738:	780b      	ldrb	r3, [r1, #0]
    273a:	4313      	orrs	r3, r2
    273c:	700b      	strb	r3, [r1, #0]
    273e:	bd10      	pop	{r4, pc}
    2740:	00000567 	.word	0x00000567

00002744 <qtm_ptc_clear_interrupt>:
    2744:	2002      	movs	r0, #2
    2746:	4b07      	ldr	r3, [pc, #28]	; (2764 <qtm_ptc_clear_interrupt+0x20>)
    2748:	7a9a      	ldrb	r2, [r3, #10]
    274a:	b2d2      	uxtb	r2, r2
    274c:	4202      	tst	r2, r0
    274e:	d002      	beq.n	2756 <qtm_ptc_clear_interrupt+0x12>
    2750:	7a99      	ldrb	r1, [r3, #10]
    2752:	4301      	orrs	r1, r0
    2754:	7299      	strb	r1, [r3, #10]
    2756:	2101      	movs	r1, #1
    2758:	420a      	tst	r2, r1
    275a:	d002      	beq.n	2762 <qtm_ptc_clear_interrupt+0x1e>
    275c:	7a9a      	ldrb	r2, [r3, #10]
    275e:	430a      	orrs	r2, r1
    2760:	729a      	strb	r2, [r3, #10]
    2762:	4770      	bx	lr
    2764:	42003800 	.word	0x42003800

00002768 <qtm_saml22_ptc_handler_eoc>:
    2768:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    276a:	4b23      	ldr	r3, [pc, #140]	; (27f8 <qtm_saml22_ptc_handler_eoc+0x90>)
    276c:	4798      	blx	r3
    276e:	2102      	movs	r1, #2
    2770:	4a22      	ldr	r2, [pc, #136]	; (27fc <qtm_saml22_ptc_handler_eoc+0x94>)
    2772:	8813      	ldrh	r3, [r2, #0]
    2774:	438b      	bics	r3, r1
    2776:	8013      	strh	r3, [r2, #0]
    2778:	4b21      	ldr	r3, [pc, #132]	; (2800 <qtm_saml22_ptc_handler_eoc+0x98>)
    277a:	4798      	blx	r3
    277c:	4b21      	ldr	r3, [pc, #132]	; (2804 <qtm_saml22_ptc_handler_eoc+0x9c>)
    277e:	4c22      	ldr	r4, [pc, #136]	; (2808 <qtm_saml22_ptc_handler_eoc+0xa0>)
    2780:	4a22      	ldr	r2, [pc, #136]	; (280c <qtm_saml22_ptc_handler_eoc+0xa4>)
    2782:	8819      	ldrh	r1, [r3, #0]
    2784:	8818      	ldrh	r0, [r3, #0]
    2786:	8823      	ldrh	r3, [r4, #0]
    2788:	6812      	ldr	r2, [r2, #0]
    278a:	005b      	lsls	r3, r3, #1
    278c:	52d0      	strh	r0, [r2, r3]
    278e:	4b20      	ldr	r3, [pc, #128]	; (2810 <qtm_saml22_ptc_handler_eoc+0xa8>)
    2790:	b289      	uxth	r1, r1
    2792:	781b      	ldrb	r3, [r3, #0]
    2794:	0020      	movs	r0, r4
    2796:	2b01      	cmp	r3, #1
    2798:	d002      	beq.n	27a0 <qtm_saml22_ptc_handler_eoc+0x38>
    279a:	2b02      	cmp	r3, #2
    279c:	d00f      	beq.n	27be <qtm_saml22_ptc_handler_eoc+0x56>
    279e:	e029      	b.n	27f4 <qtm_saml22_ptc_handler_eoc+0x8c>
    27a0:	8823      	ldrh	r3, [r4, #0]
    27a2:	3301      	adds	r3, #1
    27a4:	8023      	strh	r3, [r4, #0]
    27a6:	4b1b      	ldr	r3, [pc, #108]	; (2814 <qtm_saml22_ptc_handler_eoc+0xac>)
    27a8:	4798      	blx	r3
    27aa:	2800      	cmp	r0, #0
    27ac:	d105      	bne.n	27ba <qtm_saml22_ptc_handler_eoc+0x52>
    27ae:	4b1a      	ldr	r3, [pc, #104]	; (2818 <qtm_saml22_ptc_handler_eoc+0xb0>)
    27b0:	8820      	ldrh	r0, [r4, #0]
    27b2:	4798      	blx	r3
    27b4:	2304      	movs	r3, #4
    27b6:	7223      	strb	r3, [r4, #8]
    27b8:	e01c      	b.n	27f4 <qtm_saml22_ptc_handler_eoc+0x8c>
    27ba:	68e3      	ldr	r3, [r4, #12]
    27bc:	e019      	b.n	27f2 <qtm_saml22_ptc_handler_eoc+0x8a>
    27be:	4b17      	ldr	r3, [pc, #92]	; (281c <qtm_saml22_ptc_handler_eoc+0xb4>)
    27c0:	8824      	ldrh	r4, [r4, #0]
    27c2:	681d      	ldr	r5, [r3, #0]
    27c4:	230c      	movs	r3, #12
    27c6:	4363      	muls	r3, r4
    27c8:	686a      	ldr	r2, [r5, #4]
    27ca:	2700      	movs	r7, #0
    27cc:	18d3      	adds	r3, r2, r3
    27ce:	220f      	movs	r2, #15
    27d0:	7a9e      	ldrb	r6, [r3, #10]
    27d2:	4016      	ands	r6, r2
    27d4:	7ada      	ldrb	r2, [r3, #11]
    27d6:	4296      	cmp	r6, r2
    27d8:	d201      	bcs.n	27de <qtm_saml22_ptc_handler_eoc+0x76>
    27da:	1b92      	subs	r2, r2, r6
    27dc:	b2d7      	uxtb	r7, r2
    27de:	2206      	movs	r2, #6
    27e0:	0013      	movs	r3, r2
    27e2:	40f9      	lsrs	r1, r7
    27e4:	4363      	muls	r3, r4
    27e6:	68ad      	ldr	r5, [r5, #8]
    27e8:	18eb      	adds	r3, r5, r3
    27ea:	8059      	strh	r1, [r3, #2]
    27ec:	2302      	movs	r3, #2
    27ee:	7203      	strb	r3, [r0, #8]
    27f0:	6903      	ldr	r3, [r0, #16]
    27f2:	4798      	blx	r3
    27f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    27f6:	46c0      	nop			; (mov r8, r8)
    27f8:	000023e1 	.word	0x000023e1
    27fc:	42003800 	.word	0x42003800
    2800:	00002745 	.word	0x00002745
    2804:	42003858 	.word	0x42003858
    2808:	20000a70 	.word	0x20000a70
    280c:	20000b80 	.word	0x20000b80
    2810:	2000007a 	.word	0x2000007a
    2814:	000023f1 	.word	0x000023f1
    2818:	00002431 	.word	0x00002431
    281c:	20000b7c 	.word	0x20000b7c

00002820 <__udivsi3>:
    2820:	2200      	movs	r2, #0
    2822:	0843      	lsrs	r3, r0, #1
    2824:	428b      	cmp	r3, r1
    2826:	d374      	bcc.n	2912 <__udivsi3+0xf2>
    2828:	0903      	lsrs	r3, r0, #4
    282a:	428b      	cmp	r3, r1
    282c:	d35f      	bcc.n	28ee <__udivsi3+0xce>
    282e:	0a03      	lsrs	r3, r0, #8
    2830:	428b      	cmp	r3, r1
    2832:	d344      	bcc.n	28be <__udivsi3+0x9e>
    2834:	0b03      	lsrs	r3, r0, #12
    2836:	428b      	cmp	r3, r1
    2838:	d328      	bcc.n	288c <__udivsi3+0x6c>
    283a:	0c03      	lsrs	r3, r0, #16
    283c:	428b      	cmp	r3, r1
    283e:	d30d      	bcc.n	285c <__udivsi3+0x3c>
    2840:	22ff      	movs	r2, #255	; 0xff
    2842:	0209      	lsls	r1, r1, #8
    2844:	ba12      	rev	r2, r2
    2846:	0c03      	lsrs	r3, r0, #16
    2848:	428b      	cmp	r3, r1
    284a:	d302      	bcc.n	2852 <__udivsi3+0x32>
    284c:	1212      	asrs	r2, r2, #8
    284e:	0209      	lsls	r1, r1, #8
    2850:	d065      	beq.n	291e <__udivsi3+0xfe>
    2852:	0b03      	lsrs	r3, r0, #12
    2854:	428b      	cmp	r3, r1
    2856:	d319      	bcc.n	288c <__udivsi3+0x6c>
    2858:	e000      	b.n	285c <__udivsi3+0x3c>
    285a:	0a09      	lsrs	r1, r1, #8
    285c:	0bc3      	lsrs	r3, r0, #15
    285e:	428b      	cmp	r3, r1
    2860:	d301      	bcc.n	2866 <__udivsi3+0x46>
    2862:	03cb      	lsls	r3, r1, #15
    2864:	1ac0      	subs	r0, r0, r3
    2866:	4152      	adcs	r2, r2
    2868:	0b83      	lsrs	r3, r0, #14
    286a:	428b      	cmp	r3, r1
    286c:	d301      	bcc.n	2872 <__udivsi3+0x52>
    286e:	038b      	lsls	r3, r1, #14
    2870:	1ac0      	subs	r0, r0, r3
    2872:	4152      	adcs	r2, r2
    2874:	0b43      	lsrs	r3, r0, #13
    2876:	428b      	cmp	r3, r1
    2878:	d301      	bcc.n	287e <__udivsi3+0x5e>
    287a:	034b      	lsls	r3, r1, #13
    287c:	1ac0      	subs	r0, r0, r3
    287e:	4152      	adcs	r2, r2
    2880:	0b03      	lsrs	r3, r0, #12
    2882:	428b      	cmp	r3, r1
    2884:	d301      	bcc.n	288a <__udivsi3+0x6a>
    2886:	030b      	lsls	r3, r1, #12
    2888:	1ac0      	subs	r0, r0, r3
    288a:	4152      	adcs	r2, r2
    288c:	0ac3      	lsrs	r3, r0, #11
    288e:	428b      	cmp	r3, r1
    2890:	d301      	bcc.n	2896 <__udivsi3+0x76>
    2892:	02cb      	lsls	r3, r1, #11
    2894:	1ac0      	subs	r0, r0, r3
    2896:	4152      	adcs	r2, r2
    2898:	0a83      	lsrs	r3, r0, #10
    289a:	428b      	cmp	r3, r1
    289c:	d301      	bcc.n	28a2 <__udivsi3+0x82>
    289e:	028b      	lsls	r3, r1, #10
    28a0:	1ac0      	subs	r0, r0, r3
    28a2:	4152      	adcs	r2, r2
    28a4:	0a43      	lsrs	r3, r0, #9
    28a6:	428b      	cmp	r3, r1
    28a8:	d301      	bcc.n	28ae <__udivsi3+0x8e>
    28aa:	024b      	lsls	r3, r1, #9
    28ac:	1ac0      	subs	r0, r0, r3
    28ae:	4152      	adcs	r2, r2
    28b0:	0a03      	lsrs	r3, r0, #8
    28b2:	428b      	cmp	r3, r1
    28b4:	d301      	bcc.n	28ba <__udivsi3+0x9a>
    28b6:	020b      	lsls	r3, r1, #8
    28b8:	1ac0      	subs	r0, r0, r3
    28ba:	4152      	adcs	r2, r2
    28bc:	d2cd      	bcs.n	285a <__udivsi3+0x3a>
    28be:	09c3      	lsrs	r3, r0, #7
    28c0:	428b      	cmp	r3, r1
    28c2:	d301      	bcc.n	28c8 <__udivsi3+0xa8>
    28c4:	01cb      	lsls	r3, r1, #7
    28c6:	1ac0      	subs	r0, r0, r3
    28c8:	4152      	adcs	r2, r2
    28ca:	0983      	lsrs	r3, r0, #6
    28cc:	428b      	cmp	r3, r1
    28ce:	d301      	bcc.n	28d4 <__udivsi3+0xb4>
    28d0:	018b      	lsls	r3, r1, #6
    28d2:	1ac0      	subs	r0, r0, r3
    28d4:	4152      	adcs	r2, r2
    28d6:	0943      	lsrs	r3, r0, #5
    28d8:	428b      	cmp	r3, r1
    28da:	d301      	bcc.n	28e0 <__udivsi3+0xc0>
    28dc:	014b      	lsls	r3, r1, #5
    28de:	1ac0      	subs	r0, r0, r3
    28e0:	4152      	adcs	r2, r2
    28e2:	0903      	lsrs	r3, r0, #4
    28e4:	428b      	cmp	r3, r1
    28e6:	d301      	bcc.n	28ec <__udivsi3+0xcc>
    28e8:	010b      	lsls	r3, r1, #4
    28ea:	1ac0      	subs	r0, r0, r3
    28ec:	4152      	adcs	r2, r2
    28ee:	08c3      	lsrs	r3, r0, #3
    28f0:	428b      	cmp	r3, r1
    28f2:	d301      	bcc.n	28f8 <__udivsi3+0xd8>
    28f4:	00cb      	lsls	r3, r1, #3
    28f6:	1ac0      	subs	r0, r0, r3
    28f8:	4152      	adcs	r2, r2
    28fa:	0883      	lsrs	r3, r0, #2
    28fc:	428b      	cmp	r3, r1
    28fe:	d301      	bcc.n	2904 <__udivsi3+0xe4>
    2900:	008b      	lsls	r3, r1, #2
    2902:	1ac0      	subs	r0, r0, r3
    2904:	4152      	adcs	r2, r2
    2906:	0843      	lsrs	r3, r0, #1
    2908:	428b      	cmp	r3, r1
    290a:	d301      	bcc.n	2910 <__udivsi3+0xf0>
    290c:	004b      	lsls	r3, r1, #1
    290e:	1ac0      	subs	r0, r0, r3
    2910:	4152      	adcs	r2, r2
    2912:	1a41      	subs	r1, r0, r1
    2914:	d200      	bcs.n	2918 <__udivsi3+0xf8>
    2916:	4601      	mov	r1, r0
    2918:	4152      	adcs	r2, r2
    291a:	4610      	mov	r0, r2
    291c:	4770      	bx	lr
    291e:	e7ff      	b.n	2920 <__udivsi3+0x100>
    2920:	b501      	push	{r0, lr}
    2922:	2000      	movs	r0, #0
    2924:	f000 f806 	bl	2934 <__aeabi_idiv0>
    2928:	bd02      	pop	{r1, pc}
    292a:	46c0      	nop			; (mov r8, r8)

0000292c <__aeabi_uidivmod>:
    292c:	2900      	cmp	r1, #0
    292e:	d0f7      	beq.n	2920 <__udivsi3+0x100>
    2930:	e776      	b.n	2820 <__udivsi3>
    2932:	4770      	bx	lr

00002934 <__aeabi_idiv0>:
    2934:	4770      	bx	lr
    2936:	46c0      	nop			; (mov r8, r8)

00002938 <__aeabi_uldivmod>:
    2938:	2b00      	cmp	r3, #0
    293a:	d111      	bne.n	2960 <__aeabi_uldivmod+0x28>
    293c:	2a00      	cmp	r2, #0
    293e:	d10f      	bne.n	2960 <__aeabi_uldivmod+0x28>
    2940:	2900      	cmp	r1, #0
    2942:	d100      	bne.n	2946 <__aeabi_uldivmod+0xe>
    2944:	2800      	cmp	r0, #0
    2946:	d002      	beq.n	294e <__aeabi_uldivmod+0x16>
    2948:	2100      	movs	r1, #0
    294a:	43c9      	mvns	r1, r1
    294c:	1c08      	adds	r0, r1, #0
    294e:	b407      	push	{r0, r1, r2}
    2950:	4802      	ldr	r0, [pc, #8]	; (295c <__aeabi_uldivmod+0x24>)
    2952:	a102      	add	r1, pc, #8	; (adr r1, 295c <__aeabi_uldivmod+0x24>)
    2954:	1840      	adds	r0, r0, r1
    2956:	9002      	str	r0, [sp, #8]
    2958:	bd03      	pop	{r0, r1, pc}
    295a:	46c0      	nop			; (mov r8, r8)
    295c:	ffffffd9 	.word	0xffffffd9
    2960:	b403      	push	{r0, r1}
    2962:	4668      	mov	r0, sp
    2964:	b501      	push	{r0, lr}
    2966:	9802      	ldr	r0, [sp, #8]
    2968:	f000 f806 	bl	2978 <__udivmoddi4>
    296c:	9b01      	ldr	r3, [sp, #4]
    296e:	469e      	mov	lr, r3
    2970:	b002      	add	sp, #8
    2972:	bc0c      	pop	{r2, r3}
    2974:	4770      	bx	lr
    2976:	46c0      	nop			; (mov r8, r8)

00002978 <__udivmoddi4>:
    2978:	b5f0      	push	{r4, r5, r6, r7, lr}
    297a:	4657      	mov	r7, sl
    297c:	464e      	mov	r6, r9
    297e:	4645      	mov	r5, r8
    2980:	46de      	mov	lr, fp
    2982:	b5e0      	push	{r5, r6, r7, lr}
    2984:	0004      	movs	r4, r0
    2986:	b083      	sub	sp, #12
    2988:	000d      	movs	r5, r1
    298a:	4692      	mov	sl, r2
    298c:	4699      	mov	r9, r3
    298e:	428b      	cmp	r3, r1
    2990:	d82f      	bhi.n	29f2 <__udivmoddi4+0x7a>
    2992:	d02c      	beq.n	29ee <__udivmoddi4+0x76>
    2994:	4649      	mov	r1, r9
    2996:	4650      	mov	r0, sl
    2998:	f001 fb5e 	bl	4058 <__clzdi2>
    299c:	0029      	movs	r1, r5
    299e:	0006      	movs	r6, r0
    29a0:	0020      	movs	r0, r4
    29a2:	f001 fb59 	bl	4058 <__clzdi2>
    29a6:	1a33      	subs	r3, r6, r0
    29a8:	4698      	mov	r8, r3
    29aa:	3b20      	subs	r3, #32
    29ac:	469b      	mov	fp, r3
    29ae:	d500      	bpl.n	29b2 <__udivmoddi4+0x3a>
    29b0:	e074      	b.n	2a9c <__udivmoddi4+0x124>
    29b2:	4653      	mov	r3, sl
    29b4:	465a      	mov	r2, fp
    29b6:	4093      	lsls	r3, r2
    29b8:	001f      	movs	r7, r3
    29ba:	4653      	mov	r3, sl
    29bc:	4642      	mov	r2, r8
    29be:	4093      	lsls	r3, r2
    29c0:	001e      	movs	r6, r3
    29c2:	42af      	cmp	r7, r5
    29c4:	d829      	bhi.n	2a1a <__udivmoddi4+0xa2>
    29c6:	d026      	beq.n	2a16 <__udivmoddi4+0x9e>
    29c8:	465b      	mov	r3, fp
    29ca:	1ba4      	subs	r4, r4, r6
    29cc:	41bd      	sbcs	r5, r7
    29ce:	2b00      	cmp	r3, #0
    29d0:	da00      	bge.n	29d4 <__udivmoddi4+0x5c>
    29d2:	e079      	b.n	2ac8 <__udivmoddi4+0x150>
    29d4:	2200      	movs	r2, #0
    29d6:	2300      	movs	r3, #0
    29d8:	9200      	str	r2, [sp, #0]
    29da:	9301      	str	r3, [sp, #4]
    29dc:	2301      	movs	r3, #1
    29de:	465a      	mov	r2, fp
    29e0:	4093      	lsls	r3, r2
    29e2:	9301      	str	r3, [sp, #4]
    29e4:	2301      	movs	r3, #1
    29e6:	4642      	mov	r2, r8
    29e8:	4093      	lsls	r3, r2
    29ea:	9300      	str	r3, [sp, #0]
    29ec:	e019      	b.n	2a22 <__udivmoddi4+0xaa>
    29ee:	4282      	cmp	r2, r0
    29f0:	d9d0      	bls.n	2994 <__udivmoddi4+0x1c>
    29f2:	2200      	movs	r2, #0
    29f4:	2300      	movs	r3, #0
    29f6:	9200      	str	r2, [sp, #0]
    29f8:	9301      	str	r3, [sp, #4]
    29fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    29fc:	2b00      	cmp	r3, #0
    29fe:	d001      	beq.n	2a04 <__udivmoddi4+0x8c>
    2a00:	601c      	str	r4, [r3, #0]
    2a02:	605d      	str	r5, [r3, #4]
    2a04:	9800      	ldr	r0, [sp, #0]
    2a06:	9901      	ldr	r1, [sp, #4]
    2a08:	b003      	add	sp, #12
    2a0a:	bc3c      	pop	{r2, r3, r4, r5}
    2a0c:	4690      	mov	r8, r2
    2a0e:	4699      	mov	r9, r3
    2a10:	46a2      	mov	sl, r4
    2a12:	46ab      	mov	fp, r5
    2a14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2a16:	42a3      	cmp	r3, r4
    2a18:	d9d6      	bls.n	29c8 <__udivmoddi4+0x50>
    2a1a:	2200      	movs	r2, #0
    2a1c:	2300      	movs	r3, #0
    2a1e:	9200      	str	r2, [sp, #0]
    2a20:	9301      	str	r3, [sp, #4]
    2a22:	4643      	mov	r3, r8
    2a24:	2b00      	cmp	r3, #0
    2a26:	d0e8      	beq.n	29fa <__udivmoddi4+0x82>
    2a28:	07fb      	lsls	r3, r7, #31
    2a2a:	0872      	lsrs	r2, r6, #1
    2a2c:	431a      	orrs	r2, r3
    2a2e:	4646      	mov	r6, r8
    2a30:	087b      	lsrs	r3, r7, #1
    2a32:	e00e      	b.n	2a52 <__udivmoddi4+0xda>
    2a34:	42ab      	cmp	r3, r5
    2a36:	d101      	bne.n	2a3c <__udivmoddi4+0xc4>
    2a38:	42a2      	cmp	r2, r4
    2a3a:	d80c      	bhi.n	2a56 <__udivmoddi4+0xde>
    2a3c:	1aa4      	subs	r4, r4, r2
    2a3e:	419d      	sbcs	r5, r3
    2a40:	2001      	movs	r0, #1
    2a42:	1924      	adds	r4, r4, r4
    2a44:	416d      	adcs	r5, r5
    2a46:	2100      	movs	r1, #0
    2a48:	3e01      	subs	r6, #1
    2a4a:	1824      	adds	r4, r4, r0
    2a4c:	414d      	adcs	r5, r1
    2a4e:	2e00      	cmp	r6, #0
    2a50:	d006      	beq.n	2a60 <__udivmoddi4+0xe8>
    2a52:	42ab      	cmp	r3, r5
    2a54:	d9ee      	bls.n	2a34 <__udivmoddi4+0xbc>
    2a56:	3e01      	subs	r6, #1
    2a58:	1924      	adds	r4, r4, r4
    2a5a:	416d      	adcs	r5, r5
    2a5c:	2e00      	cmp	r6, #0
    2a5e:	d1f8      	bne.n	2a52 <__udivmoddi4+0xda>
    2a60:	465b      	mov	r3, fp
    2a62:	9800      	ldr	r0, [sp, #0]
    2a64:	9901      	ldr	r1, [sp, #4]
    2a66:	1900      	adds	r0, r0, r4
    2a68:	4169      	adcs	r1, r5
    2a6a:	2b00      	cmp	r3, #0
    2a6c:	db22      	blt.n	2ab4 <__udivmoddi4+0x13c>
    2a6e:	002b      	movs	r3, r5
    2a70:	465a      	mov	r2, fp
    2a72:	40d3      	lsrs	r3, r2
    2a74:	002a      	movs	r2, r5
    2a76:	4644      	mov	r4, r8
    2a78:	40e2      	lsrs	r2, r4
    2a7a:	001c      	movs	r4, r3
    2a7c:	465b      	mov	r3, fp
    2a7e:	0015      	movs	r5, r2
    2a80:	2b00      	cmp	r3, #0
    2a82:	db2c      	blt.n	2ade <__udivmoddi4+0x166>
    2a84:	0026      	movs	r6, r4
    2a86:	409e      	lsls	r6, r3
    2a88:	0033      	movs	r3, r6
    2a8a:	0026      	movs	r6, r4
    2a8c:	4647      	mov	r7, r8
    2a8e:	40be      	lsls	r6, r7
    2a90:	0032      	movs	r2, r6
    2a92:	1a80      	subs	r0, r0, r2
    2a94:	4199      	sbcs	r1, r3
    2a96:	9000      	str	r0, [sp, #0]
    2a98:	9101      	str	r1, [sp, #4]
    2a9a:	e7ae      	b.n	29fa <__udivmoddi4+0x82>
    2a9c:	4642      	mov	r2, r8
    2a9e:	2320      	movs	r3, #32
    2aa0:	1a9b      	subs	r3, r3, r2
    2aa2:	4652      	mov	r2, sl
    2aa4:	40da      	lsrs	r2, r3
    2aa6:	4641      	mov	r1, r8
    2aa8:	0013      	movs	r3, r2
    2aaa:	464a      	mov	r2, r9
    2aac:	408a      	lsls	r2, r1
    2aae:	0017      	movs	r7, r2
    2ab0:	431f      	orrs	r7, r3
    2ab2:	e782      	b.n	29ba <__udivmoddi4+0x42>
    2ab4:	4642      	mov	r2, r8
    2ab6:	2320      	movs	r3, #32
    2ab8:	1a9b      	subs	r3, r3, r2
    2aba:	002a      	movs	r2, r5
    2abc:	4646      	mov	r6, r8
    2abe:	409a      	lsls	r2, r3
    2ac0:	0023      	movs	r3, r4
    2ac2:	40f3      	lsrs	r3, r6
    2ac4:	4313      	orrs	r3, r2
    2ac6:	e7d5      	b.n	2a74 <__udivmoddi4+0xfc>
    2ac8:	4642      	mov	r2, r8
    2aca:	2320      	movs	r3, #32
    2acc:	2100      	movs	r1, #0
    2ace:	1a9b      	subs	r3, r3, r2
    2ad0:	2200      	movs	r2, #0
    2ad2:	9100      	str	r1, [sp, #0]
    2ad4:	9201      	str	r2, [sp, #4]
    2ad6:	2201      	movs	r2, #1
    2ad8:	40da      	lsrs	r2, r3
    2ada:	9201      	str	r2, [sp, #4]
    2adc:	e782      	b.n	29e4 <__udivmoddi4+0x6c>
    2ade:	4642      	mov	r2, r8
    2ae0:	2320      	movs	r3, #32
    2ae2:	0026      	movs	r6, r4
    2ae4:	1a9b      	subs	r3, r3, r2
    2ae6:	40de      	lsrs	r6, r3
    2ae8:	002f      	movs	r7, r5
    2aea:	46b4      	mov	ip, r6
    2aec:	4097      	lsls	r7, r2
    2aee:	4666      	mov	r6, ip
    2af0:	003b      	movs	r3, r7
    2af2:	4333      	orrs	r3, r6
    2af4:	e7c9      	b.n	2a8a <__udivmoddi4+0x112>
    2af6:	46c0      	nop			; (mov r8, r8)

00002af8 <__aeabi_ddiv>:
    2af8:	b5f0      	push	{r4, r5, r6, r7, lr}
    2afa:	4657      	mov	r7, sl
    2afc:	4645      	mov	r5, r8
    2afe:	46de      	mov	lr, fp
    2b00:	464e      	mov	r6, r9
    2b02:	b5e0      	push	{r5, r6, r7, lr}
    2b04:	004c      	lsls	r4, r1, #1
    2b06:	030e      	lsls	r6, r1, #12
    2b08:	b087      	sub	sp, #28
    2b0a:	4683      	mov	fp, r0
    2b0c:	4692      	mov	sl, r2
    2b0e:	001d      	movs	r5, r3
    2b10:	4680      	mov	r8, r0
    2b12:	0b36      	lsrs	r6, r6, #12
    2b14:	0d64      	lsrs	r4, r4, #21
    2b16:	0fcf      	lsrs	r7, r1, #31
    2b18:	2c00      	cmp	r4, #0
    2b1a:	d04f      	beq.n	2bbc <__aeabi_ddiv+0xc4>
    2b1c:	4b6f      	ldr	r3, [pc, #444]	; (2cdc <__aeabi_ddiv+0x1e4>)
    2b1e:	429c      	cmp	r4, r3
    2b20:	d035      	beq.n	2b8e <__aeabi_ddiv+0x96>
    2b22:	2380      	movs	r3, #128	; 0x80
    2b24:	0f42      	lsrs	r2, r0, #29
    2b26:	041b      	lsls	r3, r3, #16
    2b28:	00f6      	lsls	r6, r6, #3
    2b2a:	4313      	orrs	r3, r2
    2b2c:	4333      	orrs	r3, r6
    2b2e:	4699      	mov	r9, r3
    2b30:	00c3      	lsls	r3, r0, #3
    2b32:	4698      	mov	r8, r3
    2b34:	4b6a      	ldr	r3, [pc, #424]	; (2ce0 <__aeabi_ddiv+0x1e8>)
    2b36:	2600      	movs	r6, #0
    2b38:	469c      	mov	ip, r3
    2b3a:	2300      	movs	r3, #0
    2b3c:	4464      	add	r4, ip
    2b3e:	9303      	str	r3, [sp, #12]
    2b40:	032b      	lsls	r3, r5, #12
    2b42:	0b1b      	lsrs	r3, r3, #12
    2b44:	469b      	mov	fp, r3
    2b46:	006b      	lsls	r3, r5, #1
    2b48:	0fed      	lsrs	r5, r5, #31
    2b4a:	4650      	mov	r0, sl
    2b4c:	0d5b      	lsrs	r3, r3, #21
    2b4e:	9501      	str	r5, [sp, #4]
    2b50:	d05e      	beq.n	2c10 <__aeabi_ddiv+0x118>
    2b52:	4a62      	ldr	r2, [pc, #392]	; (2cdc <__aeabi_ddiv+0x1e4>)
    2b54:	4293      	cmp	r3, r2
    2b56:	d053      	beq.n	2c00 <__aeabi_ddiv+0x108>
    2b58:	465a      	mov	r2, fp
    2b5a:	00d1      	lsls	r1, r2, #3
    2b5c:	2280      	movs	r2, #128	; 0x80
    2b5e:	0f40      	lsrs	r0, r0, #29
    2b60:	0412      	lsls	r2, r2, #16
    2b62:	4302      	orrs	r2, r0
    2b64:	430a      	orrs	r2, r1
    2b66:	4693      	mov	fp, r2
    2b68:	4652      	mov	r2, sl
    2b6a:	00d1      	lsls	r1, r2, #3
    2b6c:	4a5c      	ldr	r2, [pc, #368]	; (2ce0 <__aeabi_ddiv+0x1e8>)
    2b6e:	4694      	mov	ip, r2
    2b70:	2200      	movs	r2, #0
    2b72:	4463      	add	r3, ip
    2b74:	0038      	movs	r0, r7
    2b76:	4068      	eors	r0, r5
    2b78:	4684      	mov	ip, r0
    2b7a:	9002      	str	r0, [sp, #8]
    2b7c:	1ae4      	subs	r4, r4, r3
    2b7e:	4316      	orrs	r6, r2
    2b80:	2e0f      	cmp	r6, #15
    2b82:	d900      	bls.n	2b86 <__aeabi_ddiv+0x8e>
    2b84:	e0b4      	b.n	2cf0 <__aeabi_ddiv+0x1f8>
    2b86:	4b57      	ldr	r3, [pc, #348]	; (2ce4 <__aeabi_ddiv+0x1ec>)
    2b88:	00b6      	lsls	r6, r6, #2
    2b8a:	599b      	ldr	r3, [r3, r6]
    2b8c:	469f      	mov	pc, r3
    2b8e:	0003      	movs	r3, r0
    2b90:	4333      	orrs	r3, r6
    2b92:	4699      	mov	r9, r3
    2b94:	d16c      	bne.n	2c70 <__aeabi_ddiv+0x178>
    2b96:	2300      	movs	r3, #0
    2b98:	4698      	mov	r8, r3
    2b9a:	3302      	adds	r3, #2
    2b9c:	2608      	movs	r6, #8
    2b9e:	9303      	str	r3, [sp, #12]
    2ba0:	e7ce      	b.n	2b40 <__aeabi_ddiv+0x48>
    2ba2:	46cb      	mov	fp, r9
    2ba4:	4641      	mov	r1, r8
    2ba6:	9a03      	ldr	r2, [sp, #12]
    2ba8:	9701      	str	r7, [sp, #4]
    2baa:	2a02      	cmp	r2, #2
    2bac:	d165      	bne.n	2c7a <__aeabi_ddiv+0x182>
    2bae:	9b01      	ldr	r3, [sp, #4]
    2bb0:	4c4a      	ldr	r4, [pc, #296]	; (2cdc <__aeabi_ddiv+0x1e4>)
    2bb2:	469c      	mov	ip, r3
    2bb4:	2300      	movs	r3, #0
    2bb6:	2200      	movs	r2, #0
    2bb8:	4698      	mov	r8, r3
    2bba:	e06b      	b.n	2c94 <__aeabi_ddiv+0x19c>
    2bbc:	0003      	movs	r3, r0
    2bbe:	4333      	orrs	r3, r6
    2bc0:	4699      	mov	r9, r3
    2bc2:	d04e      	beq.n	2c62 <__aeabi_ddiv+0x16a>
    2bc4:	2e00      	cmp	r6, #0
    2bc6:	d100      	bne.n	2bca <__aeabi_ddiv+0xd2>
    2bc8:	e1bc      	b.n	2f44 <__aeabi_ddiv+0x44c>
    2bca:	0030      	movs	r0, r6
    2bcc:	f001 fa26 	bl	401c <__clzsi2>
    2bd0:	0003      	movs	r3, r0
    2bd2:	3b0b      	subs	r3, #11
    2bd4:	2b1c      	cmp	r3, #28
    2bd6:	dd00      	ble.n	2bda <__aeabi_ddiv+0xe2>
    2bd8:	e1ac      	b.n	2f34 <__aeabi_ddiv+0x43c>
    2bda:	221d      	movs	r2, #29
    2bdc:	1ad3      	subs	r3, r2, r3
    2bde:	465a      	mov	r2, fp
    2be0:	0001      	movs	r1, r0
    2be2:	40da      	lsrs	r2, r3
    2be4:	3908      	subs	r1, #8
    2be6:	408e      	lsls	r6, r1
    2be8:	0013      	movs	r3, r2
    2bea:	4333      	orrs	r3, r6
    2bec:	4699      	mov	r9, r3
    2bee:	465b      	mov	r3, fp
    2bf0:	408b      	lsls	r3, r1
    2bf2:	4698      	mov	r8, r3
    2bf4:	2300      	movs	r3, #0
    2bf6:	4c3c      	ldr	r4, [pc, #240]	; (2ce8 <__aeabi_ddiv+0x1f0>)
    2bf8:	2600      	movs	r6, #0
    2bfa:	1a24      	subs	r4, r4, r0
    2bfc:	9303      	str	r3, [sp, #12]
    2bfe:	e79f      	b.n	2b40 <__aeabi_ddiv+0x48>
    2c00:	4651      	mov	r1, sl
    2c02:	465a      	mov	r2, fp
    2c04:	4311      	orrs	r1, r2
    2c06:	d129      	bne.n	2c5c <__aeabi_ddiv+0x164>
    2c08:	2200      	movs	r2, #0
    2c0a:	4693      	mov	fp, r2
    2c0c:	3202      	adds	r2, #2
    2c0e:	e7b1      	b.n	2b74 <__aeabi_ddiv+0x7c>
    2c10:	4659      	mov	r1, fp
    2c12:	4301      	orrs	r1, r0
    2c14:	d01e      	beq.n	2c54 <__aeabi_ddiv+0x15c>
    2c16:	465b      	mov	r3, fp
    2c18:	2b00      	cmp	r3, #0
    2c1a:	d100      	bne.n	2c1e <__aeabi_ddiv+0x126>
    2c1c:	e19e      	b.n	2f5c <__aeabi_ddiv+0x464>
    2c1e:	4658      	mov	r0, fp
    2c20:	f001 f9fc 	bl	401c <__clzsi2>
    2c24:	0003      	movs	r3, r0
    2c26:	3b0b      	subs	r3, #11
    2c28:	2b1c      	cmp	r3, #28
    2c2a:	dd00      	ble.n	2c2e <__aeabi_ddiv+0x136>
    2c2c:	e18f      	b.n	2f4e <__aeabi_ddiv+0x456>
    2c2e:	0002      	movs	r2, r0
    2c30:	4659      	mov	r1, fp
    2c32:	3a08      	subs	r2, #8
    2c34:	4091      	lsls	r1, r2
    2c36:	468b      	mov	fp, r1
    2c38:	211d      	movs	r1, #29
    2c3a:	1acb      	subs	r3, r1, r3
    2c3c:	4651      	mov	r1, sl
    2c3e:	40d9      	lsrs	r1, r3
    2c40:	000b      	movs	r3, r1
    2c42:	4659      	mov	r1, fp
    2c44:	430b      	orrs	r3, r1
    2c46:	4651      	mov	r1, sl
    2c48:	469b      	mov	fp, r3
    2c4a:	4091      	lsls	r1, r2
    2c4c:	4b26      	ldr	r3, [pc, #152]	; (2ce8 <__aeabi_ddiv+0x1f0>)
    2c4e:	2200      	movs	r2, #0
    2c50:	1a1b      	subs	r3, r3, r0
    2c52:	e78f      	b.n	2b74 <__aeabi_ddiv+0x7c>
    2c54:	2300      	movs	r3, #0
    2c56:	2201      	movs	r2, #1
    2c58:	469b      	mov	fp, r3
    2c5a:	e78b      	b.n	2b74 <__aeabi_ddiv+0x7c>
    2c5c:	4651      	mov	r1, sl
    2c5e:	2203      	movs	r2, #3
    2c60:	e788      	b.n	2b74 <__aeabi_ddiv+0x7c>
    2c62:	2300      	movs	r3, #0
    2c64:	4698      	mov	r8, r3
    2c66:	3301      	adds	r3, #1
    2c68:	2604      	movs	r6, #4
    2c6a:	2400      	movs	r4, #0
    2c6c:	9303      	str	r3, [sp, #12]
    2c6e:	e767      	b.n	2b40 <__aeabi_ddiv+0x48>
    2c70:	2303      	movs	r3, #3
    2c72:	46b1      	mov	r9, r6
    2c74:	9303      	str	r3, [sp, #12]
    2c76:	260c      	movs	r6, #12
    2c78:	e762      	b.n	2b40 <__aeabi_ddiv+0x48>
    2c7a:	2a03      	cmp	r2, #3
    2c7c:	d100      	bne.n	2c80 <__aeabi_ddiv+0x188>
    2c7e:	e25c      	b.n	313a <__aeabi_ddiv+0x642>
    2c80:	9b01      	ldr	r3, [sp, #4]
    2c82:	2a01      	cmp	r2, #1
    2c84:	d000      	beq.n	2c88 <__aeabi_ddiv+0x190>
    2c86:	e1e4      	b.n	3052 <__aeabi_ddiv+0x55a>
    2c88:	4013      	ands	r3, r2
    2c8a:	469c      	mov	ip, r3
    2c8c:	2300      	movs	r3, #0
    2c8e:	2400      	movs	r4, #0
    2c90:	2200      	movs	r2, #0
    2c92:	4698      	mov	r8, r3
    2c94:	2100      	movs	r1, #0
    2c96:	0312      	lsls	r2, r2, #12
    2c98:	0b13      	lsrs	r3, r2, #12
    2c9a:	0d0a      	lsrs	r2, r1, #20
    2c9c:	0512      	lsls	r2, r2, #20
    2c9e:	431a      	orrs	r2, r3
    2ca0:	0523      	lsls	r3, r4, #20
    2ca2:	4c12      	ldr	r4, [pc, #72]	; (2cec <__aeabi_ddiv+0x1f4>)
    2ca4:	4640      	mov	r0, r8
    2ca6:	4022      	ands	r2, r4
    2ca8:	4313      	orrs	r3, r2
    2caa:	4662      	mov	r2, ip
    2cac:	005b      	lsls	r3, r3, #1
    2cae:	07d2      	lsls	r2, r2, #31
    2cb0:	085b      	lsrs	r3, r3, #1
    2cb2:	4313      	orrs	r3, r2
    2cb4:	0019      	movs	r1, r3
    2cb6:	b007      	add	sp, #28
    2cb8:	bc3c      	pop	{r2, r3, r4, r5}
    2cba:	4690      	mov	r8, r2
    2cbc:	4699      	mov	r9, r3
    2cbe:	46a2      	mov	sl, r4
    2cc0:	46ab      	mov	fp, r5
    2cc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2cc4:	2300      	movs	r3, #0
    2cc6:	2280      	movs	r2, #128	; 0x80
    2cc8:	469c      	mov	ip, r3
    2cca:	0312      	lsls	r2, r2, #12
    2ccc:	4698      	mov	r8, r3
    2cce:	4c03      	ldr	r4, [pc, #12]	; (2cdc <__aeabi_ddiv+0x1e4>)
    2cd0:	e7e0      	b.n	2c94 <__aeabi_ddiv+0x19c>
    2cd2:	2300      	movs	r3, #0
    2cd4:	4c01      	ldr	r4, [pc, #4]	; (2cdc <__aeabi_ddiv+0x1e4>)
    2cd6:	2200      	movs	r2, #0
    2cd8:	4698      	mov	r8, r3
    2cda:	e7db      	b.n	2c94 <__aeabi_ddiv+0x19c>
    2cdc:	000007ff 	.word	0x000007ff
    2ce0:	fffffc01 	.word	0xfffffc01
    2ce4:	00009bf8 	.word	0x00009bf8
    2ce8:	fffffc0d 	.word	0xfffffc0d
    2cec:	800fffff 	.word	0x800fffff
    2cf0:	45d9      	cmp	r9, fp
    2cf2:	d900      	bls.n	2cf6 <__aeabi_ddiv+0x1fe>
    2cf4:	e139      	b.n	2f6a <__aeabi_ddiv+0x472>
    2cf6:	d100      	bne.n	2cfa <__aeabi_ddiv+0x202>
    2cf8:	e134      	b.n	2f64 <__aeabi_ddiv+0x46c>
    2cfa:	2300      	movs	r3, #0
    2cfc:	4646      	mov	r6, r8
    2cfe:	464d      	mov	r5, r9
    2d00:	469a      	mov	sl, r3
    2d02:	3c01      	subs	r4, #1
    2d04:	465b      	mov	r3, fp
    2d06:	0e0a      	lsrs	r2, r1, #24
    2d08:	021b      	lsls	r3, r3, #8
    2d0a:	431a      	orrs	r2, r3
    2d0c:	020b      	lsls	r3, r1, #8
    2d0e:	0c17      	lsrs	r7, r2, #16
    2d10:	9303      	str	r3, [sp, #12]
    2d12:	0413      	lsls	r3, r2, #16
    2d14:	0c1b      	lsrs	r3, r3, #16
    2d16:	0039      	movs	r1, r7
    2d18:	0028      	movs	r0, r5
    2d1a:	4690      	mov	r8, r2
    2d1c:	9301      	str	r3, [sp, #4]
    2d1e:	f7ff fd7f 	bl	2820 <__udivsi3>
    2d22:	0002      	movs	r2, r0
    2d24:	9b01      	ldr	r3, [sp, #4]
    2d26:	4683      	mov	fp, r0
    2d28:	435a      	muls	r2, r3
    2d2a:	0028      	movs	r0, r5
    2d2c:	0039      	movs	r1, r7
    2d2e:	4691      	mov	r9, r2
    2d30:	f7ff fdfc 	bl	292c <__aeabi_uidivmod>
    2d34:	0c35      	lsrs	r5, r6, #16
    2d36:	0409      	lsls	r1, r1, #16
    2d38:	430d      	orrs	r5, r1
    2d3a:	45a9      	cmp	r9, r5
    2d3c:	d90d      	bls.n	2d5a <__aeabi_ddiv+0x262>
    2d3e:	465b      	mov	r3, fp
    2d40:	4445      	add	r5, r8
    2d42:	3b01      	subs	r3, #1
    2d44:	45a8      	cmp	r8, r5
    2d46:	d900      	bls.n	2d4a <__aeabi_ddiv+0x252>
    2d48:	e13a      	b.n	2fc0 <__aeabi_ddiv+0x4c8>
    2d4a:	45a9      	cmp	r9, r5
    2d4c:	d800      	bhi.n	2d50 <__aeabi_ddiv+0x258>
    2d4e:	e137      	b.n	2fc0 <__aeabi_ddiv+0x4c8>
    2d50:	2302      	movs	r3, #2
    2d52:	425b      	negs	r3, r3
    2d54:	469c      	mov	ip, r3
    2d56:	4445      	add	r5, r8
    2d58:	44e3      	add	fp, ip
    2d5a:	464b      	mov	r3, r9
    2d5c:	1aeb      	subs	r3, r5, r3
    2d5e:	0039      	movs	r1, r7
    2d60:	0018      	movs	r0, r3
    2d62:	9304      	str	r3, [sp, #16]
    2d64:	f7ff fd5c 	bl	2820 <__udivsi3>
    2d68:	9b01      	ldr	r3, [sp, #4]
    2d6a:	0005      	movs	r5, r0
    2d6c:	4343      	muls	r3, r0
    2d6e:	0039      	movs	r1, r7
    2d70:	9804      	ldr	r0, [sp, #16]
    2d72:	4699      	mov	r9, r3
    2d74:	f7ff fdda 	bl	292c <__aeabi_uidivmod>
    2d78:	0433      	lsls	r3, r6, #16
    2d7a:	0409      	lsls	r1, r1, #16
    2d7c:	0c1b      	lsrs	r3, r3, #16
    2d7e:	430b      	orrs	r3, r1
    2d80:	4599      	cmp	r9, r3
    2d82:	d909      	bls.n	2d98 <__aeabi_ddiv+0x2a0>
    2d84:	4443      	add	r3, r8
    2d86:	1e6a      	subs	r2, r5, #1
    2d88:	4598      	cmp	r8, r3
    2d8a:	d900      	bls.n	2d8e <__aeabi_ddiv+0x296>
    2d8c:	e11a      	b.n	2fc4 <__aeabi_ddiv+0x4cc>
    2d8e:	4599      	cmp	r9, r3
    2d90:	d800      	bhi.n	2d94 <__aeabi_ddiv+0x29c>
    2d92:	e117      	b.n	2fc4 <__aeabi_ddiv+0x4cc>
    2d94:	3d02      	subs	r5, #2
    2d96:	4443      	add	r3, r8
    2d98:	464a      	mov	r2, r9
    2d9a:	1a9b      	subs	r3, r3, r2
    2d9c:	465a      	mov	r2, fp
    2d9e:	0412      	lsls	r2, r2, #16
    2da0:	432a      	orrs	r2, r5
    2da2:	9903      	ldr	r1, [sp, #12]
    2da4:	4693      	mov	fp, r2
    2da6:	0c10      	lsrs	r0, r2, #16
    2da8:	0c0a      	lsrs	r2, r1, #16
    2daa:	4691      	mov	r9, r2
    2dac:	0409      	lsls	r1, r1, #16
    2dae:	465a      	mov	r2, fp
    2db0:	0c09      	lsrs	r1, r1, #16
    2db2:	464e      	mov	r6, r9
    2db4:	000d      	movs	r5, r1
    2db6:	0412      	lsls	r2, r2, #16
    2db8:	0c12      	lsrs	r2, r2, #16
    2dba:	4345      	muls	r5, r0
    2dbc:	9105      	str	r1, [sp, #20]
    2dbe:	4351      	muls	r1, r2
    2dc0:	4372      	muls	r2, r6
    2dc2:	4370      	muls	r0, r6
    2dc4:	1952      	adds	r2, r2, r5
    2dc6:	0c0e      	lsrs	r6, r1, #16
    2dc8:	18b2      	adds	r2, r6, r2
    2dca:	4295      	cmp	r5, r2
    2dcc:	d903      	bls.n	2dd6 <__aeabi_ddiv+0x2de>
    2dce:	2580      	movs	r5, #128	; 0x80
    2dd0:	026d      	lsls	r5, r5, #9
    2dd2:	46ac      	mov	ip, r5
    2dd4:	4460      	add	r0, ip
    2dd6:	0c15      	lsrs	r5, r2, #16
    2dd8:	0409      	lsls	r1, r1, #16
    2dda:	0412      	lsls	r2, r2, #16
    2ddc:	0c09      	lsrs	r1, r1, #16
    2dde:	1828      	adds	r0, r5, r0
    2de0:	1852      	adds	r2, r2, r1
    2de2:	4283      	cmp	r3, r0
    2de4:	d200      	bcs.n	2de8 <__aeabi_ddiv+0x2f0>
    2de6:	e0ce      	b.n	2f86 <__aeabi_ddiv+0x48e>
    2de8:	d100      	bne.n	2dec <__aeabi_ddiv+0x2f4>
    2dea:	e0c8      	b.n	2f7e <__aeabi_ddiv+0x486>
    2dec:	1a1d      	subs	r5, r3, r0
    2dee:	4653      	mov	r3, sl
    2df0:	1a9e      	subs	r6, r3, r2
    2df2:	45b2      	cmp	sl, r6
    2df4:	4192      	sbcs	r2, r2
    2df6:	4252      	negs	r2, r2
    2df8:	1aab      	subs	r3, r5, r2
    2dfa:	469a      	mov	sl, r3
    2dfc:	4598      	cmp	r8, r3
    2dfe:	d100      	bne.n	2e02 <__aeabi_ddiv+0x30a>
    2e00:	e117      	b.n	3032 <__aeabi_ddiv+0x53a>
    2e02:	0039      	movs	r1, r7
    2e04:	0018      	movs	r0, r3
    2e06:	f7ff fd0b 	bl	2820 <__udivsi3>
    2e0a:	9b01      	ldr	r3, [sp, #4]
    2e0c:	0005      	movs	r5, r0
    2e0e:	4343      	muls	r3, r0
    2e10:	0039      	movs	r1, r7
    2e12:	4650      	mov	r0, sl
    2e14:	9304      	str	r3, [sp, #16]
    2e16:	f7ff fd89 	bl	292c <__aeabi_uidivmod>
    2e1a:	9804      	ldr	r0, [sp, #16]
    2e1c:	040b      	lsls	r3, r1, #16
    2e1e:	0c31      	lsrs	r1, r6, #16
    2e20:	4319      	orrs	r1, r3
    2e22:	4288      	cmp	r0, r1
    2e24:	d909      	bls.n	2e3a <__aeabi_ddiv+0x342>
    2e26:	4441      	add	r1, r8
    2e28:	1e6b      	subs	r3, r5, #1
    2e2a:	4588      	cmp	r8, r1
    2e2c:	d900      	bls.n	2e30 <__aeabi_ddiv+0x338>
    2e2e:	e107      	b.n	3040 <__aeabi_ddiv+0x548>
    2e30:	4288      	cmp	r0, r1
    2e32:	d800      	bhi.n	2e36 <__aeabi_ddiv+0x33e>
    2e34:	e104      	b.n	3040 <__aeabi_ddiv+0x548>
    2e36:	3d02      	subs	r5, #2
    2e38:	4441      	add	r1, r8
    2e3a:	9b04      	ldr	r3, [sp, #16]
    2e3c:	1acb      	subs	r3, r1, r3
    2e3e:	0018      	movs	r0, r3
    2e40:	0039      	movs	r1, r7
    2e42:	9304      	str	r3, [sp, #16]
    2e44:	f7ff fcec 	bl	2820 <__udivsi3>
    2e48:	9b01      	ldr	r3, [sp, #4]
    2e4a:	4682      	mov	sl, r0
    2e4c:	4343      	muls	r3, r0
    2e4e:	0039      	movs	r1, r7
    2e50:	9804      	ldr	r0, [sp, #16]
    2e52:	9301      	str	r3, [sp, #4]
    2e54:	f7ff fd6a 	bl	292c <__aeabi_uidivmod>
    2e58:	9801      	ldr	r0, [sp, #4]
    2e5a:	040b      	lsls	r3, r1, #16
    2e5c:	0431      	lsls	r1, r6, #16
    2e5e:	0c09      	lsrs	r1, r1, #16
    2e60:	4319      	orrs	r1, r3
    2e62:	4288      	cmp	r0, r1
    2e64:	d90d      	bls.n	2e82 <__aeabi_ddiv+0x38a>
    2e66:	4653      	mov	r3, sl
    2e68:	4441      	add	r1, r8
    2e6a:	3b01      	subs	r3, #1
    2e6c:	4588      	cmp	r8, r1
    2e6e:	d900      	bls.n	2e72 <__aeabi_ddiv+0x37a>
    2e70:	e0e8      	b.n	3044 <__aeabi_ddiv+0x54c>
    2e72:	4288      	cmp	r0, r1
    2e74:	d800      	bhi.n	2e78 <__aeabi_ddiv+0x380>
    2e76:	e0e5      	b.n	3044 <__aeabi_ddiv+0x54c>
    2e78:	2302      	movs	r3, #2
    2e7a:	425b      	negs	r3, r3
    2e7c:	469c      	mov	ip, r3
    2e7e:	4441      	add	r1, r8
    2e80:	44e2      	add	sl, ip
    2e82:	9b01      	ldr	r3, [sp, #4]
    2e84:	042d      	lsls	r5, r5, #16
    2e86:	1ace      	subs	r6, r1, r3
    2e88:	4651      	mov	r1, sl
    2e8a:	4329      	orrs	r1, r5
    2e8c:	9d05      	ldr	r5, [sp, #20]
    2e8e:	464f      	mov	r7, r9
    2e90:	002a      	movs	r2, r5
    2e92:	040b      	lsls	r3, r1, #16
    2e94:	0c08      	lsrs	r0, r1, #16
    2e96:	0c1b      	lsrs	r3, r3, #16
    2e98:	435a      	muls	r2, r3
    2e9a:	4345      	muls	r5, r0
    2e9c:	437b      	muls	r3, r7
    2e9e:	4378      	muls	r0, r7
    2ea0:	195b      	adds	r3, r3, r5
    2ea2:	0c17      	lsrs	r7, r2, #16
    2ea4:	18fb      	adds	r3, r7, r3
    2ea6:	429d      	cmp	r5, r3
    2ea8:	d903      	bls.n	2eb2 <__aeabi_ddiv+0x3ba>
    2eaa:	2580      	movs	r5, #128	; 0x80
    2eac:	026d      	lsls	r5, r5, #9
    2eae:	46ac      	mov	ip, r5
    2eb0:	4460      	add	r0, ip
    2eb2:	0c1d      	lsrs	r5, r3, #16
    2eb4:	0412      	lsls	r2, r2, #16
    2eb6:	041b      	lsls	r3, r3, #16
    2eb8:	0c12      	lsrs	r2, r2, #16
    2eba:	1828      	adds	r0, r5, r0
    2ebc:	189b      	adds	r3, r3, r2
    2ebe:	4286      	cmp	r6, r0
    2ec0:	d200      	bcs.n	2ec4 <__aeabi_ddiv+0x3cc>
    2ec2:	e093      	b.n	2fec <__aeabi_ddiv+0x4f4>
    2ec4:	d100      	bne.n	2ec8 <__aeabi_ddiv+0x3d0>
    2ec6:	e08e      	b.n	2fe6 <__aeabi_ddiv+0x4ee>
    2ec8:	2301      	movs	r3, #1
    2eca:	4319      	orrs	r1, r3
    2ecc:	4ba0      	ldr	r3, [pc, #640]	; (3150 <__aeabi_ddiv+0x658>)
    2ece:	18e3      	adds	r3, r4, r3
    2ed0:	2b00      	cmp	r3, #0
    2ed2:	dc00      	bgt.n	2ed6 <__aeabi_ddiv+0x3de>
    2ed4:	e099      	b.n	300a <__aeabi_ddiv+0x512>
    2ed6:	074a      	lsls	r2, r1, #29
    2ed8:	d000      	beq.n	2edc <__aeabi_ddiv+0x3e4>
    2eda:	e09e      	b.n	301a <__aeabi_ddiv+0x522>
    2edc:	465a      	mov	r2, fp
    2ede:	01d2      	lsls	r2, r2, #7
    2ee0:	d506      	bpl.n	2ef0 <__aeabi_ddiv+0x3f8>
    2ee2:	465a      	mov	r2, fp
    2ee4:	4b9b      	ldr	r3, [pc, #620]	; (3154 <__aeabi_ddiv+0x65c>)
    2ee6:	401a      	ands	r2, r3
    2ee8:	2380      	movs	r3, #128	; 0x80
    2eea:	4693      	mov	fp, r2
    2eec:	00db      	lsls	r3, r3, #3
    2eee:	18e3      	adds	r3, r4, r3
    2ef0:	4a99      	ldr	r2, [pc, #612]	; (3158 <__aeabi_ddiv+0x660>)
    2ef2:	4293      	cmp	r3, r2
    2ef4:	dd68      	ble.n	2fc8 <__aeabi_ddiv+0x4d0>
    2ef6:	2301      	movs	r3, #1
    2ef8:	9a02      	ldr	r2, [sp, #8]
    2efa:	4c98      	ldr	r4, [pc, #608]	; (315c <__aeabi_ddiv+0x664>)
    2efc:	401a      	ands	r2, r3
    2efe:	2300      	movs	r3, #0
    2f00:	4694      	mov	ip, r2
    2f02:	4698      	mov	r8, r3
    2f04:	2200      	movs	r2, #0
    2f06:	e6c5      	b.n	2c94 <__aeabi_ddiv+0x19c>
    2f08:	2280      	movs	r2, #128	; 0x80
    2f0a:	464b      	mov	r3, r9
    2f0c:	0312      	lsls	r2, r2, #12
    2f0e:	4213      	tst	r3, r2
    2f10:	d00a      	beq.n	2f28 <__aeabi_ddiv+0x430>
    2f12:	465b      	mov	r3, fp
    2f14:	4213      	tst	r3, r2
    2f16:	d106      	bne.n	2f26 <__aeabi_ddiv+0x42e>
    2f18:	431a      	orrs	r2, r3
    2f1a:	0312      	lsls	r2, r2, #12
    2f1c:	0b12      	lsrs	r2, r2, #12
    2f1e:	46ac      	mov	ip, r5
    2f20:	4688      	mov	r8, r1
    2f22:	4c8e      	ldr	r4, [pc, #568]	; (315c <__aeabi_ddiv+0x664>)
    2f24:	e6b6      	b.n	2c94 <__aeabi_ddiv+0x19c>
    2f26:	464b      	mov	r3, r9
    2f28:	431a      	orrs	r2, r3
    2f2a:	0312      	lsls	r2, r2, #12
    2f2c:	0b12      	lsrs	r2, r2, #12
    2f2e:	46bc      	mov	ip, r7
    2f30:	4c8a      	ldr	r4, [pc, #552]	; (315c <__aeabi_ddiv+0x664>)
    2f32:	e6af      	b.n	2c94 <__aeabi_ddiv+0x19c>
    2f34:	0003      	movs	r3, r0
    2f36:	465a      	mov	r2, fp
    2f38:	3b28      	subs	r3, #40	; 0x28
    2f3a:	409a      	lsls	r2, r3
    2f3c:	2300      	movs	r3, #0
    2f3e:	4691      	mov	r9, r2
    2f40:	4698      	mov	r8, r3
    2f42:	e657      	b.n	2bf4 <__aeabi_ddiv+0xfc>
    2f44:	4658      	mov	r0, fp
    2f46:	f001 f869 	bl	401c <__clzsi2>
    2f4a:	3020      	adds	r0, #32
    2f4c:	e640      	b.n	2bd0 <__aeabi_ddiv+0xd8>
    2f4e:	0003      	movs	r3, r0
    2f50:	4652      	mov	r2, sl
    2f52:	3b28      	subs	r3, #40	; 0x28
    2f54:	409a      	lsls	r2, r3
    2f56:	2100      	movs	r1, #0
    2f58:	4693      	mov	fp, r2
    2f5a:	e677      	b.n	2c4c <__aeabi_ddiv+0x154>
    2f5c:	f001 f85e 	bl	401c <__clzsi2>
    2f60:	3020      	adds	r0, #32
    2f62:	e65f      	b.n	2c24 <__aeabi_ddiv+0x12c>
    2f64:	4588      	cmp	r8, r1
    2f66:	d200      	bcs.n	2f6a <__aeabi_ddiv+0x472>
    2f68:	e6c7      	b.n	2cfa <__aeabi_ddiv+0x202>
    2f6a:	464b      	mov	r3, r9
    2f6c:	07de      	lsls	r6, r3, #31
    2f6e:	085d      	lsrs	r5, r3, #1
    2f70:	4643      	mov	r3, r8
    2f72:	085b      	lsrs	r3, r3, #1
    2f74:	431e      	orrs	r6, r3
    2f76:	4643      	mov	r3, r8
    2f78:	07db      	lsls	r3, r3, #31
    2f7a:	469a      	mov	sl, r3
    2f7c:	e6c2      	b.n	2d04 <__aeabi_ddiv+0x20c>
    2f7e:	2500      	movs	r5, #0
    2f80:	4592      	cmp	sl, r2
    2f82:	d300      	bcc.n	2f86 <__aeabi_ddiv+0x48e>
    2f84:	e733      	b.n	2dee <__aeabi_ddiv+0x2f6>
    2f86:	9e03      	ldr	r6, [sp, #12]
    2f88:	4659      	mov	r1, fp
    2f8a:	46b4      	mov	ip, r6
    2f8c:	44e2      	add	sl, ip
    2f8e:	45b2      	cmp	sl, r6
    2f90:	41ad      	sbcs	r5, r5
    2f92:	426d      	negs	r5, r5
    2f94:	4445      	add	r5, r8
    2f96:	18eb      	adds	r3, r5, r3
    2f98:	3901      	subs	r1, #1
    2f9a:	4598      	cmp	r8, r3
    2f9c:	d207      	bcs.n	2fae <__aeabi_ddiv+0x4b6>
    2f9e:	4298      	cmp	r0, r3
    2fa0:	d900      	bls.n	2fa4 <__aeabi_ddiv+0x4ac>
    2fa2:	e07f      	b.n	30a4 <__aeabi_ddiv+0x5ac>
    2fa4:	d100      	bne.n	2fa8 <__aeabi_ddiv+0x4b0>
    2fa6:	e0bc      	b.n	3122 <__aeabi_ddiv+0x62a>
    2fa8:	1a1d      	subs	r5, r3, r0
    2faa:	468b      	mov	fp, r1
    2fac:	e71f      	b.n	2dee <__aeabi_ddiv+0x2f6>
    2fae:	4598      	cmp	r8, r3
    2fb0:	d1fa      	bne.n	2fa8 <__aeabi_ddiv+0x4b0>
    2fb2:	9d03      	ldr	r5, [sp, #12]
    2fb4:	4555      	cmp	r5, sl
    2fb6:	d9f2      	bls.n	2f9e <__aeabi_ddiv+0x4a6>
    2fb8:	4643      	mov	r3, r8
    2fba:	468b      	mov	fp, r1
    2fbc:	1a1d      	subs	r5, r3, r0
    2fbe:	e716      	b.n	2dee <__aeabi_ddiv+0x2f6>
    2fc0:	469b      	mov	fp, r3
    2fc2:	e6ca      	b.n	2d5a <__aeabi_ddiv+0x262>
    2fc4:	0015      	movs	r5, r2
    2fc6:	e6e7      	b.n	2d98 <__aeabi_ddiv+0x2a0>
    2fc8:	465a      	mov	r2, fp
    2fca:	08c9      	lsrs	r1, r1, #3
    2fcc:	0752      	lsls	r2, r2, #29
    2fce:	430a      	orrs	r2, r1
    2fd0:	055b      	lsls	r3, r3, #21
    2fd2:	4690      	mov	r8, r2
    2fd4:	0d5c      	lsrs	r4, r3, #21
    2fd6:	465a      	mov	r2, fp
    2fd8:	2301      	movs	r3, #1
    2fda:	9902      	ldr	r1, [sp, #8]
    2fdc:	0252      	lsls	r2, r2, #9
    2fde:	4019      	ands	r1, r3
    2fe0:	0b12      	lsrs	r2, r2, #12
    2fe2:	468c      	mov	ip, r1
    2fe4:	e656      	b.n	2c94 <__aeabi_ddiv+0x19c>
    2fe6:	2b00      	cmp	r3, #0
    2fe8:	d100      	bne.n	2fec <__aeabi_ddiv+0x4f4>
    2fea:	e76f      	b.n	2ecc <__aeabi_ddiv+0x3d4>
    2fec:	4446      	add	r6, r8
    2fee:	1e4a      	subs	r2, r1, #1
    2ff0:	45b0      	cmp	r8, r6
    2ff2:	d929      	bls.n	3048 <__aeabi_ddiv+0x550>
    2ff4:	0011      	movs	r1, r2
    2ff6:	4286      	cmp	r6, r0
    2ff8:	d000      	beq.n	2ffc <__aeabi_ddiv+0x504>
    2ffa:	e765      	b.n	2ec8 <__aeabi_ddiv+0x3d0>
    2ffc:	9a03      	ldr	r2, [sp, #12]
    2ffe:	4293      	cmp	r3, r2
    3000:	d000      	beq.n	3004 <__aeabi_ddiv+0x50c>
    3002:	e761      	b.n	2ec8 <__aeabi_ddiv+0x3d0>
    3004:	e762      	b.n	2ecc <__aeabi_ddiv+0x3d4>
    3006:	2101      	movs	r1, #1
    3008:	4249      	negs	r1, r1
    300a:	2001      	movs	r0, #1
    300c:	1ac2      	subs	r2, r0, r3
    300e:	2a38      	cmp	r2, #56	; 0x38
    3010:	dd21      	ble.n	3056 <__aeabi_ddiv+0x55e>
    3012:	9b02      	ldr	r3, [sp, #8]
    3014:	4003      	ands	r3, r0
    3016:	469c      	mov	ip, r3
    3018:	e638      	b.n	2c8c <__aeabi_ddiv+0x194>
    301a:	220f      	movs	r2, #15
    301c:	400a      	ands	r2, r1
    301e:	2a04      	cmp	r2, #4
    3020:	d100      	bne.n	3024 <__aeabi_ddiv+0x52c>
    3022:	e75b      	b.n	2edc <__aeabi_ddiv+0x3e4>
    3024:	000a      	movs	r2, r1
    3026:	1d11      	adds	r1, r2, #4
    3028:	4291      	cmp	r1, r2
    302a:	4192      	sbcs	r2, r2
    302c:	4252      	negs	r2, r2
    302e:	4493      	add	fp, r2
    3030:	e754      	b.n	2edc <__aeabi_ddiv+0x3e4>
    3032:	4b47      	ldr	r3, [pc, #284]	; (3150 <__aeabi_ddiv+0x658>)
    3034:	18e3      	adds	r3, r4, r3
    3036:	2b00      	cmp	r3, #0
    3038:	dde5      	ble.n	3006 <__aeabi_ddiv+0x50e>
    303a:	2201      	movs	r2, #1
    303c:	4252      	negs	r2, r2
    303e:	e7f2      	b.n	3026 <__aeabi_ddiv+0x52e>
    3040:	001d      	movs	r5, r3
    3042:	e6fa      	b.n	2e3a <__aeabi_ddiv+0x342>
    3044:	469a      	mov	sl, r3
    3046:	e71c      	b.n	2e82 <__aeabi_ddiv+0x38a>
    3048:	42b0      	cmp	r0, r6
    304a:	d839      	bhi.n	30c0 <__aeabi_ddiv+0x5c8>
    304c:	d06e      	beq.n	312c <__aeabi_ddiv+0x634>
    304e:	0011      	movs	r1, r2
    3050:	e73a      	b.n	2ec8 <__aeabi_ddiv+0x3d0>
    3052:	9302      	str	r3, [sp, #8]
    3054:	e73a      	b.n	2ecc <__aeabi_ddiv+0x3d4>
    3056:	2a1f      	cmp	r2, #31
    3058:	dc3c      	bgt.n	30d4 <__aeabi_ddiv+0x5dc>
    305a:	2320      	movs	r3, #32
    305c:	1a9b      	subs	r3, r3, r2
    305e:	000c      	movs	r4, r1
    3060:	4658      	mov	r0, fp
    3062:	4099      	lsls	r1, r3
    3064:	4098      	lsls	r0, r3
    3066:	1e4b      	subs	r3, r1, #1
    3068:	4199      	sbcs	r1, r3
    306a:	465b      	mov	r3, fp
    306c:	40d4      	lsrs	r4, r2
    306e:	40d3      	lsrs	r3, r2
    3070:	4320      	orrs	r0, r4
    3072:	4308      	orrs	r0, r1
    3074:	001a      	movs	r2, r3
    3076:	0743      	lsls	r3, r0, #29
    3078:	d009      	beq.n	308e <__aeabi_ddiv+0x596>
    307a:	230f      	movs	r3, #15
    307c:	4003      	ands	r3, r0
    307e:	2b04      	cmp	r3, #4
    3080:	d005      	beq.n	308e <__aeabi_ddiv+0x596>
    3082:	0001      	movs	r1, r0
    3084:	1d08      	adds	r0, r1, #4
    3086:	4288      	cmp	r0, r1
    3088:	419b      	sbcs	r3, r3
    308a:	425b      	negs	r3, r3
    308c:	18d2      	adds	r2, r2, r3
    308e:	0213      	lsls	r3, r2, #8
    3090:	d53a      	bpl.n	3108 <__aeabi_ddiv+0x610>
    3092:	2301      	movs	r3, #1
    3094:	9a02      	ldr	r2, [sp, #8]
    3096:	2401      	movs	r4, #1
    3098:	401a      	ands	r2, r3
    309a:	2300      	movs	r3, #0
    309c:	4694      	mov	ip, r2
    309e:	4698      	mov	r8, r3
    30a0:	2200      	movs	r2, #0
    30a2:	e5f7      	b.n	2c94 <__aeabi_ddiv+0x19c>
    30a4:	2102      	movs	r1, #2
    30a6:	4249      	negs	r1, r1
    30a8:	468c      	mov	ip, r1
    30aa:	9d03      	ldr	r5, [sp, #12]
    30ac:	44e3      	add	fp, ip
    30ae:	46ac      	mov	ip, r5
    30b0:	44e2      	add	sl, ip
    30b2:	45aa      	cmp	sl, r5
    30b4:	41ad      	sbcs	r5, r5
    30b6:	426d      	negs	r5, r5
    30b8:	4445      	add	r5, r8
    30ba:	18ed      	adds	r5, r5, r3
    30bc:	1a2d      	subs	r5, r5, r0
    30be:	e696      	b.n	2dee <__aeabi_ddiv+0x2f6>
    30c0:	1e8a      	subs	r2, r1, #2
    30c2:	9903      	ldr	r1, [sp, #12]
    30c4:	004d      	lsls	r5, r1, #1
    30c6:	428d      	cmp	r5, r1
    30c8:	4189      	sbcs	r1, r1
    30ca:	4249      	negs	r1, r1
    30cc:	4441      	add	r1, r8
    30ce:	1876      	adds	r6, r6, r1
    30d0:	9503      	str	r5, [sp, #12]
    30d2:	e78f      	b.n	2ff4 <__aeabi_ddiv+0x4fc>
    30d4:	201f      	movs	r0, #31
    30d6:	4240      	negs	r0, r0
    30d8:	1ac3      	subs	r3, r0, r3
    30da:	4658      	mov	r0, fp
    30dc:	40d8      	lsrs	r0, r3
    30de:	0003      	movs	r3, r0
    30e0:	2a20      	cmp	r2, #32
    30e2:	d028      	beq.n	3136 <__aeabi_ddiv+0x63e>
    30e4:	2040      	movs	r0, #64	; 0x40
    30e6:	465d      	mov	r5, fp
    30e8:	1a82      	subs	r2, r0, r2
    30ea:	4095      	lsls	r5, r2
    30ec:	4329      	orrs	r1, r5
    30ee:	1e4a      	subs	r2, r1, #1
    30f0:	4191      	sbcs	r1, r2
    30f2:	4319      	orrs	r1, r3
    30f4:	2307      	movs	r3, #7
    30f6:	2200      	movs	r2, #0
    30f8:	400b      	ands	r3, r1
    30fa:	d009      	beq.n	3110 <__aeabi_ddiv+0x618>
    30fc:	230f      	movs	r3, #15
    30fe:	2200      	movs	r2, #0
    3100:	400b      	ands	r3, r1
    3102:	0008      	movs	r0, r1
    3104:	2b04      	cmp	r3, #4
    3106:	d1bd      	bne.n	3084 <__aeabi_ddiv+0x58c>
    3108:	0001      	movs	r1, r0
    310a:	0753      	lsls	r3, r2, #29
    310c:	0252      	lsls	r2, r2, #9
    310e:	0b12      	lsrs	r2, r2, #12
    3110:	08c9      	lsrs	r1, r1, #3
    3112:	4319      	orrs	r1, r3
    3114:	2301      	movs	r3, #1
    3116:	4688      	mov	r8, r1
    3118:	9902      	ldr	r1, [sp, #8]
    311a:	2400      	movs	r4, #0
    311c:	4019      	ands	r1, r3
    311e:	468c      	mov	ip, r1
    3120:	e5b8      	b.n	2c94 <__aeabi_ddiv+0x19c>
    3122:	4552      	cmp	r2, sl
    3124:	d8be      	bhi.n	30a4 <__aeabi_ddiv+0x5ac>
    3126:	468b      	mov	fp, r1
    3128:	2500      	movs	r5, #0
    312a:	e660      	b.n	2dee <__aeabi_ddiv+0x2f6>
    312c:	9d03      	ldr	r5, [sp, #12]
    312e:	429d      	cmp	r5, r3
    3130:	d3c6      	bcc.n	30c0 <__aeabi_ddiv+0x5c8>
    3132:	0011      	movs	r1, r2
    3134:	e762      	b.n	2ffc <__aeabi_ddiv+0x504>
    3136:	2500      	movs	r5, #0
    3138:	e7d8      	b.n	30ec <__aeabi_ddiv+0x5f4>
    313a:	2280      	movs	r2, #128	; 0x80
    313c:	465b      	mov	r3, fp
    313e:	0312      	lsls	r2, r2, #12
    3140:	431a      	orrs	r2, r3
    3142:	9b01      	ldr	r3, [sp, #4]
    3144:	0312      	lsls	r2, r2, #12
    3146:	0b12      	lsrs	r2, r2, #12
    3148:	469c      	mov	ip, r3
    314a:	4688      	mov	r8, r1
    314c:	4c03      	ldr	r4, [pc, #12]	; (315c <__aeabi_ddiv+0x664>)
    314e:	e5a1      	b.n	2c94 <__aeabi_ddiv+0x19c>
    3150:	000003ff 	.word	0x000003ff
    3154:	feffffff 	.word	0xfeffffff
    3158:	000007fe 	.word	0x000007fe
    315c:	000007ff 	.word	0x000007ff

00003160 <__aeabi_dmul>:
    3160:	b5f0      	push	{r4, r5, r6, r7, lr}
    3162:	4657      	mov	r7, sl
    3164:	4645      	mov	r5, r8
    3166:	46de      	mov	lr, fp
    3168:	464e      	mov	r6, r9
    316a:	b5e0      	push	{r5, r6, r7, lr}
    316c:	030c      	lsls	r4, r1, #12
    316e:	4698      	mov	r8, r3
    3170:	004e      	lsls	r6, r1, #1
    3172:	0b23      	lsrs	r3, r4, #12
    3174:	b087      	sub	sp, #28
    3176:	0007      	movs	r7, r0
    3178:	4692      	mov	sl, r2
    317a:	469b      	mov	fp, r3
    317c:	0d76      	lsrs	r6, r6, #21
    317e:	0fcd      	lsrs	r5, r1, #31
    3180:	2e00      	cmp	r6, #0
    3182:	d06b      	beq.n	325c <__aeabi_dmul+0xfc>
    3184:	4b6d      	ldr	r3, [pc, #436]	; (333c <__aeabi_dmul+0x1dc>)
    3186:	429e      	cmp	r6, r3
    3188:	d035      	beq.n	31f6 <__aeabi_dmul+0x96>
    318a:	2480      	movs	r4, #128	; 0x80
    318c:	465b      	mov	r3, fp
    318e:	0f42      	lsrs	r2, r0, #29
    3190:	0424      	lsls	r4, r4, #16
    3192:	00db      	lsls	r3, r3, #3
    3194:	4314      	orrs	r4, r2
    3196:	431c      	orrs	r4, r3
    3198:	00c3      	lsls	r3, r0, #3
    319a:	4699      	mov	r9, r3
    319c:	4b68      	ldr	r3, [pc, #416]	; (3340 <__aeabi_dmul+0x1e0>)
    319e:	46a3      	mov	fp, r4
    31a0:	469c      	mov	ip, r3
    31a2:	2300      	movs	r3, #0
    31a4:	2700      	movs	r7, #0
    31a6:	4466      	add	r6, ip
    31a8:	9302      	str	r3, [sp, #8]
    31aa:	4643      	mov	r3, r8
    31ac:	031c      	lsls	r4, r3, #12
    31ae:	005a      	lsls	r2, r3, #1
    31b0:	0fdb      	lsrs	r3, r3, #31
    31b2:	4650      	mov	r0, sl
    31b4:	0b24      	lsrs	r4, r4, #12
    31b6:	0d52      	lsrs	r2, r2, #21
    31b8:	4698      	mov	r8, r3
    31ba:	d100      	bne.n	31be <__aeabi_dmul+0x5e>
    31bc:	e076      	b.n	32ac <__aeabi_dmul+0x14c>
    31be:	4b5f      	ldr	r3, [pc, #380]	; (333c <__aeabi_dmul+0x1dc>)
    31c0:	429a      	cmp	r2, r3
    31c2:	d06d      	beq.n	32a0 <__aeabi_dmul+0x140>
    31c4:	2380      	movs	r3, #128	; 0x80
    31c6:	0f41      	lsrs	r1, r0, #29
    31c8:	041b      	lsls	r3, r3, #16
    31ca:	430b      	orrs	r3, r1
    31cc:	495c      	ldr	r1, [pc, #368]	; (3340 <__aeabi_dmul+0x1e0>)
    31ce:	00e4      	lsls	r4, r4, #3
    31d0:	468c      	mov	ip, r1
    31d2:	431c      	orrs	r4, r3
    31d4:	00c3      	lsls	r3, r0, #3
    31d6:	2000      	movs	r0, #0
    31d8:	4462      	add	r2, ip
    31da:	4641      	mov	r1, r8
    31dc:	18b6      	adds	r6, r6, r2
    31de:	4069      	eors	r1, r5
    31e0:	1c72      	adds	r2, r6, #1
    31e2:	9101      	str	r1, [sp, #4]
    31e4:	4694      	mov	ip, r2
    31e6:	4307      	orrs	r7, r0
    31e8:	2f0f      	cmp	r7, #15
    31ea:	d900      	bls.n	31ee <__aeabi_dmul+0x8e>
    31ec:	e0b0      	b.n	3350 <__aeabi_dmul+0x1f0>
    31ee:	4a55      	ldr	r2, [pc, #340]	; (3344 <__aeabi_dmul+0x1e4>)
    31f0:	00bf      	lsls	r7, r7, #2
    31f2:	59d2      	ldr	r2, [r2, r7]
    31f4:	4697      	mov	pc, r2
    31f6:	465b      	mov	r3, fp
    31f8:	4303      	orrs	r3, r0
    31fa:	4699      	mov	r9, r3
    31fc:	d000      	beq.n	3200 <__aeabi_dmul+0xa0>
    31fe:	e087      	b.n	3310 <__aeabi_dmul+0x1b0>
    3200:	2300      	movs	r3, #0
    3202:	469b      	mov	fp, r3
    3204:	3302      	adds	r3, #2
    3206:	2708      	movs	r7, #8
    3208:	9302      	str	r3, [sp, #8]
    320a:	e7ce      	b.n	31aa <__aeabi_dmul+0x4a>
    320c:	4642      	mov	r2, r8
    320e:	9201      	str	r2, [sp, #4]
    3210:	2802      	cmp	r0, #2
    3212:	d067      	beq.n	32e4 <__aeabi_dmul+0x184>
    3214:	2803      	cmp	r0, #3
    3216:	d100      	bne.n	321a <__aeabi_dmul+0xba>
    3218:	e20e      	b.n	3638 <__aeabi_dmul+0x4d8>
    321a:	2801      	cmp	r0, #1
    321c:	d000      	beq.n	3220 <__aeabi_dmul+0xc0>
    321e:	e162      	b.n	34e6 <__aeabi_dmul+0x386>
    3220:	2300      	movs	r3, #0
    3222:	2400      	movs	r4, #0
    3224:	2200      	movs	r2, #0
    3226:	4699      	mov	r9, r3
    3228:	9901      	ldr	r1, [sp, #4]
    322a:	4001      	ands	r1, r0
    322c:	b2cd      	uxtb	r5, r1
    322e:	2100      	movs	r1, #0
    3230:	0312      	lsls	r2, r2, #12
    3232:	0d0b      	lsrs	r3, r1, #20
    3234:	0b12      	lsrs	r2, r2, #12
    3236:	051b      	lsls	r3, r3, #20
    3238:	4313      	orrs	r3, r2
    323a:	4a43      	ldr	r2, [pc, #268]	; (3348 <__aeabi_dmul+0x1e8>)
    323c:	0524      	lsls	r4, r4, #20
    323e:	4013      	ands	r3, r2
    3240:	431c      	orrs	r4, r3
    3242:	0064      	lsls	r4, r4, #1
    3244:	07ed      	lsls	r5, r5, #31
    3246:	0864      	lsrs	r4, r4, #1
    3248:	432c      	orrs	r4, r5
    324a:	4648      	mov	r0, r9
    324c:	0021      	movs	r1, r4
    324e:	b007      	add	sp, #28
    3250:	bc3c      	pop	{r2, r3, r4, r5}
    3252:	4690      	mov	r8, r2
    3254:	4699      	mov	r9, r3
    3256:	46a2      	mov	sl, r4
    3258:	46ab      	mov	fp, r5
    325a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    325c:	4303      	orrs	r3, r0
    325e:	4699      	mov	r9, r3
    3260:	d04f      	beq.n	3302 <__aeabi_dmul+0x1a2>
    3262:	465b      	mov	r3, fp
    3264:	2b00      	cmp	r3, #0
    3266:	d100      	bne.n	326a <__aeabi_dmul+0x10a>
    3268:	e189      	b.n	357e <__aeabi_dmul+0x41e>
    326a:	4658      	mov	r0, fp
    326c:	f000 fed6 	bl	401c <__clzsi2>
    3270:	0003      	movs	r3, r0
    3272:	3b0b      	subs	r3, #11
    3274:	2b1c      	cmp	r3, #28
    3276:	dd00      	ble.n	327a <__aeabi_dmul+0x11a>
    3278:	e17a      	b.n	3570 <__aeabi_dmul+0x410>
    327a:	221d      	movs	r2, #29
    327c:	1ad3      	subs	r3, r2, r3
    327e:	003a      	movs	r2, r7
    3280:	0001      	movs	r1, r0
    3282:	465c      	mov	r4, fp
    3284:	40da      	lsrs	r2, r3
    3286:	3908      	subs	r1, #8
    3288:	408c      	lsls	r4, r1
    328a:	0013      	movs	r3, r2
    328c:	408f      	lsls	r7, r1
    328e:	4323      	orrs	r3, r4
    3290:	469b      	mov	fp, r3
    3292:	46b9      	mov	r9, r7
    3294:	2300      	movs	r3, #0
    3296:	4e2d      	ldr	r6, [pc, #180]	; (334c <__aeabi_dmul+0x1ec>)
    3298:	2700      	movs	r7, #0
    329a:	1a36      	subs	r6, r6, r0
    329c:	9302      	str	r3, [sp, #8]
    329e:	e784      	b.n	31aa <__aeabi_dmul+0x4a>
    32a0:	4653      	mov	r3, sl
    32a2:	4323      	orrs	r3, r4
    32a4:	d12a      	bne.n	32fc <__aeabi_dmul+0x19c>
    32a6:	2400      	movs	r4, #0
    32a8:	2002      	movs	r0, #2
    32aa:	e796      	b.n	31da <__aeabi_dmul+0x7a>
    32ac:	4653      	mov	r3, sl
    32ae:	4323      	orrs	r3, r4
    32b0:	d020      	beq.n	32f4 <__aeabi_dmul+0x194>
    32b2:	2c00      	cmp	r4, #0
    32b4:	d100      	bne.n	32b8 <__aeabi_dmul+0x158>
    32b6:	e157      	b.n	3568 <__aeabi_dmul+0x408>
    32b8:	0020      	movs	r0, r4
    32ba:	f000 feaf 	bl	401c <__clzsi2>
    32be:	0003      	movs	r3, r0
    32c0:	3b0b      	subs	r3, #11
    32c2:	2b1c      	cmp	r3, #28
    32c4:	dd00      	ble.n	32c8 <__aeabi_dmul+0x168>
    32c6:	e149      	b.n	355c <__aeabi_dmul+0x3fc>
    32c8:	211d      	movs	r1, #29
    32ca:	1acb      	subs	r3, r1, r3
    32cc:	4651      	mov	r1, sl
    32ce:	0002      	movs	r2, r0
    32d0:	40d9      	lsrs	r1, r3
    32d2:	4653      	mov	r3, sl
    32d4:	3a08      	subs	r2, #8
    32d6:	4094      	lsls	r4, r2
    32d8:	4093      	lsls	r3, r2
    32da:	430c      	orrs	r4, r1
    32dc:	4a1b      	ldr	r2, [pc, #108]	; (334c <__aeabi_dmul+0x1ec>)
    32de:	1a12      	subs	r2, r2, r0
    32e0:	2000      	movs	r0, #0
    32e2:	e77a      	b.n	31da <__aeabi_dmul+0x7a>
    32e4:	2501      	movs	r5, #1
    32e6:	9b01      	ldr	r3, [sp, #4]
    32e8:	4c14      	ldr	r4, [pc, #80]	; (333c <__aeabi_dmul+0x1dc>)
    32ea:	401d      	ands	r5, r3
    32ec:	2300      	movs	r3, #0
    32ee:	2200      	movs	r2, #0
    32f0:	4699      	mov	r9, r3
    32f2:	e79c      	b.n	322e <__aeabi_dmul+0xce>
    32f4:	2400      	movs	r4, #0
    32f6:	2200      	movs	r2, #0
    32f8:	2001      	movs	r0, #1
    32fa:	e76e      	b.n	31da <__aeabi_dmul+0x7a>
    32fc:	4653      	mov	r3, sl
    32fe:	2003      	movs	r0, #3
    3300:	e76b      	b.n	31da <__aeabi_dmul+0x7a>
    3302:	2300      	movs	r3, #0
    3304:	469b      	mov	fp, r3
    3306:	3301      	adds	r3, #1
    3308:	2704      	movs	r7, #4
    330a:	2600      	movs	r6, #0
    330c:	9302      	str	r3, [sp, #8]
    330e:	e74c      	b.n	31aa <__aeabi_dmul+0x4a>
    3310:	2303      	movs	r3, #3
    3312:	4681      	mov	r9, r0
    3314:	270c      	movs	r7, #12
    3316:	9302      	str	r3, [sp, #8]
    3318:	e747      	b.n	31aa <__aeabi_dmul+0x4a>
    331a:	2280      	movs	r2, #128	; 0x80
    331c:	2300      	movs	r3, #0
    331e:	2500      	movs	r5, #0
    3320:	0312      	lsls	r2, r2, #12
    3322:	4699      	mov	r9, r3
    3324:	4c05      	ldr	r4, [pc, #20]	; (333c <__aeabi_dmul+0x1dc>)
    3326:	e782      	b.n	322e <__aeabi_dmul+0xce>
    3328:	465c      	mov	r4, fp
    332a:	464b      	mov	r3, r9
    332c:	9802      	ldr	r0, [sp, #8]
    332e:	e76f      	b.n	3210 <__aeabi_dmul+0xb0>
    3330:	465c      	mov	r4, fp
    3332:	464b      	mov	r3, r9
    3334:	9501      	str	r5, [sp, #4]
    3336:	9802      	ldr	r0, [sp, #8]
    3338:	e76a      	b.n	3210 <__aeabi_dmul+0xb0>
    333a:	46c0      	nop			; (mov r8, r8)
    333c:	000007ff 	.word	0x000007ff
    3340:	fffffc01 	.word	0xfffffc01
    3344:	00009c38 	.word	0x00009c38
    3348:	800fffff 	.word	0x800fffff
    334c:	fffffc0d 	.word	0xfffffc0d
    3350:	464a      	mov	r2, r9
    3352:	4649      	mov	r1, r9
    3354:	0c17      	lsrs	r7, r2, #16
    3356:	0c1a      	lsrs	r2, r3, #16
    3358:	041b      	lsls	r3, r3, #16
    335a:	0c1b      	lsrs	r3, r3, #16
    335c:	0408      	lsls	r0, r1, #16
    335e:	0019      	movs	r1, r3
    3360:	0c00      	lsrs	r0, r0, #16
    3362:	4341      	muls	r1, r0
    3364:	0015      	movs	r5, r2
    3366:	4688      	mov	r8, r1
    3368:	0019      	movs	r1, r3
    336a:	437d      	muls	r5, r7
    336c:	4379      	muls	r1, r7
    336e:	9503      	str	r5, [sp, #12]
    3370:	4689      	mov	r9, r1
    3372:	0029      	movs	r1, r5
    3374:	0015      	movs	r5, r2
    3376:	4345      	muls	r5, r0
    3378:	444d      	add	r5, r9
    337a:	9502      	str	r5, [sp, #8]
    337c:	4645      	mov	r5, r8
    337e:	0c2d      	lsrs	r5, r5, #16
    3380:	46aa      	mov	sl, r5
    3382:	9d02      	ldr	r5, [sp, #8]
    3384:	4455      	add	r5, sl
    3386:	45a9      	cmp	r9, r5
    3388:	d906      	bls.n	3398 <__aeabi_dmul+0x238>
    338a:	468a      	mov	sl, r1
    338c:	2180      	movs	r1, #128	; 0x80
    338e:	0249      	lsls	r1, r1, #9
    3390:	4689      	mov	r9, r1
    3392:	44ca      	add	sl, r9
    3394:	4651      	mov	r1, sl
    3396:	9103      	str	r1, [sp, #12]
    3398:	0c29      	lsrs	r1, r5, #16
    339a:	9104      	str	r1, [sp, #16]
    339c:	4641      	mov	r1, r8
    339e:	0409      	lsls	r1, r1, #16
    33a0:	042d      	lsls	r5, r5, #16
    33a2:	0c09      	lsrs	r1, r1, #16
    33a4:	4688      	mov	r8, r1
    33a6:	0029      	movs	r1, r5
    33a8:	0c25      	lsrs	r5, r4, #16
    33aa:	0424      	lsls	r4, r4, #16
    33ac:	4441      	add	r1, r8
    33ae:	0c24      	lsrs	r4, r4, #16
    33b0:	9105      	str	r1, [sp, #20]
    33b2:	0021      	movs	r1, r4
    33b4:	4341      	muls	r1, r0
    33b6:	4688      	mov	r8, r1
    33b8:	0021      	movs	r1, r4
    33ba:	4379      	muls	r1, r7
    33bc:	468a      	mov	sl, r1
    33be:	4368      	muls	r0, r5
    33c0:	4641      	mov	r1, r8
    33c2:	4450      	add	r0, sl
    33c4:	4681      	mov	r9, r0
    33c6:	0c08      	lsrs	r0, r1, #16
    33c8:	4448      	add	r0, r9
    33ca:	436f      	muls	r7, r5
    33cc:	4582      	cmp	sl, r0
    33ce:	d903      	bls.n	33d8 <__aeabi_dmul+0x278>
    33d0:	2180      	movs	r1, #128	; 0x80
    33d2:	0249      	lsls	r1, r1, #9
    33d4:	4689      	mov	r9, r1
    33d6:	444f      	add	r7, r9
    33d8:	0c01      	lsrs	r1, r0, #16
    33da:	4689      	mov	r9, r1
    33dc:	0039      	movs	r1, r7
    33de:	4449      	add	r1, r9
    33e0:	9102      	str	r1, [sp, #8]
    33e2:	4641      	mov	r1, r8
    33e4:	040f      	lsls	r7, r1, #16
    33e6:	9904      	ldr	r1, [sp, #16]
    33e8:	0c3f      	lsrs	r7, r7, #16
    33ea:	4688      	mov	r8, r1
    33ec:	0400      	lsls	r0, r0, #16
    33ee:	19c0      	adds	r0, r0, r7
    33f0:	4480      	add	r8, r0
    33f2:	4641      	mov	r1, r8
    33f4:	9104      	str	r1, [sp, #16]
    33f6:	4659      	mov	r1, fp
    33f8:	0c0f      	lsrs	r7, r1, #16
    33fa:	0409      	lsls	r1, r1, #16
    33fc:	0c09      	lsrs	r1, r1, #16
    33fe:	4688      	mov	r8, r1
    3400:	4359      	muls	r1, r3
    3402:	468a      	mov	sl, r1
    3404:	0039      	movs	r1, r7
    3406:	4351      	muls	r1, r2
    3408:	4689      	mov	r9, r1
    340a:	4641      	mov	r1, r8
    340c:	434a      	muls	r2, r1
    340e:	4651      	mov	r1, sl
    3410:	0c09      	lsrs	r1, r1, #16
    3412:	468b      	mov	fp, r1
    3414:	437b      	muls	r3, r7
    3416:	18d2      	adds	r2, r2, r3
    3418:	445a      	add	r2, fp
    341a:	4293      	cmp	r3, r2
    341c:	d903      	bls.n	3426 <__aeabi_dmul+0x2c6>
    341e:	2380      	movs	r3, #128	; 0x80
    3420:	025b      	lsls	r3, r3, #9
    3422:	469b      	mov	fp, r3
    3424:	44d9      	add	r9, fp
    3426:	4651      	mov	r1, sl
    3428:	0409      	lsls	r1, r1, #16
    342a:	0c09      	lsrs	r1, r1, #16
    342c:	468a      	mov	sl, r1
    342e:	4641      	mov	r1, r8
    3430:	4361      	muls	r1, r4
    3432:	437c      	muls	r4, r7
    3434:	0c13      	lsrs	r3, r2, #16
    3436:	0412      	lsls	r2, r2, #16
    3438:	444b      	add	r3, r9
    343a:	4452      	add	r2, sl
    343c:	46a1      	mov	r9, r4
    343e:	468a      	mov	sl, r1
    3440:	003c      	movs	r4, r7
    3442:	4641      	mov	r1, r8
    3444:	436c      	muls	r4, r5
    3446:	434d      	muls	r5, r1
    3448:	4651      	mov	r1, sl
    344a:	444d      	add	r5, r9
    344c:	0c0f      	lsrs	r7, r1, #16
    344e:	197d      	adds	r5, r7, r5
    3450:	45a9      	cmp	r9, r5
    3452:	d903      	bls.n	345c <__aeabi_dmul+0x2fc>
    3454:	2180      	movs	r1, #128	; 0x80
    3456:	0249      	lsls	r1, r1, #9
    3458:	4688      	mov	r8, r1
    345a:	4444      	add	r4, r8
    345c:	9f04      	ldr	r7, [sp, #16]
    345e:	9903      	ldr	r1, [sp, #12]
    3460:	46b8      	mov	r8, r7
    3462:	4441      	add	r1, r8
    3464:	468b      	mov	fp, r1
    3466:	4583      	cmp	fp, r0
    3468:	4180      	sbcs	r0, r0
    346a:	4241      	negs	r1, r0
    346c:	4688      	mov	r8, r1
    346e:	4651      	mov	r1, sl
    3470:	0408      	lsls	r0, r1, #16
    3472:	042f      	lsls	r7, r5, #16
    3474:	0c00      	lsrs	r0, r0, #16
    3476:	183f      	adds	r7, r7, r0
    3478:	4658      	mov	r0, fp
    347a:	9902      	ldr	r1, [sp, #8]
    347c:	1810      	adds	r0, r2, r0
    347e:	4689      	mov	r9, r1
    3480:	4290      	cmp	r0, r2
    3482:	4192      	sbcs	r2, r2
    3484:	444f      	add	r7, r9
    3486:	46ba      	mov	sl, r7
    3488:	4252      	negs	r2, r2
    348a:	4699      	mov	r9, r3
    348c:	4693      	mov	fp, r2
    348e:	44c2      	add	sl, r8
    3490:	44d1      	add	r9, sl
    3492:	44cb      	add	fp, r9
    3494:	428f      	cmp	r7, r1
    3496:	41bf      	sbcs	r7, r7
    3498:	45c2      	cmp	sl, r8
    349a:	4189      	sbcs	r1, r1
    349c:	4599      	cmp	r9, r3
    349e:	419b      	sbcs	r3, r3
    34a0:	4593      	cmp	fp, r2
    34a2:	4192      	sbcs	r2, r2
    34a4:	427f      	negs	r7, r7
    34a6:	4249      	negs	r1, r1
    34a8:	0c2d      	lsrs	r5, r5, #16
    34aa:	4252      	negs	r2, r2
    34ac:	430f      	orrs	r7, r1
    34ae:	425b      	negs	r3, r3
    34b0:	4313      	orrs	r3, r2
    34b2:	197f      	adds	r7, r7, r5
    34b4:	18ff      	adds	r7, r7, r3
    34b6:	465b      	mov	r3, fp
    34b8:	193c      	adds	r4, r7, r4
    34ba:	0ddb      	lsrs	r3, r3, #23
    34bc:	9a05      	ldr	r2, [sp, #20]
    34be:	0264      	lsls	r4, r4, #9
    34c0:	431c      	orrs	r4, r3
    34c2:	0243      	lsls	r3, r0, #9
    34c4:	4313      	orrs	r3, r2
    34c6:	1e5d      	subs	r5, r3, #1
    34c8:	41ab      	sbcs	r3, r5
    34ca:	465a      	mov	r2, fp
    34cc:	0dc0      	lsrs	r0, r0, #23
    34ce:	4303      	orrs	r3, r0
    34d0:	0252      	lsls	r2, r2, #9
    34d2:	4313      	orrs	r3, r2
    34d4:	01e2      	lsls	r2, r4, #7
    34d6:	d556      	bpl.n	3586 <__aeabi_dmul+0x426>
    34d8:	2001      	movs	r0, #1
    34da:	085a      	lsrs	r2, r3, #1
    34dc:	4003      	ands	r3, r0
    34de:	4313      	orrs	r3, r2
    34e0:	07e2      	lsls	r2, r4, #31
    34e2:	4313      	orrs	r3, r2
    34e4:	0864      	lsrs	r4, r4, #1
    34e6:	485a      	ldr	r0, [pc, #360]	; (3650 <__aeabi_dmul+0x4f0>)
    34e8:	4460      	add	r0, ip
    34ea:	2800      	cmp	r0, #0
    34ec:	dd4d      	ble.n	358a <__aeabi_dmul+0x42a>
    34ee:	075a      	lsls	r2, r3, #29
    34f0:	d009      	beq.n	3506 <__aeabi_dmul+0x3a6>
    34f2:	220f      	movs	r2, #15
    34f4:	401a      	ands	r2, r3
    34f6:	2a04      	cmp	r2, #4
    34f8:	d005      	beq.n	3506 <__aeabi_dmul+0x3a6>
    34fa:	1d1a      	adds	r2, r3, #4
    34fc:	429a      	cmp	r2, r3
    34fe:	419b      	sbcs	r3, r3
    3500:	425b      	negs	r3, r3
    3502:	18e4      	adds	r4, r4, r3
    3504:	0013      	movs	r3, r2
    3506:	01e2      	lsls	r2, r4, #7
    3508:	d504      	bpl.n	3514 <__aeabi_dmul+0x3b4>
    350a:	2080      	movs	r0, #128	; 0x80
    350c:	4a51      	ldr	r2, [pc, #324]	; (3654 <__aeabi_dmul+0x4f4>)
    350e:	00c0      	lsls	r0, r0, #3
    3510:	4014      	ands	r4, r2
    3512:	4460      	add	r0, ip
    3514:	4a50      	ldr	r2, [pc, #320]	; (3658 <__aeabi_dmul+0x4f8>)
    3516:	4290      	cmp	r0, r2
    3518:	dd00      	ble.n	351c <__aeabi_dmul+0x3bc>
    351a:	e6e3      	b.n	32e4 <__aeabi_dmul+0x184>
    351c:	2501      	movs	r5, #1
    351e:	08db      	lsrs	r3, r3, #3
    3520:	0762      	lsls	r2, r4, #29
    3522:	431a      	orrs	r2, r3
    3524:	0264      	lsls	r4, r4, #9
    3526:	9b01      	ldr	r3, [sp, #4]
    3528:	4691      	mov	r9, r2
    352a:	0b22      	lsrs	r2, r4, #12
    352c:	0544      	lsls	r4, r0, #21
    352e:	0d64      	lsrs	r4, r4, #21
    3530:	401d      	ands	r5, r3
    3532:	e67c      	b.n	322e <__aeabi_dmul+0xce>
    3534:	2280      	movs	r2, #128	; 0x80
    3536:	4659      	mov	r1, fp
    3538:	0312      	lsls	r2, r2, #12
    353a:	4211      	tst	r1, r2
    353c:	d008      	beq.n	3550 <__aeabi_dmul+0x3f0>
    353e:	4214      	tst	r4, r2
    3540:	d106      	bne.n	3550 <__aeabi_dmul+0x3f0>
    3542:	4322      	orrs	r2, r4
    3544:	0312      	lsls	r2, r2, #12
    3546:	0b12      	lsrs	r2, r2, #12
    3548:	4645      	mov	r5, r8
    354a:	4699      	mov	r9, r3
    354c:	4c43      	ldr	r4, [pc, #268]	; (365c <__aeabi_dmul+0x4fc>)
    354e:	e66e      	b.n	322e <__aeabi_dmul+0xce>
    3550:	465b      	mov	r3, fp
    3552:	431a      	orrs	r2, r3
    3554:	0312      	lsls	r2, r2, #12
    3556:	0b12      	lsrs	r2, r2, #12
    3558:	4c40      	ldr	r4, [pc, #256]	; (365c <__aeabi_dmul+0x4fc>)
    355a:	e668      	b.n	322e <__aeabi_dmul+0xce>
    355c:	0003      	movs	r3, r0
    355e:	4654      	mov	r4, sl
    3560:	3b28      	subs	r3, #40	; 0x28
    3562:	409c      	lsls	r4, r3
    3564:	2300      	movs	r3, #0
    3566:	e6b9      	b.n	32dc <__aeabi_dmul+0x17c>
    3568:	f000 fd58 	bl	401c <__clzsi2>
    356c:	3020      	adds	r0, #32
    356e:	e6a6      	b.n	32be <__aeabi_dmul+0x15e>
    3570:	0003      	movs	r3, r0
    3572:	3b28      	subs	r3, #40	; 0x28
    3574:	409f      	lsls	r7, r3
    3576:	2300      	movs	r3, #0
    3578:	46bb      	mov	fp, r7
    357a:	4699      	mov	r9, r3
    357c:	e68a      	b.n	3294 <__aeabi_dmul+0x134>
    357e:	f000 fd4d 	bl	401c <__clzsi2>
    3582:	3020      	adds	r0, #32
    3584:	e674      	b.n	3270 <__aeabi_dmul+0x110>
    3586:	46b4      	mov	ip, r6
    3588:	e7ad      	b.n	34e6 <__aeabi_dmul+0x386>
    358a:	2501      	movs	r5, #1
    358c:	1a2a      	subs	r2, r5, r0
    358e:	2a38      	cmp	r2, #56	; 0x38
    3590:	dd06      	ble.n	35a0 <__aeabi_dmul+0x440>
    3592:	9b01      	ldr	r3, [sp, #4]
    3594:	2400      	movs	r4, #0
    3596:	401d      	ands	r5, r3
    3598:	2300      	movs	r3, #0
    359a:	2200      	movs	r2, #0
    359c:	4699      	mov	r9, r3
    359e:	e646      	b.n	322e <__aeabi_dmul+0xce>
    35a0:	2a1f      	cmp	r2, #31
    35a2:	dc21      	bgt.n	35e8 <__aeabi_dmul+0x488>
    35a4:	2520      	movs	r5, #32
    35a6:	0020      	movs	r0, r4
    35a8:	1aad      	subs	r5, r5, r2
    35aa:	001e      	movs	r6, r3
    35ac:	40ab      	lsls	r3, r5
    35ae:	40a8      	lsls	r0, r5
    35b0:	40d6      	lsrs	r6, r2
    35b2:	1e5d      	subs	r5, r3, #1
    35b4:	41ab      	sbcs	r3, r5
    35b6:	4330      	orrs	r0, r6
    35b8:	4318      	orrs	r0, r3
    35ba:	40d4      	lsrs	r4, r2
    35bc:	0743      	lsls	r3, r0, #29
    35be:	d009      	beq.n	35d4 <__aeabi_dmul+0x474>
    35c0:	230f      	movs	r3, #15
    35c2:	4003      	ands	r3, r0
    35c4:	2b04      	cmp	r3, #4
    35c6:	d005      	beq.n	35d4 <__aeabi_dmul+0x474>
    35c8:	0003      	movs	r3, r0
    35ca:	1d18      	adds	r0, r3, #4
    35cc:	4298      	cmp	r0, r3
    35ce:	419b      	sbcs	r3, r3
    35d0:	425b      	negs	r3, r3
    35d2:	18e4      	adds	r4, r4, r3
    35d4:	0223      	lsls	r3, r4, #8
    35d6:	d521      	bpl.n	361c <__aeabi_dmul+0x4bc>
    35d8:	2501      	movs	r5, #1
    35da:	9b01      	ldr	r3, [sp, #4]
    35dc:	2401      	movs	r4, #1
    35de:	401d      	ands	r5, r3
    35e0:	2300      	movs	r3, #0
    35e2:	2200      	movs	r2, #0
    35e4:	4699      	mov	r9, r3
    35e6:	e622      	b.n	322e <__aeabi_dmul+0xce>
    35e8:	251f      	movs	r5, #31
    35ea:	0021      	movs	r1, r4
    35ec:	426d      	negs	r5, r5
    35ee:	1a28      	subs	r0, r5, r0
    35f0:	40c1      	lsrs	r1, r0
    35f2:	0008      	movs	r0, r1
    35f4:	2a20      	cmp	r2, #32
    35f6:	d01d      	beq.n	3634 <__aeabi_dmul+0x4d4>
    35f8:	355f      	adds	r5, #95	; 0x5f
    35fa:	1aaa      	subs	r2, r5, r2
    35fc:	4094      	lsls	r4, r2
    35fe:	4323      	orrs	r3, r4
    3600:	1e5c      	subs	r4, r3, #1
    3602:	41a3      	sbcs	r3, r4
    3604:	2507      	movs	r5, #7
    3606:	4303      	orrs	r3, r0
    3608:	401d      	ands	r5, r3
    360a:	2200      	movs	r2, #0
    360c:	2d00      	cmp	r5, #0
    360e:	d009      	beq.n	3624 <__aeabi_dmul+0x4c4>
    3610:	220f      	movs	r2, #15
    3612:	2400      	movs	r4, #0
    3614:	401a      	ands	r2, r3
    3616:	0018      	movs	r0, r3
    3618:	2a04      	cmp	r2, #4
    361a:	d1d6      	bne.n	35ca <__aeabi_dmul+0x46a>
    361c:	0003      	movs	r3, r0
    361e:	0765      	lsls	r5, r4, #29
    3620:	0264      	lsls	r4, r4, #9
    3622:	0b22      	lsrs	r2, r4, #12
    3624:	08db      	lsrs	r3, r3, #3
    3626:	432b      	orrs	r3, r5
    3628:	2501      	movs	r5, #1
    362a:	4699      	mov	r9, r3
    362c:	9b01      	ldr	r3, [sp, #4]
    362e:	2400      	movs	r4, #0
    3630:	401d      	ands	r5, r3
    3632:	e5fc      	b.n	322e <__aeabi_dmul+0xce>
    3634:	2400      	movs	r4, #0
    3636:	e7e2      	b.n	35fe <__aeabi_dmul+0x49e>
    3638:	2280      	movs	r2, #128	; 0x80
    363a:	2501      	movs	r5, #1
    363c:	0312      	lsls	r2, r2, #12
    363e:	4322      	orrs	r2, r4
    3640:	9901      	ldr	r1, [sp, #4]
    3642:	0312      	lsls	r2, r2, #12
    3644:	0b12      	lsrs	r2, r2, #12
    3646:	400d      	ands	r5, r1
    3648:	4699      	mov	r9, r3
    364a:	4c04      	ldr	r4, [pc, #16]	; (365c <__aeabi_dmul+0x4fc>)
    364c:	e5ef      	b.n	322e <__aeabi_dmul+0xce>
    364e:	46c0      	nop			; (mov r8, r8)
    3650:	000003ff 	.word	0x000003ff
    3654:	feffffff 	.word	0xfeffffff
    3658:	000007fe 	.word	0x000007fe
    365c:	000007ff 	.word	0x000007ff

00003660 <__aeabi_dsub>:
    3660:	b5f0      	push	{r4, r5, r6, r7, lr}
    3662:	4646      	mov	r6, r8
    3664:	46d6      	mov	lr, sl
    3666:	464f      	mov	r7, r9
    3668:	030c      	lsls	r4, r1, #12
    366a:	b5c0      	push	{r6, r7, lr}
    366c:	0fcd      	lsrs	r5, r1, #31
    366e:	004e      	lsls	r6, r1, #1
    3670:	0a61      	lsrs	r1, r4, #9
    3672:	0f44      	lsrs	r4, r0, #29
    3674:	430c      	orrs	r4, r1
    3676:	00c1      	lsls	r1, r0, #3
    3678:	0058      	lsls	r0, r3, #1
    367a:	0d40      	lsrs	r0, r0, #21
    367c:	4684      	mov	ip, r0
    367e:	468a      	mov	sl, r1
    3680:	000f      	movs	r7, r1
    3682:	0319      	lsls	r1, r3, #12
    3684:	0f50      	lsrs	r0, r2, #29
    3686:	0a49      	lsrs	r1, r1, #9
    3688:	4301      	orrs	r1, r0
    368a:	48c6      	ldr	r0, [pc, #792]	; (39a4 <__aeabi_dsub+0x344>)
    368c:	0d76      	lsrs	r6, r6, #21
    368e:	46a8      	mov	r8, r5
    3690:	0fdb      	lsrs	r3, r3, #31
    3692:	00d2      	lsls	r2, r2, #3
    3694:	4584      	cmp	ip, r0
    3696:	d100      	bne.n	369a <__aeabi_dsub+0x3a>
    3698:	e0d8      	b.n	384c <__aeabi_dsub+0x1ec>
    369a:	2001      	movs	r0, #1
    369c:	4043      	eors	r3, r0
    369e:	42ab      	cmp	r3, r5
    36a0:	d100      	bne.n	36a4 <__aeabi_dsub+0x44>
    36a2:	e0a6      	b.n	37f2 <__aeabi_dsub+0x192>
    36a4:	4660      	mov	r0, ip
    36a6:	1a35      	subs	r5, r6, r0
    36a8:	2d00      	cmp	r5, #0
    36aa:	dc00      	bgt.n	36ae <__aeabi_dsub+0x4e>
    36ac:	e105      	b.n	38ba <__aeabi_dsub+0x25a>
    36ae:	2800      	cmp	r0, #0
    36b0:	d110      	bne.n	36d4 <__aeabi_dsub+0x74>
    36b2:	000b      	movs	r3, r1
    36b4:	4313      	orrs	r3, r2
    36b6:	d100      	bne.n	36ba <__aeabi_dsub+0x5a>
    36b8:	e0d7      	b.n	386a <__aeabi_dsub+0x20a>
    36ba:	1e6b      	subs	r3, r5, #1
    36bc:	2b00      	cmp	r3, #0
    36be:	d000      	beq.n	36c2 <__aeabi_dsub+0x62>
    36c0:	e14b      	b.n	395a <__aeabi_dsub+0x2fa>
    36c2:	4653      	mov	r3, sl
    36c4:	1a9f      	subs	r7, r3, r2
    36c6:	45ba      	cmp	sl, r7
    36c8:	4180      	sbcs	r0, r0
    36ca:	1a64      	subs	r4, r4, r1
    36cc:	4240      	negs	r0, r0
    36ce:	1a24      	subs	r4, r4, r0
    36d0:	2601      	movs	r6, #1
    36d2:	e01e      	b.n	3712 <__aeabi_dsub+0xb2>
    36d4:	4bb3      	ldr	r3, [pc, #716]	; (39a4 <__aeabi_dsub+0x344>)
    36d6:	429e      	cmp	r6, r3
    36d8:	d048      	beq.n	376c <__aeabi_dsub+0x10c>
    36da:	2380      	movs	r3, #128	; 0x80
    36dc:	041b      	lsls	r3, r3, #16
    36de:	4319      	orrs	r1, r3
    36e0:	2d38      	cmp	r5, #56	; 0x38
    36e2:	dd00      	ble.n	36e6 <__aeabi_dsub+0x86>
    36e4:	e119      	b.n	391a <__aeabi_dsub+0x2ba>
    36e6:	2d1f      	cmp	r5, #31
    36e8:	dd00      	ble.n	36ec <__aeabi_dsub+0x8c>
    36ea:	e14c      	b.n	3986 <__aeabi_dsub+0x326>
    36ec:	2320      	movs	r3, #32
    36ee:	000f      	movs	r7, r1
    36f0:	1b5b      	subs	r3, r3, r5
    36f2:	0010      	movs	r0, r2
    36f4:	409a      	lsls	r2, r3
    36f6:	409f      	lsls	r7, r3
    36f8:	40e8      	lsrs	r0, r5
    36fa:	1e53      	subs	r3, r2, #1
    36fc:	419a      	sbcs	r2, r3
    36fe:	40e9      	lsrs	r1, r5
    3700:	4307      	orrs	r7, r0
    3702:	4317      	orrs	r7, r2
    3704:	4653      	mov	r3, sl
    3706:	1bdf      	subs	r7, r3, r7
    3708:	1a61      	subs	r1, r4, r1
    370a:	45ba      	cmp	sl, r7
    370c:	41a4      	sbcs	r4, r4
    370e:	4264      	negs	r4, r4
    3710:	1b0c      	subs	r4, r1, r4
    3712:	0223      	lsls	r3, r4, #8
    3714:	d400      	bmi.n	3718 <__aeabi_dsub+0xb8>
    3716:	e0c5      	b.n	38a4 <__aeabi_dsub+0x244>
    3718:	0264      	lsls	r4, r4, #9
    371a:	0a65      	lsrs	r5, r4, #9
    371c:	2d00      	cmp	r5, #0
    371e:	d100      	bne.n	3722 <__aeabi_dsub+0xc2>
    3720:	e0f6      	b.n	3910 <__aeabi_dsub+0x2b0>
    3722:	0028      	movs	r0, r5
    3724:	f000 fc7a 	bl	401c <__clzsi2>
    3728:	0003      	movs	r3, r0
    372a:	3b08      	subs	r3, #8
    372c:	2b1f      	cmp	r3, #31
    372e:	dd00      	ble.n	3732 <__aeabi_dsub+0xd2>
    3730:	e0e9      	b.n	3906 <__aeabi_dsub+0x2a6>
    3732:	2220      	movs	r2, #32
    3734:	003c      	movs	r4, r7
    3736:	1ad2      	subs	r2, r2, r3
    3738:	409d      	lsls	r5, r3
    373a:	40d4      	lsrs	r4, r2
    373c:	409f      	lsls	r7, r3
    373e:	4325      	orrs	r5, r4
    3740:	429e      	cmp	r6, r3
    3742:	dd00      	ble.n	3746 <__aeabi_dsub+0xe6>
    3744:	e0db      	b.n	38fe <__aeabi_dsub+0x29e>
    3746:	1b9e      	subs	r6, r3, r6
    3748:	1c73      	adds	r3, r6, #1
    374a:	2b1f      	cmp	r3, #31
    374c:	dd00      	ble.n	3750 <__aeabi_dsub+0xf0>
    374e:	e10a      	b.n	3966 <__aeabi_dsub+0x306>
    3750:	2220      	movs	r2, #32
    3752:	0038      	movs	r0, r7
    3754:	1ad2      	subs	r2, r2, r3
    3756:	0029      	movs	r1, r5
    3758:	4097      	lsls	r7, r2
    375a:	002c      	movs	r4, r5
    375c:	4091      	lsls	r1, r2
    375e:	40d8      	lsrs	r0, r3
    3760:	1e7a      	subs	r2, r7, #1
    3762:	4197      	sbcs	r7, r2
    3764:	40dc      	lsrs	r4, r3
    3766:	2600      	movs	r6, #0
    3768:	4301      	orrs	r1, r0
    376a:	430f      	orrs	r7, r1
    376c:	077b      	lsls	r3, r7, #29
    376e:	d009      	beq.n	3784 <__aeabi_dsub+0x124>
    3770:	230f      	movs	r3, #15
    3772:	403b      	ands	r3, r7
    3774:	2b04      	cmp	r3, #4
    3776:	d005      	beq.n	3784 <__aeabi_dsub+0x124>
    3778:	1d3b      	adds	r3, r7, #4
    377a:	42bb      	cmp	r3, r7
    377c:	41bf      	sbcs	r7, r7
    377e:	427f      	negs	r7, r7
    3780:	19e4      	adds	r4, r4, r7
    3782:	001f      	movs	r7, r3
    3784:	0223      	lsls	r3, r4, #8
    3786:	d525      	bpl.n	37d4 <__aeabi_dsub+0x174>
    3788:	4b86      	ldr	r3, [pc, #536]	; (39a4 <__aeabi_dsub+0x344>)
    378a:	3601      	adds	r6, #1
    378c:	429e      	cmp	r6, r3
    378e:	d100      	bne.n	3792 <__aeabi_dsub+0x132>
    3790:	e0af      	b.n	38f2 <__aeabi_dsub+0x292>
    3792:	4b85      	ldr	r3, [pc, #532]	; (39a8 <__aeabi_dsub+0x348>)
    3794:	2501      	movs	r5, #1
    3796:	401c      	ands	r4, r3
    3798:	4643      	mov	r3, r8
    379a:	0762      	lsls	r2, r4, #29
    379c:	08ff      	lsrs	r7, r7, #3
    379e:	0264      	lsls	r4, r4, #9
    37a0:	0576      	lsls	r6, r6, #21
    37a2:	4317      	orrs	r7, r2
    37a4:	0b24      	lsrs	r4, r4, #12
    37a6:	0d76      	lsrs	r6, r6, #21
    37a8:	401d      	ands	r5, r3
    37aa:	2100      	movs	r1, #0
    37ac:	0324      	lsls	r4, r4, #12
    37ae:	0b23      	lsrs	r3, r4, #12
    37b0:	0d0c      	lsrs	r4, r1, #20
    37b2:	4a7e      	ldr	r2, [pc, #504]	; (39ac <__aeabi_dsub+0x34c>)
    37b4:	0524      	lsls	r4, r4, #20
    37b6:	431c      	orrs	r4, r3
    37b8:	4014      	ands	r4, r2
    37ba:	0533      	lsls	r3, r6, #20
    37bc:	4323      	orrs	r3, r4
    37be:	005b      	lsls	r3, r3, #1
    37c0:	07ed      	lsls	r5, r5, #31
    37c2:	085b      	lsrs	r3, r3, #1
    37c4:	432b      	orrs	r3, r5
    37c6:	0038      	movs	r0, r7
    37c8:	0019      	movs	r1, r3
    37ca:	bc1c      	pop	{r2, r3, r4}
    37cc:	4690      	mov	r8, r2
    37ce:	4699      	mov	r9, r3
    37d0:	46a2      	mov	sl, r4
    37d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    37d4:	2501      	movs	r5, #1
    37d6:	4643      	mov	r3, r8
    37d8:	0762      	lsls	r2, r4, #29
    37da:	08ff      	lsrs	r7, r7, #3
    37dc:	4317      	orrs	r7, r2
    37de:	08e4      	lsrs	r4, r4, #3
    37e0:	401d      	ands	r5, r3
    37e2:	4b70      	ldr	r3, [pc, #448]	; (39a4 <__aeabi_dsub+0x344>)
    37e4:	429e      	cmp	r6, r3
    37e6:	d036      	beq.n	3856 <__aeabi_dsub+0x1f6>
    37e8:	0324      	lsls	r4, r4, #12
    37ea:	0576      	lsls	r6, r6, #21
    37ec:	0b24      	lsrs	r4, r4, #12
    37ee:	0d76      	lsrs	r6, r6, #21
    37f0:	e7db      	b.n	37aa <__aeabi_dsub+0x14a>
    37f2:	4663      	mov	r3, ip
    37f4:	1af3      	subs	r3, r6, r3
    37f6:	2b00      	cmp	r3, #0
    37f8:	dc00      	bgt.n	37fc <__aeabi_dsub+0x19c>
    37fa:	e094      	b.n	3926 <__aeabi_dsub+0x2c6>
    37fc:	4660      	mov	r0, ip
    37fe:	2800      	cmp	r0, #0
    3800:	d035      	beq.n	386e <__aeabi_dsub+0x20e>
    3802:	4868      	ldr	r0, [pc, #416]	; (39a4 <__aeabi_dsub+0x344>)
    3804:	4286      	cmp	r6, r0
    3806:	d0b1      	beq.n	376c <__aeabi_dsub+0x10c>
    3808:	2780      	movs	r7, #128	; 0x80
    380a:	043f      	lsls	r7, r7, #16
    380c:	4339      	orrs	r1, r7
    380e:	2b38      	cmp	r3, #56	; 0x38
    3810:	dc00      	bgt.n	3814 <__aeabi_dsub+0x1b4>
    3812:	e0fd      	b.n	3a10 <__aeabi_dsub+0x3b0>
    3814:	430a      	orrs	r2, r1
    3816:	0017      	movs	r7, r2
    3818:	2100      	movs	r1, #0
    381a:	1e7a      	subs	r2, r7, #1
    381c:	4197      	sbcs	r7, r2
    381e:	4457      	add	r7, sl
    3820:	4557      	cmp	r7, sl
    3822:	4180      	sbcs	r0, r0
    3824:	1909      	adds	r1, r1, r4
    3826:	4244      	negs	r4, r0
    3828:	190c      	adds	r4, r1, r4
    382a:	0223      	lsls	r3, r4, #8
    382c:	d53a      	bpl.n	38a4 <__aeabi_dsub+0x244>
    382e:	4b5d      	ldr	r3, [pc, #372]	; (39a4 <__aeabi_dsub+0x344>)
    3830:	3601      	adds	r6, #1
    3832:	429e      	cmp	r6, r3
    3834:	d100      	bne.n	3838 <__aeabi_dsub+0x1d8>
    3836:	e14b      	b.n	3ad0 <__aeabi_dsub+0x470>
    3838:	2201      	movs	r2, #1
    383a:	4b5b      	ldr	r3, [pc, #364]	; (39a8 <__aeabi_dsub+0x348>)
    383c:	401c      	ands	r4, r3
    383e:	087b      	lsrs	r3, r7, #1
    3840:	4017      	ands	r7, r2
    3842:	431f      	orrs	r7, r3
    3844:	07e2      	lsls	r2, r4, #31
    3846:	4317      	orrs	r7, r2
    3848:	0864      	lsrs	r4, r4, #1
    384a:	e78f      	b.n	376c <__aeabi_dsub+0x10c>
    384c:	0008      	movs	r0, r1
    384e:	4310      	orrs	r0, r2
    3850:	d000      	beq.n	3854 <__aeabi_dsub+0x1f4>
    3852:	e724      	b.n	369e <__aeabi_dsub+0x3e>
    3854:	e721      	b.n	369a <__aeabi_dsub+0x3a>
    3856:	0023      	movs	r3, r4
    3858:	433b      	orrs	r3, r7
    385a:	d100      	bne.n	385e <__aeabi_dsub+0x1fe>
    385c:	e1b9      	b.n	3bd2 <__aeabi_dsub+0x572>
    385e:	2280      	movs	r2, #128	; 0x80
    3860:	0312      	lsls	r2, r2, #12
    3862:	4314      	orrs	r4, r2
    3864:	0324      	lsls	r4, r4, #12
    3866:	0b24      	lsrs	r4, r4, #12
    3868:	e79f      	b.n	37aa <__aeabi_dsub+0x14a>
    386a:	002e      	movs	r6, r5
    386c:	e77e      	b.n	376c <__aeabi_dsub+0x10c>
    386e:	0008      	movs	r0, r1
    3870:	4310      	orrs	r0, r2
    3872:	d100      	bne.n	3876 <__aeabi_dsub+0x216>
    3874:	e0ca      	b.n	3a0c <__aeabi_dsub+0x3ac>
    3876:	1e58      	subs	r0, r3, #1
    3878:	4684      	mov	ip, r0
    387a:	2800      	cmp	r0, #0
    387c:	d000      	beq.n	3880 <__aeabi_dsub+0x220>
    387e:	e0e7      	b.n	3a50 <__aeabi_dsub+0x3f0>
    3880:	4452      	add	r2, sl
    3882:	4552      	cmp	r2, sl
    3884:	4180      	sbcs	r0, r0
    3886:	1864      	adds	r4, r4, r1
    3888:	4240      	negs	r0, r0
    388a:	1824      	adds	r4, r4, r0
    388c:	0017      	movs	r7, r2
    388e:	2601      	movs	r6, #1
    3890:	0223      	lsls	r3, r4, #8
    3892:	d507      	bpl.n	38a4 <__aeabi_dsub+0x244>
    3894:	2602      	movs	r6, #2
    3896:	e7cf      	b.n	3838 <__aeabi_dsub+0x1d8>
    3898:	4664      	mov	r4, ip
    389a:	432c      	orrs	r4, r5
    389c:	d100      	bne.n	38a0 <__aeabi_dsub+0x240>
    389e:	e1b3      	b.n	3c08 <__aeabi_dsub+0x5a8>
    38a0:	002c      	movs	r4, r5
    38a2:	4667      	mov	r7, ip
    38a4:	077b      	lsls	r3, r7, #29
    38a6:	d000      	beq.n	38aa <__aeabi_dsub+0x24a>
    38a8:	e762      	b.n	3770 <__aeabi_dsub+0x110>
    38aa:	0763      	lsls	r3, r4, #29
    38ac:	08ff      	lsrs	r7, r7, #3
    38ae:	431f      	orrs	r7, r3
    38b0:	2501      	movs	r5, #1
    38b2:	4643      	mov	r3, r8
    38b4:	08e4      	lsrs	r4, r4, #3
    38b6:	401d      	ands	r5, r3
    38b8:	e793      	b.n	37e2 <__aeabi_dsub+0x182>
    38ba:	2d00      	cmp	r5, #0
    38bc:	d178      	bne.n	39b0 <__aeabi_dsub+0x350>
    38be:	1c75      	adds	r5, r6, #1
    38c0:	056d      	lsls	r5, r5, #21
    38c2:	0d6d      	lsrs	r5, r5, #21
    38c4:	2d01      	cmp	r5, #1
    38c6:	dc00      	bgt.n	38ca <__aeabi_dsub+0x26a>
    38c8:	e0f2      	b.n	3ab0 <__aeabi_dsub+0x450>
    38ca:	4650      	mov	r0, sl
    38cc:	1a80      	subs	r0, r0, r2
    38ce:	4582      	cmp	sl, r0
    38d0:	41bf      	sbcs	r7, r7
    38d2:	1a65      	subs	r5, r4, r1
    38d4:	427f      	negs	r7, r7
    38d6:	1bed      	subs	r5, r5, r7
    38d8:	4684      	mov	ip, r0
    38da:	0228      	lsls	r0, r5, #8
    38dc:	d400      	bmi.n	38e0 <__aeabi_dsub+0x280>
    38de:	e08c      	b.n	39fa <__aeabi_dsub+0x39a>
    38e0:	4650      	mov	r0, sl
    38e2:	1a17      	subs	r7, r2, r0
    38e4:	42ba      	cmp	r2, r7
    38e6:	4192      	sbcs	r2, r2
    38e8:	1b0c      	subs	r4, r1, r4
    38ea:	4255      	negs	r5, r2
    38ec:	1b65      	subs	r5, r4, r5
    38ee:	4698      	mov	r8, r3
    38f0:	e714      	b.n	371c <__aeabi_dsub+0xbc>
    38f2:	2501      	movs	r5, #1
    38f4:	4643      	mov	r3, r8
    38f6:	2400      	movs	r4, #0
    38f8:	401d      	ands	r5, r3
    38fa:	2700      	movs	r7, #0
    38fc:	e755      	b.n	37aa <__aeabi_dsub+0x14a>
    38fe:	4c2a      	ldr	r4, [pc, #168]	; (39a8 <__aeabi_dsub+0x348>)
    3900:	1af6      	subs	r6, r6, r3
    3902:	402c      	ands	r4, r5
    3904:	e732      	b.n	376c <__aeabi_dsub+0x10c>
    3906:	003d      	movs	r5, r7
    3908:	3828      	subs	r0, #40	; 0x28
    390a:	4085      	lsls	r5, r0
    390c:	2700      	movs	r7, #0
    390e:	e717      	b.n	3740 <__aeabi_dsub+0xe0>
    3910:	0038      	movs	r0, r7
    3912:	f000 fb83 	bl	401c <__clzsi2>
    3916:	3020      	adds	r0, #32
    3918:	e706      	b.n	3728 <__aeabi_dsub+0xc8>
    391a:	430a      	orrs	r2, r1
    391c:	0017      	movs	r7, r2
    391e:	2100      	movs	r1, #0
    3920:	1e7a      	subs	r2, r7, #1
    3922:	4197      	sbcs	r7, r2
    3924:	e6ee      	b.n	3704 <__aeabi_dsub+0xa4>
    3926:	2b00      	cmp	r3, #0
    3928:	d000      	beq.n	392c <__aeabi_dsub+0x2cc>
    392a:	e0e5      	b.n	3af8 <__aeabi_dsub+0x498>
    392c:	1c73      	adds	r3, r6, #1
    392e:	469c      	mov	ip, r3
    3930:	055b      	lsls	r3, r3, #21
    3932:	0d5b      	lsrs	r3, r3, #21
    3934:	2b01      	cmp	r3, #1
    3936:	dc00      	bgt.n	393a <__aeabi_dsub+0x2da>
    3938:	e09f      	b.n	3a7a <__aeabi_dsub+0x41a>
    393a:	4b1a      	ldr	r3, [pc, #104]	; (39a4 <__aeabi_dsub+0x344>)
    393c:	459c      	cmp	ip, r3
    393e:	d100      	bne.n	3942 <__aeabi_dsub+0x2e2>
    3940:	e0c5      	b.n	3ace <__aeabi_dsub+0x46e>
    3942:	4452      	add	r2, sl
    3944:	4552      	cmp	r2, sl
    3946:	4180      	sbcs	r0, r0
    3948:	1864      	adds	r4, r4, r1
    394a:	4240      	negs	r0, r0
    394c:	1824      	adds	r4, r4, r0
    394e:	07e7      	lsls	r7, r4, #31
    3950:	0852      	lsrs	r2, r2, #1
    3952:	4317      	orrs	r7, r2
    3954:	0864      	lsrs	r4, r4, #1
    3956:	4666      	mov	r6, ip
    3958:	e708      	b.n	376c <__aeabi_dsub+0x10c>
    395a:	4812      	ldr	r0, [pc, #72]	; (39a4 <__aeabi_dsub+0x344>)
    395c:	4285      	cmp	r5, r0
    395e:	d100      	bne.n	3962 <__aeabi_dsub+0x302>
    3960:	e085      	b.n	3a6e <__aeabi_dsub+0x40e>
    3962:	001d      	movs	r5, r3
    3964:	e6bc      	b.n	36e0 <__aeabi_dsub+0x80>
    3966:	0029      	movs	r1, r5
    3968:	3e1f      	subs	r6, #31
    396a:	40f1      	lsrs	r1, r6
    396c:	2b20      	cmp	r3, #32
    396e:	d100      	bne.n	3972 <__aeabi_dsub+0x312>
    3970:	e07f      	b.n	3a72 <__aeabi_dsub+0x412>
    3972:	2240      	movs	r2, #64	; 0x40
    3974:	1ad3      	subs	r3, r2, r3
    3976:	409d      	lsls	r5, r3
    3978:	432f      	orrs	r7, r5
    397a:	1e7d      	subs	r5, r7, #1
    397c:	41af      	sbcs	r7, r5
    397e:	2400      	movs	r4, #0
    3980:	430f      	orrs	r7, r1
    3982:	2600      	movs	r6, #0
    3984:	e78e      	b.n	38a4 <__aeabi_dsub+0x244>
    3986:	002b      	movs	r3, r5
    3988:	000f      	movs	r7, r1
    398a:	3b20      	subs	r3, #32
    398c:	40df      	lsrs	r7, r3
    398e:	2d20      	cmp	r5, #32
    3990:	d071      	beq.n	3a76 <__aeabi_dsub+0x416>
    3992:	2340      	movs	r3, #64	; 0x40
    3994:	1b5d      	subs	r5, r3, r5
    3996:	40a9      	lsls	r1, r5
    3998:	430a      	orrs	r2, r1
    399a:	1e51      	subs	r1, r2, #1
    399c:	418a      	sbcs	r2, r1
    399e:	2100      	movs	r1, #0
    39a0:	4317      	orrs	r7, r2
    39a2:	e6af      	b.n	3704 <__aeabi_dsub+0xa4>
    39a4:	000007ff 	.word	0x000007ff
    39a8:	ff7fffff 	.word	0xff7fffff
    39ac:	800fffff 	.word	0x800fffff
    39b0:	2e00      	cmp	r6, #0
    39b2:	d03e      	beq.n	3a32 <__aeabi_dsub+0x3d2>
    39b4:	4eb3      	ldr	r6, [pc, #716]	; (3c84 <__aeabi_dsub+0x624>)
    39b6:	45b4      	cmp	ip, r6
    39b8:	d045      	beq.n	3a46 <__aeabi_dsub+0x3e6>
    39ba:	2680      	movs	r6, #128	; 0x80
    39bc:	0436      	lsls	r6, r6, #16
    39be:	426d      	negs	r5, r5
    39c0:	4334      	orrs	r4, r6
    39c2:	2d38      	cmp	r5, #56	; 0x38
    39c4:	dd00      	ble.n	39c8 <__aeabi_dsub+0x368>
    39c6:	e0a8      	b.n	3b1a <__aeabi_dsub+0x4ba>
    39c8:	2d1f      	cmp	r5, #31
    39ca:	dd00      	ble.n	39ce <__aeabi_dsub+0x36e>
    39cc:	e11f      	b.n	3c0e <__aeabi_dsub+0x5ae>
    39ce:	2620      	movs	r6, #32
    39d0:	0027      	movs	r7, r4
    39d2:	4650      	mov	r0, sl
    39d4:	1b76      	subs	r6, r6, r5
    39d6:	40b7      	lsls	r7, r6
    39d8:	40e8      	lsrs	r0, r5
    39da:	4307      	orrs	r7, r0
    39dc:	4650      	mov	r0, sl
    39de:	40b0      	lsls	r0, r6
    39e0:	1e46      	subs	r6, r0, #1
    39e2:	41b0      	sbcs	r0, r6
    39e4:	40ec      	lsrs	r4, r5
    39e6:	4338      	orrs	r0, r7
    39e8:	1a17      	subs	r7, r2, r0
    39ea:	42ba      	cmp	r2, r7
    39ec:	4192      	sbcs	r2, r2
    39ee:	1b0c      	subs	r4, r1, r4
    39f0:	4252      	negs	r2, r2
    39f2:	1aa4      	subs	r4, r4, r2
    39f4:	4666      	mov	r6, ip
    39f6:	4698      	mov	r8, r3
    39f8:	e68b      	b.n	3712 <__aeabi_dsub+0xb2>
    39fa:	4664      	mov	r4, ip
    39fc:	4667      	mov	r7, ip
    39fe:	432c      	orrs	r4, r5
    3a00:	d000      	beq.n	3a04 <__aeabi_dsub+0x3a4>
    3a02:	e68b      	b.n	371c <__aeabi_dsub+0xbc>
    3a04:	2500      	movs	r5, #0
    3a06:	2600      	movs	r6, #0
    3a08:	2700      	movs	r7, #0
    3a0a:	e6ea      	b.n	37e2 <__aeabi_dsub+0x182>
    3a0c:	001e      	movs	r6, r3
    3a0e:	e6ad      	b.n	376c <__aeabi_dsub+0x10c>
    3a10:	2b1f      	cmp	r3, #31
    3a12:	dc60      	bgt.n	3ad6 <__aeabi_dsub+0x476>
    3a14:	2720      	movs	r7, #32
    3a16:	1af8      	subs	r0, r7, r3
    3a18:	000f      	movs	r7, r1
    3a1a:	4684      	mov	ip, r0
    3a1c:	4087      	lsls	r7, r0
    3a1e:	0010      	movs	r0, r2
    3a20:	40d8      	lsrs	r0, r3
    3a22:	4307      	orrs	r7, r0
    3a24:	4660      	mov	r0, ip
    3a26:	4082      	lsls	r2, r0
    3a28:	1e50      	subs	r0, r2, #1
    3a2a:	4182      	sbcs	r2, r0
    3a2c:	40d9      	lsrs	r1, r3
    3a2e:	4317      	orrs	r7, r2
    3a30:	e6f5      	b.n	381e <__aeabi_dsub+0x1be>
    3a32:	0026      	movs	r6, r4
    3a34:	4650      	mov	r0, sl
    3a36:	4306      	orrs	r6, r0
    3a38:	d005      	beq.n	3a46 <__aeabi_dsub+0x3e6>
    3a3a:	43ed      	mvns	r5, r5
    3a3c:	2d00      	cmp	r5, #0
    3a3e:	d0d3      	beq.n	39e8 <__aeabi_dsub+0x388>
    3a40:	4e90      	ldr	r6, [pc, #576]	; (3c84 <__aeabi_dsub+0x624>)
    3a42:	45b4      	cmp	ip, r6
    3a44:	d1bd      	bne.n	39c2 <__aeabi_dsub+0x362>
    3a46:	000c      	movs	r4, r1
    3a48:	0017      	movs	r7, r2
    3a4a:	4666      	mov	r6, ip
    3a4c:	4698      	mov	r8, r3
    3a4e:	e68d      	b.n	376c <__aeabi_dsub+0x10c>
    3a50:	488c      	ldr	r0, [pc, #560]	; (3c84 <__aeabi_dsub+0x624>)
    3a52:	4283      	cmp	r3, r0
    3a54:	d00b      	beq.n	3a6e <__aeabi_dsub+0x40e>
    3a56:	4663      	mov	r3, ip
    3a58:	e6d9      	b.n	380e <__aeabi_dsub+0x1ae>
    3a5a:	2d00      	cmp	r5, #0
    3a5c:	d000      	beq.n	3a60 <__aeabi_dsub+0x400>
    3a5e:	e096      	b.n	3b8e <__aeabi_dsub+0x52e>
    3a60:	0008      	movs	r0, r1
    3a62:	4310      	orrs	r0, r2
    3a64:	d100      	bne.n	3a68 <__aeabi_dsub+0x408>
    3a66:	e0e2      	b.n	3c2e <__aeabi_dsub+0x5ce>
    3a68:	000c      	movs	r4, r1
    3a6a:	0017      	movs	r7, r2
    3a6c:	4698      	mov	r8, r3
    3a6e:	4e85      	ldr	r6, [pc, #532]	; (3c84 <__aeabi_dsub+0x624>)
    3a70:	e67c      	b.n	376c <__aeabi_dsub+0x10c>
    3a72:	2500      	movs	r5, #0
    3a74:	e780      	b.n	3978 <__aeabi_dsub+0x318>
    3a76:	2100      	movs	r1, #0
    3a78:	e78e      	b.n	3998 <__aeabi_dsub+0x338>
    3a7a:	0023      	movs	r3, r4
    3a7c:	4650      	mov	r0, sl
    3a7e:	4303      	orrs	r3, r0
    3a80:	2e00      	cmp	r6, #0
    3a82:	d000      	beq.n	3a86 <__aeabi_dsub+0x426>
    3a84:	e0a8      	b.n	3bd8 <__aeabi_dsub+0x578>
    3a86:	2b00      	cmp	r3, #0
    3a88:	d100      	bne.n	3a8c <__aeabi_dsub+0x42c>
    3a8a:	e0de      	b.n	3c4a <__aeabi_dsub+0x5ea>
    3a8c:	000b      	movs	r3, r1
    3a8e:	4313      	orrs	r3, r2
    3a90:	d100      	bne.n	3a94 <__aeabi_dsub+0x434>
    3a92:	e66b      	b.n	376c <__aeabi_dsub+0x10c>
    3a94:	4452      	add	r2, sl
    3a96:	4552      	cmp	r2, sl
    3a98:	4180      	sbcs	r0, r0
    3a9a:	1864      	adds	r4, r4, r1
    3a9c:	4240      	negs	r0, r0
    3a9e:	1824      	adds	r4, r4, r0
    3aa0:	0017      	movs	r7, r2
    3aa2:	0223      	lsls	r3, r4, #8
    3aa4:	d400      	bmi.n	3aa8 <__aeabi_dsub+0x448>
    3aa6:	e6fd      	b.n	38a4 <__aeabi_dsub+0x244>
    3aa8:	4b77      	ldr	r3, [pc, #476]	; (3c88 <__aeabi_dsub+0x628>)
    3aaa:	4666      	mov	r6, ip
    3aac:	401c      	ands	r4, r3
    3aae:	e65d      	b.n	376c <__aeabi_dsub+0x10c>
    3ab0:	0025      	movs	r5, r4
    3ab2:	4650      	mov	r0, sl
    3ab4:	4305      	orrs	r5, r0
    3ab6:	2e00      	cmp	r6, #0
    3ab8:	d1cf      	bne.n	3a5a <__aeabi_dsub+0x3fa>
    3aba:	2d00      	cmp	r5, #0
    3abc:	d14f      	bne.n	3b5e <__aeabi_dsub+0x4fe>
    3abe:	000c      	movs	r4, r1
    3ac0:	4314      	orrs	r4, r2
    3ac2:	d100      	bne.n	3ac6 <__aeabi_dsub+0x466>
    3ac4:	e0a0      	b.n	3c08 <__aeabi_dsub+0x5a8>
    3ac6:	000c      	movs	r4, r1
    3ac8:	0017      	movs	r7, r2
    3aca:	4698      	mov	r8, r3
    3acc:	e64e      	b.n	376c <__aeabi_dsub+0x10c>
    3ace:	4666      	mov	r6, ip
    3ad0:	2400      	movs	r4, #0
    3ad2:	2700      	movs	r7, #0
    3ad4:	e685      	b.n	37e2 <__aeabi_dsub+0x182>
    3ad6:	001f      	movs	r7, r3
    3ad8:	0008      	movs	r0, r1
    3ada:	3f20      	subs	r7, #32
    3adc:	40f8      	lsrs	r0, r7
    3ade:	0007      	movs	r7, r0
    3ae0:	2b20      	cmp	r3, #32
    3ae2:	d100      	bne.n	3ae6 <__aeabi_dsub+0x486>
    3ae4:	e08e      	b.n	3c04 <__aeabi_dsub+0x5a4>
    3ae6:	2040      	movs	r0, #64	; 0x40
    3ae8:	1ac3      	subs	r3, r0, r3
    3aea:	4099      	lsls	r1, r3
    3aec:	430a      	orrs	r2, r1
    3aee:	1e51      	subs	r1, r2, #1
    3af0:	418a      	sbcs	r2, r1
    3af2:	2100      	movs	r1, #0
    3af4:	4317      	orrs	r7, r2
    3af6:	e692      	b.n	381e <__aeabi_dsub+0x1be>
    3af8:	2e00      	cmp	r6, #0
    3afa:	d114      	bne.n	3b26 <__aeabi_dsub+0x4c6>
    3afc:	0026      	movs	r6, r4
    3afe:	4650      	mov	r0, sl
    3b00:	4306      	orrs	r6, r0
    3b02:	d062      	beq.n	3bca <__aeabi_dsub+0x56a>
    3b04:	43db      	mvns	r3, r3
    3b06:	2b00      	cmp	r3, #0
    3b08:	d15c      	bne.n	3bc4 <__aeabi_dsub+0x564>
    3b0a:	1887      	adds	r7, r0, r2
    3b0c:	4297      	cmp	r7, r2
    3b0e:	4192      	sbcs	r2, r2
    3b10:	1864      	adds	r4, r4, r1
    3b12:	4252      	negs	r2, r2
    3b14:	18a4      	adds	r4, r4, r2
    3b16:	4666      	mov	r6, ip
    3b18:	e687      	b.n	382a <__aeabi_dsub+0x1ca>
    3b1a:	4650      	mov	r0, sl
    3b1c:	4320      	orrs	r0, r4
    3b1e:	1e44      	subs	r4, r0, #1
    3b20:	41a0      	sbcs	r0, r4
    3b22:	2400      	movs	r4, #0
    3b24:	e760      	b.n	39e8 <__aeabi_dsub+0x388>
    3b26:	4e57      	ldr	r6, [pc, #348]	; (3c84 <__aeabi_dsub+0x624>)
    3b28:	45b4      	cmp	ip, r6
    3b2a:	d04e      	beq.n	3bca <__aeabi_dsub+0x56a>
    3b2c:	2680      	movs	r6, #128	; 0x80
    3b2e:	0436      	lsls	r6, r6, #16
    3b30:	425b      	negs	r3, r3
    3b32:	4334      	orrs	r4, r6
    3b34:	2b38      	cmp	r3, #56	; 0x38
    3b36:	dd00      	ble.n	3b3a <__aeabi_dsub+0x4da>
    3b38:	e07f      	b.n	3c3a <__aeabi_dsub+0x5da>
    3b3a:	2b1f      	cmp	r3, #31
    3b3c:	dd00      	ble.n	3b40 <__aeabi_dsub+0x4e0>
    3b3e:	e08b      	b.n	3c58 <__aeabi_dsub+0x5f8>
    3b40:	2620      	movs	r6, #32
    3b42:	0027      	movs	r7, r4
    3b44:	4650      	mov	r0, sl
    3b46:	1af6      	subs	r6, r6, r3
    3b48:	40b7      	lsls	r7, r6
    3b4a:	40d8      	lsrs	r0, r3
    3b4c:	4307      	orrs	r7, r0
    3b4e:	4650      	mov	r0, sl
    3b50:	40b0      	lsls	r0, r6
    3b52:	1e46      	subs	r6, r0, #1
    3b54:	41b0      	sbcs	r0, r6
    3b56:	4307      	orrs	r7, r0
    3b58:	40dc      	lsrs	r4, r3
    3b5a:	18bf      	adds	r7, r7, r2
    3b5c:	e7d6      	b.n	3b0c <__aeabi_dsub+0x4ac>
    3b5e:	000d      	movs	r5, r1
    3b60:	4315      	orrs	r5, r2
    3b62:	d100      	bne.n	3b66 <__aeabi_dsub+0x506>
    3b64:	e602      	b.n	376c <__aeabi_dsub+0x10c>
    3b66:	4650      	mov	r0, sl
    3b68:	1a80      	subs	r0, r0, r2
    3b6a:	4582      	cmp	sl, r0
    3b6c:	41bf      	sbcs	r7, r7
    3b6e:	1a65      	subs	r5, r4, r1
    3b70:	427f      	negs	r7, r7
    3b72:	1bed      	subs	r5, r5, r7
    3b74:	4684      	mov	ip, r0
    3b76:	0228      	lsls	r0, r5, #8
    3b78:	d400      	bmi.n	3b7c <__aeabi_dsub+0x51c>
    3b7a:	e68d      	b.n	3898 <__aeabi_dsub+0x238>
    3b7c:	4650      	mov	r0, sl
    3b7e:	1a17      	subs	r7, r2, r0
    3b80:	42ba      	cmp	r2, r7
    3b82:	4192      	sbcs	r2, r2
    3b84:	1b0c      	subs	r4, r1, r4
    3b86:	4252      	negs	r2, r2
    3b88:	1aa4      	subs	r4, r4, r2
    3b8a:	4698      	mov	r8, r3
    3b8c:	e5ee      	b.n	376c <__aeabi_dsub+0x10c>
    3b8e:	000d      	movs	r5, r1
    3b90:	4315      	orrs	r5, r2
    3b92:	d100      	bne.n	3b96 <__aeabi_dsub+0x536>
    3b94:	e76b      	b.n	3a6e <__aeabi_dsub+0x40e>
    3b96:	4650      	mov	r0, sl
    3b98:	0767      	lsls	r7, r4, #29
    3b9a:	08c0      	lsrs	r0, r0, #3
    3b9c:	4307      	orrs	r7, r0
    3b9e:	2080      	movs	r0, #128	; 0x80
    3ba0:	08e4      	lsrs	r4, r4, #3
    3ba2:	0300      	lsls	r0, r0, #12
    3ba4:	4204      	tst	r4, r0
    3ba6:	d007      	beq.n	3bb8 <__aeabi_dsub+0x558>
    3ba8:	08cd      	lsrs	r5, r1, #3
    3baa:	4205      	tst	r5, r0
    3bac:	d104      	bne.n	3bb8 <__aeabi_dsub+0x558>
    3bae:	002c      	movs	r4, r5
    3bb0:	4698      	mov	r8, r3
    3bb2:	08d7      	lsrs	r7, r2, #3
    3bb4:	0749      	lsls	r1, r1, #29
    3bb6:	430f      	orrs	r7, r1
    3bb8:	0f7b      	lsrs	r3, r7, #29
    3bba:	00e4      	lsls	r4, r4, #3
    3bbc:	431c      	orrs	r4, r3
    3bbe:	00ff      	lsls	r7, r7, #3
    3bc0:	4e30      	ldr	r6, [pc, #192]	; (3c84 <__aeabi_dsub+0x624>)
    3bc2:	e5d3      	b.n	376c <__aeabi_dsub+0x10c>
    3bc4:	4e2f      	ldr	r6, [pc, #188]	; (3c84 <__aeabi_dsub+0x624>)
    3bc6:	45b4      	cmp	ip, r6
    3bc8:	d1b4      	bne.n	3b34 <__aeabi_dsub+0x4d4>
    3bca:	000c      	movs	r4, r1
    3bcc:	0017      	movs	r7, r2
    3bce:	4666      	mov	r6, ip
    3bd0:	e5cc      	b.n	376c <__aeabi_dsub+0x10c>
    3bd2:	2700      	movs	r7, #0
    3bd4:	2400      	movs	r4, #0
    3bd6:	e5e8      	b.n	37aa <__aeabi_dsub+0x14a>
    3bd8:	2b00      	cmp	r3, #0
    3bda:	d039      	beq.n	3c50 <__aeabi_dsub+0x5f0>
    3bdc:	000b      	movs	r3, r1
    3bde:	4313      	orrs	r3, r2
    3be0:	d100      	bne.n	3be4 <__aeabi_dsub+0x584>
    3be2:	e744      	b.n	3a6e <__aeabi_dsub+0x40e>
    3be4:	08c0      	lsrs	r0, r0, #3
    3be6:	0767      	lsls	r7, r4, #29
    3be8:	4307      	orrs	r7, r0
    3bea:	2080      	movs	r0, #128	; 0x80
    3bec:	08e4      	lsrs	r4, r4, #3
    3bee:	0300      	lsls	r0, r0, #12
    3bf0:	4204      	tst	r4, r0
    3bf2:	d0e1      	beq.n	3bb8 <__aeabi_dsub+0x558>
    3bf4:	08cb      	lsrs	r3, r1, #3
    3bf6:	4203      	tst	r3, r0
    3bf8:	d1de      	bne.n	3bb8 <__aeabi_dsub+0x558>
    3bfa:	08d7      	lsrs	r7, r2, #3
    3bfc:	0749      	lsls	r1, r1, #29
    3bfe:	430f      	orrs	r7, r1
    3c00:	001c      	movs	r4, r3
    3c02:	e7d9      	b.n	3bb8 <__aeabi_dsub+0x558>
    3c04:	2100      	movs	r1, #0
    3c06:	e771      	b.n	3aec <__aeabi_dsub+0x48c>
    3c08:	2500      	movs	r5, #0
    3c0a:	2700      	movs	r7, #0
    3c0c:	e5e9      	b.n	37e2 <__aeabi_dsub+0x182>
    3c0e:	002e      	movs	r6, r5
    3c10:	0027      	movs	r7, r4
    3c12:	3e20      	subs	r6, #32
    3c14:	40f7      	lsrs	r7, r6
    3c16:	2d20      	cmp	r5, #32
    3c18:	d02f      	beq.n	3c7a <__aeabi_dsub+0x61a>
    3c1a:	2640      	movs	r6, #64	; 0x40
    3c1c:	1b75      	subs	r5, r6, r5
    3c1e:	40ac      	lsls	r4, r5
    3c20:	4650      	mov	r0, sl
    3c22:	4320      	orrs	r0, r4
    3c24:	1e44      	subs	r4, r0, #1
    3c26:	41a0      	sbcs	r0, r4
    3c28:	2400      	movs	r4, #0
    3c2a:	4338      	orrs	r0, r7
    3c2c:	e6dc      	b.n	39e8 <__aeabi_dsub+0x388>
    3c2e:	2480      	movs	r4, #128	; 0x80
    3c30:	2500      	movs	r5, #0
    3c32:	0324      	lsls	r4, r4, #12
    3c34:	4e13      	ldr	r6, [pc, #76]	; (3c84 <__aeabi_dsub+0x624>)
    3c36:	2700      	movs	r7, #0
    3c38:	e5d3      	b.n	37e2 <__aeabi_dsub+0x182>
    3c3a:	4650      	mov	r0, sl
    3c3c:	4320      	orrs	r0, r4
    3c3e:	0007      	movs	r7, r0
    3c40:	1e78      	subs	r0, r7, #1
    3c42:	4187      	sbcs	r7, r0
    3c44:	2400      	movs	r4, #0
    3c46:	18bf      	adds	r7, r7, r2
    3c48:	e760      	b.n	3b0c <__aeabi_dsub+0x4ac>
    3c4a:	000c      	movs	r4, r1
    3c4c:	0017      	movs	r7, r2
    3c4e:	e58d      	b.n	376c <__aeabi_dsub+0x10c>
    3c50:	000c      	movs	r4, r1
    3c52:	0017      	movs	r7, r2
    3c54:	4e0b      	ldr	r6, [pc, #44]	; (3c84 <__aeabi_dsub+0x624>)
    3c56:	e589      	b.n	376c <__aeabi_dsub+0x10c>
    3c58:	001e      	movs	r6, r3
    3c5a:	0027      	movs	r7, r4
    3c5c:	3e20      	subs	r6, #32
    3c5e:	40f7      	lsrs	r7, r6
    3c60:	2b20      	cmp	r3, #32
    3c62:	d00c      	beq.n	3c7e <__aeabi_dsub+0x61e>
    3c64:	2640      	movs	r6, #64	; 0x40
    3c66:	1af3      	subs	r3, r6, r3
    3c68:	409c      	lsls	r4, r3
    3c6a:	4650      	mov	r0, sl
    3c6c:	4320      	orrs	r0, r4
    3c6e:	1e44      	subs	r4, r0, #1
    3c70:	41a0      	sbcs	r0, r4
    3c72:	4307      	orrs	r7, r0
    3c74:	2400      	movs	r4, #0
    3c76:	18bf      	adds	r7, r7, r2
    3c78:	e748      	b.n	3b0c <__aeabi_dsub+0x4ac>
    3c7a:	2400      	movs	r4, #0
    3c7c:	e7d0      	b.n	3c20 <__aeabi_dsub+0x5c0>
    3c7e:	2400      	movs	r4, #0
    3c80:	e7f3      	b.n	3c6a <__aeabi_dsub+0x60a>
    3c82:	46c0      	nop			; (mov r8, r8)
    3c84:	000007ff 	.word	0x000007ff
    3c88:	ff7fffff 	.word	0xff7fffff

00003c8c <__aeabi_d2iz>:
    3c8c:	b530      	push	{r4, r5, lr}
    3c8e:	4d13      	ldr	r5, [pc, #76]	; (3cdc <__aeabi_d2iz+0x50>)
    3c90:	030a      	lsls	r2, r1, #12
    3c92:	004b      	lsls	r3, r1, #1
    3c94:	0b12      	lsrs	r2, r2, #12
    3c96:	0d5b      	lsrs	r3, r3, #21
    3c98:	0fc9      	lsrs	r1, r1, #31
    3c9a:	2400      	movs	r4, #0
    3c9c:	42ab      	cmp	r3, r5
    3c9e:	dd10      	ble.n	3cc2 <__aeabi_d2iz+0x36>
    3ca0:	4c0f      	ldr	r4, [pc, #60]	; (3ce0 <__aeabi_d2iz+0x54>)
    3ca2:	42a3      	cmp	r3, r4
    3ca4:	dc0f      	bgt.n	3cc6 <__aeabi_d2iz+0x3a>
    3ca6:	2480      	movs	r4, #128	; 0x80
    3ca8:	4d0e      	ldr	r5, [pc, #56]	; (3ce4 <__aeabi_d2iz+0x58>)
    3caa:	0364      	lsls	r4, r4, #13
    3cac:	4322      	orrs	r2, r4
    3cae:	1aed      	subs	r5, r5, r3
    3cb0:	2d1f      	cmp	r5, #31
    3cb2:	dd0b      	ble.n	3ccc <__aeabi_d2iz+0x40>
    3cb4:	480c      	ldr	r0, [pc, #48]	; (3ce8 <__aeabi_d2iz+0x5c>)
    3cb6:	1ac3      	subs	r3, r0, r3
    3cb8:	40da      	lsrs	r2, r3
    3cba:	4254      	negs	r4, r2
    3cbc:	2900      	cmp	r1, #0
    3cbe:	d100      	bne.n	3cc2 <__aeabi_d2iz+0x36>
    3cc0:	0014      	movs	r4, r2
    3cc2:	0020      	movs	r0, r4
    3cc4:	bd30      	pop	{r4, r5, pc}
    3cc6:	4b09      	ldr	r3, [pc, #36]	; (3cec <__aeabi_d2iz+0x60>)
    3cc8:	18cc      	adds	r4, r1, r3
    3cca:	e7fa      	b.n	3cc2 <__aeabi_d2iz+0x36>
    3ccc:	4c08      	ldr	r4, [pc, #32]	; (3cf0 <__aeabi_d2iz+0x64>)
    3cce:	40e8      	lsrs	r0, r5
    3cd0:	46a4      	mov	ip, r4
    3cd2:	4463      	add	r3, ip
    3cd4:	409a      	lsls	r2, r3
    3cd6:	4302      	orrs	r2, r0
    3cd8:	e7ef      	b.n	3cba <__aeabi_d2iz+0x2e>
    3cda:	46c0      	nop			; (mov r8, r8)
    3cdc:	000003fe 	.word	0x000003fe
    3ce0:	0000041d 	.word	0x0000041d
    3ce4:	00000433 	.word	0x00000433
    3ce8:	00000413 	.word	0x00000413
    3cec:	7fffffff 	.word	0x7fffffff
    3cf0:	fffffbed 	.word	0xfffffbed

00003cf4 <__aeabi_i2d>:
    3cf4:	b570      	push	{r4, r5, r6, lr}
    3cf6:	2800      	cmp	r0, #0
    3cf8:	d030      	beq.n	3d5c <__aeabi_i2d+0x68>
    3cfa:	17c3      	asrs	r3, r0, #31
    3cfc:	18c4      	adds	r4, r0, r3
    3cfe:	405c      	eors	r4, r3
    3d00:	0fc5      	lsrs	r5, r0, #31
    3d02:	0020      	movs	r0, r4
    3d04:	f000 f98a 	bl	401c <__clzsi2>
    3d08:	4b17      	ldr	r3, [pc, #92]	; (3d68 <__aeabi_i2d+0x74>)
    3d0a:	4a18      	ldr	r2, [pc, #96]	; (3d6c <__aeabi_i2d+0x78>)
    3d0c:	1a1b      	subs	r3, r3, r0
    3d0e:	1ad2      	subs	r2, r2, r3
    3d10:	2a1f      	cmp	r2, #31
    3d12:	dd18      	ble.n	3d46 <__aeabi_i2d+0x52>
    3d14:	4a16      	ldr	r2, [pc, #88]	; (3d70 <__aeabi_i2d+0x7c>)
    3d16:	1ad2      	subs	r2, r2, r3
    3d18:	4094      	lsls	r4, r2
    3d1a:	2200      	movs	r2, #0
    3d1c:	0324      	lsls	r4, r4, #12
    3d1e:	055b      	lsls	r3, r3, #21
    3d20:	0b24      	lsrs	r4, r4, #12
    3d22:	0d5b      	lsrs	r3, r3, #21
    3d24:	2100      	movs	r1, #0
    3d26:	0010      	movs	r0, r2
    3d28:	0324      	lsls	r4, r4, #12
    3d2a:	0d0a      	lsrs	r2, r1, #20
    3d2c:	0b24      	lsrs	r4, r4, #12
    3d2e:	0512      	lsls	r2, r2, #20
    3d30:	4322      	orrs	r2, r4
    3d32:	4c10      	ldr	r4, [pc, #64]	; (3d74 <__aeabi_i2d+0x80>)
    3d34:	051b      	lsls	r3, r3, #20
    3d36:	4022      	ands	r2, r4
    3d38:	4313      	orrs	r3, r2
    3d3a:	005b      	lsls	r3, r3, #1
    3d3c:	07ed      	lsls	r5, r5, #31
    3d3e:	085b      	lsrs	r3, r3, #1
    3d40:	432b      	orrs	r3, r5
    3d42:	0019      	movs	r1, r3
    3d44:	bd70      	pop	{r4, r5, r6, pc}
    3d46:	0021      	movs	r1, r4
    3d48:	4091      	lsls	r1, r2
    3d4a:	000a      	movs	r2, r1
    3d4c:	210b      	movs	r1, #11
    3d4e:	1a08      	subs	r0, r1, r0
    3d50:	40c4      	lsrs	r4, r0
    3d52:	055b      	lsls	r3, r3, #21
    3d54:	0324      	lsls	r4, r4, #12
    3d56:	0b24      	lsrs	r4, r4, #12
    3d58:	0d5b      	lsrs	r3, r3, #21
    3d5a:	e7e3      	b.n	3d24 <__aeabi_i2d+0x30>
    3d5c:	2500      	movs	r5, #0
    3d5e:	2300      	movs	r3, #0
    3d60:	2400      	movs	r4, #0
    3d62:	2200      	movs	r2, #0
    3d64:	e7de      	b.n	3d24 <__aeabi_i2d+0x30>
    3d66:	46c0      	nop			; (mov r8, r8)
    3d68:	0000041e 	.word	0x0000041e
    3d6c:	00000433 	.word	0x00000433
    3d70:	00000413 	.word	0x00000413
    3d74:	800fffff 	.word	0x800fffff

00003d78 <__aeabi_ui2d>:
    3d78:	b510      	push	{r4, lr}
    3d7a:	1e04      	subs	r4, r0, #0
    3d7c:	d028      	beq.n	3dd0 <__aeabi_ui2d+0x58>
    3d7e:	f000 f94d 	bl	401c <__clzsi2>
    3d82:	4b15      	ldr	r3, [pc, #84]	; (3dd8 <__aeabi_ui2d+0x60>)
    3d84:	4a15      	ldr	r2, [pc, #84]	; (3ddc <__aeabi_ui2d+0x64>)
    3d86:	1a1b      	subs	r3, r3, r0
    3d88:	1ad2      	subs	r2, r2, r3
    3d8a:	2a1f      	cmp	r2, #31
    3d8c:	dd15      	ble.n	3dba <__aeabi_ui2d+0x42>
    3d8e:	4a14      	ldr	r2, [pc, #80]	; (3de0 <__aeabi_ui2d+0x68>)
    3d90:	1ad2      	subs	r2, r2, r3
    3d92:	4094      	lsls	r4, r2
    3d94:	2200      	movs	r2, #0
    3d96:	0324      	lsls	r4, r4, #12
    3d98:	055b      	lsls	r3, r3, #21
    3d9a:	0b24      	lsrs	r4, r4, #12
    3d9c:	0d5b      	lsrs	r3, r3, #21
    3d9e:	2100      	movs	r1, #0
    3da0:	0010      	movs	r0, r2
    3da2:	0324      	lsls	r4, r4, #12
    3da4:	0d0a      	lsrs	r2, r1, #20
    3da6:	0b24      	lsrs	r4, r4, #12
    3da8:	0512      	lsls	r2, r2, #20
    3daa:	4322      	orrs	r2, r4
    3dac:	4c0d      	ldr	r4, [pc, #52]	; (3de4 <__aeabi_ui2d+0x6c>)
    3dae:	051b      	lsls	r3, r3, #20
    3db0:	4022      	ands	r2, r4
    3db2:	4313      	orrs	r3, r2
    3db4:	005b      	lsls	r3, r3, #1
    3db6:	0859      	lsrs	r1, r3, #1
    3db8:	bd10      	pop	{r4, pc}
    3dba:	0021      	movs	r1, r4
    3dbc:	4091      	lsls	r1, r2
    3dbe:	000a      	movs	r2, r1
    3dc0:	210b      	movs	r1, #11
    3dc2:	1a08      	subs	r0, r1, r0
    3dc4:	40c4      	lsrs	r4, r0
    3dc6:	055b      	lsls	r3, r3, #21
    3dc8:	0324      	lsls	r4, r4, #12
    3dca:	0b24      	lsrs	r4, r4, #12
    3dcc:	0d5b      	lsrs	r3, r3, #21
    3dce:	e7e6      	b.n	3d9e <__aeabi_ui2d+0x26>
    3dd0:	2300      	movs	r3, #0
    3dd2:	2400      	movs	r4, #0
    3dd4:	2200      	movs	r2, #0
    3dd6:	e7e2      	b.n	3d9e <__aeabi_ui2d+0x26>
    3dd8:	0000041e 	.word	0x0000041e
    3ddc:	00000433 	.word	0x00000433
    3de0:	00000413 	.word	0x00000413
    3de4:	800fffff 	.word	0x800fffff

00003de8 <__aeabi_f2d>:
    3de8:	0041      	lsls	r1, r0, #1
    3dea:	0e09      	lsrs	r1, r1, #24
    3dec:	1c4b      	adds	r3, r1, #1
    3dee:	b570      	push	{r4, r5, r6, lr}
    3df0:	b2db      	uxtb	r3, r3
    3df2:	0246      	lsls	r6, r0, #9
    3df4:	0a75      	lsrs	r5, r6, #9
    3df6:	0fc4      	lsrs	r4, r0, #31
    3df8:	2b01      	cmp	r3, #1
    3dfa:	dd14      	ble.n	3e26 <__aeabi_f2d+0x3e>
    3dfc:	23e0      	movs	r3, #224	; 0xe0
    3dfe:	009b      	lsls	r3, r3, #2
    3e00:	076d      	lsls	r5, r5, #29
    3e02:	0b36      	lsrs	r6, r6, #12
    3e04:	18cb      	adds	r3, r1, r3
    3e06:	2100      	movs	r1, #0
    3e08:	0d0a      	lsrs	r2, r1, #20
    3e0a:	0028      	movs	r0, r5
    3e0c:	0512      	lsls	r2, r2, #20
    3e0e:	4d1c      	ldr	r5, [pc, #112]	; (3e80 <__aeabi_f2d+0x98>)
    3e10:	4332      	orrs	r2, r6
    3e12:	055b      	lsls	r3, r3, #21
    3e14:	402a      	ands	r2, r5
    3e16:	085b      	lsrs	r3, r3, #1
    3e18:	4313      	orrs	r3, r2
    3e1a:	005b      	lsls	r3, r3, #1
    3e1c:	07e4      	lsls	r4, r4, #31
    3e1e:	085b      	lsrs	r3, r3, #1
    3e20:	4323      	orrs	r3, r4
    3e22:	0019      	movs	r1, r3
    3e24:	bd70      	pop	{r4, r5, r6, pc}
    3e26:	2900      	cmp	r1, #0
    3e28:	d114      	bne.n	3e54 <__aeabi_f2d+0x6c>
    3e2a:	2d00      	cmp	r5, #0
    3e2c:	d01e      	beq.n	3e6c <__aeabi_f2d+0x84>
    3e2e:	0028      	movs	r0, r5
    3e30:	f000 f8f4 	bl	401c <__clzsi2>
    3e34:	280a      	cmp	r0, #10
    3e36:	dc1c      	bgt.n	3e72 <__aeabi_f2d+0x8a>
    3e38:	230b      	movs	r3, #11
    3e3a:	002a      	movs	r2, r5
    3e3c:	1a1b      	subs	r3, r3, r0
    3e3e:	40da      	lsrs	r2, r3
    3e40:	0003      	movs	r3, r0
    3e42:	3315      	adds	r3, #21
    3e44:	409d      	lsls	r5, r3
    3e46:	4b0f      	ldr	r3, [pc, #60]	; (3e84 <__aeabi_f2d+0x9c>)
    3e48:	0312      	lsls	r2, r2, #12
    3e4a:	1a1b      	subs	r3, r3, r0
    3e4c:	055b      	lsls	r3, r3, #21
    3e4e:	0b16      	lsrs	r6, r2, #12
    3e50:	0d5b      	lsrs	r3, r3, #21
    3e52:	e7d8      	b.n	3e06 <__aeabi_f2d+0x1e>
    3e54:	2d00      	cmp	r5, #0
    3e56:	d006      	beq.n	3e66 <__aeabi_f2d+0x7e>
    3e58:	0b32      	lsrs	r2, r6, #12
    3e5a:	2680      	movs	r6, #128	; 0x80
    3e5c:	0336      	lsls	r6, r6, #12
    3e5e:	076d      	lsls	r5, r5, #29
    3e60:	4316      	orrs	r6, r2
    3e62:	4b09      	ldr	r3, [pc, #36]	; (3e88 <__aeabi_f2d+0xa0>)
    3e64:	e7cf      	b.n	3e06 <__aeabi_f2d+0x1e>
    3e66:	4b08      	ldr	r3, [pc, #32]	; (3e88 <__aeabi_f2d+0xa0>)
    3e68:	2600      	movs	r6, #0
    3e6a:	e7cc      	b.n	3e06 <__aeabi_f2d+0x1e>
    3e6c:	2300      	movs	r3, #0
    3e6e:	2600      	movs	r6, #0
    3e70:	e7c9      	b.n	3e06 <__aeabi_f2d+0x1e>
    3e72:	0003      	movs	r3, r0
    3e74:	002a      	movs	r2, r5
    3e76:	3b0b      	subs	r3, #11
    3e78:	409a      	lsls	r2, r3
    3e7a:	2500      	movs	r5, #0
    3e7c:	e7e3      	b.n	3e46 <__aeabi_f2d+0x5e>
    3e7e:	46c0      	nop			; (mov r8, r8)
    3e80:	800fffff 	.word	0x800fffff
    3e84:	00000389 	.word	0x00000389
    3e88:	000007ff 	.word	0x000007ff

00003e8c <__aeabi_d2f>:
    3e8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e8e:	004c      	lsls	r4, r1, #1
    3e90:	0d64      	lsrs	r4, r4, #21
    3e92:	030b      	lsls	r3, r1, #12
    3e94:	1c62      	adds	r2, r4, #1
    3e96:	0f45      	lsrs	r5, r0, #29
    3e98:	0a5b      	lsrs	r3, r3, #9
    3e9a:	0552      	lsls	r2, r2, #21
    3e9c:	432b      	orrs	r3, r5
    3e9e:	0fc9      	lsrs	r1, r1, #31
    3ea0:	00c5      	lsls	r5, r0, #3
    3ea2:	0d52      	lsrs	r2, r2, #21
    3ea4:	2a01      	cmp	r2, #1
    3ea6:	dd28      	ble.n	3efa <__aeabi_d2f+0x6e>
    3ea8:	4a3a      	ldr	r2, [pc, #232]	; (3f94 <__aeabi_d2f+0x108>)
    3eaa:	18a6      	adds	r6, r4, r2
    3eac:	2efe      	cmp	r6, #254	; 0xfe
    3eae:	dc1b      	bgt.n	3ee8 <__aeabi_d2f+0x5c>
    3eb0:	2e00      	cmp	r6, #0
    3eb2:	dd3e      	ble.n	3f32 <__aeabi_d2f+0xa6>
    3eb4:	0180      	lsls	r0, r0, #6
    3eb6:	0002      	movs	r2, r0
    3eb8:	1e50      	subs	r0, r2, #1
    3eba:	4182      	sbcs	r2, r0
    3ebc:	0f6d      	lsrs	r5, r5, #29
    3ebe:	432a      	orrs	r2, r5
    3ec0:	00db      	lsls	r3, r3, #3
    3ec2:	4313      	orrs	r3, r2
    3ec4:	075a      	lsls	r2, r3, #29
    3ec6:	d004      	beq.n	3ed2 <__aeabi_d2f+0x46>
    3ec8:	220f      	movs	r2, #15
    3eca:	401a      	ands	r2, r3
    3ecc:	2a04      	cmp	r2, #4
    3ece:	d000      	beq.n	3ed2 <__aeabi_d2f+0x46>
    3ed0:	3304      	adds	r3, #4
    3ed2:	2280      	movs	r2, #128	; 0x80
    3ed4:	04d2      	lsls	r2, r2, #19
    3ed6:	401a      	ands	r2, r3
    3ed8:	d05a      	beq.n	3f90 <__aeabi_d2f+0x104>
    3eda:	3601      	adds	r6, #1
    3edc:	2eff      	cmp	r6, #255	; 0xff
    3ede:	d003      	beq.n	3ee8 <__aeabi_d2f+0x5c>
    3ee0:	019b      	lsls	r3, r3, #6
    3ee2:	0a5b      	lsrs	r3, r3, #9
    3ee4:	b2f4      	uxtb	r4, r6
    3ee6:	e001      	b.n	3eec <__aeabi_d2f+0x60>
    3ee8:	24ff      	movs	r4, #255	; 0xff
    3eea:	2300      	movs	r3, #0
    3eec:	0258      	lsls	r0, r3, #9
    3eee:	05e4      	lsls	r4, r4, #23
    3ef0:	0a40      	lsrs	r0, r0, #9
    3ef2:	07c9      	lsls	r1, r1, #31
    3ef4:	4320      	orrs	r0, r4
    3ef6:	4308      	orrs	r0, r1
    3ef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3efa:	2c00      	cmp	r4, #0
    3efc:	d007      	beq.n	3f0e <__aeabi_d2f+0x82>
    3efe:	431d      	orrs	r5, r3
    3f00:	d0f2      	beq.n	3ee8 <__aeabi_d2f+0x5c>
    3f02:	2080      	movs	r0, #128	; 0x80
    3f04:	00db      	lsls	r3, r3, #3
    3f06:	0480      	lsls	r0, r0, #18
    3f08:	4303      	orrs	r3, r0
    3f0a:	26ff      	movs	r6, #255	; 0xff
    3f0c:	e7da      	b.n	3ec4 <__aeabi_d2f+0x38>
    3f0e:	432b      	orrs	r3, r5
    3f10:	d003      	beq.n	3f1a <__aeabi_d2f+0x8e>
    3f12:	2305      	movs	r3, #5
    3f14:	08db      	lsrs	r3, r3, #3
    3f16:	2cff      	cmp	r4, #255	; 0xff
    3f18:	d003      	beq.n	3f22 <__aeabi_d2f+0x96>
    3f1a:	025b      	lsls	r3, r3, #9
    3f1c:	0a5b      	lsrs	r3, r3, #9
    3f1e:	b2e4      	uxtb	r4, r4
    3f20:	e7e4      	b.n	3eec <__aeabi_d2f+0x60>
    3f22:	2b00      	cmp	r3, #0
    3f24:	d032      	beq.n	3f8c <__aeabi_d2f+0x100>
    3f26:	2080      	movs	r0, #128	; 0x80
    3f28:	03c0      	lsls	r0, r0, #15
    3f2a:	4303      	orrs	r3, r0
    3f2c:	025b      	lsls	r3, r3, #9
    3f2e:	0a5b      	lsrs	r3, r3, #9
    3f30:	e7dc      	b.n	3eec <__aeabi_d2f+0x60>
    3f32:	0032      	movs	r2, r6
    3f34:	3217      	adds	r2, #23
    3f36:	db14      	blt.n	3f62 <__aeabi_d2f+0xd6>
    3f38:	2280      	movs	r2, #128	; 0x80
    3f3a:	271e      	movs	r7, #30
    3f3c:	0412      	lsls	r2, r2, #16
    3f3e:	4313      	orrs	r3, r2
    3f40:	1bbf      	subs	r7, r7, r6
    3f42:	2f1f      	cmp	r7, #31
    3f44:	dc0f      	bgt.n	3f66 <__aeabi_d2f+0xda>
    3f46:	4a14      	ldr	r2, [pc, #80]	; (3f98 <__aeabi_d2f+0x10c>)
    3f48:	4694      	mov	ip, r2
    3f4a:	4464      	add	r4, ip
    3f4c:	002a      	movs	r2, r5
    3f4e:	40a5      	lsls	r5, r4
    3f50:	002e      	movs	r6, r5
    3f52:	40a3      	lsls	r3, r4
    3f54:	1e75      	subs	r5, r6, #1
    3f56:	41ae      	sbcs	r6, r5
    3f58:	40fa      	lsrs	r2, r7
    3f5a:	4333      	orrs	r3, r6
    3f5c:	4313      	orrs	r3, r2
    3f5e:	2600      	movs	r6, #0
    3f60:	e7b0      	b.n	3ec4 <__aeabi_d2f+0x38>
    3f62:	2400      	movs	r4, #0
    3f64:	e7d5      	b.n	3f12 <__aeabi_d2f+0x86>
    3f66:	2202      	movs	r2, #2
    3f68:	4252      	negs	r2, r2
    3f6a:	1b96      	subs	r6, r2, r6
    3f6c:	001a      	movs	r2, r3
    3f6e:	40f2      	lsrs	r2, r6
    3f70:	2f20      	cmp	r7, #32
    3f72:	d009      	beq.n	3f88 <__aeabi_d2f+0xfc>
    3f74:	4809      	ldr	r0, [pc, #36]	; (3f9c <__aeabi_d2f+0x110>)
    3f76:	4684      	mov	ip, r0
    3f78:	4464      	add	r4, ip
    3f7a:	40a3      	lsls	r3, r4
    3f7c:	432b      	orrs	r3, r5
    3f7e:	1e5d      	subs	r5, r3, #1
    3f80:	41ab      	sbcs	r3, r5
    3f82:	2600      	movs	r6, #0
    3f84:	4313      	orrs	r3, r2
    3f86:	e79d      	b.n	3ec4 <__aeabi_d2f+0x38>
    3f88:	2300      	movs	r3, #0
    3f8a:	e7f7      	b.n	3f7c <__aeabi_d2f+0xf0>
    3f8c:	2300      	movs	r3, #0
    3f8e:	e7ad      	b.n	3eec <__aeabi_d2f+0x60>
    3f90:	0034      	movs	r4, r6
    3f92:	e7bf      	b.n	3f14 <__aeabi_d2f+0x88>
    3f94:	fffffc80 	.word	0xfffffc80
    3f98:	fffffc82 	.word	0xfffffc82
    3f9c:	fffffca2 	.word	0xfffffca2

00003fa0 <__aeabi_cdrcmple>:
    3fa0:	4684      	mov	ip, r0
    3fa2:	1c10      	adds	r0, r2, #0
    3fa4:	4662      	mov	r2, ip
    3fa6:	468c      	mov	ip, r1
    3fa8:	1c19      	adds	r1, r3, #0
    3faa:	4663      	mov	r3, ip
    3fac:	e000      	b.n	3fb0 <__aeabi_cdcmpeq>
    3fae:	46c0      	nop			; (mov r8, r8)

00003fb0 <__aeabi_cdcmpeq>:
    3fb0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    3fb2:	f000 f8fb 	bl	41ac <__ledf2>
    3fb6:	2800      	cmp	r0, #0
    3fb8:	d401      	bmi.n	3fbe <__aeabi_cdcmpeq+0xe>
    3fba:	2100      	movs	r1, #0
    3fbc:	42c8      	cmn	r0, r1
    3fbe:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00003fc0 <__aeabi_dcmpeq>:
    3fc0:	b510      	push	{r4, lr}
    3fc2:	f000 f855 	bl	4070 <__eqdf2>
    3fc6:	4240      	negs	r0, r0
    3fc8:	3001      	adds	r0, #1
    3fca:	bd10      	pop	{r4, pc}

00003fcc <__aeabi_dcmplt>:
    3fcc:	b510      	push	{r4, lr}
    3fce:	f000 f8ed 	bl	41ac <__ledf2>
    3fd2:	2800      	cmp	r0, #0
    3fd4:	db01      	blt.n	3fda <__aeabi_dcmplt+0xe>
    3fd6:	2000      	movs	r0, #0
    3fd8:	bd10      	pop	{r4, pc}
    3fda:	2001      	movs	r0, #1
    3fdc:	bd10      	pop	{r4, pc}
    3fde:	46c0      	nop			; (mov r8, r8)

00003fe0 <__aeabi_dcmple>:
    3fe0:	b510      	push	{r4, lr}
    3fe2:	f000 f8e3 	bl	41ac <__ledf2>
    3fe6:	2800      	cmp	r0, #0
    3fe8:	dd01      	ble.n	3fee <__aeabi_dcmple+0xe>
    3fea:	2000      	movs	r0, #0
    3fec:	bd10      	pop	{r4, pc}
    3fee:	2001      	movs	r0, #1
    3ff0:	bd10      	pop	{r4, pc}
    3ff2:	46c0      	nop			; (mov r8, r8)

00003ff4 <__aeabi_dcmpgt>:
    3ff4:	b510      	push	{r4, lr}
    3ff6:	f000 f875 	bl	40e4 <__gedf2>
    3ffa:	2800      	cmp	r0, #0
    3ffc:	dc01      	bgt.n	4002 <__aeabi_dcmpgt+0xe>
    3ffe:	2000      	movs	r0, #0
    4000:	bd10      	pop	{r4, pc}
    4002:	2001      	movs	r0, #1
    4004:	bd10      	pop	{r4, pc}
    4006:	46c0      	nop			; (mov r8, r8)

00004008 <__aeabi_dcmpge>:
    4008:	b510      	push	{r4, lr}
    400a:	f000 f86b 	bl	40e4 <__gedf2>
    400e:	2800      	cmp	r0, #0
    4010:	da01      	bge.n	4016 <__aeabi_dcmpge+0xe>
    4012:	2000      	movs	r0, #0
    4014:	bd10      	pop	{r4, pc}
    4016:	2001      	movs	r0, #1
    4018:	bd10      	pop	{r4, pc}
    401a:	46c0      	nop			; (mov r8, r8)

0000401c <__clzsi2>:
    401c:	211c      	movs	r1, #28
    401e:	2301      	movs	r3, #1
    4020:	041b      	lsls	r3, r3, #16
    4022:	4298      	cmp	r0, r3
    4024:	d301      	bcc.n	402a <__clzsi2+0xe>
    4026:	0c00      	lsrs	r0, r0, #16
    4028:	3910      	subs	r1, #16
    402a:	0a1b      	lsrs	r3, r3, #8
    402c:	4298      	cmp	r0, r3
    402e:	d301      	bcc.n	4034 <__clzsi2+0x18>
    4030:	0a00      	lsrs	r0, r0, #8
    4032:	3908      	subs	r1, #8
    4034:	091b      	lsrs	r3, r3, #4
    4036:	4298      	cmp	r0, r3
    4038:	d301      	bcc.n	403e <__clzsi2+0x22>
    403a:	0900      	lsrs	r0, r0, #4
    403c:	3904      	subs	r1, #4
    403e:	a202      	add	r2, pc, #8	; (adr r2, 4048 <__clzsi2+0x2c>)
    4040:	5c10      	ldrb	r0, [r2, r0]
    4042:	1840      	adds	r0, r0, r1
    4044:	4770      	bx	lr
    4046:	46c0      	nop			; (mov r8, r8)
    4048:	02020304 	.word	0x02020304
    404c:	01010101 	.word	0x01010101
	...

00004058 <__clzdi2>:
    4058:	b510      	push	{r4, lr}
    405a:	2900      	cmp	r1, #0
    405c:	d103      	bne.n	4066 <__clzdi2+0xe>
    405e:	f7ff ffdd 	bl	401c <__clzsi2>
    4062:	3020      	adds	r0, #32
    4064:	e002      	b.n	406c <__clzdi2+0x14>
    4066:	1c08      	adds	r0, r1, #0
    4068:	f7ff ffd8 	bl	401c <__clzsi2>
    406c:	bd10      	pop	{r4, pc}
    406e:	46c0      	nop			; (mov r8, r8)

00004070 <__eqdf2>:
    4070:	b5f0      	push	{r4, r5, r6, r7, lr}
    4072:	464f      	mov	r7, r9
    4074:	4646      	mov	r6, r8
    4076:	46d6      	mov	lr, sl
    4078:	005c      	lsls	r4, r3, #1
    407a:	b5c0      	push	{r6, r7, lr}
    407c:	031f      	lsls	r7, r3, #12
    407e:	0fdb      	lsrs	r3, r3, #31
    4080:	469a      	mov	sl, r3
    4082:	4b17      	ldr	r3, [pc, #92]	; (40e0 <__eqdf2+0x70>)
    4084:	030e      	lsls	r6, r1, #12
    4086:	004d      	lsls	r5, r1, #1
    4088:	4684      	mov	ip, r0
    408a:	4680      	mov	r8, r0
    408c:	0b36      	lsrs	r6, r6, #12
    408e:	0d6d      	lsrs	r5, r5, #21
    4090:	0fc9      	lsrs	r1, r1, #31
    4092:	4691      	mov	r9, r2
    4094:	0b3f      	lsrs	r7, r7, #12
    4096:	0d64      	lsrs	r4, r4, #21
    4098:	2001      	movs	r0, #1
    409a:	429d      	cmp	r5, r3
    409c:	d008      	beq.n	40b0 <__eqdf2+0x40>
    409e:	429c      	cmp	r4, r3
    40a0:	d001      	beq.n	40a6 <__eqdf2+0x36>
    40a2:	42a5      	cmp	r5, r4
    40a4:	d00b      	beq.n	40be <__eqdf2+0x4e>
    40a6:	bc1c      	pop	{r2, r3, r4}
    40a8:	4690      	mov	r8, r2
    40aa:	4699      	mov	r9, r3
    40ac:	46a2      	mov	sl, r4
    40ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    40b0:	4663      	mov	r3, ip
    40b2:	4333      	orrs	r3, r6
    40b4:	d1f7      	bne.n	40a6 <__eqdf2+0x36>
    40b6:	42ac      	cmp	r4, r5
    40b8:	d1f5      	bne.n	40a6 <__eqdf2+0x36>
    40ba:	433a      	orrs	r2, r7
    40bc:	d1f3      	bne.n	40a6 <__eqdf2+0x36>
    40be:	2001      	movs	r0, #1
    40c0:	42be      	cmp	r6, r7
    40c2:	d1f0      	bne.n	40a6 <__eqdf2+0x36>
    40c4:	45c8      	cmp	r8, r9
    40c6:	d1ee      	bne.n	40a6 <__eqdf2+0x36>
    40c8:	4551      	cmp	r1, sl
    40ca:	d007      	beq.n	40dc <__eqdf2+0x6c>
    40cc:	2d00      	cmp	r5, #0
    40ce:	d1ea      	bne.n	40a6 <__eqdf2+0x36>
    40d0:	4663      	mov	r3, ip
    40d2:	431e      	orrs	r6, r3
    40d4:	0030      	movs	r0, r6
    40d6:	1e46      	subs	r6, r0, #1
    40d8:	41b0      	sbcs	r0, r6
    40da:	e7e4      	b.n	40a6 <__eqdf2+0x36>
    40dc:	2000      	movs	r0, #0
    40de:	e7e2      	b.n	40a6 <__eqdf2+0x36>
    40e0:	000007ff 	.word	0x000007ff

000040e4 <__gedf2>:
    40e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    40e6:	4645      	mov	r5, r8
    40e8:	46de      	mov	lr, fp
    40ea:	4657      	mov	r7, sl
    40ec:	464e      	mov	r6, r9
    40ee:	b5e0      	push	{r5, r6, r7, lr}
    40f0:	031f      	lsls	r7, r3, #12
    40f2:	0b3d      	lsrs	r5, r7, #12
    40f4:	4f2c      	ldr	r7, [pc, #176]	; (41a8 <__gedf2+0xc4>)
    40f6:	030e      	lsls	r6, r1, #12
    40f8:	004c      	lsls	r4, r1, #1
    40fa:	46ab      	mov	fp, r5
    40fc:	005d      	lsls	r5, r3, #1
    40fe:	4684      	mov	ip, r0
    4100:	0b36      	lsrs	r6, r6, #12
    4102:	0d64      	lsrs	r4, r4, #21
    4104:	0fc9      	lsrs	r1, r1, #31
    4106:	4690      	mov	r8, r2
    4108:	0d6d      	lsrs	r5, r5, #21
    410a:	0fdb      	lsrs	r3, r3, #31
    410c:	42bc      	cmp	r4, r7
    410e:	d02a      	beq.n	4166 <__gedf2+0x82>
    4110:	4f25      	ldr	r7, [pc, #148]	; (41a8 <__gedf2+0xc4>)
    4112:	42bd      	cmp	r5, r7
    4114:	d02d      	beq.n	4172 <__gedf2+0x8e>
    4116:	2c00      	cmp	r4, #0
    4118:	d10f      	bne.n	413a <__gedf2+0x56>
    411a:	4330      	orrs	r0, r6
    411c:	0007      	movs	r7, r0
    411e:	4681      	mov	r9, r0
    4120:	4278      	negs	r0, r7
    4122:	4178      	adcs	r0, r7
    4124:	b2c0      	uxtb	r0, r0
    4126:	2d00      	cmp	r5, #0
    4128:	d117      	bne.n	415a <__gedf2+0x76>
    412a:	465f      	mov	r7, fp
    412c:	433a      	orrs	r2, r7
    412e:	d114      	bne.n	415a <__gedf2+0x76>
    4130:	464b      	mov	r3, r9
    4132:	2000      	movs	r0, #0
    4134:	2b00      	cmp	r3, #0
    4136:	d00a      	beq.n	414e <__gedf2+0x6a>
    4138:	e006      	b.n	4148 <__gedf2+0x64>
    413a:	2d00      	cmp	r5, #0
    413c:	d102      	bne.n	4144 <__gedf2+0x60>
    413e:	4658      	mov	r0, fp
    4140:	4302      	orrs	r2, r0
    4142:	d001      	beq.n	4148 <__gedf2+0x64>
    4144:	4299      	cmp	r1, r3
    4146:	d018      	beq.n	417a <__gedf2+0x96>
    4148:	4248      	negs	r0, r1
    414a:	2101      	movs	r1, #1
    414c:	4308      	orrs	r0, r1
    414e:	bc3c      	pop	{r2, r3, r4, r5}
    4150:	4690      	mov	r8, r2
    4152:	4699      	mov	r9, r3
    4154:	46a2      	mov	sl, r4
    4156:	46ab      	mov	fp, r5
    4158:	bdf0      	pop	{r4, r5, r6, r7, pc}
    415a:	2800      	cmp	r0, #0
    415c:	d0f2      	beq.n	4144 <__gedf2+0x60>
    415e:	2001      	movs	r0, #1
    4160:	3b01      	subs	r3, #1
    4162:	4318      	orrs	r0, r3
    4164:	e7f3      	b.n	414e <__gedf2+0x6a>
    4166:	0037      	movs	r7, r6
    4168:	4307      	orrs	r7, r0
    416a:	d0d1      	beq.n	4110 <__gedf2+0x2c>
    416c:	2002      	movs	r0, #2
    416e:	4240      	negs	r0, r0
    4170:	e7ed      	b.n	414e <__gedf2+0x6a>
    4172:	465f      	mov	r7, fp
    4174:	4317      	orrs	r7, r2
    4176:	d0ce      	beq.n	4116 <__gedf2+0x32>
    4178:	e7f8      	b.n	416c <__gedf2+0x88>
    417a:	42ac      	cmp	r4, r5
    417c:	dce4      	bgt.n	4148 <__gedf2+0x64>
    417e:	da03      	bge.n	4188 <__gedf2+0xa4>
    4180:	1e48      	subs	r0, r1, #1
    4182:	2101      	movs	r1, #1
    4184:	4308      	orrs	r0, r1
    4186:	e7e2      	b.n	414e <__gedf2+0x6a>
    4188:	455e      	cmp	r6, fp
    418a:	d8dd      	bhi.n	4148 <__gedf2+0x64>
    418c:	d006      	beq.n	419c <__gedf2+0xb8>
    418e:	2000      	movs	r0, #0
    4190:	455e      	cmp	r6, fp
    4192:	d2dc      	bcs.n	414e <__gedf2+0x6a>
    4194:	2301      	movs	r3, #1
    4196:	1e48      	subs	r0, r1, #1
    4198:	4318      	orrs	r0, r3
    419a:	e7d8      	b.n	414e <__gedf2+0x6a>
    419c:	45c4      	cmp	ip, r8
    419e:	d8d3      	bhi.n	4148 <__gedf2+0x64>
    41a0:	2000      	movs	r0, #0
    41a2:	45c4      	cmp	ip, r8
    41a4:	d3f6      	bcc.n	4194 <__gedf2+0xb0>
    41a6:	e7d2      	b.n	414e <__gedf2+0x6a>
    41a8:	000007ff 	.word	0x000007ff

000041ac <__ledf2>:
    41ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    41ae:	464e      	mov	r6, r9
    41b0:	4645      	mov	r5, r8
    41b2:	46de      	mov	lr, fp
    41b4:	4657      	mov	r7, sl
    41b6:	005c      	lsls	r4, r3, #1
    41b8:	b5e0      	push	{r5, r6, r7, lr}
    41ba:	031f      	lsls	r7, r3, #12
    41bc:	0fdb      	lsrs	r3, r3, #31
    41be:	4699      	mov	r9, r3
    41c0:	4b2a      	ldr	r3, [pc, #168]	; (426c <__ledf2+0xc0>)
    41c2:	030e      	lsls	r6, r1, #12
    41c4:	004d      	lsls	r5, r1, #1
    41c6:	0fc9      	lsrs	r1, r1, #31
    41c8:	4684      	mov	ip, r0
    41ca:	0b36      	lsrs	r6, r6, #12
    41cc:	0d6d      	lsrs	r5, r5, #21
    41ce:	468b      	mov	fp, r1
    41d0:	4690      	mov	r8, r2
    41d2:	0b3f      	lsrs	r7, r7, #12
    41d4:	0d64      	lsrs	r4, r4, #21
    41d6:	429d      	cmp	r5, r3
    41d8:	d020      	beq.n	421c <__ledf2+0x70>
    41da:	4b24      	ldr	r3, [pc, #144]	; (426c <__ledf2+0xc0>)
    41dc:	429c      	cmp	r4, r3
    41de:	d022      	beq.n	4226 <__ledf2+0x7a>
    41e0:	2d00      	cmp	r5, #0
    41e2:	d112      	bne.n	420a <__ledf2+0x5e>
    41e4:	4330      	orrs	r0, r6
    41e6:	4243      	negs	r3, r0
    41e8:	4143      	adcs	r3, r0
    41ea:	b2db      	uxtb	r3, r3
    41ec:	2c00      	cmp	r4, #0
    41ee:	d01f      	beq.n	4230 <__ledf2+0x84>
    41f0:	2b00      	cmp	r3, #0
    41f2:	d00c      	beq.n	420e <__ledf2+0x62>
    41f4:	464b      	mov	r3, r9
    41f6:	2001      	movs	r0, #1
    41f8:	3b01      	subs	r3, #1
    41fa:	4303      	orrs	r3, r0
    41fc:	0018      	movs	r0, r3
    41fe:	bc3c      	pop	{r2, r3, r4, r5}
    4200:	4690      	mov	r8, r2
    4202:	4699      	mov	r9, r3
    4204:	46a2      	mov	sl, r4
    4206:	46ab      	mov	fp, r5
    4208:	bdf0      	pop	{r4, r5, r6, r7, pc}
    420a:	2c00      	cmp	r4, #0
    420c:	d016      	beq.n	423c <__ledf2+0x90>
    420e:	45cb      	cmp	fp, r9
    4210:	d017      	beq.n	4242 <__ledf2+0x96>
    4212:	465b      	mov	r3, fp
    4214:	4259      	negs	r1, r3
    4216:	2301      	movs	r3, #1
    4218:	430b      	orrs	r3, r1
    421a:	e7ef      	b.n	41fc <__ledf2+0x50>
    421c:	0031      	movs	r1, r6
    421e:	2302      	movs	r3, #2
    4220:	4301      	orrs	r1, r0
    4222:	d1eb      	bne.n	41fc <__ledf2+0x50>
    4224:	e7d9      	b.n	41da <__ledf2+0x2e>
    4226:	0039      	movs	r1, r7
    4228:	2302      	movs	r3, #2
    422a:	4311      	orrs	r1, r2
    422c:	d1e6      	bne.n	41fc <__ledf2+0x50>
    422e:	e7d7      	b.n	41e0 <__ledf2+0x34>
    4230:	433a      	orrs	r2, r7
    4232:	d1dd      	bne.n	41f0 <__ledf2+0x44>
    4234:	2300      	movs	r3, #0
    4236:	2800      	cmp	r0, #0
    4238:	d0e0      	beq.n	41fc <__ledf2+0x50>
    423a:	e7ea      	b.n	4212 <__ledf2+0x66>
    423c:	433a      	orrs	r2, r7
    423e:	d1e6      	bne.n	420e <__ledf2+0x62>
    4240:	e7e7      	b.n	4212 <__ledf2+0x66>
    4242:	42a5      	cmp	r5, r4
    4244:	dce5      	bgt.n	4212 <__ledf2+0x66>
    4246:	db05      	blt.n	4254 <__ledf2+0xa8>
    4248:	42be      	cmp	r6, r7
    424a:	d8e2      	bhi.n	4212 <__ledf2+0x66>
    424c:	d007      	beq.n	425e <__ledf2+0xb2>
    424e:	2300      	movs	r3, #0
    4250:	42be      	cmp	r6, r7
    4252:	d2d3      	bcs.n	41fc <__ledf2+0x50>
    4254:	4659      	mov	r1, fp
    4256:	2301      	movs	r3, #1
    4258:	3901      	subs	r1, #1
    425a:	430b      	orrs	r3, r1
    425c:	e7ce      	b.n	41fc <__ledf2+0x50>
    425e:	45c4      	cmp	ip, r8
    4260:	d8d7      	bhi.n	4212 <__ledf2+0x66>
    4262:	2300      	movs	r3, #0
    4264:	45c4      	cmp	ip, r8
    4266:	d3f5      	bcc.n	4254 <__ledf2+0xa8>
    4268:	e7c8      	b.n	41fc <__ledf2+0x50>
    426a:	46c0      	nop			; (mov r8, r8)
    426c:	000007ff 	.word	0x000007ff

00004270 <__libc_init_array>:
    4270:	b570      	push	{r4, r5, r6, lr}
    4272:	4e0d      	ldr	r6, [pc, #52]	; (42a8 <__libc_init_array+0x38>)
    4274:	4d0d      	ldr	r5, [pc, #52]	; (42ac <__libc_init_array+0x3c>)
    4276:	2400      	movs	r4, #0
    4278:	1bad      	subs	r5, r5, r6
    427a:	10ad      	asrs	r5, r5, #2
    427c:	d005      	beq.n	428a <__libc_init_array+0x1a>
    427e:	00a3      	lsls	r3, r4, #2
    4280:	58f3      	ldr	r3, [r6, r3]
    4282:	3401      	adds	r4, #1
    4284:	4798      	blx	r3
    4286:	42a5      	cmp	r5, r4
    4288:	d1f9      	bne.n	427e <__libc_init_array+0xe>
    428a:	f005 feed 	bl	a068 <_init>
    428e:	4e08      	ldr	r6, [pc, #32]	; (42b0 <__libc_init_array+0x40>)
    4290:	4d08      	ldr	r5, [pc, #32]	; (42b4 <__libc_init_array+0x44>)
    4292:	2400      	movs	r4, #0
    4294:	1bad      	subs	r5, r5, r6
    4296:	10ad      	asrs	r5, r5, #2
    4298:	d005      	beq.n	42a6 <__libc_init_array+0x36>
    429a:	00a3      	lsls	r3, r4, #2
    429c:	58f3      	ldr	r3, [r6, r3]
    429e:	3401      	adds	r4, #1
    42a0:	4798      	blx	r3
    42a2:	42a5      	cmp	r5, r4
    42a4:	d1f9      	bne.n	429a <__libc_init_array+0x2a>
    42a6:	bd70      	pop	{r4, r5, r6, pc}
    42a8:	0000a074 	.word	0x0000a074
    42ac:	0000a074 	.word	0x0000a074
    42b0:	0000a074 	.word	0x0000a074
    42b4:	0000a07c 	.word	0x0000a07c

000042b8 <memcpy>:
    42b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    42ba:	0005      	movs	r5, r0
    42bc:	2a0f      	cmp	r2, #15
    42be:	d92f      	bls.n	4320 <memcpy+0x68>
    42c0:	000b      	movs	r3, r1
    42c2:	4303      	orrs	r3, r0
    42c4:	079b      	lsls	r3, r3, #30
    42c6:	d134      	bne.n	4332 <memcpy+0x7a>
    42c8:	0016      	movs	r6, r2
    42ca:	000c      	movs	r4, r1
    42cc:	0003      	movs	r3, r0
    42ce:	3e10      	subs	r6, #16
    42d0:	0935      	lsrs	r5, r6, #4
    42d2:	3501      	adds	r5, #1
    42d4:	012d      	lsls	r5, r5, #4
    42d6:	1945      	adds	r5, r0, r5
    42d8:	6827      	ldr	r7, [r4, #0]
    42da:	601f      	str	r7, [r3, #0]
    42dc:	6867      	ldr	r7, [r4, #4]
    42de:	605f      	str	r7, [r3, #4]
    42e0:	68a7      	ldr	r7, [r4, #8]
    42e2:	609f      	str	r7, [r3, #8]
    42e4:	68e7      	ldr	r7, [r4, #12]
    42e6:	3410      	adds	r4, #16
    42e8:	60df      	str	r7, [r3, #12]
    42ea:	3310      	adds	r3, #16
    42ec:	429d      	cmp	r5, r3
    42ee:	d1f3      	bne.n	42d8 <memcpy+0x20>
    42f0:	230f      	movs	r3, #15
    42f2:	439e      	bics	r6, r3
    42f4:	3610      	adds	r6, #16
    42f6:	1985      	adds	r5, r0, r6
    42f8:	1989      	adds	r1, r1, r6
    42fa:	4013      	ands	r3, r2
    42fc:	2b03      	cmp	r3, #3
    42fe:	d91a      	bls.n	4336 <memcpy+0x7e>
    4300:	1f1e      	subs	r6, r3, #4
    4302:	2300      	movs	r3, #0
    4304:	08b4      	lsrs	r4, r6, #2
    4306:	3401      	adds	r4, #1
    4308:	00a4      	lsls	r4, r4, #2
    430a:	58cf      	ldr	r7, [r1, r3]
    430c:	50ef      	str	r7, [r5, r3]
    430e:	3304      	adds	r3, #4
    4310:	42a3      	cmp	r3, r4
    4312:	d1fa      	bne.n	430a <memcpy+0x52>
    4314:	2403      	movs	r4, #3
    4316:	43a6      	bics	r6, r4
    4318:	1d33      	adds	r3, r6, #4
    431a:	4022      	ands	r2, r4
    431c:	18c9      	adds	r1, r1, r3
    431e:	18ed      	adds	r5, r5, r3
    4320:	2a00      	cmp	r2, #0
    4322:	d005      	beq.n	4330 <memcpy+0x78>
    4324:	2300      	movs	r3, #0
    4326:	5ccc      	ldrb	r4, [r1, r3]
    4328:	54ec      	strb	r4, [r5, r3]
    432a:	3301      	adds	r3, #1
    432c:	4293      	cmp	r3, r2
    432e:	d1fa      	bne.n	4326 <memcpy+0x6e>
    4330:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4332:	0005      	movs	r5, r0
    4334:	e7f6      	b.n	4324 <memcpy+0x6c>
    4336:	001a      	movs	r2, r3
    4338:	e7f2      	b.n	4320 <memcpy+0x68>
    433a:	46c0      	nop			; (mov r8, r8)

0000433c <memset>:
    433c:	b5f0      	push	{r4, r5, r6, r7, lr}
    433e:	0783      	lsls	r3, r0, #30
    4340:	d043      	beq.n	43ca <memset+0x8e>
    4342:	1e54      	subs	r4, r2, #1
    4344:	2a00      	cmp	r2, #0
    4346:	d03f      	beq.n	43c8 <memset+0x8c>
    4348:	b2ce      	uxtb	r6, r1
    434a:	0002      	movs	r2, r0
    434c:	2503      	movs	r5, #3
    434e:	e002      	b.n	4356 <memset+0x1a>
    4350:	001a      	movs	r2, r3
    4352:	3c01      	subs	r4, #1
    4354:	d338      	bcc.n	43c8 <memset+0x8c>
    4356:	1c53      	adds	r3, r2, #1
    4358:	7016      	strb	r6, [r2, #0]
    435a:	422b      	tst	r3, r5
    435c:	d1f8      	bne.n	4350 <memset+0x14>
    435e:	2c03      	cmp	r4, #3
    4360:	d92a      	bls.n	43b8 <memset+0x7c>
    4362:	22ff      	movs	r2, #255	; 0xff
    4364:	400a      	ands	r2, r1
    4366:	0215      	lsls	r5, r2, #8
    4368:	4315      	orrs	r5, r2
    436a:	042a      	lsls	r2, r5, #16
    436c:	4315      	orrs	r5, r2
    436e:	2c0f      	cmp	r4, #15
    4370:	d914      	bls.n	439c <memset+0x60>
    4372:	0027      	movs	r7, r4
    4374:	001a      	movs	r2, r3
    4376:	3f10      	subs	r7, #16
    4378:	093e      	lsrs	r6, r7, #4
    437a:	3601      	adds	r6, #1
    437c:	0136      	lsls	r6, r6, #4
    437e:	199e      	adds	r6, r3, r6
    4380:	6015      	str	r5, [r2, #0]
    4382:	6055      	str	r5, [r2, #4]
    4384:	6095      	str	r5, [r2, #8]
    4386:	60d5      	str	r5, [r2, #12]
    4388:	3210      	adds	r2, #16
    438a:	4296      	cmp	r6, r2
    438c:	d1f8      	bne.n	4380 <memset+0x44>
    438e:	220f      	movs	r2, #15
    4390:	4397      	bics	r7, r2
    4392:	3710      	adds	r7, #16
    4394:	19db      	adds	r3, r3, r7
    4396:	4014      	ands	r4, r2
    4398:	2c03      	cmp	r4, #3
    439a:	d90d      	bls.n	43b8 <memset+0x7c>
    439c:	001a      	movs	r2, r3
    439e:	1f27      	subs	r7, r4, #4
    43a0:	08be      	lsrs	r6, r7, #2
    43a2:	3601      	adds	r6, #1
    43a4:	00b6      	lsls	r6, r6, #2
    43a6:	199e      	adds	r6, r3, r6
    43a8:	c220      	stmia	r2!, {r5}
    43aa:	42b2      	cmp	r2, r6
    43ac:	d1fc      	bne.n	43a8 <memset+0x6c>
    43ae:	2203      	movs	r2, #3
    43b0:	4397      	bics	r7, r2
    43b2:	3704      	adds	r7, #4
    43b4:	19db      	adds	r3, r3, r7
    43b6:	4014      	ands	r4, r2
    43b8:	2c00      	cmp	r4, #0
    43ba:	d005      	beq.n	43c8 <memset+0x8c>
    43bc:	b2c9      	uxtb	r1, r1
    43be:	191c      	adds	r4, r3, r4
    43c0:	7019      	strb	r1, [r3, #0]
    43c2:	3301      	adds	r3, #1
    43c4:	429c      	cmp	r4, r3
    43c6:	d1fb      	bne.n	43c0 <memset+0x84>
    43c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    43ca:	0014      	movs	r4, r2
    43cc:	0003      	movs	r3, r0
    43ce:	e7c6      	b.n	435e <memset+0x22>

000043d0 <printf>:
    43d0:	b40f      	push	{r0, r1, r2, r3}
    43d2:	b500      	push	{lr}
    43d4:	4906      	ldr	r1, [pc, #24]	; (43f0 <printf+0x20>)
    43d6:	b083      	sub	sp, #12
    43d8:	ab04      	add	r3, sp, #16
    43da:	6808      	ldr	r0, [r1, #0]
    43dc:	cb04      	ldmia	r3!, {r2}
    43de:	6881      	ldr	r1, [r0, #8]
    43e0:	9301      	str	r3, [sp, #4]
    43e2:	f000 f913 	bl	460c <_vfprintf_r>
    43e6:	b003      	add	sp, #12
    43e8:	bc08      	pop	{r3}
    43ea:	b004      	add	sp, #16
    43ec:	4718      	bx	r3
    43ee:	46c0      	nop			; (mov r8, r8)
    43f0:	2000007c 	.word	0x2000007c

000043f4 <setbuf>:
    43f4:	424a      	negs	r2, r1
    43f6:	414a      	adcs	r2, r1
    43f8:	2380      	movs	r3, #128	; 0x80
    43fa:	b510      	push	{r4, lr}
    43fc:	0052      	lsls	r2, r2, #1
    43fe:	00db      	lsls	r3, r3, #3
    4400:	f000 f802 	bl	4408 <setvbuf>
    4404:	bd10      	pop	{r4, pc}
    4406:	46c0      	nop			; (mov r8, r8)

00004408 <setvbuf>:
    4408:	b5f0      	push	{r4, r5, r6, r7, lr}
    440a:	4647      	mov	r7, r8
    440c:	46ce      	mov	lr, r9
    440e:	b580      	push	{r7, lr}
    4410:	001f      	movs	r7, r3
    4412:	4b63      	ldr	r3, [pc, #396]	; (45a0 <setvbuf+0x198>)
    4414:	b083      	sub	sp, #12
    4416:	681d      	ldr	r5, [r3, #0]
    4418:	0004      	movs	r4, r0
    441a:	4688      	mov	r8, r1
    441c:	0016      	movs	r6, r2
    441e:	2d00      	cmp	r5, #0
    4420:	d002      	beq.n	4428 <setvbuf+0x20>
    4422:	6bab      	ldr	r3, [r5, #56]	; 0x38
    4424:	2b00      	cmp	r3, #0
    4426:	d066      	beq.n	44f6 <setvbuf+0xee>
    4428:	2e02      	cmp	r6, #2
    442a:	d005      	beq.n	4438 <setvbuf+0x30>
    442c:	2e01      	cmp	r6, #1
    442e:	d900      	bls.n	4432 <setvbuf+0x2a>
    4430:	e0a1      	b.n	4576 <setvbuf+0x16e>
    4432:	2f00      	cmp	r7, #0
    4434:	da00      	bge.n	4438 <setvbuf+0x30>
    4436:	e09e      	b.n	4576 <setvbuf+0x16e>
    4438:	6e63      	ldr	r3, [r4, #100]	; 0x64
    443a:	07db      	lsls	r3, r3, #31
    443c:	d533      	bpl.n	44a6 <setvbuf+0x9e>
    443e:	0021      	movs	r1, r4
    4440:	0028      	movs	r0, r5
    4442:	f002 fe27 	bl	7094 <_fflush_r>
    4446:	6b21      	ldr	r1, [r4, #48]	; 0x30
    4448:	2900      	cmp	r1, #0
    444a:	d008      	beq.n	445e <setvbuf+0x56>
    444c:	0023      	movs	r3, r4
    444e:	3340      	adds	r3, #64	; 0x40
    4450:	4299      	cmp	r1, r3
    4452:	d002      	beq.n	445a <setvbuf+0x52>
    4454:	0028      	movs	r0, r5
    4456:	f002 ff21 	bl	729c <_free_r>
    445a:	2300      	movs	r3, #0
    445c:	6323      	str	r3, [r4, #48]	; 0x30
    445e:	2300      	movs	r3, #0
    4460:	61a3      	str	r3, [r4, #24]
    4462:	6063      	str	r3, [r4, #4]
    4464:	220c      	movs	r2, #12
    4466:	5ea3      	ldrsh	r3, [r4, r2]
    4468:	061a      	lsls	r2, r3, #24
    446a:	d43d      	bmi.n	44e8 <setvbuf+0xe0>
    446c:	4a4d      	ldr	r2, [pc, #308]	; (45a4 <setvbuf+0x19c>)
    446e:	4013      	ands	r3, r2
    4470:	81a3      	strh	r3, [r4, #12]
    4472:	2e02      	cmp	r6, #2
    4474:	d01e      	beq.n	44b4 <setvbuf+0xac>
    4476:	ab01      	add	r3, sp, #4
    4478:	466a      	mov	r2, sp
    447a:	0021      	movs	r1, r4
    447c:	0028      	movs	r0, r5
    447e:	f003 f9a9 	bl	77d4 <__swhatbuf_r>
    4482:	89a3      	ldrh	r3, [r4, #12]
    4484:	4318      	orrs	r0, r3
    4486:	81a0      	strh	r0, [r4, #12]
    4488:	2f00      	cmp	r7, #0
    448a:	d138      	bne.n	44fe <setvbuf+0xf6>
    448c:	9f00      	ldr	r7, [sp, #0]
    448e:	0038      	movs	r0, r7
    4490:	f003 fa18 	bl	78c4 <malloc>
    4494:	4680      	mov	r8, r0
    4496:	2800      	cmp	r0, #0
    4498:	d100      	bne.n	449c <setvbuf+0x94>
    449a:	e06f      	b.n	457c <setvbuf+0x174>
    449c:	2280      	movs	r2, #128	; 0x80
    449e:	89a3      	ldrh	r3, [r4, #12]
    44a0:	4313      	orrs	r3, r2
    44a2:	81a3      	strh	r3, [r4, #12]
    44a4:	e02e      	b.n	4504 <setvbuf+0xfc>
    44a6:	89a3      	ldrh	r3, [r4, #12]
    44a8:	059b      	lsls	r3, r3, #22
    44aa:	d4c8      	bmi.n	443e <setvbuf+0x36>
    44ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
    44ae:	f003 f98d 	bl	77cc <__retarget_lock_acquire_recursive>
    44b2:	e7c4      	b.n	443e <setvbuf+0x36>
    44b4:	2500      	movs	r5, #0
    44b6:	2202      	movs	r2, #2
    44b8:	4313      	orrs	r3, r2
    44ba:	2200      	movs	r2, #0
    44bc:	60a2      	str	r2, [r4, #8]
    44be:	0022      	movs	r2, r4
    44c0:	3243      	adds	r2, #67	; 0x43
    44c2:	6022      	str	r2, [r4, #0]
    44c4:	6122      	str	r2, [r4, #16]
    44c6:	2201      	movs	r2, #1
    44c8:	6e61      	ldr	r1, [r4, #100]	; 0x64
    44ca:	81a3      	strh	r3, [r4, #12]
    44cc:	6162      	str	r2, [r4, #20]
    44ce:	4211      	tst	r1, r2
    44d0:	d104      	bne.n	44dc <setvbuf+0xd4>
    44d2:	059b      	lsls	r3, r3, #22
    44d4:	d402      	bmi.n	44dc <setvbuf+0xd4>
    44d6:	6da0      	ldr	r0, [r4, #88]	; 0x58
    44d8:	f003 f97a 	bl	77d0 <__retarget_lock_release_recursive>
    44dc:	0028      	movs	r0, r5
    44de:	b003      	add	sp, #12
    44e0:	bc0c      	pop	{r2, r3}
    44e2:	4690      	mov	r8, r2
    44e4:	4699      	mov	r9, r3
    44e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    44e8:	6921      	ldr	r1, [r4, #16]
    44ea:	0028      	movs	r0, r5
    44ec:	f002 fed6 	bl	729c <_free_r>
    44f0:	220c      	movs	r2, #12
    44f2:	5ea3      	ldrsh	r3, [r4, r2]
    44f4:	e7ba      	b.n	446c <setvbuf+0x64>
    44f6:	0028      	movs	r0, r5
    44f8:	f002 fe26 	bl	7148 <__sinit>
    44fc:	e794      	b.n	4428 <setvbuf+0x20>
    44fe:	4643      	mov	r3, r8
    4500:	2b00      	cmp	r3, #0
    4502:	d0c4      	beq.n	448e <setvbuf+0x86>
    4504:	6bab      	ldr	r3, [r5, #56]	; 0x38
    4506:	2b00      	cmp	r3, #0
    4508:	d027      	beq.n	455a <setvbuf+0x152>
    450a:	9b00      	ldr	r3, [sp, #0]
    450c:	429f      	cmp	r7, r3
    450e:	d02a      	beq.n	4566 <setvbuf+0x15e>
    4510:	2380      	movs	r3, #128	; 0x80
    4512:	89a2      	ldrh	r2, [r4, #12]
    4514:	011b      	lsls	r3, r3, #4
    4516:	4313      	orrs	r3, r2
    4518:	b21b      	sxth	r3, r3
    451a:	81a3      	strh	r3, [r4, #12]
    451c:	2e01      	cmp	r6, #1
    451e:	d026      	beq.n	456e <setvbuf+0x166>
    4520:	4642      	mov	r2, r8
    4522:	6022      	str	r2, [r4, #0]
    4524:	6122      	str	r2, [r4, #16]
    4526:	2208      	movs	r2, #8
    4528:	b29b      	uxth	r3, r3
    452a:	6167      	str	r7, [r4, #20]
    452c:	401a      	ands	r2, r3
    452e:	d00b      	beq.n	4548 <setvbuf+0x140>
    4530:	07da      	lsls	r2, r3, #31
    4532:	d510      	bpl.n	4556 <setvbuf+0x14e>
    4534:	2200      	movs	r2, #0
    4536:	2501      	movs	r5, #1
    4538:	60a2      	str	r2, [r4, #8]
    453a:	6e62      	ldr	r2, [r4, #100]	; 0x64
    453c:	427f      	negs	r7, r7
    453e:	61a7      	str	r7, [r4, #24]
    4540:	4015      	ands	r5, r2
    4542:	d0c6      	beq.n	44d2 <setvbuf+0xca>
    4544:	2500      	movs	r5, #0
    4546:	e7c9      	b.n	44dc <setvbuf+0xd4>
    4548:	60a2      	str	r2, [r4, #8]
    454a:	2501      	movs	r5, #1
    454c:	6e62      	ldr	r2, [r4, #100]	; 0x64
    454e:	4015      	ands	r5, r2
    4550:	d0bf      	beq.n	44d2 <setvbuf+0xca>
    4552:	2500      	movs	r5, #0
    4554:	e7c2      	b.n	44dc <setvbuf+0xd4>
    4556:	60a7      	str	r7, [r4, #8]
    4558:	e7f7      	b.n	454a <setvbuf+0x142>
    455a:	0028      	movs	r0, r5
    455c:	f002 fdf4 	bl	7148 <__sinit>
    4560:	9b00      	ldr	r3, [sp, #0]
    4562:	429f      	cmp	r7, r3
    4564:	d1d4      	bne.n	4510 <setvbuf+0x108>
    4566:	220c      	movs	r2, #12
    4568:	5ea3      	ldrsh	r3, [r4, r2]
    456a:	2e01      	cmp	r6, #1
    456c:	d1d8      	bne.n	4520 <setvbuf+0x118>
    456e:	2201      	movs	r2, #1
    4570:	4313      	orrs	r3, r2
    4572:	81a3      	strh	r3, [r4, #12]
    4574:	e7d4      	b.n	4520 <setvbuf+0x118>
    4576:	2501      	movs	r5, #1
    4578:	426d      	negs	r5, r5
    457a:	e7af      	b.n	44dc <setvbuf+0xd4>
    457c:	9b00      	ldr	r3, [sp, #0]
    457e:	4699      	mov	r9, r3
    4580:	42bb      	cmp	r3, r7
    4582:	d005      	beq.n	4590 <setvbuf+0x188>
    4584:	0018      	movs	r0, r3
    4586:	f003 f99d 	bl	78c4 <malloc>
    458a:	4680      	mov	r8, r0
    458c:	2800      	cmp	r0, #0
    458e:	d104      	bne.n	459a <setvbuf+0x192>
    4590:	2501      	movs	r5, #1
    4592:	220c      	movs	r2, #12
    4594:	5ea3      	ldrsh	r3, [r4, r2]
    4596:	426d      	negs	r5, r5
    4598:	e78d      	b.n	44b6 <setvbuf+0xae>
    459a:	464f      	mov	r7, r9
    459c:	e77e      	b.n	449c <setvbuf+0x94>
    459e:	46c0      	nop			; (mov r8, r8)
    45a0:	2000007c 	.word	0x2000007c
    45a4:	fffff35c 	.word	0xfffff35c

000045a8 <strlen>:
    45a8:	b510      	push	{r4, lr}
    45aa:	0783      	lsls	r3, r0, #30
    45ac:	d025      	beq.n	45fa <strlen+0x52>
    45ae:	7803      	ldrb	r3, [r0, #0]
    45b0:	2b00      	cmp	r3, #0
    45b2:	d024      	beq.n	45fe <strlen+0x56>
    45b4:	0003      	movs	r3, r0
    45b6:	2103      	movs	r1, #3
    45b8:	e002      	b.n	45c0 <strlen+0x18>
    45ba:	781a      	ldrb	r2, [r3, #0]
    45bc:	2a00      	cmp	r2, #0
    45be:	d01a      	beq.n	45f6 <strlen+0x4e>
    45c0:	3301      	adds	r3, #1
    45c2:	420b      	tst	r3, r1
    45c4:	d1f9      	bne.n	45ba <strlen+0x12>
    45c6:	6819      	ldr	r1, [r3, #0]
    45c8:	4a0e      	ldr	r2, [pc, #56]	; (4604 <strlen+0x5c>)
    45ca:	4c0f      	ldr	r4, [pc, #60]	; (4608 <strlen+0x60>)
    45cc:	188a      	adds	r2, r1, r2
    45ce:	438a      	bics	r2, r1
    45d0:	4222      	tst	r2, r4
    45d2:	d106      	bne.n	45e2 <strlen+0x3a>
    45d4:	3304      	adds	r3, #4
    45d6:	6819      	ldr	r1, [r3, #0]
    45d8:	4a0a      	ldr	r2, [pc, #40]	; (4604 <strlen+0x5c>)
    45da:	188a      	adds	r2, r1, r2
    45dc:	438a      	bics	r2, r1
    45de:	4222      	tst	r2, r4
    45e0:	d0f8      	beq.n	45d4 <strlen+0x2c>
    45e2:	001a      	movs	r2, r3
    45e4:	781b      	ldrb	r3, [r3, #0]
    45e6:	2b00      	cmp	r3, #0
    45e8:	d003      	beq.n	45f2 <strlen+0x4a>
    45ea:	3201      	adds	r2, #1
    45ec:	7811      	ldrb	r1, [r2, #0]
    45ee:	2900      	cmp	r1, #0
    45f0:	d1fb      	bne.n	45ea <strlen+0x42>
    45f2:	1a10      	subs	r0, r2, r0
    45f4:	bd10      	pop	{r4, pc}
    45f6:	1a18      	subs	r0, r3, r0
    45f8:	e7fc      	b.n	45f4 <strlen+0x4c>
    45fa:	0003      	movs	r3, r0
    45fc:	e7e3      	b.n	45c6 <strlen+0x1e>
    45fe:	2000      	movs	r0, #0
    4600:	e7f8      	b.n	45f4 <strlen+0x4c>
    4602:	46c0      	nop			; (mov r8, r8)
    4604:	fefefeff 	.word	0xfefefeff
    4608:	80808080 	.word	0x80808080

0000460c <_vfprintf_r>:
    460c:	b5f0      	push	{r4, r5, r6, r7, lr}
    460e:	46de      	mov	lr, fp
    4610:	464e      	mov	r6, r9
    4612:	4645      	mov	r5, r8
    4614:	4657      	mov	r7, sl
    4616:	b5e0      	push	{r5, r6, r7, lr}
    4618:	b0c3      	sub	sp, #268	; 0x10c
    461a:	4689      	mov	r9, r1
    461c:	0014      	movs	r4, r2
    461e:	001d      	movs	r5, r3
    4620:	930f      	str	r3, [sp, #60]	; 0x3c
    4622:	0006      	movs	r6, r0
    4624:	9006      	str	r0, [sp, #24]
    4626:	f003 f8bf 	bl	77a8 <_localeconv_r>
    462a:	6803      	ldr	r3, [r0, #0]
    462c:	0018      	movs	r0, r3
    462e:	9318      	str	r3, [sp, #96]	; 0x60
    4630:	f7ff ffba 	bl	45a8 <strlen>
    4634:	9017      	str	r0, [sp, #92]	; 0x5c
    4636:	2e00      	cmp	r6, #0
    4638:	d004      	beq.n	4644 <_vfprintf_r+0x38>
    463a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    463c:	9307      	str	r3, [sp, #28]
    463e:	2b00      	cmp	r3, #0
    4640:	d100      	bne.n	4644 <_vfprintf_r+0x38>
    4642:	e0a7      	b.n	4794 <_vfprintf_r+0x188>
    4644:	464b      	mov	r3, r9
    4646:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    4648:	07db      	lsls	r3, r3, #31
    464a:	d478      	bmi.n	473e <_vfprintf_r+0x132>
    464c:	464b      	mov	r3, r9
    464e:	210c      	movs	r1, #12
    4650:	5e59      	ldrsh	r1, [r3, r1]
    4652:	b28b      	uxth	r3, r1
    4654:	059a      	lsls	r2, r3, #22
    4656:	d56e      	bpl.n	4736 <_vfprintf_r+0x12a>
    4658:	2280      	movs	r2, #128	; 0x80
    465a:	0192      	lsls	r2, r2, #6
    465c:	4213      	tst	r3, r2
    465e:	d109      	bne.n	4674 <_vfprintf_r+0x68>
    4660:	430a      	orrs	r2, r1
    4662:	464b      	mov	r3, r9
    4664:	4649      	mov	r1, r9
    4666:	819a      	strh	r2, [r3, #12]
    4668:	6e49      	ldr	r1, [r1, #100]	; 0x64
    466a:	4bcc      	ldr	r3, [pc, #816]	; (499c <_vfprintf_r+0x390>)
    466c:	400b      	ands	r3, r1
    466e:	4649      	mov	r1, r9
    4670:	664b      	str	r3, [r1, #100]	; 0x64
    4672:	b293      	uxth	r3, r2
    4674:	071a      	lsls	r2, r3, #28
    4676:	d567      	bpl.n	4748 <_vfprintf_r+0x13c>
    4678:	464a      	mov	r2, r9
    467a:	6912      	ldr	r2, [r2, #16]
    467c:	2a00      	cmp	r2, #0
    467e:	d063      	beq.n	4748 <_vfprintf_r+0x13c>
    4680:	221a      	movs	r2, #26
    4682:	401a      	ands	r2, r3
    4684:	2a0a      	cmp	r2, #10
    4686:	d100      	bne.n	468a <_vfprintf_r+0x7e>
    4688:	e088      	b.n	479c <_vfprintf_r+0x190>
    468a:	ab32      	add	r3, sp, #200	; 0xc8
    468c:	9325      	str	r3, [sp, #148]	; 0x94
    468e:	2300      	movs	r3, #0
    4690:	46cb      	mov	fp, r9
    4692:	af25      	add	r7, sp, #148	; 0x94
    4694:	60bb      	str	r3, [r7, #8]
    4696:	607b      	str	r3, [r7, #4]
    4698:	9407      	str	r4, [sp, #28]
    469a:	9314      	str	r3, [sp, #80]	; 0x50
    469c:	9316      	str	r3, [sp, #88]	; 0x58
    469e:	9315      	str	r3, [sp, #84]	; 0x54
    46a0:	ae32      	add	r6, sp, #200	; 0xc8
    46a2:	9319      	str	r3, [sp, #100]	; 0x64
    46a4:	931a      	str	r3, [sp, #104]	; 0x68
    46a6:	930a      	str	r3, [sp, #40]	; 0x28
    46a8:	9c07      	ldr	r4, [sp, #28]
    46aa:	7823      	ldrb	r3, [r4, #0]
    46ac:	2b00      	cmp	r3, #0
    46ae:	d101      	bne.n	46b4 <_vfprintf_r+0xa8>
    46b0:	f000 fd9e 	bl	51f0 <_vfprintf_r+0xbe4>
    46b4:	2b25      	cmp	r3, #37	; 0x25
    46b6:	d103      	bne.n	46c0 <_vfprintf_r+0xb4>
    46b8:	f000 fd9a 	bl	51f0 <_vfprintf_r+0xbe4>
    46bc:	2b25      	cmp	r3, #37	; 0x25
    46be:	d003      	beq.n	46c8 <_vfprintf_r+0xbc>
    46c0:	3401      	adds	r4, #1
    46c2:	7823      	ldrb	r3, [r4, #0]
    46c4:	2b00      	cmp	r3, #0
    46c6:	d1f9      	bne.n	46bc <_vfprintf_r+0xb0>
    46c8:	9b07      	ldr	r3, [sp, #28]
    46ca:	1ae5      	subs	r5, r4, r3
    46cc:	d010      	beq.n	46f0 <_vfprintf_r+0xe4>
    46ce:	9b07      	ldr	r3, [sp, #28]
    46d0:	6075      	str	r5, [r6, #4]
    46d2:	6033      	str	r3, [r6, #0]
    46d4:	68bb      	ldr	r3, [r7, #8]
    46d6:	195b      	adds	r3, r3, r5
    46d8:	60bb      	str	r3, [r7, #8]
    46da:	687b      	ldr	r3, [r7, #4]
    46dc:	3301      	adds	r3, #1
    46de:	607b      	str	r3, [r7, #4]
    46e0:	2b07      	cmp	r3, #7
    46e2:	dc4c      	bgt.n	477e <_vfprintf_r+0x172>
    46e4:	3608      	adds	r6, #8
    46e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    46e8:	469c      	mov	ip, r3
    46ea:	44ac      	add	ip, r5
    46ec:	4663      	mov	r3, ip
    46ee:	930a      	str	r3, [sp, #40]	; 0x28
    46f0:	7823      	ldrb	r3, [r4, #0]
    46f2:	2b00      	cmp	r3, #0
    46f4:	d101      	bne.n	46fa <_vfprintf_r+0xee>
    46f6:	f000 fc99 	bl	502c <_vfprintf_r+0xa20>
    46fa:	1c63      	adds	r3, r4, #1
    46fc:	9307      	str	r3, [sp, #28]
    46fe:	2300      	movs	r3, #0
    4700:	aa16      	add	r2, sp, #88	; 0x58
    4702:	77d3      	strb	r3, [r2, #31]
    4704:	2201      	movs	r2, #1
    4706:	4252      	negs	r2, r2
    4708:	4692      	mov	sl, r2
    470a:	2200      	movs	r2, #0
    470c:	920b      	str	r2, [sp, #44]	; 0x2c
    470e:	3220      	adds	r2, #32
    4710:	4691      	mov	r9, r2
    4712:	3220      	adds	r2, #32
    4714:	7863      	ldrb	r3, [r4, #1]
    4716:	2100      	movs	r1, #0
    4718:	2000      	movs	r0, #0
    471a:	2400      	movs	r4, #0
    471c:	4694      	mov	ip, r2
    471e:	9a07      	ldr	r2, [sp, #28]
    4720:	3201      	adds	r2, #1
    4722:	9207      	str	r2, [sp, #28]
    4724:	001a      	movs	r2, r3
    4726:	3a20      	subs	r2, #32
    4728:	2a58      	cmp	r2, #88	; 0x58
    472a:	d900      	bls.n	472e <_vfprintf_r+0x122>
    472c:	e2e7      	b.n	4cfe <_vfprintf_r+0x6f2>
    472e:	4d9c      	ldr	r5, [pc, #624]	; (49a0 <_vfprintf_r+0x394>)
    4730:	0092      	lsls	r2, r2, #2
    4732:	58aa      	ldr	r2, [r5, r2]
    4734:	4697      	mov	pc, r2
    4736:	464b      	mov	r3, r9
    4738:	6d98      	ldr	r0, [r3, #88]	; 0x58
    473a:	f003 f847 	bl	77cc <__retarget_lock_acquire_recursive>
    473e:	464b      	mov	r3, r9
    4740:	210c      	movs	r1, #12
    4742:	5e59      	ldrsh	r1, [r3, r1]
    4744:	b28b      	uxth	r3, r1
    4746:	e787      	b.n	4658 <_vfprintf_r+0x4c>
    4748:	4649      	mov	r1, r9
    474a:	9806      	ldr	r0, [sp, #24]
    474c:	f001 fb0e 	bl	5d6c <__swsetup_r>
    4750:	464b      	mov	r3, r9
    4752:	2800      	cmp	r0, #0
    4754:	d03a      	beq.n	47cc <_vfprintf_r+0x1c0>
    4756:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    4758:	07db      	lsls	r3, r3, #31
    475a:	d405      	bmi.n	4768 <_vfprintf_r+0x15c>
    475c:	464b      	mov	r3, r9
    475e:	899b      	ldrh	r3, [r3, #12]
    4760:	059b      	lsls	r3, r3, #22
    4762:	d401      	bmi.n	4768 <_vfprintf_r+0x15c>
    4764:	f000 ffcf 	bl	5706 <_vfprintf_r+0x10fa>
    4768:	2301      	movs	r3, #1
    476a:	425b      	negs	r3, r3
    476c:	930a      	str	r3, [sp, #40]	; 0x28
    476e:	980a      	ldr	r0, [sp, #40]	; 0x28
    4770:	b043      	add	sp, #268	; 0x10c
    4772:	bc3c      	pop	{r2, r3, r4, r5}
    4774:	4690      	mov	r8, r2
    4776:	4699      	mov	r9, r3
    4778:	46a2      	mov	sl, r4
    477a:	46ab      	mov	fp, r5
    477c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    477e:	003a      	movs	r2, r7
    4780:	4659      	mov	r1, fp
    4782:	9806      	ldr	r0, [sp, #24]
    4784:	f004 f9a4 	bl	8ad0 <__sprint_r>
    4788:	2800      	cmp	r0, #0
    478a:	d001      	beq.n	4790 <_vfprintf_r+0x184>
    478c:	f000 fcce 	bl	512c <_vfprintf_r+0xb20>
    4790:	ae32      	add	r6, sp, #200	; 0xc8
    4792:	e7a8      	b.n	46e6 <_vfprintf_r+0xda>
    4794:	9806      	ldr	r0, [sp, #24]
    4796:	f002 fcd7 	bl	7148 <__sinit>
    479a:	e753      	b.n	4644 <_vfprintf_r+0x38>
    479c:	464a      	mov	r2, r9
    479e:	210e      	movs	r1, #14
    47a0:	5e52      	ldrsh	r2, [r2, r1]
    47a2:	2a00      	cmp	r2, #0
    47a4:	da00      	bge.n	47a8 <_vfprintf_r+0x19c>
    47a6:	e770      	b.n	468a <_vfprintf_r+0x7e>
    47a8:	464a      	mov	r2, r9
    47aa:	6e52      	ldr	r2, [r2, #100]	; 0x64
    47ac:	07d2      	lsls	r2, r2, #31
    47ae:	d405      	bmi.n	47bc <_vfprintf_r+0x1b0>
    47b0:	059b      	lsls	r3, r3, #22
    47b2:	d403      	bmi.n	47bc <_vfprintf_r+0x1b0>
    47b4:	464b      	mov	r3, r9
    47b6:	6d98      	ldr	r0, [r3, #88]	; 0x58
    47b8:	f003 f80a 	bl	77d0 <__retarget_lock_release_recursive>
    47bc:	002b      	movs	r3, r5
    47be:	0022      	movs	r2, r4
    47c0:	4649      	mov	r1, r9
    47c2:	9806      	ldr	r0, [sp, #24]
    47c4:	f001 fa8e 	bl	5ce4 <__sbprintf>
    47c8:	900a      	str	r0, [sp, #40]	; 0x28
    47ca:	e7d0      	b.n	476e <_vfprintf_r+0x162>
    47cc:	899b      	ldrh	r3, [r3, #12]
    47ce:	e757      	b.n	4680 <_vfprintf_r+0x74>
    47d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    47d2:	920f      	str	r2, [sp, #60]	; 0x3c
    47d4:	425b      	negs	r3, r3
    47d6:	930b      	str	r3, [sp, #44]	; 0x2c
    47d8:	2304      	movs	r3, #4
    47da:	431c      	orrs	r4, r3
    47dc:	9b07      	ldr	r3, [sp, #28]
    47de:	781b      	ldrb	r3, [r3, #0]
    47e0:	e79d      	b.n	471e <_vfprintf_r+0x112>
    47e2:	9b07      	ldr	r3, [sp, #28]
    47e4:	2101      	movs	r1, #1
    47e6:	781b      	ldrb	r3, [r3, #0]
    47e8:	202b      	movs	r0, #43	; 0x2b
    47ea:	e798      	b.n	471e <_vfprintf_r+0x112>
    47ec:	9b07      	ldr	r3, [sp, #28]
    47ee:	1c5a      	adds	r2, r3, #1
    47f0:	781b      	ldrb	r3, [r3, #0]
    47f2:	4690      	mov	r8, r2
    47f4:	2b2a      	cmp	r3, #42	; 0x2a
    47f6:	d101      	bne.n	47fc <_vfprintf_r+0x1f0>
    47f8:	f001 fa38 	bl	5c6c <_vfprintf_r+0x1660>
    47fc:	001a      	movs	r2, r3
    47fe:	2500      	movs	r5, #0
    4800:	3a30      	subs	r2, #48	; 0x30
    4802:	46aa      	mov	sl, r5
    4804:	2a09      	cmp	r2, #9
    4806:	d901      	bls.n	480c <_vfprintf_r+0x200>
    4808:	f001 f96d 	bl	5ae6 <_vfprintf_r+0x14da>
    480c:	0025      	movs	r5, r4
    480e:	4643      	mov	r3, r8
    4810:	4654      	mov	r4, sl
    4812:	4688      	mov	r8, r1
    4814:	4682      	mov	sl, r0
    4816:	00a1      	lsls	r1, r4, #2
    4818:	190c      	adds	r4, r1, r4
    481a:	7818      	ldrb	r0, [r3, #0]
    481c:	0064      	lsls	r4, r4, #1
    481e:	18a4      	adds	r4, r4, r2
    4820:	0002      	movs	r2, r0
    4822:	1c59      	adds	r1, r3, #1
    4824:	3a30      	subs	r2, #48	; 0x30
    4826:	000b      	movs	r3, r1
    4828:	2a09      	cmp	r2, #9
    482a:	d9f4      	bls.n	4816 <_vfprintf_r+0x20a>
    482c:	9107      	str	r1, [sp, #28]
    482e:	0003      	movs	r3, r0
    4830:	4641      	mov	r1, r8
    4832:	4650      	mov	r0, sl
    4834:	46a2      	mov	sl, r4
    4836:	002c      	movs	r4, r5
    4838:	e774      	b.n	4724 <_vfprintf_r+0x118>
    483a:	9312      	str	r3, [sp, #72]	; 0x48
    483c:	2900      	cmp	r1, #0
    483e:	d001      	beq.n	4844 <_vfprintf_r+0x238>
    4840:	f001 fa2e 	bl	5ca0 <_vfprintf_r+0x1694>
    4844:	4b57      	ldr	r3, [pc, #348]	; (49a4 <_vfprintf_r+0x398>)
    4846:	9319      	str	r3, [sp, #100]	; 0x64
    4848:	06a3      	lsls	r3, r4, #26
    484a:	d501      	bpl.n	4850 <_vfprintf_r+0x244>
    484c:	f000 fe9a 	bl	5584 <_vfprintf_r+0xf78>
    4850:	06e3      	lsls	r3, r4, #27
    4852:	d501      	bpl.n	4858 <_vfprintf_r+0x24c>
    4854:	f000 fd9a 	bl	538c <_vfprintf_r+0xd80>
    4858:	0663      	lsls	r3, r4, #25
    485a:	d401      	bmi.n	4860 <_vfprintf_r+0x254>
    485c:	f000 fd96 	bl	538c <_vfprintf_r+0xd80>
    4860:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4862:	881a      	ldrh	r2, [r3, #0]
    4864:	920c      	str	r2, [sp, #48]	; 0x30
    4866:	2200      	movs	r2, #0
    4868:	3304      	adds	r3, #4
    486a:	920d      	str	r2, [sp, #52]	; 0x34
    486c:	930f      	str	r3, [sp, #60]	; 0x3c
    486e:	07e3      	lsls	r3, r4, #31
    4870:	d401      	bmi.n	4876 <_vfprintf_r+0x26a>
    4872:	f000 fd76 	bl	5362 <_vfprintf_r+0xd56>
    4876:	990c      	ldr	r1, [sp, #48]	; 0x30
    4878:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    487a:	000b      	movs	r3, r1
    487c:	4313      	orrs	r3, r2
    487e:	001a      	movs	r2, r3
    4880:	2302      	movs	r3, #2
    4882:	2a00      	cmp	r2, #0
    4884:	d008      	beq.n	4898 <_vfprintf_r+0x28c>
    4886:	2030      	movs	r0, #48	; 0x30
    4888:	a91e      	add	r1, sp, #120	; 0x78
    488a:	7008      	strb	r0, [r1, #0]
    488c:	2548      	movs	r5, #72	; 0x48
    488e:	4668      	mov	r0, sp
    4890:	1940      	adds	r0, r0, r5
    4892:	7800      	ldrb	r0, [r0, #0]
    4894:	431c      	orrs	r4, r3
    4896:	7048      	strb	r0, [r1, #1]
    4898:	2100      	movs	r1, #0
    489a:	4688      	mov	r8, r1
    489c:	a816      	add	r0, sp, #88	; 0x58
    489e:	77c1      	strb	r1, [r0, #31]
    48a0:	4651      	mov	r1, sl
    48a2:	3101      	adds	r1, #1
    48a4:	d100      	bne.n	48a8 <_vfprintf_r+0x29c>
    48a6:	e0e6      	b.n	4a76 <_vfprintf_r+0x46a>
    48a8:	2180      	movs	r1, #128	; 0x80
    48aa:	0020      	movs	r0, r4
    48ac:	4388      	bics	r0, r1
    48ae:	9009      	str	r0, [sp, #36]	; 0x24
    48b0:	2a00      	cmp	r2, #0
    48b2:	d000      	beq.n	48b6 <_vfprintf_r+0x2aa>
    48b4:	e0e3      	b.n	4a7e <_vfprintf_r+0x472>
    48b6:	4652      	mov	r2, sl
    48b8:	2a00      	cmp	r2, #0
    48ba:	d001      	beq.n	48c0 <_vfprintf_r+0x2b4>
    48bc:	f000 fc38 	bl	5130 <_vfprintf_r+0xb24>
    48c0:	2b00      	cmp	r3, #0
    48c2:	d001      	beq.n	48c8 <_vfprintf_r+0x2bc>
    48c4:	f000 fd0c 	bl	52e0 <_vfprintf_r+0xcd4>
    48c8:	2001      	movs	r0, #1
    48ca:	ab32      	add	r3, sp, #200	; 0xc8
    48cc:	4020      	ands	r0, r4
    48ce:	900e      	str	r0, [sp, #56]	; 0x38
    48d0:	9311      	str	r3, [sp, #68]	; 0x44
    48d2:	d008      	beq.n	48e6 <_vfprintf_r+0x2da>
    48d4:	2327      	movs	r3, #39	; 0x27
    48d6:	2130      	movs	r1, #48	; 0x30
    48d8:	aa28      	add	r2, sp, #160	; 0xa0
    48da:	54d1      	strb	r1, [r2, r3]
    48dc:	aa16      	add	r2, sp, #88	; 0x58
    48de:	4694      	mov	ip, r2
    48e0:	3348      	adds	r3, #72	; 0x48
    48e2:	4463      	add	r3, ip
    48e4:	9311      	str	r3, [sp, #68]	; 0x44
    48e6:	4653      	mov	r3, sl
    48e8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    48ea:	9308      	str	r3, [sp, #32]
    48ec:	4592      	cmp	sl, r2
    48ee:	da00      	bge.n	48f2 <_vfprintf_r+0x2e6>
    48f0:	9208      	str	r2, [sp, #32]
    48f2:	2300      	movs	r3, #0
    48f4:	9313      	str	r3, [sp, #76]	; 0x4c
    48f6:	4643      	mov	r3, r8
    48f8:	2b00      	cmp	r3, #0
    48fa:	d002      	beq.n	4902 <_vfprintf_r+0x2f6>
    48fc:	9b08      	ldr	r3, [sp, #32]
    48fe:	3301      	adds	r3, #1
    4900:	9308      	str	r3, [sp, #32]
    4902:	2302      	movs	r3, #2
    4904:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4906:	401a      	ands	r2, r3
    4908:	4691      	mov	r9, r2
    490a:	d002      	beq.n	4912 <_vfprintf_r+0x306>
    490c:	9b08      	ldr	r3, [sp, #32]
    490e:	3302      	adds	r3, #2
    4910:	9308      	str	r3, [sp, #32]
    4912:	2384      	movs	r3, #132	; 0x84
    4914:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4916:	401a      	ands	r2, r3
    4918:	9210      	str	r2, [sp, #64]	; 0x40
    491a:	d000      	beq.n	491e <_vfprintf_r+0x312>
    491c:	e207      	b.n	4d2e <_vfprintf_r+0x722>
    491e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4920:	9a08      	ldr	r2, [sp, #32]
    4922:	1a9c      	subs	r4, r3, r2
    4924:	2c00      	cmp	r4, #0
    4926:	dc00      	bgt.n	492a <_vfprintf_r+0x31e>
    4928:	e201      	b.n	4d2e <_vfprintf_r+0x722>
    492a:	491f      	ldr	r1, [pc, #124]	; (49a8 <_vfprintf_r+0x39c>)
    492c:	68ba      	ldr	r2, [r7, #8]
    492e:	687b      	ldr	r3, [r7, #4]
    4930:	4688      	mov	r8, r1
    4932:	2c10      	cmp	r4, #16
    4934:	dd21      	ble.n	497a <_vfprintf_r+0x36e>
    4936:	0031      	movs	r1, r6
    4938:	2510      	movs	r5, #16
    493a:	465e      	mov	r6, fp
    493c:	e003      	b.n	4946 <_vfprintf_r+0x33a>
    493e:	3c10      	subs	r4, #16
    4940:	3108      	adds	r1, #8
    4942:	2c10      	cmp	r4, #16
    4944:	dd17      	ble.n	4976 <_vfprintf_r+0x36a>
    4946:	4640      	mov	r0, r8
    4948:	3210      	adds	r2, #16
    494a:	3301      	adds	r3, #1
    494c:	6008      	str	r0, [r1, #0]
    494e:	604d      	str	r5, [r1, #4]
    4950:	60ba      	str	r2, [r7, #8]
    4952:	607b      	str	r3, [r7, #4]
    4954:	2b07      	cmp	r3, #7
    4956:	ddf2      	ble.n	493e <_vfprintf_r+0x332>
    4958:	003a      	movs	r2, r7
    495a:	0031      	movs	r1, r6
    495c:	9806      	ldr	r0, [sp, #24]
    495e:	f004 f8b7 	bl	8ad0 <__sprint_r>
    4962:	2800      	cmp	r0, #0
    4964:	d001      	beq.n	496a <_vfprintf_r+0x35e>
    4966:	f000 fccf 	bl	5308 <_vfprintf_r+0xcfc>
    496a:	3c10      	subs	r4, #16
    496c:	68ba      	ldr	r2, [r7, #8]
    496e:	687b      	ldr	r3, [r7, #4]
    4970:	a932      	add	r1, sp, #200	; 0xc8
    4972:	2c10      	cmp	r4, #16
    4974:	dce7      	bgt.n	4946 <_vfprintf_r+0x33a>
    4976:	46b3      	mov	fp, r6
    4978:	000e      	movs	r6, r1
    497a:	4641      	mov	r1, r8
    497c:	6074      	str	r4, [r6, #4]
    497e:	3301      	adds	r3, #1
    4980:	18a4      	adds	r4, r4, r2
    4982:	6031      	str	r1, [r6, #0]
    4984:	60bc      	str	r4, [r7, #8]
    4986:	607b      	str	r3, [r7, #4]
    4988:	2b07      	cmp	r3, #7
    498a:	dd01      	ble.n	4990 <_vfprintf_r+0x384>
    498c:	f000 fcae 	bl	52ec <_vfprintf_r+0xce0>
    4990:	ab16      	add	r3, sp, #88	; 0x58
    4992:	7fdb      	ldrb	r3, [r3, #31]
    4994:	3608      	adds	r6, #8
    4996:	4698      	mov	r8, r3
    4998:	e1ca      	b.n	4d30 <_vfprintf_r+0x724>
    499a:	46c0      	nop			; (mov r8, r8)
    499c:	ffffdfff 	.word	0xffffdfff
    49a0:	00009c7c 	.word	0x00009c7c
    49a4:	00009e04 	.word	0x00009e04
    49a8:	00009e24 	.word	0x00009e24
    49ac:	2200      	movs	r2, #0
    49ae:	9d07      	ldr	r5, [sp, #28]
    49b0:	3b30      	subs	r3, #48	; 0x30
    49b2:	46a8      	mov	r8, r5
    49b4:	920b      	str	r2, [sp, #44]	; 0x2c
    49b6:	001a      	movs	r2, r3
    49b8:	9408      	str	r4, [sp, #32]
    49ba:	002c      	movs	r4, r5
    49bc:	4655      	mov	r5, sl
    49be:	4682      	mov	sl, r0
    49c0:	4640      	mov	r0, r8
    49c2:	4688      	mov	r8, r1
    49c4:	0011      	movs	r1, r2
    49c6:	2200      	movs	r2, #0
    49c8:	0093      	lsls	r3, r2, #2
    49ca:	189a      	adds	r2, r3, r2
    49cc:	7803      	ldrb	r3, [r0, #0]
    49ce:	0052      	lsls	r2, r2, #1
    49d0:	188a      	adds	r2, r1, r2
    49d2:	0019      	movs	r1, r3
    49d4:	3401      	adds	r4, #1
    49d6:	3930      	subs	r1, #48	; 0x30
    49d8:	0020      	movs	r0, r4
    49da:	2909      	cmp	r1, #9
    49dc:	d9f4      	bls.n	49c8 <_vfprintf_r+0x3bc>
    49de:	9407      	str	r4, [sp, #28]
    49e0:	4650      	mov	r0, sl
    49e2:	9c08      	ldr	r4, [sp, #32]
    49e4:	920b      	str	r2, [sp, #44]	; 0x2c
    49e6:	4641      	mov	r1, r8
    49e8:	46aa      	mov	sl, r5
    49ea:	e69b      	b.n	4724 <_vfprintf_r+0x118>
    49ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    49ee:	9312      	str	r3, [sp, #72]	; 0x48
    49f0:	6813      	ldr	r3, [r2, #0]
    49f2:	2120      	movs	r1, #32
    49f4:	9308      	str	r3, [sp, #32]
    49f6:	466b      	mov	r3, sp
    49f8:	185b      	adds	r3, r3, r1
    49fa:	781b      	ldrb	r3, [r3, #0]
    49fc:	ad28      	add	r5, sp, #160	; 0xa0
    49fe:	702b      	strb	r3, [r5, #0]
    4a00:	2300      	movs	r3, #0
    4a02:	a916      	add	r1, sp, #88	; 0x58
    4a04:	77cb      	strb	r3, [r1, #31]
    4a06:	0013      	movs	r3, r2
    4a08:	3304      	adds	r3, #4
    4a0a:	930f      	str	r3, [sp, #60]	; 0x3c
    4a0c:	2300      	movs	r3, #0
    4a0e:	9409      	str	r4, [sp, #36]	; 0x24
    4a10:	4698      	mov	r8, r3
    4a12:	3301      	adds	r3, #1
    4a14:	9308      	str	r3, [sp, #32]
    4a16:	930e      	str	r3, [sp, #56]	; 0x38
    4a18:	2300      	movs	r3, #0
    4a1a:	9511      	str	r5, [sp, #68]	; 0x44
    4a1c:	469a      	mov	sl, r3
    4a1e:	9313      	str	r3, [sp, #76]	; 0x4c
    4a20:	e76f      	b.n	4902 <_vfprintf_r+0x2f6>
    4a22:	9312      	str	r3, [sp, #72]	; 0x48
    4a24:	2900      	cmp	r1, #0
    4a26:	d001      	beq.n	4a2c <_vfprintf_r+0x420>
    4a28:	f001 f94d 	bl	5cc6 <_vfprintf_r+0x16ba>
    4a2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4a2e:	06a3      	lsls	r3, r4, #26
    4a30:	d501      	bpl.n	4a36 <_vfprintf_r+0x42a>
    4a32:	f000 fd5a 	bl	54ea <_vfprintf_r+0xede>
    4a36:	06e3      	lsls	r3, r4, #27
    4a38:	d501      	bpl.n	4a3e <_vfprintf_r+0x432>
    4a3a:	f000 fcab 	bl	5394 <_vfprintf_r+0xd88>
    4a3e:	0663      	lsls	r3, r4, #25
    4a40:	d401      	bmi.n	4a46 <_vfprintf_r+0x43a>
    4a42:	f000 fca7 	bl	5394 <_vfprintf_r+0xd88>
    4a46:	2100      	movs	r1, #0
    4a48:	5e53      	ldrsh	r3, [r2, r1]
    4a4a:	930c      	str	r3, [sp, #48]	; 0x30
    4a4c:	3204      	adds	r2, #4
    4a4e:	17db      	asrs	r3, r3, #31
    4a50:	930d      	str	r3, [sp, #52]	; 0x34
    4a52:	920f      	str	r2, [sp, #60]	; 0x3c
    4a54:	2b00      	cmp	r3, #0
    4a56:	da01      	bge.n	4a5c <_vfprintf_r+0x450>
    4a58:	f000 fdb2 	bl	55c0 <_vfprintf_r+0xfb4>
    4a5c:	990c      	ldr	r1, [sp, #48]	; 0x30
    4a5e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4a60:	0008      	movs	r0, r1
    4a62:	4651      	mov	r1, sl
    4a64:	ab16      	add	r3, sp, #88	; 0x58
    4a66:	7fdb      	ldrb	r3, [r3, #31]
    4a68:	4310      	orrs	r0, r2
    4a6a:	4698      	mov	r8, r3
    4a6c:	0002      	movs	r2, r0
    4a6e:	2301      	movs	r3, #1
    4a70:	3101      	adds	r1, #1
    4a72:	d000      	beq.n	4a76 <_vfprintf_r+0x46a>
    4a74:	e718      	b.n	48a8 <_vfprintf_r+0x29c>
    4a76:	2a00      	cmp	r2, #0
    4a78:	d100      	bne.n	4a7c <_vfprintf_r+0x470>
    4a7a:	e35a      	b.n	5132 <_vfprintf_r+0xb26>
    4a7c:	9409      	str	r4, [sp, #36]	; 0x24
    4a7e:	2b01      	cmp	r3, #1
    4a80:	d101      	bne.n	4a86 <_vfprintf_r+0x47a>
    4a82:	f000 fc06 	bl	5292 <_vfprintf_r+0xc86>
    4a86:	2b02      	cmp	r3, #2
    4a88:	d000      	beq.n	4a8c <_vfprintf_r+0x480>
    4a8a:	e380      	b.n	518e <_vfprintf_r+0xb82>
    4a8c:	9c19      	ldr	r4, [sp, #100]	; 0x64
    4a8e:	200f      	movs	r0, #15
    4a90:	46a1      	mov	r9, r4
    4a92:	46b4      	mov	ip, r6
    4a94:	ab32      	add	r3, sp, #200	; 0xc8
    4a96:	0019      	movs	r1, r3
    4a98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4a9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4a9c:	0004      	movs	r4, r0
    4a9e:	464d      	mov	r5, r9
    4aa0:	4014      	ands	r4, r2
    4aa2:	5d2c      	ldrb	r4, [r5, r4]
    4aa4:	071e      	lsls	r6, r3, #28
    4aa6:	0915      	lsrs	r5, r2, #4
    4aa8:	3901      	subs	r1, #1
    4aaa:	432e      	orrs	r6, r5
    4aac:	700c      	strb	r4, [r1, #0]
    4aae:	091c      	lsrs	r4, r3, #4
    4ab0:	0023      	movs	r3, r4
    4ab2:	0034      	movs	r4, r6
    4ab4:	0032      	movs	r2, r6
    4ab6:	431c      	orrs	r4, r3
    4ab8:	d1f0      	bne.n	4a9c <_vfprintf_r+0x490>
    4aba:	920c      	str	r2, [sp, #48]	; 0x30
    4abc:	930d      	str	r3, [sp, #52]	; 0x34
    4abe:	ab32      	add	r3, sp, #200	; 0xc8
    4ac0:	1a5b      	subs	r3, r3, r1
    4ac2:	9111      	str	r1, [sp, #68]	; 0x44
    4ac4:	4666      	mov	r6, ip
    4ac6:	930e      	str	r3, [sp, #56]	; 0x38
    4ac8:	e70d      	b.n	48e6 <_vfprintf_r+0x2da>
    4aca:	4663      	mov	r3, ip
    4acc:	431c      	orrs	r4, r3
    4ace:	9b07      	ldr	r3, [sp, #28]
    4ad0:	781b      	ldrb	r3, [r3, #0]
    4ad2:	e624      	b.n	471e <_vfprintf_r+0x112>
    4ad4:	9b07      	ldr	r3, [sp, #28]
    4ad6:	781b      	ldrb	r3, [r3, #0]
    4ad8:	2b6c      	cmp	r3, #108	; 0x6c
    4ada:	d101      	bne.n	4ae0 <_vfprintf_r+0x4d4>
    4adc:	f000 fe8c 	bl	57f8 <_vfprintf_r+0x11ec>
    4ae0:	2210      	movs	r2, #16
    4ae2:	4314      	orrs	r4, r2
    4ae4:	e61b      	b.n	471e <_vfprintf_r+0x112>
    4ae6:	2900      	cmp	r1, #0
    4ae8:	d001      	beq.n	4aee <_vfprintf_r+0x4e2>
    4aea:	f001 f8d5 	bl	5c98 <_vfprintf_r+0x168c>
    4aee:	06a3      	lsls	r3, r4, #26
    4af0:	d501      	bpl.n	4af6 <_vfprintf_r+0x4ea>
    4af2:	f000 fe76 	bl	57e2 <_vfprintf_r+0x11d6>
    4af6:	06e3      	lsls	r3, r4, #27
    4af8:	d500      	bpl.n	4afc <_vfprintf_r+0x4f0>
    4afa:	e110      	b.n	4d1e <_vfprintf_r+0x712>
    4afc:	0663      	lsls	r3, r4, #25
    4afe:	d400      	bmi.n	4b02 <_vfprintf_r+0x4f6>
    4b00:	e10d      	b.n	4d1e <_vfprintf_r+0x712>
    4b02:	4669      	mov	r1, sp
    4b04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4b06:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    4b08:	681a      	ldr	r2, [r3, #0]
    4b0a:	3304      	adds	r3, #4
    4b0c:	9208      	str	r2, [sp, #32]
    4b0e:	8011      	strh	r1, [r2, #0]
    4b10:	930f      	str	r3, [sp, #60]	; 0x3c
    4b12:	e5c9      	b.n	46a8 <_vfprintf_r+0x9c>
    4b14:	990f      	ldr	r1, [sp, #60]	; 0x3c
    4b16:	2230      	movs	r2, #48	; 0x30
    4b18:	680b      	ldr	r3, [r1, #0]
    4b1a:	930c      	str	r3, [sp, #48]	; 0x30
    4b1c:	2300      	movs	r3, #0
    4b1e:	930d      	str	r3, [sp, #52]	; 0x34
    4b20:	3302      	adds	r3, #2
    4b22:	431c      	orrs	r4, r3
    4b24:	ab1e      	add	r3, sp, #120	; 0x78
    4b26:	701a      	strb	r2, [r3, #0]
    4b28:	3248      	adds	r2, #72	; 0x48
    4b2a:	705a      	strb	r2, [r3, #1]
    4b2c:	000b      	movs	r3, r1
    4b2e:	3304      	adds	r3, #4
    4b30:	930f      	str	r3, [sp, #60]	; 0x3c
    4b32:	4bc1      	ldr	r3, [pc, #772]	; (4e38 <_vfprintf_r+0x82c>)
    4b34:	9212      	str	r2, [sp, #72]	; 0x48
    4b36:	9319      	str	r3, [sp, #100]	; 0x64
    4b38:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4b3a:	2302      	movs	r3, #2
    4b3c:	e6ac      	b.n	4898 <_vfprintf_r+0x28c>
    4b3e:	464b      	mov	r3, r9
    4b40:	431c      	orrs	r4, r3
    4b42:	9b07      	ldr	r3, [sp, #28]
    4b44:	781b      	ldrb	r3, [r3, #0]
    4b46:	e5ea      	b.n	471e <_vfprintf_r+0x112>
    4b48:	9312      	str	r3, [sp, #72]	; 0x48
    4b4a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4b4c:	a916      	add	r1, sp, #88	; 0x58
    4b4e:	1d1d      	adds	r5, r3, #4
    4b50:	681b      	ldr	r3, [r3, #0]
    4b52:	001a      	movs	r2, r3
    4b54:	9311      	str	r3, [sp, #68]	; 0x44
    4b56:	2300      	movs	r3, #0
    4b58:	77cb      	strb	r3, [r1, #31]
    4b5a:	2a00      	cmp	r2, #0
    4b5c:	d101      	bne.n	4b62 <_vfprintf_r+0x556>
    4b5e:	f000 ff01 	bl	5964 <_vfprintf_r+0x1358>
    4b62:	4653      	mov	r3, sl
    4b64:	3301      	adds	r3, #1
    4b66:	d101      	bne.n	4b6c <_vfprintf_r+0x560>
    4b68:	f000 fe64 	bl	5834 <_vfprintf_r+0x1228>
    4b6c:	4652      	mov	r2, sl
    4b6e:	2100      	movs	r1, #0
    4b70:	9811      	ldr	r0, [sp, #68]	; 0x44
    4b72:	f003 f965 	bl	7e40 <memchr>
    4b76:	2800      	cmp	r0, #0
    4b78:	d101      	bne.n	4b7e <_vfprintf_r+0x572>
    4b7a:	f000 ff78 	bl	5a6e <_vfprintf_r+0x1462>
    4b7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4b80:	1ac3      	subs	r3, r0, r3
    4b82:	001a      	movs	r2, r3
    4b84:	930e      	str	r3, [sp, #56]	; 0x38
    4b86:	43db      	mvns	r3, r3
    4b88:	17db      	asrs	r3, r3, #31
    4b8a:	401a      	ands	r2, r3
    4b8c:	ab16      	add	r3, sp, #88	; 0x58
    4b8e:	7fdb      	ldrb	r3, [r3, #31]
    4b90:	9208      	str	r2, [sp, #32]
    4b92:	4698      	mov	r8, r3
    4b94:	2300      	movs	r3, #0
    4b96:	950f      	str	r5, [sp, #60]	; 0x3c
    4b98:	9409      	str	r4, [sp, #36]	; 0x24
    4b9a:	469a      	mov	sl, r3
    4b9c:	9313      	str	r3, [sp, #76]	; 0x4c
    4b9e:	e6aa      	b.n	48f6 <_vfprintf_r+0x2ea>
    4ba0:	2308      	movs	r3, #8
    4ba2:	431c      	orrs	r4, r3
    4ba4:	9b07      	ldr	r3, [sp, #28]
    4ba6:	781b      	ldrb	r3, [r3, #0]
    4ba8:	e5b9      	b.n	471e <_vfprintf_r+0x112>
    4baa:	9312      	str	r3, [sp, #72]	; 0x48
    4bac:	2310      	movs	r3, #16
    4bae:	431c      	orrs	r4, r3
    4bb0:	06a3      	lsls	r3, r4, #26
    4bb2:	d501      	bpl.n	4bb8 <_vfprintf_r+0x5ac>
    4bb4:	f000 fca7 	bl	5506 <_vfprintf_r+0xefa>
    4bb8:	06e3      	lsls	r3, r4, #27
    4bba:	d500      	bpl.n	4bbe <_vfprintf_r+0x5b2>
    4bbc:	e3ee      	b.n	539c <_vfprintf_r+0xd90>
    4bbe:	0663      	lsls	r3, r4, #25
    4bc0:	d400      	bmi.n	4bc4 <_vfprintf_r+0x5b8>
    4bc2:	e3eb      	b.n	539c <_vfprintf_r+0xd90>
    4bc4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4bc6:	881a      	ldrh	r2, [r3, #0]
    4bc8:	920c      	str	r2, [sp, #48]	; 0x30
    4bca:	2200      	movs	r2, #0
    4bcc:	3304      	adds	r3, #4
    4bce:	920d      	str	r2, [sp, #52]	; 0x34
    4bd0:	930f      	str	r3, [sp, #60]	; 0x3c
    4bd2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4bd4:	2300      	movs	r3, #0
    4bd6:	e65f      	b.n	4898 <_vfprintf_r+0x28c>
    4bd8:	9312      	str	r3, [sp, #72]	; 0x48
    4bda:	2310      	movs	r3, #16
    4bdc:	431c      	orrs	r4, r3
    4bde:	06a3      	lsls	r3, r4, #26
    4be0:	d501      	bpl.n	4be6 <_vfprintf_r+0x5da>
    4be2:	f000 fcba 	bl	555a <_vfprintf_r+0xf4e>
    4be6:	06e3      	lsls	r3, r4, #27
    4be8:	d500      	bpl.n	4bec <_vfprintf_r+0x5e0>
    4bea:	e3da      	b.n	53a2 <_vfprintf_r+0xd96>
    4bec:	0663      	lsls	r3, r4, #25
    4bee:	d400      	bmi.n	4bf2 <_vfprintf_r+0x5e6>
    4bf0:	e3d7      	b.n	53a2 <_vfprintf_r+0xd96>
    4bf2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4bf4:	881a      	ldrh	r2, [r3, #0]
    4bf6:	920c      	str	r2, [sp, #48]	; 0x30
    4bf8:	2200      	movs	r2, #0
    4bfa:	3304      	adds	r3, #4
    4bfc:	920d      	str	r2, [sp, #52]	; 0x34
    4bfe:	930f      	str	r3, [sp, #60]	; 0x3c
    4c00:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4c02:	2301      	movs	r3, #1
    4c04:	e648      	b.n	4898 <_vfprintf_r+0x28c>
    4c06:	9312      	str	r3, [sp, #72]	; 0x48
    4c08:	2900      	cmp	r1, #0
    4c0a:	d001      	beq.n	4c10 <_vfprintf_r+0x604>
    4c0c:	f001 f857 	bl	5cbe <_vfprintf_r+0x16b2>
    4c10:	4b8a      	ldr	r3, [pc, #552]	; (4e3c <_vfprintf_r+0x830>)
    4c12:	9319      	str	r3, [sp, #100]	; 0x64
    4c14:	e618      	b.n	4848 <_vfprintf_r+0x23c>
    4c16:	2301      	movs	r3, #1
    4c18:	431c      	orrs	r4, r3
    4c1a:	9b07      	ldr	r3, [sp, #28]
    4c1c:	781b      	ldrb	r3, [r3, #0]
    4c1e:	e57e      	b.n	471e <_vfprintf_r+0x112>
    4c20:	2380      	movs	r3, #128	; 0x80
    4c22:	431c      	orrs	r4, r3
    4c24:	9b07      	ldr	r3, [sp, #28]
    4c26:	781b      	ldrb	r3, [r3, #0]
    4c28:	e579      	b.n	471e <_vfprintf_r+0x112>
    4c2a:	9b07      	ldr	r3, [sp, #28]
    4c2c:	781b      	ldrb	r3, [r3, #0]
    4c2e:	2800      	cmp	r0, #0
    4c30:	d000      	beq.n	4c34 <_vfprintf_r+0x628>
    4c32:	e574      	b.n	471e <_vfprintf_r+0x112>
    4c34:	2101      	movs	r1, #1
    4c36:	3020      	adds	r0, #32
    4c38:	e571      	b.n	471e <_vfprintf_r+0x112>
    4c3a:	9312      	str	r3, [sp, #72]	; 0x48
    4c3c:	2900      	cmp	r1, #0
    4c3e:	d001      	beq.n	4c44 <_vfprintf_r+0x638>
    4c40:	f001 f839 	bl	5cb6 <_vfprintf_r+0x16aa>
    4c44:	2207      	movs	r2, #7
    4c46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4c48:	3307      	adds	r3, #7
    4c4a:	4393      	bics	r3, r2
    4c4c:	3201      	adds	r2, #1
    4c4e:	4694      	mov	ip, r2
    4c50:	449c      	add	ip, r3
    4c52:	4662      	mov	r2, ip
    4c54:	920f      	str	r2, [sp, #60]	; 0x3c
    4c56:	681a      	ldr	r2, [r3, #0]
    4c58:	9216      	str	r2, [sp, #88]	; 0x58
    4c5a:	685b      	ldr	r3, [r3, #4]
    4c5c:	2201      	movs	r2, #1
    4c5e:	9315      	str	r3, [sp, #84]	; 0x54
    4c60:	9b15      	ldr	r3, [sp, #84]	; 0x54
    4c62:	9d16      	ldr	r5, [sp, #88]	; 0x58
    4c64:	005b      	lsls	r3, r3, #1
    4c66:	085b      	lsrs	r3, r3, #1
    4c68:	4698      	mov	r8, r3
    4c6a:	4252      	negs	r2, r2
    4c6c:	4b74      	ldr	r3, [pc, #464]	; (4e40 <_vfprintf_r+0x834>)
    4c6e:	0028      	movs	r0, r5
    4c70:	4641      	mov	r1, r8
    4c72:	f004 fde7 	bl	9844 <__aeabi_dcmpun>
    4c76:	2800      	cmp	r0, #0
    4c78:	d001      	beq.n	4c7e <_vfprintf_r+0x672>
    4c7a:	f000 fcb4 	bl	55e6 <_vfprintf_r+0xfda>
    4c7e:	2201      	movs	r2, #1
    4c80:	4b6f      	ldr	r3, [pc, #444]	; (4e40 <_vfprintf_r+0x834>)
    4c82:	4252      	negs	r2, r2
    4c84:	0028      	movs	r0, r5
    4c86:	4641      	mov	r1, r8
    4c88:	f7ff f9aa 	bl	3fe0 <__aeabi_dcmple>
    4c8c:	2800      	cmp	r0, #0
    4c8e:	d001      	beq.n	4c94 <_vfprintf_r+0x688>
    4c90:	f000 fca9 	bl	55e6 <_vfprintf_r+0xfda>
    4c94:	2200      	movs	r2, #0
    4c96:	2300      	movs	r3, #0
    4c98:	9816      	ldr	r0, [sp, #88]	; 0x58
    4c9a:	9915      	ldr	r1, [sp, #84]	; 0x54
    4c9c:	f7ff f996 	bl	3fcc <__aeabi_dcmplt>
    4ca0:	2800      	cmp	r0, #0
    4ca2:	d001      	beq.n	4ca8 <_vfprintf_r+0x69c>
    4ca4:	f000 fd55 	bl	5752 <_vfprintf_r+0x1146>
    4ca8:	ab16      	add	r3, sp, #88	; 0x58
    4caa:	7fdb      	ldrb	r3, [r3, #31]
    4cac:	4698      	mov	r8, r3
    4cae:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4cb0:	2b47      	cmp	r3, #71	; 0x47
    4cb2:	dd01      	ble.n	4cb8 <_vfprintf_r+0x6ac>
    4cb4:	f000 fdb4 	bl	5820 <_vfprintf_r+0x1214>
    4cb8:	4b62      	ldr	r3, [pc, #392]	; (4e44 <_vfprintf_r+0x838>)
    4cba:	9311      	str	r3, [sp, #68]	; 0x44
    4cbc:	2380      	movs	r3, #128	; 0x80
    4cbe:	439c      	bics	r4, r3
    4cc0:	3b7d      	subs	r3, #125	; 0x7d
    4cc2:	9308      	str	r3, [sp, #32]
    4cc4:	930e      	str	r3, [sp, #56]	; 0x38
    4cc6:	2300      	movs	r3, #0
    4cc8:	9409      	str	r4, [sp, #36]	; 0x24
    4cca:	469a      	mov	sl, r3
    4ccc:	9313      	str	r3, [sp, #76]	; 0x4c
    4cce:	e612      	b.n	48f6 <_vfprintf_r+0x2ea>
    4cd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4cd2:	1d1a      	adds	r2, r3, #4
    4cd4:	681b      	ldr	r3, [r3, #0]
    4cd6:	930b      	str	r3, [sp, #44]	; 0x2c
    4cd8:	2b00      	cmp	r3, #0
    4cda:	da00      	bge.n	4cde <_vfprintf_r+0x6d2>
    4cdc:	e578      	b.n	47d0 <_vfprintf_r+0x1c4>
    4cde:	9b07      	ldr	r3, [sp, #28]
    4ce0:	920f      	str	r2, [sp, #60]	; 0x3c
    4ce2:	781b      	ldrb	r3, [r3, #0]
    4ce4:	e51b      	b.n	471e <_vfprintf_r+0x112>
    4ce6:	9312      	str	r3, [sp, #72]	; 0x48
    4ce8:	2900      	cmp	r1, #0
    4cea:	d001      	beq.n	4cf0 <_vfprintf_r+0x6e4>
    4cec:	f000 ffcc 	bl	5c88 <_vfprintf_r+0x167c>
    4cf0:	2310      	movs	r3, #16
    4cf2:	431c      	orrs	r4, r3
    4cf4:	e69a      	b.n	4a2c <_vfprintf_r+0x420>
    4cf6:	9312      	str	r3, [sp, #72]	; 0x48
    4cf8:	e771      	b.n	4bde <_vfprintf_r+0x5d2>
    4cfa:	9312      	str	r3, [sp, #72]	; 0x48
    4cfc:	e758      	b.n	4bb0 <_vfprintf_r+0x5a4>
    4cfe:	9312      	str	r3, [sp, #72]	; 0x48
    4d00:	2900      	cmp	r1, #0
    4d02:	d001      	beq.n	4d08 <_vfprintf_r+0x6fc>
    4d04:	f000 ffd3 	bl	5cae <_vfprintf_r+0x16a2>
    4d08:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4d0a:	2b00      	cmp	r3, #0
    4d0c:	d100      	bne.n	4d10 <_vfprintf_r+0x704>
    4d0e:	e18d      	b.n	502c <_vfprintf_r+0xa20>
    4d10:	ad28      	add	r5, sp, #160	; 0xa0
    4d12:	702b      	strb	r3, [r5, #0]
    4d14:	2300      	movs	r3, #0
    4d16:	aa16      	add	r2, sp, #88	; 0x58
    4d18:	77d3      	strb	r3, [r2, #31]
    4d1a:	9409      	str	r4, [sp, #36]	; 0x24
    4d1c:	e678      	b.n	4a10 <_vfprintf_r+0x404>
    4d1e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4d20:	990a      	ldr	r1, [sp, #40]	; 0x28
    4d22:	6813      	ldr	r3, [r2, #0]
    4d24:	6019      	str	r1, [r3, #0]
    4d26:	0013      	movs	r3, r2
    4d28:	3304      	adds	r3, #4
    4d2a:	930f      	str	r3, [sp, #60]	; 0x3c
    4d2c:	e4bc      	b.n	46a8 <_vfprintf_r+0x9c>
    4d2e:	68bc      	ldr	r4, [r7, #8]
    4d30:	4643      	mov	r3, r8
    4d32:	2b00      	cmp	r3, #0
    4d34:	d00f      	beq.n	4d56 <_vfprintf_r+0x74a>
    4d36:	aa16      	add	r2, sp, #88	; 0x58
    4d38:	231f      	movs	r3, #31
    4d3a:	4694      	mov	ip, r2
    4d3c:	4463      	add	r3, ip
    4d3e:	6033      	str	r3, [r6, #0]
    4d40:	2301      	movs	r3, #1
    4d42:	6073      	str	r3, [r6, #4]
    4d44:	687b      	ldr	r3, [r7, #4]
    4d46:	3401      	adds	r4, #1
    4d48:	3301      	adds	r3, #1
    4d4a:	60bc      	str	r4, [r7, #8]
    4d4c:	607b      	str	r3, [r7, #4]
    4d4e:	2b07      	cmp	r3, #7
    4d50:	dd00      	ble.n	4d54 <_vfprintf_r+0x748>
    4d52:	e203      	b.n	515c <_vfprintf_r+0xb50>
    4d54:	3608      	adds	r6, #8
    4d56:	464b      	mov	r3, r9
    4d58:	2b00      	cmp	r3, #0
    4d5a:	d00c      	beq.n	4d76 <_vfprintf_r+0x76a>
    4d5c:	ab1e      	add	r3, sp, #120	; 0x78
    4d5e:	6033      	str	r3, [r6, #0]
    4d60:	2302      	movs	r3, #2
    4d62:	6073      	str	r3, [r6, #4]
    4d64:	687b      	ldr	r3, [r7, #4]
    4d66:	3402      	adds	r4, #2
    4d68:	3301      	adds	r3, #1
    4d6a:	60bc      	str	r4, [r7, #8]
    4d6c:	607b      	str	r3, [r7, #4]
    4d6e:	2b07      	cmp	r3, #7
    4d70:	dd00      	ble.n	4d74 <_vfprintf_r+0x768>
    4d72:	e1fd      	b.n	5170 <_vfprintf_r+0xb64>
    4d74:	3608      	adds	r6, #8
    4d76:	9b10      	ldr	r3, [sp, #64]	; 0x40
    4d78:	2b80      	cmp	r3, #128	; 0x80
    4d7a:	d100      	bne.n	4d7e <_vfprintf_r+0x772>
    4d7c:	e173      	b.n	5066 <_vfprintf_r+0xa5a>
    4d7e:	4653      	mov	r3, sl
    4d80:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4d82:	1a9d      	subs	r5, r3, r2
    4d84:	2d00      	cmp	r5, #0
    4d86:	dd32      	ble.n	4dee <_vfprintf_r+0x7e2>
    4d88:	4a2f      	ldr	r2, [pc, #188]	; (4e48 <_vfprintf_r+0x83c>)
    4d8a:	687b      	ldr	r3, [r7, #4]
    4d8c:	4691      	mov	r9, r2
    4d8e:	2d10      	cmp	r5, #16
    4d90:	dd22      	ble.n	4dd8 <_vfprintf_r+0x7cc>
    4d92:	2210      	movs	r2, #16
    4d94:	4692      	mov	sl, r2
    4d96:	0022      	movs	r2, r4
    4d98:	465c      	mov	r4, fp
    4d9a:	e003      	b.n	4da4 <_vfprintf_r+0x798>
    4d9c:	3d10      	subs	r5, #16
    4d9e:	3608      	adds	r6, #8
    4da0:	2d10      	cmp	r5, #16
    4da2:	dd17      	ble.n	4dd4 <_vfprintf_r+0x7c8>
    4da4:	4649      	mov	r1, r9
    4da6:	6031      	str	r1, [r6, #0]
    4da8:	4651      	mov	r1, sl
    4daa:	3210      	adds	r2, #16
    4dac:	3301      	adds	r3, #1
    4dae:	6071      	str	r1, [r6, #4]
    4db0:	60ba      	str	r2, [r7, #8]
    4db2:	607b      	str	r3, [r7, #4]
    4db4:	2b07      	cmp	r3, #7
    4db6:	ddf1      	ble.n	4d9c <_vfprintf_r+0x790>
    4db8:	003a      	movs	r2, r7
    4dba:	0021      	movs	r1, r4
    4dbc:	9806      	ldr	r0, [sp, #24]
    4dbe:	f003 fe87 	bl	8ad0 <__sprint_r>
    4dc2:	2800      	cmp	r0, #0
    4dc4:	d000      	beq.n	4dc8 <_vfprintf_r+0x7bc>
    4dc6:	e18a      	b.n	50de <_vfprintf_r+0xad2>
    4dc8:	3d10      	subs	r5, #16
    4dca:	68ba      	ldr	r2, [r7, #8]
    4dcc:	687b      	ldr	r3, [r7, #4]
    4dce:	ae32      	add	r6, sp, #200	; 0xc8
    4dd0:	2d10      	cmp	r5, #16
    4dd2:	dce7      	bgt.n	4da4 <_vfprintf_r+0x798>
    4dd4:	46a3      	mov	fp, r4
    4dd6:	0014      	movs	r4, r2
    4dd8:	464a      	mov	r2, r9
    4dda:	1964      	adds	r4, r4, r5
    4ddc:	3301      	adds	r3, #1
    4dde:	6032      	str	r2, [r6, #0]
    4de0:	6075      	str	r5, [r6, #4]
    4de2:	60bc      	str	r4, [r7, #8]
    4de4:	607b      	str	r3, [r7, #4]
    4de6:	2b07      	cmp	r3, #7
    4de8:	dd00      	ble.n	4dec <_vfprintf_r+0x7e0>
    4dea:	e1ad      	b.n	5148 <_vfprintf_r+0xb3c>
    4dec:	3608      	adds	r6, #8
    4dee:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4df0:	05db      	lsls	r3, r3, #23
    4df2:	d500      	bpl.n	4df6 <_vfprintf_r+0x7ea>
    4df4:	e0be      	b.n	4f74 <_vfprintf_r+0x968>
    4df6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4df8:	6033      	str	r3, [r6, #0]
    4dfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    4dfc:	469c      	mov	ip, r3
    4dfe:	6073      	str	r3, [r6, #4]
    4e00:	687b      	ldr	r3, [r7, #4]
    4e02:	4464      	add	r4, ip
    4e04:	3301      	adds	r3, #1
    4e06:	60bc      	str	r4, [r7, #8]
    4e08:	607b      	str	r3, [r7, #4]
    4e0a:	2b07      	cmp	r3, #7
    4e0c:	dd00      	ble.n	4e10 <_vfprintf_r+0x804>
    4e0e:	e0a6      	b.n	4f5e <_vfprintf_r+0x952>
    4e10:	3608      	adds	r6, #8
    4e12:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4e14:	075b      	lsls	r3, r3, #29
    4e16:	d54a      	bpl.n	4eae <_vfprintf_r+0x8a2>
    4e18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4e1a:	9a08      	ldr	r2, [sp, #32]
    4e1c:	1a9d      	subs	r5, r3, r2
    4e1e:	2d00      	cmp	r5, #0
    4e20:	dd45      	ble.n	4eae <_vfprintf_r+0x8a2>
    4e22:	4a0a      	ldr	r2, [pc, #40]	; (4e4c <_vfprintf_r+0x840>)
    4e24:	687b      	ldr	r3, [r7, #4]
    4e26:	4690      	mov	r8, r2
    4e28:	2d10      	cmp	r5, #16
    4e2a:	dd2f      	ble.n	4e8c <_vfprintf_r+0x880>
    4e2c:	2210      	movs	r2, #16
    4e2e:	4691      	mov	r9, r2
    4e30:	0022      	movs	r2, r4
    4e32:	465c      	mov	r4, fp
    4e34:	e010      	b.n	4e58 <_vfprintf_r+0x84c>
    4e36:	46c0      	nop			; (mov r8, r8)
    4e38:	00009e04 	.word	0x00009e04
    4e3c:	00009df0 	.word	0x00009df0
    4e40:	7fefffff 	.word	0x7fefffff
    4e44:	00009de0 	.word	0x00009de0
    4e48:	00009e34 	.word	0x00009e34
    4e4c:	00009e24 	.word	0x00009e24
    4e50:	3d10      	subs	r5, #16
    4e52:	3608      	adds	r6, #8
    4e54:	2d10      	cmp	r5, #16
    4e56:	dd17      	ble.n	4e88 <_vfprintf_r+0x87c>
    4e58:	49d1      	ldr	r1, [pc, #836]	; (51a0 <_vfprintf_r+0xb94>)
    4e5a:	3210      	adds	r2, #16
    4e5c:	6031      	str	r1, [r6, #0]
    4e5e:	4649      	mov	r1, r9
    4e60:	3301      	adds	r3, #1
    4e62:	6071      	str	r1, [r6, #4]
    4e64:	60ba      	str	r2, [r7, #8]
    4e66:	607b      	str	r3, [r7, #4]
    4e68:	2b07      	cmp	r3, #7
    4e6a:	ddf1      	ble.n	4e50 <_vfprintf_r+0x844>
    4e6c:	003a      	movs	r2, r7
    4e6e:	0021      	movs	r1, r4
    4e70:	9806      	ldr	r0, [sp, #24]
    4e72:	f003 fe2d 	bl	8ad0 <__sprint_r>
    4e76:	2800      	cmp	r0, #0
    4e78:	d000      	beq.n	4e7c <_vfprintf_r+0x870>
    4e7a:	e130      	b.n	50de <_vfprintf_r+0xad2>
    4e7c:	3d10      	subs	r5, #16
    4e7e:	68ba      	ldr	r2, [r7, #8]
    4e80:	687b      	ldr	r3, [r7, #4]
    4e82:	ae32      	add	r6, sp, #200	; 0xc8
    4e84:	2d10      	cmp	r5, #16
    4e86:	dce7      	bgt.n	4e58 <_vfprintf_r+0x84c>
    4e88:	46a3      	mov	fp, r4
    4e8a:	0014      	movs	r4, r2
    4e8c:	4642      	mov	r2, r8
    4e8e:	1964      	adds	r4, r4, r5
    4e90:	3301      	adds	r3, #1
    4e92:	c624      	stmia	r6!, {r2, r5}
    4e94:	60bc      	str	r4, [r7, #8]
    4e96:	607b      	str	r3, [r7, #4]
    4e98:	2b07      	cmp	r3, #7
    4e9a:	dd08      	ble.n	4eae <_vfprintf_r+0x8a2>
    4e9c:	003a      	movs	r2, r7
    4e9e:	4659      	mov	r1, fp
    4ea0:	9806      	ldr	r0, [sp, #24]
    4ea2:	f003 fe15 	bl	8ad0 <__sprint_r>
    4ea6:	2800      	cmp	r0, #0
    4ea8:	d000      	beq.n	4eac <_vfprintf_r+0x8a0>
    4eaa:	e13f      	b.n	512c <_vfprintf_r+0xb20>
    4eac:	68bc      	ldr	r4, [r7, #8]
    4eae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4eb0:	9908      	ldr	r1, [sp, #32]
    4eb2:	428b      	cmp	r3, r1
    4eb4:	da00      	bge.n	4eb8 <_vfprintf_r+0x8ac>
    4eb6:	000b      	movs	r3, r1
    4eb8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4eba:	4694      	mov	ip, r2
    4ebc:	449c      	add	ip, r3
    4ebe:	4663      	mov	r3, ip
    4ec0:	930a      	str	r3, [sp, #40]	; 0x28
    4ec2:	2c00      	cmp	r4, #0
    4ec4:	d000      	beq.n	4ec8 <_vfprintf_r+0x8bc>
    4ec6:	e129      	b.n	511c <_vfprintf_r+0xb10>
    4ec8:	2300      	movs	r3, #0
    4eca:	ae32      	add	r6, sp, #200	; 0xc8
    4ecc:	607b      	str	r3, [r7, #4]
    4ece:	f7ff fbeb 	bl	46a8 <_vfprintf_r+0x9c>
    4ed2:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4ed4:	2b01      	cmp	r3, #1
    4ed6:	dc00      	bgt.n	4eda <_vfprintf_r+0x8ce>
    4ed8:	e103      	b.n	50e2 <_vfprintf_r+0xad6>
    4eda:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4edc:	3401      	adds	r4, #1
    4ede:	6033      	str	r3, [r6, #0]
    4ee0:	2301      	movs	r3, #1
    4ee2:	6073      	str	r3, [r6, #4]
    4ee4:	687b      	ldr	r3, [r7, #4]
    4ee6:	60bc      	str	r4, [r7, #8]
    4ee8:	3301      	adds	r3, #1
    4eea:	607b      	str	r3, [r7, #4]
    4eec:	2b07      	cmp	r3, #7
    4eee:	dd00      	ble.n	4ef2 <_vfprintf_r+0x8e6>
    4ef0:	e2ef      	b.n	54d2 <_vfprintf_r+0xec6>
    4ef2:	3608      	adds	r6, #8
    4ef4:	9a18      	ldr	r2, [sp, #96]	; 0x60
    4ef6:	3301      	adds	r3, #1
    4ef8:	6032      	str	r2, [r6, #0]
    4efa:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    4efc:	4698      	mov	r8, r3
    4efe:	4694      	mov	ip, r2
    4f00:	4464      	add	r4, ip
    4f02:	6072      	str	r2, [r6, #4]
    4f04:	60bc      	str	r4, [r7, #8]
    4f06:	607b      	str	r3, [r7, #4]
    4f08:	2b07      	cmp	r3, #7
    4f0a:	dd00      	ble.n	4f0e <_vfprintf_r+0x902>
    4f0c:	e318      	b.n	5540 <_vfprintf_r+0xf34>
    4f0e:	3608      	adds	r6, #8
    4f10:	2200      	movs	r2, #0
    4f12:	2300      	movs	r3, #0
    4f14:	9816      	ldr	r0, [sp, #88]	; 0x58
    4f16:	9915      	ldr	r1, [sp, #84]	; 0x54
    4f18:	f7ff f852 	bl	3fc0 <__aeabi_dcmpeq>
    4f1c:	2800      	cmp	r0, #0
    4f1e:	d000      	beq.n	4f22 <_vfprintf_r+0x916>
    4f20:	e1f4      	b.n	530c <_vfprintf_r+0xd00>
    4f22:	9d11      	ldr	r5, [sp, #68]	; 0x44
    4f24:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4f26:	3501      	adds	r5, #1
    4f28:	3b01      	subs	r3, #1
    4f2a:	6035      	str	r5, [r6, #0]
    4f2c:	6073      	str	r3, [r6, #4]
    4f2e:	18e4      	adds	r4, r4, r3
    4f30:	2301      	movs	r3, #1
    4f32:	469c      	mov	ip, r3
    4f34:	44e0      	add	r8, ip
    4f36:	4643      	mov	r3, r8
    4f38:	60bc      	str	r4, [r7, #8]
    4f3a:	607b      	str	r3, [r7, #4]
    4f3c:	2b07      	cmp	r3, #7
    4f3e:	dd00      	ble.n	4f42 <_vfprintf_r+0x936>
    4f40:	e0e0      	b.n	5104 <_vfprintf_r+0xaf8>
    4f42:	3608      	adds	r6, #8
    4f44:	ab21      	add	r3, sp, #132	; 0x84
    4f46:	6033      	str	r3, [r6, #0]
    4f48:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    4f4a:	469c      	mov	ip, r3
    4f4c:	6073      	str	r3, [r6, #4]
    4f4e:	4643      	mov	r3, r8
    4f50:	4464      	add	r4, ip
    4f52:	3301      	adds	r3, #1
    4f54:	60bc      	str	r4, [r7, #8]
    4f56:	607b      	str	r3, [r7, #4]
    4f58:	2b07      	cmp	r3, #7
    4f5a:	dc00      	bgt.n	4f5e <_vfprintf_r+0x952>
    4f5c:	e758      	b.n	4e10 <_vfprintf_r+0x804>
    4f5e:	003a      	movs	r2, r7
    4f60:	4659      	mov	r1, fp
    4f62:	9806      	ldr	r0, [sp, #24]
    4f64:	f003 fdb4 	bl	8ad0 <__sprint_r>
    4f68:	2800      	cmp	r0, #0
    4f6a:	d000      	beq.n	4f6e <_vfprintf_r+0x962>
    4f6c:	e0de      	b.n	512c <_vfprintf_r+0xb20>
    4f6e:	68bc      	ldr	r4, [r7, #8]
    4f70:	ae32      	add	r6, sp, #200	; 0xc8
    4f72:	e74e      	b.n	4e12 <_vfprintf_r+0x806>
    4f74:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4f76:	2b65      	cmp	r3, #101	; 0x65
    4f78:	ddab      	ble.n	4ed2 <_vfprintf_r+0x8c6>
    4f7a:	2200      	movs	r2, #0
    4f7c:	2300      	movs	r3, #0
    4f7e:	9816      	ldr	r0, [sp, #88]	; 0x58
    4f80:	9915      	ldr	r1, [sp, #84]	; 0x54
    4f82:	f7ff f81d 	bl	3fc0 <__aeabi_dcmpeq>
    4f86:	2800      	cmp	r0, #0
    4f88:	d100      	bne.n	4f8c <_vfprintf_r+0x980>
    4f8a:	e134      	b.n	51f6 <_vfprintf_r+0xbea>
    4f8c:	4b85      	ldr	r3, [pc, #532]	; (51a4 <_vfprintf_r+0xb98>)
    4f8e:	3401      	adds	r4, #1
    4f90:	6033      	str	r3, [r6, #0]
    4f92:	2301      	movs	r3, #1
    4f94:	6073      	str	r3, [r6, #4]
    4f96:	687b      	ldr	r3, [r7, #4]
    4f98:	60bc      	str	r4, [r7, #8]
    4f9a:	3301      	adds	r3, #1
    4f9c:	607b      	str	r3, [r7, #4]
    4f9e:	2b07      	cmp	r3, #7
    4fa0:	dd00      	ble.n	4fa4 <_vfprintf_r+0x998>
    4fa2:	e3dc      	b.n	575e <_vfprintf_r+0x1152>
    4fa4:	3608      	adds	r6, #8
    4fa6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    4fa8:	9a14      	ldr	r2, [sp, #80]	; 0x50
    4faa:	4293      	cmp	r3, r2
    4fac:	db03      	blt.n	4fb6 <_vfprintf_r+0x9aa>
    4fae:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4fb0:	07db      	lsls	r3, r3, #31
    4fb2:	d400      	bmi.n	4fb6 <_vfprintf_r+0x9aa>
    4fb4:	e3b7      	b.n	5726 <_vfprintf_r+0x111a>
    4fb6:	9b18      	ldr	r3, [sp, #96]	; 0x60
    4fb8:	68ba      	ldr	r2, [r7, #8]
    4fba:	6033      	str	r3, [r6, #0]
    4fbc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    4fbe:	469c      	mov	ip, r3
    4fc0:	6073      	str	r3, [r6, #4]
    4fc2:	687b      	ldr	r3, [r7, #4]
    4fc4:	4462      	add	r2, ip
    4fc6:	3301      	adds	r3, #1
    4fc8:	0014      	movs	r4, r2
    4fca:	60ba      	str	r2, [r7, #8]
    4fcc:	607b      	str	r3, [r7, #4]
    4fce:	2b07      	cmp	r3, #7
    4fd0:	dd01      	ble.n	4fd6 <_vfprintf_r+0x9ca>
    4fd2:	f000 fc19 	bl	5808 <_vfprintf_r+0x11fc>
    4fd6:	3608      	adds	r6, #8
    4fd8:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4fda:	1e5d      	subs	r5, r3, #1
    4fdc:	2d00      	cmp	r5, #0
    4fde:	dc00      	bgt.n	4fe2 <_vfprintf_r+0x9d6>
    4fe0:	e717      	b.n	4e12 <_vfprintf_r+0x806>
    4fe2:	4a71      	ldr	r2, [pc, #452]	; (51a8 <_vfprintf_r+0xb9c>)
    4fe4:	687b      	ldr	r3, [r7, #4]
    4fe6:	4691      	mov	r9, r2
    4fe8:	2d10      	cmp	r5, #16
    4fea:	dc00      	bgt.n	4fee <_vfprintf_r+0x9e2>
    4fec:	e1c3      	b.n	5376 <_vfprintf_r+0xd6a>
    4fee:	2210      	movs	r2, #16
    4ff0:	4690      	mov	r8, r2
    4ff2:	0022      	movs	r2, r4
    4ff4:	464c      	mov	r4, r9
    4ff6:	46d9      	mov	r9, fp
    4ff8:	e004      	b.n	5004 <_vfprintf_r+0x9f8>
    4ffa:	3608      	adds	r6, #8
    4ffc:	3d10      	subs	r5, #16
    4ffe:	2d10      	cmp	r5, #16
    5000:	dc00      	bgt.n	5004 <_vfprintf_r+0x9f8>
    5002:	e37c      	b.n	56fe <_vfprintf_r+0x10f2>
    5004:	4641      	mov	r1, r8
    5006:	3210      	adds	r2, #16
    5008:	3301      	adds	r3, #1
    500a:	6034      	str	r4, [r6, #0]
    500c:	6071      	str	r1, [r6, #4]
    500e:	60ba      	str	r2, [r7, #8]
    5010:	607b      	str	r3, [r7, #4]
    5012:	2b07      	cmp	r3, #7
    5014:	ddf1      	ble.n	4ffa <_vfprintf_r+0x9ee>
    5016:	003a      	movs	r2, r7
    5018:	4649      	mov	r1, r9
    501a:	9806      	ldr	r0, [sp, #24]
    501c:	f003 fd58 	bl	8ad0 <__sprint_r>
    5020:	2800      	cmp	r0, #0
    5022:	d10b      	bne.n	503c <_vfprintf_r+0xa30>
    5024:	68ba      	ldr	r2, [r7, #8]
    5026:	687b      	ldr	r3, [r7, #4]
    5028:	ae32      	add	r6, sp, #200	; 0xc8
    502a:	e7e7      	b.n	4ffc <_vfprintf_r+0x9f0>
    502c:	68bb      	ldr	r3, [r7, #8]
    502e:	46d9      	mov	r9, fp
    5030:	2b00      	cmp	r3, #0
    5032:	d001      	beq.n	5038 <_vfprintf_r+0xa2c>
    5034:	f000 fd4c 	bl	5ad0 <_vfprintf_r+0x14c4>
    5038:	2300      	movs	r3, #0
    503a:	607b      	str	r3, [r7, #4]
    503c:	464b      	mov	r3, r9
    503e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    5040:	07db      	lsls	r3, r3, #31
    5042:	d40d      	bmi.n	5060 <_vfprintf_r+0xa54>
    5044:	464b      	mov	r3, r9
    5046:	899b      	ldrh	r3, [r3, #12]
    5048:	059a      	lsls	r2, r3, #22
    504a:	d505      	bpl.n	5058 <_vfprintf_r+0xa4c>
    504c:	065b      	lsls	r3, r3, #25
    504e:	d401      	bmi.n	5054 <_vfprintf_r+0xa48>
    5050:	f7ff fb8d 	bl	476e <_vfprintf_r+0x162>
    5054:	f7ff fb88 	bl	4768 <_vfprintf_r+0x15c>
    5058:	464b      	mov	r3, r9
    505a:	6d98      	ldr	r0, [r3, #88]	; 0x58
    505c:	f002 fbb8 	bl	77d0 <__retarget_lock_release_recursive>
    5060:	464b      	mov	r3, r9
    5062:	899b      	ldrh	r3, [r3, #12]
    5064:	e7f2      	b.n	504c <_vfprintf_r+0xa40>
    5066:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5068:	9a08      	ldr	r2, [sp, #32]
    506a:	1a9d      	subs	r5, r3, r2
    506c:	2d00      	cmp	r5, #0
    506e:	dc00      	bgt.n	5072 <_vfprintf_r+0xa66>
    5070:	e685      	b.n	4d7e <_vfprintf_r+0x772>
    5072:	4a4d      	ldr	r2, [pc, #308]	; (51a8 <_vfprintf_r+0xb9c>)
    5074:	687b      	ldr	r3, [r7, #4]
    5076:	4691      	mov	r9, r2
    5078:	2d10      	cmp	r5, #16
    507a:	dd24      	ble.n	50c6 <_vfprintf_r+0xaba>
    507c:	2210      	movs	r2, #16
    507e:	0021      	movs	r1, r4
    5080:	4690      	mov	r8, r2
    5082:	465c      	mov	r4, fp
    5084:	0032      	movs	r2, r6
    5086:	464e      	mov	r6, r9
    5088:	e003      	b.n	5092 <_vfprintf_r+0xa86>
    508a:	3d10      	subs	r5, #16
    508c:	3208      	adds	r2, #8
    508e:	2d10      	cmp	r5, #16
    5090:	dd15      	ble.n	50be <_vfprintf_r+0xab2>
    5092:	4640      	mov	r0, r8
    5094:	3110      	adds	r1, #16
    5096:	3301      	adds	r3, #1
    5098:	6016      	str	r6, [r2, #0]
    509a:	6050      	str	r0, [r2, #4]
    509c:	60b9      	str	r1, [r7, #8]
    509e:	607b      	str	r3, [r7, #4]
    50a0:	2b07      	cmp	r3, #7
    50a2:	ddf2      	ble.n	508a <_vfprintf_r+0xa7e>
    50a4:	003a      	movs	r2, r7
    50a6:	0021      	movs	r1, r4
    50a8:	9806      	ldr	r0, [sp, #24]
    50aa:	f003 fd11 	bl	8ad0 <__sprint_r>
    50ae:	2800      	cmp	r0, #0
    50b0:	d115      	bne.n	50de <_vfprintf_r+0xad2>
    50b2:	3d10      	subs	r5, #16
    50b4:	68b9      	ldr	r1, [r7, #8]
    50b6:	687b      	ldr	r3, [r7, #4]
    50b8:	aa32      	add	r2, sp, #200	; 0xc8
    50ba:	2d10      	cmp	r5, #16
    50bc:	dce9      	bgt.n	5092 <_vfprintf_r+0xa86>
    50be:	46a3      	mov	fp, r4
    50c0:	46b1      	mov	r9, r6
    50c2:	000c      	movs	r4, r1
    50c4:	0016      	movs	r6, r2
    50c6:	464a      	mov	r2, r9
    50c8:	1964      	adds	r4, r4, r5
    50ca:	3301      	adds	r3, #1
    50cc:	6032      	str	r2, [r6, #0]
    50ce:	6075      	str	r5, [r6, #4]
    50d0:	60bc      	str	r4, [r7, #8]
    50d2:	607b      	str	r3, [r7, #4]
    50d4:	2b07      	cmp	r3, #7
    50d6:	dd00      	ble.n	50da <_vfprintf_r+0xace>
    50d8:	e263      	b.n	55a2 <_vfprintf_r+0xf96>
    50da:	3608      	adds	r6, #8
    50dc:	e64f      	b.n	4d7e <_vfprintf_r+0x772>
    50de:	46a1      	mov	r9, r4
    50e0:	e7ac      	b.n	503c <_vfprintf_r+0xa30>
    50e2:	2301      	movs	r3, #1
    50e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
    50e6:	4213      	tst	r3, r2
    50e8:	d000      	beq.n	50ec <_vfprintf_r+0xae0>
    50ea:	e6f6      	b.n	4eda <_vfprintf_r+0x8ce>
    50ec:	6073      	str	r3, [r6, #4]
    50ee:	687b      	ldr	r3, [r7, #4]
    50f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
    50f2:	3301      	adds	r3, #1
    50f4:	3401      	adds	r4, #1
    50f6:	6032      	str	r2, [r6, #0]
    50f8:	60bc      	str	r4, [r7, #8]
    50fa:	4698      	mov	r8, r3
    50fc:	607b      	str	r3, [r7, #4]
    50fe:	2b07      	cmp	r3, #7
    5100:	dc00      	bgt.n	5104 <_vfprintf_r+0xaf8>
    5102:	e71e      	b.n	4f42 <_vfprintf_r+0x936>
    5104:	003a      	movs	r2, r7
    5106:	4659      	mov	r1, fp
    5108:	9806      	ldr	r0, [sp, #24]
    510a:	f003 fce1 	bl	8ad0 <__sprint_r>
    510e:	2800      	cmp	r0, #0
    5110:	d10c      	bne.n	512c <_vfprintf_r+0xb20>
    5112:	687b      	ldr	r3, [r7, #4]
    5114:	68bc      	ldr	r4, [r7, #8]
    5116:	4698      	mov	r8, r3
    5118:	ae32      	add	r6, sp, #200	; 0xc8
    511a:	e713      	b.n	4f44 <_vfprintf_r+0x938>
    511c:	003a      	movs	r2, r7
    511e:	4659      	mov	r1, fp
    5120:	9806      	ldr	r0, [sp, #24]
    5122:	f003 fcd5 	bl	8ad0 <__sprint_r>
    5126:	2800      	cmp	r0, #0
    5128:	d100      	bne.n	512c <_vfprintf_r+0xb20>
    512a:	e6cd      	b.n	4ec8 <_vfprintf_r+0x8bc>
    512c:	46d9      	mov	r9, fp
    512e:	e785      	b.n	503c <_vfprintf_r+0xa30>
    5130:	9c09      	ldr	r4, [sp, #36]	; 0x24
    5132:	2b01      	cmp	r3, #1
    5134:	d100      	bne.n	5138 <_vfprintf_r+0xb2c>
    5136:	e148      	b.n	53ca <_vfprintf_r+0xdbe>
    5138:	2b02      	cmp	r3, #2
    513a:	d123      	bne.n	5184 <_vfprintf_r+0xb78>
    513c:	9409      	str	r4, [sp, #36]	; 0x24
    513e:	2300      	movs	r3, #0
    5140:	2400      	movs	r4, #0
    5142:	930c      	str	r3, [sp, #48]	; 0x30
    5144:	940d      	str	r4, [sp, #52]	; 0x34
    5146:	e4a1      	b.n	4a8c <_vfprintf_r+0x480>
    5148:	003a      	movs	r2, r7
    514a:	4659      	mov	r1, fp
    514c:	9806      	ldr	r0, [sp, #24]
    514e:	f003 fcbf 	bl	8ad0 <__sprint_r>
    5152:	2800      	cmp	r0, #0
    5154:	d1ea      	bne.n	512c <_vfprintf_r+0xb20>
    5156:	68bc      	ldr	r4, [r7, #8]
    5158:	ae32      	add	r6, sp, #200	; 0xc8
    515a:	e648      	b.n	4dee <_vfprintf_r+0x7e2>
    515c:	003a      	movs	r2, r7
    515e:	4659      	mov	r1, fp
    5160:	9806      	ldr	r0, [sp, #24]
    5162:	f003 fcb5 	bl	8ad0 <__sprint_r>
    5166:	2800      	cmp	r0, #0
    5168:	d1e0      	bne.n	512c <_vfprintf_r+0xb20>
    516a:	68bc      	ldr	r4, [r7, #8]
    516c:	ae32      	add	r6, sp, #200	; 0xc8
    516e:	e5f2      	b.n	4d56 <_vfprintf_r+0x74a>
    5170:	003a      	movs	r2, r7
    5172:	4659      	mov	r1, fp
    5174:	9806      	ldr	r0, [sp, #24]
    5176:	f003 fcab 	bl	8ad0 <__sprint_r>
    517a:	2800      	cmp	r0, #0
    517c:	d1d6      	bne.n	512c <_vfprintf_r+0xb20>
    517e:	68bc      	ldr	r4, [r7, #8]
    5180:	ae32      	add	r6, sp, #200	; 0xc8
    5182:	e5f8      	b.n	4d76 <_vfprintf_r+0x76a>
    5184:	9409      	str	r4, [sp, #36]	; 0x24
    5186:	2300      	movs	r3, #0
    5188:	2400      	movs	r4, #0
    518a:	930c      	str	r3, [sp, #48]	; 0x30
    518c:	940d      	str	r4, [sp, #52]	; 0x34
    518e:	980c      	ldr	r0, [sp, #48]	; 0x30
    5190:	990d      	ldr	r1, [sp, #52]	; 0x34
    5192:	4653      	mov	r3, sl
    5194:	aa32      	add	r2, sp, #200	; 0xc8
    5196:	4691      	mov	r9, r2
    5198:	9308      	str	r3, [sp, #32]
    519a:	46b2      	mov	sl, r6
    519c:	e007      	b.n	51ae <_vfprintf_r+0xba2>
    519e:	46c0      	nop			; (mov r8, r8)
    51a0:	00009e24 	.word	0x00009e24
    51a4:	00009e20 	.word	0x00009e20
    51a8:	00009e34 	.word	0x00009e34
    51ac:	46a1      	mov	r9, r4
    51ae:	074a      	lsls	r2, r1, #29
    51b0:	4694      	mov	ip, r2
    51b2:	464b      	mov	r3, r9
    51b4:	4665      	mov	r5, ip
    51b6:	1e5c      	subs	r4, r3, #1
    51b8:	08c6      	lsrs	r6, r0, #3
    51ba:	2307      	movs	r3, #7
    51bc:	08ca      	lsrs	r2, r1, #3
    51be:	4335      	orrs	r5, r6
    51c0:	0011      	movs	r1, r2
    51c2:	002a      	movs	r2, r5
    51c4:	4003      	ands	r3, r0
    51c6:	3330      	adds	r3, #48	; 0x30
    51c8:	7023      	strb	r3, [r4, #0]
    51ca:	0028      	movs	r0, r5
    51cc:	430a      	orrs	r2, r1
    51ce:	d1ed      	bne.n	51ac <_vfprintf_r+0xba0>
    51d0:	900c      	str	r0, [sp, #48]	; 0x30
    51d2:	910d      	str	r1, [sp, #52]	; 0x34
    51d4:	9908      	ldr	r1, [sp, #32]
    51d6:	4656      	mov	r6, sl
    51d8:	468a      	mov	sl, r1
    51da:	9909      	ldr	r1, [sp, #36]	; 0x24
    51dc:	464a      	mov	r2, r9
    51de:	9411      	str	r4, [sp, #68]	; 0x44
    51e0:	07c9      	lsls	r1, r1, #31
    51e2:	d500      	bpl.n	51e6 <_vfprintf_r+0xbda>
    51e4:	e0e0      	b.n	53a8 <_vfprintf_r+0xd9c>
    51e6:	ab32      	add	r3, sp, #200	; 0xc8
    51e8:	1b1b      	subs	r3, r3, r4
    51ea:	930e      	str	r3, [sp, #56]	; 0x38
    51ec:	f7ff fb7b 	bl	48e6 <_vfprintf_r+0x2da>
    51f0:	9c07      	ldr	r4, [sp, #28]
    51f2:	f7ff fa7d 	bl	46f0 <_vfprintf_r+0xe4>
    51f6:	981f      	ldr	r0, [sp, #124]	; 0x7c
    51f8:	2800      	cmp	r0, #0
    51fa:	dc00      	bgt.n	51fe <_vfprintf_r+0xbf2>
    51fc:	e2b9      	b.n	5772 <_vfprintf_r+0x1166>
    51fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5200:	9914      	ldr	r1, [sp, #80]	; 0x50
    5202:	0013      	movs	r3, r2
    5204:	4690      	mov	r8, r2
    5206:	428b      	cmp	r3, r1
    5208:	dd00      	ble.n	520c <_vfprintf_r+0xc00>
    520a:	4688      	mov	r8, r1
    520c:	4643      	mov	r3, r8
    520e:	2b00      	cmp	r3, #0
    5210:	dd0c      	ble.n	522c <_vfprintf_r+0xc20>
    5212:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5214:	4444      	add	r4, r8
    5216:	6033      	str	r3, [r6, #0]
    5218:	4643      	mov	r3, r8
    521a:	6073      	str	r3, [r6, #4]
    521c:	687b      	ldr	r3, [r7, #4]
    521e:	60bc      	str	r4, [r7, #8]
    5220:	3301      	adds	r3, #1
    5222:	607b      	str	r3, [r7, #4]
    5224:	2b07      	cmp	r3, #7
    5226:	dd00      	ble.n	522a <_vfprintf_r+0xc1e>
    5228:	e389      	b.n	593e <_vfprintf_r+0x1332>
    522a:	3608      	adds	r6, #8
    522c:	4643      	mov	r3, r8
    522e:	43db      	mvns	r3, r3
    5230:	4642      	mov	r2, r8
    5232:	17db      	asrs	r3, r3, #31
    5234:	4013      	ands	r3, r2
    5236:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5238:	1ad3      	subs	r3, r2, r3
    523a:	4698      	mov	r8, r3
    523c:	2b00      	cmp	r3, #0
    523e:	dc00      	bgt.n	5242 <_vfprintf_r+0xc36>
    5240:	e0eb      	b.n	541a <_vfprintf_r+0xe0e>
    5242:	2b10      	cmp	r3, #16
    5244:	dc01      	bgt.n	524a <_vfprintf_r+0xc3e>
    5246:	f000 fcd9 	bl	5bfc <_vfprintf_r+0x15f0>
    524a:	4adc      	ldr	r2, [pc, #880]	; (55bc <_vfprintf_r+0xfb0>)
    524c:	687b      	ldr	r3, [r7, #4]
    524e:	4691      	mov	r9, r2
    5250:	2210      	movs	r2, #16
    5252:	464d      	mov	r5, r9
    5254:	4692      	mov	sl, r2
    5256:	0022      	movs	r2, r4
    5258:	4644      	mov	r4, r8
    525a:	46d8      	mov	r8, fp
    525c:	e004      	b.n	5268 <_vfprintf_r+0xc5c>
    525e:	3608      	adds	r6, #8
    5260:	3c10      	subs	r4, #16
    5262:	2c10      	cmp	r4, #16
    5264:	dc00      	bgt.n	5268 <_vfprintf_r+0xc5c>
    5266:	e0bf      	b.n	53e8 <_vfprintf_r+0xddc>
    5268:	4651      	mov	r1, sl
    526a:	3210      	adds	r2, #16
    526c:	3301      	adds	r3, #1
    526e:	6035      	str	r5, [r6, #0]
    5270:	6071      	str	r1, [r6, #4]
    5272:	60ba      	str	r2, [r7, #8]
    5274:	607b      	str	r3, [r7, #4]
    5276:	2b07      	cmp	r3, #7
    5278:	ddf1      	ble.n	525e <_vfprintf_r+0xc52>
    527a:	003a      	movs	r2, r7
    527c:	4641      	mov	r1, r8
    527e:	9806      	ldr	r0, [sp, #24]
    5280:	f003 fc26 	bl	8ad0 <__sprint_r>
    5284:	2800      	cmp	r0, #0
    5286:	d000      	beq.n	528a <_vfprintf_r+0xc7e>
    5288:	e3b6      	b.n	59f8 <_vfprintf_r+0x13ec>
    528a:	68ba      	ldr	r2, [r7, #8]
    528c:	687b      	ldr	r3, [r7, #4]
    528e:	ae32      	add	r6, sp, #200	; 0xc8
    5290:	e7e6      	b.n	5260 <_vfprintf_r+0xc54>
    5292:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5294:	2b00      	cmp	r3, #0
    5296:	d100      	bne.n	529a <_vfprintf_r+0xc8e>
    5298:	e092      	b.n	53c0 <_vfprintf_r+0xdb4>
    529a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    529c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    529e:	ab32      	add	r3, sp, #200	; 0xc8
    52a0:	46b1      	mov	r9, r6
    52a2:	001e      	movs	r6, r3
    52a4:	0020      	movs	r0, r4
    52a6:	0029      	movs	r1, r5
    52a8:	220a      	movs	r2, #10
    52aa:	2300      	movs	r3, #0
    52ac:	f7fd fb44 	bl	2938 <__aeabi_uldivmod>
    52b0:	3e01      	subs	r6, #1
    52b2:	3230      	adds	r2, #48	; 0x30
    52b4:	7032      	strb	r2, [r6, #0]
    52b6:	2300      	movs	r3, #0
    52b8:	0020      	movs	r0, r4
    52ba:	0029      	movs	r1, r5
    52bc:	220a      	movs	r2, #10
    52be:	f7fd fb3b 	bl	2938 <__aeabi_uldivmod>
    52c2:	0003      	movs	r3, r0
    52c4:	0004      	movs	r4, r0
    52c6:	000d      	movs	r5, r1
    52c8:	430b      	orrs	r3, r1
    52ca:	d1eb      	bne.n	52a4 <_vfprintf_r+0xc98>
    52cc:	0032      	movs	r2, r6
    52ce:	ab32      	add	r3, sp, #200	; 0xc8
    52d0:	1a9b      	subs	r3, r3, r2
    52d2:	9611      	str	r6, [sp, #68]	; 0x44
    52d4:	940c      	str	r4, [sp, #48]	; 0x30
    52d6:	950d      	str	r5, [sp, #52]	; 0x34
    52d8:	464e      	mov	r6, r9
    52da:	930e      	str	r3, [sp, #56]	; 0x38
    52dc:	f7ff fb03 	bl	48e6 <_vfprintf_r+0x2da>
    52e0:	2300      	movs	r3, #0
    52e2:	930e      	str	r3, [sp, #56]	; 0x38
    52e4:	ab32      	add	r3, sp, #200	; 0xc8
    52e6:	9311      	str	r3, [sp, #68]	; 0x44
    52e8:	f7ff fafd 	bl	48e6 <_vfprintf_r+0x2da>
    52ec:	003a      	movs	r2, r7
    52ee:	4659      	mov	r1, fp
    52f0:	9806      	ldr	r0, [sp, #24]
    52f2:	f003 fbed 	bl	8ad0 <__sprint_r>
    52f6:	2800      	cmp	r0, #0
    52f8:	d000      	beq.n	52fc <_vfprintf_r+0xcf0>
    52fa:	e717      	b.n	512c <_vfprintf_r+0xb20>
    52fc:	ab16      	add	r3, sp, #88	; 0x58
    52fe:	7fdb      	ldrb	r3, [r3, #31]
    5300:	68bc      	ldr	r4, [r7, #8]
    5302:	4698      	mov	r8, r3
    5304:	ae32      	add	r6, sp, #200	; 0xc8
    5306:	e513      	b.n	4d30 <_vfprintf_r+0x724>
    5308:	46b1      	mov	r9, r6
    530a:	e697      	b.n	503c <_vfprintf_r+0xa30>
    530c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    530e:	1e5d      	subs	r5, r3, #1
    5310:	2d00      	cmp	r5, #0
    5312:	dc00      	bgt.n	5316 <_vfprintf_r+0xd0a>
    5314:	e616      	b.n	4f44 <_vfprintf_r+0x938>
    5316:	4ba9      	ldr	r3, [pc, #676]	; (55bc <_vfprintf_r+0xfb0>)
    5318:	4699      	mov	r9, r3
    531a:	2d10      	cmp	r5, #16
    531c:	dc00      	bgt.n	5320 <_vfprintf_r+0xd14>
    531e:	e10a      	b.n	5536 <_vfprintf_r+0xf2a>
    5320:	2310      	movs	r3, #16
    5322:	0022      	movs	r2, r4
    5324:	469a      	mov	sl, r3
    5326:	465c      	mov	r4, fp
    5328:	4643      	mov	r3, r8
    532a:	e004      	b.n	5336 <_vfprintf_r+0xd2a>
    532c:	3608      	adds	r6, #8
    532e:	3d10      	subs	r5, #16
    5330:	2d10      	cmp	r5, #16
    5332:	dc00      	bgt.n	5336 <_vfprintf_r+0xd2a>
    5334:	e0fc      	b.n	5530 <_vfprintf_r+0xf24>
    5336:	4649      	mov	r1, r9
    5338:	6031      	str	r1, [r6, #0]
    533a:	4651      	mov	r1, sl
    533c:	3210      	adds	r2, #16
    533e:	3301      	adds	r3, #1
    5340:	6071      	str	r1, [r6, #4]
    5342:	60ba      	str	r2, [r7, #8]
    5344:	607b      	str	r3, [r7, #4]
    5346:	2b07      	cmp	r3, #7
    5348:	ddf0      	ble.n	532c <_vfprintf_r+0xd20>
    534a:	003a      	movs	r2, r7
    534c:	0021      	movs	r1, r4
    534e:	9806      	ldr	r0, [sp, #24]
    5350:	f003 fbbe 	bl	8ad0 <__sprint_r>
    5354:	2800      	cmp	r0, #0
    5356:	d000      	beq.n	535a <_vfprintf_r+0xd4e>
    5358:	e6c1      	b.n	50de <_vfprintf_r+0xad2>
    535a:	68ba      	ldr	r2, [r7, #8]
    535c:	687b      	ldr	r3, [r7, #4]
    535e:	ae32      	add	r6, sp, #200	; 0xc8
    5360:	e7e5      	b.n	532e <_vfprintf_r+0xd22>
    5362:	990c      	ldr	r1, [sp, #48]	; 0x30
    5364:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5366:	0008      	movs	r0, r1
    5368:	4310      	orrs	r0, r2
    536a:	2302      	movs	r3, #2
    536c:	0002      	movs	r2, r0
    536e:	f7ff fa93 	bl	4898 <_vfprintf_r+0x28c>
    5372:	46a3      	mov	fp, r4
    5374:	0014      	movs	r4, r2
    5376:	464a      	mov	r2, r9
    5378:	1964      	adds	r4, r4, r5
    537a:	3301      	adds	r3, #1
    537c:	6032      	str	r2, [r6, #0]
    537e:	6075      	str	r5, [r6, #4]
    5380:	60bc      	str	r4, [r7, #8]
    5382:	607b      	str	r3, [r7, #4]
    5384:	2b07      	cmp	r3, #7
    5386:	dc00      	bgt.n	538a <_vfprintf_r+0xd7e>
    5388:	e542      	b.n	4e10 <_vfprintf_r+0x804>
    538a:	e5e8      	b.n	4f5e <_vfprintf_r+0x952>
    538c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    538e:	681a      	ldr	r2, [r3, #0]
    5390:	f7ff fa68 	bl	4864 <_vfprintf_r+0x258>
    5394:	6813      	ldr	r3, [r2, #0]
    5396:	9308      	str	r3, [sp, #32]
    5398:	f7ff fb57 	bl	4a4a <_vfprintf_r+0x43e>
    539c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    539e:	681a      	ldr	r2, [r3, #0]
    53a0:	e412      	b.n	4bc8 <_vfprintf_r+0x5bc>
    53a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    53a4:	681a      	ldr	r2, [r3, #0]
    53a6:	e426      	b.n	4bf6 <_vfprintf_r+0x5ea>
    53a8:	2b30      	cmp	r3, #48	; 0x30
    53aa:	d100      	bne.n	53ae <_vfprintf_r+0xda2>
    53ac:	e23c      	b.n	5828 <_vfprintf_r+0x121c>
    53ae:	2330      	movs	r3, #48	; 0x30
    53b0:	3a02      	subs	r2, #2
    53b2:	7013      	strb	r3, [r2, #0]
    53b4:	ab32      	add	r3, sp, #200	; 0xc8
    53b6:	1a9b      	subs	r3, r3, r2
    53b8:	930e      	str	r3, [sp, #56]	; 0x38
    53ba:	9211      	str	r2, [sp, #68]	; 0x44
    53bc:	f7ff fa93 	bl	48e6 <_vfprintf_r+0x2da>
    53c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    53c2:	2b09      	cmp	r3, #9
    53c4:	d900      	bls.n	53c8 <_vfprintf_r+0xdbc>
    53c6:	e768      	b.n	529a <_vfprintf_r+0xc8e>
    53c8:	9c09      	ldr	r4, [sp, #36]	; 0x24
    53ca:	2227      	movs	r2, #39	; 0x27
    53cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    53ce:	a928      	add	r1, sp, #160	; 0xa0
    53d0:	3330      	adds	r3, #48	; 0x30
    53d2:	548b      	strb	r3, [r1, r2]
    53d4:	2301      	movs	r3, #1
    53d6:	aa16      	add	r2, sp, #88	; 0x58
    53d8:	4694      	mov	ip, r2
    53da:	930e      	str	r3, [sp, #56]	; 0x38
    53dc:	336e      	adds	r3, #110	; 0x6e
    53de:	4463      	add	r3, ip
    53e0:	9409      	str	r4, [sp, #36]	; 0x24
    53e2:	9311      	str	r3, [sp, #68]	; 0x44
    53e4:	f7ff fa7f 	bl	48e6 <_vfprintf_r+0x2da>
    53e8:	46c3      	mov	fp, r8
    53ea:	46a9      	mov	r9, r5
    53ec:	46a0      	mov	r8, r4
    53ee:	0014      	movs	r4, r2
    53f0:	464a      	mov	r2, r9
    53f2:	6032      	str	r2, [r6, #0]
    53f4:	4642      	mov	r2, r8
    53f6:	4444      	add	r4, r8
    53f8:	3301      	adds	r3, #1
    53fa:	6072      	str	r2, [r6, #4]
    53fc:	60bc      	str	r4, [r7, #8]
    53fe:	607b      	str	r3, [r7, #4]
    5400:	2b07      	cmp	r3, #7
    5402:	dc00      	bgt.n	5406 <_vfprintf_r+0xdfa>
    5404:	e18d      	b.n	5722 <_vfprintf_r+0x1116>
    5406:	003a      	movs	r2, r7
    5408:	4659      	mov	r1, fp
    540a:	9806      	ldr	r0, [sp, #24]
    540c:	f003 fb60 	bl	8ad0 <__sprint_r>
    5410:	2800      	cmp	r0, #0
    5412:	d000      	beq.n	5416 <_vfprintf_r+0xe0a>
    5414:	e68a      	b.n	512c <_vfprintf_r+0xb20>
    5416:	68bc      	ldr	r4, [r7, #8]
    5418:	ae32      	add	r6, sp, #200	; 0xc8
    541a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    541c:	9a14      	ldr	r2, [sp, #80]	; 0x50
    541e:	4293      	cmp	r3, r2
    5420:	db00      	blt.n	5424 <_vfprintf_r+0xe18>
    5422:	e179      	b.n	5718 <_vfprintf_r+0x110c>
    5424:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5426:	6032      	str	r2, [r6, #0]
    5428:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    542a:	4694      	mov	ip, r2
    542c:	6072      	str	r2, [r6, #4]
    542e:	687a      	ldr	r2, [r7, #4]
    5430:	4464      	add	r4, ip
    5432:	3201      	adds	r2, #1
    5434:	60bc      	str	r4, [r7, #8]
    5436:	607a      	str	r2, [r7, #4]
    5438:	2a07      	cmp	r2, #7
    543a:	dd00      	ble.n	543e <_vfprintf_r+0xe32>
    543c:	e176      	b.n	572c <_vfprintf_r+0x1120>
    543e:	3608      	adds	r6, #8
    5440:	9a14      	ldr	r2, [sp, #80]	; 0x50
    5442:	9913      	ldr	r1, [sp, #76]	; 0x4c
    5444:	1ad3      	subs	r3, r2, r3
    5446:	1a52      	subs	r2, r2, r1
    5448:	4690      	mov	r8, r2
    544a:	429a      	cmp	r2, r3
    544c:	dd00      	ble.n	5450 <_vfprintf_r+0xe44>
    544e:	4698      	mov	r8, r3
    5450:	4642      	mov	r2, r8
    5452:	2a00      	cmp	r2, #0
    5454:	dd0f      	ble.n	5476 <_vfprintf_r+0xe6a>
    5456:	9913      	ldr	r1, [sp, #76]	; 0x4c
    5458:	9a11      	ldr	r2, [sp, #68]	; 0x44
    545a:	468c      	mov	ip, r1
    545c:	4462      	add	r2, ip
    545e:	6032      	str	r2, [r6, #0]
    5460:	4642      	mov	r2, r8
    5462:	6072      	str	r2, [r6, #4]
    5464:	687a      	ldr	r2, [r7, #4]
    5466:	4444      	add	r4, r8
    5468:	3201      	adds	r2, #1
    546a:	60bc      	str	r4, [r7, #8]
    546c:	607a      	str	r2, [r7, #4]
    546e:	2a07      	cmp	r2, #7
    5470:	dd00      	ble.n	5474 <_vfprintf_r+0xe68>
    5472:	e289      	b.n	5988 <_vfprintf_r+0x137c>
    5474:	3608      	adds	r6, #8
    5476:	4642      	mov	r2, r8
    5478:	43d5      	mvns	r5, r2
    547a:	17ed      	asrs	r5, r5, #31
    547c:	4015      	ands	r5, r2
    547e:	1b5d      	subs	r5, r3, r5
    5480:	2d00      	cmp	r5, #0
    5482:	dc00      	bgt.n	5486 <_vfprintf_r+0xe7a>
    5484:	e4c5      	b.n	4e12 <_vfprintf_r+0x806>
    5486:	4a4d      	ldr	r2, [pc, #308]	; (55bc <_vfprintf_r+0xfb0>)
    5488:	687b      	ldr	r3, [r7, #4]
    548a:	4691      	mov	r9, r2
    548c:	2d10      	cmp	r5, #16
    548e:	dc00      	bgt.n	5492 <_vfprintf_r+0xe86>
    5490:	e771      	b.n	5376 <_vfprintf_r+0xd6a>
    5492:	2210      	movs	r2, #16
    5494:	4690      	mov	r8, r2
    5496:	0022      	movs	r2, r4
    5498:	465c      	mov	r4, fp
    549a:	e004      	b.n	54a6 <_vfprintf_r+0xe9a>
    549c:	3608      	adds	r6, #8
    549e:	3d10      	subs	r5, #16
    54a0:	2d10      	cmp	r5, #16
    54a2:	dc00      	bgt.n	54a6 <_vfprintf_r+0xe9a>
    54a4:	e765      	b.n	5372 <_vfprintf_r+0xd66>
    54a6:	4649      	mov	r1, r9
    54a8:	6031      	str	r1, [r6, #0]
    54aa:	4641      	mov	r1, r8
    54ac:	3210      	adds	r2, #16
    54ae:	3301      	adds	r3, #1
    54b0:	6071      	str	r1, [r6, #4]
    54b2:	60ba      	str	r2, [r7, #8]
    54b4:	607b      	str	r3, [r7, #4]
    54b6:	2b07      	cmp	r3, #7
    54b8:	ddf0      	ble.n	549c <_vfprintf_r+0xe90>
    54ba:	003a      	movs	r2, r7
    54bc:	0021      	movs	r1, r4
    54be:	9806      	ldr	r0, [sp, #24]
    54c0:	f003 fb06 	bl	8ad0 <__sprint_r>
    54c4:	2800      	cmp	r0, #0
    54c6:	d000      	beq.n	54ca <_vfprintf_r+0xebe>
    54c8:	e609      	b.n	50de <_vfprintf_r+0xad2>
    54ca:	68ba      	ldr	r2, [r7, #8]
    54cc:	687b      	ldr	r3, [r7, #4]
    54ce:	ae32      	add	r6, sp, #200	; 0xc8
    54d0:	e7e5      	b.n	549e <_vfprintf_r+0xe92>
    54d2:	003a      	movs	r2, r7
    54d4:	4659      	mov	r1, fp
    54d6:	9806      	ldr	r0, [sp, #24]
    54d8:	f003 fafa 	bl	8ad0 <__sprint_r>
    54dc:	2800      	cmp	r0, #0
    54de:	d000      	beq.n	54e2 <_vfprintf_r+0xed6>
    54e0:	e624      	b.n	512c <_vfprintf_r+0xb20>
    54e2:	68bc      	ldr	r4, [r7, #8]
    54e4:	687b      	ldr	r3, [r7, #4]
    54e6:	ae32      	add	r6, sp, #200	; 0xc8
    54e8:	e504      	b.n	4ef4 <_vfprintf_r+0x8e8>
    54ea:	2307      	movs	r3, #7
    54ec:	3207      	adds	r2, #7
    54ee:	439a      	bics	r2, r3
    54f0:	3301      	adds	r3, #1
    54f2:	469c      	mov	ip, r3
    54f4:	4494      	add	ip, r2
    54f6:	4663      	mov	r3, ip
    54f8:	930f      	str	r3, [sp, #60]	; 0x3c
    54fa:	6853      	ldr	r3, [r2, #4]
    54fc:	6812      	ldr	r2, [r2, #0]
    54fe:	930d      	str	r3, [sp, #52]	; 0x34
    5500:	920c      	str	r2, [sp, #48]	; 0x30
    5502:	f7ff faa7 	bl	4a54 <_vfprintf_r+0x448>
    5506:	2207      	movs	r2, #7
    5508:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    550a:	3307      	adds	r3, #7
    550c:	4393      	bics	r3, r2
    550e:	3201      	adds	r2, #1
    5510:	4694      	mov	ip, r2
    5512:	449c      	add	ip, r3
    5514:	4662      	mov	r2, ip
    5516:	920f      	str	r2, [sp, #60]	; 0x3c
    5518:	681a      	ldr	r2, [r3, #0]
    551a:	685b      	ldr	r3, [r3, #4]
    551c:	0011      	movs	r1, r2
    551e:	001a      	movs	r2, r3
    5520:	0008      	movs	r0, r1
    5522:	4310      	orrs	r0, r2
    5524:	910c      	str	r1, [sp, #48]	; 0x30
    5526:	920d      	str	r2, [sp, #52]	; 0x34
    5528:	2300      	movs	r3, #0
    552a:	0002      	movs	r2, r0
    552c:	f7ff f9b4 	bl	4898 <_vfprintf_r+0x28c>
    5530:	46a3      	mov	fp, r4
    5532:	4698      	mov	r8, r3
    5534:	0014      	movs	r4, r2
    5536:	464b      	mov	r3, r9
    5538:	6075      	str	r5, [r6, #4]
    553a:	6033      	str	r3, [r6, #0]
    553c:	1964      	adds	r4, r4, r5
    553e:	e4f7      	b.n	4f30 <_vfprintf_r+0x924>
    5540:	003a      	movs	r2, r7
    5542:	4659      	mov	r1, fp
    5544:	9806      	ldr	r0, [sp, #24]
    5546:	f003 fac3 	bl	8ad0 <__sprint_r>
    554a:	2800      	cmp	r0, #0
    554c:	d000      	beq.n	5550 <_vfprintf_r+0xf44>
    554e:	e5ed      	b.n	512c <_vfprintf_r+0xb20>
    5550:	687b      	ldr	r3, [r7, #4]
    5552:	68bc      	ldr	r4, [r7, #8]
    5554:	4698      	mov	r8, r3
    5556:	ae32      	add	r6, sp, #200	; 0xc8
    5558:	e4da      	b.n	4f10 <_vfprintf_r+0x904>
    555a:	2207      	movs	r2, #7
    555c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    555e:	3307      	adds	r3, #7
    5560:	4393      	bics	r3, r2
    5562:	3201      	adds	r2, #1
    5564:	4694      	mov	ip, r2
    5566:	449c      	add	ip, r3
    5568:	4662      	mov	r2, ip
    556a:	920f      	str	r2, [sp, #60]	; 0x3c
    556c:	681a      	ldr	r2, [r3, #0]
    556e:	685b      	ldr	r3, [r3, #4]
    5570:	0011      	movs	r1, r2
    5572:	001a      	movs	r2, r3
    5574:	0008      	movs	r0, r1
    5576:	4310      	orrs	r0, r2
    5578:	910c      	str	r1, [sp, #48]	; 0x30
    557a:	920d      	str	r2, [sp, #52]	; 0x34
    557c:	2301      	movs	r3, #1
    557e:	0002      	movs	r2, r0
    5580:	f7ff f98a 	bl	4898 <_vfprintf_r+0x28c>
    5584:	2207      	movs	r2, #7
    5586:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5588:	3307      	adds	r3, #7
    558a:	4393      	bics	r3, r2
    558c:	3201      	adds	r2, #1
    558e:	4694      	mov	ip, r2
    5590:	449c      	add	ip, r3
    5592:	4662      	mov	r2, ip
    5594:	920f      	str	r2, [sp, #60]	; 0x3c
    5596:	681a      	ldr	r2, [r3, #0]
    5598:	685b      	ldr	r3, [r3, #4]
    559a:	920c      	str	r2, [sp, #48]	; 0x30
    559c:	930d      	str	r3, [sp, #52]	; 0x34
    559e:	f7ff f966 	bl	486e <_vfprintf_r+0x262>
    55a2:	003a      	movs	r2, r7
    55a4:	4659      	mov	r1, fp
    55a6:	9806      	ldr	r0, [sp, #24]
    55a8:	f003 fa92 	bl	8ad0 <__sprint_r>
    55ac:	2800      	cmp	r0, #0
    55ae:	d000      	beq.n	55b2 <_vfprintf_r+0xfa6>
    55b0:	e5bc      	b.n	512c <_vfprintf_r+0xb20>
    55b2:	68bc      	ldr	r4, [r7, #8]
    55b4:	ae32      	add	r6, sp, #200	; 0xc8
    55b6:	f7ff fbe2 	bl	4d7e <_vfprintf_r+0x772>
    55ba:	46c0      	nop			; (mov r8, r8)
    55bc:	00009e34 	.word	0x00009e34
    55c0:	980c      	ldr	r0, [sp, #48]	; 0x30
    55c2:	990d      	ldr	r1, [sp, #52]	; 0x34
    55c4:	2300      	movs	r3, #0
    55c6:	4242      	negs	r2, r0
    55c8:	418b      	sbcs	r3, r1
    55ca:	0011      	movs	r1, r2
    55cc:	001a      	movs	r2, r3
    55ce:	232d      	movs	r3, #45	; 0x2d
    55d0:	a816      	add	r0, sp, #88	; 0x58
    55d2:	77c3      	strb	r3, [r0, #31]
    55d4:	0008      	movs	r0, r1
    55d6:	4310      	orrs	r0, r2
    55d8:	910c      	str	r1, [sp, #48]	; 0x30
    55da:	920d      	str	r2, [sp, #52]	; 0x34
    55dc:	4698      	mov	r8, r3
    55de:	0002      	movs	r2, r0
    55e0:	3b2c      	subs	r3, #44	; 0x2c
    55e2:	f7ff f95d 	bl	48a0 <_vfprintf_r+0x294>
    55e6:	9916      	ldr	r1, [sp, #88]	; 0x58
    55e8:	9d15      	ldr	r5, [sp, #84]	; 0x54
    55ea:	000a      	movs	r2, r1
    55ec:	0008      	movs	r0, r1
    55ee:	002b      	movs	r3, r5
    55f0:	0029      	movs	r1, r5
    55f2:	f004 f927 	bl	9844 <__aeabi_dcmpun>
    55f6:	2800      	cmp	r0, #0
    55f8:	d000      	beq.n	55fc <_vfprintf_r+0xff0>
    55fa:	e2c6      	b.n	5b8a <_vfprintf_r+0x157e>
    55fc:	4653      	mov	r3, sl
    55fe:	3301      	adds	r3, #1
    5600:	d100      	bne.n	5604 <_vfprintf_r+0xff8>
    5602:	e09f      	b.n	5744 <_vfprintf_r+0x1138>
    5604:	2320      	movs	r3, #32
    5606:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5608:	439a      	bics	r2, r3
    560a:	920e      	str	r2, [sp, #56]	; 0x38
    560c:	2a47      	cmp	r2, #71	; 0x47
    560e:	d100      	bne.n	5612 <_vfprintf_r+0x1006>
    5610:	e1a1      	b.n	5956 <_vfprintf_r+0x134a>
    5612:	2380      	movs	r3, #128	; 0x80
    5614:	005b      	lsls	r3, r3, #1
    5616:	4323      	orrs	r3, r4
    5618:	9309      	str	r3, [sp, #36]	; 0x24
    561a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    561c:	2b00      	cmp	r3, #0
    561e:	da00      	bge.n	5622 <_vfprintf_r+0x1016>
    5620:	e1ed      	b.n	59fe <_vfprintf_r+0x13f2>
    5622:	9a16      	ldr	r2, [sp, #88]	; 0x58
    5624:	9308      	str	r3, [sp, #32]
    5626:	2300      	movs	r3, #0
    5628:	4691      	mov	r9, r2
    562a:	9310      	str	r3, [sp, #64]	; 0x40
    562c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    562e:	2b66      	cmp	r3, #102	; 0x66
    5630:	d100      	bne.n	5634 <_vfprintf_r+0x1028>
    5632:	e1b8      	b.n	59a6 <_vfprintf_r+0x139a>
    5634:	2b46      	cmp	r3, #70	; 0x46
    5636:	d100      	bne.n	563a <_vfprintf_r+0x102e>
    5638:	e237      	b.n	5aaa <_vfprintf_r+0x149e>
    563a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    563c:	9806      	ldr	r0, [sp, #24]
    563e:	3a45      	subs	r2, #69	; 0x45
    5640:	0013      	movs	r3, r2
    5642:	4259      	negs	r1, r3
    5644:	4159      	adcs	r1, r3
    5646:	ab20      	add	r3, sp, #128	; 0x80
    5648:	000d      	movs	r5, r1
    564a:	9303      	str	r3, [sp, #12]
    564c:	ab1f      	add	r3, sp, #124	; 0x7c
    564e:	9302      	str	r3, [sp, #8]
    5650:	2302      	movs	r3, #2
    5652:	aa23      	add	r2, sp, #140	; 0x8c
    5654:	4455      	add	r5, sl
    5656:	921b      	str	r2, [sp, #108]	; 0x6c
    5658:	9204      	str	r2, [sp, #16]
    565a:	9300      	str	r3, [sp, #0]
    565c:	9501      	str	r5, [sp, #4]
    565e:	9b08      	ldr	r3, [sp, #32]
    5660:	464a      	mov	r2, r9
    5662:	f000 fcab 	bl	5fbc <_dtoa_r>
    5666:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5668:	9011      	str	r0, [sp, #68]	; 0x44
    566a:	2b67      	cmp	r3, #103	; 0x67
    566c:	d000      	beq.n	5670 <_vfprintf_r+0x1064>
    566e:	e20b      	b.n	5a88 <_vfprintf_r+0x147c>
    5670:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5672:	4698      	mov	r8, r3
    5674:	44a8      	add	r8, r5
    5676:	07e3      	lsls	r3, r4, #31
    5678:	d400      	bmi.n	567c <_vfprintf_r+0x1070>
    567a:	e277      	b.n	5b6c <_vfprintf_r+0x1560>
    567c:	2300      	movs	r3, #0
    567e:	2200      	movs	r2, #0
    5680:	4648      	mov	r0, r9
    5682:	9908      	ldr	r1, [sp, #32]
    5684:	f7fe fc9c 	bl	3fc0 <__aeabi_dcmpeq>
    5688:	4643      	mov	r3, r8
    568a:	2800      	cmp	r0, #0
    568c:	d10a      	bne.n	56a4 <_vfprintf_r+0x1098>
    568e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5690:	4543      	cmp	r3, r8
    5692:	d207      	bcs.n	56a4 <_vfprintf_r+0x1098>
    5694:	2130      	movs	r1, #48	; 0x30
    5696:	4640      	mov	r0, r8
    5698:	1c5a      	adds	r2, r3, #1
    569a:	9223      	str	r2, [sp, #140]	; 0x8c
    569c:	7019      	strb	r1, [r3, #0]
    569e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    56a0:	4298      	cmp	r0, r3
    56a2:	d8f9      	bhi.n	5698 <_vfprintf_r+0x108c>
    56a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
    56a6:	1a9b      	subs	r3, r3, r2
    56a8:	9314      	str	r3, [sp, #80]	; 0x50
    56aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    56ac:	2b47      	cmp	r3, #71	; 0x47
    56ae:	d100      	bne.n	56b2 <_vfprintf_r+0x10a6>
    56b0:	e0d0      	b.n	5854 <_vfprintf_r+0x1248>
    56b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    56b4:	2b65      	cmp	r3, #101	; 0x65
    56b6:	dc00      	bgt.n	56ba <_vfprintf_r+0x10ae>
    56b8:	e2d5      	b.n	5c66 <_vfprintf_r+0x165a>
    56ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
    56bc:	2b66      	cmp	r3, #102	; 0x66
    56be:	d100      	bne.n	56c2 <_vfprintf_r+0x10b6>
    56c0:	e1c6      	b.n	5a50 <_vfprintf_r+0x1444>
    56c2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    56c4:	9313      	str	r3, [sp, #76]	; 0x4c
    56c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
    56c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    56ca:	0019      	movs	r1, r3
    56cc:	4291      	cmp	r1, r2
    56ce:	dd00      	ble.n	56d2 <_vfprintf_r+0x10c6>
    56d0:	e1a0      	b.n	5a14 <_vfprintf_r+0x1408>
    56d2:	07e3      	lsls	r3, r4, #31
    56d4:	d500      	bpl.n	56d8 <_vfprintf_r+0x10cc>
    56d6:	e242      	b.n	5b5e <_vfprintf_r+0x1552>
    56d8:	43d3      	mvns	r3, r2
    56da:	17db      	asrs	r3, r3, #31
    56dc:	0011      	movs	r1, r2
    56de:	401a      	ands	r2, r3
    56e0:	2367      	movs	r3, #103	; 0x67
    56e2:	9208      	str	r2, [sp, #32]
    56e4:	910e      	str	r1, [sp, #56]	; 0x38
    56e6:	9312      	str	r3, [sp, #72]	; 0x48
    56e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    56ea:	2b00      	cmp	r3, #0
    56ec:	d000      	beq.n	56f0 <_vfprintf_r+0x10e4>
    56ee:	e0a9      	b.n	5844 <_vfprintf_r+0x1238>
    56f0:	ab16      	add	r3, sp, #88	; 0x58
    56f2:	7fdb      	ldrb	r3, [r3, #31]
    56f4:	4698      	mov	r8, r3
    56f6:	2300      	movs	r3, #0
    56f8:	469a      	mov	sl, r3
    56fa:	f7ff f8fc 	bl	48f6 <_vfprintf_r+0x2ea>
    56fe:	46cb      	mov	fp, r9
    5700:	46a1      	mov	r9, r4
    5702:	0014      	movs	r4, r2
    5704:	e637      	b.n	5376 <_vfprintf_r+0xd6a>
    5706:	464b      	mov	r3, r9
    5708:	6d98      	ldr	r0, [r3, #88]	; 0x58
    570a:	f002 f861 	bl	77d0 <__retarget_lock_release_recursive>
    570e:	2301      	movs	r3, #1
    5710:	425b      	negs	r3, r3
    5712:	930a      	str	r3, [sp, #40]	; 0x28
    5714:	f7ff f82b 	bl	476e <_vfprintf_r+0x162>
    5718:	9a09      	ldr	r2, [sp, #36]	; 0x24
    571a:	07d2      	lsls	r2, r2, #31
    571c:	d400      	bmi.n	5720 <_vfprintf_r+0x1114>
    571e:	e68f      	b.n	5440 <_vfprintf_r+0xe34>
    5720:	e680      	b.n	5424 <_vfprintf_r+0xe18>
    5722:	3608      	adds	r6, #8
    5724:	e679      	b.n	541a <_vfprintf_r+0xe0e>
    5726:	68bc      	ldr	r4, [r7, #8]
    5728:	f7ff fb73 	bl	4e12 <_vfprintf_r+0x806>
    572c:	003a      	movs	r2, r7
    572e:	4659      	mov	r1, fp
    5730:	9806      	ldr	r0, [sp, #24]
    5732:	f003 f9cd 	bl	8ad0 <__sprint_r>
    5736:	2800      	cmp	r0, #0
    5738:	d000      	beq.n	573c <_vfprintf_r+0x1130>
    573a:	e4f7      	b.n	512c <_vfprintf_r+0xb20>
    573c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    573e:	68bc      	ldr	r4, [r7, #8]
    5740:	ae32      	add	r6, sp, #200	; 0xc8
    5742:	e67d      	b.n	5440 <_vfprintf_r+0xe34>
    5744:	2320      	movs	r3, #32
    5746:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5748:	439a      	bics	r2, r3
    574a:	3b1a      	subs	r3, #26
    574c:	920e      	str	r2, [sp, #56]	; 0x38
    574e:	469a      	mov	sl, r3
    5750:	e75f      	b.n	5612 <_vfprintf_r+0x1006>
    5752:	232d      	movs	r3, #45	; 0x2d
    5754:	aa16      	add	r2, sp, #88	; 0x58
    5756:	77d3      	strb	r3, [r2, #31]
    5758:	4698      	mov	r8, r3
    575a:	f7ff faa8 	bl	4cae <_vfprintf_r+0x6a2>
    575e:	003a      	movs	r2, r7
    5760:	4659      	mov	r1, fp
    5762:	9806      	ldr	r0, [sp, #24]
    5764:	f003 f9b4 	bl	8ad0 <__sprint_r>
    5768:	2800      	cmp	r0, #0
    576a:	d000      	beq.n	576e <_vfprintf_r+0x1162>
    576c:	e4de      	b.n	512c <_vfprintf_r+0xb20>
    576e:	ae32      	add	r6, sp, #200	; 0xc8
    5770:	e419      	b.n	4fa6 <_vfprintf_r+0x99a>
    5772:	4be3      	ldr	r3, [pc, #908]	; (5b00 <_vfprintf_r+0x14f4>)
    5774:	3401      	adds	r4, #1
    5776:	6033      	str	r3, [r6, #0]
    5778:	2301      	movs	r3, #1
    577a:	6073      	str	r3, [r6, #4]
    577c:	687b      	ldr	r3, [r7, #4]
    577e:	60bc      	str	r4, [r7, #8]
    5780:	3301      	adds	r3, #1
    5782:	607b      	str	r3, [r7, #4]
    5784:	2b07      	cmp	r3, #7
    5786:	dd00      	ble.n	578a <_vfprintf_r+0x117e>
    5788:	e155      	b.n	5a36 <_vfprintf_r+0x142a>
    578a:	3608      	adds	r6, #8
    578c:	2800      	cmp	r0, #0
    578e:	d107      	bne.n	57a0 <_vfprintf_r+0x1194>
    5790:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5792:	2b00      	cmp	r3, #0
    5794:	d104      	bne.n	57a0 <_vfprintf_r+0x1194>
    5796:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5798:	07db      	lsls	r3, r3, #31
    579a:	d401      	bmi.n	57a0 <_vfprintf_r+0x1194>
    579c:	f7ff fb39 	bl	4e12 <_vfprintf_r+0x806>
    57a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
    57a2:	6033      	str	r3, [r6, #0]
    57a4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    57a6:	1919      	adds	r1, r3, r4
    57a8:	6073      	str	r3, [r6, #4]
    57aa:	687b      	ldr	r3, [r7, #4]
    57ac:	60b9      	str	r1, [r7, #8]
    57ae:	3301      	adds	r3, #1
    57b0:	607b      	str	r3, [r7, #4]
    57b2:	2b07      	cmp	r3, #7
    57b4:	dd00      	ble.n	57b8 <_vfprintf_r+0x11ac>
    57b6:	e1c4      	b.n	5b42 <_vfprintf_r+0x1536>
    57b8:	0032      	movs	r2, r6
    57ba:	3208      	adds	r2, #8
    57bc:	2800      	cmp	r0, #0
    57be:	da00      	bge.n	57c2 <_vfprintf_r+0x11b6>
    57c0:	e195      	b.n	5aee <_vfprintf_r+0x14e2>
    57c2:	9811      	ldr	r0, [sp, #68]	; 0x44
    57c4:	3301      	adds	r3, #1
    57c6:	6010      	str	r0, [r2, #0]
    57c8:	9814      	ldr	r0, [sp, #80]	; 0x50
    57ca:	607b      	str	r3, [r7, #4]
    57cc:	1844      	adds	r4, r0, r1
    57ce:	6050      	str	r0, [r2, #4]
    57d0:	60bc      	str	r4, [r7, #8]
    57d2:	2b07      	cmp	r3, #7
    57d4:	dd01      	ble.n	57da <_vfprintf_r+0x11ce>
    57d6:	f7ff fbc2 	bl	4f5e <_vfprintf_r+0x952>
    57da:	3208      	adds	r2, #8
    57dc:	0016      	movs	r6, r2
    57de:	f7ff fb18 	bl	4e12 <_vfprintf_r+0x806>
    57e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
    57e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    57e6:	680b      	ldr	r3, [r1, #0]
    57e8:	601a      	str	r2, [r3, #0]
    57ea:	17d2      	asrs	r2, r2, #31
    57ec:	605a      	str	r2, [r3, #4]
    57ee:	000b      	movs	r3, r1
    57f0:	3304      	adds	r3, #4
    57f2:	930f      	str	r3, [sp, #60]	; 0x3c
    57f4:	f7fe ff58 	bl	46a8 <_vfprintf_r+0x9c>
    57f8:	464b      	mov	r3, r9
    57fa:	9a07      	ldr	r2, [sp, #28]
    57fc:	431c      	orrs	r4, r3
    57fe:	3201      	adds	r2, #1
    5800:	7813      	ldrb	r3, [r2, #0]
    5802:	9207      	str	r2, [sp, #28]
    5804:	f7fe ff8b 	bl	471e <_vfprintf_r+0x112>
    5808:	003a      	movs	r2, r7
    580a:	4659      	mov	r1, fp
    580c:	9806      	ldr	r0, [sp, #24]
    580e:	f003 f95f 	bl	8ad0 <__sprint_r>
    5812:	2800      	cmp	r0, #0
    5814:	d000      	beq.n	5818 <_vfprintf_r+0x120c>
    5816:	e489      	b.n	512c <_vfprintf_r+0xb20>
    5818:	68bc      	ldr	r4, [r7, #8]
    581a:	ae32      	add	r6, sp, #200	; 0xc8
    581c:	f7ff fbdc 	bl	4fd8 <_vfprintf_r+0x9cc>
    5820:	4bb8      	ldr	r3, [pc, #736]	; (5b04 <_vfprintf_r+0x14f8>)
    5822:	9311      	str	r3, [sp, #68]	; 0x44
    5824:	f7ff fa4a 	bl	4cbc <_vfprintf_r+0x6b0>
    5828:	9a11      	ldr	r2, [sp, #68]	; 0x44
    582a:	ab32      	add	r3, sp, #200	; 0xc8
    582c:	1a9b      	subs	r3, r3, r2
    582e:	930e      	str	r3, [sp, #56]	; 0x38
    5830:	f7ff f859 	bl	48e6 <_vfprintf_r+0x2da>
    5834:	9811      	ldr	r0, [sp, #68]	; 0x44
    5836:	f7fe feb7 	bl	45a8 <strlen>
    583a:	0002      	movs	r2, r0
    583c:	900e      	str	r0, [sp, #56]	; 0x38
    583e:	0003      	movs	r3, r0
    5840:	f7ff f9a1 	bl	4b86 <_vfprintf_r+0x57a>
    5844:	232d      	movs	r3, #45	; 0x2d
    5846:	aa16      	add	r2, sp, #88	; 0x58
    5848:	77d3      	strb	r3, [r2, #31]
    584a:	4698      	mov	r8, r3
    584c:	2300      	movs	r3, #0
    584e:	469a      	mov	sl, r3
    5850:	f7ff f854 	bl	48fc <_vfprintf_r+0x2f0>
    5854:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5856:	9313      	str	r3, [sp, #76]	; 0x4c
    5858:	1cda      	adds	r2, r3, #3
    585a:	db02      	blt.n	5862 <_vfprintf_r+0x1256>
    585c:	459a      	cmp	sl, r3
    585e:	db00      	blt.n	5862 <_vfprintf_r+0x1256>
    5860:	e731      	b.n	56c6 <_vfprintf_r+0x10ba>
    5862:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5864:	3b02      	subs	r3, #2
    5866:	9312      	str	r3, [sp, #72]	; 0x48
    5868:	222c      	movs	r2, #44	; 0x2c
    586a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    586c:	2148      	movs	r1, #72	; 0x48
    586e:	1e5d      	subs	r5, r3, #1
    5870:	ab16      	add	r3, sp, #88	; 0x58
    5872:	189b      	adds	r3, r3, r2
    5874:	466a      	mov	r2, sp
    5876:	1852      	adds	r2, r2, r1
    5878:	7812      	ldrb	r2, [r2, #0]
    587a:	951f      	str	r5, [sp, #124]	; 0x7c
    587c:	701a      	strb	r2, [r3, #0]
    587e:	2d00      	cmp	r5, #0
    5880:	da00      	bge.n	5884 <_vfprintf_r+0x1278>
    5882:	e1cb      	b.n	5c1c <_vfprintf_r+0x1610>
    5884:	212d      	movs	r1, #45	; 0x2d
    5886:	232b      	movs	r3, #43	; 0x2b
    5888:	aa16      	add	r2, sp, #88	; 0x58
    588a:	1852      	adds	r2, r2, r1
    588c:	7013      	strb	r3, [r2, #0]
    588e:	2d09      	cmp	r5, #9
    5890:	dc00      	bgt.n	5894 <_vfprintf_r+0x1288>
    5892:	e16d      	b.n	5b70 <_vfprintf_r+0x1564>
    5894:	aa16      	add	r2, sp, #88	; 0x58
    5896:	233b      	movs	r3, #59	; 0x3b
    5898:	4694      	mov	ip, r2
    589a:	4463      	add	r3, ip
    589c:	469a      	mov	sl, r3
    589e:	46b1      	mov	r9, r6
    58a0:	46a0      	mov	r8, r4
    58a2:	4656      	mov	r6, sl
    58a4:	e000      	b.n	58a8 <_vfprintf_r+0x129c>
    58a6:	0026      	movs	r6, r4
    58a8:	0028      	movs	r0, r5
    58aa:	210a      	movs	r1, #10
    58ac:	f003 fcb6 	bl	921c <__aeabi_idivmod>
    58b0:	1e74      	subs	r4, r6, #1
    58b2:	3130      	adds	r1, #48	; 0x30
    58b4:	7021      	strb	r1, [r4, #0]
    58b6:	0028      	movs	r0, r5
    58b8:	210a      	movs	r1, #10
    58ba:	f003 fbc9 	bl	9050 <__divsi3>
    58be:	0005      	movs	r5, r0
    58c0:	2809      	cmp	r0, #9
    58c2:	dcf0      	bgt.n	58a6 <_vfprintf_r+0x129a>
    58c4:	0023      	movs	r3, r4
    58c6:	4644      	mov	r4, r8
    58c8:	46b0      	mov	r8, r6
    58ca:	464e      	mov	r6, r9
    58cc:	4699      	mov	r9, r3
    58ce:	0003      	movs	r3, r0
    58d0:	3330      	adds	r3, #48	; 0x30
    58d2:	b2d8      	uxtb	r0, r3
    58d4:	4643      	mov	r3, r8
    58d6:	3b02      	subs	r3, #2
    58d8:	7018      	strb	r0, [r3, #0]
    58da:	459a      	cmp	sl, r3
    58dc:	d800      	bhi.n	58e0 <_vfprintf_r+0x12d4>
    58de:	e1f6      	b.n	5cce <_vfprintf_r+0x16c2>
    58e0:	4642      	mov	r2, r8
    58e2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    58e4:	4645      	mov	r5, r8
    58e6:	1a99      	subs	r1, r3, r2
    58e8:	2301      	movs	r3, #1
    58ea:	3107      	adds	r1, #7
    58ec:	425b      	negs	r3, r3
    58ee:	e001      	b.n	58f4 <_vfprintf_r+0x12e8>
    58f0:	5ce8      	ldrb	r0, [r5, r3]
    58f2:	3301      	adds	r3, #1
    58f4:	aa21      	add	r2, sp, #132	; 0x84
    58f6:	18d2      	adds	r2, r2, r3
    58f8:	70d0      	strb	r0, [r2, #3]
    58fa:	428b      	cmp	r3, r1
    58fc:	d1f8      	bne.n	58f0 <_vfprintf_r+0x12e4>
    58fe:	a916      	add	r1, sp, #88	; 0x58
    5900:	468c      	mov	ip, r1
    5902:	222e      	movs	r2, #46	; 0x2e
    5904:	464b      	mov	r3, r9
    5906:	4462      	add	r2, ip
    5908:	4694      	mov	ip, r2
    590a:	1afb      	subs	r3, r7, r3
    590c:	4463      	add	r3, ip
    590e:	aa21      	add	r2, sp, #132	; 0x84
    5910:	9914      	ldr	r1, [sp, #80]	; 0x50
    5912:	1a9b      	subs	r3, r3, r2
    5914:	469c      	mov	ip, r3
    5916:	000a      	movs	r2, r1
    5918:	4462      	add	r2, ip
    591a:	931a      	str	r3, [sp, #104]	; 0x68
    591c:	920e      	str	r2, [sp, #56]	; 0x38
    591e:	2901      	cmp	r1, #1
    5920:	dc00      	bgt.n	5924 <_vfprintf_r+0x1318>
    5922:	e170      	b.n	5c06 <_vfprintf_r+0x15fa>
    5924:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5926:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5928:	4694      	mov	ip, r2
    592a:	4463      	add	r3, ip
    592c:	001a      	movs	r2, r3
    592e:	930e      	str	r3, [sp, #56]	; 0x38
    5930:	43db      	mvns	r3, r3
    5932:	17db      	asrs	r3, r3, #31
    5934:	401a      	ands	r2, r3
    5936:	2300      	movs	r3, #0
    5938:	9208      	str	r2, [sp, #32]
    593a:	9313      	str	r3, [sp, #76]	; 0x4c
    593c:	e6d4      	b.n	56e8 <_vfprintf_r+0x10dc>
    593e:	003a      	movs	r2, r7
    5940:	4659      	mov	r1, fp
    5942:	9806      	ldr	r0, [sp, #24]
    5944:	f003 f8c4 	bl	8ad0 <__sprint_r>
    5948:	2800      	cmp	r0, #0
    594a:	d001      	beq.n	5950 <_vfprintf_r+0x1344>
    594c:	f7ff fbee 	bl	512c <_vfprintf_r+0xb20>
    5950:	68bc      	ldr	r4, [r7, #8]
    5952:	ae32      	add	r6, sp, #200	; 0xc8
    5954:	e46a      	b.n	522c <_vfprintf_r+0xc20>
    5956:	4653      	mov	r3, sl
    5958:	2b00      	cmp	r3, #0
    595a:	d000      	beq.n	595e <_vfprintf_r+0x1352>
    595c:	e659      	b.n	5612 <_vfprintf_r+0x1006>
    595e:	3301      	adds	r3, #1
    5960:	469a      	mov	sl, r3
    5962:	e656      	b.n	5612 <_vfprintf_r+0x1006>
    5964:	4653      	mov	r3, sl
    5966:	9308      	str	r3, [sp, #32]
    5968:	2b06      	cmp	r3, #6
    596a:	d901      	bls.n	5970 <_vfprintf_r+0x1364>
    596c:	2306      	movs	r3, #6
    596e:	9308      	str	r3, [sp, #32]
    5970:	9b08      	ldr	r3, [sp, #32]
    5972:	950f      	str	r5, [sp, #60]	; 0x3c
    5974:	930e      	str	r3, [sp, #56]	; 0x38
    5976:	2300      	movs	r3, #0
    5978:	4698      	mov	r8, r3
    597a:	469a      	mov	sl, r3
    597c:	9313      	str	r3, [sp, #76]	; 0x4c
    597e:	4b62      	ldr	r3, [pc, #392]	; (5b08 <_vfprintf_r+0x14fc>)
    5980:	9409      	str	r4, [sp, #36]	; 0x24
    5982:	9311      	str	r3, [sp, #68]	; 0x44
    5984:	f7fe ffbd 	bl	4902 <_vfprintf_r+0x2f6>
    5988:	003a      	movs	r2, r7
    598a:	4659      	mov	r1, fp
    598c:	9806      	ldr	r0, [sp, #24]
    598e:	f003 f89f 	bl	8ad0 <__sprint_r>
    5992:	2800      	cmp	r0, #0
    5994:	d001      	beq.n	599a <_vfprintf_r+0x138e>
    5996:	f7ff fbc9 	bl	512c <_vfprintf_r+0xb20>
    599a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    599c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    599e:	68bc      	ldr	r4, [r7, #8]
    59a0:	1a9b      	subs	r3, r3, r2
    59a2:	ae32      	add	r6, sp, #200	; 0xc8
    59a4:	e567      	b.n	5476 <_vfprintf_r+0xe6a>
    59a6:	ab23      	add	r3, sp, #140	; 0x8c
    59a8:	931b      	str	r3, [sp, #108]	; 0x6c
    59aa:	9304      	str	r3, [sp, #16]
    59ac:	ab20      	add	r3, sp, #128	; 0x80
    59ae:	9303      	str	r3, [sp, #12]
    59b0:	ab1f      	add	r3, sp, #124	; 0x7c
    59b2:	9302      	str	r3, [sp, #8]
    59b4:	4653      	mov	r3, sl
    59b6:	9301      	str	r3, [sp, #4]
    59b8:	2303      	movs	r3, #3
    59ba:	464a      	mov	r2, r9
    59bc:	9300      	str	r3, [sp, #0]
    59be:	9806      	ldr	r0, [sp, #24]
    59c0:	9b08      	ldr	r3, [sp, #32]
    59c2:	f000 fafb 	bl	5fbc <_dtoa_r>
    59c6:	0003      	movs	r3, r0
    59c8:	4453      	add	r3, sl
    59ca:	4698      	mov	r8, r3
    59cc:	4655      	mov	r5, sl
    59ce:	9011      	str	r0, [sp, #68]	; 0x44
    59d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    59d2:	781b      	ldrb	r3, [r3, #0]
    59d4:	2b30      	cmp	r3, #48	; 0x30
    59d6:	d002      	beq.n	59de <_vfprintf_r+0x13d2>
    59d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    59da:	4498      	add	r8, r3
    59dc:	e64e      	b.n	567c <_vfprintf_r+0x1070>
    59de:	2200      	movs	r2, #0
    59e0:	2300      	movs	r3, #0
    59e2:	4648      	mov	r0, r9
    59e4:	9908      	ldr	r1, [sp, #32]
    59e6:	f7fe faeb 	bl	3fc0 <__aeabi_dcmpeq>
    59ea:	2800      	cmp	r0, #0
    59ec:	d1f4      	bne.n	59d8 <_vfprintf_r+0x13cc>
    59ee:	2301      	movs	r3, #1
    59f0:	1b5b      	subs	r3, r3, r5
    59f2:	931f      	str	r3, [sp, #124]	; 0x7c
    59f4:	4498      	add	r8, r3
    59f6:	e641      	b.n	567c <_vfprintf_r+0x1070>
    59f8:	46c1      	mov	r9, r8
    59fa:	f7ff fb1f 	bl	503c <_vfprintf_r+0xa30>
    59fe:	2280      	movs	r2, #128	; 0x80
    5a00:	0612      	lsls	r2, r2, #24
    5a02:	4694      	mov	ip, r2
    5a04:	9b16      	ldr	r3, [sp, #88]	; 0x58
    5a06:	4699      	mov	r9, r3
    5a08:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5a0a:	4463      	add	r3, ip
    5a0c:	9308      	str	r3, [sp, #32]
    5a0e:	232d      	movs	r3, #45	; 0x2d
    5a10:	9310      	str	r3, [sp, #64]	; 0x40
    5a12:	e60b      	b.n	562c <_vfprintf_r+0x1020>
    5a14:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5a16:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5a18:	4694      	mov	ip, r2
    5a1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5a1c:	4463      	add	r3, ip
    5a1e:	930e      	str	r3, [sp, #56]	; 0x38
    5a20:	2a00      	cmp	r2, #0
    5a22:	dc00      	bgt.n	5a26 <_vfprintf_r+0x141a>
    5a24:	e0e3      	b.n	5bee <_vfprintf_r+0x15e2>
    5a26:	001a      	movs	r2, r3
    5a28:	43db      	mvns	r3, r3
    5a2a:	17db      	asrs	r3, r3, #31
    5a2c:	401a      	ands	r2, r3
    5a2e:	2367      	movs	r3, #103	; 0x67
    5a30:	9208      	str	r2, [sp, #32]
    5a32:	9312      	str	r3, [sp, #72]	; 0x48
    5a34:	e658      	b.n	56e8 <_vfprintf_r+0x10dc>
    5a36:	003a      	movs	r2, r7
    5a38:	4659      	mov	r1, fp
    5a3a:	9806      	ldr	r0, [sp, #24]
    5a3c:	f003 f848 	bl	8ad0 <__sprint_r>
    5a40:	2800      	cmp	r0, #0
    5a42:	d001      	beq.n	5a48 <_vfprintf_r+0x143c>
    5a44:	f7ff fb72 	bl	512c <_vfprintf_r+0xb20>
    5a48:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5a4a:	68bc      	ldr	r4, [r7, #8]
    5a4c:	ae32      	add	r6, sp, #200	; 0xc8
    5a4e:	e69d      	b.n	578c <_vfprintf_r+0x1180>
    5a50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5a52:	9313      	str	r3, [sp, #76]	; 0x4c
    5a54:	2b00      	cmp	r3, #0
    5a56:	dc00      	bgt.n	5a5a <_vfprintf_r+0x144e>
    5a58:	e0f2      	b.n	5c40 <_vfprintf_r+0x1634>
    5a5a:	4652      	mov	r2, sl
    5a5c:	2a00      	cmp	r2, #0
    5a5e:	d000      	beq.n	5a62 <_vfprintf_r+0x1456>
    5a60:	e0a0      	b.n	5ba4 <_vfprintf_r+0x1598>
    5a62:	07e2      	lsls	r2, r4, #31
    5a64:	d500      	bpl.n	5a68 <_vfprintf_r+0x145c>
    5a66:	e09d      	b.n	5ba4 <_vfprintf_r+0x1598>
    5a68:	9308      	str	r3, [sp, #32]
    5a6a:	930e      	str	r3, [sp, #56]	; 0x38
    5a6c:	e63c      	b.n	56e8 <_vfprintf_r+0x10dc>
    5a6e:	ab16      	add	r3, sp, #88	; 0x58
    5a70:	7fdb      	ldrb	r3, [r3, #31]
    5a72:	950f      	str	r5, [sp, #60]	; 0x3c
    5a74:	4698      	mov	r8, r3
    5a76:	4653      	mov	r3, sl
    5a78:	9308      	str	r3, [sp, #32]
    5a7a:	930e      	str	r3, [sp, #56]	; 0x38
    5a7c:	2300      	movs	r3, #0
    5a7e:	9409      	str	r4, [sp, #36]	; 0x24
    5a80:	469a      	mov	sl, r3
    5a82:	9313      	str	r3, [sp, #76]	; 0x4c
    5a84:	f7fe ff37 	bl	48f6 <_vfprintf_r+0x2ea>
    5a88:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5a8a:	4698      	mov	r8, r3
    5a8c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5a8e:	44a8      	add	r8, r5
    5a90:	2b47      	cmp	r3, #71	; 0x47
    5a92:	d000      	beq.n	5a96 <_vfprintf_r+0x148a>
    5a94:	e5f2      	b.n	567c <_vfprintf_r+0x1070>
    5a96:	07e3      	lsls	r3, r4, #31
    5a98:	d400      	bmi.n	5a9c <_vfprintf_r+0x1490>
    5a9a:	e0dc      	b.n	5c56 <_vfprintf_r+0x164a>
    5a9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5a9e:	4698      	mov	r8, r3
    5aa0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5aa2:	44a8      	add	r8, r5
    5aa4:	2b46      	cmp	r3, #70	; 0x46
    5aa6:	d093      	beq.n	59d0 <_vfprintf_r+0x13c4>
    5aa8:	e5e8      	b.n	567c <_vfprintf_r+0x1070>
    5aaa:	ab23      	add	r3, sp, #140	; 0x8c
    5aac:	931b      	str	r3, [sp, #108]	; 0x6c
    5aae:	9304      	str	r3, [sp, #16]
    5ab0:	ab20      	add	r3, sp, #128	; 0x80
    5ab2:	9303      	str	r3, [sp, #12]
    5ab4:	ab1f      	add	r3, sp, #124	; 0x7c
    5ab6:	9302      	str	r3, [sp, #8]
    5ab8:	4653      	mov	r3, sl
    5aba:	9301      	str	r3, [sp, #4]
    5abc:	2303      	movs	r3, #3
    5abe:	464a      	mov	r2, r9
    5ac0:	9300      	str	r3, [sp, #0]
    5ac2:	9806      	ldr	r0, [sp, #24]
    5ac4:	9b08      	ldr	r3, [sp, #32]
    5ac6:	f000 fa79 	bl	5fbc <_dtoa_r>
    5aca:	4655      	mov	r5, sl
    5acc:	9011      	str	r0, [sp, #68]	; 0x44
    5ace:	e7e5      	b.n	5a9c <_vfprintf_r+0x1490>
    5ad0:	003a      	movs	r2, r7
    5ad2:	4659      	mov	r1, fp
    5ad4:	9806      	ldr	r0, [sp, #24]
    5ad6:	f002 fffb 	bl	8ad0 <__sprint_r>
    5ada:	2800      	cmp	r0, #0
    5adc:	d101      	bne.n	5ae2 <_vfprintf_r+0x14d6>
    5ade:	f7ff faab 	bl	5038 <_vfprintf_r+0xa2c>
    5ae2:	f7ff faab 	bl	503c <_vfprintf_r+0xa30>
    5ae6:	4642      	mov	r2, r8
    5ae8:	9207      	str	r2, [sp, #28]
    5aea:	f7fe fe1b 	bl	4724 <_vfprintf_r+0x118>
    5aee:	4244      	negs	r4, r0
    5af0:	3010      	adds	r0, #16
    5af2:	db00      	blt.n	5af6 <_vfprintf_r+0x14ea>
    5af4:	e0d8      	b.n	5ca8 <_vfprintf_r+0x169c>
    5af6:	4805      	ldr	r0, [pc, #20]	; (5b0c <_vfprintf_r+0x1500>)
    5af8:	2610      	movs	r6, #16
    5afa:	0005      	movs	r5, r0
    5afc:	e00c      	b.n	5b18 <_vfprintf_r+0x150c>
    5afe:	46c0      	nop			; (mov r8, r8)
    5b00:	00009e20 	.word	0x00009e20
    5b04:	00009de4 	.word	0x00009de4
    5b08:	00009e18 	.word	0x00009e18
    5b0c:	00009e34 	.word	0x00009e34
    5b10:	3208      	adds	r2, #8
    5b12:	3c10      	subs	r4, #16
    5b14:	2c10      	cmp	r4, #16
    5b16:	dd51      	ble.n	5bbc <_vfprintf_r+0x15b0>
    5b18:	3110      	adds	r1, #16
    5b1a:	3301      	adds	r3, #1
    5b1c:	6015      	str	r5, [r2, #0]
    5b1e:	6056      	str	r6, [r2, #4]
    5b20:	60b9      	str	r1, [r7, #8]
    5b22:	607b      	str	r3, [r7, #4]
    5b24:	2b07      	cmp	r3, #7
    5b26:	ddf3      	ble.n	5b10 <_vfprintf_r+0x1504>
    5b28:	003a      	movs	r2, r7
    5b2a:	4659      	mov	r1, fp
    5b2c:	9806      	ldr	r0, [sp, #24]
    5b2e:	f002 ffcf 	bl	8ad0 <__sprint_r>
    5b32:	2800      	cmp	r0, #0
    5b34:	d001      	beq.n	5b3a <_vfprintf_r+0x152e>
    5b36:	f7ff faf9 	bl	512c <_vfprintf_r+0xb20>
    5b3a:	68b9      	ldr	r1, [r7, #8]
    5b3c:	687b      	ldr	r3, [r7, #4]
    5b3e:	aa32      	add	r2, sp, #200	; 0xc8
    5b40:	e7e7      	b.n	5b12 <_vfprintf_r+0x1506>
    5b42:	003a      	movs	r2, r7
    5b44:	4659      	mov	r1, fp
    5b46:	9806      	ldr	r0, [sp, #24]
    5b48:	f002 ffc2 	bl	8ad0 <__sprint_r>
    5b4c:	2800      	cmp	r0, #0
    5b4e:	d001      	beq.n	5b54 <_vfprintf_r+0x1548>
    5b50:	f7ff faec 	bl	512c <_vfprintf_r+0xb20>
    5b54:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5b56:	68b9      	ldr	r1, [r7, #8]
    5b58:	687b      	ldr	r3, [r7, #4]
    5b5a:	aa32      	add	r2, sp, #200	; 0xc8
    5b5c:	e62e      	b.n	57bc <_vfprintf_r+0x11b0>
    5b5e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5b60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5b62:	4694      	mov	ip, r2
    5b64:	4463      	add	r3, ip
    5b66:	001a      	movs	r2, r3
    5b68:	930e      	str	r3, [sp, #56]	; 0x38
    5b6a:	e75d      	b.n	5a28 <_vfprintf_r+0x141c>
    5b6c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5b6e:	e599      	b.n	56a4 <_vfprintf_r+0x1098>
    5b70:	212e      	movs	r1, #46	; 0x2e
    5b72:	2330      	movs	r3, #48	; 0x30
    5b74:	aa16      	add	r2, sp, #88	; 0x58
    5b76:	1852      	adds	r2, r2, r1
    5b78:	7013      	strb	r3, [r2, #0]
    5b7a:	002b      	movs	r3, r5
    5b7c:	aa16      	add	r2, sp, #88	; 0x58
    5b7e:	3101      	adds	r1, #1
    5b80:	3330      	adds	r3, #48	; 0x30
    5b82:	1852      	adds	r2, r2, r1
    5b84:	7013      	strb	r3, [r2, #0]
    5b86:	ab22      	add	r3, sp, #136	; 0x88
    5b88:	e6c1      	b.n	590e <_vfprintf_r+0x1302>
    5b8a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5b8c:	2b00      	cmp	r3, #0
    5b8e:	db52      	blt.n	5c36 <_vfprintf_r+0x162a>
    5b90:	ab16      	add	r3, sp, #88	; 0x58
    5b92:	7fdb      	ldrb	r3, [r3, #31]
    5b94:	4698      	mov	r8, r3
    5b96:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5b98:	2b47      	cmp	r3, #71	; 0x47
    5b9a:	dc48      	bgt.n	5c2e <_vfprintf_r+0x1622>
    5b9c:	4b4e      	ldr	r3, [pc, #312]	; (5cd8 <_vfprintf_r+0x16cc>)
    5b9e:	9311      	str	r3, [sp, #68]	; 0x44
    5ba0:	f7ff f88c 	bl	4cbc <_vfprintf_r+0x6b0>
    5ba4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5ba6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5ba8:	4694      	mov	ip, r2
    5baa:	4463      	add	r3, ip
    5bac:	4453      	add	r3, sl
    5bae:	001a      	movs	r2, r3
    5bb0:	930e      	str	r3, [sp, #56]	; 0x38
    5bb2:	43db      	mvns	r3, r3
    5bb4:	17db      	asrs	r3, r3, #31
    5bb6:	401a      	ands	r2, r3
    5bb8:	9208      	str	r2, [sp, #32]
    5bba:	e595      	b.n	56e8 <_vfprintf_r+0x10dc>
    5bbc:	46a9      	mov	r9, r5
    5bbe:	4648      	mov	r0, r9
    5bc0:	1909      	adds	r1, r1, r4
    5bc2:	3301      	adds	r3, #1
    5bc4:	6010      	str	r0, [r2, #0]
    5bc6:	6054      	str	r4, [r2, #4]
    5bc8:	60b9      	str	r1, [r7, #8]
    5bca:	3208      	adds	r2, #8
    5bcc:	607b      	str	r3, [r7, #4]
    5bce:	2b07      	cmp	r3, #7
    5bd0:	dc00      	bgt.n	5bd4 <_vfprintf_r+0x15c8>
    5bd2:	e5f6      	b.n	57c2 <_vfprintf_r+0x11b6>
    5bd4:	003a      	movs	r2, r7
    5bd6:	4659      	mov	r1, fp
    5bd8:	9806      	ldr	r0, [sp, #24]
    5bda:	f002 ff79 	bl	8ad0 <__sprint_r>
    5bde:	2800      	cmp	r0, #0
    5be0:	d001      	beq.n	5be6 <_vfprintf_r+0x15da>
    5be2:	f7ff faa3 	bl	512c <_vfprintf_r+0xb20>
    5be6:	68b9      	ldr	r1, [r7, #8]
    5be8:	687b      	ldr	r3, [r7, #4]
    5bea:	aa32      	add	r2, sp, #200	; 0xc8
    5bec:	e5e9      	b.n	57c2 <_vfprintf_r+0x11b6>
    5bee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5bf0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5bf2:	1a98      	subs	r0, r3, r2
    5bf4:	1c43      	adds	r3, r0, #1
    5bf6:	001a      	movs	r2, r3
    5bf8:	930e      	str	r3, [sp, #56]	; 0x38
    5bfa:	e715      	b.n	5a28 <_vfprintf_r+0x141c>
    5bfc:	4a37      	ldr	r2, [pc, #220]	; (5cdc <_vfprintf_r+0x16d0>)
    5bfe:	687b      	ldr	r3, [r7, #4]
    5c00:	4691      	mov	r9, r2
    5c02:	f7ff fbf5 	bl	53f0 <_vfprintf_r+0xde4>
    5c06:	2301      	movs	r3, #1
    5c08:	4023      	ands	r3, r4
    5c0a:	9313      	str	r3, [sp, #76]	; 0x4c
    5c0c:	d000      	beq.n	5c10 <_vfprintf_r+0x1604>
    5c0e:	e689      	b.n	5924 <_vfprintf_r+0x1318>
    5c10:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5c12:	43d3      	mvns	r3, r2
    5c14:	17db      	asrs	r3, r3, #31
    5c16:	401a      	ands	r2, r3
    5c18:	9208      	str	r2, [sp, #32]
    5c1a:	e565      	b.n	56e8 <_vfprintf_r+0x10dc>
    5c1c:	2301      	movs	r3, #1
    5c1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5c20:	391b      	subs	r1, #27
    5c22:	1a9d      	subs	r5, r3, r2
    5c24:	aa16      	add	r2, sp, #88	; 0x58
    5c26:	332c      	adds	r3, #44	; 0x2c
    5c28:	1852      	adds	r2, r2, r1
    5c2a:	7013      	strb	r3, [r2, #0]
    5c2c:	e62f      	b.n	588e <_vfprintf_r+0x1282>
    5c2e:	4b2c      	ldr	r3, [pc, #176]	; (5ce0 <_vfprintf_r+0x16d4>)
    5c30:	9311      	str	r3, [sp, #68]	; 0x44
    5c32:	f7ff f843 	bl	4cbc <_vfprintf_r+0x6b0>
    5c36:	232d      	movs	r3, #45	; 0x2d
    5c38:	aa16      	add	r2, sp, #88	; 0x58
    5c3a:	77d3      	strb	r3, [r2, #31]
    5c3c:	4698      	mov	r8, r3
    5c3e:	e7aa      	b.n	5b96 <_vfprintf_r+0x158a>
    5c40:	4653      	mov	r3, sl
    5c42:	2b00      	cmp	r3, #0
    5c44:	d101      	bne.n	5c4a <_vfprintf_r+0x163e>
    5c46:	07e3      	lsls	r3, r4, #31
    5c48:	d503      	bpl.n	5c52 <_vfprintf_r+0x1646>
    5c4a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    5c4c:	1c58      	adds	r0, r3, #1
    5c4e:	0003      	movs	r3, r0
    5c50:	e7ac      	b.n	5bac <_vfprintf_r+0x15a0>
    5c52:	2301      	movs	r3, #1
    5c54:	e708      	b.n	5a68 <_vfprintf_r+0x145c>
    5c56:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5c58:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5c5a:	1a9b      	subs	r3, r3, r2
    5c5c:	9314      	str	r3, [sp, #80]	; 0x50
    5c5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5c60:	2b47      	cmp	r3, #71	; 0x47
    5c62:	d100      	bne.n	5c66 <_vfprintf_r+0x165a>
    5c64:	e5f6      	b.n	5854 <_vfprintf_r+0x1248>
    5c66:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5c68:	9313      	str	r3, [sp, #76]	; 0x4c
    5c6a:	e5fd      	b.n	5868 <_vfprintf_r+0x125c>
    5c6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5c6e:	1d1d      	adds	r5, r3, #4
    5c70:	681b      	ldr	r3, [r3, #0]
    5c72:	46a8      	mov	r8, r5
    5c74:	469a      	mov	sl, r3
    5c76:	2b00      	cmp	r3, #0
    5c78:	db0a      	blt.n	5c90 <_vfprintf_r+0x1684>
    5c7a:	4645      	mov	r5, r8
    5c7c:	9b07      	ldr	r3, [sp, #28]
    5c7e:	950f      	str	r5, [sp, #60]	; 0x3c
    5c80:	785b      	ldrb	r3, [r3, #1]
    5c82:	9207      	str	r2, [sp, #28]
    5c84:	f7fe fd4b 	bl	471e <_vfprintf_r+0x112>
    5c88:	ab16      	add	r3, sp, #88	; 0x58
    5c8a:	77d8      	strb	r0, [r3, #31]
    5c8c:	f7ff f830 	bl	4cf0 <_vfprintf_r+0x6e4>
    5c90:	2301      	movs	r3, #1
    5c92:	425b      	negs	r3, r3
    5c94:	469a      	mov	sl, r3
    5c96:	e7f0      	b.n	5c7a <_vfprintf_r+0x166e>
    5c98:	ab16      	add	r3, sp, #88	; 0x58
    5c9a:	77d8      	strb	r0, [r3, #31]
    5c9c:	f7fe ff27 	bl	4aee <_vfprintf_r+0x4e2>
    5ca0:	ab16      	add	r3, sp, #88	; 0x58
    5ca2:	77d8      	strb	r0, [r3, #31]
    5ca4:	f7fe fdce 	bl	4844 <_vfprintf_r+0x238>
    5ca8:	480c      	ldr	r0, [pc, #48]	; (5cdc <_vfprintf_r+0x16d0>)
    5caa:	4681      	mov	r9, r0
    5cac:	e787      	b.n	5bbe <_vfprintf_r+0x15b2>
    5cae:	ab16      	add	r3, sp, #88	; 0x58
    5cb0:	77d8      	strb	r0, [r3, #31]
    5cb2:	f7ff f829 	bl	4d08 <_vfprintf_r+0x6fc>
    5cb6:	ab16      	add	r3, sp, #88	; 0x58
    5cb8:	77d8      	strb	r0, [r3, #31]
    5cba:	f7fe ffc3 	bl	4c44 <_vfprintf_r+0x638>
    5cbe:	ab16      	add	r3, sp, #88	; 0x58
    5cc0:	77d8      	strb	r0, [r3, #31]
    5cc2:	f7fe ffa5 	bl	4c10 <_vfprintf_r+0x604>
    5cc6:	ab16      	add	r3, sp, #88	; 0x58
    5cc8:	77d8      	strb	r0, [r3, #31]
    5cca:	f7fe feaf 	bl	4a2c <_vfprintf_r+0x420>
    5cce:	aa16      	add	r2, sp, #88	; 0x58
    5cd0:	232e      	movs	r3, #46	; 0x2e
    5cd2:	4694      	mov	ip, r2
    5cd4:	4463      	add	r3, ip
    5cd6:	e61a      	b.n	590e <_vfprintf_r+0x1302>
    5cd8:	00009de8 	.word	0x00009de8
    5cdc:	00009e34 	.word	0x00009e34
    5ce0:	00009dec 	.word	0x00009dec

00005ce4 <__sbprintf>:
    5ce4:	b5f0      	push	{r4, r5, r6, r7, lr}
    5ce6:	0015      	movs	r5, r2
    5ce8:	2202      	movs	r2, #2
    5cea:	4c1e      	ldr	r4, [pc, #120]	; (5d64 <__sbprintf+0x80>)
    5cec:	001f      	movs	r7, r3
    5cee:	898b      	ldrh	r3, [r1, #12]
    5cf0:	44a5      	add	sp, r4
    5cf2:	4393      	bics	r3, r2
    5cf4:	466a      	mov	r2, sp
    5cf6:	8193      	strh	r3, [r2, #12]
    5cf8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    5cfa:	0006      	movs	r6, r0
    5cfc:	9319      	str	r3, [sp, #100]	; 0x64
    5cfe:	89cb      	ldrh	r3, [r1, #14]
    5d00:	a816      	add	r0, sp, #88	; 0x58
    5d02:	81d3      	strh	r3, [r2, #14]
    5d04:	69cb      	ldr	r3, [r1, #28]
    5d06:	000c      	movs	r4, r1
    5d08:	9307      	str	r3, [sp, #28]
    5d0a:	6a4b      	ldr	r3, [r1, #36]	; 0x24
    5d0c:	9309      	str	r3, [sp, #36]	; 0x24
    5d0e:	ab1a      	add	r3, sp, #104	; 0x68
    5d10:	9300      	str	r3, [sp, #0]
    5d12:	9304      	str	r3, [sp, #16]
    5d14:	2380      	movs	r3, #128	; 0x80
    5d16:	00db      	lsls	r3, r3, #3
    5d18:	9302      	str	r3, [sp, #8]
    5d1a:	9305      	str	r3, [sp, #20]
    5d1c:	2300      	movs	r3, #0
    5d1e:	9306      	str	r3, [sp, #24]
    5d20:	f001 fd50 	bl	77c4 <__retarget_lock_init_recursive>
    5d24:	002a      	movs	r2, r5
    5d26:	003b      	movs	r3, r7
    5d28:	4669      	mov	r1, sp
    5d2a:	0030      	movs	r0, r6
    5d2c:	f7fe fc6e 	bl	460c <_vfprintf_r>
    5d30:	1e05      	subs	r5, r0, #0
    5d32:	db05      	blt.n	5d40 <__sbprintf+0x5c>
    5d34:	4669      	mov	r1, sp
    5d36:	0030      	movs	r0, r6
    5d38:	f001 f9ac 	bl	7094 <_fflush_r>
    5d3c:	2800      	cmp	r0, #0
    5d3e:	d10e      	bne.n	5d5e <__sbprintf+0x7a>
    5d40:	466b      	mov	r3, sp
    5d42:	899b      	ldrh	r3, [r3, #12]
    5d44:	065b      	lsls	r3, r3, #25
    5d46:	d503      	bpl.n	5d50 <__sbprintf+0x6c>
    5d48:	2240      	movs	r2, #64	; 0x40
    5d4a:	89a3      	ldrh	r3, [r4, #12]
    5d4c:	4313      	orrs	r3, r2
    5d4e:	81a3      	strh	r3, [r4, #12]
    5d50:	9816      	ldr	r0, [sp, #88]	; 0x58
    5d52:	f001 fd39 	bl	77c8 <__retarget_lock_close_recursive>
    5d56:	0028      	movs	r0, r5
    5d58:	4b03      	ldr	r3, [pc, #12]	; (5d68 <__sbprintf+0x84>)
    5d5a:	449d      	add	sp, r3
    5d5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5d5e:	2501      	movs	r5, #1
    5d60:	426d      	negs	r5, r5
    5d62:	e7ed      	b.n	5d40 <__sbprintf+0x5c>
    5d64:	fffffb94 	.word	0xfffffb94
    5d68:	0000046c 	.word	0x0000046c

00005d6c <__swsetup_r>:
    5d6c:	4b33      	ldr	r3, [pc, #204]	; (5e3c <__swsetup_r+0xd0>)
    5d6e:	b570      	push	{r4, r5, r6, lr}
    5d70:	0005      	movs	r5, r0
    5d72:	6818      	ldr	r0, [r3, #0]
    5d74:	000c      	movs	r4, r1
    5d76:	2800      	cmp	r0, #0
    5d78:	d002      	beq.n	5d80 <__swsetup_r+0x14>
    5d7a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    5d7c:	2b00      	cmp	r3, #0
    5d7e:	d03c      	beq.n	5dfa <__swsetup_r+0x8e>
    5d80:	230c      	movs	r3, #12
    5d82:	5ee2      	ldrsh	r2, [r4, r3]
    5d84:	b293      	uxth	r3, r2
    5d86:	0719      	lsls	r1, r3, #28
    5d88:	d50d      	bpl.n	5da6 <__swsetup_r+0x3a>
    5d8a:	6921      	ldr	r1, [r4, #16]
    5d8c:	2900      	cmp	r1, #0
    5d8e:	d015      	beq.n	5dbc <__swsetup_r+0x50>
    5d90:	07da      	lsls	r2, r3, #31
    5d92:	d521      	bpl.n	5dd8 <__swsetup_r+0x6c>
    5d94:	2300      	movs	r3, #0
    5d96:	60a3      	str	r3, [r4, #8]
    5d98:	6963      	ldr	r3, [r4, #20]
    5d9a:	2000      	movs	r0, #0
    5d9c:	425b      	negs	r3, r3
    5d9e:	61a3      	str	r3, [r4, #24]
    5da0:	2900      	cmp	r1, #0
    5da2:	d021      	beq.n	5de8 <__swsetup_r+0x7c>
    5da4:	bd70      	pop	{r4, r5, r6, pc}
    5da6:	06d9      	lsls	r1, r3, #27
    5da8:	d53f      	bpl.n	5e2a <__swsetup_r+0xbe>
    5daa:	075b      	lsls	r3, r3, #29
    5dac:	d428      	bmi.n	5e00 <__swsetup_r+0x94>
    5dae:	6921      	ldr	r1, [r4, #16]
    5db0:	2308      	movs	r3, #8
    5db2:	4313      	orrs	r3, r2
    5db4:	81a3      	strh	r3, [r4, #12]
    5db6:	b29b      	uxth	r3, r3
    5db8:	2900      	cmp	r1, #0
    5dba:	d1e9      	bne.n	5d90 <__swsetup_r+0x24>
    5dbc:	22a0      	movs	r2, #160	; 0xa0
    5dbe:	2080      	movs	r0, #128	; 0x80
    5dc0:	0092      	lsls	r2, r2, #2
    5dc2:	0080      	lsls	r0, r0, #2
    5dc4:	401a      	ands	r2, r3
    5dc6:	4282      	cmp	r2, r0
    5dc8:	d0e2      	beq.n	5d90 <__swsetup_r+0x24>
    5dca:	0021      	movs	r1, r4
    5dcc:	0028      	movs	r0, r5
    5dce:	f001 fd31 	bl	7834 <__smakebuf_r>
    5dd2:	89a3      	ldrh	r3, [r4, #12]
    5dd4:	6921      	ldr	r1, [r4, #16]
    5dd6:	e7db      	b.n	5d90 <__swsetup_r+0x24>
    5dd8:	2200      	movs	r2, #0
    5dda:	079b      	lsls	r3, r3, #30
    5ddc:	d400      	bmi.n	5de0 <__swsetup_r+0x74>
    5dde:	6962      	ldr	r2, [r4, #20]
    5de0:	60a2      	str	r2, [r4, #8]
    5de2:	2000      	movs	r0, #0
    5de4:	2900      	cmp	r1, #0
    5de6:	d1dd      	bne.n	5da4 <__swsetup_r+0x38>
    5de8:	220c      	movs	r2, #12
    5dea:	5ea3      	ldrsh	r3, [r4, r2]
    5dec:	061a      	lsls	r2, r3, #24
    5dee:	d5d9      	bpl.n	5da4 <__swsetup_r+0x38>
    5df0:	2240      	movs	r2, #64	; 0x40
    5df2:	4313      	orrs	r3, r2
    5df4:	81a3      	strh	r3, [r4, #12]
    5df6:	3801      	subs	r0, #1
    5df8:	e7d4      	b.n	5da4 <__swsetup_r+0x38>
    5dfa:	f001 f9a5 	bl	7148 <__sinit>
    5dfe:	e7bf      	b.n	5d80 <__swsetup_r+0x14>
    5e00:	6b21      	ldr	r1, [r4, #48]	; 0x30
    5e02:	2900      	cmp	r1, #0
    5e04:	d00a      	beq.n	5e1c <__swsetup_r+0xb0>
    5e06:	0023      	movs	r3, r4
    5e08:	3340      	adds	r3, #64	; 0x40
    5e0a:	4299      	cmp	r1, r3
    5e0c:	d004      	beq.n	5e18 <__swsetup_r+0xac>
    5e0e:	0028      	movs	r0, r5
    5e10:	f001 fa44 	bl	729c <_free_r>
    5e14:	230c      	movs	r3, #12
    5e16:	5ee2      	ldrsh	r2, [r4, r3]
    5e18:	2300      	movs	r3, #0
    5e1a:	6323      	str	r3, [r4, #48]	; 0x30
    5e1c:	2324      	movs	r3, #36	; 0x24
    5e1e:	439a      	bics	r2, r3
    5e20:	2300      	movs	r3, #0
    5e22:	6921      	ldr	r1, [r4, #16]
    5e24:	6063      	str	r3, [r4, #4]
    5e26:	6021      	str	r1, [r4, #0]
    5e28:	e7c2      	b.n	5db0 <__swsetup_r+0x44>
    5e2a:	2309      	movs	r3, #9
    5e2c:	602b      	str	r3, [r5, #0]
    5e2e:	2340      	movs	r3, #64	; 0x40
    5e30:	2001      	movs	r0, #1
    5e32:	431a      	orrs	r2, r3
    5e34:	81a2      	strh	r2, [r4, #12]
    5e36:	4240      	negs	r0, r0
    5e38:	e7b4      	b.n	5da4 <__swsetup_r+0x38>
    5e3a:	46c0      	nop			; (mov r8, r8)
    5e3c:	2000007c 	.word	0x2000007c

00005e40 <register_fini>:
    5e40:	4b03      	ldr	r3, [pc, #12]	; (5e50 <register_fini+0x10>)
    5e42:	b510      	push	{r4, lr}
    5e44:	2b00      	cmp	r3, #0
    5e46:	d002      	beq.n	5e4e <register_fini+0xe>
    5e48:	4802      	ldr	r0, [pc, #8]	; (5e54 <register_fini+0x14>)
    5e4a:	f000 f805 	bl	5e58 <atexit>
    5e4e:	bd10      	pop	{r4, pc}
    5e50:	00000000 	.word	0x00000000
    5e54:	000071c9 	.word	0x000071c9

00005e58 <atexit>:
    5e58:	b510      	push	{r4, lr}
    5e5a:	0001      	movs	r1, r0
    5e5c:	2300      	movs	r3, #0
    5e5e:	2200      	movs	r2, #0
    5e60:	2000      	movs	r0, #0
    5e62:	f002 fe53 	bl	8b0c <__register_exitproc>
    5e66:	bd10      	pop	{r4, pc}

00005e68 <quorem>:
    5e68:	b5f0      	push	{r4, r5, r6, r7, lr}
    5e6a:	4645      	mov	r5, r8
    5e6c:	4680      	mov	r8, r0
    5e6e:	46de      	mov	lr, fp
    5e70:	4657      	mov	r7, sl
    5e72:	464e      	mov	r6, r9
    5e74:	4642      	mov	r2, r8
    5e76:	b5e0      	push	{r5, r6, r7, lr}
    5e78:	690c      	ldr	r4, [r1, #16]
    5e7a:	6912      	ldr	r2, [r2, #16]
    5e7c:	b085      	sub	sp, #20
    5e7e:	000b      	movs	r3, r1
    5e80:	9102      	str	r1, [sp, #8]
    5e82:	2000      	movs	r0, #0
    5e84:	4294      	cmp	r4, r2
    5e86:	dd00      	ble.n	5e8a <quorem+0x22>
    5e88:	e090      	b.n	5fac <quorem+0x144>
    5e8a:	2214      	movs	r2, #20
    5e8c:	4694      	mov	ip, r2
    5e8e:	4463      	add	r3, ip
    5e90:	4699      	mov	r9, r3
    5e92:	464a      	mov	r2, r9
    5e94:	3c01      	subs	r4, #1
    5e96:	00a3      	lsls	r3, r4, #2
    5e98:	18d6      	adds	r6, r2, r3
    5e9a:	2214      	movs	r2, #20
    5e9c:	4442      	add	r2, r8
    5e9e:	4693      	mov	fp, r2
    5ea0:	449b      	add	fp, r3
    5ea2:	6833      	ldr	r3, [r6, #0]
    5ea4:	0015      	movs	r5, r2
    5ea6:	1c59      	adds	r1, r3, #1
    5ea8:	465b      	mov	r3, fp
    5eaa:	6818      	ldr	r0, [r3, #0]
    5eac:	9201      	str	r2, [sp, #4]
    5eae:	f7fc fcb7 	bl	2820 <__udivsi3>
    5eb2:	1e03      	subs	r3, r0, #0
    5eb4:	9000      	str	r0, [sp, #0]
    5eb6:	d042      	beq.n	5f3e <quorem+0xd6>
    5eb8:	0029      	movs	r1, r5
    5eba:	2700      	movs	r7, #0
    5ebc:	464d      	mov	r5, r9
    5ebe:	2000      	movs	r0, #0
    5ec0:	46b1      	mov	r9, r6
    5ec2:	46a2      	mov	sl, r4
    5ec4:	003e      	movs	r6, r7
    5ec6:	0004      	movs	r4, r0
    5ec8:	469c      	mov	ip, r3
    5eca:	002f      	movs	r7, r5
    5ecc:	0008      	movs	r0, r1
    5ece:	9503      	str	r5, [sp, #12]
    5ed0:	4663      	mov	r3, ip
    5ed2:	cf04      	ldmia	r7!, {r2}
    5ed4:	0415      	lsls	r5, r2, #16
    5ed6:	0c2d      	lsrs	r5, r5, #16
    5ed8:	435d      	muls	r5, r3
    5eda:	0c12      	lsrs	r2, r2, #16
    5edc:	435a      	muls	r2, r3
    5ede:	19ad      	adds	r5, r5, r6
    5ee0:	0c2b      	lsrs	r3, r5, #16
    5ee2:	18d2      	adds	r2, r2, r3
    5ee4:	6803      	ldr	r3, [r0, #0]
    5ee6:	042d      	lsls	r5, r5, #16
    5ee8:	0419      	lsls	r1, r3, #16
    5eea:	0c09      	lsrs	r1, r1, #16
    5eec:	1909      	adds	r1, r1, r4
    5eee:	0c16      	lsrs	r6, r2, #16
    5ef0:	0c2d      	lsrs	r5, r5, #16
    5ef2:	0412      	lsls	r2, r2, #16
    5ef4:	1b49      	subs	r1, r1, r5
    5ef6:	0c12      	lsrs	r2, r2, #16
    5ef8:	0c1b      	lsrs	r3, r3, #16
    5efa:	1a9b      	subs	r3, r3, r2
    5efc:	140a      	asrs	r2, r1, #16
    5efe:	189b      	adds	r3, r3, r2
    5f00:	0409      	lsls	r1, r1, #16
    5f02:	141c      	asrs	r4, r3, #16
    5f04:	0c09      	lsrs	r1, r1, #16
    5f06:	041b      	lsls	r3, r3, #16
    5f08:	4319      	orrs	r1, r3
    5f0a:	c002      	stmia	r0!, {r1}
    5f0c:	45b9      	cmp	r9, r7
    5f0e:	d2df      	bcs.n	5ed0 <quorem+0x68>
    5f10:	9b03      	ldr	r3, [sp, #12]
    5f12:	464e      	mov	r6, r9
    5f14:	4699      	mov	r9, r3
    5f16:	465b      	mov	r3, fp
    5f18:	681b      	ldr	r3, [r3, #0]
    5f1a:	4654      	mov	r4, sl
    5f1c:	2b00      	cmp	r3, #0
    5f1e:	d10e      	bne.n	5f3e <quorem+0xd6>
    5f20:	465b      	mov	r3, fp
    5f22:	9a01      	ldr	r2, [sp, #4]
    5f24:	3b04      	subs	r3, #4
    5f26:	429a      	cmp	r2, r3
    5f28:	d304      	bcc.n	5f34 <quorem+0xcc>
    5f2a:	e006      	b.n	5f3a <quorem+0xd2>
    5f2c:	3b04      	subs	r3, #4
    5f2e:	3c01      	subs	r4, #1
    5f30:	429a      	cmp	r2, r3
    5f32:	d202      	bcs.n	5f3a <quorem+0xd2>
    5f34:	6819      	ldr	r1, [r3, #0]
    5f36:	2900      	cmp	r1, #0
    5f38:	d0f8      	beq.n	5f2c <quorem+0xc4>
    5f3a:	4643      	mov	r3, r8
    5f3c:	611c      	str	r4, [r3, #16]
    5f3e:	9902      	ldr	r1, [sp, #8]
    5f40:	4640      	mov	r0, r8
    5f42:	f002 fa51 	bl	83e8 <__mcmp>
    5f46:	2800      	cmp	r0, #0
    5f48:	db2f      	blt.n	5faa <quorem+0x142>
    5f4a:	464f      	mov	r7, r9
    5f4c:	2000      	movs	r0, #0
    5f4e:	9b00      	ldr	r3, [sp, #0]
    5f50:	9d01      	ldr	r5, [sp, #4]
    5f52:	3301      	adds	r3, #1
    5f54:	9300      	str	r3, [sp, #0]
    5f56:	682b      	ldr	r3, [r5, #0]
    5f58:	cf02      	ldmia	r7!, {r1}
    5f5a:	041a      	lsls	r2, r3, #16
    5f5c:	0c12      	lsrs	r2, r2, #16
    5f5e:	1810      	adds	r0, r2, r0
    5f60:	040a      	lsls	r2, r1, #16
    5f62:	0c12      	lsrs	r2, r2, #16
    5f64:	1a82      	subs	r2, r0, r2
    5f66:	0c09      	lsrs	r1, r1, #16
    5f68:	0c1b      	lsrs	r3, r3, #16
    5f6a:	1a5b      	subs	r3, r3, r1
    5f6c:	1411      	asrs	r1, r2, #16
    5f6e:	185b      	adds	r3, r3, r1
    5f70:	0412      	lsls	r2, r2, #16
    5f72:	1418      	asrs	r0, r3, #16
    5f74:	0c12      	lsrs	r2, r2, #16
    5f76:	041b      	lsls	r3, r3, #16
    5f78:	4313      	orrs	r3, r2
    5f7a:	c508      	stmia	r5!, {r3}
    5f7c:	42be      	cmp	r6, r7
    5f7e:	d2ea      	bcs.n	5f56 <quorem+0xee>
    5f80:	9901      	ldr	r1, [sp, #4]
    5f82:	00a3      	lsls	r3, r4, #2
    5f84:	468c      	mov	ip, r1
    5f86:	4463      	add	r3, ip
    5f88:	681a      	ldr	r2, [r3, #0]
    5f8a:	2a00      	cmp	r2, #0
    5f8c:	d10d      	bne.n	5faa <quorem+0x142>
    5f8e:	3b04      	subs	r3, #4
    5f90:	000a      	movs	r2, r1
    5f92:	4299      	cmp	r1, r3
    5f94:	d304      	bcc.n	5fa0 <quorem+0x138>
    5f96:	e006      	b.n	5fa6 <quorem+0x13e>
    5f98:	3b04      	subs	r3, #4
    5f9a:	3c01      	subs	r4, #1
    5f9c:	429a      	cmp	r2, r3
    5f9e:	d202      	bcs.n	5fa6 <quorem+0x13e>
    5fa0:	6819      	ldr	r1, [r3, #0]
    5fa2:	2900      	cmp	r1, #0
    5fa4:	d0f8      	beq.n	5f98 <quorem+0x130>
    5fa6:	4643      	mov	r3, r8
    5fa8:	611c      	str	r4, [r3, #16]
    5faa:	9800      	ldr	r0, [sp, #0]
    5fac:	b005      	add	sp, #20
    5fae:	bc3c      	pop	{r2, r3, r4, r5}
    5fb0:	4690      	mov	r8, r2
    5fb2:	4699      	mov	r9, r3
    5fb4:	46a2      	mov	sl, r4
    5fb6:	46ab      	mov	fp, r5
    5fb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5fba:	46c0      	nop			; (mov r8, r8)

00005fbc <_dtoa_r>:
    5fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    5fbe:	4657      	mov	r7, sl
    5fc0:	464e      	mov	r6, r9
    5fc2:	4645      	mov	r5, r8
    5fc4:	46de      	mov	lr, fp
    5fc6:	b5e0      	push	{r5, r6, r7, lr}
    5fc8:	6c01      	ldr	r1, [r0, #64]	; 0x40
    5fca:	b099      	sub	sp, #100	; 0x64
    5fcc:	4682      	mov	sl, r0
    5fce:	001d      	movs	r5, r3
    5fd0:	0016      	movs	r6, r2
    5fd2:	001f      	movs	r7, r3
    5fd4:	2900      	cmp	r1, #0
    5fd6:	d009      	beq.n	5fec <_dtoa_r+0x30>
    5fd8:	2301      	movs	r3, #1
    5fda:	6c42      	ldr	r2, [r0, #68]	; 0x44
    5fdc:	4093      	lsls	r3, r2
    5fde:	604a      	str	r2, [r1, #4]
    5fe0:	608b      	str	r3, [r1, #8]
    5fe2:	f001 fff5 	bl	7fd0 <_Bfree>
    5fe6:	2300      	movs	r3, #0
    5fe8:	4652      	mov	r2, sl
    5fea:	6413      	str	r3, [r2, #64]	; 0x40
    5fec:	46b8      	mov	r8, r7
    5fee:	2f00      	cmp	r7, #0
    5ff0:	db37      	blt.n	6062 <_dtoa_r+0xa6>
    5ff2:	2300      	movs	r3, #0
    5ff4:	9a25      	ldr	r2, [sp, #148]	; 0x94
    5ff6:	6013      	str	r3, [r2, #0]
    5ff8:	4642      	mov	r2, r8
    5ffa:	4bd6      	ldr	r3, [pc, #856]	; (6354 <_dtoa_r+0x398>)
    5ffc:	401a      	ands	r2, r3
    5ffe:	429a      	cmp	r2, r3
    6000:	d018      	beq.n	6034 <_dtoa_r+0x78>
    6002:	2200      	movs	r2, #0
    6004:	2300      	movs	r3, #0
    6006:	0030      	movs	r0, r6
    6008:	0039      	movs	r1, r7
    600a:	f7fd ffd9 	bl	3fc0 <__aeabi_dcmpeq>
    600e:	2800      	cmp	r0, #0
    6010:	d02f      	beq.n	6072 <_dtoa_r+0xb6>
    6012:	2301      	movs	r3, #1
    6014:	9a24      	ldr	r2, [sp, #144]	; 0x90
    6016:	6013      	str	r3, [r2, #0]
    6018:	9b26      	ldr	r3, [sp, #152]	; 0x98
    601a:	2b00      	cmp	r3, #0
    601c:	d100      	bne.n	6020 <_dtoa_r+0x64>
    601e:	e22a      	b.n	6476 <_dtoa_r+0x4ba>
    6020:	48cd      	ldr	r0, [pc, #820]	; (6358 <_dtoa_r+0x39c>)
    6022:	6018      	str	r0, [r3, #0]
    6024:	3801      	subs	r0, #1
    6026:	b019      	add	sp, #100	; 0x64
    6028:	bc3c      	pop	{r2, r3, r4, r5}
    602a:	4690      	mov	r8, r2
    602c:	4699      	mov	r9, r3
    602e:	46a2      	mov	sl, r4
    6030:	46ab      	mov	fp, r5
    6032:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6034:	4bc9      	ldr	r3, [pc, #804]	; (635c <_dtoa_r+0x3a0>)
    6036:	9a24      	ldr	r2, [sp, #144]	; 0x90
    6038:	6013      	str	r3, [r2, #0]
    603a:	2e00      	cmp	r6, #0
    603c:	d10b      	bne.n	6056 <_dtoa_r+0x9a>
    603e:	4643      	mov	r3, r8
    6040:	0318      	lsls	r0, r3, #12
    6042:	d108      	bne.n	6056 <_dtoa_r+0x9a>
    6044:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6046:	48c6      	ldr	r0, [pc, #792]	; (6360 <_dtoa_r+0x3a4>)
    6048:	2b00      	cmp	r3, #0
    604a:	d0ec      	beq.n	6026 <_dtoa_r+0x6a>
    604c:	0003      	movs	r3, r0
    604e:	3308      	adds	r3, #8
    6050:	9a26      	ldr	r2, [sp, #152]	; 0x98
    6052:	6013      	str	r3, [r2, #0]
    6054:	e7e7      	b.n	6026 <_dtoa_r+0x6a>
    6056:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6058:	48c2      	ldr	r0, [pc, #776]	; (6364 <_dtoa_r+0x3a8>)
    605a:	2b00      	cmp	r3, #0
    605c:	d0e3      	beq.n	6026 <_dtoa_r+0x6a>
    605e:	1cc3      	adds	r3, r0, #3
    6060:	e7f6      	b.n	6050 <_dtoa_r+0x94>
    6062:	2301      	movs	r3, #1
    6064:	9a25      	ldr	r2, [sp, #148]	; 0x94
    6066:	0068      	lsls	r0, r5, #1
    6068:	6013      	str	r3, [r2, #0]
    606a:	0843      	lsrs	r3, r0, #1
    606c:	4698      	mov	r8, r3
    606e:	001f      	movs	r7, r3
    6070:	e7c2      	b.n	5ff8 <_dtoa_r+0x3c>
    6072:	ab16      	add	r3, sp, #88	; 0x58
    6074:	9301      	str	r3, [sp, #4]
    6076:	ab17      	add	r3, sp, #92	; 0x5c
    6078:	9300      	str	r3, [sp, #0]
    607a:	0032      	movs	r2, r6
    607c:	003b      	movs	r3, r7
    607e:	4650      	mov	r0, sl
    6080:	f002 fa68 	bl	8554 <__d2b>
    6084:	4643      	mov	r3, r8
    6086:	4683      	mov	fp, r0
    6088:	0d1a      	lsrs	r2, r3, #20
    608a:	d100      	bne.n	608e <_dtoa_r+0xd2>
    608c:	e1d6      	b.n	643c <_dtoa_r+0x480>
    608e:	033b      	lsls	r3, r7, #12
    6090:	4cb5      	ldr	r4, [pc, #724]	; (6368 <_dtoa_r+0x3ac>)
    6092:	0b1b      	lsrs	r3, r3, #12
    6094:	431c      	orrs	r4, r3
    6096:	4bb5      	ldr	r3, [pc, #724]	; (636c <_dtoa_r+0x3b0>)
    6098:	0030      	movs	r0, r6
    609a:	4698      	mov	r8, r3
    609c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    609e:	0021      	movs	r1, r4
    60a0:	4699      	mov	r9, r3
    60a2:	2300      	movs	r3, #0
    60a4:	4490      	add	r8, r2
    60a6:	930f      	str	r3, [sp, #60]	; 0x3c
    60a8:	2200      	movs	r2, #0
    60aa:	4bb1      	ldr	r3, [pc, #708]	; (6370 <_dtoa_r+0x3b4>)
    60ac:	f7fd fad8 	bl	3660 <__aeabi_dsub>
    60b0:	4ab0      	ldr	r2, [pc, #704]	; (6374 <_dtoa_r+0x3b8>)
    60b2:	4bb1      	ldr	r3, [pc, #708]	; (6378 <_dtoa_r+0x3bc>)
    60b4:	f7fd f854 	bl	3160 <__aeabi_dmul>
    60b8:	4ab0      	ldr	r2, [pc, #704]	; (637c <_dtoa_r+0x3c0>)
    60ba:	4bb1      	ldr	r3, [pc, #708]	; (6380 <_dtoa_r+0x3c4>)
    60bc:	f003 f8b2 	bl	9224 <__aeabi_dadd>
    60c0:	0004      	movs	r4, r0
    60c2:	4640      	mov	r0, r8
    60c4:	000d      	movs	r5, r1
    60c6:	f7fd fe15 	bl	3cf4 <__aeabi_i2d>
    60ca:	4aae      	ldr	r2, [pc, #696]	; (6384 <_dtoa_r+0x3c8>)
    60cc:	4bae      	ldr	r3, [pc, #696]	; (6388 <_dtoa_r+0x3cc>)
    60ce:	f7fd f847 	bl	3160 <__aeabi_dmul>
    60d2:	0002      	movs	r2, r0
    60d4:	000b      	movs	r3, r1
    60d6:	0020      	movs	r0, r4
    60d8:	0029      	movs	r1, r5
    60da:	f003 f8a3 	bl	9224 <__aeabi_dadd>
    60de:	0004      	movs	r4, r0
    60e0:	000d      	movs	r5, r1
    60e2:	f7fd fdd3 	bl	3c8c <__aeabi_d2iz>
    60e6:	2200      	movs	r2, #0
    60e8:	9003      	str	r0, [sp, #12]
    60ea:	2300      	movs	r3, #0
    60ec:	0020      	movs	r0, r4
    60ee:	0029      	movs	r1, r5
    60f0:	f7fd ff6c 	bl	3fcc <__aeabi_dcmplt>
    60f4:	2800      	cmp	r0, #0
    60f6:	d000      	beq.n	60fa <_dtoa_r+0x13e>
    60f8:	e2b1      	b.n	665e <_dtoa_r+0x6a2>
    60fa:	2301      	movs	r3, #1
    60fc:	9c03      	ldr	r4, [sp, #12]
    60fe:	930c      	str	r3, [sp, #48]	; 0x30
    6100:	2c16      	cmp	r4, #22
    6102:	d810      	bhi.n	6126 <_dtoa_r+0x16a>
    6104:	49a1      	ldr	r1, [pc, #644]	; (638c <_dtoa_r+0x3d0>)
    6106:	00e3      	lsls	r3, r4, #3
    6108:	18c9      	adds	r1, r1, r3
    610a:	0032      	movs	r2, r6
    610c:	6808      	ldr	r0, [r1, #0]
    610e:	6849      	ldr	r1, [r1, #4]
    6110:	003b      	movs	r3, r7
    6112:	f7fd ff6f 	bl	3ff4 <__aeabi_dcmpgt>
    6116:	2800      	cmp	r0, #0
    6118:	d100      	bne.n	611c <_dtoa_r+0x160>
    611a:	e31d      	b.n	6758 <_dtoa_r+0x79c>
    611c:	0023      	movs	r3, r4
    611e:	3b01      	subs	r3, #1
    6120:	9303      	str	r3, [sp, #12]
    6122:	2300      	movs	r3, #0
    6124:	930c      	str	r3, [sp, #48]	; 0x30
    6126:	464b      	mov	r3, r9
    6128:	4642      	mov	r2, r8
    612a:	1a9a      	subs	r2, r3, r2
    612c:	2300      	movs	r3, #0
    612e:	9306      	str	r3, [sp, #24]
    6130:	0013      	movs	r3, r2
    6132:	3b01      	subs	r3, #1
    6134:	9304      	str	r3, [sp, #16]
    6136:	d500      	bpl.n	613a <_dtoa_r+0x17e>
    6138:	e2a1      	b.n	667e <_dtoa_r+0x6c2>
    613a:	9b03      	ldr	r3, [sp, #12]
    613c:	2b00      	cmp	r3, #0
    613e:	da00      	bge.n	6142 <_dtoa_r+0x186>
    6140:	e284      	b.n	664c <_dtoa_r+0x690>
    6142:	469c      	mov	ip, r3
    6144:	930d      	str	r3, [sp, #52]	; 0x34
    6146:	2300      	movs	r3, #0
    6148:	9a04      	ldr	r2, [sp, #16]
    614a:	4699      	mov	r9, r3
    614c:	0011      	movs	r1, r2
    614e:	4461      	add	r1, ip
    6150:	9104      	str	r1, [sp, #16]
    6152:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6154:	2b09      	cmp	r3, #9
    6156:	d900      	bls.n	615a <_dtoa_r+0x19e>
    6158:	e18f      	b.n	647a <_dtoa_r+0x4be>
    615a:	2401      	movs	r4, #1
    615c:	2b05      	cmp	r3, #5
    615e:	dd02      	ble.n	6166 <_dtoa_r+0x1aa>
    6160:	2400      	movs	r4, #0
    6162:	3b04      	subs	r3, #4
    6164:	9322      	str	r3, [sp, #136]	; 0x88
    6166:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6168:	2b03      	cmp	r3, #3
    616a:	d101      	bne.n	6170 <_dtoa_r+0x1b4>
    616c:	f000 fcce 	bl	6b0c <_dtoa_r+0xb50>
    6170:	dc01      	bgt.n	6176 <_dtoa_r+0x1ba>
    6172:	f000 fc92 	bl	6a9a <_dtoa_r+0xade>
    6176:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6178:	2b04      	cmp	r3, #4
    617a:	d101      	bne.n	6180 <_dtoa_r+0x1c4>
    617c:	f000 fc40 	bl	6a00 <_dtoa_r+0xa44>
    6180:	2301      	movs	r3, #1
    6182:	930b      	str	r3, [sp, #44]	; 0x2c
    6184:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6186:	2b05      	cmp	r3, #5
    6188:	d001      	beq.n	618e <_dtoa_r+0x1d2>
    618a:	f000 fc8b 	bl	6aa4 <_dtoa_r+0xae8>
    618e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    6190:	9b03      	ldr	r3, [sp, #12]
    6192:	4694      	mov	ip, r2
    6194:	4463      	add	r3, ip
    6196:	930e      	str	r3, [sp, #56]	; 0x38
    6198:	3301      	adds	r3, #1
    619a:	9307      	str	r3, [sp, #28]
    619c:	1e1d      	subs	r5, r3, #0
    619e:	dc01      	bgt.n	61a4 <_dtoa_r+0x1e8>
    61a0:	f000 fd49 	bl	6c36 <_dtoa_r+0xc7a>
    61a4:	9b07      	ldr	r3, [sp, #28]
    61a6:	4698      	mov	r8, r3
    61a8:	2300      	movs	r3, #0
    61aa:	4652      	mov	r2, sl
    61ac:	2100      	movs	r1, #0
    61ae:	6453      	str	r3, [r2, #68]	; 0x44
    61b0:	2d17      	cmp	r5, #23
    61b2:	d90a      	bls.n	61ca <_dtoa_r+0x20e>
    61b4:	2201      	movs	r2, #1
    61b6:	3304      	adds	r3, #4
    61b8:	005b      	lsls	r3, r3, #1
    61ba:	0018      	movs	r0, r3
    61bc:	3014      	adds	r0, #20
    61be:	0011      	movs	r1, r2
    61c0:	3201      	adds	r2, #1
    61c2:	4285      	cmp	r5, r0
    61c4:	d2f8      	bcs.n	61b8 <_dtoa_r+0x1fc>
    61c6:	4653      	mov	r3, sl
    61c8:	6459      	str	r1, [r3, #68]	; 0x44
    61ca:	4650      	mov	r0, sl
    61cc:	f001 fed8 	bl	7f80 <_Balloc>
    61d0:	4653      	mov	r3, sl
    61d2:	6418      	str	r0, [r3, #64]	; 0x40
    61d4:	4643      	mov	r3, r8
    61d6:	900a      	str	r0, [sp, #40]	; 0x28
    61d8:	2b0e      	cmp	r3, #14
    61da:	d900      	bls.n	61de <_dtoa_r+0x222>
    61dc:	e161      	b.n	64a2 <_dtoa_r+0x4e6>
    61de:	2c00      	cmp	r4, #0
    61e0:	d100      	bne.n	61e4 <_dtoa_r+0x228>
    61e2:	e15e      	b.n	64a2 <_dtoa_r+0x4e6>
    61e4:	9610      	str	r6, [sp, #64]	; 0x40
    61e6:	9711      	str	r7, [sp, #68]	; 0x44
    61e8:	9e03      	ldr	r6, [sp, #12]
    61ea:	2e00      	cmp	r6, #0
    61ec:	dc01      	bgt.n	61f2 <_dtoa_r+0x236>
    61ee:	f000 fd25 	bl	6c3c <_dtoa_r+0xc80>
    61f2:	0032      	movs	r2, r6
    61f4:	210f      	movs	r1, #15
    61f6:	4b65      	ldr	r3, [pc, #404]	; (638c <_dtoa_r+0x3d0>)
    61f8:	400a      	ands	r2, r1
    61fa:	00d2      	lsls	r2, r2, #3
    61fc:	189b      	adds	r3, r3, r2
    61fe:	1136      	asrs	r6, r6, #4
    6200:	681c      	ldr	r4, [r3, #0]
    6202:	685d      	ldr	r5, [r3, #4]
    6204:	06f3      	lsls	r3, r6, #27
    6206:	d401      	bmi.n	620c <_dtoa_r+0x250>
    6208:	f000 fcca 	bl	6ba0 <_dtoa_r+0xbe4>
    620c:	4b60      	ldr	r3, [pc, #384]	; (6390 <_dtoa_r+0x3d4>)
    620e:	400e      	ands	r6, r1
    6210:	6a1a      	ldr	r2, [r3, #32]
    6212:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    6214:	9810      	ldr	r0, [sp, #64]	; 0x40
    6216:	9911      	ldr	r1, [sp, #68]	; 0x44
    6218:	f7fc fc6e 	bl	2af8 <__aeabi_ddiv>
    621c:	2303      	movs	r3, #3
    621e:	4698      	mov	r8, r3
    6220:	9008      	str	r0, [sp, #32]
    6222:	9109      	str	r1, [sp, #36]	; 0x24
    6224:	2e00      	cmp	r6, #0
    6226:	d011      	beq.n	624c <_dtoa_r+0x290>
    6228:	4f59      	ldr	r7, [pc, #356]	; (6390 <_dtoa_r+0x3d4>)
    622a:	2301      	movs	r3, #1
    622c:	4233      	tst	r3, r6
    622e:	d009      	beq.n	6244 <_dtoa_r+0x288>
    6230:	469c      	mov	ip, r3
    6232:	683a      	ldr	r2, [r7, #0]
    6234:	687b      	ldr	r3, [r7, #4]
    6236:	0020      	movs	r0, r4
    6238:	0029      	movs	r1, r5
    623a:	44e0      	add	r8, ip
    623c:	f7fc ff90 	bl	3160 <__aeabi_dmul>
    6240:	0004      	movs	r4, r0
    6242:	000d      	movs	r5, r1
    6244:	1076      	asrs	r6, r6, #1
    6246:	3708      	adds	r7, #8
    6248:	2e00      	cmp	r6, #0
    624a:	d1ee      	bne.n	622a <_dtoa_r+0x26e>
    624c:	0022      	movs	r2, r4
    624e:	9808      	ldr	r0, [sp, #32]
    6250:	9909      	ldr	r1, [sp, #36]	; 0x24
    6252:	002b      	movs	r3, r5
    6254:	f7fc fc50 	bl	2af8 <__aeabi_ddiv>
    6258:	0006      	movs	r6, r0
    625a:	000f      	movs	r7, r1
    625c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    625e:	2b00      	cmp	r3, #0
    6260:	d009      	beq.n	6276 <_dtoa_r+0x2ba>
    6262:	2200      	movs	r2, #0
    6264:	4b40      	ldr	r3, [pc, #256]	; (6368 <_dtoa_r+0x3ac>)
    6266:	0030      	movs	r0, r6
    6268:	0039      	movs	r1, r7
    626a:	f7fd feaf 	bl	3fcc <__aeabi_dcmplt>
    626e:	2800      	cmp	r0, #0
    6270:	d001      	beq.n	6276 <_dtoa_r+0x2ba>
    6272:	f000 fdc2 	bl	6dfa <_dtoa_r+0xe3e>
    6276:	4640      	mov	r0, r8
    6278:	f7fd fd3c 	bl	3cf4 <__aeabi_i2d>
    627c:	0032      	movs	r2, r6
    627e:	003b      	movs	r3, r7
    6280:	f7fc ff6e 	bl	3160 <__aeabi_dmul>
    6284:	2200      	movs	r2, #0
    6286:	4b43      	ldr	r3, [pc, #268]	; (6394 <_dtoa_r+0x3d8>)
    6288:	f002 ffcc 	bl	9224 <__aeabi_dadd>
    628c:	4a42      	ldr	r2, [pc, #264]	; (6398 <_dtoa_r+0x3dc>)
    628e:	000b      	movs	r3, r1
    6290:	4694      	mov	ip, r2
    6292:	4463      	add	r3, ip
    6294:	9008      	str	r0, [sp, #32]
    6296:	9109      	str	r1, [sp, #36]	; 0x24
    6298:	9309      	str	r3, [sp, #36]	; 0x24
    629a:	9b07      	ldr	r3, [sp, #28]
    629c:	2b00      	cmp	r3, #0
    629e:	d101      	bne.n	62a4 <_dtoa_r+0x2e8>
    62a0:	f000 fc50 	bl	6b44 <_dtoa_r+0xb88>
    62a4:	9b03      	ldr	r3, [sp, #12]
    62a6:	9313      	str	r3, [sp, #76]	; 0x4c
    62a8:	9b07      	ldr	r3, [sp, #28]
    62aa:	9312      	str	r3, [sp, #72]	; 0x48
    62ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    62ae:	2b00      	cmp	r3, #0
    62b0:	d101      	bne.n	62b6 <_dtoa_r+0x2fa>
    62b2:	f000 fd1d 	bl	6cf0 <_dtoa_r+0xd34>
    62b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    62b8:	2000      	movs	r0, #0
    62ba:	1e5a      	subs	r2, r3, #1
    62bc:	4b33      	ldr	r3, [pc, #204]	; (638c <_dtoa_r+0x3d0>)
    62be:	00d2      	lsls	r2, r2, #3
    62c0:	189b      	adds	r3, r3, r2
    62c2:	681a      	ldr	r2, [r3, #0]
    62c4:	685b      	ldr	r3, [r3, #4]
    62c6:	4935      	ldr	r1, [pc, #212]	; (639c <_dtoa_r+0x3e0>)
    62c8:	f7fc fc16 	bl	2af8 <__aeabi_ddiv>
    62cc:	9a08      	ldr	r2, [sp, #32]
    62ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
    62d0:	f7fd f9c6 	bl	3660 <__aeabi_dsub>
    62d4:	9008      	str	r0, [sp, #32]
    62d6:	9109      	str	r1, [sp, #36]	; 0x24
    62d8:	0039      	movs	r1, r7
    62da:	0030      	movs	r0, r6
    62dc:	f7fd fcd6 	bl	3c8c <__aeabi_d2iz>
    62e0:	0004      	movs	r4, r0
    62e2:	f7fd fd07 	bl	3cf4 <__aeabi_i2d>
    62e6:	0002      	movs	r2, r0
    62e8:	000b      	movs	r3, r1
    62ea:	0030      	movs	r0, r6
    62ec:	0039      	movs	r1, r7
    62ee:	f7fd f9b7 	bl	3660 <__aeabi_dsub>
    62f2:	0005      	movs	r5, r0
    62f4:	000e      	movs	r6, r1
    62f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    62f8:	3430      	adds	r4, #48	; 0x30
    62fa:	1c51      	adds	r1, r2, #1
    62fc:	b2e7      	uxtb	r7, r4
    62fe:	9114      	str	r1, [sp, #80]	; 0x50
    6300:	7017      	strb	r7, [r2, #0]
    6302:	0033      	movs	r3, r6
    6304:	9808      	ldr	r0, [sp, #32]
    6306:	9909      	ldr	r1, [sp, #36]	; 0x24
    6308:	002a      	movs	r2, r5
    630a:	f7fd fe73 	bl	3ff4 <__aeabi_dcmpgt>
    630e:	2800      	cmp	r0, #0
    6310:	d001      	beq.n	6316 <_dtoa_r+0x35a>
    6312:	f000 fdfe 	bl	6f12 <_dtoa_r+0xf56>
    6316:	002a      	movs	r2, r5
    6318:	0033      	movs	r3, r6
    631a:	2000      	movs	r0, #0
    631c:	4912      	ldr	r1, [pc, #72]	; (6368 <_dtoa_r+0x3ac>)
    631e:	f7fd f99f 	bl	3660 <__aeabi_dsub>
    6322:	0002      	movs	r2, r0
    6324:	000b      	movs	r3, r1
    6326:	9808      	ldr	r0, [sp, #32]
    6328:	9909      	ldr	r1, [sp, #36]	; 0x24
    632a:	f7fd fe63 	bl	3ff4 <__aeabi_dcmpgt>
    632e:	2800      	cmp	r0, #0
    6330:	d001      	beq.n	6336 <_dtoa_r+0x37a>
    6332:	f000 fde7 	bl	6f04 <_dtoa_r+0xf48>
    6336:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6338:	2b01      	cmp	r3, #1
    633a:	d101      	bne.n	6340 <_dtoa_r+0x384>
    633c:	f000 fc78 	bl	6c30 <_dtoa_r+0xc74>
    6340:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6342:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6344:	4694      	mov	ip, r2
    6346:	4463      	add	r3, ip
    6348:	4698      	mov	r8, r3
    634a:	464b      	mov	r3, r9
    634c:	9312      	str	r3, [sp, #72]	; 0x48
    634e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6350:	4699      	mov	r9, r3
    6352:	e038      	b.n	63c6 <_dtoa_r+0x40a>
    6354:	7ff00000 	.word	0x7ff00000
    6358:	00009e21 	.word	0x00009e21
    635c:	0000270f 	.word	0x0000270f
    6360:	00009e44 	.word	0x00009e44
    6364:	00009e50 	.word	0x00009e50
    6368:	3ff00000 	.word	0x3ff00000
    636c:	fffffc01 	.word	0xfffffc01
    6370:	3ff80000 	.word	0x3ff80000
    6374:	636f4361 	.word	0x636f4361
    6378:	3fd287a7 	.word	0x3fd287a7
    637c:	8b60c8b3 	.word	0x8b60c8b3
    6380:	3fc68a28 	.word	0x3fc68a28
    6384:	509f79fb 	.word	0x509f79fb
    6388:	3fd34413 	.word	0x3fd34413
    638c:	00009e80 	.word	0x00009e80
    6390:	00009e58 	.word	0x00009e58
    6394:	401c0000 	.word	0x401c0000
    6398:	fcc00000 	.word	0xfcc00000
    639c:	3fe00000 	.word	0x3fe00000
    63a0:	002a      	movs	r2, r5
    63a2:	0033      	movs	r3, r6
    63a4:	2000      	movs	r0, #0
    63a6:	49b9      	ldr	r1, [pc, #740]	; (668c <_dtoa_r+0x6d0>)
    63a8:	f7fd f95a 	bl	3660 <__aeabi_dsub>
    63ac:	9a08      	ldr	r2, [sp, #32]
    63ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
    63b0:	f7fd fe0c 	bl	3fcc <__aeabi_dcmplt>
    63b4:	2800      	cmp	r0, #0
    63b6:	d001      	beq.n	63bc <_dtoa_r+0x400>
    63b8:	f000 fd74 	bl	6ea4 <_dtoa_r+0xee8>
    63bc:	46a1      	mov	r9, r4
    63be:	4544      	cmp	r4, r8
    63c0:	d101      	bne.n	63c6 <_dtoa_r+0x40a>
    63c2:	f000 fc33 	bl	6c2c <_dtoa_r+0xc70>
    63c6:	9808      	ldr	r0, [sp, #32]
    63c8:	9909      	ldr	r1, [sp, #36]	; 0x24
    63ca:	2200      	movs	r2, #0
    63cc:	4bb0      	ldr	r3, [pc, #704]	; (6690 <_dtoa_r+0x6d4>)
    63ce:	f7fc fec7 	bl	3160 <__aeabi_dmul>
    63d2:	2200      	movs	r2, #0
    63d4:	4bae      	ldr	r3, [pc, #696]	; (6690 <_dtoa_r+0x6d4>)
    63d6:	9008      	str	r0, [sp, #32]
    63d8:	9109      	str	r1, [sp, #36]	; 0x24
    63da:	0028      	movs	r0, r5
    63dc:	0031      	movs	r1, r6
    63de:	f7fc febf 	bl	3160 <__aeabi_dmul>
    63e2:	000d      	movs	r5, r1
    63e4:	0004      	movs	r4, r0
    63e6:	f7fd fc51 	bl	3c8c <__aeabi_d2iz>
    63ea:	0007      	movs	r7, r0
    63ec:	f7fd fc82 	bl	3cf4 <__aeabi_i2d>
    63f0:	0002      	movs	r2, r0
    63f2:	000b      	movs	r3, r1
    63f4:	0020      	movs	r0, r4
    63f6:	0029      	movs	r1, r5
    63f8:	f7fd f932 	bl	3660 <__aeabi_dsub>
    63fc:	464b      	mov	r3, r9
    63fe:	3730      	adds	r7, #48	; 0x30
    6400:	b2ff      	uxtb	r7, r7
    6402:	1c5c      	adds	r4, r3, #1
    6404:	701f      	strb	r7, [r3, #0]
    6406:	9a08      	ldr	r2, [sp, #32]
    6408:	9b09      	ldr	r3, [sp, #36]	; 0x24
    640a:	0005      	movs	r5, r0
    640c:	000e      	movs	r6, r1
    640e:	f7fd fddd 	bl	3fcc <__aeabi_dcmplt>
    6412:	2800      	cmp	r0, #0
    6414:	d0c4      	beq.n	63a0 <_dtoa_r+0x3e4>
    6416:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6418:	9303      	str	r3, [sp, #12]
    641a:	4659      	mov	r1, fp
    641c:	4650      	mov	r0, sl
    641e:	f001 fdd7 	bl	7fd0 <_Bfree>
    6422:	2300      	movs	r3, #0
    6424:	7023      	strb	r3, [r4, #0]
    6426:	9b03      	ldr	r3, [sp, #12]
    6428:	9a24      	ldr	r2, [sp, #144]	; 0x90
    642a:	3301      	adds	r3, #1
    642c:	6013      	str	r3, [r2, #0]
    642e:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6430:	2b00      	cmp	r3, #0
    6432:	d100      	bne.n	6436 <_dtoa_r+0x47a>
    6434:	e3a8      	b.n	6b88 <_dtoa_r+0xbcc>
    6436:	601c      	str	r4, [r3, #0]
    6438:	980a      	ldr	r0, [sp, #40]	; 0x28
    643a:	e5f4      	b.n	6026 <_dtoa_r+0x6a>
    643c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    643e:	4699      	mov	r9, r3
    6440:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6442:	444b      	add	r3, r9
    6444:	001c      	movs	r4, r3
    6446:	4b93      	ldr	r3, [pc, #588]	; (6694 <_dtoa_r+0x6d8>)
    6448:	18e3      	adds	r3, r4, r3
    644a:	2b20      	cmp	r3, #32
    644c:	dc00      	bgt.n	6450 <_dtoa_r+0x494>
    644e:	e17e      	b.n	674e <_dtoa_r+0x792>
    6450:	0031      	movs	r1, r6
    6452:	4a91      	ldr	r2, [pc, #580]	; (6698 <_dtoa_r+0x6dc>)
    6454:	4640      	mov	r0, r8
    6456:	18a2      	adds	r2, r4, r2
    6458:	40d1      	lsrs	r1, r2
    645a:	000a      	movs	r2, r1
    645c:	2140      	movs	r1, #64	; 0x40
    645e:	1acb      	subs	r3, r1, r3
    6460:	4098      	lsls	r0, r3
    6462:	4310      	orrs	r0, r2
    6464:	f7fd fc88 	bl	3d78 <__aeabi_ui2d>
    6468:	1e63      	subs	r3, r4, #1
    646a:	4698      	mov	r8, r3
    646c:	2301      	movs	r3, #1
    646e:	4d8b      	ldr	r5, [pc, #556]	; (669c <_dtoa_r+0x6e0>)
    6470:	930f      	str	r3, [sp, #60]	; 0x3c
    6472:	1949      	adds	r1, r1, r5
    6474:	e618      	b.n	60a8 <_dtoa_r+0xec>
    6476:	488a      	ldr	r0, [pc, #552]	; (66a0 <_dtoa_r+0x6e4>)
    6478:	e5d5      	b.n	6026 <_dtoa_r+0x6a>
    647a:	2300      	movs	r3, #0
    647c:	4652      	mov	r2, sl
    647e:	2100      	movs	r1, #0
    6480:	6453      	str	r3, [r2, #68]	; 0x44
    6482:	4650      	mov	r0, sl
    6484:	f001 fd7c 	bl	7f80 <_Balloc>
    6488:	4653      	mov	r3, sl
    648a:	6418      	str	r0, [r3, #64]	; 0x40
    648c:	2301      	movs	r3, #1
    648e:	425b      	negs	r3, r3
    6490:	9307      	str	r3, [sp, #28]
    6492:	930e      	str	r3, [sp, #56]	; 0x38
    6494:	3302      	adds	r3, #2
    6496:	2200      	movs	r2, #0
    6498:	930b      	str	r3, [sp, #44]	; 0x2c
    649a:	2300      	movs	r3, #0
    649c:	900a      	str	r0, [sp, #40]	; 0x28
    649e:	9223      	str	r2, [sp, #140]	; 0x8c
    64a0:	9322      	str	r3, [sp, #136]	; 0x88
    64a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    64a4:	2b00      	cmp	r3, #0
    64a6:	da00      	bge.n	64aa <_dtoa_r+0x4ee>
    64a8:	e0ab      	b.n	6602 <_dtoa_r+0x646>
    64aa:	9a03      	ldr	r2, [sp, #12]
    64ac:	2a0e      	cmp	r2, #14
    64ae:	dd00      	ble.n	64b2 <_dtoa_r+0x4f6>
    64b0:	e0a7      	b.n	6602 <_dtoa_r+0x646>
    64b2:	4b7c      	ldr	r3, [pc, #496]	; (66a4 <_dtoa_r+0x6e8>)
    64b4:	00d2      	lsls	r2, r2, #3
    64b6:	189b      	adds	r3, r3, r2
    64b8:	685c      	ldr	r4, [r3, #4]
    64ba:	681b      	ldr	r3, [r3, #0]
    64bc:	9304      	str	r3, [sp, #16]
    64be:	9405      	str	r4, [sp, #20]
    64c0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    64c2:	2b00      	cmp	r3, #0
    64c4:	da00      	bge.n	64c8 <_dtoa_r+0x50c>
    64c6:	e2a7      	b.n	6a18 <_dtoa_r+0xa5c>
    64c8:	9c04      	ldr	r4, [sp, #16]
    64ca:	9d05      	ldr	r5, [sp, #20]
    64cc:	0030      	movs	r0, r6
    64ce:	0022      	movs	r2, r4
    64d0:	002b      	movs	r3, r5
    64d2:	0039      	movs	r1, r7
    64d4:	f7fc fb10 	bl	2af8 <__aeabi_ddiv>
    64d8:	f7fd fbd8 	bl	3c8c <__aeabi_d2iz>
    64dc:	4680      	mov	r8, r0
    64de:	f7fd fc09 	bl	3cf4 <__aeabi_i2d>
    64e2:	0022      	movs	r2, r4
    64e4:	002b      	movs	r3, r5
    64e6:	f7fc fe3b 	bl	3160 <__aeabi_dmul>
    64ea:	0002      	movs	r2, r0
    64ec:	000b      	movs	r3, r1
    64ee:	0030      	movs	r0, r6
    64f0:	0039      	movs	r1, r7
    64f2:	f7fd f8b5 	bl	3660 <__aeabi_dsub>
    64f6:	4643      	mov	r3, r8
    64f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    64fa:	3330      	adds	r3, #48	; 0x30
    64fc:	7013      	strb	r3, [r2, #0]
    64fe:	9b07      	ldr	r3, [sp, #28]
    6500:	0006      	movs	r6, r0
    6502:	000f      	movs	r7, r1
    6504:	1c54      	adds	r4, r2, #1
    6506:	2b01      	cmp	r3, #1
    6508:	d04e      	beq.n	65a8 <_dtoa_r+0x5ec>
    650a:	2200      	movs	r2, #0
    650c:	4b60      	ldr	r3, [pc, #384]	; (6690 <_dtoa_r+0x6d4>)
    650e:	f7fc fe27 	bl	3160 <__aeabi_dmul>
    6512:	2200      	movs	r2, #0
    6514:	2300      	movs	r3, #0
    6516:	0006      	movs	r6, r0
    6518:	000f      	movs	r7, r1
    651a:	f7fd fd51 	bl	3fc0 <__aeabi_dcmpeq>
    651e:	2800      	cmp	r0, #0
    6520:	d000      	beq.n	6524 <_dtoa_r+0x568>
    6522:	e77a      	b.n	641a <_dtoa_r+0x45e>
    6524:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6526:	9a07      	ldr	r2, [sp, #28]
    6528:	1c9d      	adds	r5, r3, #2
    652a:	469c      	mov	ip, r3
    652c:	465b      	mov	r3, fp
    652e:	9306      	str	r3, [sp, #24]
    6530:	4653      	mov	r3, sl
    6532:	4462      	add	r2, ip
    6534:	46aa      	mov	sl, r5
    6536:	9c04      	ldr	r4, [sp, #16]
    6538:	9d05      	ldr	r5, [sp, #20]
    653a:	4691      	mov	r9, r2
    653c:	9307      	str	r3, [sp, #28]
    653e:	e00f      	b.n	6560 <_dtoa_r+0x5a4>
    6540:	2200      	movs	r2, #0
    6542:	4b53      	ldr	r3, [pc, #332]	; (6690 <_dtoa_r+0x6d4>)
    6544:	f7fc fe0c 	bl	3160 <__aeabi_dmul>
    6548:	2301      	movs	r3, #1
    654a:	469c      	mov	ip, r3
    654c:	2200      	movs	r2, #0
    654e:	2300      	movs	r3, #0
    6550:	0006      	movs	r6, r0
    6552:	000f      	movs	r7, r1
    6554:	44e2      	add	sl, ip
    6556:	f7fd fd33 	bl	3fc0 <__aeabi_dcmpeq>
    655a:	2800      	cmp	r0, #0
    655c:	d000      	beq.n	6560 <_dtoa_r+0x5a4>
    655e:	e2d9      	b.n	6b14 <_dtoa_r+0xb58>
    6560:	0022      	movs	r2, r4
    6562:	002b      	movs	r3, r5
    6564:	0030      	movs	r0, r6
    6566:	0039      	movs	r1, r7
    6568:	f7fc fac6 	bl	2af8 <__aeabi_ddiv>
    656c:	f7fd fb8e 	bl	3c8c <__aeabi_d2iz>
    6570:	4680      	mov	r8, r0
    6572:	f7fd fbbf 	bl	3cf4 <__aeabi_i2d>
    6576:	0022      	movs	r2, r4
    6578:	002b      	movs	r3, r5
    657a:	f7fc fdf1 	bl	3160 <__aeabi_dmul>
    657e:	0002      	movs	r2, r0
    6580:	000b      	movs	r3, r1
    6582:	0030      	movs	r0, r6
    6584:	0039      	movs	r1, r7
    6586:	f7fd f86b 	bl	3660 <__aeabi_dsub>
    658a:	4653      	mov	r3, sl
    658c:	4642      	mov	r2, r8
    658e:	3b01      	subs	r3, #1
    6590:	3230      	adds	r2, #48	; 0x30
    6592:	0006      	movs	r6, r0
    6594:	000f      	movs	r7, r1
    6596:	46d3      	mov	fp, sl
    6598:	701a      	strb	r2, [r3, #0]
    659a:	45d1      	cmp	r9, sl
    659c:	d1d0      	bne.n	6540 <_dtoa_r+0x584>
    659e:	9b06      	ldr	r3, [sp, #24]
    65a0:	4654      	mov	r4, sl
    65a2:	469b      	mov	fp, r3
    65a4:	9b07      	ldr	r3, [sp, #28]
    65a6:	469a      	mov	sl, r3
    65a8:	0032      	movs	r2, r6
    65aa:	003b      	movs	r3, r7
    65ac:	0030      	movs	r0, r6
    65ae:	0039      	movs	r1, r7
    65b0:	f002 fe38 	bl	9224 <__aeabi_dadd>
    65b4:	0006      	movs	r6, r0
    65b6:	000f      	movs	r7, r1
    65b8:	0002      	movs	r2, r0
    65ba:	000b      	movs	r3, r1
    65bc:	9804      	ldr	r0, [sp, #16]
    65be:	9905      	ldr	r1, [sp, #20]
    65c0:	f7fd fd04 	bl	3fcc <__aeabi_dcmplt>
    65c4:	2800      	cmp	r0, #0
    65c6:	d10c      	bne.n	65e2 <_dtoa_r+0x626>
    65c8:	9804      	ldr	r0, [sp, #16]
    65ca:	9905      	ldr	r1, [sp, #20]
    65cc:	0032      	movs	r2, r6
    65ce:	003b      	movs	r3, r7
    65d0:	f7fd fcf6 	bl	3fc0 <__aeabi_dcmpeq>
    65d4:	2800      	cmp	r0, #0
    65d6:	d100      	bne.n	65da <_dtoa_r+0x61e>
    65d8:	e71f      	b.n	641a <_dtoa_r+0x45e>
    65da:	4643      	mov	r3, r8
    65dc:	07db      	lsls	r3, r3, #31
    65de:	d400      	bmi.n	65e2 <_dtoa_r+0x626>
    65e0:	e71b      	b.n	641a <_dtoa_r+0x45e>
    65e2:	1e65      	subs	r5, r4, #1
    65e4:	782f      	ldrb	r7, [r5, #0]
    65e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    65e8:	e006      	b.n	65f8 <_dtoa_r+0x63c>
    65ea:	429d      	cmp	r5, r3
    65ec:	d100      	bne.n	65f0 <_dtoa_r+0x634>
    65ee:	e351      	b.n	6c94 <_dtoa_r+0xcd8>
    65f0:	3c02      	subs	r4, #2
    65f2:	7827      	ldrb	r7, [r4, #0]
    65f4:	002c      	movs	r4, r5
    65f6:	3d01      	subs	r5, #1
    65f8:	2f39      	cmp	r7, #57	; 0x39
    65fa:	d0f6      	beq.n	65ea <_dtoa_r+0x62e>
    65fc:	3701      	adds	r7, #1
    65fe:	702f      	strb	r7, [r5, #0]
    6600:	e70b      	b.n	641a <_dtoa_r+0x45e>
    6602:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    6604:	2a00      	cmp	r2, #0
    6606:	d04f      	beq.n	66a8 <_dtoa_r+0x6ec>
    6608:	9a22      	ldr	r2, [sp, #136]	; 0x88
    660a:	2a01      	cmp	r2, #1
    660c:	dc00      	bgt.n	6610 <_dtoa_r+0x654>
    660e:	e22c      	b.n	6a6a <_dtoa_r+0xaae>
    6610:	9b07      	ldr	r3, [sp, #28]
    6612:	1e5c      	subs	r4, r3, #1
    6614:	464b      	mov	r3, r9
    6616:	45a1      	cmp	r9, r4
    6618:	da00      	bge.n	661c <_dtoa_r+0x660>
    661a:	e2b8      	b.n	6b8e <_dtoa_r+0xbd2>
    661c:	1b1c      	subs	r4, r3, r4
    661e:	9b07      	ldr	r3, [sp, #28]
    6620:	2b00      	cmp	r3, #0
    6622:	da00      	bge.n	6626 <_dtoa_r+0x66a>
    6624:	e3d4      	b.n	6dd0 <_dtoa_r+0xe14>
    6626:	9b06      	ldr	r3, [sp, #24]
    6628:	9308      	str	r3, [sp, #32]
    662a:	9b07      	ldr	r3, [sp, #28]
    662c:	9a06      	ldr	r2, [sp, #24]
    662e:	2101      	movs	r1, #1
    6630:	4694      	mov	ip, r2
    6632:	449c      	add	ip, r3
    6634:	4662      	mov	r2, ip
    6636:	9206      	str	r2, [sp, #24]
    6638:	9a04      	ldr	r2, [sp, #16]
    663a:	4650      	mov	r0, sl
    663c:	4694      	mov	ip, r2
    663e:	449c      	add	ip, r3
    6640:	4663      	mov	r3, ip
    6642:	9304      	str	r3, [sp, #16]
    6644:	f001 fd5c 	bl	8100 <__i2b>
    6648:	4680      	mov	r8, r0
    664a:	e032      	b.n	66b2 <_dtoa_r+0x6f6>
    664c:	9a06      	ldr	r2, [sp, #24]
    664e:	9b03      	ldr	r3, [sp, #12]
    6650:	1ad2      	subs	r2, r2, r3
    6652:	425b      	negs	r3, r3
    6654:	4699      	mov	r9, r3
    6656:	2300      	movs	r3, #0
    6658:	9206      	str	r2, [sp, #24]
    665a:	930d      	str	r3, [sp, #52]	; 0x34
    665c:	e579      	b.n	6152 <_dtoa_r+0x196>
    665e:	9803      	ldr	r0, [sp, #12]
    6660:	f7fd fb48 	bl	3cf4 <__aeabi_i2d>
    6664:	000b      	movs	r3, r1
    6666:	0002      	movs	r2, r0
    6668:	0029      	movs	r1, r5
    666a:	0020      	movs	r0, r4
    666c:	f7fd fca8 	bl	3fc0 <__aeabi_dcmpeq>
    6670:	0002      	movs	r2, r0
    6672:	4250      	negs	r0, r2
    6674:	4150      	adcs	r0, r2
    6676:	9b03      	ldr	r3, [sp, #12]
    6678:	1a1b      	subs	r3, r3, r0
    667a:	9303      	str	r3, [sp, #12]
    667c:	e53d      	b.n	60fa <_dtoa_r+0x13e>
    667e:	2301      	movs	r3, #1
    6680:	1a9b      	subs	r3, r3, r2
    6682:	9306      	str	r3, [sp, #24]
    6684:	2300      	movs	r3, #0
    6686:	9304      	str	r3, [sp, #16]
    6688:	e557      	b.n	613a <_dtoa_r+0x17e>
    668a:	46c0      	nop			; (mov r8, r8)
    668c:	3ff00000 	.word	0x3ff00000
    6690:	40240000 	.word	0x40240000
    6694:	00000432 	.word	0x00000432
    6698:	00000412 	.word	0x00000412
    669c:	fe100000 	.word	0xfe100000
    66a0:	00009e20 	.word	0x00009e20
    66a4:	00009e80 	.word	0x00009e80
    66a8:	9b06      	ldr	r3, [sp, #24]
    66aa:	464c      	mov	r4, r9
    66ac:	9308      	str	r3, [sp, #32]
    66ae:	2300      	movs	r3, #0
    66b0:	4698      	mov	r8, r3
    66b2:	9908      	ldr	r1, [sp, #32]
    66b4:	1e0b      	subs	r3, r1, #0
    66b6:	dd0e      	ble.n	66d6 <_dtoa_r+0x71a>
    66b8:	9a04      	ldr	r2, [sp, #16]
    66ba:	2a00      	cmp	r2, #0
    66bc:	dd0b      	ble.n	66d6 <_dtoa_r+0x71a>
    66be:	4293      	cmp	r3, r2
    66c0:	dd00      	ble.n	66c4 <_dtoa_r+0x708>
    66c2:	e187      	b.n	69d4 <_dtoa_r+0xa18>
    66c4:	9a06      	ldr	r2, [sp, #24]
    66c6:	1ad2      	subs	r2, r2, r3
    66c8:	9206      	str	r2, [sp, #24]
    66ca:	9a08      	ldr	r2, [sp, #32]
    66cc:	1ad2      	subs	r2, r2, r3
    66ce:	9208      	str	r2, [sp, #32]
    66d0:	9a04      	ldr	r2, [sp, #16]
    66d2:	1ad3      	subs	r3, r2, r3
    66d4:	9304      	str	r3, [sp, #16]
    66d6:	464b      	mov	r3, r9
    66d8:	2b00      	cmp	r3, #0
    66da:	d01a      	beq.n	6712 <_dtoa_r+0x756>
    66dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    66de:	2b00      	cmp	r3, #0
    66e0:	d100      	bne.n	66e4 <_dtoa_r+0x728>
    66e2:	e1bb      	b.n	6a5c <_dtoa_r+0xaa0>
    66e4:	2c00      	cmp	r4, #0
    66e6:	dd10      	ble.n	670a <_dtoa_r+0x74e>
    66e8:	4641      	mov	r1, r8
    66ea:	0022      	movs	r2, r4
    66ec:	4650      	mov	r0, sl
    66ee:	f001 fdbb 	bl	8268 <__pow5mult>
    66f2:	465a      	mov	r2, fp
    66f4:	0001      	movs	r1, r0
    66f6:	4680      	mov	r8, r0
    66f8:	4650      	mov	r0, sl
    66fa:	f001 fd0b 	bl	8114 <__multiply>
    66fe:	0005      	movs	r5, r0
    6700:	4659      	mov	r1, fp
    6702:	4650      	mov	r0, sl
    6704:	f001 fc64 	bl	7fd0 <_Bfree>
    6708:	46ab      	mov	fp, r5
    670a:	464b      	mov	r3, r9
    670c:	1b1a      	subs	r2, r3, r4
    670e:	d000      	beq.n	6712 <_dtoa_r+0x756>
    6710:	e1a5      	b.n	6a5e <_dtoa_r+0xaa2>
    6712:	2101      	movs	r1, #1
    6714:	4650      	mov	r0, sl
    6716:	f001 fcf3 	bl	8100 <__i2b>
    671a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    671c:	4681      	mov	r9, r0
    671e:	2b00      	cmp	r3, #0
    6720:	dd1d      	ble.n	675e <_dtoa_r+0x7a2>
    6722:	001a      	movs	r2, r3
    6724:	0001      	movs	r1, r0
    6726:	4650      	mov	r0, sl
    6728:	f001 fd9e 	bl	8268 <__pow5mult>
    672c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    672e:	4681      	mov	r9, r0
    6730:	2b01      	cmp	r3, #1
    6732:	dc00      	bgt.n	6736 <_dtoa_r+0x77a>
    6734:	e150      	b.n	69d8 <_dtoa_r+0xa1c>
    6736:	2400      	movs	r4, #0
    6738:	464b      	mov	r3, r9
    673a:	691b      	ldr	r3, [r3, #16]
    673c:	3303      	adds	r3, #3
    673e:	009b      	lsls	r3, r3, #2
    6740:	444b      	add	r3, r9
    6742:	6858      	ldr	r0, [r3, #4]
    6744:	f001 fc94 	bl	8070 <__hi0bits>
    6748:	2320      	movs	r3, #32
    674a:	1a1b      	subs	r3, r3, r0
    674c:	e010      	b.n	6770 <_dtoa_r+0x7b4>
    674e:	2220      	movs	r2, #32
    6750:	0030      	movs	r0, r6
    6752:	1ad3      	subs	r3, r2, r3
    6754:	4098      	lsls	r0, r3
    6756:	e685      	b.n	6464 <_dtoa_r+0x4a8>
    6758:	2300      	movs	r3, #0
    675a:	930c      	str	r3, [sp, #48]	; 0x30
    675c:	e4e3      	b.n	6126 <_dtoa_r+0x16a>
    675e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6760:	2400      	movs	r4, #0
    6762:	2b01      	cmp	r3, #1
    6764:	dc00      	bgt.n	6768 <_dtoa_r+0x7ac>
    6766:	e18b      	b.n	6a80 <_dtoa_r+0xac4>
    6768:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    676a:	2301      	movs	r3, #1
    676c:	2a00      	cmp	r2, #0
    676e:	d1e3      	bne.n	6738 <_dtoa_r+0x77c>
    6770:	9904      	ldr	r1, [sp, #16]
    6772:	201f      	movs	r0, #31
    6774:	468c      	mov	ip, r1
    6776:	4463      	add	r3, ip
    6778:	4018      	ands	r0, r3
    677a:	d100      	bne.n	677e <_dtoa_r+0x7c2>
    677c:	e0ae      	b.n	68dc <_dtoa_r+0x920>
    677e:	2320      	movs	r3, #32
    6780:	1a1b      	subs	r3, r3, r0
    6782:	2b04      	cmp	r3, #4
    6784:	dc00      	bgt.n	6788 <_dtoa_r+0x7cc>
    6786:	e3cc      	b.n	6f22 <_dtoa_r+0xf66>
    6788:	231c      	movs	r3, #28
    678a:	1a18      	subs	r0, r3, r0
    678c:	9b06      	ldr	r3, [sp, #24]
    678e:	469c      	mov	ip, r3
    6790:	4484      	add	ip, r0
    6792:	4663      	mov	r3, ip
    6794:	9306      	str	r3, [sp, #24]
    6796:	9b08      	ldr	r3, [sp, #32]
    6798:	469c      	mov	ip, r3
    679a:	4484      	add	ip, r0
    679c:	4663      	mov	r3, ip
    679e:	468c      	mov	ip, r1
    67a0:	4484      	add	ip, r0
    67a2:	9308      	str	r3, [sp, #32]
    67a4:	4663      	mov	r3, ip
    67a6:	9304      	str	r3, [sp, #16]
    67a8:	9b06      	ldr	r3, [sp, #24]
    67aa:	2b00      	cmp	r3, #0
    67ac:	dd05      	ble.n	67ba <_dtoa_r+0x7fe>
    67ae:	4659      	mov	r1, fp
    67b0:	001a      	movs	r2, r3
    67b2:	4650      	mov	r0, sl
    67b4:	f001 fdb8 	bl	8328 <__lshift>
    67b8:	4683      	mov	fp, r0
    67ba:	9b04      	ldr	r3, [sp, #16]
    67bc:	2b00      	cmp	r3, #0
    67be:	dd05      	ble.n	67cc <_dtoa_r+0x810>
    67c0:	4649      	mov	r1, r9
    67c2:	001a      	movs	r2, r3
    67c4:	4650      	mov	r0, sl
    67c6:	f001 fdaf 	bl	8328 <__lshift>
    67ca:	4681      	mov	r9, r0
    67cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    67ce:	2b00      	cmp	r3, #0
    67d0:	d000      	beq.n	67d4 <_dtoa_r+0x818>
    67d2:	e094      	b.n	68fe <_dtoa_r+0x942>
    67d4:	9b07      	ldr	r3, [sp, #28]
    67d6:	2b00      	cmp	r3, #0
    67d8:	dc00      	bgt.n	67dc <_dtoa_r+0x820>
    67da:	e175      	b.n	6ac8 <_dtoa_r+0xb0c>
    67dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    67de:	2b00      	cmp	r3, #0
    67e0:	d100      	bne.n	67e4 <_dtoa_r+0x828>
    67e2:	e0a6      	b.n	6932 <_dtoa_r+0x976>
    67e4:	9b08      	ldr	r3, [sp, #32]
    67e6:	2b00      	cmp	r3, #0
    67e8:	dd05      	ble.n	67f6 <_dtoa_r+0x83a>
    67ea:	4641      	mov	r1, r8
    67ec:	001a      	movs	r2, r3
    67ee:	4650      	mov	r0, sl
    67f0:	f001 fd9a 	bl	8328 <__lshift>
    67f4:	4680      	mov	r8, r0
    67f6:	4643      	mov	r3, r8
    67f8:	930c      	str	r3, [sp, #48]	; 0x30
    67fa:	2c00      	cmp	r4, #0
    67fc:	d000      	beq.n	6800 <_dtoa_r+0x844>
    67fe:	e250      	b.n	6ca2 <_dtoa_r+0xce6>
    6800:	9c07      	ldr	r4, [sp, #28]
    6802:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6804:	3c01      	subs	r4, #1
    6806:	0023      	movs	r3, r4
    6808:	4694      	mov	ip, r2
    680a:	4463      	add	r3, ip
    680c:	9308      	str	r3, [sp, #32]
    680e:	2301      	movs	r3, #1
    6810:	4033      	ands	r3, r6
    6812:	9307      	str	r3, [sp, #28]
    6814:	464b      	mov	r3, r9
    6816:	9306      	str	r3, [sp, #24]
    6818:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    681a:	4657      	mov	r7, sl
    681c:	4645      	mov	r5, r8
    681e:	465e      	mov	r6, fp
    6820:	4692      	mov	sl, r2
    6822:	4698      	mov	r8, r3
    6824:	9b06      	ldr	r3, [sp, #24]
    6826:	0030      	movs	r0, r6
    6828:	0019      	movs	r1, r3
    682a:	4699      	mov	r9, r3
    682c:	f7ff fb1c 	bl	5e68 <quorem>
    6830:	0003      	movs	r3, r0
    6832:	900b      	str	r0, [sp, #44]	; 0x2c
    6834:	3330      	adds	r3, #48	; 0x30
    6836:	0029      	movs	r1, r5
    6838:	0030      	movs	r0, r6
    683a:	9304      	str	r3, [sp, #16]
    683c:	f001 fdd4 	bl	83e8 <__mcmp>
    6840:	4649      	mov	r1, r9
    6842:	0004      	movs	r4, r0
    6844:	4642      	mov	r2, r8
    6846:	0038      	movs	r0, r7
    6848:	f001 fde8 	bl	841c <__mdiff>
    684c:	68c3      	ldr	r3, [r0, #12]
    684e:	4681      	mov	r9, r0
    6850:	2b00      	cmp	r3, #0
    6852:	d000      	beq.n	6856 <_dtoa_r+0x89a>
    6854:	e11e      	b.n	6a94 <_dtoa_r+0xad8>
    6856:	0001      	movs	r1, r0
    6858:	0030      	movs	r0, r6
    685a:	f001 fdc5 	bl	83e8 <__mcmp>
    685e:	4683      	mov	fp, r0
    6860:	4649      	mov	r1, r9
    6862:	0038      	movs	r0, r7
    6864:	f001 fbb4 	bl	7fd0 <_Bfree>
    6868:	465b      	mov	r3, fp
    686a:	9a22      	ldr	r2, [sp, #136]	; 0x88
    686c:	4313      	orrs	r3, r2
    686e:	d103      	bne.n	6878 <_dtoa_r+0x8bc>
    6870:	9b07      	ldr	r3, [sp, #28]
    6872:	2b00      	cmp	r3, #0
    6874:	d100      	bne.n	6878 <_dtoa_r+0x8bc>
    6876:	e306      	b.n	6e86 <_dtoa_r+0xeca>
    6878:	2c00      	cmp	r4, #0
    687a:	da00      	bge.n	687e <_dtoa_r+0x8c2>
    687c:	e1a8      	b.n	6bd0 <_dtoa_r+0xc14>
    687e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6880:	431c      	orrs	r4, r3
    6882:	d103      	bne.n	688c <_dtoa_r+0x8d0>
    6884:	9b07      	ldr	r3, [sp, #28]
    6886:	2b00      	cmp	r3, #0
    6888:	d100      	bne.n	688c <_dtoa_r+0x8d0>
    688a:	e1a1      	b.n	6bd0 <_dtoa_r+0xc14>
    688c:	465b      	mov	r3, fp
    688e:	2b00      	cmp	r3, #0
    6890:	dd00      	ble.n	6894 <_dtoa_r+0x8d8>
    6892:	e282      	b.n	6d9a <_dtoa_r+0xdde>
    6894:	4669      	mov	r1, sp
    6896:	4652      	mov	r2, sl
    6898:	4653      	mov	r3, sl
    689a:	7c09      	ldrb	r1, [r1, #16]
    689c:	1c5c      	adds	r4, r3, #1
    689e:	7011      	strb	r1, [r2, #0]
    68a0:	9a08      	ldr	r2, [sp, #32]
    68a2:	4552      	cmp	r2, sl
    68a4:	d100      	bne.n	68a8 <_dtoa_r+0x8ec>
    68a6:	e28a      	b.n	6dbe <_dtoa_r+0xe02>
    68a8:	0031      	movs	r1, r6
    68aa:	2300      	movs	r3, #0
    68ac:	220a      	movs	r2, #10
    68ae:	0038      	movs	r0, r7
    68b0:	f001 fb98 	bl	7fe4 <__multadd>
    68b4:	2300      	movs	r3, #0
    68b6:	0006      	movs	r6, r0
    68b8:	220a      	movs	r2, #10
    68ba:	0029      	movs	r1, r5
    68bc:	0038      	movs	r0, r7
    68be:	4545      	cmp	r5, r8
    68c0:	d100      	bne.n	68c4 <_dtoa_r+0x908>
    68c2:	e0e1      	b.n	6a88 <_dtoa_r+0xacc>
    68c4:	f001 fb8e 	bl	7fe4 <__multadd>
    68c8:	4641      	mov	r1, r8
    68ca:	0005      	movs	r5, r0
    68cc:	2300      	movs	r3, #0
    68ce:	220a      	movs	r2, #10
    68d0:	0038      	movs	r0, r7
    68d2:	f001 fb87 	bl	7fe4 <__multadd>
    68d6:	46a2      	mov	sl, r4
    68d8:	4680      	mov	r8, r0
    68da:	e7a3      	b.n	6824 <_dtoa_r+0x868>
    68dc:	201c      	movs	r0, #28
    68de:	9b06      	ldr	r3, [sp, #24]
    68e0:	469c      	mov	ip, r3
    68e2:	4484      	add	ip, r0
    68e4:	4663      	mov	r3, ip
    68e6:	9306      	str	r3, [sp, #24]
    68e8:	9b08      	ldr	r3, [sp, #32]
    68ea:	469c      	mov	ip, r3
    68ec:	4484      	add	ip, r0
    68ee:	4663      	mov	r3, ip
    68f0:	9308      	str	r3, [sp, #32]
    68f2:	9b04      	ldr	r3, [sp, #16]
    68f4:	469c      	mov	ip, r3
    68f6:	4484      	add	ip, r0
    68f8:	4663      	mov	r3, ip
    68fa:	9304      	str	r3, [sp, #16]
    68fc:	e754      	b.n	67a8 <_dtoa_r+0x7ec>
    68fe:	4649      	mov	r1, r9
    6900:	4658      	mov	r0, fp
    6902:	f001 fd71 	bl	83e8 <__mcmp>
    6906:	2800      	cmp	r0, #0
    6908:	db00      	blt.n	690c <_dtoa_r+0x950>
    690a:	e763      	b.n	67d4 <_dtoa_r+0x818>
    690c:	9b03      	ldr	r3, [sp, #12]
    690e:	4659      	mov	r1, fp
    6910:	3b01      	subs	r3, #1
    6912:	9303      	str	r3, [sp, #12]
    6914:	220a      	movs	r2, #10
    6916:	2300      	movs	r3, #0
    6918:	4650      	mov	r0, sl
    691a:	f001 fb63 	bl	7fe4 <__multadd>
    691e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6920:	4683      	mov	fp, r0
    6922:	2b00      	cmp	r3, #0
    6924:	d000      	beq.n	6928 <_dtoa_r+0x96c>
    6926:	e2ca      	b.n	6ebe <_dtoa_r+0xf02>
    6928:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    692a:	2b00      	cmp	r3, #0
    692c:	dc00      	bgt.n	6930 <_dtoa_r+0x974>
    692e:	e2d8      	b.n	6ee2 <_dtoa_r+0xf26>
    6930:	9307      	str	r3, [sp, #28]
    6932:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6934:	465d      	mov	r5, fp
    6936:	2400      	movs	r4, #0
    6938:	9f07      	ldr	r7, [sp, #28]
    693a:	469b      	mov	fp, r3
    693c:	e006      	b.n	694c <_dtoa_r+0x990>
    693e:	0029      	movs	r1, r5
    6940:	2300      	movs	r3, #0
    6942:	220a      	movs	r2, #10
    6944:	4650      	mov	r0, sl
    6946:	f001 fb4d 	bl	7fe4 <__multadd>
    694a:	0005      	movs	r5, r0
    694c:	4649      	mov	r1, r9
    694e:	0028      	movs	r0, r5
    6950:	f7ff fa8a 	bl	5e68 <quorem>
    6954:	465b      	mov	r3, fp
    6956:	3030      	adds	r0, #48	; 0x30
    6958:	5518      	strb	r0, [r3, r4]
    695a:	3401      	adds	r4, #1
    695c:	42bc      	cmp	r4, r7
    695e:	dbee      	blt.n	693e <_dtoa_r+0x982>
    6960:	46ab      	mov	fp, r5
    6962:	0006      	movs	r6, r0
    6964:	9c07      	ldr	r4, [sp, #28]
    6966:	2c00      	cmp	r4, #0
    6968:	dc00      	bgt.n	696c <_dtoa_r+0x9b0>
    696a:	e237      	b.n	6ddc <_dtoa_r+0xe20>
    696c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    696e:	2700      	movs	r7, #0
    6970:	469c      	mov	ip, r3
    6972:	4464      	add	r4, ip
    6974:	4659      	mov	r1, fp
    6976:	2201      	movs	r2, #1
    6978:	4650      	mov	r0, sl
    697a:	f001 fcd5 	bl	8328 <__lshift>
    697e:	4649      	mov	r1, r9
    6980:	4683      	mov	fp, r0
    6982:	f001 fd31 	bl	83e8 <__mcmp>
    6986:	2800      	cmp	r0, #0
    6988:	dc00      	bgt.n	698c <_dtoa_r+0x9d0>
    698a:	e144      	b.n	6c16 <_dtoa_r+0xc5a>
    698c:	1e65      	subs	r5, r4, #1
    698e:	782b      	ldrb	r3, [r5, #0]
    6990:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6992:	e006      	b.n	69a2 <_dtoa_r+0x9e6>
    6994:	4295      	cmp	r5, r2
    6996:	d100      	bne.n	699a <_dtoa_r+0x9de>
    6998:	e0b1      	b.n	6afe <_dtoa_r+0xb42>
    699a:	3c02      	subs	r4, #2
    699c:	7823      	ldrb	r3, [r4, #0]
    699e:	002c      	movs	r4, r5
    69a0:	3d01      	subs	r5, #1
    69a2:	2b39      	cmp	r3, #57	; 0x39
    69a4:	d0f6      	beq.n	6994 <_dtoa_r+0x9d8>
    69a6:	3301      	adds	r3, #1
    69a8:	702b      	strb	r3, [r5, #0]
    69aa:	4649      	mov	r1, r9
    69ac:	4650      	mov	r0, sl
    69ae:	f001 fb0f 	bl	7fd0 <_Bfree>
    69b2:	4643      	mov	r3, r8
    69b4:	2b00      	cmp	r3, #0
    69b6:	d100      	bne.n	69ba <_dtoa_r+0x9fe>
    69b8:	e52f      	b.n	641a <_dtoa_r+0x45e>
    69ba:	2f00      	cmp	r7, #0
    69bc:	d005      	beq.n	69ca <_dtoa_r+0xa0e>
    69be:	4547      	cmp	r7, r8
    69c0:	d003      	beq.n	69ca <_dtoa_r+0xa0e>
    69c2:	0039      	movs	r1, r7
    69c4:	4650      	mov	r0, sl
    69c6:	f001 fb03 	bl	7fd0 <_Bfree>
    69ca:	4641      	mov	r1, r8
    69cc:	4650      	mov	r0, sl
    69ce:	f001 faff 	bl	7fd0 <_Bfree>
    69d2:	e522      	b.n	641a <_dtoa_r+0x45e>
    69d4:	0013      	movs	r3, r2
    69d6:	e675      	b.n	66c4 <_dtoa_r+0x708>
    69d8:	2e00      	cmp	r6, #0
    69da:	d000      	beq.n	69de <_dtoa_r+0xa22>
    69dc:	e6ab      	b.n	6736 <_dtoa_r+0x77a>
    69de:	033b      	lsls	r3, r7, #12
    69e0:	2400      	movs	r4, #0
    69e2:	2b00      	cmp	r3, #0
    69e4:	d000      	beq.n	69e8 <_dtoa_r+0xa2c>
    69e6:	e6bf      	b.n	6768 <_dtoa_r+0x7ac>
    69e8:	4bba      	ldr	r3, [pc, #744]	; (6cd4 <_dtoa_r+0xd18>)
    69ea:	423b      	tst	r3, r7
    69ec:	d100      	bne.n	69f0 <_dtoa_r+0xa34>
    69ee:	e6bb      	b.n	6768 <_dtoa_r+0x7ac>
    69f0:	9b06      	ldr	r3, [sp, #24]
    69f2:	3401      	adds	r4, #1
    69f4:	3301      	adds	r3, #1
    69f6:	9306      	str	r3, [sp, #24]
    69f8:	9b04      	ldr	r3, [sp, #16]
    69fa:	3301      	adds	r3, #1
    69fc:	9304      	str	r3, [sp, #16]
    69fe:	e6b3      	b.n	6768 <_dtoa_r+0x7ac>
    6a00:	2301      	movs	r3, #1
    6a02:	930b      	str	r3, [sp, #44]	; 0x2c
    6a04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6a06:	2b00      	cmp	r3, #0
    6a08:	dc00      	bgt.n	6a0c <_dtoa_r+0xa50>
    6a0a:	e0d1      	b.n	6bb0 <_dtoa_r+0xbf4>
    6a0c:	001d      	movs	r5, r3
    6a0e:	4698      	mov	r8, r3
    6a10:	930e      	str	r3, [sp, #56]	; 0x38
    6a12:	9307      	str	r3, [sp, #28]
    6a14:	f7ff fbc8 	bl	61a8 <_dtoa_r+0x1ec>
    6a18:	9b07      	ldr	r3, [sp, #28]
    6a1a:	2b00      	cmp	r3, #0
    6a1c:	dd00      	ble.n	6a20 <_dtoa_r+0xa64>
    6a1e:	e553      	b.n	64c8 <_dtoa_r+0x50c>
    6a20:	d000      	beq.n	6a24 <_dtoa_r+0xa68>
    6a22:	e0ad      	b.n	6b80 <_dtoa_r+0xbc4>
    6a24:	9804      	ldr	r0, [sp, #16]
    6a26:	9905      	ldr	r1, [sp, #20]
    6a28:	2200      	movs	r2, #0
    6a2a:	4bab      	ldr	r3, [pc, #684]	; (6cd8 <_dtoa_r+0xd1c>)
    6a2c:	f7fc fb98 	bl	3160 <__aeabi_dmul>
    6a30:	003b      	movs	r3, r7
    6a32:	0032      	movs	r2, r6
    6a34:	f7fd fae8 	bl	4008 <__aeabi_dcmpge>
    6a38:	2300      	movs	r3, #0
    6a3a:	4699      	mov	r9, r3
    6a3c:	4698      	mov	r8, r3
    6a3e:	2800      	cmp	r0, #0
    6a40:	d055      	beq.n	6aee <_dtoa_r+0xb32>
    6a42:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6a44:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    6a46:	43db      	mvns	r3, r3
    6a48:	9303      	str	r3, [sp, #12]
    6a4a:	4649      	mov	r1, r9
    6a4c:	4650      	mov	r0, sl
    6a4e:	f001 fabf 	bl	7fd0 <_Bfree>
    6a52:	4643      	mov	r3, r8
    6a54:	2b00      	cmp	r3, #0
    6a56:	d100      	bne.n	6a5a <_dtoa_r+0xa9e>
    6a58:	e4df      	b.n	641a <_dtoa_r+0x45e>
    6a5a:	e7b6      	b.n	69ca <_dtoa_r+0xa0e>
    6a5c:	464a      	mov	r2, r9
    6a5e:	4659      	mov	r1, fp
    6a60:	4650      	mov	r0, sl
    6a62:	f001 fc01 	bl	8268 <__pow5mult>
    6a66:	4683      	mov	fp, r0
    6a68:	e653      	b.n	6712 <_dtoa_r+0x756>
    6a6a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6a6c:	2a00      	cmp	r2, #0
    6a6e:	d100      	bne.n	6a72 <_dtoa_r+0xab6>
    6a70:	e1b6      	b.n	6de0 <_dtoa_r+0xe24>
    6a72:	4a9a      	ldr	r2, [pc, #616]	; (6cdc <_dtoa_r+0xd20>)
    6a74:	464c      	mov	r4, r9
    6a76:	4694      	mov	ip, r2
    6a78:	9a06      	ldr	r2, [sp, #24]
    6a7a:	4463      	add	r3, ip
    6a7c:	9208      	str	r2, [sp, #32]
    6a7e:	e5d5      	b.n	662c <_dtoa_r+0x670>
    6a80:	2e00      	cmp	r6, #0
    6a82:	d000      	beq.n	6a86 <_dtoa_r+0xaca>
    6a84:	e670      	b.n	6768 <_dtoa_r+0x7ac>
    6a86:	e7aa      	b.n	69de <_dtoa_r+0xa22>
    6a88:	f001 faac 	bl	7fe4 <__multadd>
    6a8c:	46a2      	mov	sl, r4
    6a8e:	0005      	movs	r5, r0
    6a90:	4680      	mov	r8, r0
    6a92:	e6c7      	b.n	6824 <_dtoa_r+0x868>
    6a94:	2301      	movs	r3, #1
    6a96:	469b      	mov	fp, r3
    6a98:	e6e2      	b.n	6860 <_dtoa_r+0x8a4>
    6a9a:	2300      	movs	r3, #0
    6a9c:	930b      	str	r3, [sp, #44]	; 0x2c
    6a9e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6aa0:	2b02      	cmp	r3, #2
    6aa2:	d0af      	beq.n	6a04 <_dtoa_r+0xa48>
    6aa4:	2400      	movs	r4, #0
    6aa6:	4653      	mov	r3, sl
    6aa8:	0021      	movs	r1, r4
    6aaa:	645c      	str	r4, [r3, #68]	; 0x44
    6aac:	4650      	mov	r0, sl
    6aae:	f001 fa67 	bl	7f80 <_Balloc>
    6ab2:	4653      	mov	r3, sl
    6ab4:	6418      	str	r0, [r3, #64]	; 0x40
    6ab6:	2301      	movs	r3, #1
    6ab8:	425b      	negs	r3, r3
    6aba:	9307      	str	r3, [sp, #28]
    6abc:	930e      	str	r3, [sp, #56]	; 0x38
    6abe:	3302      	adds	r3, #2
    6ac0:	900a      	str	r0, [sp, #40]	; 0x28
    6ac2:	9423      	str	r4, [sp, #140]	; 0x8c
    6ac4:	930b      	str	r3, [sp, #44]	; 0x2c
    6ac6:	e4ec      	b.n	64a2 <_dtoa_r+0x4e6>
    6ac8:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6aca:	2b02      	cmp	r3, #2
    6acc:	dc00      	bgt.n	6ad0 <_dtoa_r+0xb14>
    6ace:	e685      	b.n	67dc <_dtoa_r+0x820>
    6ad0:	9b07      	ldr	r3, [sp, #28]
    6ad2:	2b00      	cmp	r3, #0
    6ad4:	d1b5      	bne.n	6a42 <_dtoa_r+0xa86>
    6ad6:	4649      	mov	r1, r9
    6ad8:	2205      	movs	r2, #5
    6ada:	4650      	mov	r0, sl
    6adc:	f001 fa82 	bl	7fe4 <__multadd>
    6ae0:	4681      	mov	r9, r0
    6ae2:	0001      	movs	r1, r0
    6ae4:	4658      	mov	r0, fp
    6ae6:	f001 fc7f 	bl	83e8 <__mcmp>
    6aea:	2800      	cmp	r0, #0
    6aec:	dda9      	ble.n	6a42 <_dtoa_r+0xa86>
    6aee:	2331      	movs	r3, #49	; 0x31
    6af0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6af2:	7013      	strb	r3, [r2, #0]
    6af4:	9b03      	ldr	r3, [sp, #12]
    6af6:	1c54      	adds	r4, r2, #1
    6af8:	3301      	adds	r3, #1
    6afa:	9303      	str	r3, [sp, #12]
    6afc:	e7a5      	b.n	6a4a <_dtoa_r+0xa8e>
    6afe:	9b03      	ldr	r3, [sp, #12]
    6b00:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6b02:	3301      	adds	r3, #1
    6b04:	9303      	str	r3, [sp, #12]
    6b06:	2331      	movs	r3, #49	; 0x31
    6b08:	7013      	strb	r3, [r2, #0]
    6b0a:	e74e      	b.n	69aa <_dtoa_r+0x9ee>
    6b0c:	2300      	movs	r3, #0
    6b0e:	930b      	str	r3, [sp, #44]	; 0x2c
    6b10:	f7ff fb3d 	bl	618e <_dtoa_r+0x1d2>
    6b14:	9b06      	ldr	r3, [sp, #24]
    6b16:	465c      	mov	r4, fp
    6b18:	469b      	mov	fp, r3
    6b1a:	9b07      	ldr	r3, [sp, #28]
    6b1c:	469a      	mov	sl, r3
    6b1e:	e47c      	b.n	641a <_dtoa_r+0x45e>
    6b20:	4640      	mov	r0, r8
    6b22:	f7fd f8e7 	bl	3cf4 <__aeabi_i2d>
    6b26:	0032      	movs	r2, r6
    6b28:	003b      	movs	r3, r7
    6b2a:	f7fc fb19 	bl	3160 <__aeabi_dmul>
    6b2e:	2200      	movs	r2, #0
    6b30:	4b6b      	ldr	r3, [pc, #428]	; (6ce0 <_dtoa_r+0xd24>)
    6b32:	f002 fb77 	bl	9224 <__aeabi_dadd>
    6b36:	4a6b      	ldr	r2, [pc, #428]	; (6ce4 <_dtoa_r+0xd28>)
    6b38:	000b      	movs	r3, r1
    6b3a:	4694      	mov	ip, r2
    6b3c:	4463      	add	r3, ip
    6b3e:	9008      	str	r0, [sp, #32]
    6b40:	9109      	str	r1, [sp, #36]	; 0x24
    6b42:	9309      	str	r3, [sp, #36]	; 0x24
    6b44:	2200      	movs	r2, #0
    6b46:	4b64      	ldr	r3, [pc, #400]	; (6cd8 <_dtoa_r+0xd1c>)
    6b48:	0030      	movs	r0, r6
    6b4a:	0039      	movs	r1, r7
    6b4c:	f7fc fd88 	bl	3660 <__aeabi_dsub>
    6b50:	9e08      	ldr	r6, [sp, #32]
    6b52:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6b54:	0032      	movs	r2, r6
    6b56:	003b      	movs	r3, r7
    6b58:	0004      	movs	r4, r0
    6b5a:	000d      	movs	r5, r1
    6b5c:	f7fd fa4a 	bl	3ff4 <__aeabi_dcmpgt>
    6b60:	2800      	cmp	r0, #0
    6b62:	d000      	beq.n	6b66 <_dtoa_r+0xbaa>
    6b64:	e0b2      	b.n	6ccc <_dtoa_r+0xd10>
    6b66:	2080      	movs	r0, #128	; 0x80
    6b68:	0600      	lsls	r0, r0, #24
    6b6a:	4684      	mov	ip, r0
    6b6c:	0039      	movs	r1, r7
    6b6e:	4461      	add	r1, ip
    6b70:	000b      	movs	r3, r1
    6b72:	0032      	movs	r2, r6
    6b74:	0020      	movs	r0, r4
    6b76:	0029      	movs	r1, r5
    6b78:	f7fd fa28 	bl	3fcc <__aeabi_dcmplt>
    6b7c:	2800      	cmp	r0, #0
    6b7e:	d057      	beq.n	6c30 <_dtoa_r+0xc74>
    6b80:	2300      	movs	r3, #0
    6b82:	4699      	mov	r9, r3
    6b84:	4698      	mov	r8, r3
    6b86:	e75c      	b.n	6a42 <_dtoa_r+0xa86>
    6b88:	980a      	ldr	r0, [sp, #40]	; 0x28
    6b8a:	f7ff fa4c 	bl	6026 <_dtoa_r+0x6a>
    6b8e:	1ae2      	subs	r2, r4, r3
    6b90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6b92:	46a1      	mov	r9, r4
    6b94:	469c      	mov	ip, r3
    6b96:	4494      	add	ip, r2
    6b98:	4663      	mov	r3, ip
    6b9a:	2400      	movs	r4, #0
    6b9c:	930d      	str	r3, [sp, #52]	; 0x34
    6b9e:	e53e      	b.n	661e <_dtoa_r+0x662>
    6ba0:	9a10      	ldr	r2, [sp, #64]	; 0x40
    6ba2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6ba4:	9208      	str	r2, [sp, #32]
    6ba6:	9309      	str	r3, [sp, #36]	; 0x24
    6ba8:	2302      	movs	r3, #2
    6baa:	4698      	mov	r8, r3
    6bac:	f7ff fb3a 	bl	6224 <_dtoa_r+0x268>
    6bb0:	2300      	movs	r3, #0
    6bb2:	4652      	mov	r2, sl
    6bb4:	2100      	movs	r1, #0
    6bb6:	6453      	str	r3, [r2, #68]	; 0x44
    6bb8:	4650      	mov	r0, sl
    6bba:	f001 f9e1 	bl	7f80 <_Balloc>
    6bbe:	4653      	mov	r3, sl
    6bc0:	6418      	str	r0, [r3, #64]	; 0x40
    6bc2:	2301      	movs	r3, #1
    6bc4:	900a      	str	r0, [sp, #40]	; 0x28
    6bc6:	9307      	str	r3, [sp, #28]
    6bc8:	9323      	str	r3, [sp, #140]	; 0x8c
    6bca:	930e      	str	r3, [sp, #56]	; 0x38
    6bcc:	f7ff fb07 	bl	61de <_dtoa_r+0x222>
    6bd0:	4643      	mov	r3, r8
    6bd2:	930c      	str	r3, [sp, #48]	; 0x30
    6bd4:	465b      	mov	r3, fp
    6bd6:	9a06      	ldr	r2, [sp, #24]
    6bd8:	46a8      	mov	r8, r5
    6bda:	46b3      	mov	fp, r6
    6bdc:	4655      	mov	r5, sl
    6bde:	9e04      	ldr	r6, [sp, #16]
    6be0:	4691      	mov	r9, r2
    6be2:	46ba      	mov	sl, r7
    6be4:	2b00      	cmp	r3, #0
    6be6:	dd10      	ble.n	6c0a <_dtoa_r+0xc4e>
    6be8:	4659      	mov	r1, fp
    6bea:	2201      	movs	r2, #1
    6bec:	0038      	movs	r0, r7
    6bee:	f001 fb9b 	bl	8328 <__lshift>
    6bf2:	4649      	mov	r1, r9
    6bf4:	4683      	mov	fp, r0
    6bf6:	f001 fbf7 	bl	83e8 <__mcmp>
    6bfa:	2800      	cmp	r0, #0
    6bfc:	dc00      	bgt.n	6c00 <_dtoa_r+0xc44>
    6bfe:	e157      	b.n	6eb0 <_dtoa_r+0xef4>
    6c00:	2e39      	cmp	r6, #57	; 0x39
    6c02:	d100      	bne.n	6c06 <_dtoa_r+0xc4a>
    6c04:	e122      	b.n	6e4c <_dtoa_r+0xe90>
    6c06:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    6c08:	3631      	adds	r6, #49	; 0x31
    6c0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6c0c:	4647      	mov	r7, r8
    6c0e:	1c6c      	adds	r4, r5, #1
    6c10:	702e      	strb	r6, [r5, #0]
    6c12:	4698      	mov	r8, r3
    6c14:	e6c9      	b.n	69aa <_dtoa_r+0x9ee>
    6c16:	2800      	cmp	r0, #0
    6c18:	d103      	bne.n	6c22 <_dtoa_r+0xc66>
    6c1a:	07f3      	lsls	r3, r6, #31
    6c1c:	d501      	bpl.n	6c22 <_dtoa_r+0xc66>
    6c1e:	e6b5      	b.n	698c <_dtoa_r+0x9d0>
    6c20:	001c      	movs	r4, r3
    6c22:	1e63      	subs	r3, r4, #1
    6c24:	781a      	ldrb	r2, [r3, #0]
    6c26:	2a30      	cmp	r2, #48	; 0x30
    6c28:	d0fa      	beq.n	6c20 <_dtoa_r+0xc64>
    6c2a:	e6be      	b.n	69aa <_dtoa_r+0x9ee>
    6c2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6c2e:	4699      	mov	r9, r3
    6c30:	9e10      	ldr	r6, [sp, #64]	; 0x40
    6c32:	9f11      	ldr	r7, [sp, #68]	; 0x44
    6c34:	e435      	b.n	64a2 <_dtoa_r+0x4e6>
    6c36:	2501      	movs	r5, #1
    6c38:	f7ff fab4 	bl	61a4 <_dtoa_r+0x1e8>
    6c3c:	9b03      	ldr	r3, [sp, #12]
    6c3e:	2b00      	cmp	r3, #0
    6c40:	d100      	bne.n	6c44 <_dtoa_r+0xc88>
    6c42:	e0d4      	b.n	6dee <_dtoa_r+0xe32>
    6c44:	9810      	ldr	r0, [sp, #64]	; 0x40
    6c46:	9911      	ldr	r1, [sp, #68]	; 0x44
    6c48:	425c      	negs	r4, r3
    6c4a:	230f      	movs	r3, #15
    6c4c:	4a26      	ldr	r2, [pc, #152]	; (6ce8 <_dtoa_r+0xd2c>)
    6c4e:	4023      	ands	r3, r4
    6c50:	00db      	lsls	r3, r3, #3
    6c52:	18d3      	adds	r3, r2, r3
    6c54:	681a      	ldr	r2, [r3, #0]
    6c56:	685b      	ldr	r3, [r3, #4]
    6c58:	f7fc fa82 	bl	3160 <__aeabi_dmul>
    6c5c:	1124      	asrs	r4, r4, #4
    6c5e:	0006      	movs	r6, r0
    6c60:	000f      	movs	r7, r1
    6c62:	2c00      	cmp	r4, #0
    6c64:	d100      	bne.n	6c68 <_dtoa_r+0xcac>
    6c66:	e149      	b.n	6efc <_dtoa_r+0xf40>
    6c68:	2302      	movs	r3, #2
    6c6a:	4698      	mov	r8, r3
    6c6c:	4d1f      	ldr	r5, [pc, #124]	; (6cec <_dtoa_r+0xd30>)
    6c6e:	2301      	movs	r3, #1
    6c70:	4223      	tst	r3, r4
    6c72:	d009      	beq.n	6c88 <_dtoa_r+0xccc>
    6c74:	469c      	mov	ip, r3
    6c76:	682a      	ldr	r2, [r5, #0]
    6c78:	686b      	ldr	r3, [r5, #4]
    6c7a:	0030      	movs	r0, r6
    6c7c:	0039      	movs	r1, r7
    6c7e:	44e0      	add	r8, ip
    6c80:	f7fc fa6e 	bl	3160 <__aeabi_dmul>
    6c84:	0006      	movs	r6, r0
    6c86:	000f      	movs	r7, r1
    6c88:	1064      	asrs	r4, r4, #1
    6c8a:	3508      	adds	r5, #8
    6c8c:	2c00      	cmp	r4, #0
    6c8e:	d1ee      	bne.n	6c6e <_dtoa_r+0xcb2>
    6c90:	f7ff fae4 	bl	625c <_dtoa_r+0x2a0>
    6c94:	9b03      	ldr	r3, [sp, #12]
    6c96:	2730      	movs	r7, #48	; 0x30
    6c98:	3301      	adds	r3, #1
    6c9a:	9303      	str	r3, [sp, #12]
    6c9c:	2330      	movs	r3, #48	; 0x30
    6c9e:	702b      	strb	r3, [r5, #0]
    6ca0:	e4ac      	b.n	65fc <_dtoa_r+0x640>
    6ca2:	6859      	ldr	r1, [r3, #4]
    6ca4:	4650      	mov	r0, sl
    6ca6:	f001 f96b 	bl	7f80 <_Balloc>
    6caa:	4643      	mov	r3, r8
    6cac:	4641      	mov	r1, r8
    6cae:	0004      	movs	r4, r0
    6cb0:	691b      	ldr	r3, [r3, #16]
    6cb2:	310c      	adds	r1, #12
    6cb4:	1c9a      	adds	r2, r3, #2
    6cb6:	0092      	lsls	r2, r2, #2
    6cb8:	300c      	adds	r0, #12
    6cba:	f7fd fafd 	bl	42b8 <memcpy>
    6cbe:	2201      	movs	r2, #1
    6cc0:	0021      	movs	r1, r4
    6cc2:	4650      	mov	r0, sl
    6cc4:	f001 fb30 	bl	8328 <__lshift>
    6cc8:	900c      	str	r0, [sp, #48]	; 0x30
    6cca:	e599      	b.n	6800 <_dtoa_r+0x844>
    6ccc:	2300      	movs	r3, #0
    6cce:	4699      	mov	r9, r3
    6cd0:	4698      	mov	r8, r3
    6cd2:	e70c      	b.n	6aee <_dtoa_r+0xb32>
    6cd4:	7ff00000 	.word	0x7ff00000
    6cd8:	40140000 	.word	0x40140000
    6cdc:	00000433 	.word	0x00000433
    6ce0:	401c0000 	.word	0x401c0000
    6ce4:	fcc00000 	.word	0xfcc00000
    6ce8:	00009e80 	.word	0x00009e80
    6cec:	00009e58 	.word	0x00009e58
    6cf0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6cf2:	498f      	ldr	r1, [pc, #572]	; (6f30 <_dtoa_r+0xf74>)
    6cf4:	3b01      	subs	r3, #1
    6cf6:	00db      	lsls	r3, r3, #3
    6cf8:	18c9      	adds	r1, r1, r3
    6cfa:	6808      	ldr	r0, [r1, #0]
    6cfc:	6849      	ldr	r1, [r1, #4]
    6cfe:	9a08      	ldr	r2, [sp, #32]
    6d00:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6d02:	f7fc fa2d 	bl	3160 <__aeabi_dmul>
    6d06:	9014      	str	r0, [sp, #80]	; 0x50
    6d08:	9115      	str	r1, [sp, #84]	; 0x54
    6d0a:	0039      	movs	r1, r7
    6d0c:	0030      	movs	r0, r6
    6d0e:	f7fc ffbd 	bl	3c8c <__aeabi_d2iz>
    6d12:	0005      	movs	r5, r0
    6d14:	f7fc ffee 	bl	3cf4 <__aeabi_i2d>
    6d18:	0002      	movs	r2, r0
    6d1a:	000b      	movs	r3, r1
    6d1c:	0030      	movs	r0, r6
    6d1e:	0039      	movs	r1, r7
    6d20:	f7fc fc9e 	bl	3660 <__aeabi_dsub>
    6d24:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6d26:	9008      	str	r0, [sp, #32]
    6d28:	9109      	str	r1, [sp, #36]	; 0x24
    6d2a:	990a      	ldr	r1, [sp, #40]	; 0x28
    6d2c:	001a      	movs	r2, r3
    6d2e:	468c      	mov	ip, r1
    6d30:	3530      	adds	r5, #48	; 0x30
    6d32:	4462      	add	r2, ip
    6d34:	1c4c      	adds	r4, r1, #1
    6d36:	700d      	strb	r5, [r1, #0]
    6d38:	4690      	mov	r8, r2
    6d3a:	2b01      	cmp	r3, #1
    6d3c:	d01b      	beq.n	6d76 <_dtoa_r+0xdba>
    6d3e:	9808      	ldr	r0, [sp, #32]
    6d40:	9909      	ldr	r1, [sp, #36]	; 0x24
    6d42:	0025      	movs	r5, r4
    6d44:	2200      	movs	r2, #0
    6d46:	4b7b      	ldr	r3, [pc, #492]	; (6f34 <_dtoa_r+0xf78>)
    6d48:	f7fc fa0a 	bl	3160 <__aeabi_dmul>
    6d4c:	000f      	movs	r7, r1
    6d4e:	0006      	movs	r6, r0
    6d50:	f7fc ff9c 	bl	3c8c <__aeabi_d2iz>
    6d54:	0004      	movs	r4, r0
    6d56:	f7fc ffcd 	bl	3cf4 <__aeabi_i2d>
    6d5a:	3430      	adds	r4, #48	; 0x30
    6d5c:	0002      	movs	r2, r0
    6d5e:	000b      	movs	r3, r1
    6d60:	0030      	movs	r0, r6
    6d62:	0039      	movs	r1, r7
    6d64:	f7fc fc7c 	bl	3660 <__aeabi_dsub>
    6d68:	702c      	strb	r4, [r5, #0]
    6d6a:	3501      	adds	r5, #1
    6d6c:	45a8      	cmp	r8, r5
    6d6e:	d1e9      	bne.n	6d44 <_dtoa_r+0xd88>
    6d70:	4644      	mov	r4, r8
    6d72:	9008      	str	r0, [sp, #32]
    6d74:	9109      	str	r1, [sp, #36]	; 0x24
    6d76:	9814      	ldr	r0, [sp, #80]	; 0x50
    6d78:	9915      	ldr	r1, [sp, #84]	; 0x54
    6d7a:	2200      	movs	r2, #0
    6d7c:	4b6e      	ldr	r3, [pc, #440]	; (6f38 <_dtoa_r+0xf7c>)
    6d7e:	f002 fa51 	bl	9224 <__aeabi_dadd>
    6d82:	9a08      	ldr	r2, [sp, #32]
    6d84:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6d86:	f7fd f921 	bl	3fcc <__aeabi_dcmplt>
    6d8a:	2800      	cmp	r0, #0
    6d8c:	d067      	beq.n	6e5e <_dtoa_r+0xea2>
    6d8e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6d90:	1e65      	subs	r5, r4, #1
    6d92:	9303      	str	r3, [sp, #12]
    6d94:	782f      	ldrb	r7, [r5, #0]
    6d96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6d98:	e42e      	b.n	65f8 <_dtoa_r+0x63c>
    6d9a:	4643      	mov	r3, r8
    6d9c:	46b3      	mov	fp, r6
    6d9e:	930c      	str	r3, [sp, #48]	; 0x30
    6da0:	9e04      	ldr	r6, [sp, #16]
    6da2:	9b06      	ldr	r3, [sp, #24]
    6da4:	46a8      	mov	r8, r5
    6da6:	4699      	mov	r9, r3
    6da8:	4655      	mov	r5, sl
    6daa:	46ba      	mov	sl, r7
    6dac:	2e39      	cmp	r6, #57	; 0x39
    6dae:	d04d      	beq.n	6e4c <_dtoa_r+0xe90>
    6db0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6db2:	3601      	adds	r6, #1
    6db4:	4647      	mov	r7, r8
    6db6:	1c6c      	adds	r4, r5, #1
    6db8:	702e      	strb	r6, [r5, #0]
    6dba:	4698      	mov	r8, r3
    6dbc:	e5f5      	b.n	69aa <_dtoa_r+0x9ee>
    6dbe:	4642      	mov	r2, r8
    6dc0:	9b06      	ldr	r3, [sp, #24]
    6dc2:	46b3      	mov	fp, r6
    6dc4:	46ba      	mov	sl, r7
    6dc6:	9e04      	ldr	r6, [sp, #16]
    6dc8:	4699      	mov	r9, r3
    6dca:	002f      	movs	r7, r5
    6dcc:	4690      	mov	r8, r2
    6dce:	e5d1      	b.n	6974 <_dtoa_r+0x9b8>
    6dd0:	9b06      	ldr	r3, [sp, #24]
    6dd2:	9a07      	ldr	r2, [sp, #28]
    6dd4:	1a9b      	subs	r3, r3, r2
    6dd6:	9308      	str	r3, [sp, #32]
    6dd8:	2300      	movs	r3, #0
    6dda:	e427      	b.n	662c <_dtoa_r+0x670>
    6ddc:	2401      	movs	r4, #1
    6dde:	e5c5      	b.n	696c <_dtoa_r+0x9b0>
    6de0:	2336      	movs	r3, #54	; 0x36
    6de2:	9a16      	ldr	r2, [sp, #88]	; 0x58
    6de4:	464c      	mov	r4, r9
    6de6:	1a9b      	subs	r3, r3, r2
    6de8:	9a06      	ldr	r2, [sp, #24]
    6dea:	9208      	str	r2, [sp, #32]
    6dec:	e41e      	b.n	662c <_dtoa_r+0x670>
    6dee:	2302      	movs	r3, #2
    6df0:	9e10      	ldr	r6, [sp, #64]	; 0x40
    6df2:	9f11      	ldr	r7, [sp, #68]	; 0x44
    6df4:	4698      	mov	r8, r3
    6df6:	f7ff fa31 	bl	625c <_dtoa_r+0x2a0>
    6dfa:	9b07      	ldr	r3, [sp, #28]
    6dfc:	2b00      	cmp	r3, #0
    6dfe:	d100      	bne.n	6e02 <_dtoa_r+0xe46>
    6e00:	e68e      	b.n	6b20 <_dtoa_r+0xb64>
    6e02:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    6e04:	2c00      	cmp	r4, #0
    6e06:	dc00      	bgt.n	6e0a <_dtoa_r+0xe4e>
    6e08:	e712      	b.n	6c30 <_dtoa_r+0xc74>
    6e0a:	9b03      	ldr	r3, [sp, #12]
    6e0c:	2200      	movs	r2, #0
    6e0e:	3b01      	subs	r3, #1
    6e10:	9313      	str	r3, [sp, #76]	; 0x4c
    6e12:	0030      	movs	r0, r6
    6e14:	4b47      	ldr	r3, [pc, #284]	; (6f34 <_dtoa_r+0xf78>)
    6e16:	0039      	movs	r1, r7
    6e18:	f7fc f9a2 	bl	3160 <__aeabi_dmul>
    6e1c:	0006      	movs	r6, r0
    6e1e:	4640      	mov	r0, r8
    6e20:	000f      	movs	r7, r1
    6e22:	3001      	adds	r0, #1
    6e24:	f7fc ff66 	bl	3cf4 <__aeabi_i2d>
    6e28:	0032      	movs	r2, r6
    6e2a:	003b      	movs	r3, r7
    6e2c:	f7fc f998 	bl	3160 <__aeabi_dmul>
    6e30:	2200      	movs	r2, #0
    6e32:	4b42      	ldr	r3, [pc, #264]	; (6f3c <_dtoa_r+0xf80>)
    6e34:	f002 f9f6 	bl	9224 <__aeabi_dadd>
    6e38:	4a41      	ldr	r2, [pc, #260]	; (6f40 <_dtoa_r+0xf84>)
    6e3a:	000b      	movs	r3, r1
    6e3c:	4694      	mov	ip, r2
    6e3e:	4463      	add	r3, ip
    6e40:	9008      	str	r0, [sp, #32]
    6e42:	9109      	str	r1, [sp, #36]	; 0x24
    6e44:	9412      	str	r4, [sp, #72]	; 0x48
    6e46:	9309      	str	r3, [sp, #36]	; 0x24
    6e48:	f7ff fa30 	bl	62ac <_dtoa_r+0x2f0>
    6e4c:	2339      	movs	r3, #57	; 0x39
    6e4e:	702b      	strb	r3, [r5, #0]
    6e50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6e52:	4647      	mov	r7, r8
    6e54:	1c6c      	adds	r4, r5, #1
    6e56:	4698      	mov	r8, r3
    6e58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6e5a:	2339      	movs	r3, #57	; 0x39
    6e5c:	e5a1      	b.n	69a2 <_dtoa_r+0x9e6>
    6e5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
    6e60:	9b15      	ldr	r3, [sp, #84]	; 0x54
    6e62:	2000      	movs	r0, #0
    6e64:	4934      	ldr	r1, [pc, #208]	; (6f38 <_dtoa_r+0xf7c>)
    6e66:	f7fc fbfb 	bl	3660 <__aeabi_dsub>
    6e6a:	9a08      	ldr	r2, [sp, #32]
    6e6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6e6e:	f7fd f8c1 	bl	3ff4 <__aeabi_dcmpgt>
    6e72:	2800      	cmp	r0, #0
    6e74:	d101      	bne.n	6e7a <_dtoa_r+0xebe>
    6e76:	e6db      	b.n	6c30 <_dtoa_r+0xc74>
    6e78:	001c      	movs	r4, r3
    6e7a:	1e63      	subs	r3, r4, #1
    6e7c:	781a      	ldrb	r2, [r3, #0]
    6e7e:	2a30      	cmp	r2, #48	; 0x30
    6e80:	d0fa      	beq.n	6e78 <_dtoa_r+0xebc>
    6e82:	f7ff fac8 	bl	6416 <_dtoa_r+0x45a>
    6e86:	4643      	mov	r3, r8
    6e88:	46b3      	mov	fp, r6
    6e8a:	930c      	str	r3, [sp, #48]	; 0x30
    6e8c:	9e04      	ldr	r6, [sp, #16]
    6e8e:	9b06      	ldr	r3, [sp, #24]
    6e90:	46a8      	mov	r8, r5
    6e92:	4699      	mov	r9, r3
    6e94:	4655      	mov	r5, sl
    6e96:	46ba      	mov	sl, r7
    6e98:	2e39      	cmp	r6, #57	; 0x39
    6e9a:	d0d7      	beq.n	6e4c <_dtoa_r+0xe90>
    6e9c:	2c00      	cmp	r4, #0
    6e9e:	dd00      	ble.n	6ea2 <_dtoa_r+0xee6>
    6ea0:	e6b1      	b.n	6c06 <_dtoa_r+0xc4a>
    6ea2:	e6b2      	b.n	6c0a <_dtoa_r+0xc4e>
    6ea4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6ea6:	464d      	mov	r5, r9
    6ea8:	9203      	str	r2, [sp, #12]
    6eaa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6eac:	f7ff fba4 	bl	65f8 <_dtoa_r+0x63c>
    6eb0:	2800      	cmp	r0, #0
    6eb2:	d000      	beq.n	6eb6 <_dtoa_r+0xefa>
    6eb4:	e6a9      	b.n	6c0a <_dtoa_r+0xc4e>
    6eb6:	07f3      	lsls	r3, r6, #31
    6eb8:	d400      	bmi.n	6ebc <_dtoa_r+0xf00>
    6eba:	e6a6      	b.n	6c0a <_dtoa_r+0xc4e>
    6ebc:	e6a0      	b.n	6c00 <_dtoa_r+0xc44>
    6ebe:	2300      	movs	r3, #0
    6ec0:	4641      	mov	r1, r8
    6ec2:	220a      	movs	r2, #10
    6ec4:	4650      	mov	r0, sl
    6ec6:	f001 f88d 	bl	7fe4 <__multadd>
    6eca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6ecc:	4680      	mov	r8, r0
    6ece:	2b00      	cmp	r3, #0
    6ed0:	dd01      	ble.n	6ed6 <_dtoa_r+0xf1a>
    6ed2:	9307      	str	r3, [sp, #28]
    6ed4:	e486      	b.n	67e4 <_dtoa_r+0x828>
    6ed6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6ed8:	2b02      	cmp	r3, #2
    6eda:	dc1f      	bgt.n	6f1c <_dtoa_r+0xf60>
    6edc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6ede:	9307      	str	r3, [sp, #28]
    6ee0:	e480      	b.n	67e4 <_dtoa_r+0x828>
    6ee2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6ee4:	2b02      	cmp	r3, #2
    6ee6:	dc19      	bgt.n	6f1c <_dtoa_r+0xf60>
    6ee8:	4649      	mov	r1, r9
    6eea:	f7fe ffbd 	bl	5e68 <quorem>
    6eee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6ef0:	3030      	adds	r0, #48	; 0x30
    6ef2:	7018      	strb	r0, [r3, #0]
    6ef4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6ef6:	0006      	movs	r6, r0
    6ef8:	9307      	str	r3, [sp, #28]
    6efa:	e533      	b.n	6964 <_dtoa_r+0x9a8>
    6efc:	2302      	movs	r3, #2
    6efe:	4698      	mov	r8, r3
    6f00:	f7ff f9ac 	bl	625c <_dtoa_r+0x2a0>
    6f04:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6f06:	9c14      	ldr	r4, [sp, #80]	; 0x50
    6f08:	9303      	str	r3, [sp, #12]
    6f0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6f0c:	001d      	movs	r5, r3
    6f0e:	f7ff fb73 	bl	65f8 <_dtoa_r+0x63c>
    6f12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6f14:	9c14      	ldr	r4, [sp, #80]	; 0x50
    6f16:	9303      	str	r3, [sp, #12]
    6f18:	f7ff fa7f 	bl	641a <_dtoa_r+0x45e>
    6f1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6f1e:	9307      	str	r3, [sp, #28]
    6f20:	e5d6      	b.n	6ad0 <_dtoa_r+0xb14>
    6f22:	2b04      	cmp	r3, #4
    6f24:	d100      	bne.n	6f28 <_dtoa_r+0xf6c>
    6f26:	e43f      	b.n	67a8 <_dtoa_r+0x7ec>
    6f28:	233c      	movs	r3, #60	; 0x3c
    6f2a:	1a18      	subs	r0, r3, r0
    6f2c:	e4d7      	b.n	68de <_dtoa_r+0x922>
    6f2e:	46c0      	nop			; (mov r8, r8)
    6f30:	00009e80 	.word	0x00009e80
    6f34:	40240000 	.word	0x40240000
    6f38:	3fe00000 	.word	0x3fe00000
    6f3c:	401c0000 	.word	0x401c0000
    6f40:	fcc00000 	.word	0xfcc00000

00006f44 <__sflush_r>:
    6f44:	b5f0      	push	{r4, r5, r6, r7, lr}
    6f46:	46c6      	mov	lr, r8
    6f48:	b500      	push	{lr}
    6f4a:	230c      	movs	r3, #12
    6f4c:	5eca      	ldrsh	r2, [r1, r3]
    6f4e:	4680      	mov	r8, r0
    6f50:	b293      	uxth	r3, r2
    6f52:	000c      	movs	r4, r1
    6f54:	0719      	lsls	r1, r3, #28
    6f56:	d440      	bmi.n	6fda <__sflush_r+0x96>
    6f58:	2380      	movs	r3, #128	; 0x80
    6f5a:	011b      	lsls	r3, r3, #4
    6f5c:	4313      	orrs	r3, r2
    6f5e:	6862      	ldr	r2, [r4, #4]
    6f60:	81a3      	strh	r3, [r4, #12]
    6f62:	2a00      	cmp	r2, #0
    6f64:	dc00      	bgt.n	6f68 <__sflush_r+0x24>
    6f66:	e070      	b.n	704a <__sflush_r+0x106>
    6f68:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    6f6a:	2e00      	cmp	r6, #0
    6f6c:	d031      	beq.n	6fd2 <__sflush_r+0x8e>
    6f6e:	4642      	mov	r2, r8
    6f70:	4641      	mov	r1, r8
    6f72:	6815      	ldr	r5, [r2, #0]
    6f74:	2200      	movs	r2, #0
    6f76:	b29b      	uxth	r3, r3
    6f78:	600a      	str	r2, [r1, #0]
    6f7a:	04da      	lsls	r2, r3, #19
    6f7c:	d400      	bmi.n	6f80 <__sflush_r+0x3c>
    6f7e:	e069      	b.n	7054 <__sflush_r+0x110>
    6f80:	6d22      	ldr	r2, [r4, #80]	; 0x50
    6f82:	075b      	lsls	r3, r3, #29
    6f84:	d506      	bpl.n	6f94 <__sflush_r+0x50>
    6f86:	6863      	ldr	r3, [r4, #4]
    6f88:	1ad2      	subs	r2, r2, r3
    6f8a:	6b23      	ldr	r3, [r4, #48]	; 0x30
    6f8c:	2b00      	cmp	r3, #0
    6f8e:	d001      	beq.n	6f94 <__sflush_r+0x50>
    6f90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    6f92:	1ad2      	subs	r2, r2, r3
    6f94:	2300      	movs	r3, #0
    6f96:	69e1      	ldr	r1, [r4, #28]
    6f98:	4640      	mov	r0, r8
    6f9a:	47b0      	blx	r6
    6f9c:	1c43      	adds	r3, r0, #1
    6f9e:	d03d      	beq.n	701c <__sflush_r+0xd8>
    6fa0:	89a3      	ldrh	r3, [r4, #12]
    6fa2:	4a3a      	ldr	r2, [pc, #232]	; (708c <__sflush_r+0x148>)
    6fa4:	4013      	ands	r3, r2
    6fa6:	2200      	movs	r2, #0
    6fa8:	6062      	str	r2, [r4, #4]
    6faa:	6922      	ldr	r2, [r4, #16]
    6fac:	b21b      	sxth	r3, r3
    6fae:	81a3      	strh	r3, [r4, #12]
    6fb0:	6022      	str	r2, [r4, #0]
    6fb2:	04db      	lsls	r3, r3, #19
    6fb4:	d447      	bmi.n	7046 <__sflush_r+0x102>
    6fb6:	4643      	mov	r3, r8
    6fb8:	6b21      	ldr	r1, [r4, #48]	; 0x30
    6fba:	601d      	str	r5, [r3, #0]
    6fbc:	2900      	cmp	r1, #0
    6fbe:	d008      	beq.n	6fd2 <__sflush_r+0x8e>
    6fc0:	0023      	movs	r3, r4
    6fc2:	3340      	adds	r3, #64	; 0x40
    6fc4:	4299      	cmp	r1, r3
    6fc6:	d002      	beq.n	6fce <__sflush_r+0x8a>
    6fc8:	4640      	mov	r0, r8
    6fca:	f000 f967 	bl	729c <_free_r>
    6fce:	2300      	movs	r3, #0
    6fd0:	6323      	str	r3, [r4, #48]	; 0x30
    6fd2:	2000      	movs	r0, #0
    6fd4:	bc04      	pop	{r2}
    6fd6:	4690      	mov	r8, r2
    6fd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6fda:	6926      	ldr	r6, [r4, #16]
    6fdc:	2e00      	cmp	r6, #0
    6fde:	d0f8      	beq.n	6fd2 <__sflush_r+0x8e>
    6fe0:	6822      	ldr	r2, [r4, #0]
    6fe2:	6026      	str	r6, [r4, #0]
    6fe4:	1b95      	subs	r5, r2, r6
    6fe6:	2200      	movs	r2, #0
    6fe8:	079b      	lsls	r3, r3, #30
    6fea:	d100      	bne.n	6fee <__sflush_r+0xaa>
    6fec:	6962      	ldr	r2, [r4, #20]
    6fee:	60a2      	str	r2, [r4, #8]
    6ff0:	2d00      	cmp	r5, #0
    6ff2:	dc04      	bgt.n	6ffe <__sflush_r+0xba>
    6ff4:	e7ed      	b.n	6fd2 <__sflush_r+0x8e>
    6ff6:	1836      	adds	r6, r6, r0
    6ff8:	1a2d      	subs	r5, r5, r0
    6ffa:	2d00      	cmp	r5, #0
    6ffc:	dde9      	ble.n	6fd2 <__sflush_r+0x8e>
    6ffe:	002b      	movs	r3, r5
    7000:	0032      	movs	r2, r6
    7002:	69e1      	ldr	r1, [r4, #28]
    7004:	4640      	mov	r0, r8
    7006:	6a67      	ldr	r7, [r4, #36]	; 0x24
    7008:	47b8      	blx	r7
    700a:	2800      	cmp	r0, #0
    700c:	dcf3      	bgt.n	6ff6 <__sflush_r+0xb2>
    700e:	2240      	movs	r2, #64	; 0x40
    7010:	2001      	movs	r0, #1
    7012:	89a3      	ldrh	r3, [r4, #12]
    7014:	4240      	negs	r0, r0
    7016:	4313      	orrs	r3, r2
    7018:	81a3      	strh	r3, [r4, #12]
    701a:	e7db      	b.n	6fd4 <__sflush_r+0x90>
    701c:	4643      	mov	r3, r8
    701e:	6819      	ldr	r1, [r3, #0]
    7020:	291d      	cmp	r1, #29
    7022:	d8f4      	bhi.n	700e <__sflush_r+0xca>
    7024:	4b1a      	ldr	r3, [pc, #104]	; (7090 <__sflush_r+0x14c>)
    7026:	2201      	movs	r2, #1
    7028:	40cb      	lsrs	r3, r1
    702a:	439a      	bics	r2, r3
    702c:	d1ef      	bne.n	700e <__sflush_r+0xca>
    702e:	89a3      	ldrh	r3, [r4, #12]
    7030:	4e16      	ldr	r6, [pc, #88]	; (708c <__sflush_r+0x148>)
    7032:	6062      	str	r2, [r4, #4]
    7034:	4033      	ands	r3, r6
    7036:	6922      	ldr	r2, [r4, #16]
    7038:	b21b      	sxth	r3, r3
    703a:	81a3      	strh	r3, [r4, #12]
    703c:	6022      	str	r2, [r4, #0]
    703e:	04db      	lsls	r3, r3, #19
    7040:	d5b9      	bpl.n	6fb6 <__sflush_r+0x72>
    7042:	2900      	cmp	r1, #0
    7044:	d1b7      	bne.n	6fb6 <__sflush_r+0x72>
    7046:	6520      	str	r0, [r4, #80]	; 0x50
    7048:	e7b5      	b.n	6fb6 <__sflush_r+0x72>
    704a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    704c:	2a00      	cmp	r2, #0
    704e:	dd00      	ble.n	7052 <__sflush_r+0x10e>
    7050:	e78a      	b.n	6f68 <__sflush_r+0x24>
    7052:	e7be      	b.n	6fd2 <__sflush_r+0x8e>
    7054:	2200      	movs	r2, #0
    7056:	2301      	movs	r3, #1
    7058:	69e1      	ldr	r1, [r4, #28]
    705a:	4640      	mov	r0, r8
    705c:	47b0      	blx	r6
    705e:	0002      	movs	r2, r0
    7060:	1c43      	adds	r3, r0, #1
    7062:	d002      	beq.n	706a <__sflush_r+0x126>
    7064:	89a3      	ldrh	r3, [r4, #12]
    7066:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    7068:	e78b      	b.n	6f82 <__sflush_r+0x3e>
    706a:	4643      	mov	r3, r8
    706c:	681b      	ldr	r3, [r3, #0]
    706e:	2b00      	cmp	r3, #0
    7070:	d0f8      	beq.n	7064 <__sflush_r+0x120>
    7072:	2b1d      	cmp	r3, #29
    7074:	d001      	beq.n	707a <__sflush_r+0x136>
    7076:	2b16      	cmp	r3, #22
    7078:	d103      	bne.n	7082 <__sflush_r+0x13e>
    707a:	4643      	mov	r3, r8
    707c:	2000      	movs	r0, #0
    707e:	601d      	str	r5, [r3, #0]
    7080:	e7a8      	b.n	6fd4 <__sflush_r+0x90>
    7082:	2140      	movs	r1, #64	; 0x40
    7084:	89a3      	ldrh	r3, [r4, #12]
    7086:	430b      	orrs	r3, r1
    7088:	81a3      	strh	r3, [r4, #12]
    708a:	e7a3      	b.n	6fd4 <__sflush_r+0x90>
    708c:	fffff7ff 	.word	0xfffff7ff
    7090:	20400001 	.word	0x20400001

00007094 <_fflush_r>:
    7094:	b570      	push	{r4, r5, r6, lr}
    7096:	0005      	movs	r5, r0
    7098:	000c      	movs	r4, r1
    709a:	2800      	cmp	r0, #0
    709c:	d002      	beq.n	70a4 <_fflush_r+0x10>
    709e:	6b83      	ldr	r3, [r0, #56]	; 0x38
    70a0:	2b00      	cmp	r3, #0
    70a2:	d016      	beq.n	70d2 <_fflush_r+0x3e>
    70a4:	220c      	movs	r2, #12
    70a6:	5ea3      	ldrsh	r3, [r4, r2]
    70a8:	2600      	movs	r6, #0
    70aa:	2b00      	cmp	r3, #0
    70ac:	d00f      	beq.n	70ce <_fflush_r+0x3a>
    70ae:	6e62      	ldr	r2, [r4, #100]	; 0x64
    70b0:	07d2      	lsls	r2, r2, #31
    70b2:	d401      	bmi.n	70b8 <_fflush_r+0x24>
    70b4:	059b      	lsls	r3, r3, #22
    70b6:	d513      	bpl.n	70e0 <_fflush_r+0x4c>
    70b8:	0021      	movs	r1, r4
    70ba:	0028      	movs	r0, r5
    70bc:	f7ff ff42 	bl	6f44 <__sflush_r>
    70c0:	6e63      	ldr	r3, [r4, #100]	; 0x64
    70c2:	0006      	movs	r6, r0
    70c4:	07db      	lsls	r3, r3, #31
    70c6:	d402      	bmi.n	70ce <_fflush_r+0x3a>
    70c8:	89a3      	ldrh	r3, [r4, #12]
    70ca:	059b      	lsls	r3, r3, #22
    70cc:	d504      	bpl.n	70d8 <_fflush_r+0x44>
    70ce:	0030      	movs	r0, r6
    70d0:	bd70      	pop	{r4, r5, r6, pc}
    70d2:	f000 f839 	bl	7148 <__sinit>
    70d6:	e7e5      	b.n	70a4 <_fflush_r+0x10>
    70d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    70da:	f000 fb79 	bl	77d0 <__retarget_lock_release_recursive>
    70de:	e7f6      	b.n	70ce <_fflush_r+0x3a>
    70e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
    70e2:	f000 fb73 	bl	77cc <__retarget_lock_acquire_recursive>
    70e6:	e7e7      	b.n	70b8 <_fflush_r+0x24>

000070e8 <_cleanup_r>:
    70e8:	b510      	push	{r4, lr}
    70ea:	4902      	ldr	r1, [pc, #8]	; (70f4 <_cleanup_r+0xc>)
    70ec:	f000 fb36 	bl	775c <_fwalk_reent>
    70f0:	bd10      	pop	{r4, pc}
    70f2:	46c0      	nop			; (mov r8, r8)
    70f4:	00008c7d 	.word	0x00008c7d

000070f8 <std.isra.0>:
    70f8:	2300      	movs	r3, #0
    70fa:	b510      	push	{r4, lr}
    70fc:	0004      	movs	r4, r0
    70fe:	6003      	str	r3, [r0, #0]
    7100:	6043      	str	r3, [r0, #4]
    7102:	6083      	str	r3, [r0, #8]
    7104:	8181      	strh	r1, [r0, #12]
    7106:	6643      	str	r3, [r0, #100]	; 0x64
    7108:	81c2      	strh	r2, [r0, #14]
    710a:	6103      	str	r3, [r0, #16]
    710c:	6143      	str	r3, [r0, #20]
    710e:	6183      	str	r3, [r0, #24]
    7110:	2208      	movs	r2, #8
    7112:	2100      	movs	r1, #0
    7114:	305c      	adds	r0, #92	; 0x5c
    7116:	f7fd f911 	bl	433c <memset>
    711a:	0020      	movs	r0, r4
    711c:	4b06      	ldr	r3, [pc, #24]	; (7138 <std.isra.0+0x40>)
    711e:	61e4      	str	r4, [r4, #28]
    7120:	6223      	str	r3, [r4, #32]
    7122:	4b06      	ldr	r3, [pc, #24]	; (713c <std.isra.0+0x44>)
    7124:	3058      	adds	r0, #88	; 0x58
    7126:	6263      	str	r3, [r4, #36]	; 0x24
    7128:	4b05      	ldr	r3, [pc, #20]	; (7140 <std.isra.0+0x48>)
    712a:	62a3      	str	r3, [r4, #40]	; 0x28
    712c:	4b05      	ldr	r3, [pc, #20]	; (7144 <std.isra.0+0x4c>)
    712e:	62e3      	str	r3, [r4, #44]	; 0x2c
    7130:	f000 fb48 	bl	77c4 <__retarget_lock_init_recursive>
    7134:	bd10      	pop	{r4, pc}
    7136:	46c0      	nop			; (mov r8, r8)
    7138:	000089b1 	.word	0x000089b1
    713c:	000089d9 	.word	0x000089d9
    7140:	00008a15 	.word	0x00008a15
    7144:	00008a41 	.word	0x00008a41

00007148 <__sinit>:
    7148:	b570      	push	{r4, r5, r6, lr}
    714a:	0004      	movs	r4, r0
    714c:	4d14      	ldr	r5, [pc, #80]	; (71a0 <__sinit+0x58>)
    714e:	0028      	movs	r0, r5
    7150:	f000 fb3c 	bl	77cc <__retarget_lock_acquire_recursive>
    7154:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    7156:	2b00      	cmp	r3, #0
    7158:	d11d      	bne.n	7196 <__sinit+0x4e>
    715a:	4a12      	ldr	r2, [pc, #72]	; (71a4 <__sinit+0x5c>)
    715c:	2104      	movs	r1, #4
    715e:	63e2      	str	r2, [r4, #60]	; 0x3c
    7160:	22b8      	movs	r2, #184	; 0xb8
    7162:	0092      	lsls	r2, r2, #2
    7164:	50a3      	str	r3, [r4, r2]
    7166:	23b9      	movs	r3, #185	; 0xb9
    7168:	2203      	movs	r2, #3
    716a:	009b      	lsls	r3, r3, #2
    716c:	50e2      	str	r2, [r4, r3]
    716e:	3308      	adds	r3, #8
    7170:	18e2      	adds	r2, r4, r3
    7172:	3b04      	subs	r3, #4
    7174:	50e2      	str	r2, [r4, r3]
    7176:	6860      	ldr	r0, [r4, #4]
    7178:	2200      	movs	r2, #0
    717a:	f7ff ffbd 	bl	70f8 <std.isra.0>
    717e:	2201      	movs	r2, #1
    7180:	2109      	movs	r1, #9
    7182:	68a0      	ldr	r0, [r4, #8]
    7184:	f7ff ffb8 	bl	70f8 <std.isra.0>
    7188:	2202      	movs	r2, #2
    718a:	2112      	movs	r1, #18
    718c:	68e0      	ldr	r0, [r4, #12]
    718e:	f7ff ffb3 	bl	70f8 <std.isra.0>
    7192:	2301      	movs	r3, #1
    7194:	63a3      	str	r3, [r4, #56]	; 0x38
    7196:	0028      	movs	r0, r5
    7198:	f000 fb1a 	bl	77d0 <__retarget_lock_release_recursive>
    719c:	bd70      	pop	{r4, r5, r6, pc}
    719e:	46c0      	nop			; (mov r8, r8)
    71a0:	20000b90 	.word	0x20000b90
    71a4:	000070e9 	.word	0x000070e9

000071a8 <__sfp_lock_acquire>:
    71a8:	b510      	push	{r4, lr}
    71aa:	4802      	ldr	r0, [pc, #8]	; (71b4 <__sfp_lock_acquire+0xc>)
    71ac:	f000 fb0e 	bl	77cc <__retarget_lock_acquire_recursive>
    71b0:	bd10      	pop	{r4, pc}
    71b2:	46c0      	nop			; (mov r8, r8)
    71b4:	20000ba4 	.word	0x20000ba4

000071b8 <__sfp_lock_release>:
    71b8:	b510      	push	{r4, lr}
    71ba:	4802      	ldr	r0, [pc, #8]	; (71c4 <__sfp_lock_release+0xc>)
    71bc:	f000 fb08 	bl	77d0 <__retarget_lock_release_recursive>
    71c0:	bd10      	pop	{r4, pc}
    71c2:	46c0      	nop			; (mov r8, r8)
    71c4:	20000ba4 	.word	0x20000ba4

000071c8 <__libc_fini_array>:
    71c8:	b570      	push	{r4, r5, r6, lr}
    71ca:	4b09      	ldr	r3, [pc, #36]	; (71f0 <__libc_fini_array+0x28>)
    71cc:	4c09      	ldr	r4, [pc, #36]	; (71f4 <__libc_fini_array+0x2c>)
    71ce:	1ae4      	subs	r4, r4, r3
    71d0:	10a4      	asrs	r4, r4, #2
    71d2:	d009      	beq.n	71e8 <__libc_fini_array+0x20>
    71d4:	4a08      	ldr	r2, [pc, #32]	; (71f8 <__libc_fini_array+0x30>)
    71d6:	18a5      	adds	r5, r4, r2
    71d8:	00ad      	lsls	r5, r5, #2
    71da:	18ed      	adds	r5, r5, r3
    71dc:	682b      	ldr	r3, [r5, #0]
    71de:	3c01      	subs	r4, #1
    71e0:	4798      	blx	r3
    71e2:	3d04      	subs	r5, #4
    71e4:	2c00      	cmp	r4, #0
    71e6:	d1f9      	bne.n	71dc <__libc_fini_array+0x14>
    71e8:	f002 ff48 	bl	a07c <_fini>
    71ec:	bd70      	pop	{r4, r5, r6, pc}
    71ee:	46c0      	nop			; (mov r8, r8)
    71f0:	0000a088 	.word	0x0000a088
    71f4:	0000a08c 	.word	0x0000a08c
    71f8:	3fffffff 	.word	0x3fffffff

000071fc <_malloc_trim_r>:
    71fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    71fe:	000c      	movs	r4, r1
    7200:	0006      	movs	r6, r0
    7202:	f000 fead 	bl	7f60 <__malloc_lock>
    7206:	4f20      	ldr	r7, [pc, #128]	; (7288 <_malloc_trim_r+0x8c>)
    7208:	68bb      	ldr	r3, [r7, #8]
    720a:	685d      	ldr	r5, [r3, #4]
    720c:	2303      	movs	r3, #3
    720e:	439d      	bics	r5, r3
    7210:	4b1e      	ldr	r3, [pc, #120]	; (728c <_malloc_trim_r+0x90>)
    7212:	1b2c      	subs	r4, r5, r4
    7214:	469c      	mov	ip, r3
    7216:	4464      	add	r4, ip
    7218:	0b24      	lsrs	r4, r4, #12
    721a:	4b1d      	ldr	r3, [pc, #116]	; (7290 <_malloc_trim_r+0x94>)
    721c:	3c01      	subs	r4, #1
    721e:	0324      	lsls	r4, r4, #12
    7220:	429c      	cmp	r4, r3
    7222:	dd07      	ble.n	7234 <_malloc_trim_r+0x38>
    7224:	2100      	movs	r1, #0
    7226:	0030      	movs	r0, r6
    7228:	f001 fbb0 	bl	898c <_sbrk_r>
    722c:	68bb      	ldr	r3, [r7, #8]
    722e:	195b      	adds	r3, r3, r5
    7230:	4298      	cmp	r0, r3
    7232:	d004      	beq.n	723e <_malloc_trim_r+0x42>
    7234:	0030      	movs	r0, r6
    7236:	f000 fe9b 	bl	7f70 <__malloc_unlock>
    723a:	2000      	movs	r0, #0
    723c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    723e:	4261      	negs	r1, r4
    7240:	0030      	movs	r0, r6
    7242:	f001 fba3 	bl	898c <_sbrk_r>
    7246:	1c43      	adds	r3, r0, #1
    7248:	d00d      	beq.n	7266 <_malloc_trim_r+0x6a>
    724a:	2201      	movs	r2, #1
    724c:	68bb      	ldr	r3, [r7, #8]
    724e:	1b2d      	subs	r5, r5, r4
    7250:	4315      	orrs	r5, r2
    7252:	605d      	str	r5, [r3, #4]
    7254:	4b0f      	ldr	r3, [pc, #60]	; (7294 <_malloc_trim_r+0x98>)
    7256:	0030      	movs	r0, r6
    7258:	681a      	ldr	r2, [r3, #0]
    725a:	1b14      	subs	r4, r2, r4
    725c:	601c      	str	r4, [r3, #0]
    725e:	f000 fe87 	bl	7f70 <__malloc_unlock>
    7262:	2001      	movs	r0, #1
    7264:	e7ea      	b.n	723c <_malloc_trim_r+0x40>
    7266:	2100      	movs	r1, #0
    7268:	0030      	movs	r0, r6
    726a:	f001 fb8f 	bl	898c <_sbrk_r>
    726e:	68ba      	ldr	r2, [r7, #8]
    7270:	1a83      	subs	r3, r0, r2
    7272:	2b0f      	cmp	r3, #15
    7274:	ddde      	ble.n	7234 <_malloc_trim_r+0x38>
    7276:	4908      	ldr	r1, [pc, #32]	; (7298 <_malloc_trim_r+0x9c>)
    7278:	6809      	ldr	r1, [r1, #0]
    727a:	1a40      	subs	r0, r0, r1
    727c:	4905      	ldr	r1, [pc, #20]	; (7294 <_malloc_trim_r+0x98>)
    727e:	6008      	str	r0, [r1, #0]
    7280:	2101      	movs	r1, #1
    7282:	430b      	orrs	r3, r1
    7284:	6053      	str	r3, [r2, #4]
    7286:	e7d5      	b.n	7234 <_malloc_trim_r+0x38>
    7288:	200004ac 	.word	0x200004ac
    728c:	00000fef 	.word	0x00000fef
    7290:	00000fff 	.word	0x00000fff
    7294:	20000a88 	.word	0x20000a88
    7298:	200008b4 	.word	0x200008b4

0000729c <_free_r>:
    729c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    729e:	0004      	movs	r4, r0
    72a0:	1e0d      	subs	r5, r1, #0
    72a2:	d03c      	beq.n	731e <_free_r+0x82>
    72a4:	f000 fe5c 	bl	7f60 <__malloc_lock>
    72a8:	0029      	movs	r1, r5
    72aa:	3908      	subs	r1, #8
    72ac:	6848      	ldr	r0, [r1, #4]
    72ae:	2301      	movs	r3, #1
    72b0:	0005      	movs	r5, r0
    72b2:	2603      	movs	r6, #3
    72b4:	439d      	bics	r5, r3
    72b6:	194a      	adds	r2, r1, r5
    72b8:	469c      	mov	ip, r3
    72ba:	4f61      	ldr	r7, [pc, #388]	; (7440 <_free_r+0x1a4>)
    72bc:	6853      	ldr	r3, [r2, #4]
    72be:	43b3      	bics	r3, r6
    72c0:	68be      	ldr	r6, [r7, #8]
    72c2:	42b2      	cmp	r2, r6
    72c4:	d056      	beq.n	7374 <_free_r+0xd8>
    72c6:	4666      	mov	r6, ip
    72c8:	6053      	str	r3, [r2, #4]
    72ca:	4206      	tst	r6, r0
    72cc:	d10a      	bne.n	72e4 <_free_r+0x48>
    72ce:	003e      	movs	r6, r7
    72d0:	6808      	ldr	r0, [r1, #0]
    72d2:	3608      	adds	r6, #8
    72d4:	1a09      	subs	r1, r1, r0
    72d6:	182d      	adds	r5, r5, r0
    72d8:	6888      	ldr	r0, [r1, #8]
    72da:	42b0      	cmp	r0, r6
    72dc:	d065      	beq.n	73aa <_free_r+0x10e>
    72de:	68ce      	ldr	r6, [r1, #12]
    72e0:	60c6      	str	r6, [r0, #12]
    72e2:	60b0      	str	r0, [r6, #8]
    72e4:	2001      	movs	r0, #1
    72e6:	18d6      	adds	r6, r2, r3
    72e8:	6876      	ldr	r6, [r6, #4]
    72ea:	4206      	tst	r6, r0
    72ec:	d033      	beq.n	7356 <_free_r+0xba>
    72ee:	4b55      	ldr	r3, [pc, #340]	; (7444 <_free_r+0x1a8>)
    72f0:	4328      	orrs	r0, r5
    72f2:	6048      	str	r0, [r1, #4]
    72f4:	514d      	str	r5, [r1, r5]
    72f6:	429d      	cmp	r5, r3
    72f8:	d812      	bhi.n	7320 <_free_r+0x84>
    72fa:	08ed      	lsrs	r5, r5, #3
    72fc:	3bff      	subs	r3, #255	; 0xff
    72fe:	10aa      	asrs	r2, r5, #2
    7300:	3bff      	subs	r3, #255	; 0xff
    7302:	4093      	lsls	r3, r2
    7304:	687a      	ldr	r2, [r7, #4]
    7306:	00ed      	lsls	r5, r5, #3
    7308:	4313      	orrs	r3, r2
    730a:	607b      	str	r3, [r7, #4]
    730c:	19ef      	adds	r7, r5, r7
    730e:	68bb      	ldr	r3, [r7, #8]
    7310:	60cf      	str	r7, [r1, #12]
    7312:	608b      	str	r3, [r1, #8]
    7314:	60b9      	str	r1, [r7, #8]
    7316:	60d9      	str	r1, [r3, #12]
    7318:	0020      	movs	r0, r4
    731a:	f000 fe29 	bl	7f70 <__malloc_unlock>
    731e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7320:	0a68      	lsrs	r0, r5, #9
    7322:	2804      	cmp	r0, #4
    7324:	d850      	bhi.n	73c8 <_free_r+0x12c>
    7326:	09a8      	lsrs	r0, r5, #6
    7328:	0002      	movs	r2, r0
    732a:	3039      	adds	r0, #57	; 0x39
    732c:	3238      	adds	r2, #56	; 0x38
    732e:	00c0      	lsls	r0, r0, #3
    7330:	1838      	adds	r0, r7, r0
    7332:	3808      	subs	r0, #8
    7334:	6883      	ldr	r3, [r0, #8]
    7336:	2603      	movs	r6, #3
    7338:	4298      	cmp	r0, r3
    733a:	d04c      	beq.n	73d6 <_free_r+0x13a>
    733c:	685a      	ldr	r2, [r3, #4]
    733e:	43b2      	bics	r2, r6
    7340:	4295      	cmp	r5, r2
    7342:	d230      	bcs.n	73a6 <_free_r+0x10a>
    7344:	689b      	ldr	r3, [r3, #8]
    7346:	4298      	cmp	r0, r3
    7348:	d1f8      	bne.n	733c <_free_r+0xa0>
    734a:	68c3      	ldr	r3, [r0, #12]
    734c:	60cb      	str	r3, [r1, #12]
    734e:	6088      	str	r0, [r1, #8]
    7350:	6099      	str	r1, [r3, #8]
    7352:	60c1      	str	r1, [r0, #12]
    7354:	e7e0      	b.n	7318 <_free_r+0x7c>
    7356:	18ed      	adds	r5, r5, r3
    7358:	4e3b      	ldr	r6, [pc, #236]	; (7448 <_free_r+0x1ac>)
    735a:	6893      	ldr	r3, [r2, #8]
    735c:	42b3      	cmp	r3, r6
    735e:	d042      	beq.n	73e6 <_free_r+0x14a>
    7360:	68d2      	ldr	r2, [r2, #12]
    7362:	4328      	orrs	r0, r5
    7364:	60da      	str	r2, [r3, #12]
    7366:	6093      	str	r3, [r2, #8]
    7368:	4b36      	ldr	r3, [pc, #216]	; (7444 <_free_r+0x1a8>)
    736a:	6048      	str	r0, [r1, #4]
    736c:	514d      	str	r5, [r1, r5]
    736e:	429d      	cmp	r5, r3
    7370:	d8d6      	bhi.n	7320 <_free_r+0x84>
    7372:	e7c2      	b.n	72fa <_free_r+0x5e>
    7374:	4662      	mov	r2, ip
    7376:	18eb      	adds	r3, r5, r3
    7378:	4202      	tst	r2, r0
    737a:	d106      	bne.n	738a <_free_r+0xee>
    737c:	680a      	ldr	r2, [r1, #0]
    737e:	1a89      	subs	r1, r1, r2
    7380:	6888      	ldr	r0, [r1, #8]
    7382:	189b      	adds	r3, r3, r2
    7384:	68ca      	ldr	r2, [r1, #12]
    7386:	60c2      	str	r2, [r0, #12]
    7388:	6090      	str	r0, [r2, #8]
    738a:	2201      	movs	r2, #1
    738c:	431a      	orrs	r2, r3
    738e:	604a      	str	r2, [r1, #4]
    7390:	4a2e      	ldr	r2, [pc, #184]	; (744c <_free_r+0x1b0>)
    7392:	60b9      	str	r1, [r7, #8]
    7394:	6812      	ldr	r2, [r2, #0]
    7396:	4293      	cmp	r3, r2
    7398:	d3be      	bcc.n	7318 <_free_r+0x7c>
    739a:	4b2d      	ldr	r3, [pc, #180]	; (7450 <_free_r+0x1b4>)
    739c:	0020      	movs	r0, r4
    739e:	6819      	ldr	r1, [r3, #0]
    73a0:	f7ff ff2c 	bl	71fc <_malloc_trim_r>
    73a4:	e7b8      	b.n	7318 <_free_r+0x7c>
    73a6:	0018      	movs	r0, r3
    73a8:	e7cf      	b.n	734a <_free_r+0xae>
    73aa:	4666      	mov	r6, ip
    73ac:	18d0      	adds	r0, r2, r3
    73ae:	6840      	ldr	r0, [r0, #4]
    73b0:	4230      	tst	r0, r6
    73b2:	d13f      	bne.n	7434 <_free_r+0x198>
    73b4:	6890      	ldr	r0, [r2, #8]
    73b6:	195d      	adds	r5, r3, r5
    73b8:	68d3      	ldr	r3, [r2, #12]
    73ba:	60c3      	str	r3, [r0, #12]
    73bc:	6098      	str	r0, [r3, #8]
    73be:	4663      	mov	r3, ip
    73c0:	432b      	orrs	r3, r5
    73c2:	604b      	str	r3, [r1, #4]
    73c4:	514d      	str	r5, [r1, r5]
    73c6:	e7a7      	b.n	7318 <_free_r+0x7c>
    73c8:	2814      	cmp	r0, #20
    73ca:	d814      	bhi.n	73f6 <_free_r+0x15a>
    73cc:	0002      	movs	r2, r0
    73ce:	305c      	adds	r0, #92	; 0x5c
    73d0:	325b      	adds	r2, #91	; 0x5b
    73d2:	00c0      	lsls	r0, r0, #3
    73d4:	e7ac      	b.n	7330 <_free_r+0x94>
    73d6:	2301      	movs	r3, #1
    73d8:	1092      	asrs	r2, r2, #2
    73da:	4093      	lsls	r3, r2
    73dc:	687a      	ldr	r2, [r7, #4]
    73de:	4313      	orrs	r3, r2
    73e0:	607b      	str	r3, [r7, #4]
    73e2:	0003      	movs	r3, r0
    73e4:	e7b2      	b.n	734c <_free_r+0xb0>
    73e6:	4328      	orrs	r0, r5
    73e8:	60d9      	str	r1, [r3, #12]
    73ea:	6099      	str	r1, [r3, #8]
    73ec:	60cb      	str	r3, [r1, #12]
    73ee:	608b      	str	r3, [r1, #8]
    73f0:	6048      	str	r0, [r1, #4]
    73f2:	514d      	str	r5, [r1, r5]
    73f4:	e790      	b.n	7318 <_free_r+0x7c>
    73f6:	2854      	cmp	r0, #84	; 0x54
    73f8:	d805      	bhi.n	7406 <_free_r+0x16a>
    73fa:	0b28      	lsrs	r0, r5, #12
    73fc:	0002      	movs	r2, r0
    73fe:	306f      	adds	r0, #111	; 0x6f
    7400:	326e      	adds	r2, #110	; 0x6e
    7402:	00c0      	lsls	r0, r0, #3
    7404:	e794      	b.n	7330 <_free_r+0x94>
    7406:	22aa      	movs	r2, #170	; 0xaa
    7408:	0052      	lsls	r2, r2, #1
    740a:	4290      	cmp	r0, r2
    740c:	d805      	bhi.n	741a <_free_r+0x17e>
    740e:	0be8      	lsrs	r0, r5, #15
    7410:	0002      	movs	r2, r0
    7412:	3078      	adds	r0, #120	; 0x78
    7414:	3277      	adds	r2, #119	; 0x77
    7416:	00c0      	lsls	r0, r0, #3
    7418:	e78a      	b.n	7330 <_free_r+0x94>
    741a:	4a0e      	ldr	r2, [pc, #56]	; (7454 <_free_r+0x1b8>)
    741c:	4290      	cmp	r0, r2
    741e:	d805      	bhi.n	742c <_free_r+0x190>
    7420:	0ca8      	lsrs	r0, r5, #18
    7422:	0002      	movs	r2, r0
    7424:	307d      	adds	r0, #125	; 0x7d
    7426:	327c      	adds	r2, #124	; 0x7c
    7428:	00c0      	lsls	r0, r0, #3
    742a:	e781      	b.n	7330 <_free_r+0x94>
    742c:	20fe      	movs	r0, #254	; 0xfe
    742e:	227e      	movs	r2, #126	; 0x7e
    7430:	0080      	lsls	r0, r0, #2
    7432:	e77d      	b.n	7330 <_free_r+0x94>
    7434:	4663      	mov	r3, ip
    7436:	432b      	orrs	r3, r5
    7438:	604b      	str	r3, [r1, #4]
    743a:	6015      	str	r5, [r2, #0]
    743c:	e76c      	b.n	7318 <_free_r+0x7c>
    743e:	46c0      	nop			; (mov r8, r8)
    7440:	200004ac 	.word	0x200004ac
    7444:	000001ff 	.word	0x000001ff
    7448:	200004b4 	.word	0x200004b4
    744c:	200008b8 	.word	0x200008b8
    7450:	20000ab8 	.word	0x20000ab8
    7454:	00000554 	.word	0x00000554

00007458 <__sfvwrite_r>:
    7458:	b5f0      	push	{r4, r5, r6, r7, lr}
    745a:	464e      	mov	r6, r9
    745c:	46de      	mov	lr, fp
    745e:	4657      	mov	r7, sl
    7460:	4645      	mov	r5, r8
    7462:	b5e0      	push	{r5, r6, r7, lr}
    7464:	6893      	ldr	r3, [r2, #8]
    7466:	b083      	sub	sp, #12
    7468:	9000      	str	r0, [sp, #0]
    746a:	000c      	movs	r4, r1
    746c:	0016      	movs	r6, r2
    746e:	2b00      	cmp	r3, #0
    7470:	d025      	beq.n	74be <__sfvwrite_r+0x66>
    7472:	898b      	ldrh	r3, [r1, #12]
    7474:	071a      	lsls	r2, r3, #28
    7476:	d52a      	bpl.n	74ce <__sfvwrite_r+0x76>
    7478:	690a      	ldr	r2, [r1, #16]
    747a:	2a00      	cmp	r2, #0
    747c:	d027      	beq.n	74ce <__sfvwrite_r+0x76>
    747e:	6832      	ldr	r2, [r6, #0]
    7480:	4693      	mov	fp, r2
    7482:	079a      	lsls	r2, r3, #30
    7484:	d52f      	bpl.n	74e6 <__sfvwrite_r+0x8e>
    7486:	4bb2      	ldr	r3, [pc, #712]	; (7750 <__sfvwrite_r+0x2f8>)
    7488:	2700      	movs	r7, #0
    748a:	2500      	movs	r5, #0
    748c:	4698      	mov	r8, r3
    748e:	46b1      	mov	r9, r6
    7490:	2d00      	cmp	r5, #0
    7492:	d100      	bne.n	7496 <__sfvwrite_r+0x3e>
    7494:	e072      	b.n	757c <__sfvwrite_r+0x124>
    7496:	002b      	movs	r3, r5
    7498:	4545      	cmp	r5, r8
    749a:	d900      	bls.n	749e <__sfvwrite_r+0x46>
    749c:	4bac      	ldr	r3, [pc, #688]	; (7750 <__sfvwrite_r+0x2f8>)
    749e:	003a      	movs	r2, r7
    74a0:	69e1      	ldr	r1, [r4, #28]
    74a2:	9800      	ldr	r0, [sp, #0]
    74a4:	6a66      	ldr	r6, [r4, #36]	; 0x24
    74a6:	47b0      	blx	r6
    74a8:	2800      	cmp	r0, #0
    74aa:	dc00      	bgt.n	74ae <__sfvwrite_r+0x56>
    74ac:	e073      	b.n	7596 <__sfvwrite_r+0x13e>
    74ae:	464b      	mov	r3, r9
    74b0:	689b      	ldr	r3, [r3, #8]
    74b2:	183f      	adds	r7, r7, r0
    74b4:	1a2d      	subs	r5, r5, r0
    74b6:	1a18      	subs	r0, r3, r0
    74b8:	464b      	mov	r3, r9
    74ba:	6098      	str	r0, [r3, #8]
    74bc:	d1e8      	bne.n	7490 <__sfvwrite_r+0x38>
    74be:	2000      	movs	r0, #0
    74c0:	b003      	add	sp, #12
    74c2:	bc3c      	pop	{r2, r3, r4, r5}
    74c4:	4690      	mov	r8, r2
    74c6:	4699      	mov	r9, r3
    74c8:	46a2      	mov	sl, r4
    74ca:	46ab      	mov	fp, r5
    74cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    74ce:	0021      	movs	r1, r4
    74d0:	9800      	ldr	r0, [sp, #0]
    74d2:	f7fe fc4b 	bl	5d6c <__swsetup_r>
    74d6:	2800      	cmp	r0, #0
    74d8:	d000      	beq.n	74dc <__sfvwrite_r+0x84>
    74da:	e130      	b.n	773e <__sfvwrite_r+0x2e6>
    74dc:	6832      	ldr	r2, [r6, #0]
    74de:	89a3      	ldrh	r3, [r4, #12]
    74e0:	4693      	mov	fp, r2
    74e2:	079a      	lsls	r2, r3, #30
    74e4:	d4cf      	bmi.n	7486 <__sfvwrite_r+0x2e>
    74e6:	07da      	lsls	r2, r3, #31
    74e8:	d55d      	bpl.n	75a6 <__sfvwrite_r+0x14e>
    74ea:	2300      	movs	r3, #0
    74ec:	2000      	movs	r0, #0
    74ee:	469a      	mov	sl, r3
    74f0:	2700      	movs	r7, #0
    74f2:	001d      	movs	r5, r3
    74f4:	46b1      	mov	r9, r6
    74f6:	e029      	b.n	754c <__sfvwrite_r+0xf4>
    74f8:	2800      	cmp	r0, #0
    74fa:	d033      	beq.n	7564 <__sfvwrite_r+0x10c>
    74fc:	46a8      	mov	r8, r5
    74fe:	42bd      	cmp	r5, r7
    7500:	d900      	bls.n	7504 <__sfvwrite_r+0xac>
    7502:	46b8      	mov	r8, r7
    7504:	6820      	ldr	r0, [r4, #0]
    7506:	6922      	ldr	r2, [r4, #16]
    7508:	4646      	mov	r6, r8
    750a:	6963      	ldr	r3, [r4, #20]
    750c:	4290      	cmp	r0, r2
    750e:	d907      	bls.n	7520 <__sfvwrite_r+0xc8>
    7510:	68a2      	ldr	r2, [r4, #8]
    7512:	4694      	mov	ip, r2
    7514:	449c      	add	ip, r3
    7516:	4662      	mov	r2, ip
    7518:	9201      	str	r2, [sp, #4]
    751a:	45e0      	cmp	r8, ip
    751c:	dd00      	ble.n	7520 <__sfvwrite_r+0xc8>
    751e:	e0e9      	b.n	76f4 <__sfvwrite_r+0x29c>
    7520:	4598      	cmp	r8, r3
    7522:	da00      	bge.n	7526 <__sfvwrite_r+0xce>
    7524:	e08f      	b.n	7646 <__sfvwrite_r+0x1ee>
    7526:	6a66      	ldr	r6, [r4, #36]	; 0x24
    7528:	4652      	mov	r2, sl
    752a:	69e1      	ldr	r1, [r4, #28]
    752c:	9800      	ldr	r0, [sp, #0]
    752e:	47b0      	blx	r6
    7530:	1e06      	subs	r6, r0, #0
    7532:	dd30      	ble.n	7596 <__sfvwrite_r+0x13e>
    7534:	1bad      	subs	r5, r5, r6
    7536:	2001      	movs	r0, #1
    7538:	2d00      	cmp	r5, #0
    753a:	d026      	beq.n	758a <__sfvwrite_r+0x132>
    753c:	464b      	mov	r3, r9
    753e:	689b      	ldr	r3, [r3, #8]
    7540:	44b2      	add	sl, r6
    7542:	1bbf      	subs	r7, r7, r6
    7544:	1b9e      	subs	r6, r3, r6
    7546:	464b      	mov	r3, r9
    7548:	609e      	str	r6, [r3, #8]
    754a:	d0b8      	beq.n	74be <__sfvwrite_r+0x66>
    754c:	2f00      	cmp	r7, #0
    754e:	d1d3      	bne.n	74f8 <__sfvwrite_r+0xa0>
    7550:	465b      	mov	r3, fp
    7552:	681b      	ldr	r3, [r3, #0]
    7554:	469a      	mov	sl, r3
    7556:	465b      	mov	r3, fp
    7558:	685f      	ldr	r7, [r3, #4]
    755a:	2308      	movs	r3, #8
    755c:	469c      	mov	ip, r3
    755e:	44e3      	add	fp, ip
    7560:	2f00      	cmp	r7, #0
    7562:	d0f5      	beq.n	7550 <__sfvwrite_r+0xf8>
    7564:	003a      	movs	r2, r7
    7566:	210a      	movs	r1, #10
    7568:	4650      	mov	r0, sl
    756a:	f000 fc69 	bl	7e40 <memchr>
    756e:	2800      	cmp	r0, #0
    7570:	d100      	bne.n	7574 <__sfvwrite_r+0x11c>
    7572:	e0e2      	b.n	773a <__sfvwrite_r+0x2e2>
    7574:	4653      	mov	r3, sl
    7576:	3001      	adds	r0, #1
    7578:	1ac5      	subs	r5, r0, r3
    757a:	e7bf      	b.n	74fc <__sfvwrite_r+0xa4>
    757c:	465b      	mov	r3, fp
    757e:	681f      	ldr	r7, [r3, #0]
    7580:	685d      	ldr	r5, [r3, #4]
    7582:	2308      	movs	r3, #8
    7584:	469c      	mov	ip, r3
    7586:	44e3      	add	fp, ip
    7588:	e782      	b.n	7490 <__sfvwrite_r+0x38>
    758a:	0021      	movs	r1, r4
    758c:	9800      	ldr	r0, [sp, #0]
    758e:	f7ff fd81 	bl	7094 <_fflush_r>
    7592:	2800      	cmp	r0, #0
    7594:	d0d2      	beq.n	753c <__sfvwrite_r+0xe4>
    7596:	220c      	movs	r2, #12
    7598:	5ea3      	ldrsh	r3, [r4, r2]
    759a:	2240      	movs	r2, #64	; 0x40
    759c:	2001      	movs	r0, #1
    759e:	4313      	orrs	r3, r2
    75a0:	81a3      	strh	r3, [r4, #12]
    75a2:	4240      	negs	r0, r0
    75a4:	e78c      	b.n	74c0 <__sfvwrite_r+0x68>
    75a6:	2200      	movs	r2, #0
    75a8:	4691      	mov	r9, r2
    75aa:	464d      	mov	r5, r9
    75ac:	2d00      	cmp	r5, #0
    75ae:	d023      	beq.n	75f8 <__sfvwrite_r+0x1a0>
    75b0:	68a2      	ldr	r2, [r4, #8]
    75b2:	4690      	mov	r8, r2
    75b4:	2280      	movs	r2, #128	; 0x80
    75b6:	0092      	lsls	r2, r2, #2
    75b8:	4213      	tst	r3, r2
    75ba:	d026      	beq.n	760a <__sfvwrite_r+0x1b2>
    75bc:	46c2      	mov	sl, r8
    75be:	4545      	cmp	r5, r8
    75c0:	d34d      	bcc.n	765e <__sfvwrite_r+0x206>
    75c2:	2290      	movs	r2, #144	; 0x90
    75c4:	00d2      	lsls	r2, r2, #3
    75c6:	4213      	tst	r3, r2
    75c8:	d14e      	bne.n	7668 <__sfvwrite_r+0x210>
    75ca:	002f      	movs	r7, r5
    75cc:	6820      	ldr	r0, [r4, #0]
    75ce:	4652      	mov	r2, sl
    75d0:	4649      	mov	r1, r9
    75d2:	f000 fc75 	bl	7ec0 <memmove>
    75d6:	4642      	mov	r2, r8
    75d8:	68a3      	ldr	r3, [r4, #8]
    75da:	1a98      	subs	r0, r3, r2
    75dc:	6823      	ldr	r3, [r4, #0]
    75de:	60a0      	str	r0, [r4, #8]
    75e0:	4453      	add	r3, sl
    75e2:	6023      	str	r3, [r4, #0]
    75e4:	68b3      	ldr	r3, [r6, #8]
    75e6:	44b9      	add	r9, r7
    75e8:	1bed      	subs	r5, r5, r7
    75ea:	1bdf      	subs	r7, r3, r7
    75ec:	60b7      	str	r7, [r6, #8]
    75ee:	d100      	bne.n	75f2 <__sfvwrite_r+0x19a>
    75f0:	e765      	b.n	74be <__sfvwrite_r+0x66>
    75f2:	89a3      	ldrh	r3, [r4, #12]
    75f4:	2d00      	cmp	r5, #0
    75f6:	d1db      	bne.n	75b0 <__sfvwrite_r+0x158>
    75f8:	465a      	mov	r2, fp
    75fa:	6812      	ldr	r2, [r2, #0]
    75fc:	4691      	mov	r9, r2
    75fe:	465a      	mov	r2, fp
    7600:	6855      	ldr	r5, [r2, #4]
    7602:	2208      	movs	r2, #8
    7604:	4694      	mov	ip, r2
    7606:	44e3      	add	fp, ip
    7608:	e7d0      	b.n	75ac <__sfvwrite_r+0x154>
    760a:	6820      	ldr	r0, [r4, #0]
    760c:	6923      	ldr	r3, [r4, #16]
    760e:	4298      	cmp	r0, r3
    7610:	d802      	bhi.n	7618 <__sfvwrite_r+0x1c0>
    7612:	6967      	ldr	r7, [r4, #20]
    7614:	42bd      	cmp	r5, r7
    7616:	d259      	bcs.n	76cc <__sfvwrite_r+0x274>
    7618:	4647      	mov	r7, r8
    761a:	42af      	cmp	r7, r5
    761c:	d900      	bls.n	7620 <__sfvwrite_r+0x1c8>
    761e:	002f      	movs	r7, r5
    7620:	003a      	movs	r2, r7
    7622:	4649      	mov	r1, r9
    7624:	f000 fc4c 	bl	7ec0 <memmove>
    7628:	68a3      	ldr	r3, [r4, #8]
    762a:	6822      	ldr	r2, [r4, #0]
    762c:	1bdb      	subs	r3, r3, r7
    762e:	19d2      	adds	r2, r2, r7
    7630:	60a3      	str	r3, [r4, #8]
    7632:	6022      	str	r2, [r4, #0]
    7634:	2b00      	cmp	r3, #0
    7636:	d1d5      	bne.n	75e4 <__sfvwrite_r+0x18c>
    7638:	0021      	movs	r1, r4
    763a:	9800      	ldr	r0, [sp, #0]
    763c:	f7ff fd2a 	bl	7094 <_fflush_r>
    7640:	2800      	cmp	r0, #0
    7642:	d0cf      	beq.n	75e4 <__sfvwrite_r+0x18c>
    7644:	e7a7      	b.n	7596 <__sfvwrite_r+0x13e>
    7646:	4642      	mov	r2, r8
    7648:	4651      	mov	r1, sl
    764a:	f000 fc39 	bl	7ec0 <memmove>
    764e:	4642      	mov	r2, r8
    7650:	68a3      	ldr	r3, [r4, #8]
    7652:	1a9b      	subs	r3, r3, r2
    7654:	60a3      	str	r3, [r4, #8]
    7656:	6823      	ldr	r3, [r4, #0]
    7658:	4443      	add	r3, r8
    765a:	6023      	str	r3, [r4, #0]
    765c:	e76a      	b.n	7534 <__sfvwrite_r+0xdc>
    765e:	46a8      	mov	r8, r5
    7660:	6820      	ldr	r0, [r4, #0]
    7662:	002f      	movs	r7, r5
    7664:	46aa      	mov	sl, r5
    7666:	e7b2      	b.n	75ce <__sfvwrite_r+0x176>
    7668:	6921      	ldr	r1, [r4, #16]
    766a:	6822      	ldr	r2, [r4, #0]
    766c:	1a52      	subs	r2, r2, r1
    766e:	4692      	mov	sl, r2
    7670:	6962      	ldr	r2, [r4, #20]
    7672:	0057      	lsls	r7, r2, #1
    7674:	18bf      	adds	r7, r7, r2
    7676:	0ffa      	lsrs	r2, r7, #31
    7678:	19d7      	adds	r7, r2, r7
    767a:	4652      	mov	r2, sl
    767c:	1c50      	adds	r0, r2, #1
    767e:	107f      	asrs	r7, r7, #1
    7680:	1940      	adds	r0, r0, r5
    7682:	003a      	movs	r2, r7
    7684:	42b8      	cmp	r0, r7
    7686:	d901      	bls.n	768c <__sfvwrite_r+0x234>
    7688:	0007      	movs	r7, r0
    768a:	0002      	movs	r2, r0
    768c:	055b      	lsls	r3, r3, #21
    768e:	d542      	bpl.n	7716 <__sfvwrite_r+0x2be>
    7690:	0011      	movs	r1, r2
    7692:	9800      	ldr	r0, [sp, #0]
    7694:	f000 f920 	bl	78d8 <_malloc_r>
    7698:	4680      	mov	r8, r0
    769a:	1e03      	subs	r3, r0, #0
    769c:	d052      	beq.n	7744 <__sfvwrite_r+0x2ec>
    769e:	4652      	mov	r2, sl
    76a0:	6921      	ldr	r1, [r4, #16]
    76a2:	f7fc fe09 	bl	42b8 <memcpy>
    76a6:	89a3      	ldrh	r3, [r4, #12]
    76a8:	4a2a      	ldr	r2, [pc, #168]	; (7754 <__sfvwrite_r+0x2fc>)
    76aa:	4013      	ands	r3, r2
    76ac:	2280      	movs	r2, #128	; 0x80
    76ae:	4313      	orrs	r3, r2
    76b0:	81a3      	strh	r3, [r4, #12]
    76b2:	4643      	mov	r3, r8
    76b4:	4640      	mov	r0, r8
    76b6:	6123      	str	r3, [r4, #16]
    76b8:	4653      	mov	r3, sl
    76ba:	4450      	add	r0, sl
    76bc:	6167      	str	r7, [r4, #20]
    76be:	1aff      	subs	r7, r7, r3
    76c0:	60a7      	str	r7, [r4, #8]
    76c2:	6020      	str	r0, [r4, #0]
    76c4:	46a8      	mov	r8, r5
    76c6:	002f      	movs	r7, r5
    76c8:	46aa      	mov	sl, r5
    76ca:	e780      	b.n	75ce <__sfvwrite_r+0x176>
    76cc:	4b22      	ldr	r3, [pc, #136]	; (7758 <__sfvwrite_r+0x300>)
    76ce:	0028      	movs	r0, r5
    76d0:	429d      	cmp	r5, r3
    76d2:	d900      	bls.n	76d6 <__sfvwrite_r+0x27e>
    76d4:	0018      	movs	r0, r3
    76d6:	0039      	movs	r1, r7
    76d8:	f001 fcba 	bl	9050 <__divsi3>
    76dc:	003b      	movs	r3, r7
    76de:	464a      	mov	r2, r9
    76e0:	4343      	muls	r3, r0
    76e2:	69e1      	ldr	r1, [r4, #28]
    76e4:	9800      	ldr	r0, [sp, #0]
    76e6:	6a67      	ldr	r7, [r4, #36]	; 0x24
    76e8:	47b8      	blx	r7
    76ea:	2800      	cmp	r0, #0
    76ec:	dc00      	bgt.n	76f0 <__sfvwrite_r+0x298>
    76ee:	e752      	b.n	7596 <__sfvwrite_r+0x13e>
    76f0:	0007      	movs	r7, r0
    76f2:	e777      	b.n	75e4 <__sfvwrite_r+0x18c>
    76f4:	4666      	mov	r6, ip
    76f6:	4651      	mov	r1, sl
    76f8:	f000 fbe2 	bl	7ec0 <memmove>
    76fc:	46b4      	mov	ip, r6
    76fe:	6823      	ldr	r3, [r4, #0]
    7700:	0021      	movs	r1, r4
    7702:	4463      	add	r3, ip
    7704:	6023      	str	r3, [r4, #0]
    7706:	9800      	ldr	r0, [sp, #0]
    7708:	f7ff fcc4 	bl	7094 <_fflush_r>
    770c:	2800      	cmp	r0, #0
    770e:	d000      	beq.n	7712 <__sfvwrite_r+0x2ba>
    7710:	e741      	b.n	7596 <__sfvwrite_r+0x13e>
    7712:	9e01      	ldr	r6, [sp, #4]
    7714:	e70e      	b.n	7534 <__sfvwrite_r+0xdc>
    7716:	9800      	ldr	r0, [sp, #0]
    7718:	f000 ff7a 	bl	8610 <_realloc_r>
    771c:	4680      	mov	r8, r0
    771e:	2800      	cmp	r0, #0
    7720:	d1c7      	bne.n	76b2 <__sfvwrite_r+0x25a>
    7722:	9d00      	ldr	r5, [sp, #0]
    7724:	6921      	ldr	r1, [r4, #16]
    7726:	0028      	movs	r0, r5
    7728:	f7ff fdb8 	bl	729c <_free_r>
    772c:	2280      	movs	r2, #128	; 0x80
    772e:	89a3      	ldrh	r3, [r4, #12]
    7730:	4393      	bics	r3, r2
    7732:	3a74      	subs	r2, #116	; 0x74
    7734:	b21b      	sxth	r3, r3
    7736:	602a      	str	r2, [r5, #0]
    7738:	e72f      	b.n	759a <__sfvwrite_r+0x142>
    773a:	1c7d      	adds	r5, r7, #1
    773c:	e6de      	b.n	74fc <__sfvwrite_r+0xa4>
    773e:	2001      	movs	r0, #1
    7740:	4240      	negs	r0, r0
    7742:	e6bd      	b.n	74c0 <__sfvwrite_r+0x68>
    7744:	9a00      	ldr	r2, [sp, #0]
    7746:	330c      	adds	r3, #12
    7748:	6013      	str	r3, [r2, #0]
    774a:	220c      	movs	r2, #12
    774c:	5ea3      	ldrsh	r3, [r4, r2]
    774e:	e724      	b.n	759a <__sfvwrite_r+0x142>
    7750:	7ffffc00 	.word	0x7ffffc00
    7754:	fffffb7f 	.word	0xfffffb7f
    7758:	7fffffff 	.word	0x7fffffff

0000775c <_fwalk_reent>:
    775c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    775e:	4647      	mov	r7, r8
    7760:	46ce      	mov	lr, r9
    7762:	b580      	push	{r7, lr}
    7764:	27b8      	movs	r7, #184	; 0xb8
    7766:	4680      	mov	r8, r0
    7768:	00bf      	lsls	r7, r7, #2
    776a:	4447      	add	r7, r8
    776c:	4689      	mov	r9, r1
    776e:	2600      	movs	r6, #0
    7770:	2f00      	cmp	r7, #0
    7772:	d014      	beq.n	779e <_fwalk_reent+0x42>
    7774:	687b      	ldr	r3, [r7, #4]
    7776:	68bc      	ldr	r4, [r7, #8]
    7778:	1e5d      	subs	r5, r3, #1
    777a:	d40d      	bmi.n	7798 <_fwalk_reent+0x3c>
    777c:	89a3      	ldrh	r3, [r4, #12]
    777e:	2b01      	cmp	r3, #1
    7780:	d907      	bls.n	7792 <_fwalk_reent+0x36>
    7782:	220e      	movs	r2, #14
    7784:	5ea3      	ldrsh	r3, [r4, r2]
    7786:	3301      	adds	r3, #1
    7788:	d003      	beq.n	7792 <_fwalk_reent+0x36>
    778a:	0021      	movs	r1, r4
    778c:	4640      	mov	r0, r8
    778e:	47c8      	blx	r9
    7790:	4306      	orrs	r6, r0
    7792:	3468      	adds	r4, #104	; 0x68
    7794:	3d01      	subs	r5, #1
    7796:	d2f1      	bcs.n	777c <_fwalk_reent+0x20>
    7798:	683f      	ldr	r7, [r7, #0]
    779a:	2f00      	cmp	r7, #0
    779c:	d1ea      	bne.n	7774 <_fwalk_reent+0x18>
    779e:	0030      	movs	r0, r6
    77a0:	bc0c      	pop	{r2, r3}
    77a2:	4690      	mov	r8, r2
    77a4:	4699      	mov	r9, r3
    77a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000077a8 <_localeconv_r>:
    77a8:	4b04      	ldr	r3, [pc, #16]	; (77bc <_localeconv_r+0x14>)
    77aa:	681b      	ldr	r3, [r3, #0]
    77ac:	6b58      	ldr	r0, [r3, #52]	; 0x34
    77ae:	2800      	cmp	r0, #0
    77b0:	d001      	beq.n	77b6 <_localeconv_r+0xe>
    77b2:	30f0      	adds	r0, #240	; 0xf0
    77b4:	4770      	bx	lr
    77b6:	4802      	ldr	r0, [pc, #8]	; (77c0 <_localeconv_r+0x18>)
    77b8:	e7fb      	b.n	77b2 <_localeconv_r+0xa>
    77ba:	46c0      	nop			; (mov r8, r8)
    77bc:	2000007c 	.word	0x2000007c
    77c0:	200008bc 	.word	0x200008bc

000077c4 <__retarget_lock_init_recursive>:
    77c4:	4770      	bx	lr
    77c6:	46c0      	nop			; (mov r8, r8)

000077c8 <__retarget_lock_close_recursive>:
    77c8:	4770      	bx	lr
    77ca:	46c0      	nop			; (mov r8, r8)

000077cc <__retarget_lock_acquire_recursive>:
    77cc:	4770      	bx	lr
    77ce:	46c0      	nop			; (mov r8, r8)

000077d0 <__retarget_lock_release_recursive>:
    77d0:	4770      	bx	lr
    77d2:	46c0      	nop			; (mov r8, r8)

000077d4 <__swhatbuf_r>:
    77d4:	b570      	push	{r4, r5, r6, lr}
    77d6:	000c      	movs	r4, r1
    77d8:	001e      	movs	r6, r3
    77da:	230e      	movs	r3, #14
    77dc:	5ec9      	ldrsh	r1, [r1, r3]
    77de:	b090      	sub	sp, #64	; 0x40
    77e0:	0015      	movs	r5, r2
    77e2:	2900      	cmp	r1, #0
    77e4:	db15      	blt.n	7812 <__swhatbuf_r+0x3e>
    77e6:	aa01      	add	r2, sp, #4
    77e8:	f001 fb28 	bl	8e3c <_fstat_r>
    77ec:	2800      	cmp	r0, #0
    77ee:	db10      	blt.n	7812 <__swhatbuf_r+0x3e>
    77f0:	22f0      	movs	r2, #240	; 0xf0
    77f2:	9b02      	ldr	r3, [sp, #8]
    77f4:	0212      	lsls	r2, r2, #8
    77f6:	4013      	ands	r3, r2
    77f8:	4a0d      	ldr	r2, [pc, #52]	; (7830 <__swhatbuf_r+0x5c>)
    77fa:	2080      	movs	r0, #128	; 0x80
    77fc:	4694      	mov	ip, r2
    77fe:	4463      	add	r3, ip
    7800:	425a      	negs	r2, r3
    7802:	4153      	adcs	r3, r2
    7804:	6033      	str	r3, [r6, #0]
    7806:	2380      	movs	r3, #128	; 0x80
    7808:	00db      	lsls	r3, r3, #3
    780a:	602b      	str	r3, [r5, #0]
    780c:	0100      	lsls	r0, r0, #4
    780e:	b010      	add	sp, #64	; 0x40
    7810:	bd70      	pop	{r4, r5, r6, pc}
    7812:	2300      	movs	r3, #0
    7814:	6033      	str	r3, [r6, #0]
    7816:	89a3      	ldrh	r3, [r4, #12]
    7818:	061b      	lsls	r3, r3, #24
    781a:	d503      	bpl.n	7824 <__swhatbuf_r+0x50>
    781c:	2340      	movs	r3, #64	; 0x40
    781e:	2000      	movs	r0, #0
    7820:	602b      	str	r3, [r5, #0]
    7822:	e7f4      	b.n	780e <__swhatbuf_r+0x3a>
    7824:	2380      	movs	r3, #128	; 0x80
    7826:	00db      	lsls	r3, r3, #3
    7828:	602b      	str	r3, [r5, #0]
    782a:	2000      	movs	r0, #0
    782c:	e7ef      	b.n	780e <__swhatbuf_r+0x3a>
    782e:	46c0      	nop			; (mov r8, r8)
    7830:	ffffe000 	.word	0xffffe000

00007834 <__smakebuf_r>:
    7834:	b570      	push	{r4, r5, r6, lr}
    7836:	898b      	ldrh	r3, [r1, #12]
    7838:	b082      	sub	sp, #8
    783a:	0006      	movs	r6, r0
    783c:	000c      	movs	r4, r1
    783e:	079b      	lsls	r3, r3, #30
    7840:	d507      	bpl.n	7852 <__smakebuf_r+0x1e>
    7842:	0023      	movs	r3, r4
    7844:	3343      	adds	r3, #67	; 0x43
    7846:	6023      	str	r3, [r4, #0]
    7848:	6123      	str	r3, [r4, #16]
    784a:	2301      	movs	r3, #1
    784c:	6163      	str	r3, [r4, #20]
    784e:	b002      	add	sp, #8
    7850:	bd70      	pop	{r4, r5, r6, pc}
    7852:	ab01      	add	r3, sp, #4
    7854:	466a      	mov	r2, sp
    7856:	f7ff ffbd 	bl	77d4 <__swhatbuf_r>
    785a:	9900      	ldr	r1, [sp, #0]
    785c:	0005      	movs	r5, r0
    785e:	0030      	movs	r0, r6
    7860:	f000 f83a 	bl	78d8 <_malloc_r>
    7864:	2800      	cmp	r0, #0
    7866:	d01e      	beq.n	78a6 <__smakebuf_r+0x72>
    7868:	2280      	movs	r2, #128	; 0x80
    786a:	4b15      	ldr	r3, [pc, #84]	; (78c0 <__smakebuf_r+0x8c>)
    786c:	63f3      	str	r3, [r6, #60]	; 0x3c
    786e:	89a3      	ldrh	r3, [r4, #12]
    7870:	6020      	str	r0, [r4, #0]
    7872:	4313      	orrs	r3, r2
    7874:	9a00      	ldr	r2, [sp, #0]
    7876:	b21b      	sxth	r3, r3
    7878:	6162      	str	r2, [r4, #20]
    787a:	9a01      	ldr	r2, [sp, #4]
    787c:	81a3      	strh	r3, [r4, #12]
    787e:	6120      	str	r0, [r4, #16]
    7880:	2a00      	cmp	r2, #0
    7882:	d102      	bne.n	788a <__smakebuf_r+0x56>
    7884:	432b      	orrs	r3, r5
    7886:	81a3      	strh	r3, [r4, #12]
    7888:	e7e1      	b.n	784e <__smakebuf_r+0x1a>
    788a:	230e      	movs	r3, #14
    788c:	5ee1      	ldrsh	r1, [r4, r3]
    788e:	0030      	movs	r0, r6
    7890:	f001 fae8 	bl	8e64 <_isatty_r>
    7894:	2800      	cmp	r0, #0
    7896:	d010      	beq.n	78ba <__smakebuf_r+0x86>
    7898:	2203      	movs	r2, #3
    789a:	89a3      	ldrh	r3, [r4, #12]
    789c:	4393      	bics	r3, r2
    789e:	2201      	movs	r2, #1
    78a0:	4313      	orrs	r3, r2
    78a2:	b21b      	sxth	r3, r3
    78a4:	e7ee      	b.n	7884 <__smakebuf_r+0x50>
    78a6:	220c      	movs	r2, #12
    78a8:	5ea3      	ldrsh	r3, [r4, r2]
    78aa:	059a      	lsls	r2, r3, #22
    78ac:	d4cf      	bmi.n	784e <__smakebuf_r+0x1a>
    78ae:	2203      	movs	r2, #3
    78b0:	4393      	bics	r3, r2
    78b2:	2202      	movs	r2, #2
    78b4:	4313      	orrs	r3, r2
    78b6:	81a3      	strh	r3, [r4, #12]
    78b8:	e7c3      	b.n	7842 <__smakebuf_r+0xe>
    78ba:	220c      	movs	r2, #12
    78bc:	5ea3      	ldrsh	r3, [r4, r2]
    78be:	e7e1      	b.n	7884 <__smakebuf_r+0x50>
    78c0:	000070e9 	.word	0x000070e9

000078c4 <malloc>:
    78c4:	b510      	push	{r4, lr}
    78c6:	4b03      	ldr	r3, [pc, #12]	; (78d4 <malloc+0x10>)
    78c8:	0001      	movs	r1, r0
    78ca:	6818      	ldr	r0, [r3, #0]
    78cc:	f000 f804 	bl	78d8 <_malloc_r>
    78d0:	bd10      	pop	{r4, pc}
    78d2:	46c0      	nop			; (mov r8, r8)
    78d4:	2000007c 	.word	0x2000007c

000078d8 <_malloc_r>:
    78d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    78da:	4657      	mov	r7, sl
    78dc:	4645      	mov	r5, r8
    78de:	46de      	mov	lr, fp
    78e0:	464e      	mov	r6, r9
    78e2:	b5e0      	push	{r5, r6, r7, lr}
    78e4:	000d      	movs	r5, r1
    78e6:	350b      	adds	r5, #11
    78e8:	b083      	sub	sp, #12
    78ea:	0007      	movs	r7, r0
    78ec:	2d16      	cmp	r5, #22
    78ee:	d800      	bhi.n	78f2 <_malloc_r+0x1a>
    78f0:	e09f      	b.n	7a32 <_malloc_r+0x15a>
    78f2:	2307      	movs	r3, #7
    78f4:	439d      	bics	r5, r3
    78f6:	d500      	bpl.n	78fa <_malloc_r+0x22>
    78f8:	e0c4      	b.n	7a84 <_malloc_r+0x1ac>
    78fa:	42a9      	cmp	r1, r5
    78fc:	d900      	bls.n	7900 <_malloc_r+0x28>
    78fe:	e0c1      	b.n	7a84 <_malloc_r+0x1ac>
    7900:	f000 fb2e 	bl	7f60 <__malloc_lock>
    7904:	23f8      	movs	r3, #248	; 0xf8
    7906:	33ff      	adds	r3, #255	; 0xff
    7908:	429d      	cmp	r5, r3
    790a:	d800      	bhi.n	790e <_malloc_r+0x36>
    790c:	e28f      	b.n	7e2e <_malloc_r+0x556>
    790e:	0a68      	lsrs	r0, r5, #9
    7910:	d100      	bne.n	7914 <_malloc_r+0x3c>
    7912:	e0bb      	b.n	7a8c <_malloc_r+0x1b4>
    7914:	2804      	cmp	r0, #4
    7916:	d900      	bls.n	791a <_malloc_r+0x42>
    7918:	e162      	b.n	7be0 <_malloc_r+0x308>
    791a:	2338      	movs	r3, #56	; 0x38
    791c:	4698      	mov	r8, r3
    791e:	09a8      	lsrs	r0, r5, #6
    7920:	4480      	add	r8, r0
    7922:	3039      	adds	r0, #57	; 0x39
    7924:	00c1      	lsls	r1, r0, #3
    7926:	4ed2      	ldr	r6, [pc, #840]	; (7c70 <_malloc_r+0x398>)
    7928:	1871      	adds	r1, r6, r1
    792a:	3908      	subs	r1, #8
    792c:	68cc      	ldr	r4, [r1, #12]
    792e:	42a1      	cmp	r1, r4
    7930:	d019      	beq.n	7966 <_malloc_r+0x8e>
    7932:	2303      	movs	r3, #3
    7934:	6862      	ldr	r2, [r4, #4]
    7936:	439a      	bics	r2, r3
    7938:	0013      	movs	r3, r2
    793a:	1b52      	subs	r2, r2, r5
    793c:	2a0f      	cmp	r2, #15
    793e:	dd00      	ble.n	7942 <_malloc_r+0x6a>
    7940:	e0aa      	b.n	7a98 <_malloc_r+0x1c0>
    7942:	2a00      	cmp	r2, #0
    7944:	db00      	blt.n	7948 <_malloc_r+0x70>
    7946:	e088      	b.n	7a5a <_malloc_r+0x182>
    7948:	2303      	movs	r3, #3
    794a:	469c      	mov	ip, r3
    794c:	e008      	b.n	7960 <_malloc_r+0x88>
    794e:	4662      	mov	r2, ip
    7950:	6863      	ldr	r3, [r4, #4]
    7952:	4393      	bics	r3, r2
    7954:	1b5a      	subs	r2, r3, r5
    7956:	2a0f      	cmp	r2, #15
    7958:	dd00      	ble.n	795c <_malloc_r+0x84>
    795a:	e09d      	b.n	7a98 <_malloc_r+0x1c0>
    795c:	2a00      	cmp	r2, #0
    795e:	da7c      	bge.n	7a5a <_malloc_r+0x182>
    7960:	68e4      	ldr	r4, [r4, #12]
    7962:	42a1      	cmp	r1, r4
    7964:	d1f3      	bne.n	794e <_malloc_r+0x76>
    7966:	0032      	movs	r2, r6
    7968:	6934      	ldr	r4, [r6, #16]
    796a:	3208      	adds	r2, #8
    796c:	4294      	cmp	r4, r2
    796e:	d100      	bne.n	7972 <_malloc_r+0x9a>
    7970:	e190      	b.n	7c94 <_malloc_r+0x3bc>
    7972:	2303      	movs	r3, #3
    7974:	6861      	ldr	r1, [r4, #4]
    7976:	4399      	bics	r1, r3
    7978:	4689      	mov	r9, r1
    797a:	1b49      	subs	r1, r1, r5
    797c:	290f      	cmp	r1, #15
    797e:	dd00      	ble.n	7982 <_malloc_r+0xaa>
    7980:	e162      	b.n	7c48 <_malloc_r+0x370>
    7982:	6172      	str	r2, [r6, #20]
    7984:	6132      	str	r2, [r6, #16]
    7986:	2900      	cmp	r1, #0
    7988:	db00      	blt.n	798c <_malloc_r+0xb4>
    798a:	e087      	b.n	7a9c <_malloc_r+0x1c4>
    798c:	4ab9      	ldr	r2, [pc, #740]	; (7c74 <_malloc_r+0x39c>)
    798e:	464b      	mov	r3, r9
    7990:	4591      	cmp	r9, r2
    7992:	d900      	bls.n	7996 <_malloc_r+0xbe>
    7994:	e130      	b.n	7bf8 <_malloc_r+0x320>
    7996:	08db      	lsrs	r3, r3, #3
    7998:	3aff      	subs	r2, #255	; 0xff
    799a:	1099      	asrs	r1, r3, #2
    799c:	3aff      	subs	r2, #255	; 0xff
    799e:	408a      	lsls	r2, r1
    79a0:	00db      	lsls	r3, r3, #3
    79a2:	6871      	ldr	r1, [r6, #4]
    79a4:	199b      	adds	r3, r3, r6
    79a6:	430a      	orrs	r2, r1
    79a8:	6899      	ldr	r1, [r3, #8]
    79aa:	6072      	str	r2, [r6, #4]
    79ac:	60e3      	str	r3, [r4, #12]
    79ae:	60a1      	str	r1, [r4, #8]
    79b0:	609c      	str	r4, [r3, #8]
    79b2:	0013      	movs	r3, r2
    79b4:	60cc      	str	r4, [r1, #12]
    79b6:	2101      	movs	r1, #1
    79b8:	1082      	asrs	r2, r0, #2
    79ba:	4091      	lsls	r1, r2
    79bc:	4299      	cmp	r1, r3
    79be:	d86f      	bhi.n	7aa0 <_malloc_r+0x1c8>
    79c0:	420b      	tst	r3, r1
    79c2:	d105      	bne.n	79d0 <_malloc_r+0xf8>
    79c4:	2203      	movs	r2, #3
    79c6:	4390      	bics	r0, r2
    79c8:	0049      	lsls	r1, r1, #1
    79ca:	3004      	adds	r0, #4
    79cc:	420b      	tst	r3, r1
    79ce:	d0fb      	beq.n	79c8 <_malloc_r+0xf0>
    79d0:	2303      	movs	r3, #3
    79d2:	4698      	mov	r8, r3
    79d4:	00c3      	lsls	r3, r0, #3
    79d6:	4699      	mov	r9, r3
    79d8:	44b1      	add	r9, r6
    79da:	46cc      	mov	ip, r9
    79dc:	4682      	mov	sl, r0
    79de:	4663      	mov	r3, ip
    79e0:	68dc      	ldr	r4, [r3, #12]
    79e2:	45a4      	cmp	ip, r4
    79e4:	d107      	bne.n	79f6 <_malloc_r+0x11e>
    79e6:	e157      	b.n	7c98 <_malloc_r+0x3c0>
    79e8:	2a00      	cmp	r2, #0
    79ea:	db00      	blt.n	79ee <_malloc_r+0x116>
    79ec:	e166      	b.n	7cbc <_malloc_r+0x3e4>
    79ee:	68e4      	ldr	r4, [r4, #12]
    79f0:	45a4      	cmp	ip, r4
    79f2:	d100      	bne.n	79f6 <_malloc_r+0x11e>
    79f4:	e150      	b.n	7c98 <_malloc_r+0x3c0>
    79f6:	4642      	mov	r2, r8
    79f8:	6863      	ldr	r3, [r4, #4]
    79fa:	4393      	bics	r3, r2
    79fc:	1b5a      	subs	r2, r3, r5
    79fe:	2a0f      	cmp	r2, #15
    7a00:	ddf2      	ble.n	79e8 <_malloc_r+0x110>
    7a02:	2001      	movs	r0, #1
    7a04:	4680      	mov	r8, r0
    7a06:	1961      	adds	r1, r4, r5
    7a08:	4305      	orrs	r5, r0
    7a0a:	6065      	str	r5, [r4, #4]
    7a0c:	68a0      	ldr	r0, [r4, #8]
    7a0e:	68e5      	ldr	r5, [r4, #12]
    7a10:	3608      	adds	r6, #8
    7a12:	60c5      	str	r5, [r0, #12]
    7a14:	60a8      	str	r0, [r5, #8]
    7a16:	4640      	mov	r0, r8
    7a18:	60f1      	str	r1, [r6, #12]
    7a1a:	60b1      	str	r1, [r6, #8]
    7a1c:	4310      	orrs	r0, r2
    7a1e:	6048      	str	r0, [r1, #4]
    7a20:	60ce      	str	r6, [r1, #12]
    7a22:	608e      	str	r6, [r1, #8]
    7a24:	0038      	movs	r0, r7
    7a26:	50e2      	str	r2, [r4, r3]
    7a28:	f000 faa2 	bl	7f70 <__malloc_unlock>
    7a2c:	0020      	movs	r0, r4
    7a2e:	3008      	adds	r0, #8
    7a30:	e021      	b.n	7a76 <_malloc_r+0x19e>
    7a32:	2910      	cmp	r1, #16
    7a34:	d826      	bhi.n	7a84 <_malloc_r+0x1ac>
    7a36:	0038      	movs	r0, r7
    7a38:	f000 fa92 	bl	7f60 <__malloc_lock>
    7a3c:	2510      	movs	r5, #16
    7a3e:	2318      	movs	r3, #24
    7a40:	2002      	movs	r0, #2
    7a42:	4e8b      	ldr	r6, [pc, #556]	; (7c70 <_malloc_r+0x398>)
    7a44:	18f3      	adds	r3, r6, r3
    7a46:	001a      	movs	r2, r3
    7a48:	685c      	ldr	r4, [r3, #4]
    7a4a:	3a08      	subs	r2, #8
    7a4c:	4294      	cmp	r4, r2
    7a4e:	d100      	bne.n	7a52 <_malloc_r+0x17a>
    7a50:	e12e      	b.n	7cb0 <_malloc_r+0x3d8>
    7a52:	2303      	movs	r3, #3
    7a54:	6862      	ldr	r2, [r4, #4]
    7a56:	439a      	bics	r2, r3
    7a58:	0013      	movs	r3, r2
    7a5a:	68e2      	ldr	r2, [r4, #12]
    7a5c:	68a1      	ldr	r1, [r4, #8]
    7a5e:	60ca      	str	r2, [r1, #12]
    7a60:	6091      	str	r1, [r2, #8]
    7a62:	2201      	movs	r2, #1
    7a64:	18e3      	adds	r3, r4, r3
    7a66:	6859      	ldr	r1, [r3, #4]
    7a68:	0038      	movs	r0, r7
    7a6a:	430a      	orrs	r2, r1
    7a6c:	605a      	str	r2, [r3, #4]
    7a6e:	f000 fa7f 	bl	7f70 <__malloc_unlock>
    7a72:	0020      	movs	r0, r4
    7a74:	3008      	adds	r0, #8
    7a76:	b003      	add	sp, #12
    7a78:	bc3c      	pop	{r2, r3, r4, r5}
    7a7a:	4690      	mov	r8, r2
    7a7c:	4699      	mov	r9, r3
    7a7e:	46a2      	mov	sl, r4
    7a80:	46ab      	mov	fp, r5
    7a82:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7a84:	230c      	movs	r3, #12
    7a86:	2000      	movs	r0, #0
    7a88:	603b      	str	r3, [r7, #0]
    7a8a:	e7f4      	b.n	7a76 <_malloc_r+0x19e>
    7a8c:	2180      	movs	r1, #128	; 0x80
    7a8e:	233f      	movs	r3, #63	; 0x3f
    7a90:	2040      	movs	r0, #64	; 0x40
    7a92:	0089      	lsls	r1, r1, #2
    7a94:	4698      	mov	r8, r3
    7a96:	e746      	b.n	7926 <_malloc_r+0x4e>
    7a98:	4640      	mov	r0, r8
    7a9a:	e764      	b.n	7966 <_malloc_r+0x8e>
    7a9c:	464b      	mov	r3, r9
    7a9e:	e7e0      	b.n	7a62 <_malloc_r+0x18a>
    7aa0:	2303      	movs	r3, #3
    7aa2:	68b4      	ldr	r4, [r6, #8]
    7aa4:	6862      	ldr	r2, [r4, #4]
    7aa6:	439a      	bics	r2, r3
    7aa8:	4690      	mov	r8, r2
    7aaa:	42aa      	cmp	r2, r5
    7aac:	d303      	bcc.n	7ab6 <_malloc_r+0x1de>
    7aae:	1b53      	subs	r3, r2, r5
    7ab0:	2b0f      	cmp	r3, #15
    7ab2:	dd00      	ble.n	7ab6 <_malloc_r+0x1de>
    7ab4:	e086      	b.n	7bc4 <_malloc_r+0x2ec>
    7ab6:	0023      	movs	r3, r4
    7ab8:	4443      	add	r3, r8
    7aba:	4a6f      	ldr	r2, [pc, #444]	; (7c78 <_malloc_r+0x3a0>)
    7abc:	9301      	str	r3, [sp, #4]
    7abe:	4b6f      	ldr	r3, [pc, #444]	; (7c7c <_malloc_r+0x3a4>)
    7ac0:	4693      	mov	fp, r2
    7ac2:	681b      	ldr	r3, [r3, #0]
    7ac4:	6812      	ldr	r2, [r2, #0]
    7ac6:	18eb      	adds	r3, r5, r3
    7ac8:	3201      	adds	r2, #1
    7aca:	d100      	bne.n	7ace <_malloc_r+0x1f6>
    7acc:	e168      	b.n	7da0 <_malloc_r+0x4c8>
    7ace:	4a6c      	ldr	r2, [pc, #432]	; (7c80 <_malloc_r+0x3a8>)
    7ad0:	4694      	mov	ip, r2
    7ad2:	4463      	add	r3, ip
    7ad4:	0b1b      	lsrs	r3, r3, #12
    7ad6:	031b      	lsls	r3, r3, #12
    7ad8:	9300      	str	r3, [sp, #0]
    7ada:	9900      	ldr	r1, [sp, #0]
    7adc:	0038      	movs	r0, r7
    7ade:	f000 ff55 	bl	898c <_sbrk_r>
    7ae2:	0003      	movs	r3, r0
    7ae4:	4681      	mov	r9, r0
    7ae6:	3301      	adds	r3, #1
    7ae8:	d061      	beq.n	7bae <_malloc_r+0x2d6>
    7aea:	9b01      	ldr	r3, [sp, #4]
    7aec:	4283      	cmp	r3, r0
    7aee:	d900      	bls.n	7af2 <_malloc_r+0x21a>
    7af0:	e0ff      	b.n	7cf2 <_malloc_r+0x41a>
    7af2:	4b64      	ldr	r3, [pc, #400]	; (7c84 <_malloc_r+0x3ac>)
    7af4:	9a00      	ldr	r2, [sp, #0]
    7af6:	469a      	mov	sl, r3
    7af8:	681b      	ldr	r3, [r3, #0]
    7afa:	469c      	mov	ip, r3
    7afc:	4653      	mov	r3, sl
    7afe:	4462      	add	r2, ip
    7b00:	601a      	str	r2, [r3, #0]
    7b02:	9b01      	ldr	r3, [sp, #4]
    7b04:	0011      	movs	r1, r2
    7b06:	4283      	cmp	r3, r0
    7b08:	d100      	bne.n	7b0c <_malloc_r+0x234>
    7b0a:	e155      	b.n	7db8 <_malloc_r+0x4e0>
    7b0c:	465b      	mov	r3, fp
    7b0e:	681b      	ldr	r3, [r3, #0]
    7b10:	3301      	adds	r3, #1
    7b12:	d100      	bne.n	7b16 <_malloc_r+0x23e>
    7b14:	e16c      	b.n	7df0 <_malloc_r+0x518>
    7b16:	464b      	mov	r3, r9
    7b18:	9a01      	ldr	r2, [sp, #4]
    7b1a:	1a9b      	subs	r3, r3, r2
    7b1c:	1859      	adds	r1, r3, r1
    7b1e:	4653      	mov	r3, sl
    7b20:	6019      	str	r1, [r3, #0]
    7b22:	2307      	movs	r3, #7
    7b24:	464a      	mov	r2, r9
    7b26:	4013      	ands	r3, r2
    7b28:	d100      	bne.n	7b2c <_malloc_r+0x254>
    7b2a:	e124      	b.n	7d76 <_malloc_r+0x49e>
    7b2c:	2108      	movs	r1, #8
    7b2e:	4689      	mov	r9, r1
    7b30:	4955      	ldr	r1, [pc, #340]	; (7c88 <_malloc_r+0x3b0>)
    7b32:	1ad2      	subs	r2, r2, r3
    7b34:	4491      	add	r9, r2
    7b36:	1acb      	subs	r3, r1, r3
    7b38:	9a00      	ldr	r2, [sp, #0]
    7b3a:	0038      	movs	r0, r7
    7b3c:	444a      	add	r2, r9
    7b3e:	0511      	lsls	r1, r2, #20
    7b40:	0d09      	lsrs	r1, r1, #20
    7b42:	1a5b      	subs	r3, r3, r1
    7b44:	0019      	movs	r1, r3
    7b46:	469b      	mov	fp, r3
    7b48:	f000 ff20 	bl	898c <_sbrk_r>
    7b4c:	1c43      	adds	r3, r0, #1
    7b4e:	d100      	bne.n	7b52 <_malloc_r+0x27a>
    7b50:	e142      	b.n	7dd8 <_malloc_r+0x500>
    7b52:	464b      	mov	r3, r9
    7b54:	1ac0      	subs	r0, r0, r3
    7b56:	2301      	movs	r3, #1
    7b58:	4458      	add	r0, fp
    7b5a:	4318      	orrs	r0, r3
    7b5c:	4653      	mov	r3, sl
    7b5e:	681b      	ldr	r3, [r3, #0]
    7b60:	445b      	add	r3, fp
    7b62:	0019      	movs	r1, r3
    7b64:	4653      	mov	r3, sl
    7b66:	6019      	str	r1, [r3, #0]
    7b68:	464b      	mov	r3, r9
    7b6a:	60b3      	str	r3, [r6, #8]
    7b6c:	6058      	str	r0, [r3, #4]
    7b6e:	42b4      	cmp	r4, r6
    7b70:	d013      	beq.n	7b9a <_malloc_r+0x2c2>
    7b72:	4643      	mov	r3, r8
    7b74:	2b0f      	cmp	r3, #15
    7b76:	d800      	bhi.n	7b7a <_malloc_r+0x2a2>
    7b78:	e0e8      	b.n	7d4c <_malloc_r+0x474>
    7b7a:	4643      	mov	r3, r8
    7b7c:	2207      	movs	r2, #7
    7b7e:	6860      	ldr	r0, [r4, #4]
    7b80:	3b0c      	subs	r3, #12
    7b82:	4393      	bics	r3, r2
    7b84:	3a06      	subs	r2, #6
    7b86:	4002      	ands	r2, r0
    7b88:	2005      	movs	r0, #5
    7b8a:	431a      	orrs	r2, r3
    7b8c:	6062      	str	r2, [r4, #4]
    7b8e:	18e2      	adds	r2, r4, r3
    7b90:	6050      	str	r0, [r2, #4]
    7b92:	6090      	str	r0, [r2, #8]
    7b94:	2b0f      	cmp	r3, #15
    7b96:	d900      	bls.n	7b9a <_malloc_r+0x2c2>
    7b98:	e122      	b.n	7de0 <_malloc_r+0x508>
    7b9a:	4b3c      	ldr	r3, [pc, #240]	; (7c8c <_malloc_r+0x3b4>)
    7b9c:	681a      	ldr	r2, [r3, #0]
    7b9e:	4291      	cmp	r1, r2
    7ba0:	d900      	bls.n	7ba4 <_malloc_r+0x2cc>
    7ba2:	6019      	str	r1, [r3, #0]
    7ba4:	4b3a      	ldr	r3, [pc, #232]	; (7c90 <_malloc_r+0x3b8>)
    7ba6:	681a      	ldr	r2, [r3, #0]
    7ba8:	4291      	cmp	r1, r2
    7baa:	d900      	bls.n	7bae <_malloc_r+0x2d6>
    7bac:	6019      	str	r1, [r3, #0]
    7bae:	2303      	movs	r3, #3
    7bb0:	68b4      	ldr	r4, [r6, #8]
    7bb2:	6862      	ldr	r2, [r4, #4]
    7bb4:	439a      	bics	r2, r3
    7bb6:	1b53      	subs	r3, r2, r5
    7bb8:	4295      	cmp	r5, r2
    7bba:	d900      	bls.n	7bbe <_malloc_r+0x2e6>
    7bbc:	e0c9      	b.n	7d52 <_malloc_r+0x47a>
    7bbe:	2b0f      	cmp	r3, #15
    7bc0:	dc00      	bgt.n	7bc4 <_malloc_r+0x2ec>
    7bc2:	e0c6      	b.n	7d52 <_malloc_r+0x47a>
    7bc4:	2201      	movs	r2, #1
    7bc6:	0029      	movs	r1, r5
    7bc8:	4313      	orrs	r3, r2
    7bca:	4311      	orrs	r1, r2
    7bcc:	1965      	adds	r5, r4, r5
    7bce:	6061      	str	r1, [r4, #4]
    7bd0:	0038      	movs	r0, r7
    7bd2:	60b5      	str	r5, [r6, #8]
    7bd4:	606b      	str	r3, [r5, #4]
    7bd6:	f000 f9cb 	bl	7f70 <__malloc_unlock>
    7bda:	0020      	movs	r0, r4
    7bdc:	3008      	adds	r0, #8
    7bde:	e74a      	b.n	7a76 <_malloc_r+0x19e>
    7be0:	2814      	cmp	r0, #20
    7be2:	d97a      	bls.n	7cda <_malloc_r+0x402>
    7be4:	2854      	cmp	r0, #84	; 0x54
    7be6:	d900      	bls.n	7bea <_malloc_r+0x312>
    7be8:	e0ba      	b.n	7d60 <_malloc_r+0x488>
    7bea:	236e      	movs	r3, #110	; 0x6e
    7bec:	4698      	mov	r8, r3
    7bee:	0b28      	lsrs	r0, r5, #12
    7bf0:	4480      	add	r8, r0
    7bf2:	306f      	adds	r0, #111	; 0x6f
    7bf4:	00c1      	lsls	r1, r0, #3
    7bf6:	e696      	b.n	7926 <_malloc_r+0x4e>
    7bf8:	0a5a      	lsrs	r2, r3, #9
    7bfa:	2a04      	cmp	r2, #4
    7bfc:	d973      	bls.n	7ce6 <_malloc_r+0x40e>
    7bfe:	2a14      	cmp	r2, #20
    7c00:	d900      	bls.n	7c04 <_malloc_r+0x32c>
    7c02:	e0d0      	b.n	7da6 <_malloc_r+0x4ce>
    7c04:	0011      	movs	r1, r2
    7c06:	325c      	adds	r2, #92	; 0x5c
    7c08:	315b      	adds	r1, #91	; 0x5b
    7c0a:	00d2      	lsls	r2, r2, #3
    7c0c:	2308      	movs	r3, #8
    7c0e:	425b      	negs	r3, r3
    7c10:	469c      	mov	ip, r3
    7c12:	18b2      	adds	r2, r6, r2
    7c14:	4494      	add	ip, r2
    7c16:	4663      	mov	r3, ip
    7c18:	689a      	ldr	r2, [r3, #8]
    7c1a:	2303      	movs	r3, #3
    7c1c:	4698      	mov	r8, r3
    7c1e:	4594      	cmp	ip, r2
    7c20:	d100      	bne.n	7c24 <_malloc_r+0x34c>
    7c22:	e0ab      	b.n	7d7c <_malloc_r+0x4a4>
    7c24:	4643      	mov	r3, r8
    7c26:	6851      	ldr	r1, [r2, #4]
    7c28:	4399      	bics	r1, r3
    7c2a:	4589      	cmp	r9, r1
    7c2c:	d300      	bcc.n	7c30 <_malloc_r+0x358>
    7c2e:	e095      	b.n	7d5c <_malloc_r+0x484>
    7c30:	6892      	ldr	r2, [r2, #8]
    7c32:	4594      	cmp	ip, r2
    7c34:	d1f6      	bne.n	7c24 <_malloc_r+0x34c>
    7c36:	4663      	mov	r3, ip
    7c38:	68da      	ldr	r2, [r3, #12]
    7c3a:	6873      	ldr	r3, [r6, #4]
    7c3c:	4661      	mov	r1, ip
    7c3e:	60e2      	str	r2, [r4, #12]
    7c40:	60a1      	str	r1, [r4, #8]
    7c42:	6094      	str	r4, [r2, #8]
    7c44:	60cc      	str	r4, [r1, #12]
    7c46:	e6b6      	b.n	79b6 <_malloc_r+0xde>
    7c48:	2301      	movs	r3, #1
    7c4a:	1960      	adds	r0, r4, r5
    7c4c:	431d      	orrs	r5, r3
    7c4e:	6065      	str	r5, [r4, #4]
    7c50:	6170      	str	r0, [r6, #20]
    7c52:	6130      	str	r0, [r6, #16]
    7c54:	60c2      	str	r2, [r0, #12]
    7c56:	6082      	str	r2, [r0, #8]
    7c58:	001a      	movs	r2, r3
    7c5a:	464b      	mov	r3, r9
    7c5c:	430a      	orrs	r2, r1
    7c5e:	6042      	str	r2, [r0, #4]
    7c60:	0038      	movs	r0, r7
    7c62:	50e1      	str	r1, [r4, r3]
    7c64:	f000 f984 	bl	7f70 <__malloc_unlock>
    7c68:	0020      	movs	r0, r4
    7c6a:	3008      	adds	r0, #8
    7c6c:	e703      	b.n	7a76 <_malloc_r+0x19e>
    7c6e:	46c0      	nop			; (mov r8, r8)
    7c70:	200004ac 	.word	0x200004ac
    7c74:	000001ff 	.word	0x000001ff
    7c78:	200008b4 	.word	0x200008b4
    7c7c:	20000ab8 	.word	0x20000ab8
    7c80:	0000100f 	.word	0x0000100f
    7c84:	20000a88 	.word	0x20000a88
    7c88:	00001008 	.word	0x00001008
    7c8c:	20000ab0 	.word	0x20000ab0
    7c90:	20000ab4 	.word	0x20000ab4
    7c94:	6873      	ldr	r3, [r6, #4]
    7c96:	e68e      	b.n	79b6 <_malloc_r+0xde>
    7c98:	2308      	movs	r3, #8
    7c9a:	469b      	mov	fp, r3
    7c9c:	3b07      	subs	r3, #7
    7c9e:	44dc      	add	ip, fp
    7ca0:	469b      	mov	fp, r3
    7ca2:	44da      	add	sl, fp
    7ca4:	4643      	mov	r3, r8
    7ca6:	4652      	mov	r2, sl
    7ca8:	4213      	tst	r3, r2
    7caa:	d000      	beq.n	7cae <_malloc_r+0x3d6>
    7cac:	e697      	b.n	79de <_malloc_r+0x106>
    7cae:	e037      	b.n	7d20 <_malloc_r+0x448>
    7cb0:	68dc      	ldr	r4, [r3, #12]
    7cb2:	3002      	adds	r0, #2
    7cb4:	42a3      	cmp	r3, r4
    7cb6:	d100      	bne.n	7cba <_malloc_r+0x3e2>
    7cb8:	e655      	b.n	7966 <_malloc_r+0x8e>
    7cba:	e6ca      	b.n	7a52 <_malloc_r+0x17a>
    7cbc:	2201      	movs	r2, #1
    7cbe:	18e3      	adds	r3, r4, r3
    7cc0:	6859      	ldr	r1, [r3, #4]
    7cc2:	0038      	movs	r0, r7
    7cc4:	430a      	orrs	r2, r1
    7cc6:	605a      	str	r2, [r3, #4]
    7cc8:	68e3      	ldr	r3, [r4, #12]
    7cca:	68a2      	ldr	r2, [r4, #8]
    7ccc:	60d3      	str	r3, [r2, #12]
    7cce:	609a      	str	r2, [r3, #8]
    7cd0:	f000 f94e 	bl	7f70 <__malloc_unlock>
    7cd4:	0020      	movs	r0, r4
    7cd6:	3008      	adds	r0, #8
    7cd8:	e6cd      	b.n	7a76 <_malloc_r+0x19e>
    7cda:	235b      	movs	r3, #91	; 0x5b
    7cdc:	4698      	mov	r8, r3
    7cde:	4480      	add	r8, r0
    7ce0:	305c      	adds	r0, #92	; 0x5c
    7ce2:	00c1      	lsls	r1, r0, #3
    7ce4:	e61f      	b.n	7926 <_malloc_r+0x4e>
    7ce6:	099a      	lsrs	r2, r3, #6
    7ce8:	0011      	movs	r1, r2
    7cea:	3239      	adds	r2, #57	; 0x39
    7cec:	3138      	adds	r1, #56	; 0x38
    7cee:	00d2      	lsls	r2, r2, #3
    7cf0:	e78c      	b.n	7c0c <_malloc_r+0x334>
    7cf2:	42b4      	cmp	r4, r6
    7cf4:	d000      	beq.n	7cf8 <_malloc_r+0x420>
    7cf6:	e75a      	b.n	7bae <_malloc_r+0x2d6>
    7cf8:	4b4f      	ldr	r3, [pc, #316]	; (7e38 <_malloc_r+0x560>)
    7cfa:	9a00      	ldr	r2, [sp, #0]
    7cfc:	469a      	mov	sl, r3
    7cfe:	681b      	ldr	r3, [r3, #0]
    7d00:	469c      	mov	ip, r3
    7d02:	4653      	mov	r3, sl
    7d04:	4462      	add	r2, ip
    7d06:	0011      	movs	r1, r2
    7d08:	601a      	str	r2, [r3, #0]
    7d0a:	e6ff      	b.n	7b0c <_malloc_r+0x234>
    7d0c:	2308      	movs	r3, #8
    7d0e:	425b      	negs	r3, r3
    7d10:	469c      	mov	ip, r3
    7d12:	44e1      	add	r9, ip
    7d14:	464b      	mov	r3, r9
    7d16:	689b      	ldr	r3, [r3, #8]
    7d18:	3801      	subs	r0, #1
    7d1a:	4599      	cmp	r9, r3
    7d1c:	d000      	beq.n	7d20 <_malloc_r+0x448>
    7d1e:	e084      	b.n	7e2a <_malloc_r+0x552>
    7d20:	4643      	mov	r3, r8
    7d22:	4203      	tst	r3, r0
    7d24:	d1f2      	bne.n	7d0c <_malloc_r+0x434>
    7d26:	6873      	ldr	r3, [r6, #4]
    7d28:	438b      	bics	r3, r1
    7d2a:	6073      	str	r3, [r6, #4]
    7d2c:	0049      	lsls	r1, r1, #1
    7d2e:	4299      	cmp	r1, r3
    7d30:	d900      	bls.n	7d34 <_malloc_r+0x45c>
    7d32:	e6b5      	b.n	7aa0 <_malloc_r+0x1c8>
    7d34:	2900      	cmp	r1, #0
    7d36:	d100      	bne.n	7d3a <_malloc_r+0x462>
    7d38:	e6b2      	b.n	7aa0 <_malloc_r+0x1c8>
    7d3a:	4650      	mov	r0, sl
    7d3c:	420b      	tst	r3, r1
    7d3e:	d000      	beq.n	7d42 <_malloc_r+0x46a>
    7d40:	e648      	b.n	79d4 <_malloc_r+0xfc>
    7d42:	0049      	lsls	r1, r1, #1
    7d44:	3004      	adds	r0, #4
    7d46:	420b      	tst	r3, r1
    7d48:	d0fb      	beq.n	7d42 <_malloc_r+0x46a>
    7d4a:	e643      	b.n	79d4 <_malloc_r+0xfc>
    7d4c:	2301      	movs	r3, #1
    7d4e:	464a      	mov	r2, r9
    7d50:	6053      	str	r3, [r2, #4]
    7d52:	0038      	movs	r0, r7
    7d54:	f000 f90c 	bl	7f70 <__malloc_unlock>
    7d58:	2000      	movs	r0, #0
    7d5a:	e68c      	b.n	7a76 <_malloc_r+0x19e>
    7d5c:	4694      	mov	ip, r2
    7d5e:	e76a      	b.n	7c36 <_malloc_r+0x35e>
    7d60:	23aa      	movs	r3, #170	; 0xaa
    7d62:	005b      	lsls	r3, r3, #1
    7d64:	4298      	cmp	r0, r3
    7d66:	d811      	bhi.n	7d8c <_malloc_r+0x4b4>
    7d68:	3bdd      	subs	r3, #221	; 0xdd
    7d6a:	4698      	mov	r8, r3
    7d6c:	0be8      	lsrs	r0, r5, #15
    7d6e:	4480      	add	r8, r0
    7d70:	3078      	adds	r0, #120	; 0x78
    7d72:	00c1      	lsls	r1, r0, #3
    7d74:	e5d7      	b.n	7926 <_malloc_r+0x4e>
    7d76:	2380      	movs	r3, #128	; 0x80
    7d78:	015b      	lsls	r3, r3, #5
    7d7a:	e6dd      	b.n	7b38 <_malloc_r+0x260>
    7d7c:	1089      	asrs	r1, r1, #2
    7d7e:	3b02      	subs	r3, #2
    7d80:	408b      	lsls	r3, r1
    7d82:	6872      	ldr	r2, [r6, #4]
    7d84:	4313      	orrs	r3, r2
    7d86:	6073      	str	r3, [r6, #4]
    7d88:	4662      	mov	r2, ip
    7d8a:	e757      	b.n	7c3c <_malloc_r+0x364>
    7d8c:	4b2b      	ldr	r3, [pc, #172]	; (7e3c <_malloc_r+0x564>)
    7d8e:	4298      	cmp	r0, r3
    7d90:	d81c      	bhi.n	7dcc <_malloc_r+0x4f4>
    7d92:	237c      	movs	r3, #124	; 0x7c
    7d94:	4698      	mov	r8, r3
    7d96:	0ca8      	lsrs	r0, r5, #18
    7d98:	4480      	add	r8, r0
    7d9a:	307d      	adds	r0, #125	; 0x7d
    7d9c:	00c1      	lsls	r1, r0, #3
    7d9e:	e5c2      	b.n	7926 <_malloc_r+0x4e>
    7da0:	3310      	adds	r3, #16
    7da2:	9300      	str	r3, [sp, #0]
    7da4:	e699      	b.n	7ada <_malloc_r+0x202>
    7da6:	2a54      	cmp	r2, #84	; 0x54
    7da8:	d826      	bhi.n	7df8 <_malloc_r+0x520>
    7daa:	464b      	mov	r3, r9
    7dac:	0b1a      	lsrs	r2, r3, #12
    7dae:	0011      	movs	r1, r2
    7db0:	326f      	adds	r2, #111	; 0x6f
    7db2:	316e      	adds	r1, #110	; 0x6e
    7db4:	00d2      	lsls	r2, r2, #3
    7db6:	e729      	b.n	7c0c <_malloc_r+0x334>
    7db8:	051b      	lsls	r3, r3, #20
    7dba:	d000      	beq.n	7dbe <_malloc_r+0x4e6>
    7dbc:	e6a6      	b.n	7b0c <_malloc_r+0x234>
    7dbe:	2001      	movs	r0, #1
    7dc0:	9b00      	ldr	r3, [sp, #0]
    7dc2:	68b2      	ldr	r2, [r6, #8]
    7dc4:	4443      	add	r3, r8
    7dc6:	4303      	orrs	r3, r0
    7dc8:	6053      	str	r3, [r2, #4]
    7dca:	e6e6      	b.n	7b9a <_malloc_r+0x2c2>
    7dcc:	21fe      	movs	r1, #254	; 0xfe
    7dce:	237e      	movs	r3, #126	; 0x7e
    7dd0:	207f      	movs	r0, #127	; 0x7f
    7dd2:	0089      	lsls	r1, r1, #2
    7dd4:	4698      	mov	r8, r3
    7dd6:	e5a6      	b.n	7926 <_malloc_r+0x4e>
    7dd8:	2300      	movs	r3, #0
    7dda:	2001      	movs	r0, #1
    7ddc:	469b      	mov	fp, r3
    7dde:	e6bd      	b.n	7b5c <_malloc_r+0x284>
    7de0:	0021      	movs	r1, r4
    7de2:	0038      	movs	r0, r7
    7de4:	3108      	adds	r1, #8
    7de6:	f7ff fa59 	bl	729c <_free_r>
    7dea:	4653      	mov	r3, sl
    7dec:	6819      	ldr	r1, [r3, #0]
    7dee:	e6d4      	b.n	7b9a <_malloc_r+0x2c2>
    7df0:	465b      	mov	r3, fp
    7df2:	464a      	mov	r2, r9
    7df4:	601a      	str	r2, [r3, #0]
    7df6:	e694      	b.n	7b22 <_malloc_r+0x24a>
    7df8:	21aa      	movs	r1, #170	; 0xaa
    7dfa:	0049      	lsls	r1, r1, #1
    7dfc:	428a      	cmp	r2, r1
    7dfe:	d806      	bhi.n	7e0e <_malloc_r+0x536>
    7e00:	464b      	mov	r3, r9
    7e02:	0bda      	lsrs	r2, r3, #15
    7e04:	0011      	movs	r1, r2
    7e06:	3278      	adds	r2, #120	; 0x78
    7e08:	3177      	adds	r1, #119	; 0x77
    7e0a:	00d2      	lsls	r2, r2, #3
    7e0c:	e6fe      	b.n	7c0c <_malloc_r+0x334>
    7e0e:	490b      	ldr	r1, [pc, #44]	; (7e3c <_malloc_r+0x564>)
    7e10:	428a      	cmp	r2, r1
    7e12:	d806      	bhi.n	7e22 <_malloc_r+0x54a>
    7e14:	464b      	mov	r3, r9
    7e16:	0c9a      	lsrs	r2, r3, #18
    7e18:	0011      	movs	r1, r2
    7e1a:	327d      	adds	r2, #125	; 0x7d
    7e1c:	317c      	adds	r1, #124	; 0x7c
    7e1e:	00d2      	lsls	r2, r2, #3
    7e20:	e6f4      	b.n	7c0c <_malloc_r+0x334>
    7e22:	22fe      	movs	r2, #254	; 0xfe
    7e24:	217e      	movs	r1, #126	; 0x7e
    7e26:	0092      	lsls	r2, r2, #2
    7e28:	e6f0      	b.n	7c0c <_malloc_r+0x334>
    7e2a:	6873      	ldr	r3, [r6, #4]
    7e2c:	e77e      	b.n	7d2c <_malloc_r+0x454>
    7e2e:	002b      	movs	r3, r5
    7e30:	08e8      	lsrs	r0, r5, #3
    7e32:	3308      	adds	r3, #8
    7e34:	e605      	b.n	7a42 <_malloc_r+0x16a>
    7e36:	46c0      	nop			; (mov r8, r8)
    7e38:	20000a88 	.word	0x20000a88
    7e3c:	00000554 	.word	0x00000554

00007e40 <memchr>:
    7e40:	b570      	push	{r4, r5, r6, lr}
    7e42:	b2cd      	uxtb	r5, r1
    7e44:	0783      	lsls	r3, r0, #30
    7e46:	d034      	beq.n	7eb2 <memchr+0x72>
    7e48:	1e54      	subs	r4, r2, #1
    7e4a:	2a00      	cmp	r2, #0
    7e4c:	d01b      	beq.n	7e86 <memchr+0x46>
    7e4e:	7803      	ldrb	r3, [r0, #0]
    7e50:	42ab      	cmp	r3, r5
    7e52:	d019      	beq.n	7e88 <memchr+0x48>
    7e54:	2203      	movs	r2, #3
    7e56:	e004      	b.n	7e62 <memchr+0x22>
    7e58:	3c01      	subs	r4, #1
    7e5a:	d314      	bcc.n	7e86 <memchr+0x46>
    7e5c:	7803      	ldrb	r3, [r0, #0]
    7e5e:	42ab      	cmp	r3, r5
    7e60:	d012      	beq.n	7e88 <memchr+0x48>
    7e62:	3001      	adds	r0, #1
    7e64:	4210      	tst	r0, r2
    7e66:	d1f7      	bne.n	7e58 <memchr+0x18>
    7e68:	2c03      	cmp	r4, #3
    7e6a:	d80e      	bhi.n	7e8a <memchr+0x4a>
    7e6c:	2c00      	cmp	r4, #0
    7e6e:	d00a      	beq.n	7e86 <memchr+0x46>
    7e70:	7803      	ldrb	r3, [r0, #0]
    7e72:	42ab      	cmp	r3, r5
    7e74:	d008      	beq.n	7e88 <memchr+0x48>
    7e76:	1904      	adds	r4, r0, r4
    7e78:	e002      	b.n	7e80 <memchr+0x40>
    7e7a:	7803      	ldrb	r3, [r0, #0]
    7e7c:	42ab      	cmp	r3, r5
    7e7e:	d003      	beq.n	7e88 <memchr+0x48>
    7e80:	3001      	adds	r0, #1
    7e82:	4284      	cmp	r4, r0
    7e84:	d1f9      	bne.n	7e7a <memchr+0x3a>
    7e86:	2000      	movs	r0, #0
    7e88:	bd70      	pop	{r4, r5, r6, pc}
    7e8a:	22ff      	movs	r2, #255	; 0xff
    7e8c:	060b      	lsls	r3, r1, #24
    7e8e:	0c1b      	lsrs	r3, r3, #16
    7e90:	4011      	ands	r1, r2
    7e92:	4319      	orrs	r1, r3
    7e94:	040b      	lsls	r3, r1, #16
    7e96:	4e08      	ldr	r6, [pc, #32]	; (7eb8 <memchr+0x78>)
    7e98:	4319      	orrs	r1, r3
    7e9a:	6803      	ldr	r3, [r0, #0]
    7e9c:	4a07      	ldr	r2, [pc, #28]	; (7ebc <memchr+0x7c>)
    7e9e:	404b      	eors	r3, r1
    7ea0:	189a      	adds	r2, r3, r2
    7ea2:	439a      	bics	r2, r3
    7ea4:	4232      	tst	r2, r6
    7ea6:	d1e3      	bne.n	7e70 <memchr+0x30>
    7ea8:	3c04      	subs	r4, #4
    7eaa:	3004      	adds	r0, #4
    7eac:	2c03      	cmp	r4, #3
    7eae:	d8f4      	bhi.n	7e9a <memchr+0x5a>
    7eb0:	e7dc      	b.n	7e6c <memchr+0x2c>
    7eb2:	0014      	movs	r4, r2
    7eb4:	e7d8      	b.n	7e68 <memchr+0x28>
    7eb6:	46c0      	nop			; (mov r8, r8)
    7eb8:	80808080 	.word	0x80808080
    7ebc:	fefefeff 	.word	0xfefefeff

00007ec0 <memmove>:
    7ec0:	b5f0      	push	{r4, r5, r6, r7, lr}
    7ec2:	4288      	cmp	r0, r1
    7ec4:	d90a      	bls.n	7edc <memmove+0x1c>
    7ec6:	188b      	adds	r3, r1, r2
    7ec8:	4298      	cmp	r0, r3
    7eca:	d207      	bcs.n	7edc <memmove+0x1c>
    7ecc:	1e53      	subs	r3, r2, #1
    7ece:	2a00      	cmp	r2, #0
    7ed0:	d003      	beq.n	7eda <memmove+0x1a>
    7ed2:	5cca      	ldrb	r2, [r1, r3]
    7ed4:	54c2      	strb	r2, [r0, r3]
    7ed6:	3b01      	subs	r3, #1
    7ed8:	d2fb      	bcs.n	7ed2 <memmove+0x12>
    7eda:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7edc:	0005      	movs	r5, r0
    7ede:	2a0f      	cmp	r2, #15
    7ee0:	d808      	bhi.n	7ef4 <memmove+0x34>
    7ee2:	2a00      	cmp	r2, #0
    7ee4:	d0f9      	beq.n	7eda <memmove+0x1a>
    7ee6:	2300      	movs	r3, #0
    7ee8:	5ccc      	ldrb	r4, [r1, r3]
    7eea:	54ec      	strb	r4, [r5, r3]
    7eec:	3301      	adds	r3, #1
    7eee:	4293      	cmp	r3, r2
    7ef0:	d1fa      	bne.n	7ee8 <memmove+0x28>
    7ef2:	e7f2      	b.n	7eda <memmove+0x1a>
    7ef4:	000b      	movs	r3, r1
    7ef6:	4303      	orrs	r3, r0
    7ef8:	079b      	lsls	r3, r3, #30
    7efa:	d12d      	bne.n	7f58 <memmove+0x98>
    7efc:	0015      	movs	r5, r2
    7efe:	000c      	movs	r4, r1
    7f00:	0003      	movs	r3, r0
    7f02:	3d10      	subs	r5, #16
    7f04:	092f      	lsrs	r7, r5, #4
    7f06:	3701      	adds	r7, #1
    7f08:	013f      	lsls	r7, r7, #4
    7f0a:	19c7      	adds	r7, r0, r7
    7f0c:	6826      	ldr	r6, [r4, #0]
    7f0e:	601e      	str	r6, [r3, #0]
    7f10:	6866      	ldr	r6, [r4, #4]
    7f12:	605e      	str	r6, [r3, #4]
    7f14:	68a6      	ldr	r6, [r4, #8]
    7f16:	609e      	str	r6, [r3, #8]
    7f18:	68e6      	ldr	r6, [r4, #12]
    7f1a:	3410      	adds	r4, #16
    7f1c:	60de      	str	r6, [r3, #12]
    7f1e:	3310      	adds	r3, #16
    7f20:	429f      	cmp	r7, r3
    7f22:	d1f3      	bne.n	7f0c <memmove+0x4c>
    7f24:	240f      	movs	r4, #15
    7f26:	43a5      	bics	r5, r4
    7f28:	3510      	adds	r5, #16
    7f2a:	1949      	adds	r1, r1, r5
    7f2c:	4014      	ands	r4, r2
    7f2e:	1945      	adds	r5, r0, r5
    7f30:	2c03      	cmp	r4, #3
    7f32:	d913      	bls.n	7f5c <memmove+0x9c>
    7f34:	2300      	movs	r3, #0
    7f36:	1f27      	subs	r7, r4, #4
    7f38:	08be      	lsrs	r6, r7, #2
    7f3a:	3601      	adds	r6, #1
    7f3c:	00b6      	lsls	r6, r6, #2
    7f3e:	58cc      	ldr	r4, [r1, r3]
    7f40:	50ec      	str	r4, [r5, r3]
    7f42:	3304      	adds	r3, #4
    7f44:	42b3      	cmp	r3, r6
    7f46:	d1fa      	bne.n	7f3e <memmove+0x7e>
    7f48:	2603      	movs	r6, #3
    7f4a:	43b7      	bics	r7, r6
    7f4c:	1d3c      	adds	r4, r7, #4
    7f4e:	1909      	adds	r1, r1, r4
    7f50:	192d      	adds	r5, r5, r4
    7f52:	4032      	ands	r2, r6
    7f54:	d1c7      	bne.n	7ee6 <memmove+0x26>
    7f56:	e7c0      	b.n	7eda <memmove+0x1a>
    7f58:	0005      	movs	r5, r0
    7f5a:	e7c4      	b.n	7ee6 <memmove+0x26>
    7f5c:	0022      	movs	r2, r4
    7f5e:	e7c0      	b.n	7ee2 <memmove+0x22>

00007f60 <__malloc_lock>:
    7f60:	b510      	push	{r4, lr}
    7f62:	4802      	ldr	r0, [pc, #8]	; (7f6c <__malloc_lock+0xc>)
    7f64:	f7ff fc32 	bl	77cc <__retarget_lock_acquire_recursive>
    7f68:	bd10      	pop	{r4, pc}
    7f6a:	46c0      	nop			; (mov r8, r8)
    7f6c:	20000b94 	.word	0x20000b94

00007f70 <__malloc_unlock>:
    7f70:	b510      	push	{r4, lr}
    7f72:	4802      	ldr	r0, [pc, #8]	; (7f7c <__malloc_unlock+0xc>)
    7f74:	f7ff fc2c 	bl	77d0 <__retarget_lock_release_recursive>
    7f78:	bd10      	pop	{r4, pc}
    7f7a:	46c0      	nop			; (mov r8, r8)
    7f7c:	20000b94 	.word	0x20000b94

00007f80 <_Balloc>:
    7f80:	b570      	push	{r4, r5, r6, lr}
    7f82:	0004      	movs	r4, r0
    7f84:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    7f86:	000d      	movs	r5, r1
    7f88:	2800      	cmp	r0, #0
    7f8a:	d00a      	beq.n	7fa2 <_Balloc+0x22>
    7f8c:	00ab      	lsls	r3, r5, #2
    7f8e:	18c3      	adds	r3, r0, r3
    7f90:	6818      	ldr	r0, [r3, #0]
    7f92:	2800      	cmp	r0, #0
    7f94:	d00f      	beq.n	7fb6 <_Balloc+0x36>
    7f96:	6802      	ldr	r2, [r0, #0]
    7f98:	601a      	str	r2, [r3, #0]
    7f9a:	2300      	movs	r3, #0
    7f9c:	6103      	str	r3, [r0, #16]
    7f9e:	60c3      	str	r3, [r0, #12]
    7fa0:	bd70      	pop	{r4, r5, r6, pc}
    7fa2:	2221      	movs	r2, #33	; 0x21
    7fa4:	2104      	movs	r1, #4
    7fa6:	0020      	movs	r0, r4
    7fa8:	f000 fe2a 	bl	8c00 <_calloc_r>
    7fac:	64e0      	str	r0, [r4, #76]	; 0x4c
    7fae:	2800      	cmp	r0, #0
    7fb0:	d1ec      	bne.n	7f8c <_Balloc+0xc>
    7fb2:	2000      	movs	r0, #0
    7fb4:	e7f4      	b.n	7fa0 <_Balloc+0x20>
    7fb6:	2601      	movs	r6, #1
    7fb8:	40ae      	lsls	r6, r5
    7fba:	1d72      	adds	r2, r6, #5
    7fbc:	0092      	lsls	r2, r2, #2
    7fbe:	2101      	movs	r1, #1
    7fc0:	0020      	movs	r0, r4
    7fc2:	f000 fe1d 	bl	8c00 <_calloc_r>
    7fc6:	2800      	cmp	r0, #0
    7fc8:	d0f3      	beq.n	7fb2 <_Balloc+0x32>
    7fca:	6045      	str	r5, [r0, #4]
    7fcc:	6086      	str	r6, [r0, #8]
    7fce:	e7e4      	b.n	7f9a <_Balloc+0x1a>

00007fd0 <_Bfree>:
    7fd0:	2900      	cmp	r1, #0
    7fd2:	d006      	beq.n	7fe2 <_Bfree+0x12>
    7fd4:	684b      	ldr	r3, [r1, #4]
    7fd6:	009a      	lsls	r2, r3, #2
    7fd8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    7fda:	189b      	adds	r3, r3, r2
    7fdc:	681a      	ldr	r2, [r3, #0]
    7fde:	600a      	str	r2, [r1, #0]
    7fe0:	6019      	str	r1, [r3, #0]
    7fe2:	4770      	bx	lr

00007fe4 <__multadd>:
    7fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7fe6:	46ce      	mov	lr, r9
    7fe8:	4647      	mov	r7, r8
    7fea:	4681      	mov	r9, r0
    7fec:	0008      	movs	r0, r1
    7fee:	b580      	push	{r7, lr}
    7ff0:	000d      	movs	r5, r1
    7ff2:	690c      	ldr	r4, [r1, #16]
    7ff4:	001f      	movs	r7, r3
    7ff6:	2100      	movs	r1, #0
    7ff8:	3014      	adds	r0, #20
    7ffa:	6803      	ldr	r3, [r0, #0]
    7ffc:	3101      	adds	r1, #1
    7ffe:	041e      	lsls	r6, r3, #16
    8000:	0c36      	lsrs	r6, r6, #16
    8002:	4356      	muls	r6, r2
    8004:	0c1b      	lsrs	r3, r3, #16
    8006:	4353      	muls	r3, r2
    8008:	19f6      	adds	r6, r6, r7
    800a:	0c37      	lsrs	r7, r6, #16
    800c:	19db      	adds	r3, r3, r7
    800e:	0436      	lsls	r6, r6, #16
    8010:	0c1f      	lsrs	r7, r3, #16
    8012:	0c36      	lsrs	r6, r6, #16
    8014:	041b      	lsls	r3, r3, #16
    8016:	199b      	adds	r3, r3, r6
    8018:	c008      	stmia	r0!, {r3}
    801a:	428c      	cmp	r4, r1
    801c:	dced      	bgt.n	7ffa <__multadd+0x16>
    801e:	2f00      	cmp	r7, #0
    8020:	d008      	beq.n	8034 <__multadd+0x50>
    8022:	68ab      	ldr	r3, [r5, #8]
    8024:	429c      	cmp	r4, r3
    8026:	da0a      	bge.n	803e <__multadd+0x5a>
    8028:	1d23      	adds	r3, r4, #4
    802a:	009b      	lsls	r3, r3, #2
    802c:	18eb      	adds	r3, r5, r3
    802e:	3401      	adds	r4, #1
    8030:	605f      	str	r7, [r3, #4]
    8032:	612c      	str	r4, [r5, #16]
    8034:	0028      	movs	r0, r5
    8036:	bc0c      	pop	{r2, r3}
    8038:	4690      	mov	r8, r2
    803a:	4699      	mov	r9, r3
    803c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    803e:	686b      	ldr	r3, [r5, #4]
    8040:	4648      	mov	r0, r9
    8042:	1c59      	adds	r1, r3, #1
    8044:	f7ff ff9c 	bl	7f80 <_Balloc>
    8048:	0029      	movs	r1, r5
    804a:	692b      	ldr	r3, [r5, #16]
    804c:	4680      	mov	r8, r0
    804e:	1c9a      	adds	r2, r3, #2
    8050:	0092      	lsls	r2, r2, #2
    8052:	310c      	adds	r1, #12
    8054:	300c      	adds	r0, #12
    8056:	f7fc f92f 	bl	42b8 <memcpy>
    805a:	686b      	ldr	r3, [r5, #4]
    805c:	009a      	lsls	r2, r3, #2
    805e:	464b      	mov	r3, r9
    8060:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    8062:	189b      	adds	r3, r3, r2
    8064:	681a      	ldr	r2, [r3, #0]
    8066:	602a      	str	r2, [r5, #0]
    8068:	601d      	str	r5, [r3, #0]
    806a:	4645      	mov	r5, r8
    806c:	e7dc      	b.n	8028 <__multadd+0x44>
    806e:	46c0      	nop			; (mov r8, r8)

00008070 <__hi0bits>:
    8070:	0003      	movs	r3, r0
    8072:	0c02      	lsrs	r2, r0, #16
    8074:	2000      	movs	r0, #0
    8076:	2a00      	cmp	r2, #0
    8078:	d101      	bne.n	807e <__hi0bits+0xe>
    807a:	041b      	lsls	r3, r3, #16
    807c:	3010      	adds	r0, #16
    807e:	0e1a      	lsrs	r2, r3, #24
    8080:	d101      	bne.n	8086 <__hi0bits+0x16>
    8082:	3008      	adds	r0, #8
    8084:	021b      	lsls	r3, r3, #8
    8086:	0f1a      	lsrs	r2, r3, #28
    8088:	d101      	bne.n	808e <__hi0bits+0x1e>
    808a:	3004      	adds	r0, #4
    808c:	011b      	lsls	r3, r3, #4
    808e:	0f9a      	lsrs	r2, r3, #30
    8090:	d101      	bne.n	8096 <__hi0bits+0x26>
    8092:	3002      	adds	r0, #2
    8094:	009b      	lsls	r3, r3, #2
    8096:	2b00      	cmp	r3, #0
    8098:	db03      	blt.n	80a2 <__hi0bits+0x32>
    809a:	3001      	adds	r0, #1
    809c:	005b      	lsls	r3, r3, #1
    809e:	d400      	bmi.n	80a2 <__hi0bits+0x32>
    80a0:	2020      	movs	r0, #32
    80a2:	4770      	bx	lr

000080a4 <__lo0bits>:
    80a4:	6803      	ldr	r3, [r0, #0]
    80a6:	075a      	lsls	r2, r3, #29
    80a8:	d009      	beq.n	80be <__lo0bits+0x1a>
    80aa:	2200      	movs	r2, #0
    80ac:	07d9      	lsls	r1, r3, #31
    80ae:	d404      	bmi.n	80ba <__lo0bits+0x16>
    80b0:	079a      	lsls	r2, r3, #30
    80b2:	d420      	bmi.n	80f6 <__lo0bits+0x52>
    80b4:	2202      	movs	r2, #2
    80b6:	089b      	lsrs	r3, r3, #2
    80b8:	6003      	str	r3, [r0, #0]
    80ba:	0010      	movs	r0, r2
    80bc:	4770      	bx	lr
    80be:	0419      	lsls	r1, r3, #16
    80c0:	2200      	movs	r2, #0
    80c2:	2900      	cmp	r1, #0
    80c4:	d101      	bne.n	80ca <__lo0bits+0x26>
    80c6:	0c1b      	lsrs	r3, r3, #16
    80c8:	3210      	adds	r2, #16
    80ca:	21ff      	movs	r1, #255	; 0xff
    80cc:	4219      	tst	r1, r3
    80ce:	d101      	bne.n	80d4 <__lo0bits+0x30>
    80d0:	3208      	adds	r2, #8
    80d2:	0a1b      	lsrs	r3, r3, #8
    80d4:	0719      	lsls	r1, r3, #28
    80d6:	d101      	bne.n	80dc <__lo0bits+0x38>
    80d8:	3204      	adds	r2, #4
    80da:	091b      	lsrs	r3, r3, #4
    80dc:	0799      	lsls	r1, r3, #30
    80de:	d101      	bne.n	80e4 <__lo0bits+0x40>
    80e0:	3202      	adds	r2, #2
    80e2:	089b      	lsrs	r3, r3, #2
    80e4:	07d9      	lsls	r1, r3, #31
    80e6:	d404      	bmi.n	80f2 <__lo0bits+0x4e>
    80e8:	085b      	lsrs	r3, r3, #1
    80ea:	d101      	bne.n	80f0 <__lo0bits+0x4c>
    80ec:	2220      	movs	r2, #32
    80ee:	e7e4      	b.n	80ba <__lo0bits+0x16>
    80f0:	3201      	adds	r2, #1
    80f2:	6003      	str	r3, [r0, #0]
    80f4:	e7e1      	b.n	80ba <__lo0bits+0x16>
    80f6:	085b      	lsrs	r3, r3, #1
    80f8:	6003      	str	r3, [r0, #0]
    80fa:	2201      	movs	r2, #1
    80fc:	e7dd      	b.n	80ba <__lo0bits+0x16>
    80fe:	46c0      	nop			; (mov r8, r8)

00008100 <__i2b>:
    8100:	b510      	push	{r4, lr}
    8102:	000c      	movs	r4, r1
    8104:	2101      	movs	r1, #1
    8106:	f7ff ff3b 	bl	7f80 <_Balloc>
    810a:	2301      	movs	r3, #1
    810c:	6144      	str	r4, [r0, #20]
    810e:	6103      	str	r3, [r0, #16]
    8110:	bd10      	pop	{r4, pc}
    8112:	46c0      	nop			; (mov r8, r8)

00008114 <__multiply>:
    8114:	b5f0      	push	{r4, r5, r6, r7, lr}
    8116:	4657      	mov	r7, sl
    8118:	464e      	mov	r6, r9
    811a:	4645      	mov	r5, r8
    811c:	46de      	mov	lr, fp
    811e:	b5e0      	push	{r5, r6, r7, lr}
    8120:	6914      	ldr	r4, [r2, #16]
    8122:	690e      	ldr	r6, [r1, #16]
    8124:	b085      	sub	sp, #20
    8126:	000f      	movs	r7, r1
    8128:	0015      	movs	r5, r2
    812a:	42a6      	cmp	r6, r4
    812c:	da04      	bge.n	8138 <__multiply+0x24>
    812e:	0033      	movs	r3, r6
    8130:	0017      	movs	r7, r2
    8132:	0026      	movs	r6, r4
    8134:	000d      	movs	r5, r1
    8136:	001c      	movs	r4, r3
    8138:	1933      	adds	r3, r6, r4
    813a:	4698      	mov	r8, r3
    813c:	68bb      	ldr	r3, [r7, #8]
    813e:	6879      	ldr	r1, [r7, #4]
    8140:	4598      	cmp	r8, r3
    8142:	dd00      	ble.n	8146 <__multiply+0x32>
    8144:	3101      	adds	r1, #1
    8146:	f7ff ff1b 	bl	7f80 <_Balloc>
    814a:	2214      	movs	r2, #20
    814c:	0003      	movs	r3, r0
    814e:	4694      	mov	ip, r2
    8150:	4463      	add	r3, ip
    8152:	469b      	mov	fp, r3
    8154:	4643      	mov	r3, r8
    8156:	009b      	lsls	r3, r3, #2
    8158:	445b      	add	r3, fp
    815a:	0019      	movs	r1, r3
    815c:	9302      	str	r3, [sp, #8]
    815e:	9003      	str	r0, [sp, #12]
    8160:	465b      	mov	r3, fp
    8162:	2200      	movs	r2, #0
    8164:	458b      	cmp	fp, r1
    8166:	d203      	bcs.n	8170 <__multiply+0x5c>
    8168:	9902      	ldr	r1, [sp, #8]
    816a:	c304      	stmia	r3!, {r2}
    816c:	4299      	cmp	r1, r3
    816e:	d8fc      	bhi.n	816a <__multiply+0x56>
    8170:	2314      	movs	r3, #20
    8172:	00a4      	lsls	r4, r4, #2
    8174:	469a      	mov	sl, r3
    8176:	3714      	adds	r7, #20
    8178:	0023      	movs	r3, r4
    817a:	46bc      	mov	ip, r7
    817c:	44aa      	add	sl, r5
    817e:	00b6      	lsls	r6, r6, #2
    8180:	4453      	add	r3, sl
    8182:	9700      	str	r7, [sp, #0]
    8184:	44b4      	add	ip, r6
    8186:	9301      	str	r3, [sp, #4]
    8188:	459a      	cmp	sl, r3
    818a:	d24f      	bcs.n	822c <__multiply+0x118>
    818c:	4653      	mov	r3, sl
    818e:	681b      	ldr	r3, [r3, #0]
    8190:	041e      	lsls	r6, r3, #16
    8192:	0c36      	lsrs	r6, r6, #16
    8194:	d020      	beq.n	81d8 <__multiply+0xc4>
    8196:	465c      	mov	r4, fp
    8198:	2700      	movs	r7, #0
    819a:	9d00      	ldr	r5, [sp, #0]
    819c:	0021      	movs	r1, r4
    819e:	cc08      	ldmia	r4!, {r3}
    81a0:	cd04      	ldmia	r5!, {r2}
    81a2:	4699      	mov	r9, r3
    81a4:	4648      	mov	r0, r9
    81a6:	0413      	lsls	r3, r2, #16
    81a8:	0c1b      	lsrs	r3, r3, #16
    81aa:	4373      	muls	r3, r6
    81ac:	0400      	lsls	r0, r0, #16
    81ae:	0c00      	lsrs	r0, r0, #16
    81b0:	181b      	adds	r3, r3, r0
    81b2:	19d8      	adds	r0, r3, r7
    81b4:	0c13      	lsrs	r3, r2, #16
    81b6:	464a      	mov	r2, r9
    81b8:	4373      	muls	r3, r6
    81ba:	0c12      	lsrs	r2, r2, #16
    81bc:	189b      	adds	r3, r3, r2
    81be:	0c02      	lsrs	r2, r0, #16
    81c0:	189b      	adds	r3, r3, r2
    81c2:	0402      	lsls	r2, r0, #16
    81c4:	0c1f      	lsrs	r7, r3, #16
    81c6:	0c12      	lsrs	r2, r2, #16
    81c8:	041b      	lsls	r3, r3, #16
    81ca:	4313      	orrs	r3, r2
    81cc:	600b      	str	r3, [r1, #0]
    81ce:	45ac      	cmp	ip, r5
    81d0:	d8e4      	bhi.n	819c <__multiply+0x88>
    81d2:	4653      	mov	r3, sl
    81d4:	6027      	str	r7, [r4, #0]
    81d6:	681b      	ldr	r3, [r3, #0]
    81d8:	0c1e      	lsrs	r6, r3, #16
    81da:	d020      	beq.n	821e <__multiply+0x10a>
    81dc:	465b      	mov	r3, fp
    81de:	2100      	movs	r1, #0
    81e0:	681b      	ldr	r3, [r3, #0]
    81e2:	465c      	mov	r4, fp
    81e4:	0018      	movs	r0, r3
    81e6:	000f      	movs	r7, r1
    81e8:	4662      	mov	r2, ip
    81ea:	9d00      	ldr	r5, [sp, #0]
    81ec:	8829      	ldrh	r1, [r5, #0]
    81ee:	0c00      	lsrs	r0, r0, #16
    81f0:	4371      	muls	r1, r6
    81f2:	1809      	adds	r1, r1, r0
    81f4:	19c9      	adds	r1, r1, r7
    81f6:	041b      	lsls	r3, r3, #16
    81f8:	0408      	lsls	r0, r1, #16
    81fa:	0c1b      	lsrs	r3, r3, #16
    81fc:	4303      	orrs	r3, r0
    81fe:	6023      	str	r3, [r4, #0]
    8200:	cd08      	ldmia	r5!, {r3}
    8202:	6860      	ldr	r0, [r4, #4]
    8204:	0c1b      	lsrs	r3, r3, #16
    8206:	4373      	muls	r3, r6
    8208:	0407      	lsls	r7, r0, #16
    820a:	0c3f      	lsrs	r7, r7, #16
    820c:	19db      	adds	r3, r3, r7
    820e:	0c09      	lsrs	r1, r1, #16
    8210:	185b      	adds	r3, r3, r1
    8212:	0c1f      	lsrs	r7, r3, #16
    8214:	3404      	adds	r4, #4
    8216:	42aa      	cmp	r2, r5
    8218:	d8e8      	bhi.n	81ec <__multiply+0xd8>
    821a:	4694      	mov	ip, r2
    821c:	6023      	str	r3, [r4, #0]
    821e:	2304      	movs	r3, #4
    8220:	4699      	mov	r9, r3
    8222:	9b01      	ldr	r3, [sp, #4]
    8224:	44ca      	add	sl, r9
    8226:	44cb      	add	fp, r9
    8228:	4553      	cmp	r3, sl
    822a:	d8af      	bhi.n	818c <__multiply+0x78>
    822c:	4643      	mov	r3, r8
    822e:	2b00      	cmp	r3, #0
    8230:	dd0e      	ble.n	8250 <__multiply+0x13c>
    8232:	9b02      	ldr	r3, [sp, #8]
    8234:	3b04      	subs	r3, #4
    8236:	681a      	ldr	r2, [r3, #0]
    8238:	2a00      	cmp	r2, #0
    823a:	d109      	bne.n	8250 <__multiply+0x13c>
    823c:	4642      	mov	r2, r8
    823e:	e003      	b.n	8248 <__multiply+0x134>
    8240:	3b04      	subs	r3, #4
    8242:	6819      	ldr	r1, [r3, #0]
    8244:	2900      	cmp	r1, #0
    8246:	d102      	bne.n	824e <__multiply+0x13a>
    8248:	3a01      	subs	r2, #1
    824a:	2a00      	cmp	r2, #0
    824c:	d1f8      	bne.n	8240 <__multiply+0x12c>
    824e:	4690      	mov	r8, r2
    8250:	9b03      	ldr	r3, [sp, #12]
    8252:	4642      	mov	r2, r8
    8254:	0018      	movs	r0, r3
    8256:	611a      	str	r2, [r3, #16]
    8258:	b005      	add	sp, #20
    825a:	bc3c      	pop	{r2, r3, r4, r5}
    825c:	4690      	mov	r8, r2
    825e:	4699      	mov	r9, r3
    8260:	46a2      	mov	sl, r4
    8262:	46ab      	mov	fp, r5
    8264:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8266:	46c0      	nop			; (mov r8, r8)

00008268 <__pow5mult>:
    8268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    826a:	4647      	mov	r7, r8
    826c:	46ce      	mov	lr, r9
    826e:	2303      	movs	r3, #3
    8270:	b580      	push	{r7, lr}
    8272:	4680      	mov	r8, r0
    8274:	000f      	movs	r7, r1
    8276:	0014      	movs	r4, r2
    8278:	4013      	ands	r3, r2
    827a:	d13a      	bne.n	82f2 <__pow5mult+0x8a>
    827c:	10a4      	asrs	r4, r4, #2
    827e:	003e      	movs	r6, r7
    8280:	2c00      	cmp	r4, #0
    8282:	d025      	beq.n	82d0 <__pow5mult+0x68>
    8284:	4643      	mov	r3, r8
    8286:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    8288:	2d00      	cmp	r5, #0
    828a:	d03b      	beq.n	8304 <__pow5mult+0x9c>
    828c:	003e      	movs	r6, r7
    828e:	2300      	movs	r3, #0
    8290:	2701      	movs	r7, #1
    8292:	4699      	mov	r9, r3
    8294:	4227      	tst	r7, r4
    8296:	d107      	bne.n	82a8 <__pow5mult+0x40>
    8298:	1064      	asrs	r4, r4, #1
    829a:	d019      	beq.n	82d0 <__pow5mult+0x68>
    829c:	6828      	ldr	r0, [r5, #0]
    829e:	2800      	cmp	r0, #0
    82a0:	d01b      	beq.n	82da <__pow5mult+0x72>
    82a2:	0005      	movs	r5, r0
    82a4:	4227      	tst	r7, r4
    82a6:	d0f7      	beq.n	8298 <__pow5mult+0x30>
    82a8:	002a      	movs	r2, r5
    82aa:	0031      	movs	r1, r6
    82ac:	4640      	mov	r0, r8
    82ae:	f7ff ff31 	bl	8114 <__multiply>
    82b2:	2e00      	cmp	r6, #0
    82b4:	d01b      	beq.n	82ee <__pow5mult+0x86>
    82b6:	4642      	mov	r2, r8
    82b8:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    82ba:	6873      	ldr	r3, [r6, #4]
    82bc:	4694      	mov	ip, r2
    82be:	009b      	lsls	r3, r3, #2
    82c0:	4463      	add	r3, ip
    82c2:	681a      	ldr	r2, [r3, #0]
    82c4:	1064      	asrs	r4, r4, #1
    82c6:	6032      	str	r2, [r6, #0]
    82c8:	601e      	str	r6, [r3, #0]
    82ca:	0006      	movs	r6, r0
    82cc:	2c00      	cmp	r4, #0
    82ce:	d1e5      	bne.n	829c <__pow5mult+0x34>
    82d0:	0030      	movs	r0, r6
    82d2:	bc0c      	pop	{r2, r3}
    82d4:	4690      	mov	r8, r2
    82d6:	4699      	mov	r9, r3
    82d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    82da:	002a      	movs	r2, r5
    82dc:	0029      	movs	r1, r5
    82de:	4640      	mov	r0, r8
    82e0:	f7ff ff18 	bl	8114 <__multiply>
    82e4:	464b      	mov	r3, r9
    82e6:	6028      	str	r0, [r5, #0]
    82e8:	6003      	str	r3, [r0, #0]
    82ea:	0005      	movs	r5, r0
    82ec:	e7da      	b.n	82a4 <__pow5mult+0x3c>
    82ee:	0006      	movs	r6, r0
    82f0:	e7d2      	b.n	8298 <__pow5mult+0x30>
    82f2:	4a0b      	ldr	r2, [pc, #44]	; (8320 <__pow5mult+0xb8>)
    82f4:	3b01      	subs	r3, #1
    82f6:	009b      	lsls	r3, r3, #2
    82f8:	589a      	ldr	r2, [r3, r2]
    82fa:	2300      	movs	r3, #0
    82fc:	f7ff fe72 	bl	7fe4 <__multadd>
    8300:	0007      	movs	r7, r0
    8302:	e7bb      	b.n	827c <__pow5mult+0x14>
    8304:	2101      	movs	r1, #1
    8306:	4640      	mov	r0, r8
    8308:	f7ff fe3a 	bl	7f80 <_Balloc>
    830c:	4b05      	ldr	r3, [pc, #20]	; (8324 <__pow5mult+0xbc>)
    830e:	0005      	movs	r5, r0
    8310:	6143      	str	r3, [r0, #20]
    8312:	2301      	movs	r3, #1
    8314:	6103      	str	r3, [r0, #16]
    8316:	4643      	mov	r3, r8
    8318:	6498      	str	r0, [r3, #72]	; 0x48
    831a:	2300      	movs	r3, #0
    831c:	6003      	str	r3, [r0, #0]
    831e:	e7b5      	b.n	828c <__pow5mult+0x24>
    8320:	00009f48 	.word	0x00009f48
    8324:	00000271 	.word	0x00000271

00008328 <__lshift>:
    8328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    832a:	464e      	mov	r6, r9
    832c:	4645      	mov	r5, r8
    832e:	46de      	mov	lr, fp
    8330:	4657      	mov	r7, sl
    8332:	b5e0      	push	{r5, r6, r7, lr}
    8334:	000e      	movs	r6, r1
    8336:	6933      	ldr	r3, [r6, #16]
    8338:	1154      	asrs	r4, r2, #5
    833a:	4698      	mov	r8, r3
    833c:	44a0      	add	r8, r4
    833e:	4643      	mov	r3, r8
    8340:	1c5d      	adds	r5, r3, #1
    8342:	68b3      	ldr	r3, [r6, #8]
    8344:	4683      	mov	fp, r0
    8346:	4691      	mov	r9, r2
    8348:	6849      	ldr	r1, [r1, #4]
    834a:	429d      	cmp	r5, r3
    834c:	dd03      	ble.n	8356 <__lshift+0x2e>
    834e:	3101      	adds	r1, #1
    8350:	005b      	lsls	r3, r3, #1
    8352:	429d      	cmp	r5, r3
    8354:	dcfb      	bgt.n	834e <__lshift+0x26>
    8356:	4658      	mov	r0, fp
    8358:	f7ff fe12 	bl	7f80 <_Balloc>
    835c:	0003      	movs	r3, r0
    835e:	4684      	mov	ip, r0
    8360:	3314      	adds	r3, #20
    8362:	2c00      	cmp	r4, #0
    8364:	dd06      	ble.n	8374 <__lshift+0x4c>
    8366:	2100      	movs	r1, #0
    8368:	00a4      	lsls	r4, r4, #2
    836a:	001a      	movs	r2, r3
    836c:	191b      	adds	r3, r3, r4
    836e:	c202      	stmia	r2!, {r1}
    8370:	4293      	cmp	r3, r2
    8372:	d1fc      	bne.n	836e <__lshift+0x46>
    8374:	6932      	ldr	r2, [r6, #16]
    8376:	4648      	mov	r0, r9
    8378:	0097      	lsls	r7, r2, #2
    837a:	0031      	movs	r1, r6
    837c:	221f      	movs	r2, #31
    837e:	3114      	adds	r1, #20
    8380:	4010      	ands	r0, r2
    8382:	19cf      	adds	r7, r1, r7
    8384:	4681      	mov	r9, r0
    8386:	2800      	cmp	r0, #0
    8388:	d025      	beq.n	83d6 <__lshift+0xae>
    838a:	2220      	movs	r2, #32
    838c:	1a12      	subs	r2, r2, r0
    838e:	4692      	mov	sl, r2
    8390:	2200      	movs	r2, #0
    8392:	4648      	mov	r0, r9
    8394:	680c      	ldr	r4, [r1, #0]
    8396:	4084      	lsls	r4, r0
    8398:	4650      	mov	r0, sl
    839a:	4314      	orrs	r4, r2
    839c:	601c      	str	r4, [r3, #0]
    839e:	c904      	ldmia	r1!, {r2}
    83a0:	3304      	adds	r3, #4
    83a2:	40c2      	lsrs	r2, r0
    83a4:	428f      	cmp	r7, r1
    83a6:	d8f4      	bhi.n	8392 <__lshift+0x6a>
    83a8:	601a      	str	r2, [r3, #0]
    83aa:	2a00      	cmp	r2, #0
    83ac:	d001      	beq.n	83b2 <__lshift+0x8a>
    83ae:	4645      	mov	r5, r8
    83b0:	3502      	adds	r5, #2
    83b2:	4663      	mov	r3, ip
    83b4:	3d01      	subs	r5, #1
    83b6:	611d      	str	r5, [r3, #16]
    83b8:	6873      	ldr	r3, [r6, #4]
    83ba:	4660      	mov	r0, ip
    83bc:	009a      	lsls	r2, r3, #2
    83be:	465b      	mov	r3, fp
    83c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    83c2:	189b      	adds	r3, r3, r2
    83c4:	681a      	ldr	r2, [r3, #0]
    83c6:	6032      	str	r2, [r6, #0]
    83c8:	601e      	str	r6, [r3, #0]
    83ca:	bc3c      	pop	{r2, r3, r4, r5}
    83cc:	4690      	mov	r8, r2
    83ce:	4699      	mov	r9, r3
    83d0:	46a2      	mov	sl, r4
    83d2:	46ab      	mov	fp, r5
    83d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    83d6:	c904      	ldmia	r1!, {r2}
    83d8:	c304      	stmia	r3!, {r2}
    83da:	428f      	cmp	r7, r1
    83dc:	d9e9      	bls.n	83b2 <__lshift+0x8a>
    83de:	c904      	ldmia	r1!, {r2}
    83e0:	c304      	stmia	r3!, {r2}
    83e2:	428f      	cmp	r7, r1
    83e4:	d8f7      	bhi.n	83d6 <__lshift+0xae>
    83e6:	e7e4      	b.n	83b2 <__lshift+0x8a>

000083e8 <__mcmp>:
    83e8:	690a      	ldr	r2, [r1, #16]
    83ea:	6903      	ldr	r3, [r0, #16]
    83ec:	b530      	push	{r4, r5, lr}
    83ee:	0005      	movs	r5, r0
    83f0:	1a98      	subs	r0, r3, r2
    83f2:	d111      	bne.n	8418 <__mcmp+0x30>
    83f4:	0092      	lsls	r2, r2, #2
    83f6:	3514      	adds	r5, #20
    83f8:	3114      	adds	r1, #20
    83fa:	18ab      	adds	r3, r5, r2
    83fc:	1889      	adds	r1, r1, r2
    83fe:	e001      	b.n	8404 <__mcmp+0x1c>
    8400:	429d      	cmp	r5, r3
    8402:	d209      	bcs.n	8418 <__mcmp+0x30>
    8404:	3b04      	subs	r3, #4
    8406:	3904      	subs	r1, #4
    8408:	681c      	ldr	r4, [r3, #0]
    840a:	680a      	ldr	r2, [r1, #0]
    840c:	4294      	cmp	r4, r2
    840e:	d0f7      	beq.n	8400 <__mcmp+0x18>
    8410:	4294      	cmp	r4, r2
    8412:	4180      	sbcs	r0, r0
    8414:	2201      	movs	r2, #1
    8416:	4310      	orrs	r0, r2
    8418:	bd30      	pop	{r4, r5, pc}
    841a:	46c0      	nop			; (mov r8, r8)

0000841c <__mdiff>:
    841c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    841e:	4645      	mov	r5, r8
    8420:	46de      	mov	lr, fp
    8422:	4657      	mov	r7, sl
    8424:	464e      	mov	r6, r9
    8426:	0014      	movs	r4, r2
    8428:	690b      	ldr	r3, [r1, #16]
    842a:	6912      	ldr	r2, [r2, #16]
    842c:	b5e0      	push	{r5, r6, r7, lr}
    842e:	4688      	mov	r8, r1
    8430:	1a9d      	subs	r5, r3, r2
    8432:	d11a      	bne.n	846a <__mdiff+0x4e>
    8434:	000f      	movs	r7, r1
    8436:	2114      	movs	r1, #20
    8438:	468c      	mov	ip, r1
    843a:	0092      	lsls	r2, r2, #2
    843c:	3714      	adds	r7, #20
    843e:	44a4      	add	ip, r4
    8440:	18bb      	adds	r3, r7, r2
    8442:	4462      	add	r2, ip
    8444:	e002      	b.n	844c <__mdiff+0x30>
    8446:	429f      	cmp	r7, r3
    8448:	d300      	bcc.n	844c <__mdiff+0x30>
    844a:	e070      	b.n	852e <__mdiff+0x112>
    844c:	3b04      	subs	r3, #4
    844e:	3a04      	subs	r2, #4
    8450:	681e      	ldr	r6, [r3, #0]
    8452:	6811      	ldr	r1, [r2, #0]
    8454:	428e      	cmp	r6, r1
    8456:	d0f6      	beq.n	8446 <__mdiff+0x2a>
    8458:	d300      	bcc.n	845c <__mdiff+0x40>
    845a:	e071      	b.n	8540 <__mdiff+0x124>
    845c:	4643      	mov	r3, r8
    845e:	003e      	movs	r6, r7
    8460:	46a0      	mov	r8, r4
    8462:	4667      	mov	r7, ip
    8464:	001c      	movs	r4, r3
    8466:	2501      	movs	r5, #1
    8468:	e006      	b.n	8478 <__mdiff+0x5c>
    846a:	2d00      	cmp	r5, #0
    846c:	db6a      	blt.n	8544 <__mdiff+0x128>
    846e:	4647      	mov	r7, r8
    8470:	0026      	movs	r6, r4
    8472:	2500      	movs	r5, #0
    8474:	3714      	adds	r7, #20
    8476:	3614      	adds	r6, #20
    8478:	4643      	mov	r3, r8
    847a:	6859      	ldr	r1, [r3, #4]
    847c:	f7ff fd80 	bl	7f80 <_Balloc>
    8480:	4643      	mov	r3, r8
    8482:	4681      	mov	r9, r0
    8484:	60c5      	str	r5, [r0, #12]
    8486:	6918      	ldr	r0, [r3, #16]
    8488:	464d      	mov	r5, r9
    848a:	0083      	lsls	r3, r0, #2
    848c:	469c      	mov	ip, r3
    848e:	6923      	ldr	r3, [r4, #16]
    8490:	44bc      	add	ip, r7
    8492:	009b      	lsls	r3, r3, #2
    8494:	4698      	mov	r8, r3
    8496:	2300      	movs	r3, #0
    8498:	44b0      	add	r8, r6
    849a:	3514      	adds	r5, #20
    849c:	469a      	mov	sl, r3
    849e:	e000      	b.n	84a2 <__mdiff+0x86>
    84a0:	0027      	movs	r7, r4
    84a2:	ce04      	ldmia	r6!, {r2}
    84a4:	003c      	movs	r4, r7
    84a6:	4693      	mov	fp, r2
    84a8:	4659      	mov	r1, fp
    84aa:	cc08      	ldmia	r4!, {r3}
    84ac:	0409      	lsls	r1, r1, #16
    84ae:	041a      	lsls	r2, r3, #16
    84b0:	0c12      	lsrs	r2, r2, #16
    84b2:	4452      	add	r2, sl
    84b4:	0c09      	lsrs	r1, r1, #16
    84b6:	1a52      	subs	r2, r2, r1
    84b8:	0c19      	lsrs	r1, r3, #16
    84ba:	465b      	mov	r3, fp
    84bc:	0c1b      	lsrs	r3, r3, #16
    84be:	1acb      	subs	r3, r1, r3
    84c0:	1411      	asrs	r1, r2, #16
    84c2:	185b      	adds	r3, r3, r1
    84c4:	0412      	lsls	r2, r2, #16
    84c6:	1419      	asrs	r1, r3, #16
    84c8:	0c12      	lsrs	r2, r2, #16
    84ca:	041b      	lsls	r3, r3, #16
    84cc:	468a      	mov	sl, r1
    84ce:	4313      	orrs	r3, r2
    84d0:	1d29      	adds	r1, r5, #4
    84d2:	602b      	str	r3, [r5, #0]
    84d4:	000d      	movs	r5, r1
    84d6:	45b0      	cmp	r8, r6
    84d8:	d8e2      	bhi.n	84a0 <__mdiff+0x84>
    84da:	45a4      	cmp	ip, r4
    84dc:	d916      	bls.n	850c <__mdiff+0xf0>
    84de:	cc08      	ldmia	r4!, {r3}
    84e0:	041a      	lsls	r2, r3, #16
    84e2:	0c12      	lsrs	r2, r2, #16
    84e4:	4452      	add	r2, sl
    84e6:	1416      	asrs	r6, r2, #16
    84e8:	0c1b      	lsrs	r3, r3, #16
    84ea:	199b      	adds	r3, r3, r6
    84ec:	0412      	lsls	r2, r2, #16
    84ee:	141e      	asrs	r6, r3, #16
    84f0:	0c12      	lsrs	r2, r2, #16
    84f2:	041b      	lsls	r3, r3, #16
    84f4:	4313      	orrs	r3, r2
    84f6:	46b2      	mov	sl, r6
    84f8:	c508      	stmia	r5!, {r3}
    84fa:	45a4      	cmp	ip, r4
    84fc:	d8ef      	bhi.n	84de <__mdiff+0xc2>
    84fe:	4662      	mov	r2, ip
    8500:	2403      	movs	r4, #3
    8502:	1bd2      	subs	r2, r2, r7
    8504:	3a05      	subs	r2, #5
    8506:	43a2      	bics	r2, r4
    8508:	3204      	adds	r2, #4
    850a:	1889      	adds	r1, r1, r2
    850c:	3904      	subs	r1, #4
    850e:	2b00      	cmp	r3, #0
    8510:	d104      	bne.n	851c <__mdiff+0x100>
    8512:	3904      	subs	r1, #4
    8514:	680b      	ldr	r3, [r1, #0]
    8516:	3801      	subs	r0, #1
    8518:	2b00      	cmp	r3, #0
    851a:	d0fa      	beq.n	8512 <__mdiff+0xf6>
    851c:	464b      	mov	r3, r9
    851e:	6118      	str	r0, [r3, #16]
    8520:	4648      	mov	r0, r9
    8522:	bc3c      	pop	{r2, r3, r4, r5}
    8524:	4690      	mov	r8, r2
    8526:	4699      	mov	r9, r3
    8528:	46a2      	mov	sl, r4
    852a:	46ab      	mov	fp, r5
    852c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    852e:	2100      	movs	r1, #0
    8530:	f7ff fd26 	bl	7f80 <_Balloc>
    8534:	2301      	movs	r3, #1
    8536:	6103      	str	r3, [r0, #16]
    8538:	2300      	movs	r3, #0
    853a:	4681      	mov	r9, r0
    853c:	6143      	str	r3, [r0, #20]
    853e:	e7ef      	b.n	8520 <__mdiff+0x104>
    8540:	4666      	mov	r6, ip
    8542:	e799      	b.n	8478 <__mdiff+0x5c>
    8544:	0027      	movs	r7, r4
    8546:	000e      	movs	r6, r1
    8548:	46a0      	mov	r8, r4
    854a:	3714      	adds	r7, #20
    854c:	3614      	adds	r6, #20
    854e:	000c      	movs	r4, r1
    8550:	2501      	movs	r5, #1
    8552:	e791      	b.n	8478 <__mdiff+0x5c>

00008554 <__d2b>:
    8554:	b5f0      	push	{r4, r5, r6, r7, lr}
    8556:	2101      	movs	r1, #1
    8558:	001c      	movs	r4, r3
    855a:	b083      	sub	sp, #12
    855c:	9e08      	ldr	r6, [sp, #32]
    855e:	0015      	movs	r5, r2
    8560:	f7ff fd0e 	bl	7f80 <_Balloc>
    8564:	0323      	lsls	r3, r4, #12
    8566:	0064      	lsls	r4, r4, #1
    8568:	0007      	movs	r7, r0
    856a:	0b1b      	lsrs	r3, r3, #12
    856c:	0d64      	lsrs	r4, r4, #21
    856e:	d002      	beq.n	8576 <__d2b+0x22>
    8570:	2280      	movs	r2, #128	; 0x80
    8572:	0352      	lsls	r2, r2, #13
    8574:	4313      	orrs	r3, r2
    8576:	9301      	str	r3, [sp, #4]
    8578:	2d00      	cmp	r5, #0
    857a:	d019      	beq.n	85b0 <__d2b+0x5c>
    857c:	4668      	mov	r0, sp
    857e:	9500      	str	r5, [sp, #0]
    8580:	f7ff fd90 	bl	80a4 <__lo0bits>
    8584:	2800      	cmp	r0, #0
    8586:	d130      	bne.n	85ea <__d2b+0x96>
    8588:	9b00      	ldr	r3, [sp, #0]
    858a:	617b      	str	r3, [r7, #20]
    858c:	9b01      	ldr	r3, [sp, #4]
    858e:	61bb      	str	r3, [r7, #24]
    8590:	1e5a      	subs	r2, r3, #1
    8592:	4193      	sbcs	r3, r2
    8594:	1c5d      	adds	r5, r3, #1
    8596:	613d      	str	r5, [r7, #16]
    8598:	2c00      	cmp	r4, #0
    859a:	d014      	beq.n	85c6 <__d2b+0x72>
    859c:	4b19      	ldr	r3, [pc, #100]	; (8604 <__d2b+0xb0>)
    859e:	469c      	mov	ip, r3
    85a0:	2335      	movs	r3, #53	; 0x35
    85a2:	4464      	add	r4, ip
    85a4:	1824      	adds	r4, r4, r0
    85a6:	1a18      	subs	r0, r3, r0
    85a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    85aa:	6034      	str	r4, [r6, #0]
    85ac:	6018      	str	r0, [r3, #0]
    85ae:	e019      	b.n	85e4 <__d2b+0x90>
    85b0:	a801      	add	r0, sp, #4
    85b2:	f7ff fd77 	bl	80a4 <__lo0bits>
    85b6:	9b01      	ldr	r3, [sp, #4]
    85b8:	3020      	adds	r0, #32
    85ba:	617b      	str	r3, [r7, #20]
    85bc:	2301      	movs	r3, #1
    85be:	2501      	movs	r5, #1
    85c0:	613b      	str	r3, [r7, #16]
    85c2:	2c00      	cmp	r4, #0
    85c4:	d1ea      	bne.n	859c <__d2b+0x48>
    85c6:	4b10      	ldr	r3, [pc, #64]	; (8608 <__d2b+0xb4>)
    85c8:	469c      	mov	ip, r3
    85ca:	4b10      	ldr	r3, [pc, #64]	; (860c <__d2b+0xb8>)
    85cc:	4460      	add	r0, ip
    85ce:	18eb      	adds	r3, r5, r3
    85d0:	009b      	lsls	r3, r3, #2
    85d2:	18fb      	adds	r3, r7, r3
    85d4:	6030      	str	r0, [r6, #0]
    85d6:	6958      	ldr	r0, [r3, #20]
    85d8:	f7ff fd4a 	bl	8070 <__hi0bits>
    85dc:	016b      	lsls	r3, r5, #5
    85de:	1a18      	subs	r0, r3, r0
    85e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    85e2:	6018      	str	r0, [r3, #0]
    85e4:	0038      	movs	r0, r7
    85e6:	b003      	add	sp, #12
    85e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    85ea:	9b01      	ldr	r3, [sp, #4]
    85ec:	2220      	movs	r2, #32
    85ee:	0019      	movs	r1, r3
    85f0:	1a12      	subs	r2, r2, r0
    85f2:	4091      	lsls	r1, r2
    85f4:	000a      	movs	r2, r1
    85f6:	40c3      	lsrs	r3, r0
    85f8:	9900      	ldr	r1, [sp, #0]
    85fa:	9301      	str	r3, [sp, #4]
    85fc:	430a      	orrs	r2, r1
    85fe:	617a      	str	r2, [r7, #20]
    8600:	e7c5      	b.n	858e <__d2b+0x3a>
    8602:	46c0      	nop			; (mov r8, r8)
    8604:	fffffbcd 	.word	0xfffffbcd
    8608:	fffffbce 	.word	0xfffffbce
    860c:	3fffffff 	.word	0x3fffffff

00008610 <_realloc_r>:
    8610:	b5f0      	push	{r4, r5, r6, r7, lr}
    8612:	464e      	mov	r6, r9
    8614:	4645      	mov	r5, r8
    8616:	46de      	mov	lr, fp
    8618:	4657      	mov	r7, sl
    861a:	b5e0      	push	{r5, r6, r7, lr}
    861c:	b085      	sub	sp, #20
    861e:	9001      	str	r0, [sp, #4]
    8620:	000e      	movs	r6, r1
    8622:	0015      	movs	r5, r2
    8624:	2900      	cmp	r1, #0
    8626:	d100      	bne.n	862a <_realloc_r+0x1a>
    8628:	e09e      	b.n	8768 <_realloc_r+0x158>
    862a:	0037      	movs	r7, r6
    862c:	9801      	ldr	r0, [sp, #4]
    862e:	3f08      	subs	r7, #8
    8630:	f7ff fc96 	bl	7f60 <__malloc_lock>
    8634:	687a      	ldr	r2, [r7, #4]
    8636:	2303      	movs	r3, #3
    8638:	0014      	movs	r4, r2
    863a:	439c      	bics	r4, r3
    863c:	002b      	movs	r3, r5
    863e:	330b      	adds	r3, #11
    8640:	46b9      	mov	r9, r7
    8642:	2b16      	cmp	r3, #22
    8644:	d847      	bhi.n	86d6 <_realloc_r+0xc6>
    8646:	2110      	movs	r1, #16
    8648:	2310      	movs	r3, #16
    864a:	4688      	mov	r8, r1
    864c:	4545      	cmp	r5, r8
    864e:	d846      	bhi.n	86de <_realloc_r+0xce>
    8650:	429c      	cmp	r4, r3
    8652:	da49      	bge.n	86e8 <_realloc_r+0xd8>
    8654:	49cc      	ldr	r1, [pc, #816]	; (8988 <_realloc_r+0x378>)
    8656:	1938      	adds	r0, r7, r4
    8658:	468b      	mov	fp, r1
    865a:	6889      	ldr	r1, [r1, #8]
    865c:	9002      	str	r0, [sp, #8]
    865e:	4288      	cmp	r0, r1
    8660:	d100      	bne.n	8664 <_realloc_r+0x54>
    8662:	e0c2      	b.n	87ea <_realloc_r+0x1da>
    8664:	2101      	movs	r1, #1
    8666:	468a      	mov	sl, r1
    8668:	6840      	ldr	r0, [r0, #4]
    866a:	0001      	movs	r1, r0
    866c:	9003      	str	r0, [sp, #12]
    866e:	4650      	mov	r0, sl
    8670:	4381      	bics	r1, r0
    8672:	468c      	mov	ip, r1
    8674:	9902      	ldr	r1, [sp, #8]
    8676:	468b      	mov	fp, r1
    8678:	44dc      	add	ip, fp
    867a:	4661      	mov	r1, ip
    867c:	6849      	ldr	r1, [r1, #4]
    867e:	4201      	tst	r1, r0
    8680:	d04d      	beq.n	871e <_realloc_r+0x10e>
    8682:	4210      	tst	r0, r2
    8684:	d100      	bne.n	8688 <_realloc_r+0x78>
    8686:	e0a2      	b.n	87ce <_realloc_r+0x1be>
    8688:	0029      	movs	r1, r5
    868a:	9801      	ldr	r0, [sp, #4]
    868c:	f7ff f924 	bl	78d8 <_malloc_r>
    8690:	1e05      	subs	r5, r0, #0
    8692:	d039      	beq.n	8708 <_realloc_r+0xf8>
    8694:	2301      	movs	r3, #1
    8696:	0002      	movs	r2, r0
    8698:	6879      	ldr	r1, [r7, #4]
    869a:	3a08      	subs	r2, #8
    869c:	4399      	bics	r1, r3
    869e:	187f      	adds	r7, r7, r1
    86a0:	42ba      	cmp	r2, r7
    86a2:	d100      	bne.n	86a6 <_realloc_r+0x96>
    86a4:	e12e      	b.n	8904 <_realloc_r+0x2f4>
    86a6:	1f22      	subs	r2, r4, #4
    86a8:	2a24      	cmp	r2, #36	; 0x24
    86aa:	d900      	bls.n	86ae <_realloc_r+0x9e>
    86ac:	e114      	b.n	88d8 <_realloc_r+0x2c8>
    86ae:	2a13      	cmp	r2, #19
    86b0:	d900      	bls.n	86b4 <_realloc_r+0xa4>
    86b2:	e0e8      	b.n	8886 <_realloc_r+0x276>
    86b4:	0003      	movs	r3, r0
    86b6:	0032      	movs	r2, r6
    86b8:	6811      	ldr	r1, [r2, #0]
    86ba:	6019      	str	r1, [r3, #0]
    86bc:	6851      	ldr	r1, [r2, #4]
    86be:	6059      	str	r1, [r3, #4]
    86c0:	6892      	ldr	r2, [r2, #8]
    86c2:	609a      	str	r2, [r3, #8]
    86c4:	9c01      	ldr	r4, [sp, #4]
    86c6:	0031      	movs	r1, r6
    86c8:	0020      	movs	r0, r4
    86ca:	f7fe fde7 	bl	729c <_free_r>
    86ce:	0020      	movs	r0, r4
    86d0:	f7ff fc4e 	bl	7f70 <__malloc_unlock>
    86d4:	e01b      	b.n	870e <_realloc_r+0xfe>
    86d6:	2107      	movs	r1, #7
    86d8:	438b      	bics	r3, r1
    86da:	4698      	mov	r8, r3
    86dc:	d5b6      	bpl.n	864c <_realloc_r+0x3c>
    86de:	230c      	movs	r3, #12
    86e0:	9a01      	ldr	r2, [sp, #4]
    86e2:	2500      	movs	r5, #0
    86e4:	6013      	str	r3, [r2, #0]
    86e6:	e012      	b.n	870e <_realloc_r+0xfe>
    86e8:	0035      	movs	r5, r6
    86ea:	4643      	mov	r3, r8
    86ec:	1ae3      	subs	r3, r4, r3
    86ee:	2b0f      	cmp	r3, #15
    86f0:	d825      	bhi.n	873e <_realloc_r+0x12e>
    86f2:	464b      	mov	r3, r9
    86f4:	2201      	movs	r2, #1
    86f6:	4649      	mov	r1, r9
    86f8:	685b      	ldr	r3, [r3, #4]
    86fa:	4013      	ands	r3, r2
    86fc:	4323      	orrs	r3, r4
    86fe:	604b      	str	r3, [r1, #4]
    8700:	444c      	add	r4, r9
    8702:	6863      	ldr	r3, [r4, #4]
    8704:	431a      	orrs	r2, r3
    8706:	6062      	str	r2, [r4, #4]
    8708:	9801      	ldr	r0, [sp, #4]
    870a:	f7ff fc31 	bl	7f70 <__malloc_unlock>
    870e:	0028      	movs	r0, r5
    8710:	b005      	add	sp, #20
    8712:	bc3c      	pop	{r2, r3, r4, r5}
    8714:	4690      	mov	r8, r2
    8716:	4699      	mov	r9, r3
    8718:	46a2      	mov	sl, r4
    871a:	46ab      	mov	fp, r5
    871c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    871e:	2103      	movs	r1, #3
    8720:	9803      	ldr	r0, [sp, #12]
    8722:	468c      	mov	ip, r1
    8724:	4388      	bics	r0, r1
    8726:	1821      	adds	r1, r4, r0
    8728:	468b      	mov	fp, r1
    872a:	4299      	cmp	r1, r3
    872c:	db21      	blt.n	8772 <_realloc_r+0x162>
    872e:	9a02      	ldr	r2, [sp, #8]
    8730:	0035      	movs	r5, r6
    8732:	68d3      	ldr	r3, [r2, #12]
    8734:	6892      	ldr	r2, [r2, #8]
    8736:	465c      	mov	r4, fp
    8738:	60d3      	str	r3, [r2, #12]
    873a:	609a      	str	r2, [r3, #8]
    873c:	e7d5      	b.n	86ea <_realloc_r+0xda>
    873e:	464a      	mov	r2, r9
    8740:	2001      	movs	r0, #1
    8742:	4646      	mov	r6, r8
    8744:	6852      	ldr	r2, [r2, #4]
    8746:	4649      	mov	r1, r9
    8748:	4002      	ands	r2, r0
    874a:	4332      	orrs	r2, r6
    874c:	464e      	mov	r6, r9
    874e:	4441      	add	r1, r8
    8750:	4303      	orrs	r3, r0
    8752:	6072      	str	r2, [r6, #4]
    8754:	444c      	add	r4, r9
    8756:	604b      	str	r3, [r1, #4]
    8758:	6863      	ldr	r3, [r4, #4]
    875a:	3108      	adds	r1, #8
    875c:	4318      	orrs	r0, r3
    875e:	6060      	str	r0, [r4, #4]
    8760:	9801      	ldr	r0, [sp, #4]
    8762:	f7fe fd9b 	bl	729c <_free_r>
    8766:	e7cf      	b.n	8708 <_realloc_r+0xf8>
    8768:	0011      	movs	r1, r2
    876a:	f7ff f8b5 	bl	78d8 <_malloc_r>
    876e:	0005      	movs	r5, r0
    8770:	e7cd      	b.n	870e <_realloc_r+0xfe>
    8772:	4651      	mov	r1, sl
    8774:	4211      	tst	r1, r2
    8776:	d000      	beq.n	877a <_realloc_r+0x16a>
    8778:	e786      	b.n	8688 <_realloc_r+0x78>
    877a:	4661      	mov	r1, ip
    877c:	683a      	ldr	r2, [r7, #0]
    877e:	1aba      	subs	r2, r7, r2
    8780:	4692      	mov	sl, r2
    8782:	6852      	ldr	r2, [r2, #4]
    8784:	438a      	bics	r2, r1
    8786:	1880      	adds	r0, r0, r2
    8788:	4683      	mov	fp, r0
    878a:	44a3      	add	fp, r4
    878c:	459b      	cmp	fp, r3
    878e:	db26      	blt.n	87de <_realloc_r+0x1ce>
    8790:	9a02      	ldr	r2, [sp, #8]
    8792:	68d3      	ldr	r3, [r2, #12]
    8794:	6892      	ldr	r2, [r2, #8]
    8796:	60d3      	str	r3, [r2, #12]
    8798:	609a      	str	r2, [r3, #8]
    879a:	4653      	mov	r3, sl
    879c:	4652      	mov	r2, sl
    879e:	4655      	mov	r5, sl
    87a0:	6892      	ldr	r2, [r2, #8]
    87a2:	68db      	ldr	r3, [r3, #12]
    87a4:	3508      	adds	r5, #8
    87a6:	60d3      	str	r3, [r2, #12]
    87a8:	609a      	str	r2, [r3, #8]
    87aa:	1f22      	subs	r2, r4, #4
    87ac:	2a24      	cmp	r2, #36	; 0x24
    87ae:	d900      	bls.n	87b2 <_realloc_r+0x1a2>
    87b0:	e096      	b.n	88e0 <_realloc_r+0x2d0>
    87b2:	2a13      	cmp	r2, #19
    87b4:	d972      	bls.n	889c <_realloc_r+0x28c>
    87b6:	4653      	mov	r3, sl
    87b8:	6831      	ldr	r1, [r6, #0]
    87ba:	6099      	str	r1, [r3, #8]
    87bc:	6871      	ldr	r1, [r6, #4]
    87be:	60d9      	str	r1, [r3, #12]
    87c0:	2a1b      	cmp	r2, #27
    87c2:	d900      	bls.n	87c6 <_realloc_r+0x1b6>
    87c4:	e0a4      	b.n	8910 <_realloc_r+0x300>
    87c6:	0032      	movs	r2, r6
    87c8:	3310      	adds	r3, #16
    87ca:	3208      	adds	r2, #8
    87cc:	e068      	b.n	88a0 <_realloc_r+0x290>
    87ce:	683a      	ldr	r2, [r7, #0]
    87d0:	1aba      	subs	r2, r7, r2
    87d2:	4692      	mov	sl, r2
    87d4:	4651      	mov	r1, sl
    87d6:	2203      	movs	r2, #3
    87d8:	6849      	ldr	r1, [r1, #4]
    87da:	4391      	bics	r1, r2
    87dc:	000a      	movs	r2, r1
    87de:	4693      	mov	fp, r2
    87e0:	44a3      	add	fp, r4
    87e2:	459b      	cmp	fp, r3
    87e4:	da00      	bge.n	87e8 <_realloc_r+0x1d8>
    87e6:	e74f      	b.n	8688 <_realloc_r+0x78>
    87e8:	e7d7      	b.n	879a <_realloc_r+0x18a>
    87ea:	2003      	movs	r0, #3
    87ec:	9902      	ldr	r1, [sp, #8]
    87ee:	4684      	mov	ip, r0
    87f0:	6849      	ldr	r1, [r1, #4]
    87f2:	4381      	bics	r1, r0
    87f4:	4640      	mov	r0, r8
    87f6:	1909      	adds	r1, r1, r4
    87f8:	3010      	adds	r0, #16
    87fa:	9002      	str	r0, [sp, #8]
    87fc:	4281      	cmp	r1, r0
    87fe:	da58      	bge.n	88b2 <_realloc_r+0x2a2>
    8800:	07d2      	lsls	r2, r2, #31
    8802:	d500      	bpl.n	8806 <_realloc_r+0x1f6>
    8804:	e740      	b.n	8688 <_realloc_r+0x78>
    8806:	4660      	mov	r0, ip
    8808:	683a      	ldr	r2, [r7, #0]
    880a:	1aba      	subs	r2, r7, r2
    880c:	4692      	mov	sl, r2
    880e:	6852      	ldr	r2, [r2, #4]
    8810:	4382      	bics	r2, r0
    8812:	9802      	ldr	r0, [sp, #8]
    8814:	1851      	adds	r1, r2, r1
    8816:	9103      	str	r1, [sp, #12]
    8818:	4288      	cmp	r0, r1
    881a:	dce0      	bgt.n	87de <_realloc_r+0x1ce>
    881c:	4653      	mov	r3, sl
    881e:	4652      	mov	r2, sl
    8820:	4655      	mov	r5, sl
    8822:	6892      	ldr	r2, [r2, #8]
    8824:	68db      	ldr	r3, [r3, #12]
    8826:	3508      	adds	r5, #8
    8828:	60d3      	str	r3, [r2, #12]
    882a:	609a      	str	r2, [r3, #8]
    882c:	1f22      	subs	r2, r4, #4
    882e:	2a24      	cmp	r2, #36	; 0x24
    8830:	d900      	bls.n	8834 <_realloc_r+0x224>
    8832:	e08e      	b.n	8952 <_realloc_r+0x342>
    8834:	2a13      	cmp	r2, #19
    8836:	d800      	bhi.n	883a <_realloc_r+0x22a>
    8838:	e088      	b.n	894c <_realloc_r+0x33c>
    883a:	4653      	mov	r3, sl
    883c:	6831      	ldr	r1, [r6, #0]
    883e:	6099      	str	r1, [r3, #8]
    8840:	6871      	ldr	r1, [r6, #4]
    8842:	60d9      	str	r1, [r3, #12]
    8844:	2a1b      	cmp	r2, #27
    8846:	d900      	bls.n	884a <_realloc_r+0x23a>
    8848:	e088      	b.n	895c <_realloc_r+0x34c>
    884a:	0032      	movs	r2, r6
    884c:	3310      	adds	r3, #16
    884e:	3208      	adds	r2, #8
    8850:	6811      	ldr	r1, [r2, #0]
    8852:	6019      	str	r1, [r3, #0]
    8854:	6851      	ldr	r1, [r2, #4]
    8856:	6059      	str	r1, [r3, #4]
    8858:	6892      	ldr	r2, [r2, #8]
    885a:	609a      	str	r2, [r3, #8]
    885c:	4651      	mov	r1, sl
    885e:	465b      	mov	r3, fp
    8860:	4642      	mov	r2, r8
    8862:	4441      	add	r1, r8
    8864:	6099      	str	r1, [r3, #8]
    8866:	9b03      	ldr	r3, [sp, #12]
    8868:	9801      	ldr	r0, [sp, #4]
    886a:	1a9a      	subs	r2, r3, r2
    886c:	2301      	movs	r3, #1
    886e:	431a      	orrs	r2, r3
    8870:	604a      	str	r2, [r1, #4]
    8872:	4652      	mov	r2, sl
    8874:	6852      	ldr	r2, [r2, #4]
    8876:	4013      	ands	r3, r2
    8878:	4642      	mov	r2, r8
    887a:	4313      	orrs	r3, r2
    887c:	4652      	mov	r2, sl
    887e:	6053      	str	r3, [r2, #4]
    8880:	f7ff fb76 	bl	7f70 <__malloc_unlock>
    8884:	e743      	b.n	870e <_realloc_r+0xfe>
    8886:	6833      	ldr	r3, [r6, #0]
    8888:	6003      	str	r3, [r0, #0]
    888a:	6873      	ldr	r3, [r6, #4]
    888c:	6043      	str	r3, [r0, #4]
    888e:	2a1b      	cmp	r2, #27
    8890:	d82d      	bhi.n	88ee <_realloc_r+0x2de>
    8892:	0003      	movs	r3, r0
    8894:	0032      	movs	r2, r6
    8896:	3308      	adds	r3, #8
    8898:	3208      	adds	r2, #8
    889a:	e70d      	b.n	86b8 <_realloc_r+0xa8>
    889c:	002b      	movs	r3, r5
    889e:	0032      	movs	r2, r6
    88a0:	6811      	ldr	r1, [r2, #0]
    88a2:	465c      	mov	r4, fp
    88a4:	6019      	str	r1, [r3, #0]
    88a6:	6851      	ldr	r1, [r2, #4]
    88a8:	46d1      	mov	r9, sl
    88aa:	6059      	str	r1, [r3, #4]
    88ac:	6892      	ldr	r2, [r2, #8]
    88ae:	609a      	str	r2, [r3, #8]
    88b0:	e71b      	b.n	86ea <_realloc_r+0xda>
    88b2:	4643      	mov	r3, r8
    88b4:	18fa      	adds	r2, r7, r3
    88b6:	465b      	mov	r3, fp
    88b8:	609a      	str	r2, [r3, #8]
    88ba:	4643      	mov	r3, r8
    88bc:	1ac9      	subs	r1, r1, r3
    88be:	2301      	movs	r3, #1
    88c0:	4319      	orrs	r1, r3
    88c2:	6051      	str	r1, [r2, #4]
    88c4:	687a      	ldr	r2, [r7, #4]
    88c6:	9801      	ldr	r0, [sp, #4]
    88c8:	4013      	ands	r3, r2
    88ca:	4642      	mov	r2, r8
    88cc:	4313      	orrs	r3, r2
    88ce:	607b      	str	r3, [r7, #4]
    88d0:	f7ff fb4e 	bl	7f70 <__malloc_unlock>
    88d4:	0035      	movs	r5, r6
    88d6:	e71a      	b.n	870e <_realloc_r+0xfe>
    88d8:	0031      	movs	r1, r6
    88da:	f7ff faf1 	bl	7ec0 <memmove>
    88de:	e6f1      	b.n	86c4 <_realloc_r+0xb4>
    88e0:	0031      	movs	r1, r6
    88e2:	0028      	movs	r0, r5
    88e4:	f7ff faec 	bl	7ec0 <memmove>
    88e8:	465c      	mov	r4, fp
    88ea:	46d1      	mov	r9, sl
    88ec:	e6fd      	b.n	86ea <_realloc_r+0xda>
    88ee:	68b3      	ldr	r3, [r6, #8]
    88f0:	6083      	str	r3, [r0, #8]
    88f2:	68f3      	ldr	r3, [r6, #12]
    88f4:	60c3      	str	r3, [r0, #12]
    88f6:	2a24      	cmp	r2, #36	; 0x24
    88f8:	d015      	beq.n	8926 <_realloc_r+0x316>
    88fa:	0003      	movs	r3, r0
    88fc:	0032      	movs	r2, r6
    88fe:	3310      	adds	r3, #16
    8900:	3210      	adds	r2, #16
    8902:	e6d9      	b.n	86b8 <_realloc_r+0xa8>
    8904:	6853      	ldr	r3, [r2, #4]
    8906:	2203      	movs	r2, #3
    8908:	4393      	bics	r3, r2
    890a:	18e4      	adds	r4, r4, r3
    890c:	0035      	movs	r5, r6
    890e:	e6ec      	b.n	86ea <_realloc_r+0xda>
    8910:	4653      	mov	r3, sl
    8912:	68b1      	ldr	r1, [r6, #8]
    8914:	6119      	str	r1, [r3, #16]
    8916:	68f1      	ldr	r1, [r6, #12]
    8918:	6159      	str	r1, [r3, #20]
    891a:	2a24      	cmp	r2, #36	; 0x24
    891c:	d00c      	beq.n	8938 <_realloc_r+0x328>
    891e:	0032      	movs	r2, r6
    8920:	3318      	adds	r3, #24
    8922:	3210      	adds	r2, #16
    8924:	e7bc      	b.n	88a0 <_realloc_r+0x290>
    8926:	6933      	ldr	r3, [r6, #16]
    8928:	0032      	movs	r2, r6
    892a:	6103      	str	r3, [r0, #16]
    892c:	0003      	movs	r3, r0
    892e:	6971      	ldr	r1, [r6, #20]
    8930:	3318      	adds	r3, #24
    8932:	3218      	adds	r2, #24
    8934:	6141      	str	r1, [r0, #20]
    8936:	e6bf      	b.n	86b8 <_realloc_r+0xa8>
    8938:	4653      	mov	r3, sl
    893a:	6932      	ldr	r2, [r6, #16]
    893c:	4651      	mov	r1, sl
    893e:	619a      	str	r2, [r3, #24]
    8940:	0032      	movs	r2, r6
    8942:	6970      	ldr	r0, [r6, #20]
    8944:	3320      	adds	r3, #32
    8946:	3218      	adds	r2, #24
    8948:	61c8      	str	r0, [r1, #28]
    894a:	e7a9      	b.n	88a0 <_realloc_r+0x290>
    894c:	002b      	movs	r3, r5
    894e:	0032      	movs	r2, r6
    8950:	e77e      	b.n	8850 <_realloc_r+0x240>
    8952:	0031      	movs	r1, r6
    8954:	0028      	movs	r0, r5
    8956:	f7ff fab3 	bl	7ec0 <memmove>
    895a:	e77f      	b.n	885c <_realloc_r+0x24c>
    895c:	4653      	mov	r3, sl
    895e:	68b1      	ldr	r1, [r6, #8]
    8960:	6119      	str	r1, [r3, #16]
    8962:	68f1      	ldr	r1, [r6, #12]
    8964:	6159      	str	r1, [r3, #20]
    8966:	2a24      	cmp	r2, #36	; 0x24
    8968:	d003      	beq.n	8972 <_realloc_r+0x362>
    896a:	0032      	movs	r2, r6
    896c:	3318      	adds	r3, #24
    896e:	3210      	adds	r2, #16
    8970:	e76e      	b.n	8850 <_realloc_r+0x240>
    8972:	4653      	mov	r3, sl
    8974:	6932      	ldr	r2, [r6, #16]
    8976:	4651      	mov	r1, sl
    8978:	619a      	str	r2, [r3, #24]
    897a:	0032      	movs	r2, r6
    897c:	6970      	ldr	r0, [r6, #20]
    897e:	3320      	adds	r3, #32
    8980:	3218      	adds	r2, #24
    8982:	61c8      	str	r0, [r1, #28]
    8984:	e764      	b.n	8850 <_realloc_r+0x240>
    8986:	46c0      	nop			; (mov r8, r8)
    8988:	200004ac 	.word	0x200004ac

0000898c <_sbrk_r>:
    898c:	2300      	movs	r3, #0
    898e:	b570      	push	{r4, r5, r6, lr}
    8990:	4c06      	ldr	r4, [pc, #24]	; (89ac <_sbrk_r+0x20>)
    8992:	0005      	movs	r5, r0
    8994:	0008      	movs	r0, r1
    8996:	6023      	str	r3, [r4, #0]
    8998:	f7f8 fb3a 	bl	1010 <_sbrk>
    899c:	1c43      	adds	r3, r0, #1
    899e:	d000      	beq.n	89a2 <_sbrk_r+0x16>
    89a0:	bd70      	pop	{r4, r5, r6, pc}
    89a2:	6823      	ldr	r3, [r4, #0]
    89a4:	2b00      	cmp	r3, #0
    89a6:	d0fb      	beq.n	89a0 <_sbrk_r+0x14>
    89a8:	602b      	str	r3, [r5, #0]
    89aa:	e7f9      	b.n	89a0 <_sbrk_r+0x14>
    89ac:	20000ba8 	.word	0x20000ba8

000089b0 <__sread>:
    89b0:	b570      	push	{r4, r5, r6, lr}
    89b2:	000c      	movs	r4, r1
    89b4:	250e      	movs	r5, #14
    89b6:	5f49      	ldrsh	r1, [r1, r5]
    89b8:	f000 faa0 	bl	8efc <_read_r>
    89bc:	2800      	cmp	r0, #0
    89be:	db03      	blt.n	89c8 <__sread+0x18>
    89c0:	6d23      	ldr	r3, [r4, #80]	; 0x50
    89c2:	181b      	adds	r3, r3, r0
    89c4:	6523      	str	r3, [r4, #80]	; 0x50
    89c6:	bd70      	pop	{r4, r5, r6, pc}
    89c8:	89a3      	ldrh	r3, [r4, #12]
    89ca:	4a02      	ldr	r2, [pc, #8]	; (89d4 <__sread+0x24>)
    89cc:	4013      	ands	r3, r2
    89ce:	81a3      	strh	r3, [r4, #12]
    89d0:	e7f9      	b.n	89c6 <__sread+0x16>
    89d2:	46c0      	nop			; (mov r8, r8)
    89d4:	ffffefff 	.word	0xffffefff

000089d8 <__swrite>:
    89d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    89da:	0016      	movs	r6, r2
    89dc:	001f      	movs	r7, r3
    89de:	220c      	movs	r2, #12
    89e0:	5e8b      	ldrsh	r3, [r1, r2]
    89e2:	0005      	movs	r5, r0
    89e4:	000c      	movs	r4, r1
    89e6:	05da      	lsls	r2, r3, #23
    89e8:	d507      	bpl.n	89fa <__swrite+0x22>
    89ea:	230e      	movs	r3, #14
    89ec:	5ec9      	ldrsh	r1, [r1, r3]
    89ee:	2200      	movs	r2, #0
    89f0:	2302      	movs	r3, #2
    89f2:	f000 fa59 	bl	8ea8 <_lseek_r>
    89f6:	220c      	movs	r2, #12
    89f8:	5ea3      	ldrsh	r3, [r4, r2]
    89fa:	4a05      	ldr	r2, [pc, #20]	; (8a10 <__swrite+0x38>)
    89fc:	0028      	movs	r0, r5
    89fe:	4013      	ands	r3, r2
    8a00:	81a3      	strh	r3, [r4, #12]
    8a02:	0032      	movs	r2, r6
    8a04:	230e      	movs	r3, #14
    8a06:	5ee1      	ldrsh	r1, [r4, r3]
    8a08:	003b      	movs	r3, r7
    8a0a:	f000 f86b 	bl	8ae4 <_write_r>
    8a0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8a10:	ffffefff 	.word	0xffffefff

00008a14 <__sseek>:
    8a14:	b570      	push	{r4, r5, r6, lr}
    8a16:	000c      	movs	r4, r1
    8a18:	250e      	movs	r5, #14
    8a1a:	5f49      	ldrsh	r1, [r1, r5]
    8a1c:	f000 fa44 	bl	8ea8 <_lseek_r>
    8a20:	1c43      	adds	r3, r0, #1
    8a22:	d006      	beq.n	8a32 <__sseek+0x1e>
    8a24:	2380      	movs	r3, #128	; 0x80
    8a26:	89a2      	ldrh	r2, [r4, #12]
    8a28:	015b      	lsls	r3, r3, #5
    8a2a:	4313      	orrs	r3, r2
    8a2c:	81a3      	strh	r3, [r4, #12]
    8a2e:	6520      	str	r0, [r4, #80]	; 0x50
    8a30:	bd70      	pop	{r4, r5, r6, pc}
    8a32:	89a3      	ldrh	r3, [r4, #12]
    8a34:	4a01      	ldr	r2, [pc, #4]	; (8a3c <__sseek+0x28>)
    8a36:	4013      	ands	r3, r2
    8a38:	81a3      	strh	r3, [r4, #12]
    8a3a:	e7f9      	b.n	8a30 <__sseek+0x1c>
    8a3c:	ffffefff 	.word	0xffffefff

00008a40 <__sclose>:
    8a40:	b510      	push	{r4, lr}
    8a42:	230e      	movs	r3, #14
    8a44:	5ec9      	ldrsh	r1, [r1, r3]
    8a46:	f000 f907 	bl	8c58 <_close_r>
    8a4a:	bd10      	pop	{r4, pc}

00008a4c <__sprint_r.part.0>:
    8a4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8a4e:	464e      	mov	r6, r9
    8a50:	4645      	mov	r5, r8
    8a52:	46de      	mov	lr, fp
    8a54:	4657      	mov	r7, sl
    8a56:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    8a58:	b5e0      	push	{r5, r6, r7, lr}
    8a5a:	4680      	mov	r8, r0
    8a5c:	000e      	movs	r6, r1
    8a5e:	4691      	mov	r9, r2
    8a60:	049b      	lsls	r3, r3, #18
    8a62:	d531      	bpl.n	8ac8 <__sprint_r.part.0+0x7c>
    8a64:	6813      	ldr	r3, [r2, #0]
    8a66:	469a      	mov	sl, r3
    8a68:	6893      	ldr	r3, [r2, #8]
    8a6a:	2b00      	cmp	r3, #0
    8a6c:	d02a      	beq.n	8ac4 <__sprint_r.part.0+0x78>
    8a6e:	4652      	mov	r2, sl
    8a70:	6852      	ldr	r2, [r2, #4]
    8a72:	2500      	movs	r5, #0
    8a74:	4693      	mov	fp, r2
    8a76:	0897      	lsrs	r7, r2, #2
    8a78:	4652      	mov	r2, sl
    8a7a:	6814      	ldr	r4, [r2, #0]
    8a7c:	d104      	bne.n	8a88 <__sprint_r.part.0+0x3c>
    8a7e:	e016      	b.n	8aae <__sprint_r.part.0+0x62>
    8a80:	3501      	adds	r5, #1
    8a82:	3404      	adds	r4, #4
    8a84:	42af      	cmp	r7, r5
    8a86:	d010      	beq.n	8aaa <__sprint_r.part.0+0x5e>
    8a88:	0032      	movs	r2, r6
    8a8a:	6821      	ldr	r1, [r4, #0]
    8a8c:	4640      	mov	r0, r8
    8a8e:	f000 f9a7 	bl	8de0 <_fputwc_r>
    8a92:	1c43      	adds	r3, r0, #1
    8a94:	d1f4      	bne.n	8a80 <__sprint_r.part.0+0x34>
    8a96:	464a      	mov	r2, r9
    8a98:	2300      	movs	r3, #0
    8a9a:	6093      	str	r3, [r2, #8]
    8a9c:	6053      	str	r3, [r2, #4]
    8a9e:	bc3c      	pop	{r2, r3, r4, r5}
    8aa0:	4690      	mov	r8, r2
    8aa2:	4699      	mov	r9, r3
    8aa4:	46a2      	mov	sl, r4
    8aa6:	46ab      	mov	fp, r5
    8aa8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8aaa:	464b      	mov	r3, r9
    8aac:	689b      	ldr	r3, [r3, #8]
    8aae:	465a      	mov	r2, fp
    8ab0:	2103      	movs	r1, #3
    8ab2:	438a      	bics	r2, r1
    8ab4:	1a9b      	subs	r3, r3, r2
    8ab6:	464a      	mov	r2, r9
    8ab8:	6093      	str	r3, [r2, #8]
    8aba:	2208      	movs	r2, #8
    8abc:	4694      	mov	ip, r2
    8abe:	44e2      	add	sl, ip
    8ac0:	2b00      	cmp	r3, #0
    8ac2:	d1d4      	bne.n	8a6e <__sprint_r.part.0+0x22>
    8ac4:	2000      	movs	r0, #0
    8ac6:	e7e6      	b.n	8a96 <__sprint_r.part.0+0x4a>
    8ac8:	f7fe fcc6 	bl	7458 <__sfvwrite_r>
    8acc:	e7e3      	b.n	8a96 <__sprint_r.part.0+0x4a>
    8ace:	46c0      	nop			; (mov r8, r8)

00008ad0 <__sprint_r>:
    8ad0:	6893      	ldr	r3, [r2, #8]
    8ad2:	b510      	push	{r4, lr}
    8ad4:	2b00      	cmp	r3, #0
    8ad6:	d002      	beq.n	8ade <__sprint_r+0xe>
    8ad8:	f7ff ffb8 	bl	8a4c <__sprint_r.part.0>
    8adc:	bd10      	pop	{r4, pc}
    8ade:	6053      	str	r3, [r2, #4]
    8ae0:	2000      	movs	r0, #0
    8ae2:	e7fb      	b.n	8adc <__sprint_r+0xc>

00008ae4 <_write_r>:
    8ae4:	b570      	push	{r4, r5, r6, lr}
    8ae6:	0005      	movs	r5, r0
    8ae8:	0008      	movs	r0, r1
    8aea:	0011      	movs	r1, r2
    8aec:	2200      	movs	r2, #0
    8aee:	4c06      	ldr	r4, [pc, #24]	; (8b08 <_write_r+0x24>)
    8af0:	6022      	str	r2, [r4, #0]
    8af2:	001a      	movs	r2, r3
    8af4:	f7f9 fbda 	bl	22ac <_write>
    8af8:	1c43      	adds	r3, r0, #1
    8afa:	d000      	beq.n	8afe <_write_r+0x1a>
    8afc:	bd70      	pop	{r4, r5, r6, pc}
    8afe:	6823      	ldr	r3, [r4, #0]
    8b00:	2b00      	cmp	r3, #0
    8b02:	d0fb      	beq.n	8afc <_write_r+0x18>
    8b04:	602b      	str	r3, [r5, #0]
    8b06:	e7f9      	b.n	8afc <_write_r+0x18>
    8b08:	20000ba8 	.word	0x20000ba8

00008b0c <__register_exitproc>:
    8b0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    8b0e:	464e      	mov	r6, r9
    8b10:	4645      	mov	r5, r8
    8b12:	46de      	mov	lr, fp
    8b14:	4657      	mov	r7, sl
    8b16:	b5e0      	push	{r5, r6, r7, lr}
    8b18:	4d36      	ldr	r5, [pc, #216]	; (8bf4 <__register_exitproc+0xe8>)
    8b1a:	b083      	sub	sp, #12
    8b1c:	0006      	movs	r6, r0
    8b1e:	6828      	ldr	r0, [r5, #0]
    8b20:	4698      	mov	r8, r3
    8b22:	000f      	movs	r7, r1
    8b24:	4691      	mov	r9, r2
    8b26:	f7fe fe51 	bl	77cc <__retarget_lock_acquire_recursive>
    8b2a:	4b33      	ldr	r3, [pc, #204]	; (8bf8 <__register_exitproc+0xec>)
    8b2c:	681c      	ldr	r4, [r3, #0]
    8b2e:	23a4      	movs	r3, #164	; 0xa4
    8b30:	005b      	lsls	r3, r3, #1
    8b32:	58e0      	ldr	r0, [r4, r3]
    8b34:	2800      	cmp	r0, #0
    8b36:	d052      	beq.n	8bde <__register_exitproc+0xd2>
    8b38:	6843      	ldr	r3, [r0, #4]
    8b3a:	2b1f      	cmp	r3, #31
    8b3c:	dc13      	bgt.n	8b66 <__register_exitproc+0x5a>
    8b3e:	1c5a      	adds	r2, r3, #1
    8b40:	9201      	str	r2, [sp, #4]
    8b42:	2e00      	cmp	r6, #0
    8b44:	d128      	bne.n	8b98 <__register_exitproc+0x8c>
    8b46:	9a01      	ldr	r2, [sp, #4]
    8b48:	3302      	adds	r3, #2
    8b4a:	009b      	lsls	r3, r3, #2
    8b4c:	6042      	str	r2, [r0, #4]
    8b4e:	501f      	str	r7, [r3, r0]
    8b50:	6828      	ldr	r0, [r5, #0]
    8b52:	f7fe fe3d 	bl	77d0 <__retarget_lock_release_recursive>
    8b56:	2000      	movs	r0, #0
    8b58:	b003      	add	sp, #12
    8b5a:	bc3c      	pop	{r2, r3, r4, r5}
    8b5c:	4690      	mov	r8, r2
    8b5e:	4699      	mov	r9, r3
    8b60:	46a2      	mov	sl, r4
    8b62:	46ab      	mov	fp, r5
    8b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8b66:	4b25      	ldr	r3, [pc, #148]	; (8bfc <__register_exitproc+0xf0>)
    8b68:	2b00      	cmp	r3, #0
    8b6a:	d03d      	beq.n	8be8 <__register_exitproc+0xdc>
    8b6c:	20c8      	movs	r0, #200	; 0xc8
    8b6e:	0040      	lsls	r0, r0, #1
    8b70:	f7fe fea8 	bl	78c4 <malloc>
    8b74:	2800      	cmp	r0, #0
    8b76:	d037      	beq.n	8be8 <__register_exitproc+0xdc>
    8b78:	22a4      	movs	r2, #164	; 0xa4
    8b7a:	2300      	movs	r3, #0
    8b7c:	0052      	lsls	r2, r2, #1
    8b7e:	58a1      	ldr	r1, [r4, r2]
    8b80:	6043      	str	r3, [r0, #4]
    8b82:	6001      	str	r1, [r0, #0]
    8b84:	50a0      	str	r0, [r4, r2]
    8b86:	3240      	adds	r2, #64	; 0x40
    8b88:	5083      	str	r3, [r0, r2]
    8b8a:	3204      	adds	r2, #4
    8b8c:	5083      	str	r3, [r0, r2]
    8b8e:	3301      	adds	r3, #1
    8b90:	9301      	str	r3, [sp, #4]
    8b92:	2300      	movs	r3, #0
    8b94:	2e00      	cmp	r6, #0
    8b96:	d0d6      	beq.n	8b46 <__register_exitproc+0x3a>
    8b98:	009a      	lsls	r2, r3, #2
    8b9a:	4692      	mov	sl, r2
    8b9c:	4482      	add	sl, r0
    8b9e:	464a      	mov	r2, r9
    8ba0:	2188      	movs	r1, #136	; 0x88
    8ba2:	4654      	mov	r4, sl
    8ba4:	5062      	str	r2, [r4, r1]
    8ba6:	22c4      	movs	r2, #196	; 0xc4
    8ba8:	0052      	lsls	r2, r2, #1
    8baa:	4691      	mov	r9, r2
    8bac:	4481      	add	r9, r0
    8bae:	464a      	mov	r2, r9
    8bb0:	3987      	subs	r1, #135	; 0x87
    8bb2:	4099      	lsls	r1, r3
    8bb4:	6812      	ldr	r2, [r2, #0]
    8bb6:	468b      	mov	fp, r1
    8bb8:	430a      	orrs	r2, r1
    8bba:	4694      	mov	ip, r2
    8bbc:	464a      	mov	r2, r9
    8bbe:	4661      	mov	r1, ip
    8bc0:	6011      	str	r1, [r2, #0]
    8bc2:	2284      	movs	r2, #132	; 0x84
    8bc4:	4641      	mov	r1, r8
    8bc6:	0052      	lsls	r2, r2, #1
    8bc8:	50a1      	str	r1, [r4, r2]
    8bca:	2e02      	cmp	r6, #2
    8bcc:	d1bb      	bne.n	8b46 <__register_exitproc+0x3a>
    8bce:	0002      	movs	r2, r0
    8bd0:	465c      	mov	r4, fp
    8bd2:	328d      	adds	r2, #141	; 0x8d
    8bd4:	32ff      	adds	r2, #255	; 0xff
    8bd6:	6811      	ldr	r1, [r2, #0]
    8bd8:	430c      	orrs	r4, r1
    8bda:	6014      	str	r4, [r2, #0]
    8bdc:	e7b3      	b.n	8b46 <__register_exitproc+0x3a>
    8bde:	0020      	movs	r0, r4
    8be0:	304d      	adds	r0, #77	; 0x4d
    8be2:	30ff      	adds	r0, #255	; 0xff
    8be4:	50e0      	str	r0, [r4, r3]
    8be6:	e7a7      	b.n	8b38 <__register_exitproc+0x2c>
    8be8:	6828      	ldr	r0, [r5, #0]
    8bea:	f7fe fdf1 	bl	77d0 <__retarget_lock_release_recursive>
    8bee:	2001      	movs	r0, #1
    8bf0:	4240      	negs	r0, r0
    8bf2:	e7b1      	b.n	8b58 <__register_exitproc+0x4c>
    8bf4:	200004a8 	.word	0x200004a8
    8bf8:	00009c78 	.word	0x00009c78
    8bfc:	000078c5 	.word	0x000078c5

00008c00 <_calloc_r>:
    8c00:	b510      	push	{r4, lr}
    8c02:	4351      	muls	r1, r2
    8c04:	f7fe fe68 	bl	78d8 <_malloc_r>
    8c08:	1e04      	subs	r4, r0, #0
    8c0a:	d01c      	beq.n	8c46 <_calloc_r+0x46>
    8c0c:	0003      	movs	r3, r0
    8c0e:	3b08      	subs	r3, #8
    8c10:	685a      	ldr	r2, [r3, #4]
    8c12:	2303      	movs	r3, #3
    8c14:	439a      	bics	r2, r3
    8c16:	3a04      	subs	r2, #4
    8c18:	2a24      	cmp	r2, #36	; 0x24
    8c1a:	d816      	bhi.n	8c4a <_calloc_r+0x4a>
    8c1c:	0003      	movs	r3, r0
    8c1e:	2a13      	cmp	r2, #19
    8c20:	d90d      	bls.n	8c3e <_calloc_r+0x3e>
    8c22:	2100      	movs	r1, #0
    8c24:	3308      	adds	r3, #8
    8c26:	6001      	str	r1, [r0, #0]
    8c28:	6041      	str	r1, [r0, #4]
    8c2a:	2a1b      	cmp	r2, #27
    8c2c:	d907      	bls.n	8c3e <_calloc_r+0x3e>
    8c2e:	6081      	str	r1, [r0, #8]
    8c30:	60c1      	str	r1, [r0, #12]
    8c32:	2a24      	cmp	r2, #36	; 0x24
    8c34:	d10d      	bne.n	8c52 <_calloc_r+0x52>
    8c36:	0003      	movs	r3, r0
    8c38:	6101      	str	r1, [r0, #16]
    8c3a:	3318      	adds	r3, #24
    8c3c:	6141      	str	r1, [r0, #20]
    8c3e:	2200      	movs	r2, #0
    8c40:	601a      	str	r2, [r3, #0]
    8c42:	605a      	str	r2, [r3, #4]
    8c44:	609a      	str	r2, [r3, #8]
    8c46:	0020      	movs	r0, r4
    8c48:	bd10      	pop	{r4, pc}
    8c4a:	2100      	movs	r1, #0
    8c4c:	f7fb fb76 	bl	433c <memset>
    8c50:	e7f9      	b.n	8c46 <_calloc_r+0x46>
    8c52:	0003      	movs	r3, r0
    8c54:	3310      	adds	r3, #16
    8c56:	e7f2      	b.n	8c3e <_calloc_r+0x3e>

00008c58 <_close_r>:
    8c58:	2300      	movs	r3, #0
    8c5a:	b570      	push	{r4, r5, r6, lr}
    8c5c:	4c06      	ldr	r4, [pc, #24]	; (8c78 <_close_r+0x20>)
    8c5e:	0005      	movs	r5, r0
    8c60:	0008      	movs	r0, r1
    8c62:	6023      	str	r3, [r4, #0]
    8c64:	f7f8 f9e6 	bl	1034 <_close>
    8c68:	1c43      	adds	r3, r0, #1
    8c6a:	d000      	beq.n	8c6e <_close_r+0x16>
    8c6c:	bd70      	pop	{r4, r5, r6, pc}
    8c6e:	6823      	ldr	r3, [r4, #0]
    8c70:	2b00      	cmp	r3, #0
    8c72:	d0fb      	beq.n	8c6c <_close_r+0x14>
    8c74:	602b      	str	r3, [r5, #0]
    8c76:	e7f9      	b.n	8c6c <_close_r+0x14>
    8c78:	20000ba8 	.word	0x20000ba8

00008c7c <_fclose_r>:
    8c7c:	b570      	push	{r4, r5, r6, lr}
    8c7e:	0005      	movs	r5, r0
    8c80:	1e0c      	subs	r4, r1, #0
    8c82:	d040      	beq.n	8d06 <_fclose_r+0x8a>
    8c84:	2800      	cmp	r0, #0
    8c86:	d002      	beq.n	8c8e <_fclose_r+0x12>
    8c88:	6b83      	ldr	r3, [r0, #56]	; 0x38
    8c8a:	2b00      	cmp	r3, #0
    8c8c:	d03e      	beq.n	8d0c <_fclose_r+0x90>
    8c8e:	2601      	movs	r6, #1
    8c90:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8c92:	4233      	tst	r3, r6
    8c94:	d133      	bne.n	8cfe <_fclose_r+0x82>
    8c96:	89a3      	ldrh	r3, [r4, #12]
    8c98:	059b      	lsls	r3, r3, #22
    8c9a:	d543      	bpl.n	8d24 <_fclose_r+0xa8>
    8c9c:	0021      	movs	r1, r4
    8c9e:	0028      	movs	r0, r5
    8ca0:	f7fe f950 	bl	6f44 <__sflush_r>
    8ca4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    8ca6:	0006      	movs	r6, r0
    8ca8:	2b00      	cmp	r3, #0
    8caa:	d004      	beq.n	8cb6 <_fclose_r+0x3a>
    8cac:	69e1      	ldr	r1, [r4, #28]
    8cae:	0028      	movs	r0, r5
    8cb0:	4798      	blx	r3
    8cb2:	2800      	cmp	r0, #0
    8cb4:	db44      	blt.n	8d40 <_fclose_r+0xc4>
    8cb6:	89a3      	ldrh	r3, [r4, #12]
    8cb8:	061b      	lsls	r3, r3, #24
    8cba:	d42a      	bmi.n	8d12 <_fclose_r+0x96>
    8cbc:	6b21      	ldr	r1, [r4, #48]	; 0x30
    8cbe:	2900      	cmp	r1, #0
    8cc0:	d008      	beq.n	8cd4 <_fclose_r+0x58>
    8cc2:	0023      	movs	r3, r4
    8cc4:	3340      	adds	r3, #64	; 0x40
    8cc6:	4299      	cmp	r1, r3
    8cc8:	d002      	beq.n	8cd0 <_fclose_r+0x54>
    8cca:	0028      	movs	r0, r5
    8ccc:	f7fe fae6 	bl	729c <_free_r>
    8cd0:	2300      	movs	r3, #0
    8cd2:	6323      	str	r3, [r4, #48]	; 0x30
    8cd4:	6c61      	ldr	r1, [r4, #68]	; 0x44
    8cd6:	2900      	cmp	r1, #0
    8cd8:	d004      	beq.n	8ce4 <_fclose_r+0x68>
    8cda:	0028      	movs	r0, r5
    8cdc:	f7fe fade 	bl	729c <_free_r>
    8ce0:	2300      	movs	r3, #0
    8ce2:	6463      	str	r3, [r4, #68]	; 0x44
    8ce4:	f7fe fa60 	bl	71a8 <__sfp_lock_acquire>
    8ce8:	2300      	movs	r3, #0
    8cea:	81a3      	strh	r3, [r4, #12]
    8cec:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8cee:	07db      	lsls	r3, r3, #31
    8cf0:	d514      	bpl.n	8d1c <_fclose_r+0xa0>
    8cf2:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8cf4:	f7fe fd68 	bl	77c8 <__retarget_lock_close_recursive>
    8cf8:	f7fe fa5e 	bl	71b8 <__sfp_lock_release>
    8cfc:	e004      	b.n	8d08 <_fclose_r+0x8c>
    8cfe:	220c      	movs	r2, #12
    8d00:	5ea3      	ldrsh	r3, [r4, r2]
    8d02:	2b00      	cmp	r3, #0
    8d04:	d1ca      	bne.n	8c9c <_fclose_r+0x20>
    8d06:	2600      	movs	r6, #0
    8d08:	0030      	movs	r0, r6
    8d0a:	bd70      	pop	{r4, r5, r6, pc}
    8d0c:	f7fe fa1c 	bl	7148 <__sinit>
    8d10:	e7bd      	b.n	8c8e <_fclose_r+0x12>
    8d12:	6921      	ldr	r1, [r4, #16]
    8d14:	0028      	movs	r0, r5
    8d16:	f7fe fac1 	bl	729c <_free_r>
    8d1a:	e7cf      	b.n	8cbc <_fclose_r+0x40>
    8d1c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8d1e:	f7fe fd57 	bl	77d0 <__retarget_lock_release_recursive>
    8d22:	e7e6      	b.n	8cf2 <_fclose_r+0x76>
    8d24:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8d26:	f7fe fd51 	bl	77cc <__retarget_lock_acquire_recursive>
    8d2a:	220c      	movs	r2, #12
    8d2c:	5ea3      	ldrsh	r3, [r4, r2]
    8d2e:	2b00      	cmp	r3, #0
    8d30:	d1b4      	bne.n	8c9c <_fclose_r+0x20>
    8d32:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8d34:	401e      	ands	r6, r3
    8d36:	d1e6      	bne.n	8d06 <_fclose_r+0x8a>
    8d38:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8d3a:	f7fe fd49 	bl	77d0 <__retarget_lock_release_recursive>
    8d3e:	e7e3      	b.n	8d08 <_fclose_r+0x8c>
    8d40:	2601      	movs	r6, #1
    8d42:	4276      	negs	r6, r6
    8d44:	e7b7      	b.n	8cb6 <_fclose_r+0x3a>
    8d46:	46c0      	nop			; (mov r8, r8)

00008d48 <__fputwc>:
    8d48:	b5f0      	push	{r4, r5, r6, r7, lr}
    8d4a:	46ce      	mov	lr, r9
    8d4c:	4647      	mov	r7, r8
    8d4e:	b580      	push	{r7, lr}
    8d50:	b085      	sub	sp, #20
    8d52:	4680      	mov	r8, r0
    8d54:	4689      	mov	r9, r1
    8d56:	0014      	movs	r4, r2
    8d58:	f000 f896 	bl	8e88 <__locale_mb_cur_max>
    8d5c:	2801      	cmp	r0, #1
    8d5e:	d031      	beq.n	8dc4 <__fputwc+0x7c>
    8d60:	0023      	movs	r3, r4
    8d62:	af03      	add	r7, sp, #12
    8d64:	335c      	adds	r3, #92	; 0x5c
    8d66:	464a      	mov	r2, r9
    8d68:	0039      	movs	r1, r7
    8d6a:	4640      	mov	r0, r8
    8d6c:	f000 f938 	bl	8fe0 <_wcrtomb_r>
    8d70:	0006      	movs	r6, r0
    8d72:	1c43      	adds	r3, r0, #1
    8d74:	d021      	beq.n	8dba <__fputwc+0x72>
    8d76:	2800      	cmp	r0, #0
    8d78:	d030      	beq.n	8ddc <__fputwc+0x94>
    8d7a:	7839      	ldrb	r1, [r7, #0]
    8d7c:	2500      	movs	r5, #0
    8d7e:	e007      	b.n	8d90 <__fputwc+0x48>
    8d80:	6823      	ldr	r3, [r4, #0]
    8d82:	1c5a      	adds	r2, r3, #1
    8d84:	6022      	str	r2, [r4, #0]
    8d86:	7019      	strb	r1, [r3, #0]
    8d88:	3501      	adds	r5, #1
    8d8a:	42b5      	cmp	r5, r6
    8d8c:	d226      	bcs.n	8ddc <__fputwc+0x94>
    8d8e:	5d79      	ldrb	r1, [r7, r5]
    8d90:	68a3      	ldr	r3, [r4, #8]
    8d92:	3b01      	subs	r3, #1
    8d94:	60a3      	str	r3, [r4, #8]
    8d96:	2b00      	cmp	r3, #0
    8d98:	daf2      	bge.n	8d80 <__fputwc+0x38>
    8d9a:	69a2      	ldr	r2, [r4, #24]
    8d9c:	4293      	cmp	r3, r2
    8d9e:	db01      	blt.n	8da4 <__fputwc+0x5c>
    8da0:	290a      	cmp	r1, #10
    8da2:	d1ed      	bne.n	8d80 <__fputwc+0x38>
    8da4:	0022      	movs	r2, r4
    8da6:	4640      	mov	r0, r8
    8da8:	f000 f8bc 	bl	8f24 <__swbuf_r>
    8dac:	1c43      	adds	r3, r0, #1
    8dae:	d1eb      	bne.n	8d88 <__fputwc+0x40>
    8db0:	b005      	add	sp, #20
    8db2:	bc0c      	pop	{r2, r3}
    8db4:	4690      	mov	r8, r2
    8db6:	4699      	mov	r9, r3
    8db8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8dba:	2240      	movs	r2, #64	; 0x40
    8dbc:	89a3      	ldrh	r3, [r4, #12]
    8dbe:	4313      	orrs	r3, r2
    8dc0:	81a3      	strh	r3, [r4, #12]
    8dc2:	e7f5      	b.n	8db0 <__fputwc+0x68>
    8dc4:	464b      	mov	r3, r9
    8dc6:	3b01      	subs	r3, #1
    8dc8:	2bfe      	cmp	r3, #254	; 0xfe
    8dca:	d8c9      	bhi.n	8d60 <__fputwc+0x18>
    8dcc:	466a      	mov	r2, sp
    8dce:	464b      	mov	r3, r9
    8dd0:	71d3      	strb	r3, [r2, #7]
    8dd2:	79d1      	ldrb	r1, [r2, #7]
    8dd4:	af03      	add	r7, sp, #12
    8dd6:	7039      	strb	r1, [r7, #0]
    8dd8:	2601      	movs	r6, #1
    8dda:	e7cf      	b.n	8d7c <__fputwc+0x34>
    8ddc:	4648      	mov	r0, r9
    8dde:	e7e7      	b.n	8db0 <__fputwc+0x68>

00008de0 <_fputwc_r>:
    8de0:	6e53      	ldr	r3, [r2, #100]	; 0x64
    8de2:	b570      	push	{r4, r5, r6, lr}
    8de4:	0005      	movs	r5, r0
    8de6:	000e      	movs	r6, r1
    8de8:	0014      	movs	r4, r2
    8dea:	07db      	lsls	r3, r3, #31
    8dec:	d41e      	bmi.n	8e2c <_fputwc_r+0x4c>
    8dee:	230c      	movs	r3, #12
    8df0:	5ed2      	ldrsh	r2, [r2, r3]
    8df2:	b291      	uxth	r1, r2
    8df4:	058b      	lsls	r3, r1, #22
    8df6:	d516      	bpl.n	8e26 <_fputwc_r+0x46>
    8df8:	2380      	movs	r3, #128	; 0x80
    8dfa:	019b      	lsls	r3, r3, #6
    8dfc:	4219      	tst	r1, r3
    8dfe:	d104      	bne.n	8e0a <_fputwc_r+0x2a>
    8e00:	431a      	orrs	r2, r3
    8e02:	81a2      	strh	r2, [r4, #12]
    8e04:	6e62      	ldr	r2, [r4, #100]	; 0x64
    8e06:	4313      	orrs	r3, r2
    8e08:	6663      	str	r3, [r4, #100]	; 0x64
    8e0a:	0028      	movs	r0, r5
    8e0c:	0022      	movs	r2, r4
    8e0e:	0031      	movs	r1, r6
    8e10:	f7ff ff9a 	bl	8d48 <__fputwc>
    8e14:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8e16:	0005      	movs	r5, r0
    8e18:	07db      	lsls	r3, r3, #31
    8e1a:	d402      	bmi.n	8e22 <_fputwc_r+0x42>
    8e1c:	89a3      	ldrh	r3, [r4, #12]
    8e1e:	059b      	lsls	r3, r3, #22
    8e20:	d508      	bpl.n	8e34 <_fputwc_r+0x54>
    8e22:	0028      	movs	r0, r5
    8e24:	bd70      	pop	{r4, r5, r6, pc}
    8e26:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8e28:	f7fe fcd0 	bl	77cc <__retarget_lock_acquire_recursive>
    8e2c:	230c      	movs	r3, #12
    8e2e:	5ee2      	ldrsh	r2, [r4, r3]
    8e30:	b291      	uxth	r1, r2
    8e32:	e7e1      	b.n	8df8 <_fputwc_r+0x18>
    8e34:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8e36:	f7fe fccb 	bl	77d0 <__retarget_lock_release_recursive>
    8e3a:	e7f2      	b.n	8e22 <_fputwc_r+0x42>

00008e3c <_fstat_r>:
    8e3c:	2300      	movs	r3, #0
    8e3e:	b570      	push	{r4, r5, r6, lr}
    8e40:	4c07      	ldr	r4, [pc, #28]	; (8e60 <_fstat_r+0x24>)
    8e42:	0005      	movs	r5, r0
    8e44:	0008      	movs	r0, r1
    8e46:	0011      	movs	r1, r2
    8e48:	6023      	str	r3, [r4, #0]
    8e4a:	f7f8 f8f6 	bl	103a <_fstat>
    8e4e:	1c43      	adds	r3, r0, #1
    8e50:	d000      	beq.n	8e54 <_fstat_r+0x18>
    8e52:	bd70      	pop	{r4, r5, r6, pc}
    8e54:	6823      	ldr	r3, [r4, #0]
    8e56:	2b00      	cmp	r3, #0
    8e58:	d0fb      	beq.n	8e52 <_fstat_r+0x16>
    8e5a:	602b      	str	r3, [r5, #0]
    8e5c:	e7f9      	b.n	8e52 <_fstat_r+0x16>
    8e5e:	46c0      	nop			; (mov r8, r8)
    8e60:	20000ba8 	.word	0x20000ba8

00008e64 <_isatty_r>:
    8e64:	2300      	movs	r3, #0
    8e66:	b570      	push	{r4, r5, r6, lr}
    8e68:	4c06      	ldr	r4, [pc, #24]	; (8e84 <_isatty_r+0x20>)
    8e6a:	0005      	movs	r5, r0
    8e6c:	0008      	movs	r0, r1
    8e6e:	6023      	str	r3, [r4, #0]
    8e70:	f7f8 f8e8 	bl	1044 <_isatty>
    8e74:	1c43      	adds	r3, r0, #1
    8e76:	d000      	beq.n	8e7a <_isatty_r+0x16>
    8e78:	bd70      	pop	{r4, r5, r6, pc}
    8e7a:	6823      	ldr	r3, [r4, #0]
    8e7c:	2b00      	cmp	r3, #0
    8e7e:	d0fb      	beq.n	8e78 <_isatty_r+0x14>
    8e80:	602b      	str	r3, [r5, #0]
    8e82:	e7f9      	b.n	8e78 <_isatty_r+0x14>
    8e84:	20000ba8 	.word	0x20000ba8

00008e88 <__locale_mb_cur_max>:
    8e88:	4b05      	ldr	r3, [pc, #20]	; (8ea0 <__locale_mb_cur_max+0x18>)
    8e8a:	681b      	ldr	r3, [r3, #0]
    8e8c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    8e8e:	2b00      	cmp	r3, #0
    8e90:	d003      	beq.n	8e9a <__locale_mb_cur_max+0x12>
    8e92:	2294      	movs	r2, #148	; 0x94
    8e94:	0052      	lsls	r2, r2, #1
    8e96:	5c98      	ldrb	r0, [r3, r2]
    8e98:	4770      	bx	lr
    8e9a:	4b02      	ldr	r3, [pc, #8]	; (8ea4 <__locale_mb_cur_max+0x1c>)
    8e9c:	e7f9      	b.n	8e92 <__locale_mb_cur_max+0xa>
    8e9e:	46c0      	nop			; (mov r8, r8)
    8ea0:	2000007c 	.word	0x2000007c
    8ea4:	200008bc 	.word	0x200008bc

00008ea8 <_lseek_r>:
    8ea8:	b570      	push	{r4, r5, r6, lr}
    8eaa:	0005      	movs	r5, r0
    8eac:	0008      	movs	r0, r1
    8eae:	0011      	movs	r1, r2
    8eb0:	2200      	movs	r2, #0
    8eb2:	4c06      	ldr	r4, [pc, #24]	; (8ecc <_lseek_r+0x24>)
    8eb4:	6022      	str	r2, [r4, #0]
    8eb6:	001a      	movs	r2, r3
    8eb8:	f7f8 f8c6 	bl	1048 <_lseek>
    8ebc:	1c43      	adds	r3, r0, #1
    8ebe:	d000      	beq.n	8ec2 <_lseek_r+0x1a>
    8ec0:	bd70      	pop	{r4, r5, r6, pc}
    8ec2:	6823      	ldr	r3, [r4, #0]
    8ec4:	2b00      	cmp	r3, #0
    8ec6:	d0fb      	beq.n	8ec0 <_lseek_r+0x18>
    8ec8:	602b      	str	r3, [r5, #0]
    8eca:	e7f9      	b.n	8ec0 <_lseek_r+0x18>
    8ecc:	20000ba8 	.word	0x20000ba8

00008ed0 <__ascii_mbtowc>:
    8ed0:	b082      	sub	sp, #8
    8ed2:	2900      	cmp	r1, #0
    8ed4:	d00a      	beq.n	8eec <__ascii_mbtowc+0x1c>
    8ed6:	2a00      	cmp	r2, #0
    8ed8:	d00b      	beq.n	8ef2 <__ascii_mbtowc+0x22>
    8eda:	2b00      	cmp	r3, #0
    8edc:	d00b      	beq.n	8ef6 <__ascii_mbtowc+0x26>
    8ede:	7813      	ldrb	r3, [r2, #0]
    8ee0:	600b      	str	r3, [r1, #0]
    8ee2:	7810      	ldrb	r0, [r2, #0]
    8ee4:	1e43      	subs	r3, r0, #1
    8ee6:	4198      	sbcs	r0, r3
    8ee8:	b002      	add	sp, #8
    8eea:	4770      	bx	lr
    8eec:	a901      	add	r1, sp, #4
    8eee:	2a00      	cmp	r2, #0
    8ef0:	d1f3      	bne.n	8eda <__ascii_mbtowc+0xa>
    8ef2:	2000      	movs	r0, #0
    8ef4:	e7f8      	b.n	8ee8 <__ascii_mbtowc+0x18>
    8ef6:	2002      	movs	r0, #2
    8ef8:	4240      	negs	r0, r0
    8efa:	e7f5      	b.n	8ee8 <__ascii_mbtowc+0x18>

00008efc <_read_r>:
    8efc:	b570      	push	{r4, r5, r6, lr}
    8efe:	0005      	movs	r5, r0
    8f00:	0008      	movs	r0, r1
    8f02:	0011      	movs	r1, r2
    8f04:	2200      	movs	r2, #0
    8f06:	4c06      	ldr	r4, [pc, #24]	; (8f20 <_read_r+0x24>)
    8f08:	6022      	str	r2, [r4, #0]
    8f0a:	001a      	movs	r2, r3
    8f0c:	f7f9 f9ba 	bl	2284 <_read>
    8f10:	1c43      	adds	r3, r0, #1
    8f12:	d000      	beq.n	8f16 <_read_r+0x1a>
    8f14:	bd70      	pop	{r4, r5, r6, pc}
    8f16:	6823      	ldr	r3, [r4, #0]
    8f18:	2b00      	cmp	r3, #0
    8f1a:	d0fb      	beq.n	8f14 <_read_r+0x18>
    8f1c:	602b      	str	r3, [r5, #0]
    8f1e:	e7f9      	b.n	8f14 <_read_r+0x18>
    8f20:	20000ba8 	.word	0x20000ba8

00008f24 <__swbuf_r>:
    8f24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8f26:	0006      	movs	r6, r0
    8f28:	000d      	movs	r5, r1
    8f2a:	0014      	movs	r4, r2
    8f2c:	2800      	cmp	r0, #0
    8f2e:	d002      	beq.n	8f36 <__swbuf_r+0x12>
    8f30:	6b83      	ldr	r3, [r0, #56]	; 0x38
    8f32:	2b00      	cmp	r3, #0
    8f34:	d04e      	beq.n	8fd4 <__swbuf_r+0xb0>
    8f36:	69a3      	ldr	r3, [r4, #24]
    8f38:	60a3      	str	r3, [r4, #8]
    8f3a:	230c      	movs	r3, #12
    8f3c:	5ee0      	ldrsh	r0, [r4, r3]
    8f3e:	b281      	uxth	r1, r0
    8f40:	070b      	lsls	r3, r1, #28
    8f42:	d53c      	bpl.n	8fbe <__swbuf_r+0x9a>
    8f44:	6923      	ldr	r3, [r4, #16]
    8f46:	2b00      	cmp	r3, #0
    8f48:	d039      	beq.n	8fbe <__swbuf_r+0x9a>
    8f4a:	22ff      	movs	r2, #255	; 0xff
    8f4c:	b2ef      	uxtb	r7, r5
    8f4e:	4015      	ands	r5, r2
    8f50:	2280      	movs	r2, #128	; 0x80
    8f52:	0192      	lsls	r2, r2, #6
    8f54:	4211      	tst	r1, r2
    8f56:	d015      	beq.n	8f84 <__swbuf_r+0x60>
    8f58:	6822      	ldr	r2, [r4, #0]
    8f5a:	6961      	ldr	r1, [r4, #20]
    8f5c:	1ad3      	subs	r3, r2, r3
    8f5e:	428b      	cmp	r3, r1
    8f60:	da1b      	bge.n	8f9a <__swbuf_r+0x76>
    8f62:	3301      	adds	r3, #1
    8f64:	68a1      	ldr	r1, [r4, #8]
    8f66:	3901      	subs	r1, #1
    8f68:	60a1      	str	r1, [r4, #8]
    8f6a:	1c51      	adds	r1, r2, #1
    8f6c:	6021      	str	r1, [r4, #0]
    8f6e:	7017      	strb	r7, [r2, #0]
    8f70:	6962      	ldr	r2, [r4, #20]
    8f72:	429a      	cmp	r2, r3
    8f74:	d01a      	beq.n	8fac <__swbuf_r+0x88>
    8f76:	89a3      	ldrh	r3, [r4, #12]
    8f78:	07db      	lsls	r3, r3, #31
    8f7a:	d501      	bpl.n	8f80 <__swbuf_r+0x5c>
    8f7c:	2d0a      	cmp	r5, #10
    8f7e:	d015      	beq.n	8fac <__swbuf_r+0x88>
    8f80:	0028      	movs	r0, r5
    8f82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8f84:	4302      	orrs	r2, r0
    8f86:	6e61      	ldr	r1, [r4, #100]	; 0x64
    8f88:	81a2      	strh	r2, [r4, #12]
    8f8a:	4a14      	ldr	r2, [pc, #80]	; (8fdc <__swbuf_r+0xb8>)
    8f8c:	400a      	ands	r2, r1
    8f8e:	6662      	str	r2, [r4, #100]	; 0x64
    8f90:	6961      	ldr	r1, [r4, #20]
    8f92:	6822      	ldr	r2, [r4, #0]
    8f94:	1ad3      	subs	r3, r2, r3
    8f96:	428b      	cmp	r3, r1
    8f98:	dbe3      	blt.n	8f62 <__swbuf_r+0x3e>
    8f9a:	0021      	movs	r1, r4
    8f9c:	0030      	movs	r0, r6
    8f9e:	f7fe f879 	bl	7094 <_fflush_r>
    8fa2:	2800      	cmp	r0, #0
    8fa4:	d108      	bne.n	8fb8 <__swbuf_r+0x94>
    8fa6:	6822      	ldr	r2, [r4, #0]
    8fa8:	2301      	movs	r3, #1
    8faa:	e7db      	b.n	8f64 <__swbuf_r+0x40>
    8fac:	0021      	movs	r1, r4
    8fae:	0030      	movs	r0, r6
    8fb0:	f7fe f870 	bl	7094 <_fflush_r>
    8fb4:	2800      	cmp	r0, #0
    8fb6:	d0e3      	beq.n	8f80 <__swbuf_r+0x5c>
    8fb8:	2501      	movs	r5, #1
    8fba:	426d      	negs	r5, r5
    8fbc:	e7e0      	b.n	8f80 <__swbuf_r+0x5c>
    8fbe:	0021      	movs	r1, r4
    8fc0:	0030      	movs	r0, r6
    8fc2:	f7fc fed3 	bl	5d6c <__swsetup_r>
    8fc6:	2800      	cmp	r0, #0
    8fc8:	d1f6      	bne.n	8fb8 <__swbuf_r+0x94>
    8fca:	230c      	movs	r3, #12
    8fcc:	5ee0      	ldrsh	r0, [r4, r3]
    8fce:	6923      	ldr	r3, [r4, #16]
    8fd0:	b281      	uxth	r1, r0
    8fd2:	e7ba      	b.n	8f4a <__swbuf_r+0x26>
    8fd4:	f7fe f8b8 	bl	7148 <__sinit>
    8fd8:	e7ad      	b.n	8f36 <__swbuf_r+0x12>
    8fda:	46c0      	nop			; (mov r8, r8)
    8fdc:	ffffdfff 	.word	0xffffdfff

00008fe0 <_wcrtomb_r>:
    8fe0:	b570      	push	{r4, r5, r6, lr}
    8fe2:	001d      	movs	r5, r3
    8fe4:	4b11      	ldr	r3, [pc, #68]	; (902c <_wcrtomb_r+0x4c>)
    8fe6:	b084      	sub	sp, #16
    8fe8:	681b      	ldr	r3, [r3, #0]
    8fea:	0004      	movs	r4, r0
    8fec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    8fee:	2900      	cmp	r1, #0
    8ff0:	d00e      	beq.n	9010 <_wcrtomb_r+0x30>
    8ff2:	2b00      	cmp	r3, #0
    8ff4:	d016      	beq.n	9024 <_wcrtomb_r+0x44>
    8ff6:	20e0      	movs	r0, #224	; 0xe0
    8ff8:	581e      	ldr	r6, [r3, r0]
    8ffa:	002b      	movs	r3, r5
    8ffc:	0020      	movs	r0, r4
    8ffe:	47b0      	blx	r6
    9000:	1c43      	adds	r3, r0, #1
    9002:	d103      	bne.n	900c <_wcrtomb_r+0x2c>
    9004:	2300      	movs	r3, #0
    9006:	602b      	str	r3, [r5, #0]
    9008:	338a      	adds	r3, #138	; 0x8a
    900a:	6023      	str	r3, [r4, #0]
    900c:	b004      	add	sp, #16
    900e:	bd70      	pop	{r4, r5, r6, pc}
    9010:	2b00      	cmp	r3, #0
    9012:	d009      	beq.n	9028 <_wcrtomb_r+0x48>
    9014:	22e0      	movs	r2, #224	; 0xe0
    9016:	a901      	add	r1, sp, #4
    9018:	589e      	ldr	r6, [r3, r2]
    901a:	0020      	movs	r0, r4
    901c:	002b      	movs	r3, r5
    901e:	2200      	movs	r2, #0
    9020:	47b0      	blx	r6
    9022:	e7ed      	b.n	9000 <_wcrtomb_r+0x20>
    9024:	4b02      	ldr	r3, [pc, #8]	; (9030 <_wcrtomb_r+0x50>)
    9026:	e7e6      	b.n	8ff6 <_wcrtomb_r+0x16>
    9028:	4b01      	ldr	r3, [pc, #4]	; (9030 <_wcrtomb_r+0x50>)
    902a:	e7f3      	b.n	9014 <_wcrtomb_r+0x34>
    902c:	2000007c 	.word	0x2000007c
    9030:	200008bc 	.word	0x200008bc

00009034 <__ascii_wctomb>:
    9034:	2900      	cmp	r1, #0
    9036:	d004      	beq.n	9042 <__ascii_wctomb+0xe>
    9038:	2aff      	cmp	r2, #255	; 0xff
    903a:	d804      	bhi.n	9046 <__ascii_wctomb+0x12>
    903c:	2001      	movs	r0, #1
    903e:	700a      	strb	r2, [r1, #0]
    9040:	4770      	bx	lr
    9042:	2000      	movs	r0, #0
    9044:	e7fc      	b.n	9040 <__ascii_wctomb+0xc>
    9046:	238a      	movs	r3, #138	; 0x8a
    9048:	6003      	str	r3, [r0, #0]
    904a:	2001      	movs	r0, #1
    904c:	4240      	negs	r0, r0
    904e:	e7f7      	b.n	9040 <__ascii_wctomb+0xc>

00009050 <__divsi3>:
    9050:	4603      	mov	r3, r0
    9052:	430b      	orrs	r3, r1
    9054:	d47f      	bmi.n	9156 <__divsi3+0x106>
    9056:	2200      	movs	r2, #0
    9058:	0843      	lsrs	r3, r0, #1
    905a:	428b      	cmp	r3, r1
    905c:	d374      	bcc.n	9148 <__divsi3+0xf8>
    905e:	0903      	lsrs	r3, r0, #4
    9060:	428b      	cmp	r3, r1
    9062:	d35f      	bcc.n	9124 <__divsi3+0xd4>
    9064:	0a03      	lsrs	r3, r0, #8
    9066:	428b      	cmp	r3, r1
    9068:	d344      	bcc.n	90f4 <__divsi3+0xa4>
    906a:	0b03      	lsrs	r3, r0, #12
    906c:	428b      	cmp	r3, r1
    906e:	d328      	bcc.n	90c2 <__divsi3+0x72>
    9070:	0c03      	lsrs	r3, r0, #16
    9072:	428b      	cmp	r3, r1
    9074:	d30d      	bcc.n	9092 <__divsi3+0x42>
    9076:	22ff      	movs	r2, #255	; 0xff
    9078:	0209      	lsls	r1, r1, #8
    907a:	ba12      	rev	r2, r2
    907c:	0c03      	lsrs	r3, r0, #16
    907e:	428b      	cmp	r3, r1
    9080:	d302      	bcc.n	9088 <__divsi3+0x38>
    9082:	1212      	asrs	r2, r2, #8
    9084:	0209      	lsls	r1, r1, #8
    9086:	d065      	beq.n	9154 <__divsi3+0x104>
    9088:	0b03      	lsrs	r3, r0, #12
    908a:	428b      	cmp	r3, r1
    908c:	d319      	bcc.n	90c2 <__divsi3+0x72>
    908e:	e000      	b.n	9092 <__divsi3+0x42>
    9090:	0a09      	lsrs	r1, r1, #8
    9092:	0bc3      	lsrs	r3, r0, #15
    9094:	428b      	cmp	r3, r1
    9096:	d301      	bcc.n	909c <__divsi3+0x4c>
    9098:	03cb      	lsls	r3, r1, #15
    909a:	1ac0      	subs	r0, r0, r3
    909c:	4152      	adcs	r2, r2
    909e:	0b83      	lsrs	r3, r0, #14
    90a0:	428b      	cmp	r3, r1
    90a2:	d301      	bcc.n	90a8 <__divsi3+0x58>
    90a4:	038b      	lsls	r3, r1, #14
    90a6:	1ac0      	subs	r0, r0, r3
    90a8:	4152      	adcs	r2, r2
    90aa:	0b43      	lsrs	r3, r0, #13
    90ac:	428b      	cmp	r3, r1
    90ae:	d301      	bcc.n	90b4 <__divsi3+0x64>
    90b0:	034b      	lsls	r3, r1, #13
    90b2:	1ac0      	subs	r0, r0, r3
    90b4:	4152      	adcs	r2, r2
    90b6:	0b03      	lsrs	r3, r0, #12
    90b8:	428b      	cmp	r3, r1
    90ba:	d301      	bcc.n	90c0 <__divsi3+0x70>
    90bc:	030b      	lsls	r3, r1, #12
    90be:	1ac0      	subs	r0, r0, r3
    90c0:	4152      	adcs	r2, r2
    90c2:	0ac3      	lsrs	r3, r0, #11
    90c4:	428b      	cmp	r3, r1
    90c6:	d301      	bcc.n	90cc <__divsi3+0x7c>
    90c8:	02cb      	lsls	r3, r1, #11
    90ca:	1ac0      	subs	r0, r0, r3
    90cc:	4152      	adcs	r2, r2
    90ce:	0a83      	lsrs	r3, r0, #10
    90d0:	428b      	cmp	r3, r1
    90d2:	d301      	bcc.n	90d8 <__divsi3+0x88>
    90d4:	028b      	lsls	r3, r1, #10
    90d6:	1ac0      	subs	r0, r0, r3
    90d8:	4152      	adcs	r2, r2
    90da:	0a43      	lsrs	r3, r0, #9
    90dc:	428b      	cmp	r3, r1
    90de:	d301      	bcc.n	90e4 <__divsi3+0x94>
    90e0:	024b      	lsls	r3, r1, #9
    90e2:	1ac0      	subs	r0, r0, r3
    90e4:	4152      	adcs	r2, r2
    90e6:	0a03      	lsrs	r3, r0, #8
    90e8:	428b      	cmp	r3, r1
    90ea:	d301      	bcc.n	90f0 <__divsi3+0xa0>
    90ec:	020b      	lsls	r3, r1, #8
    90ee:	1ac0      	subs	r0, r0, r3
    90f0:	4152      	adcs	r2, r2
    90f2:	d2cd      	bcs.n	9090 <__divsi3+0x40>
    90f4:	09c3      	lsrs	r3, r0, #7
    90f6:	428b      	cmp	r3, r1
    90f8:	d301      	bcc.n	90fe <__divsi3+0xae>
    90fa:	01cb      	lsls	r3, r1, #7
    90fc:	1ac0      	subs	r0, r0, r3
    90fe:	4152      	adcs	r2, r2
    9100:	0983      	lsrs	r3, r0, #6
    9102:	428b      	cmp	r3, r1
    9104:	d301      	bcc.n	910a <__divsi3+0xba>
    9106:	018b      	lsls	r3, r1, #6
    9108:	1ac0      	subs	r0, r0, r3
    910a:	4152      	adcs	r2, r2
    910c:	0943      	lsrs	r3, r0, #5
    910e:	428b      	cmp	r3, r1
    9110:	d301      	bcc.n	9116 <__divsi3+0xc6>
    9112:	014b      	lsls	r3, r1, #5
    9114:	1ac0      	subs	r0, r0, r3
    9116:	4152      	adcs	r2, r2
    9118:	0903      	lsrs	r3, r0, #4
    911a:	428b      	cmp	r3, r1
    911c:	d301      	bcc.n	9122 <__divsi3+0xd2>
    911e:	010b      	lsls	r3, r1, #4
    9120:	1ac0      	subs	r0, r0, r3
    9122:	4152      	adcs	r2, r2
    9124:	08c3      	lsrs	r3, r0, #3
    9126:	428b      	cmp	r3, r1
    9128:	d301      	bcc.n	912e <__divsi3+0xde>
    912a:	00cb      	lsls	r3, r1, #3
    912c:	1ac0      	subs	r0, r0, r3
    912e:	4152      	adcs	r2, r2
    9130:	0883      	lsrs	r3, r0, #2
    9132:	428b      	cmp	r3, r1
    9134:	d301      	bcc.n	913a <__divsi3+0xea>
    9136:	008b      	lsls	r3, r1, #2
    9138:	1ac0      	subs	r0, r0, r3
    913a:	4152      	adcs	r2, r2
    913c:	0843      	lsrs	r3, r0, #1
    913e:	428b      	cmp	r3, r1
    9140:	d301      	bcc.n	9146 <__divsi3+0xf6>
    9142:	004b      	lsls	r3, r1, #1
    9144:	1ac0      	subs	r0, r0, r3
    9146:	4152      	adcs	r2, r2
    9148:	1a41      	subs	r1, r0, r1
    914a:	d200      	bcs.n	914e <__divsi3+0xfe>
    914c:	4601      	mov	r1, r0
    914e:	4152      	adcs	r2, r2
    9150:	4610      	mov	r0, r2
    9152:	4770      	bx	lr
    9154:	e05d      	b.n	9212 <__divsi3+0x1c2>
    9156:	0fca      	lsrs	r2, r1, #31
    9158:	d000      	beq.n	915c <__divsi3+0x10c>
    915a:	4249      	negs	r1, r1
    915c:	1003      	asrs	r3, r0, #32
    915e:	d300      	bcc.n	9162 <__divsi3+0x112>
    9160:	4240      	negs	r0, r0
    9162:	4053      	eors	r3, r2
    9164:	2200      	movs	r2, #0
    9166:	469c      	mov	ip, r3
    9168:	0903      	lsrs	r3, r0, #4
    916a:	428b      	cmp	r3, r1
    916c:	d32d      	bcc.n	91ca <__divsi3+0x17a>
    916e:	0a03      	lsrs	r3, r0, #8
    9170:	428b      	cmp	r3, r1
    9172:	d312      	bcc.n	919a <__divsi3+0x14a>
    9174:	22fc      	movs	r2, #252	; 0xfc
    9176:	0189      	lsls	r1, r1, #6
    9178:	ba12      	rev	r2, r2
    917a:	0a03      	lsrs	r3, r0, #8
    917c:	428b      	cmp	r3, r1
    917e:	d30c      	bcc.n	919a <__divsi3+0x14a>
    9180:	0189      	lsls	r1, r1, #6
    9182:	1192      	asrs	r2, r2, #6
    9184:	428b      	cmp	r3, r1
    9186:	d308      	bcc.n	919a <__divsi3+0x14a>
    9188:	0189      	lsls	r1, r1, #6
    918a:	1192      	asrs	r2, r2, #6
    918c:	428b      	cmp	r3, r1
    918e:	d304      	bcc.n	919a <__divsi3+0x14a>
    9190:	0189      	lsls	r1, r1, #6
    9192:	d03a      	beq.n	920a <__divsi3+0x1ba>
    9194:	1192      	asrs	r2, r2, #6
    9196:	e000      	b.n	919a <__divsi3+0x14a>
    9198:	0989      	lsrs	r1, r1, #6
    919a:	09c3      	lsrs	r3, r0, #7
    919c:	428b      	cmp	r3, r1
    919e:	d301      	bcc.n	91a4 <__divsi3+0x154>
    91a0:	01cb      	lsls	r3, r1, #7
    91a2:	1ac0      	subs	r0, r0, r3
    91a4:	4152      	adcs	r2, r2
    91a6:	0983      	lsrs	r3, r0, #6
    91a8:	428b      	cmp	r3, r1
    91aa:	d301      	bcc.n	91b0 <__divsi3+0x160>
    91ac:	018b      	lsls	r3, r1, #6
    91ae:	1ac0      	subs	r0, r0, r3
    91b0:	4152      	adcs	r2, r2
    91b2:	0943      	lsrs	r3, r0, #5
    91b4:	428b      	cmp	r3, r1
    91b6:	d301      	bcc.n	91bc <__divsi3+0x16c>
    91b8:	014b      	lsls	r3, r1, #5
    91ba:	1ac0      	subs	r0, r0, r3
    91bc:	4152      	adcs	r2, r2
    91be:	0903      	lsrs	r3, r0, #4
    91c0:	428b      	cmp	r3, r1
    91c2:	d301      	bcc.n	91c8 <__divsi3+0x178>
    91c4:	010b      	lsls	r3, r1, #4
    91c6:	1ac0      	subs	r0, r0, r3
    91c8:	4152      	adcs	r2, r2
    91ca:	08c3      	lsrs	r3, r0, #3
    91cc:	428b      	cmp	r3, r1
    91ce:	d301      	bcc.n	91d4 <__divsi3+0x184>
    91d0:	00cb      	lsls	r3, r1, #3
    91d2:	1ac0      	subs	r0, r0, r3
    91d4:	4152      	adcs	r2, r2
    91d6:	0883      	lsrs	r3, r0, #2
    91d8:	428b      	cmp	r3, r1
    91da:	d301      	bcc.n	91e0 <__divsi3+0x190>
    91dc:	008b      	lsls	r3, r1, #2
    91de:	1ac0      	subs	r0, r0, r3
    91e0:	4152      	adcs	r2, r2
    91e2:	d2d9      	bcs.n	9198 <__divsi3+0x148>
    91e4:	0843      	lsrs	r3, r0, #1
    91e6:	428b      	cmp	r3, r1
    91e8:	d301      	bcc.n	91ee <__divsi3+0x19e>
    91ea:	004b      	lsls	r3, r1, #1
    91ec:	1ac0      	subs	r0, r0, r3
    91ee:	4152      	adcs	r2, r2
    91f0:	1a41      	subs	r1, r0, r1
    91f2:	d200      	bcs.n	91f6 <__divsi3+0x1a6>
    91f4:	4601      	mov	r1, r0
    91f6:	4663      	mov	r3, ip
    91f8:	4152      	adcs	r2, r2
    91fa:	105b      	asrs	r3, r3, #1
    91fc:	4610      	mov	r0, r2
    91fe:	d301      	bcc.n	9204 <__divsi3+0x1b4>
    9200:	4240      	negs	r0, r0
    9202:	2b00      	cmp	r3, #0
    9204:	d500      	bpl.n	9208 <__divsi3+0x1b8>
    9206:	4249      	negs	r1, r1
    9208:	4770      	bx	lr
    920a:	4663      	mov	r3, ip
    920c:	105b      	asrs	r3, r3, #1
    920e:	d300      	bcc.n	9212 <__divsi3+0x1c2>
    9210:	4240      	negs	r0, r0
    9212:	b501      	push	{r0, lr}
    9214:	2000      	movs	r0, #0
    9216:	f7f9 fb8d 	bl	2934 <__aeabi_idiv0>
    921a:	bd02      	pop	{r1, pc}

0000921c <__aeabi_idivmod>:
    921c:	2900      	cmp	r1, #0
    921e:	d0f8      	beq.n	9212 <__divsi3+0x1c2>
    9220:	e716      	b.n	9050 <__divsi3>
    9222:	4770      	bx	lr

00009224 <__aeabi_dadd>:
    9224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9226:	4645      	mov	r5, r8
    9228:	46de      	mov	lr, fp
    922a:	4657      	mov	r7, sl
    922c:	464e      	mov	r6, r9
    922e:	030c      	lsls	r4, r1, #12
    9230:	b5e0      	push	{r5, r6, r7, lr}
    9232:	004e      	lsls	r6, r1, #1
    9234:	0fc9      	lsrs	r1, r1, #31
    9236:	4688      	mov	r8, r1
    9238:	000d      	movs	r5, r1
    923a:	0a61      	lsrs	r1, r4, #9
    923c:	0f44      	lsrs	r4, r0, #29
    923e:	430c      	orrs	r4, r1
    9240:	00c7      	lsls	r7, r0, #3
    9242:	0319      	lsls	r1, r3, #12
    9244:	0058      	lsls	r0, r3, #1
    9246:	0fdb      	lsrs	r3, r3, #31
    9248:	469b      	mov	fp, r3
    924a:	0a4b      	lsrs	r3, r1, #9
    924c:	0f51      	lsrs	r1, r2, #29
    924e:	430b      	orrs	r3, r1
    9250:	0d76      	lsrs	r6, r6, #21
    9252:	0d40      	lsrs	r0, r0, #21
    9254:	0019      	movs	r1, r3
    9256:	00d2      	lsls	r2, r2, #3
    9258:	45d8      	cmp	r8, fp
    925a:	d100      	bne.n	925e <__aeabi_dadd+0x3a>
    925c:	e0ae      	b.n	93bc <__aeabi_dadd+0x198>
    925e:	1a35      	subs	r5, r6, r0
    9260:	2d00      	cmp	r5, #0
    9262:	dc00      	bgt.n	9266 <__aeabi_dadd+0x42>
    9264:	e0f6      	b.n	9454 <__aeabi_dadd+0x230>
    9266:	2800      	cmp	r0, #0
    9268:	d10f      	bne.n	928a <__aeabi_dadd+0x66>
    926a:	4313      	orrs	r3, r2
    926c:	d100      	bne.n	9270 <__aeabi_dadd+0x4c>
    926e:	e0db      	b.n	9428 <__aeabi_dadd+0x204>
    9270:	1e6b      	subs	r3, r5, #1
    9272:	2b00      	cmp	r3, #0
    9274:	d000      	beq.n	9278 <__aeabi_dadd+0x54>
    9276:	e137      	b.n	94e8 <__aeabi_dadd+0x2c4>
    9278:	1aba      	subs	r2, r7, r2
    927a:	4297      	cmp	r7, r2
    927c:	41bf      	sbcs	r7, r7
    927e:	1a64      	subs	r4, r4, r1
    9280:	427f      	negs	r7, r7
    9282:	1be4      	subs	r4, r4, r7
    9284:	2601      	movs	r6, #1
    9286:	0017      	movs	r7, r2
    9288:	e024      	b.n	92d4 <__aeabi_dadd+0xb0>
    928a:	4bc6      	ldr	r3, [pc, #792]	; (95a4 <__aeabi_dadd+0x380>)
    928c:	429e      	cmp	r6, r3
    928e:	d04d      	beq.n	932c <__aeabi_dadd+0x108>
    9290:	2380      	movs	r3, #128	; 0x80
    9292:	041b      	lsls	r3, r3, #16
    9294:	4319      	orrs	r1, r3
    9296:	2d38      	cmp	r5, #56	; 0x38
    9298:	dd00      	ble.n	929c <__aeabi_dadd+0x78>
    929a:	e107      	b.n	94ac <__aeabi_dadd+0x288>
    929c:	2d1f      	cmp	r5, #31
    929e:	dd00      	ble.n	92a2 <__aeabi_dadd+0x7e>
    92a0:	e138      	b.n	9514 <__aeabi_dadd+0x2f0>
    92a2:	2020      	movs	r0, #32
    92a4:	1b43      	subs	r3, r0, r5
    92a6:	469a      	mov	sl, r3
    92a8:	000b      	movs	r3, r1
    92aa:	4650      	mov	r0, sl
    92ac:	4083      	lsls	r3, r0
    92ae:	4699      	mov	r9, r3
    92b0:	0013      	movs	r3, r2
    92b2:	4648      	mov	r0, r9
    92b4:	40eb      	lsrs	r3, r5
    92b6:	4318      	orrs	r0, r3
    92b8:	0003      	movs	r3, r0
    92ba:	4650      	mov	r0, sl
    92bc:	4082      	lsls	r2, r0
    92be:	1e50      	subs	r0, r2, #1
    92c0:	4182      	sbcs	r2, r0
    92c2:	40e9      	lsrs	r1, r5
    92c4:	431a      	orrs	r2, r3
    92c6:	1aba      	subs	r2, r7, r2
    92c8:	1a61      	subs	r1, r4, r1
    92ca:	4297      	cmp	r7, r2
    92cc:	41a4      	sbcs	r4, r4
    92ce:	0017      	movs	r7, r2
    92d0:	4264      	negs	r4, r4
    92d2:	1b0c      	subs	r4, r1, r4
    92d4:	0223      	lsls	r3, r4, #8
    92d6:	d562      	bpl.n	939e <__aeabi_dadd+0x17a>
    92d8:	0264      	lsls	r4, r4, #9
    92da:	0a65      	lsrs	r5, r4, #9
    92dc:	2d00      	cmp	r5, #0
    92de:	d100      	bne.n	92e2 <__aeabi_dadd+0xbe>
    92e0:	e0df      	b.n	94a2 <__aeabi_dadd+0x27e>
    92e2:	0028      	movs	r0, r5
    92e4:	f7fa fe9a 	bl	401c <__clzsi2>
    92e8:	0003      	movs	r3, r0
    92ea:	3b08      	subs	r3, #8
    92ec:	2b1f      	cmp	r3, #31
    92ee:	dd00      	ble.n	92f2 <__aeabi_dadd+0xce>
    92f0:	e0d2      	b.n	9498 <__aeabi_dadd+0x274>
    92f2:	2220      	movs	r2, #32
    92f4:	003c      	movs	r4, r7
    92f6:	1ad2      	subs	r2, r2, r3
    92f8:	409d      	lsls	r5, r3
    92fa:	40d4      	lsrs	r4, r2
    92fc:	409f      	lsls	r7, r3
    92fe:	4325      	orrs	r5, r4
    9300:	429e      	cmp	r6, r3
    9302:	dd00      	ble.n	9306 <__aeabi_dadd+0xe2>
    9304:	e0c4      	b.n	9490 <__aeabi_dadd+0x26c>
    9306:	1b9e      	subs	r6, r3, r6
    9308:	1c73      	adds	r3, r6, #1
    930a:	2b1f      	cmp	r3, #31
    930c:	dd00      	ble.n	9310 <__aeabi_dadd+0xec>
    930e:	e0f1      	b.n	94f4 <__aeabi_dadd+0x2d0>
    9310:	2220      	movs	r2, #32
    9312:	0038      	movs	r0, r7
    9314:	0029      	movs	r1, r5
    9316:	1ad2      	subs	r2, r2, r3
    9318:	40d8      	lsrs	r0, r3
    931a:	4091      	lsls	r1, r2
    931c:	4097      	lsls	r7, r2
    931e:	002c      	movs	r4, r5
    9320:	4301      	orrs	r1, r0
    9322:	1e78      	subs	r0, r7, #1
    9324:	4187      	sbcs	r7, r0
    9326:	40dc      	lsrs	r4, r3
    9328:	2600      	movs	r6, #0
    932a:	430f      	orrs	r7, r1
    932c:	077b      	lsls	r3, r7, #29
    932e:	d009      	beq.n	9344 <__aeabi_dadd+0x120>
    9330:	230f      	movs	r3, #15
    9332:	403b      	ands	r3, r7
    9334:	2b04      	cmp	r3, #4
    9336:	d005      	beq.n	9344 <__aeabi_dadd+0x120>
    9338:	1d3b      	adds	r3, r7, #4
    933a:	42bb      	cmp	r3, r7
    933c:	41bf      	sbcs	r7, r7
    933e:	427f      	negs	r7, r7
    9340:	19e4      	adds	r4, r4, r7
    9342:	001f      	movs	r7, r3
    9344:	0223      	lsls	r3, r4, #8
    9346:	d52c      	bpl.n	93a2 <__aeabi_dadd+0x17e>
    9348:	4b96      	ldr	r3, [pc, #600]	; (95a4 <__aeabi_dadd+0x380>)
    934a:	3601      	adds	r6, #1
    934c:	429e      	cmp	r6, r3
    934e:	d100      	bne.n	9352 <__aeabi_dadd+0x12e>
    9350:	e09a      	b.n	9488 <__aeabi_dadd+0x264>
    9352:	4645      	mov	r5, r8
    9354:	4b94      	ldr	r3, [pc, #592]	; (95a8 <__aeabi_dadd+0x384>)
    9356:	08ff      	lsrs	r7, r7, #3
    9358:	401c      	ands	r4, r3
    935a:	0760      	lsls	r0, r4, #29
    935c:	0576      	lsls	r6, r6, #21
    935e:	0264      	lsls	r4, r4, #9
    9360:	4307      	orrs	r7, r0
    9362:	0b24      	lsrs	r4, r4, #12
    9364:	0d76      	lsrs	r6, r6, #21
    9366:	2100      	movs	r1, #0
    9368:	0324      	lsls	r4, r4, #12
    936a:	0b23      	lsrs	r3, r4, #12
    936c:	0d0c      	lsrs	r4, r1, #20
    936e:	4a8f      	ldr	r2, [pc, #572]	; (95ac <__aeabi_dadd+0x388>)
    9370:	0524      	lsls	r4, r4, #20
    9372:	431c      	orrs	r4, r3
    9374:	4014      	ands	r4, r2
    9376:	0533      	lsls	r3, r6, #20
    9378:	4323      	orrs	r3, r4
    937a:	005b      	lsls	r3, r3, #1
    937c:	07ed      	lsls	r5, r5, #31
    937e:	085b      	lsrs	r3, r3, #1
    9380:	432b      	orrs	r3, r5
    9382:	0038      	movs	r0, r7
    9384:	0019      	movs	r1, r3
    9386:	bc3c      	pop	{r2, r3, r4, r5}
    9388:	4690      	mov	r8, r2
    938a:	4699      	mov	r9, r3
    938c:	46a2      	mov	sl, r4
    938e:	46ab      	mov	fp, r5
    9390:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9392:	4664      	mov	r4, ip
    9394:	4304      	orrs	r4, r0
    9396:	d100      	bne.n	939a <__aeabi_dadd+0x176>
    9398:	e211      	b.n	97be <__aeabi_dadd+0x59a>
    939a:	0004      	movs	r4, r0
    939c:	4667      	mov	r7, ip
    939e:	077b      	lsls	r3, r7, #29
    93a0:	d1c6      	bne.n	9330 <__aeabi_dadd+0x10c>
    93a2:	4645      	mov	r5, r8
    93a4:	0760      	lsls	r0, r4, #29
    93a6:	08ff      	lsrs	r7, r7, #3
    93a8:	4307      	orrs	r7, r0
    93aa:	08e4      	lsrs	r4, r4, #3
    93ac:	4b7d      	ldr	r3, [pc, #500]	; (95a4 <__aeabi_dadd+0x380>)
    93ae:	429e      	cmp	r6, r3
    93b0:	d030      	beq.n	9414 <__aeabi_dadd+0x1f0>
    93b2:	0324      	lsls	r4, r4, #12
    93b4:	0576      	lsls	r6, r6, #21
    93b6:	0b24      	lsrs	r4, r4, #12
    93b8:	0d76      	lsrs	r6, r6, #21
    93ba:	e7d4      	b.n	9366 <__aeabi_dadd+0x142>
    93bc:	1a33      	subs	r3, r6, r0
    93be:	469a      	mov	sl, r3
    93c0:	2b00      	cmp	r3, #0
    93c2:	dd78      	ble.n	94b6 <__aeabi_dadd+0x292>
    93c4:	2800      	cmp	r0, #0
    93c6:	d031      	beq.n	942c <__aeabi_dadd+0x208>
    93c8:	4876      	ldr	r0, [pc, #472]	; (95a4 <__aeabi_dadd+0x380>)
    93ca:	4286      	cmp	r6, r0
    93cc:	d0ae      	beq.n	932c <__aeabi_dadd+0x108>
    93ce:	2080      	movs	r0, #128	; 0x80
    93d0:	0400      	lsls	r0, r0, #16
    93d2:	4301      	orrs	r1, r0
    93d4:	4653      	mov	r3, sl
    93d6:	2b38      	cmp	r3, #56	; 0x38
    93d8:	dc00      	bgt.n	93dc <__aeabi_dadd+0x1b8>
    93da:	e0e9      	b.n	95b0 <__aeabi_dadd+0x38c>
    93dc:	430a      	orrs	r2, r1
    93de:	1e51      	subs	r1, r2, #1
    93e0:	418a      	sbcs	r2, r1
    93e2:	2100      	movs	r1, #0
    93e4:	19d2      	adds	r2, r2, r7
    93e6:	42ba      	cmp	r2, r7
    93e8:	41bf      	sbcs	r7, r7
    93ea:	1909      	adds	r1, r1, r4
    93ec:	427c      	negs	r4, r7
    93ee:	0017      	movs	r7, r2
    93f0:	190c      	adds	r4, r1, r4
    93f2:	0223      	lsls	r3, r4, #8
    93f4:	d5d3      	bpl.n	939e <__aeabi_dadd+0x17a>
    93f6:	4b6b      	ldr	r3, [pc, #428]	; (95a4 <__aeabi_dadd+0x380>)
    93f8:	3601      	adds	r6, #1
    93fa:	429e      	cmp	r6, r3
    93fc:	d100      	bne.n	9400 <__aeabi_dadd+0x1dc>
    93fe:	e13a      	b.n	9676 <__aeabi_dadd+0x452>
    9400:	2001      	movs	r0, #1
    9402:	4b69      	ldr	r3, [pc, #420]	; (95a8 <__aeabi_dadd+0x384>)
    9404:	401c      	ands	r4, r3
    9406:	087b      	lsrs	r3, r7, #1
    9408:	4007      	ands	r7, r0
    940a:	431f      	orrs	r7, r3
    940c:	07e0      	lsls	r0, r4, #31
    940e:	4307      	orrs	r7, r0
    9410:	0864      	lsrs	r4, r4, #1
    9412:	e78b      	b.n	932c <__aeabi_dadd+0x108>
    9414:	0023      	movs	r3, r4
    9416:	433b      	orrs	r3, r7
    9418:	d100      	bne.n	941c <__aeabi_dadd+0x1f8>
    941a:	e1cb      	b.n	97b4 <__aeabi_dadd+0x590>
    941c:	2280      	movs	r2, #128	; 0x80
    941e:	0312      	lsls	r2, r2, #12
    9420:	4314      	orrs	r4, r2
    9422:	0324      	lsls	r4, r4, #12
    9424:	0b24      	lsrs	r4, r4, #12
    9426:	e79e      	b.n	9366 <__aeabi_dadd+0x142>
    9428:	002e      	movs	r6, r5
    942a:	e77f      	b.n	932c <__aeabi_dadd+0x108>
    942c:	0008      	movs	r0, r1
    942e:	4310      	orrs	r0, r2
    9430:	d100      	bne.n	9434 <__aeabi_dadd+0x210>
    9432:	e0b4      	b.n	959e <__aeabi_dadd+0x37a>
    9434:	1e58      	subs	r0, r3, #1
    9436:	2800      	cmp	r0, #0
    9438:	d000      	beq.n	943c <__aeabi_dadd+0x218>
    943a:	e0de      	b.n	95fa <__aeabi_dadd+0x3d6>
    943c:	18ba      	adds	r2, r7, r2
    943e:	42ba      	cmp	r2, r7
    9440:	419b      	sbcs	r3, r3
    9442:	1864      	adds	r4, r4, r1
    9444:	425b      	negs	r3, r3
    9446:	18e4      	adds	r4, r4, r3
    9448:	0017      	movs	r7, r2
    944a:	2601      	movs	r6, #1
    944c:	0223      	lsls	r3, r4, #8
    944e:	d5a6      	bpl.n	939e <__aeabi_dadd+0x17a>
    9450:	2602      	movs	r6, #2
    9452:	e7d5      	b.n	9400 <__aeabi_dadd+0x1dc>
    9454:	2d00      	cmp	r5, #0
    9456:	d16e      	bne.n	9536 <__aeabi_dadd+0x312>
    9458:	1c70      	adds	r0, r6, #1
    945a:	0540      	lsls	r0, r0, #21
    945c:	0d40      	lsrs	r0, r0, #21
    945e:	2801      	cmp	r0, #1
    9460:	dc00      	bgt.n	9464 <__aeabi_dadd+0x240>
    9462:	e0f9      	b.n	9658 <__aeabi_dadd+0x434>
    9464:	1ab8      	subs	r0, r7, r2
    9466:	4684      	mov	ip, r0
    9468:	4287      	cmp	r7, r0
    946a:	4180      	sbcs	r0, r0
    946c:	1ae5      	subs	r5, r4, r3
    946e:	4240      	negs	r0, r0
    9470:	1a2d      	subs	r5, r5, r0
    9472:	0228      	lsls	r0, r5, #8
    9474:	d400      	bmi.n	9478 <__aeabi_dadd+0x254>
    9476:	e089      	b.n	958c <__aeabi_dadd+0x368>
    9478:	1bd7      	subs	r7, r2, r7
    947a:	42ba      	cmp	r2, r7
    947c:	4192      	sbcs	r2, r2
    947e:	1b1c      	subs	r4, r3, r4
    9480:	4252      	negs	r2, r2
    9482:	1aa5      	subs	r5, r4, r2
    9484:	46d8      	mov	r8, fp
    9486:	e729      	b.n	92dc <__aeabi_dadd+0xb8>
    9488:	4645      	mov	r5, r8
    948a:	2400      	movs	r4, #0
    948c:	2700      	movs	r7, #0
    948e:	e76a      	b.n	9366 <__aeabi_dadd+0x142>
    9490:	4c45      	ldr	r4, [pc, #276]	; (95a8 <__aeabi_dadd+0x384>)
    9492:	1af6      	subs	r6, r6, r3
    9494:	402c      	ands	r4, r5
    9496:	e749      	b.n	932c <__aeabi_dadd+0x108>
    9498:	003d      	movs	r5, r7
    949a:	3828      	subs	r0, #40	; 0x28
    949c:	4085      	lsls	r5, r0
    949e:	2700      	movs	r7, #0
    94a0:	e72e      	b.n	9300 <__aeabi_dadd+0xdc>
    94a2:	0038      	movs	r0, r7
    94a4:	f7fa fdba 	bl	401c <__clzsi2>
    94a8:	3020      	adds	r0, #32
    94aa:	e71d      	b.n	92e8 <__aeabi_dadd+0xc4>
    94ac:	430a      	orrs	r2, r1
    94ae:	1e51      	subs	r1, r2, #1
    94b0:	418a      	sbcs	r2, r1
    94b2:	2100      	movs	r1, #0
    94b4:	e707      	b.n	92c6 <__aeabi_dadd+0xa2>
    94b6:	2b00      	cmp	r3, #0
    94b8:	d000      	beq.n	94bc <__aeabi_dadd+0x298>
    94ba:	e0f3      	b.n	96a4 <__aeabi_dadd+0x480>
    94bc:	1c70      	adds	r0, r6, #1
    94be:	0543      	lsls	r3, r0, #21
    94c0:	0d5b      	lsrs	r3, r3, #21
    94c2:	2b01      	cmp	r3, #1
    94c4:	dc00      	bgt.n	94c8 <__aeabi_dadd+0x2a4>
    94c6:	e0ad      	b.n	9624 <__aeabi_dadd+0x400>
    94c8:	4b36      	ldr	r3, [pc, #216]	; (95a4 <__aeabi_dadd+0x380>)
    94ca:	4298      	cmp	r0, r3
    94cc:	d100      	bne.n	94d0 <__aeabi_dadd+0x2ac>
    94ce:	e0d1      	b.n	9674 <__aeabi_dadd+0x450>
    94d0:	18ba      	adds	r2, r7, r2
    94d2:	42ba      	cmp	r2, r7
    94d4:	41bf      	sbcs	r7, r7
    94d6:	1864      	adds	r4, r4, r1
    94d8:	427f      	negs	r7, r7
    94da:	19e4      	adds	r4, r4, r7
    94dc:	07e7      	lsls	r7, r4, #31
    94de:	0852      	lsrs	r2, r2, #1
    94e0:	4317      	orrs	r7, r2
    94e2:	0864      	lsrs	r4, r4, #1
    94e4:	0006      	movs	r6, r0
    94e6:	e721      	b.n	932c <__aeabi_dadd+0x108>
    94e8:	482e      	ldr	r0, [pc, #184]	; (95a4 <__aeabi_dadd+0x380>)
    94ea:	4285      	cmp	r5, r0
    94ec:	d100      	bne.n	94f0 <__aeabi_dadd+0x2cc>
    94ee:	e093      	b.n	9618 <__aeabi_dadd+0x3f4>
    94f0:	001d      	movs	r5, r3
    94f2:	e6d0      	b.n	9296 <__aeabi_dadd+0x72>
    94f4:	0029      	movs	r1, r5
    94f6:	3e1f      	subs	r6, #31
    94f8:	40f1      	lsrs	r1, r6
    94fa:	2b20      	cmp	r3, #32
    94fc:	d100      	bne.n	9500 <__aeabi_dadd+0x2dc>
    94fe:	e08d      	b.n	961c <__aeabi_dadd+0x3f8>
    9500:	2240      	movs	r2, #64	; 0x40
    9502:	1ad3      	subs	r3, r2, r3
    9504:	409d      	lsls	r5, r3
    9506:	432f      	orrs	r7, r5
    9508:	1e7d      	subs	r5, r7, #1
    950a:	41af      	sbcs	r7, r5
    950c:	2400      	movs	r4, #0
    950e:	430f      	orrs	r7, r1
    9510:	2600      	movs	r6, #0
    9512:	e744      	b.n	939e <__aeabi_dadd+0x17a>
    9514:	002b      	movs	r3, r5
    9516:	0008      	movs	r0, r1
    9518:	3b20      	subs	r3, #32
    951a:	40d8      	lsrs	r0, r3
    951c:	0003      	movs	r3, r0
    951e:	2d20      	cmp	r5, #32
    9520:	d100      	bne.n	9524 <__aeabi_dadd+0x300>
    9522:	e07d      	b.n	9620 <__aeabi_dadd+0x3fc>
    9524:	2040      	movs	r0, #64	; 0x40
    9526:	1b45      	subs	r5, r0, r5
    9528:	40a9      	lsls	r1, r5
    952a:	430a      	orrs	r2, r1
    952c:	1e51      	subs	r1, r2, #1
    952e:	418a      	sbcs	r2, r1
    9530:	2100      	movs	r1, #0
    9532:	431a      	orrs	r2, r3
    9534:	e6c7      	b.n	92c6 <__aeabi_dadd+0xa2>
    9536:	2e00      	cmp	r6, #0
    9538:	d050      	beq.n	95dc <__aeabi_dadd+0x3b8>
    953a:	4e1a      	ldr	r6, [pc, #104]	; (95a4 <__aeabi_dadd+0x380>)
    953c:	42b0      	cmp	r0, r6
    953e:	d057      	beq.n	95f0 <__aeabi_dadd+0x3cc>
    9540:	2680      	movs	r6, #128	; 0x80
    9542:	426b      	negs	r3, r5
    9544:	4699      	mov	r9, r3
    9546:	0436      	lsls	r6, r6, #16
    9548:	4334      	orrs	r4, r6
    954a:	464b      	mov	r3, r9
    954c:	2b38      	cmp	r3, #56	; 0x38
    954e:	dd00      	ble.n	9552 <__aeabi_dadd+0x32e>
    9550:	e0d6      	b.n	9700 <__aeabi_dadd+0x4dc>
    9552:	2b1f      	cmp	r3, #31
    9554:	dd00      	ble.n	9558 <__aeabi_dadd+0x334>
    9556:	e135      	b.n	97c4 <__aeabi_dadd+0x5a0>
    9558:	2620      	movs	r6, #32
    955a:	1af5      	subs	r5, r6, r3
    955c:	0026      	movs	r6, r4
    955e:	40ae      	lsls	r6, r5
    9560:	46b2      	mov	sl, r6
    9562:	003e      	movs	r6, r7
    9564:	40de      	lsrs	r6, r3
    9566:	46ac      	mov	ip, r5
    9568:	0035      	movs	r5, r6
    956a:	4656      	mov	r6, sl
    956c:	432e      	orrs	r6, r5
    956e:	4665      	mov	r5, ip
    9570:	40af      	lsls	r7, r5
    9572:	1e7d      	subs	r5, r7, #1
    9574:	41af      	sbcs	r7, r5
    9576:	40dc      	lsrs	r4, r3
    9578:	4337      	orrs	r7, r6
    957a:	1bd7      	subs	r7, r2, r7
    957c:	42ba      	cmp	r2, r7
    957e:	4192      	sbcs	r2, r2
    9580:	1b0c      	subs	r4, r1, r4
    9582:	4252      	negs	r2, r2
    9584:	1aa4      	subs	r4, r4, r2
    9586:	0006      	movs	r6, r0
    9588:	46d8      	mov	r8, fp
    958a:	e6a3      	b.n	92d4 <__aeabi_dadd+0xb0>
    958c:	4664      	mov	r4, ip
    958e:	4667      	mov	r7, ip
    9590:	432c      	orrs	r4, r5
    9592:	d000      	beq.n	9596 <__aeabi_dadd+0x372>
    9594:	e6a2      	b.n	92dc <__aeabi_dadd+0xb8>
    9596:	2500      	movs	r5, #0
    9598:	2600      	movs	r6, #0
    959a:	2700      	movs	r7, #0
    959c:	e706      	b.n	93ac <__aeabi_dadd+0x188>
    959e:	001e      	movs	r6, r3
    95a0:	e6c4      	b.n	932c <__aeabi_dadd+0x108>
    95a2:	46c0      	nop			; (mov r8, r8)
    95a4:	000007ff 	.word	0x000007ff
    95a8:	ff7fffff 	.word	0xff7fffff
    95ac:	800fffff 	.word	0x800fffff
    95b0:	2b1f      	cmp	r3, #31
    95b2:	dc63      	bgt.n	967c <__aeabi_dadd+0x458>
    95b4:	2020      	movs	r0, #32
    95b6:	1ac3      	subs	r3, r0, r3
    95b8:	0008      	movs	r0, r1
    95ba:	4098      	lsls	r0, r3
    95bc:	469c      	mov	ip, r3
    95be:	4683      	mov	fp, r0
    95c0:	4653      	mov	r3, sl
    95c2:	0010      	movs	r0, r2
    95c4:	40d8      	lsrs	r0, r3
    95c6:	0003      	movs	r3, r0
    95c8:	4658      	mov	r0, fp
    95ca:	4318      	orrs	r0, r3
    95cc:	4663      	mov	r3, ip
    95ce:	409a      	lsls	r2, r3
    95d0:	1e53      	subs	r3, r2, #1
    95d2:	419a      	sbcs	r2, r3
    95d4:	4653      	mov	r3, sl
    95d6:	4302      	orrs	r2, r0
    95d8:	40d9      	lsrs	r1, r3
    95da:	e703      	b.n	93e4 <__aeabi_dadd+0x1c0>
    95dc:	0026      	movs	r6, r4
    95de:	433e      	orrs	r6, r7
    95e0:	d006      	beq.n	95f0 <__aeabi_dadd+0x3cc>
    95e2:	43eb      	mvns	r3, r5
    95e4:	4699      	mov	r9, r3
    95e6:	2b00      	cmp	r3, #0
    95e8:	d0c7      	beq.n	957a <__aeabi_dadd+0x356>
    95ea:	4e94      	ldr	r6, [pc, #592]	; (983c <__aeabi_dadd+0x618>)
    95ec:	42b0      	cmp	r0, r6
    95ee:	d1ac      	bne.n	954a <__aeabi_dadd+0x326>
    95f0:	000c      	movs	r4, r1
    95f2:	0017      	movs	r7, r2
    95f4:	0006      	movs	r6, r0
    95f6:	46d8      	mov	r8, fp
    95f8:	e698      	b.n	932c <__aeabi_dadd+0x108>
    95fa:	4b90      	ldr	r3, [pc, #576]	; (983c <__aeabi_dadd+0x618>)
    95fc:	459a      	cmp	sl, r3
    95fe:	d00b      	beq.n	9618 <__aeabi_dadd+0x3f4>
    9600:	4682      	mov	sl, r0
    9602:	e6e7      	b.n	93d4 <__aeabi_dadd+0x1b0>
    9604:	2800      	cmp	r0, #0
    9606:	d000      	beq.n	960a <__aeabi_dadd+0x3e6>
    9608:	e09e      	b.n	9748 <__aeabi_dadd+0x524>
    960a:	0018      	movs	r0, r3
    960c:	4310      	orrs	r0, r2
    960e:	d100      	bne.n	9612 <__aeabi_dadd+0x3ee>
    9610:	e0e9      	b.n	97e6 <__aeabi_dadd+0x5c2>
    9612:	001c      	movs	r4, r3
    9614:	0017      	movs	r7, r2
    9616:	46d8      	mov	r8, fp
    9618:	4e88      	ldr	r6, [pc, #544]	; (983c <__aeabi_dadd+0x618>)
    961a:	e687      	b.n	932c <__aeabi_dadd+0x108>
    961c:	2500      	movs	r5, #0
    961e:	e772      	b.n	9506 <__aeabi_dadd+0x2e2>
    9620:	2100      	movs	r1, #0
    9622:	e782      	b.n	952a <__aeabi_dadd+0x306>
    9624:	0023      	movs	r3, r4
    9626:	433b      	orrs	r3, r7
    9628:	2e00      	cmp	r6, #0
    962a:	d000      	beq.n	962e <__aeabi_dadd+0x40a>
    962c:	e0ab      	b.n	9786 <__aeabi_dadd+0x562>
    962e:	2b00      	cmp	r3, #0
    9630:	d100      	bne.n	9634 <__aeabi_dadd+0x410>
    9632:	e0e7      	b.n	9804 <__aeabi_dadd+0x5e0>
    9634:	000b      	movs	r3, r1
    9636:	4313      	orrs	r3, r2
    9638:	d100      	bne.n	963c <__aeabi_dadd+0x418>
    963a:	e677      	b.n	932c <__aeabi_dadd+0x108>
    963c:	18ba      	adds	r2, r7, r2
    963e:	42ba      	cmp	r2, r7
    9640:	41bf      	sbcs	r7, r7
    9642:	1864      	adds	r4, r4, r1
    9644:	427f      	negs	r7, r7
    9646:	19e4      	adds	r4, r4, r7
    9648:	0223      	lsls	r3, r4, #8
    964a:	d400      	bmi.n	964e <__aeabi_dadd+0x42a>
    964c:	e0f2      	b.n	9834 <__aeabi_dadd+0x610>
    964e:	4b7c      	ldr	r3, [pc, #496]	; (9840 <__aeabi_dadd+0x61c>)
    9650:	0017      	movs	r7, r2
    9652:	401c      	ands	r4, r3
    9654:	0006      	movs	r6, r0
    9656:	e669      	b.n	932c <__aeabi_dadd+0x108>
    9658:	0020      	movs	r0, r4
    965a:	4338      	orrs	r0, r7
    965c:	2e00      	cmp	r6, #0
    965e:	d1d1      	bne.n	9604 <__aeabi_dadd+0x3e0>
    9660:	2800      	cmp	r0, #0
    9662:	d15b      	bne.n	971c <__aeabi_dadd+0x4f8>
    9664:	001c      	movs	r4, r3
    9666:	4314      	orrs	r4, r2
    9668:	d100      	bne.n	966c <__aeabi_dadd+0x448>
    966a:	e0a8      	b.n	97be <__aeabi_dadd+0x59a>
    966c:	001c      	movs	r4, r3
    966e:	0017      	movs	r7, r2
    9670:	46d8      	mov	r8, fp
    9672:	e65b      	b.n	932c <__aeabi_dadd+0x108>
    9674:	0006      	movs	r6, r0
    9676:	2400      	movs	r4, #0
    9678:	2700      	movs	r7, #0
    967a:	e697      	b.n	93ac <__aeabi_dadd+0x188>
    967c:	4650      	mov	r0, sl
    967e:	000b      	movs	r3, r1
    9680:	3820      	subs	r0, #32
    9682:	40c3      	lsrs	r3, r0
    9684:	4699      	mov	r9, r3
    9686:	4653      	mov	r3, sl
    9688:	2b20      	cmp	r3, #32
    968a:	d100      	bne.n	968e <__aeabi_dadd+0x46a>
    968c:	e095      	b.n	97ba <__aeabi_dadd+0x596>
    968e:	2340      	movs	r3, #64	; 0x40
    9690:	4650      	mov	r0, sl
    9692:	1a1b      	subs	r3, r3, r0
    9694:	4099      	lsls	r1, r3
    9696:	430a      	orrs	r2, r1
    9698:	1e51      	subs	r1, r2, #1
    969a:	418a      	sbcs	r2, r1
    969c:	464b      	mov	r3, r9
    969e:	2100      	movs	r1, #0
    96a0:	431a      	orrs	r2, r3
    96a2:	e69f      	b.n	93e4 <__aeabi_dadd+0x1c0>
    96a4:	2e00      	cmp	r6, #0
    96a6:	d130      	bne.n	970a <__aeabi_dadd+0x4e6>
    96a8:	0026      	movs	r6, r4
    96aa:	433e      	orrs	r6, r7
    96ac:	d067      	beq.n	977e <__aeabi_dadd+0x55a>
    96ae:	43db      	mvns	r3, r3
    96b0:	469a      	mov	sl, r3
    96b2:	2b00      	cmp	r3, #0
    96b4:	d01c      	beq.n	96f0 <__aeabi_dadd+0x4cc>
    96b6:	4e61      	ldr	r6, [pc, #388]	; (983c <__aeabi_dadd+0x618>)
    96b8:	42b0      	cmp	r0, r6
    96ba:	d060      	beq.n	977e <__aeabi_dadd+0x55a>
    96bc:	4653      	mov	r3, sl
    96be:	2b38      	cmp	r3, #56	; 0x38
    96c0:	dd00      	ble.n	96c4 <__aeabi_dadd+0x4a0>
    96c2:	e096      	b.n	97f2 <__aeabi_dadd+0x5ce>
    96c4:	2b1f      	cmp	r3, #31
    96c6:	dd00      	ble.n	96ca <__aeabi_dadd+0x4a6>
    96c8:	e09f      	b.n	980a <__aeabi_dadd+0x5e6>
    96ca:	2620      	movs	r6, #32
    96cc:	1af3      	subs	r3, r6, r3
    96ce:	0026      	movs	r6, r4
    96d0:	409e      	lsls	r6, r3
    96d2:	469c      	mov	ip, r3
    96d4:	46b3      	mov	fp, r6
    96d6:	4653      	mov	r3, sl
    96d8:	003e      	movs	r6, r7
    96da:	40de      	lsrs	r6, r3
    96dc:	0033      	movs	r3, r6
    96de:	465e      	mov	r6, fp
    96e0:	431e      	orrs	r6, r3
    96e2:	4663      	mov	r3, ip
    96e4:	409f      	lsls	r7, r3
    96e6:	1e7b      	subs	r3, r7, #1
    96e8:	419f      	sbcs	r7, r3
    96ea:	4653      	mov	r3, sl
    96ec:	40dc      	lsrs	r4, r3
    96ee:	4337      	orrs	r7, r6
    96f0:	18bf      	adds	r7, r7, r2
    96f2:	4297      	cmp	r7, r2
    96f4:	4192      	sbcs	r2, r2
    96f6:	1864      	adds	r4, r4, r1
    96f8:	4252      	negs	r2, r2
    96fa:	18a4      	adds	r4, r4, r2
    96fc:	0006      	movs	r6, r0
    96fe:	e678      	b.n	93f2 <__aeabi_dadd+0x1ce>
    9700:	4327      	orrs	r7, r4
    9702:	1e7c      	subs	r4, r7, #1
    9704:	41a7      	sbcs	r7, r4
    9706:	2400      	movs	r4, #0
    9708:	e737      	b.n	957a <__aeabi_dadd+0x356>
    970a:	4e4c      	ldr	r6, [pc, #304]	; (983c <__aeabi_dadd+0x618>)
    970c:	42b0      	cmp	r0, r6
    970e:	d036      	beq.n	977e <__aeabi_dadd+0x55a>
    9710:	2680      	movs	r6, #128	; 0x80
    9712:	425b      	negs	r3, r3
    9714:	0436      	lsls	r6, r6, #16
    9716:	469a      	mov	sl, r3
    9718:	4334      	orrs	r4, r6
    971a:	e7cf      	b.n	96bc <__aeabi_dadd+0x498>
    971c:	0018      	movs	r0, r3
    971e:	4310      	orrs	r0, r2
    9720:	d100      	bne.n	9724 <__aeabi_dadd+0x500>
    9722:	e603      	b.n	932c <__aeabi_dadd+0x108>
    9724:	1ab8      	subs	r0, r7, r2
    9726:	4684      	mov	ip, r0
    9728:	4567      	cmp	r7, ip
    972a:	41ad      	sbcs	r5, r5
    972c:	1ae0      	subs	r0, r4, r3
    972e:	426d      	negs	r5, r5
    9730:	1b40      	subs	r0, r0, r5
    9732:	0205      	lsls	r5, r0, #8
    9734:	d400      	bmi.n	9738 <__aeabi_dadd+0x514>
    9736:	e62c      	b.n	9392 <__aeabi_dadd+0x16e>
    9738:	1bd7      	subs	r7, r2, r7
    973a:	42ba      	cmp	r2, r7
    973c:	4192      	sbcs	r2, r2
    973e:	1b1c      	subs	r4, r3, r4
    9740:	4252      	negs	r2, r2
    9742:	1aa4      	subs	r4, r4, r2
    9744:	46d8      	mov	r8, fp
    9746:	e5f1      	b.n	932c <__aeabi_dadd+0x108>
    9748:	0018      	movs	r0, r3
    974a:	4310      	orrs	r0, r2
    974c:	d100      	bne.n	9750 <__aeabi_dadd+0x52c>
    974e:	e763      	b.n	9618 <__aeabi_dadd+0x3f4>
    9750:	08f8      	lsrs	r0, r7, #3
    9752:	0767      	lsls	r7, r4, #29
    9754:	4307      	orrs	r7, r0
    9756:	2080      	movs	r0, #128	; 0x80
    9758:	08e4      	lsrs	r4, r4, #3
    975a:	0300      	lsls	r0, r0, #12
    975c:	4204      	tst	r4, r0
    975e:	d008      	beq.n	9772 <__aeabi_dadd+0x54e>
    9760:	08dd      	lsrs	r5, r3, #3
    9762:	4205      	tst	r5, r0
    9764:	d105      	bne.n	9772 <__aeabi_dadd+0x54e>
    9766:	08d2      	lsrs	r2, r2, #3
    9768:	0759      	lsls	r1, r3, #29
    976a:	4311      	orrs	r1, r2
    976c:	000f      	movs	r7, r1
    976e:	002c      	movs	r4, r5
    9770:	46d8      	mov	r8, fp
    9772:	0f7b      	lsrs	r3, r7, #29
    9774:	00e4      	lsls	r4, r4, #3
    9776:	431c      	orrs	r4, r3
    9778:	00ff      	lsls	r7, r7, #3
    977a:	4e30      	ldr	r6, [pc, #192]	; (983c <__aeabi_dadd+0x618>)
    977c:	e5d6      	b.n	932c <__aeabi_dadd+0x108>
    977e:	000c      	movs	r4, r1
    9780:	0017      	movs	r7, r2
    9782:	0006      	movs	r6, r0
    9784:	e5d2      	b.n	932c <__aeabi_dadd+0x108>
    9786:	2b00      	cmp	r3, #0
    9788:	d038      	beq.n	97fc <__aeabi_dadd+0x5d8>
    978a:	000b      	movs	r3, r1
    978c:	4313      	orrs	r3, r2
    978e:	d100      	bne.n	9792 <__aeabi_dadd+0x56e>
    9790:	e742      	b.n	9618 <__aeabi_dadd+0x3f4>
    9792:	08f8      	lsrs	r0, r7, #3
    9794:	0767      	lsls	r7, r4, #29
    9796:	4307      	orrs	r7, r0
    9798:	2080      	movs	r0, #128	; 0x80
    979a:	08e4      	lsrs	r4, r4, #3
    979c:	0300      	lsls	r0, r0, #12
    979e:	4204      	tst	r4, r0
    97a0:	d0e7      	beq.n	9772 <__aeabi_dadd+0x54e>
    97a2:	08cb      	lsrs	r3, r1, #3
    97a4:	4203      	tst	r3, r0
    97a6:	d1e4      	bne.n	9772 <__aeabi_dadd+0x54e>
    97a8:	08d2      	lsrs	r2, r2, #3
    97aa:	0749      	lsls	r1, r1, #29
    97ac:	4311      	orrs	r1, r2
    97ae:	000f      	movs	r7, r1
    97b0:	001c      	movs	r4, r3
    97b2:	e7de      	b.n	9772 <__aeabi_dadd+0x54e>
    97b4:	2700      	movs	r7, #0
    97b6:	2400      	movs	r4, #0
    97b8:	e5d5      	b.n	9366 <__aeabi_dadd+0x142>
    97ba:	2100      	movs	r1, #0
    97bc:	e76b      	b.n	9696 <__aeabi_dadd+0x472>
    97be:	2500      	movs	r5, #0
    97c0:	2700      	movs	r7, #0
    97c2:	e5f3      	b.n	93ac <__aeabi_dadd+0x188>
    97c4:	464e      	mov	r6, r9
    97c6:	0025      	movs	r5, r4
    97c8:	3e20      	subs	r6, #32
    97ca:	40f5      	lsrs	r5, r6
    97cc:	464b      	mov	r3, r9
    97ce:	002e      	movs	r6, r5
    97d0:	2b20      	cmp	r3, #32
    97d2:	d02d      	beq.n	9830 <__aeabi_dadd+0x60c>
    97d4:	2540      	movs	r5, #64	; 0x40
    97d6:	1aed      	subs	r5, r5, r3
    97d8:	40ac      	lsls	r4, r5
    97da:	4327      	orrs	r7, r4
    97dc:	1e7c      	subs	r4, r7, #1
    97de:	41a7      	sbcs	r7, r4
    97e0:	2400      	movs	r4, #0
    97e2:	4337      	orrs	r7, r6
    97e4:	e6c9      	b.n	957a <__aeabi_dadd+0x356>
    97e6:	2480      	movs	r4, #128	; 0x80
    97e8:	2500      	movs	r5, #0
    97ea:	0324      	lsls	r4, r4, #12
    97ec:	4e13      	ldr	r6, [pc, #76]	; (983c <__aeabi_dadd+0x618>)
    97ee:	2700      	movs	r7, #0
    97f0:	e5dc      	b.n	93ac <__aeabi_dadd+0x188>
    97f2:	4327      	orrs	r7, r4
    97f4:	1e7c      	subs	r4, r7, #1
    97f6:	41a7      	sbcs	r7, r4
    97f8:	2400      	movs	r4, #0
    97fa:	e779      	b.n	96f0 <__aeabi_dadd+0x4cc>
    97fc:	000c      	movs	r4, r1
    97fe:	0017      	movs	r7, r2
    9800:	4e0e      	ldr	r6, [pc, #56]	; (983c <__aeabi_dadd+0x618>)
    9802:	e593      	b.n	932c <__aeabi_dadd+0x108>
    9804:	000c      	movs	r4, r1
    9806:	0017      	movs	r7, r2
    9808:	e590      	b.n	932c <__aeabi_dadd+0x108>
    980a:	4656      	mov	r6, sl
    980c:	0023      	movs	r3, r4
    980e:	3e20      	subs	r6, #32
    9810:	40f3      	lsrs	r3, r6
    9812:	4699      	mov	r9, r3
    9814:	4653      	mov	r3, sl
    9816:	2b20      	cmp	r3, #32
    9818:	d00e      	beq.n	9838 <__aeabi_dadd+0x614>
    981a:	2340      	movs	r3, #64	; 0x40
    981c:	4656      	mov	r6, sl
    981e:	1b9b      	subs	r3, r3, r6
    9820:	409c      	lsls	r4, r3
    9822:	4327      	orrs	r7, r4
    9824:	1e7c      	subs	r4, r7, #1
    9826:	41a7      	sbcs	r7, r4
    9828:	464b      	mov	r3, r9
    982a:	2400      	movs	r4, #0
    982c:	431f      	orrs	r7, r3
    982e:	e75f      	b.n	96f0 <__aeabi_dadd+0x4cc>
    9830:	2400      	movs	r4, #0
    9832:	e7d2      	b.n	97da <__aeabi_dadd+0x5b6>
    9834:	0017      	movs	r7, r2
    9836:	e5b2      	b.n	939e <__aeabi_dadd+0x17a>
    9838:	2400      	movs	r4, #0
    983a:	e7f2      	b.n	9822 <__aeabi_dadd+0x5fe>
    983c:	000007ff 	.word	0x000007ff
    9840:	ff7fffff 	.word	0xff7fffff

00009844 <__aeabi_dcmpun>:
    9844:	b570      	push	{r4, r5, r6, lr}
    9846:	4e0e      	ldr	r6, [pc, #56]	; (9880 <__aeabi_dcmpun+0x3c>)
    9848:	030d      	lsls	r5, r1, #12
    984a:	031c      	lsls	r4, r3, #12
    984c:	0049      	lsls	r1, r1, #1
    984e:	005b      	lsls	r3, r3, #1
    9850:	0b2d      	lsrs	r5, r5, #12
    9852:	0d49      	lsrs	r1, r1, #21
    9854:	0b24      	lsrs	r4, r4, #12
    9856:	0d5b      	lsrs	r3, r3, #21
    9858:	42b1      	cmp	r1, r6
    985a:	d004      	beq.n	9866 <__aeabi_dcmpun+0x22>
    985c:	4908      	ldr	r1, [pc, #32]	; (9880 <__aeabi_dcmpun+0x3c>)
    985e:	2000      	movs	r0, #0
    9860:	428b      	cmp	r3, r1
    9862:	d008      	beq.n	9876 <__aeabi_dcmpun+0x32>
    9864:	bd70      	pop	{r4, r5, r6, pc}
    9866:	4305      	orrs	r5, r0
    9868:	2001      	movs	r0, #1
    986a:	2d00      	cmp	r5, #0
    986c:	d1fa      	bne.n	9864 <__aeabi_dcmpun+0x20>
    986e:	4904      	ldr	r1, [pc, #16]	; (9880 <__aeabi_dcmpun+0x3c>)
    9870:	2000      	movs	r0, #0
    9872:	428b      	cmp	r3, r1
    9874:	d1f6      	bne.n	9864 <__aeabi_dcmpun+0x20>
    9876:	4314      	orrs	r4, r2
    9878:	0020      	movs	r0, r4
    987a:	1e44      	subs	r4, r0, #1
    987c:	41a0      	sbcs	r0, r4
    987e:	e7f1      	b.n	9864 <__aeabi_dcmpun+0x20>
    9880:	000007ff 	.word	0x000007ff
    9884:	682f2e2e 	.word	0x682f2e2e
    9888:	732f6c61 	.word	0x732f6c61
    988c:	682f6372 	.word	0x682f6372
    9890:	695f6c61 	.word	0x695f6c61
    9894:	6d5f6332 	.word	0x6d5f6332
    9898:	6e79735f 	.word	0x6e79735f
    989c:	00632e63 	.word	0x00632e63
    98a0:	682f2e2e 	.word	0x682f2e2e
    98a4:	732f6c61 	.word	0x732f6c61
    98a8:	682f6372 	.word	0x682f6372
    98ac:	695f6c61 	.word	0x695f6c61
    98b0:	00632e6f 	.word	0x00632e6f
    98b4:	682f2e2e 	.word	0x682f2e2e
    98b8:	732f6c61 	.word	0x732f6c61
    98bc:	682f6372 	.word	0x682f6372
    98c0:	735f6c61 	.word	0x735f6c61
    98c4:	5f64636c 	.word	0x5f64636c
    98c8:	636e7973 	.word	0x636e7973
    98cc:	0000632e 	.word	0x0000632e
    98d0:	682f2e2e 	.word	0x682f2e2e
    98d4:	732f6c61 	.word	0x732f6c61
    98d8:	682f6372 	.word	0x682f6372
    98dc:	745f6c61 	.word	0x745f6c61
    98e0:	72656d69 	.word	0x72656d69
    98e4:	0000632e 	.word	0x0000632e
    98e8:	682f2e2e 	.word	0x682f2e2e
    98ec:	732f6c61 	.word	0x732f6c61
    98f0:	682f6372 	.word	0x682f6372
    98f4:	755f6c61 	.word	0x755f6c61
    98f8:	74726173 	.word	0x74726173
    98fc:	6e79735f 	.word	0x6e79735f
    9900:	00632e63 	.word	0x00632e63
    9904:	682f2e2e 	.word	0x682f2e2e
    9908:	752f6c61 	.word	0x752f6c61
    990c:	736c6974 	.word	0x736c6974
    9910:	6372732f 	.word	0x6372732f
    9914:	6974752f 	.word	0x6974752f
    9918:	6c5f736c 	.word	0x6c5f736c
    991c:	2e747369 	.word	0x2e747369
    9920:	00000063 	.word	0x00000063
    9924:	682f2e2e 	.word	0x682f2e2e
    9928:	722f6c70 	.word	0x722f6c70
    992c:	682f6374 	.word	0x682f6374
    9930:	725f6c70 	.word	0x725f6c70
    9934:	632e6374 	.word	0x632e6374
    9938:	00000000 	.word	0x00000000

0000993c <_i2cms>:
    993c:	00000001 00200014 00000100 00000049     ...... .....I...
    994c:	00d70000 00f42400 682f2e2e 732f6c70     .....$..../hpl/s
    995c:	6f637265 70682f6d 65735f6c 6d6f6372     ercom/hpl_sercom
    996c:	0000632e                                .c..

00009970 <cm_setting>:
    9970:	07000100 07000400 07000500 07000600     ................
    9980:	07000700 0e010801 0e010a01 0e010c01     ................
    9990:	0e010e01 0e011001 0e011201 0e011401     ................
    99a0:	0e011601 07000100 07000100 07000100     ................
    99b0:	07000100 07000100 07000100 07000100     ................
    99c0:	07000100 07000100 07000100 07000100     ................
    99d0:	07000100 07000100 07000100 07000100     ................
    99e0:	07000100 07000100 07000100 07000100     ................
    99f0:	07000100 07000100 07000100 07000100     ................
    9a00:	07000100 07000100 07000100 07000100     ................
    9a10:	07000100 07000100 07000100 07000100     ................

00009a20 <cm7_lut>:
    9a20:	00000000 00007730 00002431 00005d32     ....0w..1$..2]..
    9a30:	00006d33 00002e34 00006b35 00007b36     3m..4...5k..6{..
    9a40:	00002537 00007f38 00002f39 00003f61     7%..8...9/..a?..
    9a50:	00007a62 00005363 00007c64 00005b65     bz..cS..d|..e[..
    9a60:	00001b66                                f...

00009a64 <cm14_lut>:
    9a64:	003a1730 00080231 0028c532 0028c333     0.:.1...2.(.3.(.
    9a74:	0018c234 0030c335 0030c736 00280237     4...5.0.6.0.7.(.
    9a84:	0038c738 0038c339 0038c661 0029a362     8.8.9.8.a.8.b.).
    9a94:	00300563 00292364 0030c565 0030c466     c.0.d#).e.0.f.0.
    9aa4:	00308767 0018c668 0018c669 0008076a     g.0.h...i...j...
    9ab4:	00124c6b 0010056c 001e066d 001c0e6e     kL..l...m...n...
    9ac4:	0038076f 0038c470 00380f71 0038cc72     o.8.p.8.q.8.r.8.
    9ad4:	00304973 00212074 00180775 00121476     sI0.t !.u...v...
    9ae4:	00181e77 00061878 0018c379 0022117a     w...x...y...z.".
    9af4:	0000c02d 0001e02b 0002102f 0000c13d     -...+.../...=...
    9b04:	0009e323 0006182a 00000827 00041029     #...*...'...)...
    9b14:	00020828 00284f40 0031e324 00121225     (...@O(.$.1.%...
    9b24:	0004085c 0000015f 00000000 00000002     \..._...........
    9b34:	00000003 00010002 00010003 00040002     ................
    9b44:	00040003 00050002 00050003 6c786461     ............adxl
    9b54:	5f353433 5f766564 74696e69 3d202928     345_dev_init() =
    9b64:	6425203e 0000000a 6c786461 5f353433     > %d....adxl345_
    9b74:	74696e69 3d202928 6425203e 0000000a     init() => %d....
    9b84:	00343332 64636261 68676665 00000000     234.abcdefgh....
    9b94:	6c786461 5f353433 72617473 20292874     adxl345_start() 
    9ba4:	25203e3d 00000a64 3a727265 20642520     => %d...err: %d 
    9bb4:	36253d78 79202c66 6636253d 3d7a202c     x=%6f, y=%6f, z=
    9bc4:	0a663625 00070000                                %6f...

00009bca <multipliers_tau_calc>:
    9bca:	00130007 00900035                       ....5...

00009bd2 <gain_setting_int_cap>:
    9bd2:	050b1c3f 0a0b0103                                ?.....

00009bd8 <PTC_XY_PINS>:
    9bd8:	08090a0b 43424645 25240302 29282726     ....EFBC..$%&'()
    9be8:	17161514 1f1e1b5c 07060504 13121110     ....\...........
    9bf8:	00002cf0 00002cd2 00002c8c 00002baa     .,...,...,...+..
    9c08:	00002c8c 00002cc4 00002c8c 00002baa     .,...,...,...+..
    9c18:	00002cd2 00002cd2 00002cc4 00002baa     .,...,...,...+..
    9c28:	00002ba2 00002ba2 00002ba2 00002f08     .+...+...+.../..
    9c38:	00003350 00003210 00003210 0000320c     P3...2...2...2..
    9c48:	00003328 00003328 0000331a 0000320c     (3..(3...3...2..
    9c58:	00003328 0000331a 00003328 0000320c     (3...3..(3...2..
    9c68:	00003330 00003330 00003330 00003534     03..03..03..45..

00009c78 <_global_impure_ptr>:
    9c78:	20000080 00004c2a 00004cfe 00004cfe     ... *L...L...L..
    9c88:	00004c16 00004cfe 00004cfe 00004cfe     .L...L...L...L..
    9c98:	00004cfe 00004cfe 00004cfe 00004cd0     .L...L...L...L..
    9ca8:	000047e2 00004cfe 000047d8 000047ec     .G...L...G...G..
    9cb8:	00004cfe 00004c20 000049ac 000049ac     .L.. L...I...I..
    9cc8:	000049ac 000049ac 000049ac 000049ac     .I...I...I...I..
    9cd8:	000049ac 000049ac 000049ac 00004cfe     .I...I...I...L..
    9ce8:	00004cfe 00004cfe 00004cfe 00004cfe     .L...L...L...L..
    9cf8:	00004cfe 00004cfe 00004cfe 00004cfe     .L...L...L...L..
    9d08:	00004cfe 00004ce6 00004c3a 00004cfe     .L...L..:L...L..
    9d18:	00004c3a 00004cfe 00004cfe 00004cfe     :L...L...L...L..
    9d28:	00004cfe 00004ba0 00004cfe 00004cfe     .L...K...L...L..
    9d38:	00004baa 00004cfe 00004cfe 00004cfe     .K...L...L...L..
    9d48:	00004cfe 00004cfe 00004bd8 00004cfe     .L...L...K...L..
    9d58:	00004cfe 00004c06 00004cfe 00004cfe     .L...L...L...L..
    9d68:	00004cfe 00004cfe 00004cfe 00004cfe     .L...L...L...L..
    9d78:	00004cfe 00004cfe 00004cfe 00004cfe     .L...L...L...L..
    9d88:	000049ec 00004a22 00004c3a 00004c3a     .I.."J..:L..:L..
    9d98:	00004c3a 00004aca 00004a22 00004cfe     :L...J.."J...L..
    9da8:	00004cfe 00004ad4 00004cfe 00004ae6     .L...J...L...J..
    9db8:	00004cfa 00004b14 00004b3e 00004cfe     .L...K..>K...L..
    9dc8:	00004b48 00004cfe 00004cf6 00004cfe     HK...L...L...L..
    9dd8:	00004cfe 0000483a 00464e49 00666e69     .L..:H..INF.inf.
    9de8:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
    9df8:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    9e08:	37363534 62613938 66656463 00000000     456789abcdef....
    9e18:	6c756e28 0000296c 00000030              (null)..0...

00009e24 <blanks.7238>:
    9e24:	20202020 20202020 20202020 20202020                     

00009e34 <zeroes.7239>:
    9e34:	30303030 30303030 30303030 30303030     0000000000000000
    9e44:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
    9e54:	00000000                                ....

00009e58 <__mprec_bigtens>:
    9e58:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    9e68:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    9e78:	7f73bf3c 75154fdd                       <.s..O.u

00009e80 <__mprec_tens>:
    9e80:	00000000 3ff00000 00000000 40240000     .......?......$@
    9e90:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    9ea0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    9eb0:	00000000 412e8480 00000000 416312d0     .......A......cA
    9ec0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    9ed0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    9ee0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    9ef0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    9f00:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    9f10:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    9f20:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    9f30:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    9f40:	79d99db4 44ea7843                       ...yCx.D

00009f48 <p05.6055>:
    9f48:	00000005 00000019 0000007d 00000043     ........}...C...
    9f58:	49534f50 00000058 0000002e              POSIX.......

00009f64 <_ctype_>:
    9f64:	20202000 20202020 28282020 20282828     .         ((((( 
    9f74:	20202020 20202020 20202020 20202020                     
    9f84:	10108820 10101010 10101010 10101010      ...............
    9f94:	04040410 04040404 10040404 10101010     ................
    9fa4:	41411010 41414141 01010101 01010101     ..AAAAAA........
    9fb4:	01010101 01010101 01010101 10101010     ................
    9fc4:	42421010 42424242 02020202 02020202     ..BBBBBB........
    9fd4:	02020202 02020202 02020202 10101010     ................
    9fe4:	00000020 00000000 00000000 00000000      ...............
	...

0000a068 <_init>:
    a068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a06a:	46c0      	nop			; (mov r8, r8)
    a06c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a06e:	bc08      	pop	{r3}
    a070:	469e      	mov	lr, r3
    a072:	4770      	bx	lr

0000a074 <__init_array_start>:
    a074:	00005e41 	.word	0x00005e41

0000a078 <__frame_dummy_init_array_entry>:
    a078:	000000d1                                ....

0000a07c <_fini>:
    a07c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a07e:	46c0      	nop			; (mov r8, r8)
    a080:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a082:	bc08      	pop	{r3}
    a084:	469e      	mov	lr, r3
    a086:	4770      	bx	lr

0000a088 <__fini_array_start>:
    a088:	000000a9 	.word	0x000000a9
