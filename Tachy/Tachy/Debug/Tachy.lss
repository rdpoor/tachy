
Tachy.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000a08c  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000a08c  0000a08c  0001a08c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a28  20000000  0000a094  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          0000098c  20000a28  0000aabc  00020a28  2**2
                  ALLOC
  4 .stack        00002004  200013b4  0000b448  00020a28  2**0
                  ALLOC
  5 .ARM.attributes 0000002d  00000000  00000000  00020a28  2**0
                  CONTENTS, READONLY
  6 .comment      000000c7  00000000  00000000  00020a55  2**0
                  CONTENTS, READONLY
  7 .debug_info   0002c5bf  00000000  00000000  00020b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003f99  00000000  00000000  0004d0db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00011ce9  00000000  00000000  00051074  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000dd8  00000000  00000000  00062d5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001370  00000000  00000000  00063b35  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000211e4  00000000  00000000  00064ea5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00016275  00000000  00000000  00086089  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0009e044  00000000  00000000  0009c2fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000035c8  00000000  00000000  0013a344  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b8 33 00 20 2d 03 00 00 29 03 00 00 29 03 00 00     .3. -...)...)...
	...
      2c:	29 03 00 00 00 00 00 00 00 00 00 00 29 03 00 00     )...........)...
      3c:	29 03 00 00 29 03 00 00 29 03 00 00 a1 12 00 00     )...)...).......
      4c:	29 03 00 00 29 03 00 00 29 03 00 00 29 03 00 00     )...)...)...)...
      5c:	29 03 00 00 29 03 00 00 29 03 00 00 29 03 00 00     )...)...)...)...
      6c:	29 03 00 00 29 03 00 00 29 03 00 00 29 03 00 00     )...)...)...)...
      7c:	29 03 00 00 29 03 00 00 29 03 00 00 29 03 00 00     )...)...)...)...
      8c:	29 03 00 00 29 03 00 00 29 03 00 00 d9 23 00 00     )...)...)....#..
      9c:	29 03 00 00 29 03 00 00 29 03 00 00                 )...)...)...

000000a8 <__do_global_dtors_aux>:
      a8:	b510      	push	{r4, lr}
      aa:	4c06      	ldr	r4, [pc, #24]	; (c4 <__do_global_dtors_aux+0x1c>)
      ac:	7823      	ldrb	r3, [r4, #0]
      ae:	2b00      	cmp	r3, #0
      b0:	d107      	bne.n	c2 <__do_global_dtors_aux+0x1a>
      b2:	4b05      	ldr	r3, [pc, #20]	; (c8 <__do_global_dtors_aux+0x20>)
      b4:	2b00      	cmp	r3, #0
      b6:	d002      	beq.n	be <__do_global_dtors_aux+0x16>
      b8:	4804      	ldr	r0, [pc, #16]	; (cc <__do_global_dtors_aux+0x24>)
      ba:	e000      	b.n	be <__do_global_dtors_aux+0x16>
      bc:	bf00      	nop
      be:	2301      	movs	r3, #1
      c0:	7023      	strb	r3, [r4, #0]
      c2:	bd10      	pop	{r4, pc}
      c4:	20000a28 	.word	0x20000a28
      c8:	00000000 	.word	0x00000000
      cc:	0000a094 	.word	0x0000a094

000000d0 <frame_dummy>:
      d0:	4b08      	ldr	r3, [pc, #32]	; (f4 <frame_dummy+0x24>)
      d2:	b510      	push	{r4, lr}
      d4:	2b00      	cmp	r3, #0
      d6:	d003      	beq.n	e0 <frame_dummy+0x10>
      d8:	4907      	ldr	r1, [pc, #28]	; (f8 <frame_dummy+0x28>)
      da:	4808      	ldr	r0, [pc, #32]	; (fc <frame_dummy+0x2c>)
      dc:	e000      	b.n	e0 <frame_dummy+0x10>
      de:	bf00      	nop
      e0:	4807      	ldr	r0, [pc, #28]	; (100 <frame_dummy+0x30>)
      e2:	6803      	ldr	r3, [r0, #0]
      e4:	2b00      	cmp	r3, #0
      e6:	d100      	bne.n	ea <frame_dummy+0x1a>
      e8:	bd10      	pop	{r4, pc}
      ea:	4b06      	ldr	r3, [pc, #24]	; (104 <frame_dummy+0x34>)
      ec:	2b00      	cmp	r3, #0
      ee:	d0fb      	beq.n	e8 <frame_dummy+0x18>
      f0:	4798      	blx	r3
      f2:	e7f9      	b.n	e8 <frame_dummy+0x18>
      f4:	00000000 	.word	0x00000000
      f8:	20000a2c 	.word	0x20000a2c
      fc:	0000a094 	.word	0x0000a094
     100:	0000a094 	.word	0x0000a094
     104:	00000000 	.word	0x00000000

00000108 <adxl345_get_devid_reg>:
}

// ==========================================
// low-level register access

adxl345_err_t adxl345_get_devid_reg(adxl345_t *adxl345, uint8_t *val) {
     108:	b510      	push	{r4, lr}
     10a:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_DEVID, val);
     10c:	6800      	ldr	r0, [r0, #0]
     10e:	2100      	movs	r1, #0
     110:	4b01      	ldr	r3, [pc, #4]	; (118 <adxl345_get_devid_reg+0x10>)
     112:	4798      	blx	r3
}
     114:	bd10      	pop	{r4, pc}
     116:	46c0      	nop			; (mov r8, r8)
     118:	000002ad 	.word	0x000002ad

0000011c <adxl345_init>:
adxl345_err_t adxl345_init(adxl345_t *adxl345, adxl345_dev_t * dev) {
     11c:	b500      	push	{lr}
     11e:	b083      	sub	sp, #12
  adxl345->dev = dev;
     120:	6001      	str	r1, [r0, #0]
  if ((err = adxl345_get_devid_reg(adxl345, &reg)) != ADXL345_ERR_NONE) {
     122:	466b      	mov	r3, sp
     124:	1dd9      	adds	r1, r3, #7
     126:	4b06      	ldr	r3, [pc, #24]	; (140 <adxl345_init+0x24>)
     128:	4798      	blx	r3
     12a:	2800      	cmp	r0, #0
     12c:	d105      	bne.n	13a <adxl345_init+0x1e>
  } else if (reg != ADXL345_DEVICE_ID) {
     12e:	466b      	mov	r3, sp
     130:	3307      	adds	r3, #7
     132:	781b      	ldrb	r3, [r3, #0]
     134:	2be5      	cmp	r3, #229	; 0xe5
     136:	d000      	beq.n	13a <adxl345_init+0x1e>
    return ADXL354_ERR_INIT;
     138:	3004      	adds	r0, #4
}
     13a:	b003      	add	sp, #12
     13c:	bd00      	pop	{pc}
     13e:	46c0      	nop			; (mov r8, r8)
     140:	00000109 	.word	0x00000109

00000144 <adxl345_set_bw_rate_reg>:

adxl345_err_t adxl345_get_bw_rate_reg(adxl345_t *adxl345, adxl345_bw_rate_reg *val) {
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_BW_RATE, val);
}

adxl345_err_t adxl345_set_bw_rate_reg(adxl345_t *adxl345, adxl345_bw_rate_reg val) {
     144:	b510      	push	{r4, lr}
     146:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_BW_RATE, val);
     148:	6800      	ldr	r0, [r0, #0]
     14a:	212c      	movs	r1, #44	; 0x2c
     14c:	4b01      	ldr	r3, [pc, #4]	; (154 <adxl345_set_bw_rate_reg+0x10>)
     14e:	4798      	blx	r3
}
     150:	bd10      	pop	{r4, pc}
     152:	46c0      	nop			; (mov r8, r8)
     154:	000002c5 	.word	0x000002c5

00000158 <adxl345_get_power_ctl_reg>:

adxl345_err_t adxl345_get_power_ctl_reg(adxl345_t *adxl345, adxl345_power_ctl_reg *val) {
     158:	b510      	push	{r4, lr}
     15a:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_POWER_CTL, val);
     15c:	6800      	ldr	r0, [r0, #0]
     15e:	212d      	movs	r1, #45	; 0x2d
     160:	4b01      	ldr	r3, [pc, #4]	; (168 <adxl345_get_power_ctl_reg+0x10>)
     162:	4798      	blx	r3
}
     164:	bd10      	pop	{r4, pc}
     166:	46c0      	nop			; (mov r8, r8)
     168:	000002ad 	.word	0x000002ad

0000016c <adxl345_set_power_ctl_reg>:

adxl345_err_t adxl345_set_power_ctl_reg(adxl345_t *adxl345, adxl345_power_ctl_reg val) {
     16c:	b510      	push	{r4, lr}
     16e:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_POWER_CTL, val);
     170:	6800      	ldr	r0, [r0, #0]
     172:	212d      	movs	r1, #45	; 0x2d
     174:	4b01      	ldr	r3, [pc, #4]	; (17c <adxl345_set_power_ctl_reg+0x10>)
     176:	4798      	blx	r3
}
     178:	bd10      	pop	{r4, pc}
     17a:	46c0      	nop			; (mov r8, r8)
     17c:	000002c5 	.word	0x000002c5

00000180 <adxl345_get_data_regs>:

adxl345_err_t adxl345_set_data_format_reg(adxl345_t *adxl345, adxl345_data_format_reg val) {
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_DATA_FORMAT, val);
}

adxl345_err_t adxl345_get_data_regs(adxl345_t *adxl345, adxl345_data_regs_t *dst) {
     180:	b510      	push	{r4, lr}
     182:	000a      	movs	r2, r1
  return adxl345_dev_read_regs(adxl345->dev, ADXL345_REG_DATAX0, (uint8_t *)dst, sizeof(adxl345_data_regs_t));
     184:	6800      	ldr	r0, [r0, #0]
     186:	2306      	movs	r3, #6
     188:	2132      	movs	r1, #50	; 0x32
     18a:	4c01      	ldr	r4, [pc, #4]	; (190 <adxl345_get_data_regs+0x10>)
     18c:	47a0      	blx	r4
}
     18e:	bd10      	pop	{r4, pc}
     190:	000002f9 	.word	0x000002f9

00000194 <adxl345_set_fifo_ctl_reg>:

adxl345_err_t adxl345_get_fifo_ctl_reg(adxl345_t *adxl345, adxl345_fifo_mode_reg *val) {
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_FIFO_CTL, val);
}

adxl345_err_t adxl345_set_fifo_ctl_reg(adxl345_t *adxl345, adxl345_fifo_mode_reg val) {
     194:	b510      	push	{r4, lr}
     196:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_FIFO_CTL, val);
     198:	6800      	ldr	r0, [r0, #0]
     19a:	2138      	movs	r1, #56	; 0x38
     19c:	4b01      	ldr	r3, [pc, #4]	; (1a4 <adxl345_set_fifo_ctl_reg+0x10>)
     19e:	4798      	blx	r3
}
     1a0:	bd10      	pop	{r4, pc}
     1a2:	46c0      	nop			; (mov r8, r8)
     1a4:	000002c5 	.word	0x000002c5

000001a8 <adxl345_get_fifo_status_reg>:

adxl345_err_t adxl345_get_fifo_status_reg(adxl345_t *adxl345, adxl345_fifo_status_reg *val) {
     1a8:	b510      	push	{r4, lr}
     1aa:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_FIFO_STATUS, val);
     1ac:	6800      	ldr	r0, [r0, #0]
     1ae:	2139      	movs	r1, #57	; 0x39
     1b0:	4b01      	ldr	r3, [pc, #4]	; (1b8 <adxl345_get_fifo_status_reg+0x10>)
     1b2:	4798      	blx	r3
}
     1b4:	bd10      	pop	{r4, pc}
     1b6:	46c0      	nop			; (mov r8, r8)
     1b8:	000002ad 	.word	0x000002ad

000001bc <adxl345_start>:
// ==========================================
// higher level functions.  In the functions below,
// _g stands for gravity and _s stands for seconds.

/** @brief Enter measurement mode: start measuring */
adxl345_err_t adxl345_start(adxl345_t *adxl345) {
     1bc:	b510      	push	{r4, lr}
     1be:	b082      	sub	sp, #8
     1c0:	0004      	movs	r4, r0
  uint8_t reg;
  adxl345_err_t err;

  err = adxl345_get_power_ctl_reg(adxl345, &reg);
     1c2:	466b      	mov	r3, sp
     1c4:	1dd9      	adds	r1, r3, #7
     1c6:	4b07      	ldr	r3, [pc, #28]	; (1e4 <adxl345_start+0x28>)
     1c8:	4798      	blx	r3
  if (err != ADXL345_ERR_NONE) return err;
     1ca:	2800      	cmp	r0, #0
     1cc:	d001      	beq.n	1d2 <adxl345_start+0x16>

  err = adxl345_set_power_ctl_reg(adxl345, reg | ADXL345_MEASURE);
  return err;
}
     1ce:	b002      	add	sp, #8
     1d0:	bd10      	pop	{r4, pc}
  err = adxl345_set_power_ctl_reg(adxl345, reg | ADXL345_MEASURE);
     1d2:	466b      	mov	r3, sp
     1d4:	79d9      	ldrb	r1, [r3, #7]
     1d6:	2308      	movs	r3, #8
     1d8:	4319      	orrs	r1, r3
     1da:	0020      	movs	r0, r4
     1dc:	4b02      	ldr	r3, [pc, #8]	; (1e8 <adxl345_start+0x2c>)
     1de:	4798      	blx	r3
  return err;
     1e0:	e7f5      	b.n	1ce <adxl345_start+0x12>
     1e2:	46c0      	nop			; (mov r8, r8)
     1e4:	00000159 	.word	0x00000159
     1e8:	0000016d 	.word	0x0000016d

000001ec <adxl345_stop>:

/** @brief Enter standby mode: stop measuring */
adxl345_err_t adxl345_stop(adxl345_t *adxl345) {
     1ec:	b510      	push	{r4, lr}
     1ee:	b082      	sub	sp, #8
     1f0:	0004      	movs	r4, r0
  uint8_t reg;
  adxl345_err_t err;

  err = adxl345_get_power_ctl_reg(adxl345, &reg);
     1f2:	466b      	mov	r3, sp
     1f4:	1dd9      	adds	r1, r3, #7
     1f6:	4b07      	ldr	r3, [pc, #28]	; (214 <adxl345_stop+0x28>)
     1f8:	4798      	blx	r3
  if (err != ADXL345_ERR_NONE) return err;
     1fa:	2800      	cmp	r0, #0
     1fc:	d001      	beq.n	202 <adxl345_stop+0x16>

  err = adxl345_set_power_ctl_reg(adxl345, reg & ~ADXL345_MEASURE);
  return err;
}
     1fe:	b002      	add	sp, #8
     200:	bd10      	pop	{r4, pc}
  err = adxl345_set_power_ctl_reg(adxl345, reg & ~ADXL345_MEASURE);
     202:	466b      	mov	r3, sp
     204:	79d9      	ldrb	r1, [r3, #7]
     206:	2308      	movs	r3, #8
     208:	4399      	bics	r1, r3
     20a:	0020      	movs	r0, r4
     20c:	4b02      	ldr	r3, [pc, #8]	; (218 <adxl345_stop+0x2c>)
     20e:	4798      	blx	r3
  return err;
     210:	e7f5      	b.n	1fe <adxl345_stop+0x12>
     212:	46c0      	nop			; (mov r8, r8)
     214:	00000159 	.word	0x00000159
     218:	0000016d 	.word	0x0000016d

0000021c <adxl345_available_samples>:
adxl345_err_t adxl345_set_thresh_ff_g(adxl345_t *adxl345, float val);

adxl345_err_t adxl345_get_time_ff_s(adxl345_t *adxl345, float *val);
adxl345_err_t adxl345_set_time_ff_s(adxl345_t *adxl345, float val);

adxl345_err_t adxl345_available_samples(adxl345_t *adxl345, uint8_t *val) {
     21c:	b510      	push	{r4, lr}
     21e:	b082      	sub	sp, #8
     220:	000c      	movs	r4, r1
  uint8_t reg;
  adxl345_err_t err = adxl345_get_fifo_status_reg(adxl345, &reg);
     222:	466b      	mov	r3, sp
     224:	1dd9      	adds	r1, r3, #7
     226:	4b06      	ldr	r3, [pc, #24]	; (240 <adxl345_available_samples+0x24>)
     228:	4798      	blx	r3
  *val = (err == ADXL345_ERR_NONE) ? reg & 0x1F : 0;
     22a:	2300      	movs	r3, #0
     22c:	2800      	cmp	r0, #0
     22e:	d103      	bne.n	238 <adxl345_available_samples+0x1c>
     230:	466b      	mov	r3, sp
     232:	79da      	ldrb	r2, [r3, #7]
     234:	231f      	movs	r3, #31
     236:	4013      	ands	r3, r2
     238:	7023      	strb	r3, [r4, #0]
  return err;
}
     23a:	b002      	add	sp, #8
     23c:	bd10      	pop	{r4, pc}
     23e:	46c0      	nop			; (mov r8, r8)
     240:	000001a9 	.word	0x000001a9

00000244 <adxl345_get_isample>:

/** @brief Read an x, y, z sample frame.
 */
adxl345_err_t adxl345_get_isample(adxl345_t *adxl345, adxl345_isample_t *sample) {
     244:	b510      	push	{r4, lr}
     246:	b082      	sub	sp, #8
     248:	000c      	movs	r4, r1
  adxl345_data_regs_t regs;
  adxl345_err_t err;

  err = adxl345_get_data_regs(adxl345, &regs);
     24a:	4669      	mov	r1, sp
     24c:	4b0b      	ldr	r3, [pc, #44]	; (27c <adxl345_get_isample+0x38>)
     24e:	4798      	blx	r3
  if (err != ADXL345_ERR_NONE) return err;
     250:	2800      	cmp	r0, #0
     252:	d111      	bne.n	278 <adxl345_get_isample+0x34>

  // Using default values:
  //   x1:x0 is a 16 bit signed value with 10 bits of resolution.
  sample->x = (int16_t)((regs.x1 << 8) | regs.x0);
     254:	466b      	mov	r3, sp
     256:	785a      	ldrb	r2, [r3, #1]
     258:	0212      	lsls	r2, r2, #8
     25a:	781b      	ldrb	r3, [r3, #0]
     25c:	4313      	orrs	r3, r2
     25e:	8023      	strh	r3, [r4, #0]
  sample->y = (int16_t)((regs.y1 << 8) | regs.y0);
     260:	466b      	mov	r3, sp
     262:	78da      	ldrb	r2, [r3, #3]
     264:	0212      	lsls	r2, r2, #8
     266:	789b      	ldrb	r3, [r3, #2]
     268:	4313      	orrs	r3, r2
     26a:	8063      	strh	r3, [r4, #2]
  sample->z = (int16_t)((regs.z1 << 8) | regs.z0);
     26c:	466b      	mov	r3, sp
     26e:	795a      	ldrb	r2, [r3, #5]
     270:	0212      	lsls	r2, r2, #8
     272:	791b      	ldrb	r3, [r3, #4]
     274:	4313      	orrs	r3, r2
     276:	80a3      	strh	r3, [r4, #4]

  return ADXL345_ERR_NONE;
}
     278:	b002      	add	sp, #8
     27a:	bd10      	pop	{r4, pc}
     27c:	00000181 	.word	0x00000181

00000280 <adxl345_dev_init>:
// public code

adxl345_err_t adxl345_dev_init(adxl345_dev_t *dev,
                               struct i2c_m_sync_desc *const i2c_descriptor,
                               int16_t slave_addr,
                               int32_t addr_len) {
     280:	b570      	push	{r4, r5, r6, lr}
     282:	000c      	movs	r4, r1
     284:	0015      	movs	r5, r2
     286:	001e      	movs	r6, r3
  dev->i2c_descriptor = i2c_descriptor;
     288:	6001      	str	r1, [r0, #0]
  dev->slave_addr = slave_addr;
     28a:	8082      	strh	r2, [r0, #4]
  dev->addr_len = addr_len;
     28c:	6083      	str	r3, [r0, #8]

  i2c_m_sync_enable(i2c_descriptor);
     28e:	0008      	movs	r0, r1
     290:	4b04      	ldr	r3, [pc, #16]	; (2a4 <adxl345_dev_init+0x24>)
     292:	4798      	blx	r3
  i2c_m_sync_set_slaveaddr(i2c_descriptor, slave_addr, addr_len);
     294:	0032      	movs	r2, r6
     296:	0029      	movs	r1, r5
     298:	0020      	movs	r0, r4
     29a:	4b03      	ldr	r3, [pc, #12]	; (2a8 <adxl345_dev_init+0x28>)
     29c:	4798      	blx	r3

  return ADXL345_ERR_NONE;
}
     29e:	2000      	movs	r0, #0
     2a0:	bd70      	pop	{r4, r5, r6, pc}
     2a2:	46c0      	nop			; (mov r8, r8)
     2a4:	000009f1 	.word	0x000009f1
     2a8:	000009fd 	.word	0x000009fd

000002ac <adxl345_dev_read_reg>:
 * @param reg_addr Address of register to be read
 * @param dst Pointer to destination buffer.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_read_reg(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t *dst) {
     2ac:	b510      	push	{r4, lr}
  int32_t err = i2c_m_sync_cmd_read(dev->i2c_descriptor, reg_addr, dst, 1);
     2ae:	6800      	ldr	r0, [r0, #0]
     2b0:	2301      	movs	r3, #1
     2b2:	4c03      	ldr	r4, [pc, #12]	; (2c0 <adxl345_dev_read_reg+0x14>)
     2b4:	47a0      	blx	r4
  if (err < 0) {
    return ADXL345_ERR_WRITE;
     2b6:	2303      	movs	r3, #3
  }
  return ADXL345_ERR_NONE;
     2b8:	17c0      	asrs	r0, r0, #31
     2ba:	4003      	ands	r3, r0
}
     2bc:	0018      	movs	r0, r3
     2be:	bd10      	pop	{r4, pc}
     2c0:	00000a11 	.word	0x00000a11

000002c4 <adxl345_dev_write_reg>:
 * @param reg_addr Address of register to be written.
 * @param val Value to be written.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_write_reg(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t val) {
     2c4:	b500      	push	{lr}
     2c6:	b085      	sub	sp, #20
  uint8_t buf[2];
  buf[0] = reg_addr;
     2c8:	ab03      	add	r3, sp, #12
     2ca:	7019      	strb	r1, [r3, #0]
  buf[1] = val;
     2cc:	705a      	strb	r2, [r3, #1]

  struct _i2c_m_msg msg;
  int32_t ret;
  msg.addr = dev->slave_addr;
     2ce:	8882      	ldrh	r2, [r0, #4]
     2d0:	4669      	mov	r1, sp
     2d2:	800a      	strh	r2, [r1, #0]
  msg.len = sizeof(buf);
     2d4:	2202      	movs	r2, #2
     2d6:	9201      	str	r2, [sp, #4]
  msg.flags = I2C_M_STOP;
     2d8:	4a05      	ldr	r2, [pc, #20]	; (2f0 <adxl345_dev_write_reg+0x2c>)
     2da:	804a      	strh	r2, [r1, #2]
  msg.buffer = buf;
     2dc:	9302      	str	r3, [sp, #8]

  ret = i2c_m_sync_transfer(dev->i2c_descriptor, &msg);
     2de:	6800      	ldr	r0, [r0, #0]
     2e0:	4b04      	ldr	r3, [pc, #16]	; (2f4 <adxl345_dev_write_reg+0x30>)
     2e2:	4798      	blx	r3
  if (ret < 0) {
    return ADXL345_ERR_WRITE;
     2e4:	2303      	movs	r3, #3
  }
  return ADXL345_ERR_NONE;
     2e6:	17c0      	asrs	r0, r0, #31
     2e8:	4003      	ands	r3, r0
}
     2ea:	0018      	movs	r0, r3
     2ec:	b005      	add	sp, #20
     2ee:	bd00      	pop	{pc}
     2f0:	ffff8000 	.word	0xffff8000
     2f4:	00000a59 	.word	0x00000a59

000002f8 <adxl345_dev_read_regs>:
 * @param dst Pointer to destination buffer.  Must have capacity of n_bytes.
 * @param n_bytes Number of registers to be read.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_read_regs(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t *dst, uint8_t n_bytes) {
     2f8:	b510      	push	{r4, lr}
  int32_t err = i2c_m_sync_cmd_read(dev->i2c_descriptor, reg_addr, dst, n_bytes);
     2fa:	6800      	ldr	r0, [r0, #0]
     2fc:	4c02      	ldr	r4, [pc, #8]	; (308 <adxl345_dev_read_regs+0x10>)
     2fe:	47a0      	blx	r4
  if (err < 0) {
    return ADXL345_ERR_READ;
  }
  return ADXL345_ERR_NONE;
     300:	0fc0      	lsrs	r0, r0, #31
     302:	0040      	lsls	r0, r0, #1
}
     304:	bd10      	pop	{r4, pc}
     306:	46c0      	nop			; (mov r8, r8)
     308:	00000a11 	.word	0x00000a11

0000030c <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     30c:	b510      	push	{r4, lr}
	system_init();
     30e:	4b03      	ldr	r3, [pc, #12]	; (31c <atmel_start_init+0x10>)
     310:	4798      	blx	r3
	stdio_redirect_init();
     312:	4b03      	ldr	r3, [pc, #12]	; (320 <atmel_start_init+0x14>)
     314:	4798      	blx	r3

	touch_init();
     316:	4b03      	ldr	r3, [pc, #12]	; (324 <atmel_start_init+0x18>)
     318:	4798      	blx	r3
}
     31a:	bd10      	pop	{r4, pc}
     31c:	00000899 	.word	0x00000899
     320:	000024b1 	.word	0x000024b1
     324:	00002369 	.word	0x00002369

00000328 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     328:	e7fe      	b.n	328 <Dummy_Handler>
	...

0000032c <Reset_Handler>:
{
     32c:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     32e:	4a17      	ldr	r2, [pc, #92]	; (38c <Reset_Handler+0x60>)
     330:	4b17      	ldr	r3, [pc, #92]	; (390 <Reset_Handler+0x64>)
     332:	429a      	cmp	r2, r3
     334:	d011      	beq.n	35a <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     336:	001a      	movs	r2, r3
     338:	4b16      	ldr	r3, [pc, #88]	; (394 <Reset_Handler+0x68>)
     33a:	429a      	cmp	r2, r3
     33c:	d20d      	bcs.n	35a <Reset_Handler+0x2e>
     33e:	4a16      	ldr	r2, [pc, #88]	; (398 <Reset_Handler+0x6c>)
     340:	3303      	adds	r3, #3
     342:	1a9b      	subs	r3, r3, r2
     344:	089b      	lsrs	r3, r3, #2
     346:	3301      	adds	r3, #1
     348:	009b      	lsls	r3, r3, #2
     34a:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     34c:	4810      	ldr	r0, [pc, #64]	; (390 <Reset_Handler+0x64>)
     34e:	490f      	ldr	r1, [pc, #60]	; (38c <Reset_Handler+0x60>)
     350:	588c      	ldr	r4, [r1, r2]
     352:	5084      	str	r4, [r0, r2]
     354:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     356:	429a      	cmp	r2, r3
     358:	d1fa      	bne.n	350 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     35a:	4a10      	ldr	r2, [pc, #64]	; (39c <Reset_Handler+0x70>)
     35c:	4b10      	ldr	r3, [pc, #64]	; (3a0 <Reset_Handler+0x74>)
     35e:	429a      	cmp	r2, r3
     360:	d20a      	bcs.n	378 <Reset_Handler+0x4c>
     362:	43d3      	mvns	r3, r2
     364:	490e      	ldr	r1, [pc, #56]	; (3a0 <Reset_Handler+0x74>)
     366:	185b      	adds	r3, r3, r1
     368:	2103      	movs	r1, #3
     36a:	438b      	bics	r3, r1
     36c:	3304      	adds	r3, #4
     36e:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     370:	2100      	movs	r1, #0
     372:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     374:	4293      	cmp	r3, r2
     376:	d1fc      	bne.n	372 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     378:	4a0a      	ldr	r2, [pc, #40]	; (3a4 <Reset_Handler+0x78>)
     37a:	21ff      	movs	r1, #255	; 0xff
     37c:	4b0a      	ldr	r3, [pc, #40]	; (3a8 <Reset_Handler+0x7c>)
     37e:	438b      	bics	r3, r1
     380:	6093      	str	r3, [r2, #8]
        __libc_init_array();
     382:	4b0a      	ldr	r3, [pc, #40]	; (3ac <Reset_Handler+0x80>)
     384:	4798      	blx	r3
        main();
     386:	4b0a      	ldr	r3, [pc, #40]	; (3b0 <Reset_Handler+0x84>)
     388:	4798      	blx	r3
     38a:	e7fe      	b.n	38a <Reset_Handler+0x5e>
     38c:	0000a094 	.word	0x0000a094
     390:	20000000 	.word	0x20000000
     394:	20000a28 	.word	0x20000a28
     398:	20000004 	.word	0x20000004
     39c:	20000a28 	.word	0x20000a28
     3a0:	200013b4 	.word	0x200013b4
     3a4:	e000ed00 	.word	0xe000ed00
     3a8:	00000000 	.word	0x00000000
     3ac:	00004221 	.word	0x00004221
     3b0:	00002079 	.word	0x00002079

000003b4 <EDBG_0_PORT_init>:
	hri_mclk_set_APBAMASK_RTC_bit(MCLK);
	timer_init(&Timer, RTC, _rtc_get_timer());
}

void EDBG_0_PORT_init(void)
{
     3b4:	b530      	push	{r4, r5, lr}
static inline void hri_port_write_PINCFG_PMUXEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index,
                                                    bool value)
{
	uint8_t tmp;
	PORT_CRITICAL_SECTION_ENTER();
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     3b6:	4b11      	ldr	r3, [pc, #68]	; (3fc <EDBG_0_PORT_init+0x48>)
     3b8:	22ac      	movs	r2, #172	; 0xac
     3ba:	0052      	lsls	r2, r2, #1
     3bc:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     3be:	2501      	movs	r5, #1
     3c0:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     3c2:	2401      	movs	r4, #1
     3c4:	4321      	orrs	r1, r4
     3c6:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     3c8:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     3ca:	209e      	movs	r0, #158	; 0x9e
     3cc:	0040      	lsls	r0, r0, #1
     3ce:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     3d0:	3a4a      	subs	r2, #74	; 0x4a
     3d2:	3aff      	subs	r2, #255	; 0xff
     3d4:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     3d6:	3a0d      	subs	r2, #13
     3d8:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     3da:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     3dc:	215a      	movs	r1, #90	; 0x5a
     3de:	31ff      	adds	r1, #255	; 0xff
     3e0:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     3e2:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     3e4:	4322      	orrs	r2, r4
     3e6:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     3e8:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     3ea:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     3ec:	394b      	subs	r1, #75	; 0x4b
     3ee:	39ff      	subs	r1, #255	; 0xff
     3f0:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     3f2:	3111      	adds	r1, #17
     3f4:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     3f6:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(PC24, PINMUX_PC24C_SERCOM0_PAD2);

	gpio_set_pin_function(PC25, PINMUX_PC25C_SERCOM0_PAD3);
}
     3f8:	bd30      	pop	{r4, r5, pc}
     3fa:	46c0      	nop			; (mov r8, r8)
     3fc:	41006000 	.word	0x41006000

00000400 <EDBG_0_CLOCK_init>:
}

static inline void hri_gclk_write_PCHCTRL_reg(const void *const hw, uint8_t index, hri_gclk_pchctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->PCHCTRL[index].reg = data;
     400:	4b06      	ldr	r3, [pc, #24]	; (41c <EDBG_0_CLOCK_init+0x1c>)
     402:	2140      	movs	r1, #64	; 0x40
     404:	22c0      	movs	r2, #192	; 0xc0
     406:	5099      	str	r1, [r3, r2]
     408:	3103      	adds	r1, #3
     40a:	3a04      	subs	r2, #4
     40c:	5099      	str	r1, [r3, r2]
}

static inline void hri_mclk_set_APBCMASK_SERCOM0_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM0;
     40e:	4a04      	ldr	r2, [pc, #16]	; (420 <EDBG_0_CLOCK_init+0x20>)
     410:	69d3      	ldr	r3, [r2, #28]
     412:	3941      	subs	r1, #65	; 0x41
     414:	430b      	orrs	r3, r1
     416:	61d3      	str	r3, [r2, #28]
void EDBG_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM0_GCLK_ID_CORE, CONF_GCLK_SERCOM0_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM0_GCLK_ID_SLOW, CONF_GCLK_SERCOM0_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM0_bit(MCLK);
}
     418:	4770      	bx	lr
     41a:	46c0      	nop			; (mov r8, r8)
     41c:	40001c00 	.word	0x40001c00
     420:	40000800 	.word	0x40000800

00000424 <EDBG_0_init>:

void EDBG_0_init(void)
{
     424:	b510      	push	{r4, lr}
	EDBG_0_CLOCK_init();
     426:	4b05      	ldr	r3, [pc, #20]	; (43c <EDBG_0_init+0x18>)
     428:	4798      	blx	r3
	usart_sync_init(&EDBG_0, SERCOM0, (void *)NULL);
     42a:	2200      	movs	r2, #0
     42c:	4904      	ldr	r1, [pc, #16]	; (440 <EDBG_0_init+0x1c>)
     42e:	4805      	ldr	r0, [pc, #20]	; (444 <EDBG_0_init+0x20>)
     430:	4b05      	ldr	r3, [pc, #20]	; (448 <EDBG_0_init+0x24>)
     432:	4798      	blx	r3
	EDBG_0_PORT_init();
     434:	4b05      	ldr	r3, [pc, #20]	; (44c <EDBG_0_init+0x28>)
     436:	4798      	blx	r3
}
     438:	bd10      	pop	{r4, pc}
     43a:	46c0      	nop			; (mov r8, r8)
     43c:	00000401 	.word	0x00000401
     440:	42000400 	.word	0x42000400
     444:	200012e4 	.word	0x200012e4
     448:	00000f85 	.word	0x00000f85
     44c:	000003b5 	.word	0x000003b5

00000450 <ADXL345_0_PORT_init>:

void ADXL345_0_PORT_init(void)
{
     450:	b5f0      	push	{r4, r5, r6, r7, lr}
     452:	46ce      	mov	lr, r9
     454:	4647      	mov	r7, r8
     456:	b580      	push	{r7, lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     458:	25c0      	movs	r5, #192	; 0xc0
     45a:	05ed      	lsls	r5, r5, #23
     45c:	2484      	movs	r4, #132	; 0x84
     45e:	2180      	movs	r1, #128	; 0x80
     460:	05c9      	lsls	r1, r1, #23
     462:	5129      	str	r1, [r5, r4]
}

static inline void hri_port_set_PINCFG_PULLEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
     464:	4b1a      	ldr	r3, [pc, #104]	; (4d0 <ADXL345_0_PORT_init+0x80>)
     466:	20de      	movs	r0, #222	; 0xde
     468:	5c1a      	ldrb	r2, [r3, r0]
     46a:	2604      	movs	r6, #4
     46c:	46b4      	mov	ip, r6
     46e:	4666      	mov	r6, ip
     470:	4332      	orrs	r2, r6
     472:	b2d2      	uxtb	r2, r2
     474:	541a      	strb	r2, [r3, r0]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     476:	2298      	movs	r2, #152	; 0x98
     478:	4691      	mov	r9, r2
     47a:	50a9      	str	r1, [r5, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     47c:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     47e:	2701      	movs	r7, #1
     480:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     482:	2601      	movs	r6, #1
     484:	4331      	orrs	r1, r6
     486:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     488:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     48a:	381f      	subs	r0, #31
     48c:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     48e:	3a89      	subs	r2, #137	; 0x89
     490:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     492:	3a0d      	subs	r2, #13
     494:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     496:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     498:	2280      	movs	r2, #128	; 0x80
     49a:	0612      	lsls	r2, r2, #24
     49c:	4690      	mov	r8, r2
     49e:	512a      	str	r2, [r5, r4]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
     4a0:	345b      	adds	r4, #91	; 0x5b
     4a2:	5d19      	ldrb	r1, [r3, r4]
     4a4:	4662      	mov	r2, ip
     4a6:	4311      	orrs	r1, r2
     4a8:	b2c9      	uxtb	r1, r1
     4aa:	5519      	strb	r1, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     4ac:	4642      	mov	r2, r8
     4ae:	4649      	mov	r1, r9
     4b0:	506a      	str	r2, [r5, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4b2:	5d1a      	ldrb	r2, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4b4:	43ba      	bics	r2, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     4b6:	4332      	orrs	r2, r6
     4b8:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4ba:	551a      	strb	r2, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     4bc:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     4be:	3989      	subs	r1, #137	; 0x89
     4c0:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     4c2:	3111      	adds	r1, #17
     4c4:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     4c6:	541a      	strb	r2, [r3, r0]
	                       // <GPIO_PULL_UP"> Pull-up
	                       // <GPIO_PULL_DOWN"> Pull-down
	                       GPIO_PULL_UP);

	gpio_set_pin_function(PB31, PINMUX_PB31C_SERCOM1_PAD1);
}
     4c8:	bc0c      	pop	{r2, r3}
     4ca:	4690      	mov	r8, r2
     4cc:	4699      	mov	r9, r3
     4ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
     4d0:	41006000 	.word	0x41006000

000004d4 <ADXL345_0_CLOCK_init>:
     4d4:	4b06      	ldr	r3, [pc, #24]	; (4f0 <ADXL345_0_CLOCK_init+0x1c>)
     4d6:	2140      	movs	r1, #64	; 0x40
     4d8:	22c4      	movs	r2, #196	; 0xc4
     4da:	5099      	str	r1, [r3, r2]
     4dc:	3101      	adds	r1, #1
     4de:	3a08      	subs	r2, #8
     4e0:	5099      	str	r1, [r3, r2]
}

static inline void hri_mclk_set_APBCMASK_SERCOM1_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM1;
     4e2:	4a04      	ldr	r2, [pc, #16]	; (4f4 <ADXL345_0_CLOCK_init+0x20>)
     4e4:	69d3      	ldr	r3, [r2, #28]
     4e6:	393d      	subs	r1, #61	; 0x3d
     4e8:	430b      	orrs	r3, r1
     4ea:	61d3      	str	r3, [r2, #28]
void ADXL345_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM1_GCLK_ID_CORE, CONF_GCLK_SERCOM1_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM1_GCLK_ID_SLOW, CONF_GCLK_SERCOM1_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM1_bit(MCLK);
}
     4ec:	4770      	bx	lr
     4ee:	46c0      	nop			; (mov r8, r8)
     4f0:	40001c00 	.word	0x40001c00
     4f4:	40000800 	.word	0x40000800

000004f8 <ADXL345_0_init>:

void ADXL345_0_init(void)
{
     4f8:	b510      	push	{r4, lr}
	ADXL345_0_CLOCK_init();
     4fa:	4b04      	ldr	r3, [pc, #16]	; (50c <ADXL345_0_init+0x14>)
     4fc:	4798      	blx	r3
	i2c_m_sync_init(&ADXL345_0, SERCOM1);
     4fe:	4904      	ldr	r1, [pc, #16]	; (510 <ADXL345_0_init+0x18>)
     500:	4804      	ldr	r0, [pc, #16]	; (514 <ADXL345_0_init+0x1c>)
     502:	4b05      	ldr	r3, [pc, #20]	; (518 <ADXL345_0_init+0x20>)
     504:	4798      	blx	r3
	ADXL345_0_PORT_init();
     506:	4b05      	ldr	r3, [pc, #20]	; (51c <ADXL345_0_init+0x24>)
     508:	4798      	blx	r3
}
     50a:	bd10      	pop	{r4, pc}
     50c:	000004d5 	.word	0x000004d5
     510:	42000800 	.word	0x42000800
     514:	200012f0 	.word	0x200012f0
     518:	000009b1 	.word	0x000009b1
     51c:	00000451 	.word	0x00000451

00000520 <SEGMENT_LCD_0_PORT_init>:

void SEGMENT_LCD_0_PORT_init(void)
{
     520:	b5f0      	push	{r4, r5, r6, r7, lr}
     522:	46c6      	mov	lr, r8
     524:	b500      	push	{lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     526:	4bd0      	ldr	r3, [pc, #832]	; (868 <SEGMENT_LCD_0_PORT_init+0x348>)
     528:	2446      	movs	r4, #70	; 0x46
     52a:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     52c:	2101      	movs	r1, #1
     52e:	4388      	bics	r0, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     530:	2201      	movs	r2, #1
     532:	4310      	orrs	r0, r2
     534:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     536:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     538:	2733      	movs	r7, #51	; 0x33
     53a:	5dd8      	ldrb	r0, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     53c:	3c37      	subs	r4, #55	; 0x37
     53e:	46a0      	mov	r8, r4
     540:	43a0      	bics	r0, r4
	tmp |= PORT_PMUX_PMUXE(data);
     542:	4310      	orrs	r0, r2
     544:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     546:	55d8      	strb	r0, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     548:	3438      	adds	r4, #56	; 0x38
     54a:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     54c:	4388      	bics	r0, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     54e:	4310      	orrs	r0, r2
     550:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     552:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     554:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     556:	3c38      	subs	r4, #56	; 0x38
     558:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     55a:	2010      	movs	r0, #16
     55c:	4306      	orrs	r6, r0
     55e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     560:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     562:	2746      	movs	r7, #70	; 0x46
     564:	37ff      	adds	r7, #255	; 0xff
     566:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     568:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     56a:	4316      	orrs	r6, r2
     56c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     56e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     570:	3f13      	subs	r7, #19
     572:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     574:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     576:	4306      	orrs	r6, r0
     578:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     57a:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     57c:	3714      	adds	r7, #20
     57e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     580:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     582:	4316      	orrs	r6, r2
     584:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     586:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     588:	2734      	movs	r7, #52	; 0x34
     58a:	37ff      	adds	r7, #255	; 0xff
     58c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     58e:	4645      	mov	r5, r8
     590:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     592:	4316      	orrs	r6, r2
     594:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     596:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     598:	2648      	movs	r6, #72	; 0x48
     59a:	36ff      	adds	r6, #255	; 0xff
     59c:	46b4      	mov	ip, r6
     59e:	5d9e      	ldrb	r6, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5a0:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5a2:	4316      	orrs	r6, r2
     5a4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5a6:	4665      	mov	r5, ip
     5a8:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5aa:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     5ac:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     5ae:	4306      	orrs	r6, r0
     5b0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5b2:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5b4:	3feb      	subs	r7, #235	; 0xeb
     5b6:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5b8:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5ba:	4316      	orrs	r6, r2
     5bc:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5be:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5c0:	3f14      	subs	r7, #20
     5c2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     5c4:	4645      	mov	r5, r8
     5c6:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     5c8:	4316      	orrs	r6, r2
     5ca:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5cc:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5ce:	353a      	adds	r5, #58	; 0x3a
     5d0:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5d2:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5d4:	4316      	orrs	r6, r2
     5d6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5d8:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5da:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     5dc:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     5de:	4306      	orrs	r6, r0
     5e0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5e2:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5e4:	3716      	adds	r7, #22
     5e6:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5e8:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5ea:	4316      	orrs	r6, r2
     5ec:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5ee:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5f0:	3f15      	subs	r7, #21
     5f2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     5f4:	4645      	mov	r5, r8
     5f6:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     5f8:	4316      	orrs	r6, r2
     5fa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5fc:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5fe:	353c      	adds	r5, #60	; 0x3c
     600:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     602:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     604:	4316      	orrs	r6, r2
     606:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     608:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     60a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     60c:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     60e:	4306      	orrs	r6, r0
     610:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     612:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     614:	3714      	adds	r7, #20
     616:	37ff      	adds	r7, #255	; 0xff
     618:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     61a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     61c:	4316      	orrs	r6, r2
     61e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     620:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     622:	3f14      	subs	r7, #20
     624:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     626:	4645      	mov	r5, r8
     628:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     62a:	4316      	orrs	r6, r2
     62c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     62e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     630:	254a      	movs	r5, #74	; 0x4a
     632:	35ff      	adds	r5, #255	; 0xff
     634:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     636:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     638:	4316      	orrs	r6, r2
     63a:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     63c:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     63e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     640:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     642:	4306      	orrs	r6, r0
     644:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     646:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     648:	3716      	adds	r7, #22
     64a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     64c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     64e:	4316      	orrs	r6, r2
     650:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     652:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     654:	2736      	movs	r7, #54	; 0x36
     656:	37ff      	adds	r7, #255	; 0xff
     658:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     65a:	4645      	mov	r5, r8
     65c:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     65e:	4316      	orrs	r6, r2
     660:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     662:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     664:	254c      	movs	r5, #76	; 0x4c
     666:	35ff      	adds	r5, #255	; 0xff
     668:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     66a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     66c:	4316      	orrs	r6, r2
     66e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     670:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     672:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     674:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     676:	4306      	orrs	r6, r0
     678:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     67a:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     67c:	3717      	adds	r7, #23
     67e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     680:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     682:	4316      	orrs	r6, r2
     684:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     686:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     688:	3f16      	subs	r7, #22
     68a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     68c:	4645      	mov	r5, r8
     68e:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     690:	4316      	orrs	r6, r2
     692:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     694:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     696:	254e      	movs	r5, #78	; 0x4e
     698:	35ff      	adds	r5, #255	; 0xff
     69a:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     69c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     69e:	4316      	orrs	r6, r2
     6a0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6a2:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6a4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6a6:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     6a8:	4306      	orrs	r6, r0
     6aa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6ac:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6ae:	3f6b      	subs	r7, #107	; 0x6b
     6b0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6b2:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6b4:	4316      	orrs	r6, r2
     6b6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6b8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6ba:	3f16      	subs	r7, #22
     6bc:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6be:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     6c0:	4306      	orrs	r6, r0
     6c2:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6c4:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6c6:	3717      	adds	r7, #23
     6c8:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6ca:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6cc:	4316      	orrs	r6, r2
     6ce:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6d0:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6d2:	3f16      	subs	r7, #22
     6d4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     6d6:	4645      	mov	r5, r8
     6d8:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     6da:	4316      	orrs	r6, r2
     6dc:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6de:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6e0:	35be      	adds	r5, #190	; 0xbe
     6e2:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6e4:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6e6:	4316      	orrs	r6, r2
     6e8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6ea:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6ec:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6ee:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     6f0:	4306      	orrs	r6, r0
     6f2:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6f4:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6f6:	3718      	adds	r7, #24
     6f8:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6fa:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6fc:	4316      	orrs	r6, r2
     6fe:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     700:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     702:	3f17      	subs	r7, #23
     704:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     706:	4645      	mov	r5, r8
     708:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     70a:	4316      	orrs	r6, r2
     70c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     70e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     710:	35c0      	adds	r5, #192	; 0xc0
     712:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     714:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     716:	4316      	orrs	r6, r2
     718:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     71a:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     71c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     71e:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     720:	4306      	orrs	r6, r0
     722:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     724:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     726:	3797      	adds	r7, #151	; 0x97
     728:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     72a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     72c:	4316      	orrs	r6, r2
     72e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     730:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     732:	2738      	movs	r7, #56	; 0x38
     734:	37ff      	adds	r7, #255	; 0xff
     736:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     738:	4645      	mov	r5, r8
     73a:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     73c:	4316      	orrs	r6, r2
     73e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     740:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     742:	2550      	movs	r5, #80	; 0x50
     744:	35ff      	adds	r5, #255	; 0xff
     746:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     748:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     74a:	4316      	orrs	r6, r2
     74c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     74e:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     750:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     752:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     754:	4306      	orrs	r6, r0
     756:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     758:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     75a:	3fe9      	subs	r7, #233	; 0xe9
     75c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     75e:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     760:	4316      	orrs	r6, r2
     762:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     764:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     766:	3f17      	subs	r7, #23
     768:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     76a:	4645      	mov	r5, r8
     76c:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     76e:	4316      	orrs	r6, r2
     770:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     772:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     774:	3540      	adds	r5, #64	; 0x40
     776:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     778:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     77a:	4316      	orrs	r6, r2
     77c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     77e:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     780:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     782:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     784:	4306      	orrs	r6, r0
     786:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     788:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     78a:	371a      	adds	r7, #26
     78c:	37ff      	adds	r7, #255	; 0xff
     78e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     790:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     792:	4316      	orrs	r6, r2
     794:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     796:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     798:	3f18      	subs	r7, #24
     79a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     79c:	4645      	mov	r5, r8
     79e:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     7a0:	4316      	orrs	r6, r2
     7a2:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7a4:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7a6:	2552      	movs	r5, #82	; 0x52
     7a8:	35ff      	adds	r5, #255	; 0xff
     7aa:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7ac:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7ae:	4316      	orrs	r6, r2
     7b0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7b2:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7b4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     7b6:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     7b8:	4306      	orrs	r6, r0
     7ba:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7bc:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7be:	371a      	adds	r7, #26
     7c0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7c2:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7c4:	4316      	orrs	r6, r2
     7c6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7c8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7ca:	273a      	movs	r7, #58	; 0x3a
     7cc:	37ff      	adds	r7, #255	; 0xff
     7ce:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     7d0:	4645      	mov	r5, r8
     7d2:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     7d4:	4316      	orrs	r6, r2
     7d6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7d8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7da:	2554      	movs	r5, #84	; 0x54
     7dc:	35ff      	adds	r5, #255	; 0xff
     7de:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7e0:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7e2:	4316      	orrs	r6, r2
     7e4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7e6:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7e8:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     7ea:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     7ec:	4306      	orrs	r6, r0
     7ee:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7f0:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7f2:	371b      	adds	r7, #27
     7f4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7f6:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7f8:	4316      	orrs	r6, r2
     7fa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7fc:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7fe:	269d      	movs	r6, #157	; 0x9d
     800:	0076      	lsls	r6, r6, #1
     802:	5d9f      	ldrb	r7, [r3, r6]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     804:	4645      	mov	r5, r8
     806:	43af      	bics	r7, r5
     808:	003d      	movs	r5, r7
	tmp |= PORT_PMUX_PMUXE(data);
     80a:	4315      	orrs	r5, r2
     80c:	b2ed      	uxtb	r5, r5
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     80e:	559d      	strb	r5, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     810:	2756      	movs	r7, #86	; 0x56
     812:	37ff      	adds	r7, #255	; 0xff
     814:	5ddd      	ldrb	r5, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     816:	438d      	bics	r5, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     818:	432a      	orrs	r2, r5
     81a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     81c:	55da      	strb	r2, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     81e:	5d9a      	ldrb	r2, [r3, r6]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     820:	4014      	ands	r4, r2
	tmp |= PORT_PMUX_PMUXO(data);
     822:	4320      	orrs	r0, r4
     824:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     826:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     828:	22d0      	movs	r2, #208	; 0xd0
     82a:	5c9b      	ldrb	r3, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     82c:	438b      	bics	r3, r1
     82e:	0019      	movs	r1, r3
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     830:	2401      	movs	r4, #1
     832:	4321      	orrs	r1, r4
     834:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     836:	4b0c      	ldr	r3, [pc, #48]	; (868 <SEGMENT_LCD_0_PORT_init+0x348>)
     838:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     83a:	20b8      	movs	r0, #184	; 0xb8
     83c:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     83e:	3ac1      	subs	r2, #193	; 0xc1
     840:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     842:	4321      	orrs	r1, r4
     844:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     846:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     848:	21d1      	movs	r1, #209	; 0xd1
     84a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     84c:	2501      	movs	r5, #1
     84e:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     850:	4322      	orrs	r2, r4
     852:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     854:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     856:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     858:	39c2      	subs	r1, #194	; 0xc2
     85a:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     85c:	3101      	adds	r1, #1
     85e:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     860:	541a      	strb	r2, [r3, r0]
	gpio_set_pin_function(PC21, PINMUX_PC21B_SLCD_LP41);

	gpio_set_pin_function(PB16, PINMUX_PB16B_SLCD_LP42);

	gpio_set_pin_function(PB17, PINMUX_PB17B_SLCD_LP43);
}
     862:	bc04      	pop	{r2}
     864:	4690      	mov	r8, r2
     866:	bdf0      	pop	{r4, r5, r6, r7, pc}
     868:	41006000 	.word	0x41006000

0000086c <SEGMENT_LCD_0_init>:
 * \brief SLCD initialization function
 *
 * Enables SLCD peripheral, clocks and initializes SLCD driver
 */
void SEGMENT_LCD_0_init(void)
{
     86c:	b510      	push	{r4, lr}
}

static inline void hri_mclk_set_APBCMASK_SLCD_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SLCD;
     86e:	4906      	ldr	r1, [pc, #24]	; (888 <SEGMENT_LCD_0_init+0x1c>)
     870:	69ca      	ldr	r2, [r1, #28]
     872:	2380      	movs	r3, #128	; 0x80
     874:	021b      	lsls	r3, r3, #8
     876:	4313      	orrs	r3, r2
     878:	61cb      	str	r3, [r1, #28]
	hri_mclk_set_APBCMASK_SLCD_bit(SLCD);
	slcd_sync_init(&SEGMENT_LCD_0, SLCD);
     87a:	4804      	ldr	r0, [pc, #16]	; (88c <SEGMENT_LCD_0_init+0x20>)
     87c:	4b04      	ldr	r3, [pc, #16]	; (890 <SEGMENT_LCD_0_init+0x24>)
     87e:	4798      	blx	r3
	SEGMENT_LCD_0_PORT_init();
     880:	4b04      	ldr	r3, [pc, #16]	; (894 <SEGMENT_LCD_0_init+0x28>)
     882:	4798      	blx	r3
}
     884:	bd10      	pop	{r4, pc}
     886:	46c0      	nop			; (mov r8, r8)
     888:	42003c00 	.word	0x42003c00
     88c:	200012e0 	.word	0x200012e0
     890:	00000acd 	.word	0x00000acd
     894:	00000521 	.word	0x00000521

00000898 <system_init>:
	hri_gclk_write_PCHCTRL_reg(GCLK, PTC_GCLK_ID, CONF_GCLK_PTC_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_PTC_bit(MCLK);
}

void system_init(void)
{
     898:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     89a:	4b1a      	ldr	r3, [pc, #104]	; (904 <system_init+0x6c>)
     89c:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     89e:	23c0      	movs	r3, #192	; 0xc0
     8a0:	05db      	lsls	r3, r3, #23
     8a2:	2208      	movs	r2, #8
     8a4:	218a      	movs	r1, #138	; 0x8a
     8a6:	0049      	lsls	r1, r1, #1
     8a8:	505a      	str	r2, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     8aa:	390c      	subs	r1, #12
     8ac:	505a      	str	r2, [r3, r1]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     8ae:	4b16      	ldr	r3, [pc, #88]	; (908 <system_init+0x70>)
     8b0:	3221      	adds	r2, #33	; 0x21
     8b2:	32ff      	adds	r2, #255	; 0xff
     8b4:	4915      	ldr	r1, [pc, #84]	; (90c <system_init+0x74>)
     8b6:	5099      	str	r1, [r3, r2]
     8b8:	21c0      	movs	r1, #192	; 0xc0
     8ba:	0609      	lsls	r1, r1, #24
     8bc:	5099      	str	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     8be:	2144      	movs	r1, #68	; 0x44
     8c0:	31ff      	adds	r1, #255	; 0xff
     8c2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     8c4:	2001      	movs	r0, #1
     8c6:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     8c8:	545a      	strb	r2, [r3, r1]
	((Mclk *)hw)->APBAMASK.reg |= MCLK_APBAMASK_RTC;
     8ca:	4c11      	ldr	r4, [pc, #68]	; (910 <system_init+0x78>)
     8cc:	6962      	ldr	r2, [r4, #20]
     8ce:	2380      	movs	r3, #128	; 0x80
     8d0:	009b      	lsls	r3, r3, #2
     8d2:	4313      	orrs	r3, r2
     8d4:	6163      	str	r3, [r4, #20]
	timer_init(&Timer, RTC, _rtc_get_timer());
     8d6:	4b0f      	ldr	r3, [pc, #60]	; (914 <system_init+0x7c>)
     8d8:	4798      	blx	r3
     8da:	0002      	movs	r2, r0
     8dc:	490e      	ldr	r1, [pc, #56]	; (918 <system_init+0x80>)
     8de:	480f      	ldr	r0, [pc, #60]	; (91c <system_init+0x84>)
     8e0:	4b0f      	ldr	r3, [pc, #60]	; (920 <system_init+0x88>)
     8e2:	4798      	blx	r3

	gpio_set_pin_function(TEST_PIN, GPIO_PIN_FUNCTION_OFF);

	Timer_init();

	EDBG_0_init();
     8e4:	4b0f      	ldr	r3, [pc, #60]	; (924 <system_init+0x8c>)
     8e6:	4798      	blx	r3

	ADXL345_0_init();
     8e8:	4b0f      	ldr	r3, [pc, #60]	; (928 <system_init+0x90>)
     8ea:	4798      	blx	r3
	SEGMENT_LCD_0_init();
     8ec:	4b0f      	ldr	r3, [pc, #60]	; (92c <system_init+0x94>)
     8ee:	4798      	blx	r3
     8f0:	2141      	movs	r1, #65	; 0x41
     8f2:	23ec      	movs	r3, #236	; 0xec
     8f4:	4a0e      	ldr	r2, [pc, #56]	; (930 <system_init+0x98>)
     8f6:	50d1      	str	r1, [r2, r3]
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_PTC;
     8f8:	69e2      	ldr	r2, [r4, #28]
     8fa:	2380      	movs	r3, #128	; 0x80
     8fc:	01db      	lsls	r3, r3, #7
     8fe:	4313      	orrs	r3, r2
     900:	61e3      	str	r3, [r4, #28]

	PTC_clock_init();
}
     902:	bd10      	pop	{r4, pc}
     904:	000010a9 	.word	0x000010a9
     908:	41006000 	.word	0x41006000
     90c:	40000008 	.word	0x40000008
     910:	40000800 	.word	0x40000800
     914:	0000129b 	.word	0x0000129b
     918:	40002400 	.word	0x40002400
     91c:	200012c4 	.word	0x200012c4
     920:	00000d75 	.word	0x00000d75
     924:	00000425 	.word	0x00000425
     928:	000004f9 	.word	0x000004f9
     92c:	0000086d 	.word	0x0000086d
     930:	40001c00 	.word	0x40001c00

00000934 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     934:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     938:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     93a:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     93c:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     940:	4770      	bx	lr

00000942 <atomic_leave_critical>:
     942:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     946:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     948:	f383 8810 	msr	PRIMASK, r3
}
     94c:	4770      	bx	lr
	...

00000950 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     950:	b510      	push	{r4, lr}
     952:	b084      	sub	sp, #16
     954:	0014      	movs	r4, r2
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     956:	ab01      	add	r3, sp, #4
     958:	3814      	subs	r0, #20
     95a:	8b82      	ldrh	r2, [r0, #28]
     95c:	801a      	strh	r2, [r3, #0]
	msg.len    = n;
     95e:	9402      	str	r4, [sp, #8]
	msg.flags  = I2C_M_STOP;
     960:	4a05      	ldr	r2, [pc, #20]	; (978 <i2c_m_sync_write+0x28>)
     962:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     964:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     966:	0019      	movs	r1, r3
     968:	4b04      	ldr	r3, [pc, #16]	; (97c <i2c_m_sync_write+0x2c>)
     96a:	4798      	blx	r3

	if (ret) {
     96c:	2800      	cmp	r0, #0
     96e:	d100      	bne.n	972 <i2c_m_sync_write+0x22>
		return ret;
	}

	return n;
     970:	0020      	movs	r0, r4
}
     972:	b004      	add	sp, #16
     974:	bd10      	pop	{r4, pc}
     976:	46c0      	nop			; (mov r8, r8)
     978:	ffff8000 	.word	0xffff8000
     97c:	00001599 	.word	0x00001599

00000980 <i2c_m_sync_read>:
{
     980:	b510      	push	{r4, lr}
     982:	b084      	sub	sp, #16
     984:	0014      	movs	r4, r2
	msg.addr   = i2c->slave_addr;
     986:	ab01      	add	r3, sp, #4
     988:	3814      	subs	r0, #20
     98a:	8b82      	ldrh	r2, [r0, #28]
     98c:	801a      	strh	r2, [r3, #0]
	msg.len    = n;
     98e:	9402      	str	r4, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     990:	4a05      	ldr	r2, [pc, #20]	; (9a8 <i2c_m_sync_read+0x28>)
     992:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     994:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     996:	0019      	movs	r1, r3
     998:	4b04      	ldr	r3, [pc, #16]	; (9ac <i2c_m_sync_read+0x2c>)
     99a:	4798      	blx	r3
	if (ret) {
     99c:	2800      	cmp	r0, #0
     99e:	d100      	bne.n	9a2 <i2c_m_sync_read+0x22>
	return n;
     9a0:	0020      	movs	r0, r4
}
     9a2:	b004      	add	sp, #16
     9a4:	bd10      	pop	{r4, pc}
     9a6:	46c0      	nop			; (mov r8, r8)
     9a8:	ffff8001 	.word	0xffff8001
     9ac:	00001599 	.word	0x00001599

000009b0 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     9b0:	b570      	push	{r4, r5, r6, lr}
     9b2:	0004      	movs	r4, r0
     9b4:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     9b6:	1e43      	subs	r3, r0, #1
     9b8:	4198      	sbcs	r0, r3
     9ba:	b2c0      	uxtb	r0, r0
     9bc:	225e      	movs	r2, #94	; 0x5e
     9be:	4907      	ldr	r1, [pc, #28]	; (9dc <i2c_m_sync_init+0x2c>)
     9c0:	4b07      	ldr	r3, [pc, #28]	; (9e0 <i2c_m_sync_init+0x30>)
     9c2:	4798      	blx	r3

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     9c4:	0029      	movs	r1, r5
     9c6:	0020      	movs	r0, r4
     9c8:	4b06      	ldr	r3, [pc, #24]	; (9e4 <i2c_m_sync_init+0x34>)
     9ca:	4798      	blx	r3
	if (init_status) {
     9cc:	2800      	cmp	r0, #0
     9ce:	d103      	bne.n	9d8 <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     9d0:	4b05      	ldr	r3, [pc, #20]	; (9e8 <i2c_m_sync_init+0x38>)
     9d2:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     9d4:	4b05      	ldr	r3, [pc, #20]	; (9ec <i2c_m_sync_init+0x3c>)
     9d6:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     9d8:	bd70      	pop	{r4, r5, r6, pc}
     9da:	46c0      	nop			; (mov r8, r8)
     9dc:	00009834 	.word	0x00009834
     9e0:	00000ffd 	.word	0x00000ffd
     9e4:	000014e5 	.word	0x000014e5
     9e8:	00000981 	.word	0x00000981
     9ec:	00000951 	.word	0x00000951

000009f0 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     9f0:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     9f2:	4b01      	ldr	r3, [pc, #4]	; (9f8 <i2c_m_sync_enable+0x8>)
     9f4:	4798      	blx	r3
}
     9f6:	bd10      	pop	{r4, pc}
     9f8:	00001515 	.word	0x00001515

000009fc <i2c_m_sync_set_slaveaddr>:
/**
 * \brief Sync version of i2c set slave address
 */
int32_t i2c_m_sync_set_slaveaddr(struct i2c_m_sync_desc *i2c, int16_t addr, int32_t addr_len)
{
	return i2c->slave_addr = (addr & 0x3ff) | (addr_len & I2C_M_TEN);
     9fc:	0589      	lsls	r1, r1, #22
     9fe:	0d89      	lsrs	r1, r1, #22
     a00:	2380      	movs	r3, #128	; 0x80
     a02:	00db      	lsls	r3, r3, #3
     a04:	401a      	ands	r2, r3
     a06:	430a      	orrs	r2, r1
     a08:	8382      	strh	r2, [r0, #28]
}
     a0a:	0010      	movs	r0, r2
     a0c:	4770      	bx	lr
	...

00000a10 <i2c_m_sync_cmd_read>:

/**
 * \brief Sync version of i2c read command
 */
int32_t i2c_m_sync_cmd_read(struct i2c_m_sync_desc *i2c, uint8_t reg, uint8_t *buffer, uint8_t length)
{
     a10:	b570      	push	{r4, r5, r6, lr}
     a12:	b086      	sub	sp, #24
     a14:	0004      	movs	r4, r0
     a16:	0016      	movs	r6, r2
     a18:	001d      	movs	r5, r3
     a1a:	466b      	mov	r3, sp
     a1c:	71d9      	strb	r1, [r3, #7]
     a1e:	3307      	adds	r3, #7
	struct _i2c_m_msg msg;
	int32_t           ret;

	msg.addr   = i2c->slave_addr;
     a20:	a903      	add	r1, sp, #12
     a22:	8b82      	ldrh	r2, [r0, #28]
     a24:	800a      	strh	r2, [r1, #0]
	msg.len    = 1;
     a26:	2201      	movs	r2, #1
     a28:	604a      	str	r2, [r1, #4]
	msg.flags  = 0;
     a2a:	2200      	movs	r2, #0
     a2c:	804a      	strh	r2, [r1, #2]
	msg.buffer = &reg;
     a2e:	608b      	str	r3, [r1, #8]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     a30:	4b07      	ldr	r3, [pc, #28]	; (a50 <i2c_m_sync_cmd_read+0x40>)
     a32:	4798      	blx	r3

	if (ret != 0) {
     a34:	2800      	cmp	r0, #0
     a36:	d001      	beq.n	a3c <i2c_m_sync_cmd_read+0x2c>
		/* error occurred */
		return ret;
	}

	return ERR_NONE;
}
     a38:	b006      	add	sp, #24
     a3a:	bd70      	pop	{r4, r5, r6, pc}
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     a3c:	a903      	add	r1, sp, #12
     a3e:	4b05      	ldr	r3, [pc, #20]	; (a54 <i2c_m_sync_cmd_read+0x44>)
     a40:	804b      	strh	r3, [r1, #2]
	msg.buffer = buffer;
     a42:	608e      	str	r6, [r1, #8]
	msg.len    = length;
     a44:	604d      	str	r5, [r1, #4]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     a46:	0020      	movs	r0, r4
     a48:	4b01      	ldr	r3, [pc, #4]	; (a50 <i2c_m_sync_cmd_read+0x40>)
     a4a:	4798      	blx	r3
     a4c:	e7f4      	b.n	a38 <i2c_m_sync_cmd_read+0x28>
     a4e:	46c0      	nop			; (mov r8, r8)
     a50:	00001599 	.word	0x00001599
     a54:	ffff8001 	.word	0xffff8001

00000a58 <i2c_m_sync_transfer>:

/**
 * \brief Sync version of i2c transfer command
 */
int32_t i2c_m_sync_transfer(struct i2c_m_sync_desc *const i2c, struct _i2c_m_msg *msg)
{
     a58:	b510      	push	{r4, lr}
	return _i2c_m_sync_transfer(&i2c->device, msg);
     a5a:	4b01      	ldr	r3, [pc, #4]	; (a60 <i2c_m_sync_transfer+0x8>)
     a5c:	4798      	blx	r3
}
     a5e:	bd10      	pop	{r4, pc}
     a60:	00001599 	.word	0x00001599

00000a64 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     a64:	b570      	push	{r4, r5, r6, lr}
     a66:	0006      	movs	r6, r0
     a68:	000c      	movs	r4, r1
     a6a:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     a6c:	2800      	cmp	r0, #0
     a6e:	d00d      	beq.n	a8c <io_write+0x28>
     a70:	0008      	movs	r0, r1
     a72:	1e43      	subs	r3, r0, #1
     a74:	4198      	sbcs	r0, r3
     a76:	b2c0      	uxtb	r0, r0
     a78:	2234      	movs	r2, #52	; 0x34
     a7a:	4905      	ldr	r1, [pc, #20]	; (a90 <io_write+0x2c>)
     a7c:	4b05      	ldr	r3, [pc, #20]	; (a94 <io_write+0x30>)
     a7e:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     a80:	6833      	ldr	r3, [r6, #0]
     a82:	002a      	movs	r2, r5
     a84:	0021      	movs	r1, r4
     a86:	0030      	movs	r0, r6
     a88:	4798      	blx	r3
}
     a8a:	bd70      	pop	{r4, r5, r6, pc}
     a8c:	2000      	movs	r0, #0
     a8e:	e7f3      	b.n	a78 <io_write+0x14>
     a90:	00009850 	.word	0x00009850
     a94:	00000ffd 	.word	0x00000ffd

00000a98 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     a98:	b570      	push	{r4, r5, r6, lr}
     a9a:	0006      	movs	r6, r0
     a9c:	000c      	movs	r4, r1
     a9e:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     aa0:	2800      	cmp	r0, #0
     aa2:	d00d      	beq.n	ac0 <io_read+0x28>
     aa4:	0008      	movs	r0, r1
     aa6:	1e43      	subs	r3, r0, #1
     aa8:	4198      	sbcs	r0, r3
     aaa:	b2c0      	uxtb	r0, r0
     aac:	223d      	movs	r2, #61	; 0x3d
     aae:	4905      	ldr	r1, [pc, #20]	; (ac4 <io_read+0x2c>)
     ab0:	4b05      	ldr	r3, [pc, #20]	; (ac8 <io_read+0x30>)
     ab2:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     ab4:	6873      	ldr	r3, [r6, #4]
     ab6:	002a      	movs	r2, r5
     ab8:	0021      	movs	r1, r4
     aba:	0030      	movs	r0, r6
     abc:	4798      	blx	r3
}
     abe:	bd70      	pop	{r4, r5, r6, pc}
     ac0:	2000      	movs	r0, #0
     ac2:	e7f3      	b.n	aac <io_read+0x14>
     ac4:	00009850 	.word	0x00009850
     ac8:	00000ffd 	.word	0x00000ffd

00000acc <slcd_sync_init>:

/**
 * \brief              Initialize SLCD Descriptor
 */
int32_t slcd_sync_init(struct slcd_sync_descriptor *const descr, void *const hw)
{
     acc:	b570      	push	{r4, r5, r6, lr}
     ace:	0004      	movs	r4, r0
     ad0:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     ad2:	2800      	cmp	r0, #0
     ad4:	d00c      	beq.n	af0 <slcd_sync_init+0x24>
     ad6:	0008      	movs	r0, r1
     ad8:	1e43      	subs	r3, r0, #1
     ada:	4198      	sbcs	r0, r3
     adc:	b2c0      	uxtb	r0, r0
     ade:	222b      	movs	r2, #43	; 0x2b
     ae0:	4904      	ldr	r1, [pc, #16]	; (af4 <slcd_sync_init+0x28>)
     ae2:	4b05      	ldr	r3, [pc, #20]	; (af8 <slcd_sync_init+0x2c>)
     ae4:	4798      	blx	r3
	return _slcd_sync_init(&descr->dev, hw);
     ae6:	0029      	movs	r1, r5
     ae8:	0020      	movs	r0, r4
     aea:	4b04      	ldr	r3, [pc, #16]	; (afc <slcd_sync_init+0x30>)
     aec:	4798      	blx	r3
}
     aee:	bd70      	pop	{r4, r5, r6, pc}
     af0:	2000      	movs	r0, #0
     af2:	e7f4      	b.n	ade <slcd_sync_init+0x12>
     af4:	00009864 	.word	0x00009864
     af8:	00000ffd 	.word	0x00000ffd
     afc:	00001b45 	.word	0x00001b45

00000b00 <slcd_sync_enable>:
/**
 * \brief              Enable SLCD driver
 *
 */
int32_t slcd_sync_enable(struct slcd_sync_descriptor *const descr)
{
     b00:	b510      	push	{r4, lr}
     b02:	0004      	movs	r4, r0
	ASSERT(descr);
     b04:	1e43      	subs	r3, r0, #1
     b06:	4198      	sbcs	r0, r3
     b08:	b2c0      	uxtb	r0, r0
     b0a:	223e      	movs	r2, #62	; 0x3e
     b0c:	4903      	ldr	r1, [pc, #12]	; (b1c <slcd_sync_enable+0x1c>)
     b0e:	4b04      	ldr	r3, [pc, #16]	; (b20 <slcd_sync_enable+0x20>)
     b10:	4798      	blx	r3
	return _slcd_sync_enable(&descr->dev);
     b12:	0020      	movs	r0, r4
     b14:	4b03      	ldr	r3, [pc, #12]	; (b24 <slcd_sync_enable+0x24>)
     b16:	4798      	blx	r3
}
     b18:	bd10      	pop	{r4, pc}
     b1a:	46c0      	nop			; (mov r8, r8)
     b1c:	00009864 	.word	0x00009864
     b20:	00000ffd 	.word	0x00000ffd
     b24:	00001be9 	.word	0x00001be9

00000b28 <slcd_sync_seg_on>:
}
/**
 * \brief              Turn on a Segment
 */
int32_t slcd_sync_seg_on(struct slcd_sync_descriptor *const descr, uint32_t seg)
{
     b28:	b570      	push	{r4, r5, r6, lr}
     b2a:	0004      	movs	r4, r0
     b2c:	000d      	movs	r5, r1
	ASSERT(descr);
     b2e:	1e43      	subs	r3, r0, #1
     b30:	4198      	sbcs	r0, r3
     b32:	b2c0      	uxtb	r0, r0
     b34:	224f      	movs	r2, #79	; 0x4f
     b36:	4904      	ldr	r1, [pc, #16]	; (b48 <slcd_sync_seg_on+0x20>)
     b38:	4b04      	ldr	r3, [pc, #16]	; (b4c <slcd_sync_seg_on+0x24>)
     b3a:	4798      	blx	r3
	return _slcd_sync_seg_on(&descr->dev, seg);
     b3c:	0029      	movs	r1, r5
     b3e:	0020      	movs	r0, r4
     b40:	4b03      	ldr	r3, [pc, #12]	; (b50 <slcd_sync_seg_on+0x28>)
     b42:	4798      	blx	r3
}
     b44:	bd70      	pop	{r4, r5, r6, pc}
     b46:	46c0      	nop			; (mov r8, r8)
     b48:	00009864 	.word	0x00009864
     b4c:	00000ffd 	.word	0x00000ffd
     b50:	00001c01 	.word	0x00001c01

00000b54 <slcd_sync_seg_blink>:
}
/**
 * \brief              Blink a Segment
 */
int32_t slcd_sync_seg_blink(struct slcd_sync_descriptor *const descr, uint32_t seg, const uint32_t period)
{
     b54:	b570      	push	{r4, r5, r6, lr}
     b56:	0004      	movs	r4, r0
     b58:	000e      	movs	r6, r1
     b5a:	0015      	movs	r5, r2
	ASSERT(descr && period);
     b5c:	2800      	cmp	r0, #0
     b5e:	d00d      	beq.n	b7c <slcd_sync_seg_blink+0x28>
     b60:	0010      	movs	r0, r2
     b62:	1e43      	subs	r3, r0, #1
     b64:	4198      	sbcs	r0, r3
     b66:	b2c0      	uxtb	r0, r0
     b68:	225f      	movs	r2, #95	; 0x5f
     b6a:	4905      	ldr	r1, [pc, #20]	; (b80 <slcd_sync_seg_blink+0x2c>)
     b6c:	4b05      	ldr	r3, [pc, #20]	; (b84 <slcd_sync_seg_blink+0x30>)
     b6e:	4798      	blx	r3
	return _slcd_sync_seg_blink(&descr->dev, seg, period);
     b70:	002a      	movs	r2, r5
     b72:	0031      	movs	r1, r6
     b74:	0020      	movs	r0, r4
     b76:	4b04      	ldr	r3, [pc, #16]	; (b88 <slcd_sync_seg_blink+0x34>)
     b78:	4798      	blx	r3
}
     b7a:	bd70      	pop	{r4, r5, r6, pc}
     b7c:	2000      	movs	r0, #0
     b7e:	e7f3      	b.n	b68 <slcd_sync_seg_blink+0x14>
     b80:	00009864 	.word	0x00009864
     b84:	00000ffd 	.word	0x00000ffd
     b88:	00001c19 	.word	0x00001c19

00000b8c <slcd_sync_write_char>:

/**
 * \brief              Displays a character
 */
int32_t slcd_sync_write_char(struct slcd_sync_descriptor *const descr, const uint8_t character, uint32_t index)
{
     b8c:	b570      	push	{r4, r5, r6, lr}
     b8e:	0004      	movs	r4, r0
     b90:	000d      	movs	r5, r1
     b92:	0016      	movs	r6, r2
	ASSERT(descr);
     b94:	1e43      	subs	r3, r0, #1
     b96:	4198      	sbcs	r0, r3
     b98:	b2c0      	uxtb	r0, r0
     b9a:	2268      	movs	r2, #104	; 0x68
     b9c:	4904      	ldr	r1, [pc, #16]	; (bb0 <slcd_sync_write_char+0x24>)
     b9e:	4b05      	ldr	r3, [pc, #20]	; (bb4 <slcd_sync_write_char+0x28>)
     ba0:	4798      	blx	r3
	return _slcd_sync_write_char(&descr->dev, character, index);
     ba2:	0032      	movs	r2, r6
     ba4:	0029      	movs	r1, r5
     ba6:	0020      	movs	r0, r4
     ba8:	4b03      	ldr	r3, [pc, #12]	; (bb8 <slcd_sync_write_char+0x2c>)
     baa:	4798      	blx	r3
}
     bac:	bd70      	pop	{r4, r5, r6, pc}
     bae:	46c0      	nop			; (mov r8, r8)
     bb0:	00009864 	.word	0x00009864
     bb4:	00000ffd 	.word	0x00000ffd
     bb8:	00001d59 	.word	0x00001d59

00000bbc <slcd_sync_write_string>:
/**
 * \brief              Displays character string string
 */
int32_t slcd_sync_write_string(struct slcd_sync_descriptor *const descr, uint8_t *const str, uint32_t len,
                               uint32_t index)
{
     bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
     bbe:	46ce      	mov	lr, r9
     bc0:	b500      	push	{lr}
     bc2:	b082      	sub	sp, #8
     bc4:	9001      	str	r0, [sp, #4]
     bc6:	000f      	movs	r7, r1
     bc8:	0016      	movs	r6, r2
     bca:	001d      	movs	r5, r3
	uint32_t i;
	ASSERT(descr && len);
     bcc:	2800      	cmp	r0, #0
     bce:	d008      	beq.n	be2 <slcd_sync_write_string+0x26>
     bd0:	2a00      	cmp	r2, #0
     bd2:	d115      	bne.n	c00 <slcd_sync_write_string+0x44>
     bd4:	2273      	movs	r2, #115	; 0x73
     bd6:	4913      	ldr	r1, [pc, #76]	; (c24 <slcd_sync_write_string+0x68>)
     bd8:	2000      	movs	r0, #0
     bda:	4b13      	ldr	r3, [pc, #76]	; (c28 <slcd_sync_write_string+0x6c>)
     bdc:	4798      	blx	r3
	for (i = 0; i < len; i++) {
		if (_slcd_sync_write_char(&descr->dev, *(str + i), index + i) != ERR_NONE) {
			return ERR_INVALID_ARG;
		}
	}
	return ERR_NONE;
     bde:	2000      	movs	r0, #0
     be0:	e00a      	b.n	bf8 <slcd_sync_write_string+0x3c>
	ASSERT(descr && len);
     be2:	2273      	movs	r2, #115	; 0x73
     be4:	490f      	ldr	r1, [pc, #60]	; (c24 <slcd_sync_write_string+0x68>)
     be6:	2000      	movs	r0, #0
     be8:	4b0f      	ldr	r3, [pc, #60]	; (c28 <slcd_sync_write_string+0x6c>)
     bea:	4798      	blx	r3
	return ERR_NONE;
     bec:	2000      	movs	r0, #0
	for (i = 0; i < len; i++) {
     bee:	2e00      	cmp	r6, #0
     bf0:	d10b      	bne.n	c0a <slcd_sync_write_string+0x4e>
     bf2:	e001      	b.n	bf8 <slcd_sync_write_string+0x3c>
			return ERR_INVALID_ARG;
     bf4:	200d      	movs	r0, #13
     bf6:	4240      	negs	r0, r0
}
     bf8:	b002      	add	sp, #8
     bfa:	bc04      	pop	{r2}
     bfc:	4691      	mov	r9, r2
     bfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
	ASSERT(descr && len);
     c00:	2273      	movs	r2, #115	; 0x73
     c02:	4908      	ldr	r1, [pc, #32]	; (c24 <slcd_sync_write_string+0x68>)
     c04:	2001      	movs	r0, #1
     c06:	4b08      	ldr	r3, [pc, #32]	; (c28 <slcd_sync_write_string+0x6c>)
     c08:	4798      	blx	r3
{
     c0a:	2400      	movs	r4, #0
		if (_slcd_sync_write_char(&descr->dev, *(str + i), index + i) != ERR_NONE) {
     c0c:	4b07      	ldr	r3, [pc, #28]	; (c2c <slcd_sync_write_string+0x70>)
     c0e:	4699      	mov	r9, r3
     c10:	192a      	adds	r2, r5, r4
     c12:	5d39      	ldrb	r1, [r7, r4]
     c14:	9801      	ldr	r0, [sp, #4]
     c16:	47c8      	blx	r9
     c18:	2800      	cmp	r0, #0
     c1a:	d1eb      	bne.n	bf4 <slcd_sync_write_string+0x38>
	for (i = 0; i < len; i++) {
     c1c:	3401      	adds	r4, #1
     c1e:	42a6      	cmp	r6, r4
     c20:	d8f6      	bhi.n	c10 <slcd_sync_write_string+0x54>
     c22:	e7e9      	b.n	bf8 <slcd_sync_write_string+0x3c>
     c24:	00009864 	.word	0x00009864
     c28:	00000ffd 	.word	0x00000ffd
     c2c:	00001d59 	.word	0x00001d59

00000c30 <slcd_sync_start_animation>:
/**
 * \brief               Start animation play by a segment array
 */
int32_t slcd_sync_start_animation(struct slcd_sync_descriptor *const descr, const uint32_t segs[], uint32_t len,
                                  const uint32_t period)
{
     c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c32:	0004      	movs	r4, r0
     c34:	000d      	movs	r5, r1
     c36:	0016      	movs	r6, r2
     c38:	001f      	movs	r7, r3
	ASSERT(descr && segs && len && period);
     c3a:	2800      	cmp	r0, #0
     c3c:	d012      	beq.n	c64 <slcd_sync_start_animation+0x34>
     c3e:	2900      	cmp	r1, #0
     c40:	d012      	beq.n	c68 <slcd_sync_start_animation+0x38>
     c42:	2000      	movs	r0, #0
     c44:	2a00      	cmp	r2, #0
     c46:	d002      	beq.n	c4e <slcd_sync_start_animation+0x1e>
     c48:	0018      	movs	r0, r3
     c4a:	1e43      	subs	r3, r0, #1
     c4c:	4198      	sbcs	r0, r3
     c4e:	2282      	movs	r2, #130	; 0x82
     c50:	4906      	ldr	r1, [pc, #24]	; (c6c <slcd_sync_start_animation+0x3c>)
     c52:	4b07      	ldr	r3, [pc, #28]	; (c70 <slcd_sync_start_animation+0x40>)
     c54:	4798      	blx	r3
	return _slcd_sync_start_animation(&descr->dev, segs, len, period);
     c56:	003b      	movs	r3, r7
     c58:	0032      	movs	r2, r6
     c5a:	0029      	movs	r1, r5
     c5c:	0020      	movs	r0, r4
     c5e:	4c05      	ldr	r4, [pc, #20]	; (c74 <slcd_sync_start_animation+0x44>)
     c60:	47a0      	blx	r4
}
     c62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && segs && len && period);
     c64:	2000      	movs	r0, #0
     c66:	e7f2      	b.n	c4e <slcd_sync_start_animation+0x1e>
     c68:	2000      	movs	r0, #0
     c6a:	e7f0      	b.n	c4e <slcd_sync_start_animation+0x1e>
     c6c:	00009864 	.word	0x00009864
     c70:	00000ffd 	.word	0x00000ffd
     c74:	00001edd 	.word	0x00001edd

00000c78 <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
     c78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c7a:	46ce      	mov	lr, r9
     c7c:	4647      	mov	r7, r8
     c7e:	b580      	push	{r7, lr}
     c80:	4681      	mov	r9, r0
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
     c82:	6803      	ldr	r3, [r0, #0]
     c84:	469c      	mov	ip, r3
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
     c86:	2b00      	cmp	r3, #0
     c88:	d005      	beq.n	c96 <timer_add_timer_task+0x1e>
		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
		}
		if (time_left >= new_task->interval)
     c8a:	688e      	ldr	r6, [r1, #8]
     c8c:	001c      	movs	r4, r3
     c8e:	2500      	movs	r5, #0
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     c90:	2701      	movs	r7, #1
     c92:	1abf      	subs	r7, r7, r2
     c94:	e00d      	b.n	cb2 <timer_add_timer_task+0x3a>
		list_insert_as_head(list, new_task);
     c96:	4b12      	ldr	r3, [pc, #72]	; (ce0 <timer_add_timer_task+0x68>)
     c98:	4798      	blx	r3
		return;
     c9a:	e018      	b.n	cce <timer_add_timer_task+0x56>
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     c9c:	18fb      	adds	r3, r7, r3
     c9e:	68a0      	ldr	r0, [r4, #8]
     ca0:	4680      	mov	r8, r0
     ca2:	4443      	add	r3, r8
		if (time_left >= new_task->interval)
     ca4:	42b3      	cmp	r3, r6
     ca6:	d20c      	bcs.n	cc2 <timer_add_timer_task+0x4a>
 * \return A pointer to the next list element or NULL if there is not next
 * element
 */
static inline void *list_get_next_element(const void *const element)
{
	return element ? ((struct list_element *)element)->next : NULL;
     ca8:	6823      	ldr	r3, [r4, #0]
     caa:	0025      	movs	r5, r4
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
     cac:	2b00      	cmp	r3, #0
     cae:	d00b      	beq.n	cc8 <timer_add_timer_task+0x50>
     cb0:	001c      	movs	r4, r3
		if (it->time_label <= time) {
     cb2:	6863      	ldr	r3, [r4, #4]
     cb4:	4293      	cmp	r3, r2
     cb6:	d8f1      	bhi.n	c9c <timer_add_timer_task+0x24>
			time_left = it->interval - (time - it->time_label);
     cb8:	68a0      	ldr	r0, [r4, #8]
     cba:	4680      	mov	r8, r0
     cbc:	4443      	add	r3, r8
     cbe:	1a9b      	subs	r3, r3, r2
     cc0:	e7f0      	b.n	ca4 <timer_add_timer_task+0x2c>
			break;
		prev = it;
	}

	if (it == head) {
     cc2:	45a4      	cmp	ip, r4
     cc4:	d007      	beq.n	cd6 <timer_add_timer_task+0x5e>
     cc6:	002c      	movs	r4, r5
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
     cc8:	0020      	movs	r0, r4
     cca:	4b06      	ldr	r3, [pc, #24]	; (ce4 <timer_add_timer_task+0x6c>)
     ccc:	4798      	blx	r3
	}
}
     cce:	bc0c      	pop	{r2, r3}
     cd0:	4690      	mov	r8, r2
     cd2:	4699      	mov	r9, r3
     cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
     cd6:	4648      	mov	r0, r9
     cd8:	4b01      	ldr	r3, [pc, #4]	; (ce0 <timer_add_timer_task+0x68>)
     cda:	4798      	blx	r3
     cdc:	e7f7      	b.n	cce <timer_add_timer_task+0x56>
     cde:	46c0      	nop			; (mov r8, r8)
     ce0:	00001029 	.word	0x00001029
     ce4:	00001055 	.word	0x00001055

00000ce8 <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
     ce8:	b5f0      	push	{r4, r5, r6, r7, lr}
     cea:	46c6      	mov	lr, r8
     cec:	b500      	push	{lr}
     cee:	b082      	sub	sp, #8
     cf0:	0007      	movs	r7, r0
	return (void *)list->head;
     cf2:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
     cf4:	6903      	ldr	r3, [r0, #16]
     cf6:	3301      	adds	r3, #1
     cf8:	4698      	mov	r8, r3
     cfa:	6103      	str	r3, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
     cfc:	7e03      	ldrb	r3, [r0, #24]
     cfe:	07db      	lsls	r3, r3, #31
     d00:	d411      	bmi.n	d26 <timer_process_counted+0x3e>
     d02:	7e03      	ldrb	r3, [r0, #24]
     d04:	079b      	lsls	r3, r3, #30
     d06:	d40e      	bmi.n	d26 <timer_process_counted+0x3e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
		return;
	}

	while (it && ((time - it->time_label) >= it->interval)) {
     d08:	2c00      	cmp	r4, #0
     d0a:	d010      	beq.n	d2e <timer_process_counted+0x46>
     d0c:	4643      	mov	r3, r8
     d0e:	6862      	ldr	r2, [r4, #4]
     d10:	1a9b      	subs	r3, r3, r2
     d12:	68a2      	ldr	r2, [r4, #8]
     d14:	4293      	cmp	r3, r2
     d16:	d30a      	bcc.n	d2e <timer_process_counted+0x46>
		struct timer_task *tmp = it;

		list_remove_head(&timer->tasks);
     d18:	2314      	movs	r3, #20
     d1a:	469c      	mov	ip, r3
     d1c:	4484      	add	ip, r0
     d1e:	4663      	mov	r3, ip
     d20:	9301      	str	r3, [sp, #4]
     d22:	4e12      	ldr	r6, [pc, #72]	; (d6c <timer_process_counted+0x84>)
     d24:	e014      	b.n	d50 <timer_process_counted+0x68>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
     d26:	7e3b      	ldrb	r3, [r7, #24]
     d28:	2202      	movs	r2, #2
     d2a:	4313      	orrs	r3, r2
     d2c:	763b      	strb	r3, [r7, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
     d2e:	b002      	add	sp, #8
     d30:	bc04      	pop	{r2}
     d32:	4690      	mov	r8, r2
     d34:	bdf0      	pop	{r4, r5, r6, r7, pc}
     d36:	697d      	ldr	r5, [r7, #20]
		tmp->cb(tmp);
     d38:	68e3      	ldr	r3, [r4, #12]
     d3a:	0020      	movs	r0, r4
     d3c:	4798      	blx	r3
	while (it && ((time - it->time_label) >= it->interval)) {
     d3e:	2d00      	cmp	r5, #0
     d40:	d0f5      	beq.n	d2e <timer_process_counted+0x46>
		it = (struct timer_task *)list_get_head(&timer->tasks);
     d42:	002c      	movs	r4, r5
	while (it && ((time - it->time_label) >= it->interval)) {
     d44:	4643      	mov	r3, r8
     d46:	686a      	ldr	r2, [r5, #4]
     d48:	1a9b      	subs	r3, r3, r2
     d4a:	68aa      	ldr	r2, [r5, #8]
     d4c:	4293      	cmp	r3, r2
     d4e:	d3ee      	bcc.n	d2e <timer_process_counted+0x46>
		list_remove_head(&timer->tasks);
     d50:	9801      	ldr	r0, [sp, #4]
     d52:	47b0      	blx	r6
		if (TIMER_TASK_REPEAT == tmp->mode) {
     d54:	7c23      	ldrb	r3, [r4, #16]
     d56:	2b01      	cmp	r3, #1
     d58:	d1ed      	bne.n	d36 <timer_process_counted+0x4e>
			tmp->time_label = time;
     d5a:	4643      	mov	r3, r8
     d5c:	6063      	str	r3, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
     d5e:	4642      	mov	r2, r8
     d60:	0021      	movs	r1, r4
     d62:	9801      	ldr	r0, [sp, #4]
     d64:	4b02      	ldr	r3, [pc, #8]	; (d70 <timer_process_counted+0x88>)
     d66:	4798      	blx	r3
     d68:	e7e5      	b.n	d36 <timer_process_counted+0x4e>
     d6a:	46c0      	nop			; (mov r8, r8)
     d6c:	0000105d 	.word	0x0000105d
     d70:	00000c79 	.word	0x00000c79

00000d74 <timer_init>:
{
     d74:	b570      	push	{r4, r5, r6, lr}
     d76:	0005      	movs	r5, r0
     d78:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     d7a:	2800      	cmp	r0, #0
     d7c:	d011      	beq.n	da2 <timer_init+0x2e>
     d7e:	0008      	movs	r0, r1
     d80:	1e43      	subs	r3, r0, #1
     d82:	4198      	sbcs	r0, r3
     d84:	b2c0      	uxtb	r0, r0
     d86:	223b      	movs	r2, #59	; 0x3b
     d88:	4907      	ldr	r1, [pc, #28]	; (da8 <timer_init+0x34>)
     d8a:	4b08      	ldr	r3, [pc, #32]	; (dac <timer_init+0x38>)
     d8c:	4798      	blx	r3
	_timer_init(&descr->device, hw);
     d8e:	0021      	movs	r1, r4
     d90:	0028      	movs	r0, r5
     d92:	4b07      	ldr	r3, [pc, #28]	; (db0 <timer_init+0x3c>)
     d94:	4798      	blx	r3
	descr->time                           = 0;
     d96:	2300      	movs	r3, #0
     d98:	612b      	str	r3, [r5, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
     d9a:	4b06      	ldr	r3, [pc, #24]	; (db4 <timer_init+0x40>)
     d9c:	602b      	str	r3, [r5, #0]
}
     d9e:	2000      	movs	r0, #0
     da0:	bd70      	pop	{r4, r5, r6, pc}
     da2:	2000      	movs	r0, #0
     da4:	e7ef      	b.n	d86 <timer_init+0x12>
     da6:	46c0      	nop			; (mov r8, r8)
     da8:	00009880 	.word	0x00009880
     dac:	00000ffd 	.word	0x00000ffd
     db0:	000011b9 	.word	0x000011b9
     db4:	00000ce9 	.word	0x00000ce9

00000db8 <timer_start>:
{
     db8:	b510      	push	{r4, lr}
     dba:	0004      	movs	r4, r0
	ASSERT(descr);
     dbc:	1e43      	subs	r3, r0, #1
     dbe:	4198      	sbcs	r0, r3
     dc0:	b2c0      	uxtb	r0, r0
     dc2:	2253      	movs	r2, #83	; 0x53
     dc4:	4907      	ldr	r1, [pc, #28]	; (de4 <timer_start+0x2c>)
     dc6:	4b08      	ldr	r3, [pc, #32]	; (de8 <timer_start+0x30>)
     dc8:	4798      	blx	r3
	if (_timer_is_started(&descr->device)) {
     dca:	0020      	movs	r0, r4
     dcc:	4b07      	ldr	r3, [pc, #28]	; (dec <timer_start+0x34>)
     dce:	4798      	blx	r3
     dd0:	2800      	cmp	r0, #0
     dd2:	d104      	bne.n	dde <timer_start+0x26>
	_timer_start(&descr->device);
     dd4:	0020      	movs	r0, r4
     dd6:	4b06      	ldr	r3, [pc, #24]	; (df0 <timer_start+0x38>)
     dd8:	4798      	blx	r3
	return ERR_NONE;
     dda:	2000      	movs	r0, #0
}
     ddc:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     dde:	2011      	movs	r0, #17
     de0:	4240      	negs	r0, r0
     de2:	e7fb      	b.n	ddc <timer_start+0x24>
     de4:	00009880 	.word	0x00009880
     de8:	00000ffd 	.word	0x00000ffd
     dec:	00001281 	.word	0x00001281
     df0:	00001225 	.word	0x00001225

00000df4 <timer_add_task>:
{
     df4:	b570      	push	{r4, r5, r6, lr}
     df6:	b082      	sub	sp, #8
     df8:	0004      	movs	r4, r0
     dfa:	000d      	movs	r5, r1
	ASSERT(descr && task);
     dfc:	2800      	cmp	r0, #0
     dfe:	d024      	beq.n	e4a <timer_add_task+0x56>
     e00:	0008      	movs	r0, r1
     e02:	1e43      	subs	r3, r0, #1
     e04:	4198      	sbcs	r0, r3
     e06:	b2c0      	uxtb	r0, r0
     e08:	227a      	movs	r2, #122	; 0x7a
     e0a:	491e      	ldr	r1, [pc, #120]	; (e84 <timer_add_task+0x90>)
     e0c:	4b1e      	ldr	r3, [pc, #120]	; (e88 <timer_add_task+0x94>)
     e0e:	4798      	blx	r3
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     e10:	7e23      	ldrb	r3, [r4, #24]
     e12:	2201      	movs	r2, #1
     e14:	4313      	orrs	r3, r2
     e16:	7623      	strb	r3, [r4, #24]
	if (is_list_element(&descr->tasks, task)) {
     e18:	0026      	movs	r6, r4
     e1a:	3614      	adds	r6, #20
     e1c:	0029      	movs	r1, r5
     e1e:	0030      	movs	r0, r6
     e20:	4b1a      	ldr	r3, [pc, #104]	; (e8c <timer_add_task+0x98>)
     e22:	4798      	blx	r3
     e24:	2800      	cmp	r0, #0
     e26:	d112      	bne.n	e4e <timer_add_task+0x5a>
	task->time_label = descr->time;
     e28:	6923      	ldr	r3, [r4, #16]
     e2a:	606b      	str	r3, [r5, #4]
	timer_add_timer_task(&descr->tasks, task, descr->time);
     e2c:	6922      	ldr	r2, [r4, #16]
     e2e:	0029      	movs	r1, r5
     e30:	0030      	movs	r0, r6
     e32:	4b17      	ldr	r3, [pc, #92]	; (e90 <timer_add_task+0x9c>)
     e34:	4798      	blx	r3
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     e36:	7e23      	ldrb	r3, [r4, #24]
     e38:	2201      	movs	r2, #1
     e3a:	4393      	bics	r3, r2
     e3c:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     e3e:	7e23      	ldrb	r3, [r4, #24]
	return ERR_NONE;
     e40:	2000      	movs	r0, #0
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     e42:	079b      	lsls	r3, r3, #30
     e44:	d40f      	bmi.n	e66 <timer_add_task+0x72>
}
     e46:	b002      	add	sp, #8
     e48:	bd70      	pop	{r4, r5, r6, pc}
     e4a:	2000      	movs	r0, #0
     e4c:	e7dc      	b.n	e08 <timer_add_task+0x14>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     e4e:	7e23      	ldrb	r3, [r4, #24]
     e50:	2201      	movs	r2, #1
     e52:	4393      	bics	r3, r2
     e54:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     e56:	327e      	adds	r2, #126	; 0x7e
     e58:	490a      	ldr	r1, [pc, #40]	; (e84 <timer_add_task+0x90>)
     e5a:	2000      	movs	r0, #0
     e5c:	4b0a      	ldr	r3, [pc, #40]	; (e88 <timer_add_task+0x94>)
     e5e:	4798      	blx	r3
		return ERR_ALREADY_INITIALIZED;
     e60:	2012      	movs	r0, #18
     e62:	4240      	negs	r0, r0
     e64:	e7ef      	b.n	e46 <timer_add_task+0x52>
		CRITICAL_SECTION_ENTER()
     e66:	a801      	add	r0, sp, #4
     e68:	4b0a      	ldr	r3, [pc, #40]	; (e94 <timer_add_task+0xa0>)
     e6a:	4798      	blx	r3
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     e6c:	7e23      	ldrb	r3, [r4, #24]
     e6e:	2202      	movs	r2, #2
     e70:	4393      	bics	r3, r2
     e72:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     e74:	0020      	movs	r0, r4
     e76:	4b08      	ldr	r3, [pc, #32]	; (e98 <timer_add_task+0xa4>)
     e78:	4798      	blx	r3
		CRITICAL_SECTION_LEAVE()
     e7a:	a801      	add	r0, sp, #4
     e7c:	4b07      	ldr	r3, [pc, #28]	; (e9c <timer_add_task+0xa8>)
     e7e:	4798      	blx	r3
	return ERR_NONE;
     e80:	2000      	movs	r0, #0
     e82:	e7e0      	b.n	e46 <timer_add_task+0x52>
     e84:	00009880 	.word	0x00009880
     e88:	00000ffd 	.word	0x00000ffd
     e8c:	00001005 	.word	0x00001005
     e90:	00000c79 	.word	0x00000c79
     e94:	00000935 	.word	0x00000935
     e98:	00001299 	.word	0x00001299
     e9c:	00000943 	.word	0x00000943

00000ea0 <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     ea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     ea2:	46ce      	mov	lr, r9
     ea4:	4647      	mov	r7, r8
     ea6:	b580      	push	{r7, lr}
     ea8:	0004      	movs	r4, r0
     eaa:	000f      	movs	r7, r1
     eac:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     eae:	2800      	cmp	r0, #0
     eb0:	d026      	beq.n	f00 <usart_sync_write+0x60>
     eb2:	2900      	cmp	r1, #0
     eb4:	d026      	beq.n	f04 <usart_sync_write+0x64>
     eb6:	0010      	movs	r0, r2
     eb8:	1e43      	subs	r3, r0, #1
     eba:	4198      	sbcs	r0, r3
     ebc:	22f1      	movs	r2, #241	; 0xf1
     ebe:	4912      	ldr	r1, [pc, #72]	; (f08 <usart_sync_write+0x68>)
     ec0:	4b12      	ldr	r3, [pc, #72]	; (f0c <usart_sync_write+0x6c>)
     ec2:	4798      	blx	r3
	while (!_usart_sync_is_ready_to_send(&descr->device))
     ec4:	3408      	adds	r4, #8
     ec6:	4d12      	ldr	r5, [pc, #72]	; (f10 <usart_sync_write+0x70>)
     ec8:	0020      	movs	r0, r4
     eca:	47a8      	blx	r5
     ecc:	2800      	cmp	r0, #0
     ece:	d0fb      	beq.n	ec8 <usart_sync_write+0x28>
     ed0:	2600      	movs	r6, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
     ed2:	4b10      	ldr	r3, [pc, #64]	; (f14 <usart_sync_write+0x74>)
     ed4:	4699      	mov	r9, r3
		while (!_usart_sync_is_ready_to_send(&descr->device))
     ed6:	4d0e      	ldr	r5, [pc, #56]	; (f10 <usart_sync_write+0x70>)
		_usart_sync_write_byte(&descr->device, buf[offset]);
     ed8:	5db9      	ldrb	r1, [r7, r6]
     eda:	0020      	movs	r0, r4
     edc:	47c8      	blx	r9
		while (!_usart_sync_is_ready_to_send(&descr->device))
     ede:	0020      	movs	r0, r4
     ee0:	47a8      	blx	r5
     ee2:	2800      	cmp	r0, #0
     ee4:	d0fb      	beq.n	ede <usart_sync_write+0x3e>
			;
	} while (++offset < length);
     ee6:	3601      	adds	r6, #1
     ee8:	4546      	cmp	r6, r8
     eea:	d3f5      	bcc.n	ed8 <usart_sync_write+0x38>
	while (!_usart_sync_is_transmit_done(&descr->device))
     eec:	4d0a      	ldr	r5, [pc, #40]	; (f18 <usart_sync_write+0x78>)
     eee:	0020      	movs	r0, r4
     ef0:	47a8      	blx	r5
     ef2:	2800      	cmp	r0, #0
     ef4:	d0fb      	beq.n	eee <usart_sync_write+0x4e>
		;
	return (int32_t)offset;
}
     ef6:	0030      	movs	r0, r6
     ef8:	bc0c      	pop	{r2, r3}
     efa:	4690      	mov	r8, r2
     efc:	4699      	mov	r9, r3
     efe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     f00:	2000      	movs	r0, #0
     f02:	e7db      	b.n	ebc <usart_sync_write+0x1c>
     f04:	2000      	movs	r0, #0
     f06:	e7d9      	b.n	ebc <usart_sync_write+0x1c>
     f08:	00009898 	.word	0x00009898
     f0c:	00000ffd 	.word	0x00000ffd
     f10:	000014c5 	.word	0x000014c5
     f14:	000014b5 	.word	0x000014b5
     f18:	000014cf 	.word	0x000014cf

00000f1c <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     f1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     f1e:	46ce      	mov	lr, r9
     f20:	4647      	mov	r7, r8
     f22:	b580      	push	{r7, lr}
     f24:	0004      	movs	r4, r0
     f26:	000f      	movs	r7, r1
     f28:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     f2a:	2800      	cmp	r0, #0
     f2c:	d01d      	beq.n	f6a <usart_sync_read+0x4e>
     f2e:	2900      	cmp	r1, #0
     f30:	d01d      	beq.n	f6e <usart_sync_read+0x52>
     f32:	0010      	movs	r0, r2
     f34:	1e43      	subs	r3, r0, #1
     f36:	4198      	sbcs	r0, r3
     f38:	2286      	movs	r2, #134	; 0x86
     f3a:	0052      	lsls	r2, r2, #1
     f3c:	490d      	ldr	r1, [pc, #52]	; (f74 <usart_sync_read+0x58>)
     f3e:	4b0e      	ldr	r3, [pc, #56]	; (f78 <usart_sync_read+0x5c>)
     f40:	4798      	blx	r3
	uint32_t                      offset = 0;
     f42:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
     f44:	3408      	adds	r4, #8
     f46:	4d0d      	ldr	r5, [pc, #52]	; (f7c <usart_sync_read+0x60>)
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
     f48:	4b0d      	ldr	r3, [pc, #52]	; (f80 <usart_sync_read+0x64>)
     f4a:	4699      	mov	r9, r3
		while (!_usart_sync_is_byte_received(&descr->device))
     f4c:	0020      	movs	r0, r4
     f4e:	47a8      	blx	r5
     f50:	2800      	cmp	r0, #0
     f52:	d0fb      	beq.n	f4c <usart_sync_read+0x30>
		buf[offset] = _usart_sync_read_byte(&descr->device);
     f54:	0020      	movs	r0, r4
     f56:	47c8      	blx	r9
     f58:	55b8      	strb	r0, [r7, r6]
	} while (++offset < length);
     f5a:	3601      	adds	r6, #1
     f5c:	4546      	cmp	r6, r8
     f5e:	d3f5      	bcc.n	f4c <usart_sync_read+0x30>

	return (int32_t)offset;
}
     f60:	0030      	movs	r0, r6
     f62:	bc0c      	pop	{r2, r3}
     f64:	4690      	mov	r8, r2
     f66:	4699      	mov	r9, r3
     f68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     f6a:	2000      	movs	r0, #0
     f6c:	e7e4      	b.n	f38 <usart_sync_read+0x1c>
     f6e:	2000      	movs	r0, #0
     f70:	e7e2      	b.n	f38 <usart_sync_read+0x1c>
     f72:	46c0      	nop			; (mov r8, r8)
     f74:	00009898 	.word	0x00009898
     f78:	00000ffd 	.word	0x00000ffd
     f7c:	000014d9 	.word	0x000014d9
     f80:	000014bd 	.word	0x000014bd

00000f84 <usart_sync_init>:
{
     f84:	b570      	push	{r4, r5, r6, lr}
     f86:	0005      	movs	r5, r0
     f88:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     f8a:	2800      	cmp	r0, #0
     f8c:	d013      	beq.n	fb6 <usart_sync_init+0x32>
     f8e:	0008      	movs	r0, r1
     f90:	1e43      	subs	r3, r0, #1
     f92:	4198      	sbcs	r0, r3
     f94:	b2c0      	uxtb	r0, r0
     f96:	2234      	movs	r2, #52	; 0x34
     f98:	4908      	ldr	r1, [pc, #32]	; (fbc <usart_sync_init+0x38>)
     f9a:	4b09      	ldr	r3, [pc, #36]	; (fc0 <usart_sync_init+0x3c>)
     f9c:	4798      	blx	r3
	init_status = _usart_sync_init(&descr->device, hw);
     f9e:	0028      	movs	r0, r5
     fa0:	3008      	adds	r0, #8
     fa2:	0021      	movs	r1, r4
     fa4:	4b07      	ldr	r3, [pc, #28]	; (fc4 <usart_sync_init+0x40>)
     fa6:	4798      	blx	r3
	if (init_status) {
     fa8:	2800      	cmp	r0, #0
     faa:	d103      	bne.n	fb4 <usart_sync_init+0x30>
	descr->io.read  = usart_sync_read;
     fac:	4b06      	ldr	r3, [pc, #24]	; (fc8 <usart_sync_init+0x44>)
     fae:	606b      	str	r3, [r5, #4]
	descr->io.write = usart_sync_write;
     fb0:	4b06      	ldr	r3, [pc, #24]	; (fcc <usart_sync_init+0x48>)
     fb2:	602b      	str	r3, [r5, #0]
}
     fb4:	bd70      	pop	{r4, r5, r6, pc}
     fb6:	2000      	movs	r0, #0
     fb8:	e7ed      	b.n	f96 <usart_sync_init+0x12>
     fba:	46c0      	nop			; (mov r8, r8)
     fbc:	00009898 	.word	0x00009898
     fc0:	00000ffd 	.word	0x00000ffd
     fc4:	00001475 	.word	0x00001475
     fc8:	00000f1d 	.word	0x00000f1d
     fcc:	00000ea1 	.word	0x00000ea1

00000fd0 <usart_sync_enable>:
{
     fd0:	b510      	push	{r4, lr}
     fd2:	0004      	movs	r4, r0
	ASSERT(descr);
     fd4:	1e43      	subs	r3, r0, #1
     fd6:	4198      	sbcs	r0, r3
     fd8:	b2c0      	uxtb	r0, r0
     fda:	2253      	movs	r2, #83	; 0x53
     fdc:	4904      	ldr	r1, [pc, #16]	; (ff0 <usart_sync_enable+0x20>)
     fde:	4b05      	ldr	r3, [pc, #20]	; (ff4 <usart_sync_enable+0x24>)
     fe0:	4798      	blx	r3
	_usart_sync_enable(&descr->device);
     fe2:	0020      	movs	r0, r4
     fe4:	3008      	adds	r0, #8
     fe6:	4b04      	ldr	r3, [pc, #16]	; (ff8 <usart_sync_enable+0x28>)
     fe8:	4798      	blx	r3
}
     fea:	2000      	movs	r0, #0
     fec:	bd10      	pop	{r4, pc}
     fee:	46c0      	nop			; (mov r8, r8)
     ff0:	00009898 	.word	0x00009898
     ff4:	00000ffd 	.word	0x00000ffd
     ff8:	000014a1 	.word	0x000014a1

00000ffc <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     ffc:	2800      	cmp	r0, #0
     ffe:	d100      	bne.n	1002 <assert+0x6>
		__asm("BKPT #0");
    1000:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
    1002:	4770      	bx	lr

00001004 <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
    1004:	6803      	ldr	r3, [r0, #0]
    1006:	2b00      	cmp	r3, #0
    1008:	d00a      	beq.n	1020 <is_list_element+0x1c>
		if (it == element) {
    100a:	428b      	cmp	r3, r1
    100c:	d00a      	beq.n	1024 <is_list_element+0x20>
	for (it = list->head; it; it = it->next) {
    100e:	681b      	ldr	r3, [r3, #0]
    1010:	2b00      	cmp	r3, #0
    1012:	d003      	beq.n	101c <is_list_element+0x18>
		if (it == element) {
    1014:	4299      	cmp	r1, r3
    1016:	d1fa      	bne.n	100e <is_list_element+0xa>
			return true;
    1018:	2001      	movs	r0, #1
    101a:	e000      	b.n	101e <is_list_element+0x1a>
		}
	}

	return false;
    101c:	2000      	movs	r0, #0
}
    101e:	4770      	bx	lr
	return false;
    1020:	2000      	movs	r0, #0
    1022:	e7fc      	b.n	101e <is_list_element+0x1a>
			return true;
    1024:	2001      	movs	r0, #1
    1026:	e7fa      	b.n	101e <is_list_element+0x1a>

00001028 <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
    1028:	b570      	push	{r4, r5, r6, lr}
    102a:	0004      	movs	r4, r0
    102c:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
    102e:	4b06      	ldr	r3, [pc, #24]	; (1048 <list_insert_as_head+0x20>)
    1030:	4798      	blx	r3
    1032:	2301      	movs	r3, #1
    1034:	4058      	eors	r0, r3
    1036:	b2c0      	uxtb	r0, r0
    1038:	2239      	movs	r2, #57	; 0x39
    103a:	4904      	ldr	r1, [pc, #16]	; (104c <list_insert_as_head+0x24>)
    103c:	4b04      	ldr	r3, [pc, #16]	; (1050 <list_insert_as_head+0x28>)
    103e:	4798      	blx	r3

	((struct list_element *)element)->next = list->head;
    1040:	6823      	ldr	r3, [r4, #0]
    1042:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
    1044:	6025      	str	r5, [r4, #0]
}
    1046:	bd70      	pop	{r4, r5, r6, pc}
    1048:	00001005 	.word	0x00001005
    104c:	000098b4 	.word	0x000098b4
    1050:	00000ffd 	.word	0x00000ffd

00001054 <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
    1054:	6803      	ldr	r3, [r0, #0]
    1056:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
    1058:	6001      	str	r1, [r0, #0]
}
    105a:	4770      	bx	lr

0000105c <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
    105c:	6803      	ldr	r3, [r0, #0]
    105e:	2b00      	cmp	r3, #0
    1060:	d001      	beq.n	1066 <list_remove_head+0xa>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
    1062:	681a      	ldr	r2, [r3, #0]
    1064:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
	}

	return NULL;
}
    1066:	0018      	movs	r0, r3
    1068:	4770      	bx	lr
	...

0000106c <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
    106c:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
    106e:	4a06      	ldr	r2, [pc, #24]	; (1088 <_sbrk+0x1c>)
    1070:	6812      	ldr	r2, [r2, #0]
    1072:	2a00      	cmp	r2, #0
    1074:	d004      	beq.n	1080 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1076:	4a04      	ldr	r2, [pc, #16]	; (1088 <_sbrk+0x1c>)
    1078:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    107a:	18c3      	adds	r3, r0, r3
    107c:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
    107e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    1080:	4902      	ldr	r1, [pc, #8]	; (108c <_sbrk+0x20>)
    1082:	4a01      	ldr	r2, [pc, #4]	; (1088 <_sbrk+0x1c>)
    1084:	6011      	str	r1, [r2, #0]
    1086:	e7f6      	b.n	1076 <_sbrk+0xa>
    1088:	20000a44 	.word	0x20000a44
    108c:	200033b8 	.word	0x200033b8

00001090 <_close>:
 */
extern int _close(int file)
{
	(void)file;
	return -1;
}
    1090:	2001      	movs	r0, #1
    1092:	4240      	negs	r0, r0
    1094:	4770      	bx	lr

00001096 <_fstat>:
 * \brief Replacement of C library of _fstat
 */
extern int _fstat(int file, struct stat *st)
{
	(void)file;
	st->st_mode = S_IFCHR;
    1096:	2380      	movs	r3, #128	; 0x80
    1098:	019b      	lsls	r3, r3, #6
    109a:	604b      	str	r3, [r1, #4]

	return 0;
}
    109c:	2000      	movs	r0, #0
    109e:	4770      	bx	lr

000010a0 <_isatty>:
 */
extern int _isatty(int file)
{
	(void)file;
	return 1;
}
    10a0:	2001      	movs	r0, #1
    10a2:	4770      	bx	lr

000010a4 <_lseek>:
 */
extern int _lseek(int file, int ptr, int dir)
{
	(void)file, (void)ptr, (void)dir;
	return 0;
}
    10a4:	2000      	movs	r0, #0
    10a6:	4770      	bx	lr

000010a8 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    10a8:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    10aa:	4a0a      	ldr	r2, [pc, #40]	; (10d4 <_init_chip+0x2c>)
    10ac:	6853      	ldr	r3, [r2, #4]
    10ae:	2104      	movs	r1, #4
    10b0:	430b      	orrs	r3, r1
    10b2:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_set_performance_level(2);
    10b4:	2002      	movs	r0, #2
    10b6:	4b08      	ldr	r3, [pc, #32]	; (10d8 <_init_chip+0x30>)
    10b8:	4798      	blx	r3

	_osc32kctrl_init_sources();
    10ba:	4b08      	ldr	r3, [pc, #32]	; (10dc <_init_chip+0x34>)
    10bc:	4798      	blx	r3
	_oscctrl_init_sources();
    10be:	4b08      	ldr	r3, [pc, #32]	; (10e0 <_init_chip+0x38>)
    10c0:	4798      	blx	r3
	_mclk_init();
    10c2:	4b08      	ldr	r3, [pc, #32]	; (10e4 <_init_chip+0x3c>)
    10c4:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_oscctrl_init_referenced_generators();
    10c6:	4b08      	ldr	r3, [pc, #32]	; (10e8 <_init_chip+0x40>)
    10c8:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    10ca:	201f      	movs	r0, #31
    10cc:	4b07      	ldr	r3, [pc, #28]	; (10ec <_init_chip+0x44>)
    10ce:	4798      	blx	r3
#endif

#if (CONF_PORT_EVCTRL_PORT_0 | CONF_PORT_EVCTRL_PORT_1 | CONF_PORT_EVCTRL_PORT_2 | CONF_PORT_EVCTRL_PORT_3)
	_port_event_init();
#endif
}
    10d0:	bd10      	pop	{r4, pc}
    10d2:	46c0      	nop			; (mov r8, r8)
    10d4:	41004000 	.word	0x41004000
    10d8:	0000118d 	.word	0x0000118d
    10dc:	00001139 	.word	0x00001139
    10e0:	00001151 	.word	0x00001151
    10e4:	00001129 	.word	0x00001129
    10e8:	00001189 	.word	0x00001189
    10ec:	000010f1 	.word	0x000010f1

000010f0 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    10f0:	07c3      	lsls	r3, r0, #31
    10f2:	d507      	bpl.n	1104 <_gclk_init_generators_by_fref+0x14>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    10f4:	4a09      	ldr	r2, [pc, #36]	; (111c <_gclk_init_generators_by_fref+0x2c>)
    10f6:	4b0a      	ldr	r3, [pc, #40]	; (1120 <_gclk_init_generators_by_fref+0x30>)
    10f8:	621a      	str	r2, [r3, #32]
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    10fa:	0019      	movs	r1, r3
    10fc:	227d      	movs	r2, #125	; 0x7d
    10fe:	684b      	ldr	r3, [r1, #4]
    1100:	421a      	tst	r2, r3
    1102:	d1fc      	bne.n	10fe <_gclk_init_generators_by_fref+0xe>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SOURCE);
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
    1104:	0783      	lsls	r3, r0, #30
    1106:	d507      	bpl.n	1118 <_gclk_init_generators_by_fref+0x28>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    1108:	4a06      	ldr	r2, [pc, #24]	; (1124 <_gclk_init_generators_by_fref+0x34>)
    110a:	4b05      	ldr	r3, [pc, #20]	; (1120 <_gclk_init_generators_by_fref+0x30>)
    110c:	625a      	str	r2, [r3, #36]	; 0x24
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    110e:	0019      	movs	r1, r3
    1110:	227d      	movs	r2, #125	; 0x7d
    1112:	684b      	ldr	r3, [r1, #4]
    1114:	421a      	tst	r2, r3
    1116:	d1fc      	bne.n	1112 <_gclk_init_generators_by_fref+0x22>
		        | (CONF_GCLK_GEN_4_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_4_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_4_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_4_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_4_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_4_SOURCE);
	}
#endif
}
    1118:	4770      	bx	lr
    111a:	46c0      	nop			; (mov r8, r8)
    111c:	00010105 	.word	0x00010105
    1120:	40001c00 	.word	0x40001c00
    1124:	00040105 	.word	0x00040105

00001128 <_mclk_init>:
	((Mclk *)hw)->BUPDIV.reg = data;
    1128:	4b02      	ldr	r3, [pc, #8]	; (1134 <_mclk_init+0xc>)
    112a:	2208      	movs	r2, #8
    112c:	719a      	strb	r2, [r3, #6]
	((Mclk *)hw)->CPUDIV.reg = data;
    112e:	3a07      	subs	r2, #7
    1130:	711a      	strb	r2, [r3, #4]
void _mclk_init(void)
{
	void *hw = (void *)MCLK;
	hri_mclk_write_BUPDIV_reg(hw, MCLK_BUPDIV_BUPDIV(CONF_MCLK_BUPDIV));
	hri_mclk_write_CPUDIV_reg(hw, MCLK_CPUDIV_CPUDIV(CONF_MCLK_CPUDIV));
}
    1132:	4770      	bx	lr
    1134:	40000800 	.word	0x40000800

00001138 <_osc32kctrl_init_sources>:
}

static inline hri_osc32kctrl_osculp32k_reg_t hri_osc32kctrl_read_OSCULP32K_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Osc32kctrl *)hw)->OSCULP32K.reg;
    1138:	4b04      	ldr	r3, [pc, #16]	; (114c <_osc32kctrl_init_sources+0x14>)
    113a:	69da      	ldr	r2, [r3, #28]
	calib = hri_osc32kctrl_read_OSCULP32K_CALIB_bf(hw);
	hri_osc32kctrl_write_OSCULP32K_reg(hw,
#if CONF_OSC32K_CALIB_ENABLE == 1
	                                   OSC32KCTRL_OSCULP32K_CALIB(CONF_OSC32K_CALIB)
#else
	                                   OSC32KCTRL_OSCULP32K_CALIB(calib)
    113c:	21f8      	movs	r1, #248	; 0xf8
    113e:	0149      	lsls	r1, r1, #5
    1140:	400a      	ands	r2, r1
}

static inline void hri_osc32kctrl_write_OSCULP32K_reg(const void *const hw, hri_osc32kctrl_osculp32k_reg_t data)
{
	OSC32KCTRL_CRITICAL_SECTION_ENTER();
	((Osc32kctrl *)hw)->OSCULP32K.reg = data;
    1142:	61da      	str	r2, [r3, #28]
	((Osc32kctrl *)hw)->RTCCTRL.reg = data;
    1144:	2201      	movs	r2, #1
    1146:	741a      	strb	r2, [r3, #16]
#endif
#endif

	hri_osc32kctrl_write_RTCCTRL_reg(hw, OSC32KCTRL_RTCCTRL_RTCSEL(CONF_RTCCTRL));
	(void)calib;
}
    1148:	4770      	bx	lr
    114a:	46c0      	nop			; (mov r8, r8)
    114c:	40001400 	.word	0x40001400

00001150 <_oscctrl_init_sources>:
}

static inline void hri_oscctrl_write_OSC16MCTRL_reg(const void *const hw, hri_oscctrl_osc16mctrl_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC16MCTRL.reg = data;
    1150:	228e      	movs	r2, #142	; 0x8e
    1152:	4b0c      	ldr	r3, [pc, #48]	; (1184 <_oscctrl_init_sources+0x34>)
    1154:	751a      	strb	r2, [r3, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
    1156:	0018      	movs	r0, r3
    1158:	2138      	movs	r1, #56	; 0x38
    115a:	3a8c      	subs	r2, #140	; 0x8c
    115c:	5c43      	ldrb	r3, [r0, r1]
    115e:	4213      	tst	r3, r2
    1160:	d1fc      	bne.n	115c <_oscctrl_init_sources+0xc>
	return (((Oscctrl *)hw)->STATUS.reg & OSCCTRL_STATUS_OSC16MRDY) >> OSCCTRL_STATUS_OSC16MRDY_Pos;
    1162:	4908      	ldr	r1, [pc, #32]	; (1184 <_oscctrl_init_sources+0x34>)
#endif
#endif

#if CONF_OSC16M_CONFIG == 1
#if CONF_OSC16M_ENABLE == 1
	while (!hri_oscctrl_get_STATUS_OSC16MRDY_bit(hw))
    1164:	2210      	movs	r2, #16
    1166:	68cb      	ldr	r3, [r1, #12]
    1168:	421a      	tst	r2, r3
    116a:	d0fc      	beq.n	1166 <_oscctrl_init_sources+0x16>
	((Oscctrl *)hw)->OSC16MCTRL.reg |= OSCCTRL_OSC16MCTRL_ONDEMAND;
    116c:	4a05      	ldr	r2, [pc, #20]	; (1184 <_oscctrl_init_sources+0x34>)
    116e:	7d13      	ldrb	r3, [r2, #20]
    1170:	2180      	movs	r1, #128	; 0x80
    1172:	430b      	orrs	r3, r1
    1174:	7513      	strb	r3, [r2, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
    1176:	0010      	movs	r0, r2
    1178:	3948      	subs	r1, #72	; 0x48
    117a:	220e      	movs	r2, #14
    117c:	5c43      	ldrb	r3, [r0, r1]
    117e:	4213      	tst	r3, r2
    1180:	d1fc      	bne.n	117c <_oscctrl_init_sources+0x2c>
#if CONF_OSC16M_ONDEMAND == 1
	hri_oscctrl_set_OSC16MCTRL_ONDEMAND_bit(hw);
#endif
#endif
	(void)hw;
}
    1182:	4770      	bx	lr
    1184:	40001000 	.word	0x40001000

00001188 <_oscctrl_init_referenced_generators>:
#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_read_SYNCBUSY_reg(GCLK))
		;
#endif
	(void)hw, (void)tmp;
}
    1188:	4770      	bx	lr
	...

0000118c <_set_performance_level>:
}

static inline hri_pm_plcfg_reg_t hri_pm_get_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t mask)
{
	uint8_t tmp;
	tmp = ((Pm *)hw)->PLCFG.reg;
    118c:	4b09      	ldr	r3, [pc, #36]	; (11b4 <_set_performance_level+0x28>)
    118e:	789b      	ldrb	r3, [r3, #2]
/**
 * \brief Set performance level
 */
void _set_performance_level(const uint8_t level)
{
	if (hri_pm_get_PLCFG_PLSEL_bf(PM, PM_PLCFG_PLSEL_Msk) != level) {
    1190:	2203      	movs	r2, #3
    1192:	4013      	ands	r3, r2
    1194:	4298      	cmp	r0, r3
    1196:	d00b      	beq.n	11b0 <_set_performance_level+0x24>
	((Pm *)hw)->INTFLAG.reg = mask;
    1198:	4a06      	ldr	r2, [pc, #24]	; (11b4 <_set_performance_level+0x28>)
    119a:	23ff      	movs	r3, #255	; 0xff
    119c:	7193      	strb	r3, [r2, #6]

static inline void hri_pm_write_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t data)
{
	uint8_t tmp;
	PM_CRITICAL_SECTION_ENTER();
	tmp = ((Pm *)hw)->PLCFG.reg;
    119e:	7893      	ldrb	r3, [r2, #2]
	tmp &= ~PM_PLCFG_PLSEL_Msk;
    11a0:	2103      	movs	r1, #3
    11a2:	438b      	bics	r3, r1
	tmp |= PM_PLCFG_PLSEL(data);
    11a4:	4008      	ands	r0, r1
    11a6:	4318      	orrs	r0, r3
	((Pm *)hw)->PLCFG.reg = tmp;
    11a8:	7090      	strb	r0, [r2, #2]
	return ((Pm *)hw)->INTFLAG.reg;
    11aa:	7993      	ldrb	r3, [r2, #6]
		hri_pm_clear_INTFLAG_reg(PM, 0xFF);
		hri_pm_write_PLCFG_PLSEL_bf(PM, level);
		while (!hri_pm_read_INTFLAG_reg(PM))
    11ac:	2b00      	cmp	r3, #0
    11ae:	d0fc      	beq.n	11aa <_set_performance_level+0x1e>
			;
	}
}
    11b0:	4770      	bx	lr
    11b2:	46c0      	nop			; (mov r8, r8)
    11b4:	40000400 	.word	0x40000400

000011b8 <_timer_init>:

/**
 * \brief Initialize Timer
 */
int32_t _timer_init(struct _timer_device *const dev, void *const hw)
{
    11b8:	b570      	push	{r4, r5, r6, lr}
    11ba:	0005      	movs	r5, r0
    11bc:	000c      	movs	r4, r1
	ASSERT(dev);
    11be:	1e43      	subs	r3, r0, #1
    11c0:	4198      	sbcs	r0, r3
    11c2:	b2c0      	uxtb	r0, r0
    11c4:	2230      	movs	r2, #48	; 0x30
    11c6:	4912      	ldr	r1, [pc, #72]	; (1210 <_timer_init+0x58>)
    11c8:	4b12      	ldr	r3, [pc, #72]	; (1214 <_timer_init+0x5c>)
    11ca:	4798      	blx	r3

	dev->hw = hw;
    11cc:	60ec      	str	r4, [r5, #12]
}

static inline void hri_rtcmode0_write_CTRLA_reg(const void *const hw, hri_rtcmode0_ctrla_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.CTRLA.reg = data;
    11ce:	2301      	movs	r3, #1
    11d0:	8023      	strh	r3, [r4, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    11d2:	4a11      	ldr	r2, [pc, #68]	; (1218 <_timer_init+0x60>)
    11d4:	6923      	ldr	r3, [r4, #16]
    11d6:	4213      	tst	r3, r2
    11d8:	d1fc      	bne.n	11d4 <_timer_init+0x1c>

	hri_rtcmode0_write_CTRLA_reg(dev->hw, RTC_MODE0_CTRLA_SWRST);
	hri_rtcmode0_wait_for_sync(dev->hw, RTC_MODE0_SYNCBUSY_SWRST);
    11da:	68eb      	ldr	r3, [r5, #12]
    11dc:	2101      	movs	r1, #1
    11de:	691a      	ldr	r2, [r3, #16]
    11e0:	4211      	tst	r1, r2
    11e2:	d1fc      	bne.n	11de <_timer_init+0x26>
	((Rtc *)hw)->MODE0.CTRLA.reg = data;
    11e4:	4a0d      	ldr	r2, [pc, #52]	; (121c <_timer_init+0x64>)
    11e6:	801a      	strh	r2, [r3, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    11e8:	490b      	ldr	r1, [pc, #44]	; (1218 <_timer_init+0x60>)
    11ea:	691a      	ldr	r2, [r3, #16]
    11ec:	420a      	tst	r2, r1
    11ee:	d1fc      	bne.n	11ea <_timer_init+0x32>
	        | (CONF_RTC_COMPE0 << RTC_MODE0_EVCTRL_CMPEO_Pos) | (CONF_RTC_OVFEO << RTC_MODE0_EVCTRL_OVFEO_Pos));
#endif

	hri_rtcmode0_write_CTRLA_reg(
	    dev->hw, RTC_MODE0_CTRLA_PRESCALER(CONF_RTC_PRESCALER) | RTC_MODE0_CTRLA_COUNTSYNC | RTC_MODE0_CTRLA_MATCHCLR);
	hri_rtcmode0_write_COMP_reg(dev->hw, 0, CONF_RTC_COMP_VAL);
    11f0:	68ea      	ldr	r2, [r5, #12]
}

static inline void hri_rtcmode0_write_COMP_reg(const void *const hw, uint8_t index, hri_rtcmode0_comp_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.COMP[index].reg = data;
    11f2:	2320      	movs	r3, #32
    11f4:	6213      	str	r3, [r2, #32]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    11f6:	2120      	movs	r1, #32
    11f8:	6913      	ldr	r3, [r2, #16]
    11fa:	4219      	tst	r1, r3
    11fc:	d1fc      	bne.n	11f8 <_timer_init+0x40>
	((Rtc *)hw)->MODE0.INTENSET.reg = RTC_MODE0_INTENSET_CMP0;
    11fe:	2380      	movs	r3, #128	; 0x80
    1200:	005b      	lsls	r3, r3, #1
    1202:	68ea      	ldr	r2, [r5, #12]
    1204:	8153      	strh	r3, [r2, #10]
	hri_rtcmode0_set_INTEN_CMP0_bit(dev->hw);

	_rtc_dev = dev;
    1206:	4b06      	ldr	r3, [pc, #24]	; (1220 <_timer_init+0x68>)
    1208:	601d      	str	r5, [r3, #0]

	return ERR_NONE;
}
    120a:	2000      	movs	r0, #0
    120c:	bd70      	pop	{r4, r5, r6, pc}
    120e:	46c0      	nop			; (mov r8, r8)
    1210:	000098d4 	.word	0x000098d4
    1214:	00000ffd 	.word	0x00000ffd
    1218:	00008003 	.word	0x00008003
    121c:	ffff8080 	.word	0xffff8080
    1220:	20000a48 	.word	0x20000a48

00001224 <_timer_start>:

/**
 * \brief Start hardware timer
 */
void _timer_start(struct _timer_device *const dev)
{
    1224:	b510      	push	{r4, lr}
    1226:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->hw);
    1228:	d01f      	beq.n	126a <_timer_start+0x46>
    122a:	68c0      	ldr	r0, [r0, #12]
    122c:	1e43      	subs	r3, r0, #1
    122e:	4198      	sbcs	r0, r3
    1230:	b2c0      	uxtb	r0, r0
    1232:	225c      	movs	r2, #92	; 0x5c
    1234:	490e      	ldr	r1, [pc, #56]	; (1270 <_timer_start+0x4c>)
    1236:	4b0f      	ldr	r3, [pc, #60]	; (1274 <_timer_start+0x50>)
    1238:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    123a:	2204      	movs	r2, #4
    123c:	4b0e      	ldr	r3, [pc, #56]	; (1278 <_timer_start+0x54>)
    123e:	601a      	str	r2, [r3, #0]

	NVIC_EnableIRQ(RTC_IRQn);
	hri_rtcmode0_write_COUNT_reg(dev->hw, 0);
    1240:	68e2      	ldr	r2, [r4, #12]
	((Rtc *)hw)->MODE0.COUNT.reg = data;
    1242:	2300      	movs	r3, #0
    1244:	6193      	str	r3, [r2, #24]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    1246:	2108      	movs	r1, #8
    1248:	6913      	ldr	r3, [r2, #16]
    124a:	4219      	tst	r1, r3
    124c:	d1fc      	bne.n	1248 <_timer_start+0x24>
	hri_rtcmode0_wait_for_sync(dev->hw, RTC_MODE0_SYNCBUSY_COUNT);
    124e:	68e3      	ldr	r3, [r4, #12]
    1250:	2108      	movs	r1, #8
    1252:	691a      	ldr	r2, [r3, #16]
    1254:	4211      	tst	r1, r2
    1256:	d1fc      	bne.n	1252 <_timer_start+0x2e>
	((Rtc *)hw)->MODE0.CTRLA.reg |= RTC_MODE0_CTRLA_ENABLE;
    1258:	881a      	ldrh	r2, [r3, #0]
    125a:	2102      	movs	r1, #2
    125c:	430a      	orrs	r2, r1
    125e:	801a      	strh	r2, [r3, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    1260:	4906      	ldr	r1, [pc, #24]	; (127c <_timer_start+0x58>)
    1262:	691a      	ldr	r2, [r3, #16]
    1264:	420a      	tst	r2, r1
    1266:	d1fc      	bne.n	1262 <_timer_start+0x3e>
	hri_rtcmode0_set_CTRLA_ENABLE_bit(dev->hw);
}
    1268:	bd10      	pop	{r4, pc}
    126a:	2000      	movs	r0, #0
    126c:	e7e1      	b.n	1232 <_timer_start+0xe>
    126e:	46c0      	nop			; (mov r8, r8)
    1270:	000098d4 	.word	0x000098d4
    1274:	00000ffd 	.word	0x00000ffd
    1278:	e000e100 	.word	0xe000e100
    127c:	00008003 	.word	0x00008003

00001280 <_timer_is_started>:
/**
 * \brief Check if timer is running
 */
bool _timer_is_started(const struct _timer_device *const dev)
{
	return hri_rtcmode0_get_CTRLA_ENABLE_bit(dev->hw);
    1280:	68c2      	ldr	r2, [r0, #12]
    1282:	4904      	ldr	r1, [pc, #16]	; (1294 <_timer_is_started+0x14>)
    1284:	6913      	ldr	r3, [r2, #16]
    1286:	420b      	tst	r3, r1
    1288:	d1fc      	bne.n	1284 <_timer_is_started+0x4>
	tmp = ((Rtc *)hw)->MODE0.CTRLA.reg;
    128a:	8810      	ldrh	r0, [r2, #0]
	return (bool)tmp;
    128c:	0780      	lsls	r0, r0, #30
    128e:	0fc0      	lsrs	r0, r0, #31
}
    1290:	4770      	bx	lr
    1292:	46c0      	nop			; (mov r8, r8)
    1294:	00008003 	.word	0x00008003

00001298 <_timer_set_irq>:
 * \brief Set timer IRQ
 */
void _timer_set_irq(struct _timer_device *const dev)
{
	(void)dev;
}
    1298:	4770      	bx	lr

0000129a <_rtc_get_timer>:
 * \brief Retrieve timer helper functions
 */
struct _timer_hpl_interface *_rtc_get_timer(void)
{
	return NULL;
}
    129a:	2000      	movs	r0, #0
    129c:	4770      	bx	lr
	...

000012a0 <RTC_Handler>:

/**
 * \brief Rtc interrupt handler
 */
void RTC_Handler(void)
{
    12a0:	b510      	push	{r4, lr}
	_rtc_timer_interrupt_handler(_rtc_dev);
    12a2:	4b08      	ldr	r3, [pc, #32]	; (12c4 <RTC_Handler+0x24>)
    12a4:	681c      	ldr	r4, [r3, #0]
	return ((Rtc *)hw)->MODE0.INTFLAG.reg;
    12a6:	68e3      	ldr	r3, [r4, #12]
    12a8:	899b      	ldrh	r3, [r3, #12]
	if (flag & RTC_MODE0_INTFLAG_CMP0) {
    12aa:	05db      	lsls	r3, r3, #23
    12ac:	d508      	bpl.n	12c0 <RTC_Handler+0x20>
		if (dev->timer_cb.period_expired) {
    12ae:	6823      	ldr	r3, [r4, #0]
    12b0:	2b00      	cmp	r3, #0
    12b2:	d001      	beq.n	12b8 <RTC_Handler+0x18>
			dev->timer_cb.period_expired(dev);
    12b4:	0020      	movs	r0, r4
    12b6:	4798      	blx	r3
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
    12b8:	68e3      	ldr	r3, [r4, #12]
	((Rtc *)hw)->MODE0.INTFLAG.reg = RTC_MODE0_INTFLAG_CMP0;
    12ba:	2280      	movs	r2, #128	; 0x80
    12bc:	0052      	lsls	r2, r2, #1
    12be:	819a      	strh	r2, [r3, #12]
}
    12c0:	bd10      	pop	{r4, pc}
    12c2:	46c0      	nop			; (mov r8, r8)
    12c4:	20000a48 	.word	0x20000a48

000012c8 <_get_i2cm_index>:
 * \param[in] hw The pointer to hardware instance

 * \return The ordinal number of the given sercom hardware instance
 */
static int8_t _get_i2cm_index(const void *const hw)
{
    12c8:	b510      	push	{r4, lr}
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    12ca:	4b09      	ldr	r3, [pc, #36]	; (12f0 <_get_i2cm_index+0x28>)
    12cc:	469c      	mov	ip, r3
    12ce:	4460      	add	r0, ip
    12d0:	0a80      	lsrs	r0, r0, #10
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
	uint8_t i;

	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
		if (_i2cms[i].number == sercom_offset) {
    12d2:	b2c0      	uxtb	r0, r0
    12d4:	2801      	cmp	r0, #1
    12d6:	d008      	beq.n	12ea <_get_i2cm_index+0x22>
			return i;
		}
	}

	ASSERT(false);
    12d8:	22e6      	movs	r2, #230	; 0xe6
    12da:	0092      	lsls	r2, r2, #2
    12dc:	4905      	ldr	r1, [pc, #20]	; (12f4 <_get_i2cm_index+0x2c>)
    12de:	2000      	movs	r0, #0
    12e0:	4b05      	ldr	r3, [pc, #20]	; (12f8 <_get_i2cm_index+0x30>)
    12e2:	4798      	blx	r3
	return -1;
    12e4:	2001      	movs	r0, #1
    12e6:	4240      	negs	r0, r0
}
    12e8:	bd10      	pop	{r4, pc}
			return i;
    12ea:	2000      	movs	r0, #0
    12ec:	e7fc      	b.n	12e8 <_get_i2cm_index+0x20>
    12ee:	46c0      	nop			; (mov r8, r8)
    12f0:	bdfffc00 	.word	0xbdfffc00
    12f4:	00009904 	.word	0x00009904
    12f8:	00000ffd 	.word	0x00000ffd

000012fc <_i2c_m_sync_init_impl>:
	}
	return ERR_NONE;
}

static int32_t _i2c_m_sync_init_impl(struct _i2c_m_service *const service, void *const hw)
{
    12fc:	b570      	push	{r4, r5, r6, lr}
    12fe:	0005      	movs	r5, r0
    1300:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
    1302:	0008      	movs	r0, r1
    1304:	4b31      	ldr	r3, [pc, #196]	; (13cc <_i2c_m_sync_init_impl+0xd0>)
    1306:	4798      	blx	r3
    1308:	b2c0      	uxtb	r0, r0
	};
}

static inline bool hri_sercomi2cm_is_syncing(const void *const hw, hri_sercomi2cm_syncbusy_reg_t reg)
{
	return ((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg;
    130a:	69e3      	ldr	r3, [r4, #28]

	if (!hri_sercomi2cm_is_syncing(hw, SERCOM_I2CM_SYNCBUSY_SWRST)) {
    130c:	07db      	lsls	r3, r3, #31
    130e:	d421      	bmi.n	1354 <_i2c_m_sync_init_impl+0x58>
		uint32_t mode = _i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_MODE_Msk;
    1310:	0043      	lsls	r3, r0, #1
    1312:	181b      	adds	r3, r3, r0
    1314:	00db      	lsls	r3, r3, #3
    1316:	4a2e      	ldr	r2, [pc, #184]	; (13d0 <_i2c_m_sync_init_impl+0xd4>)
    1318:	18d3      	adds	r3, r2, r3
    131a:	6859      	ldr	r1, [r3, #4]
    131c:	231c      	movs	r3, #28
    131e:	4019      	ands	r1, r3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1320:	2203      	movs	r2, #3
    1322:	69e3      	ldr	r3, [r4, #28]
    1324:	421a      	tst	r2, r3
    1326:	d1fc      	bne.n	1322 <_i2c_m_sync_init_impl+0x26>
static inline hri_sercomi2cm_ctrla_reg_t hri_sercomi2cm_get_CTRLA_reg(const void *const          hw,
                                                                      hri_sercomi2cm_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SWRST | SERCOM_I2CM_SYNCBUSY_ENABLE);
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1328:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
    132a:	079b      	lsls	r3, r3, #30
    132c:	d50b      	bpl.n	1346 <_i2c_m_sync_init_impl+0x4a>
	((Sercom *)hw)->I2CM.CTRLA.reg &= ~SERCOM_I2CM_CTRLA_ENABLE;
    132e:	6823      	ldr	r3, [r4, #0]
    1330:	2202      	movs	r2, #2
    1332:	4393      	bics	r3, r2
    1334:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1336:	3201      	adds	r2, #1
    1338:	69e3      	ldr	r3, [r4, #28]
    133a:	421a      	tst	r2, r3
    133c:	d1fc      	bne.n	1338 <_i2c_m_sync_init_impl+0x3c>
    133e:	2202      	movs	r2, #2
    1340:	69e3      	ldr	r3, [r4, #28]
    1342:	421a      	tst	r2, r3
    1344:	d1fc      	bne.n	1340 <_i2c_m_sync_init_impl+0x44>
			hri_sercomi2cm_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_ENABLE);
		}
		hri_sercomi2cm_write_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_SWRST | mode);
    1346:	2301      	movs	r3, #1
    1348:	430b      	orrs	r3, r1
}

static inline void hri_sercomi2cm_write_CTRLA_reg(const void *const hw, hri_sercomi2cm_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    134a:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    134c:	2203      	movs	r2, #3
    134e:	69e3      	ldr	r3, [r4, #28]
    1350:	421a      	tst	r2, r3
    1352:	d1fc      	bne.n	134e <_i2c_m_sync_init_impl+0x52>
    1354:	2201      	movs	r2, #1
    1356:	69e3      	ldr	r3, [r4, #28]
    1358:	421a      	tst	r2, r3
    135a:	d1fc      	bne.n	1356 <_i2c_m_sync_init_impl+0x5a>
	}
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SWRST);

	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a);
    135c:	0043      	lsls	r3, r0, #1
    135e:	181b      	adds	r3, r3, r0
    1360:	00db      	lsls	r3, r3, #3
    1362:	4a1b      	ldr	r2, [pc, #108]	; (13d0 <_i2c_m_sync_init_impl+0xd4>)
    1364:	18d3      	adds	r3, r2, r3
    1366:	6859      	ldr	r1, [r3, #4]
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    1368:	6021      	str	r1, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    136a:	2203      	movs	r2, #3
    136c:	69e3      	ldr	r3, [r4, #28]
    136e:	421a      	tst	r2, r3
    1370:	d1fc      	bne.n	136c <_i2c_m_sync_init_impl+0x70>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
    1372:	0043      	lsls	r3, r0, #1
    1374:	181b      	adds	r3, r3, r0
    1376:	00db      	lsls	r3, r3, #3
    1378:	4a15      	ldr	r2, [pc, #84]	; (13d0 <_i2c_m_sync_init_impl+0xd4>)
    137a:	18d3      	adds	r3, r2, r3
    137c:	689b      	ldr	r3, [r3, #8]
}

static inline void hri_sercomi2cm_write_CTRLB_reg(const void *const hw, hri_sercomi2cm_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
    137e:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1380:	2204      	movs	r2, #4
    1382:	69e3      	ldr	r3, [r4, #28]
    1384:	421a      	tst	r2, r3
    1386:	d1fc      	bne.n	1382 <_i2c_m_sync_init_impl+0x86>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
    1388:	0043      	lsls	r3, r0, #1
    138a:	181b      	adds	r3, r3, r0
    138c:	00db      	lsls	r3, r3, #3
    138e:	4a10      	ldr	r2, [pc, #64]	; (13d0 <_i2c_m_sync_init_impl+0xd4>)
    1390:	18d3      	adds	r3, r2, r3
    1392:	68db      	ldr	r3, [r3, #12]
}

static inline void hri_sercomi2cm_write_BAUD_reg(const void *const hw, hri_sercomi2cm_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.BAUD.reg = data;
    1394:	60e3      	str	r3, [r4, #12]

	service->mode = (_i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_SPEED_Msk) >> SERCOM_I2CM_CTRLA_SPEED_Pos;
    1396:	0189      	lsls	r1, r1, #6
    1398:	0f89      	lsrs	r1, r1, #30
    139a:	81a9      	strh	r1, [r5, #12]

static inline void hri_sercomi2cm_write_ADDR_HS_bit(const void *const hw, bool value)
{
	uint32_t tmp;
	SERCOM_CRITICAL_SECTION_ENTER();
	tmp = ((Sercom *)hw)->I2CM.ADDR.reg;
    139c:	6a63      	ldr	r3, [r4, #36]	; 0x24
	tmp &= ~SERCOM_I2CM_ADDR_HS;
    139e:	4e0d      	ldr	r6, [pc, #52]	; (13d4 <_i2c_m_sync_init_impl+0xd8>)
    13a0:	401e      	ands	r6, r3
	hri_sercomi2cm_write_ADDR_HS_bit(hw, service->mode < I2C_HS ? 0 : 1);
    13a2:	2301      	movs	r3, #1
    13a4:	428b      	cmp	r3, r1
    13a6:	419b      	sbcs	r3, r3
    13a8:	425b      	negs	r3, r3
	tmp |= value << SERCOM_I2CM_ADDR_HS_Pos;
    13aa:	039b      	lsls	r3, r3, #14
    13ac:	4333      	orrs	r3, r6
	((Sercom *)hw)->I2CM.ADDR.reg = tmp;
    13ae:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    13b0:	2204      	movs	r2, #4
    13b2:	69e3      	ldr	r3, [r4, #28]
    13b4:	421a      	tst	r2, r3
    13b6:	d1fc      	bne.n	13b2 <_i2c_m_sync_init_impl+0xb6>

	service->trise = _i2cms[i].trise;
    13b8:	0043      	lsls	r3, r0, #1
    13ba:	1818      	adds	r0, r3, r0
    13bc:	00c0      	lsls	r0, r0, #3
    13be:	4b04      	ldr	r3, [pc, #16]	; (13d0 <_i2c_m_sync_init_impl+0xd4>)
    13c0:	1818      	adds	r0, r3, r0
    13c2:	8a43      	ldrh	r3, [r0, #18]
    13c4:	81eb      	strh	r3, [r5, #14]

	return ERR_NONE;
}
    13c6:	2000      	movs	r0, #0
    13c8:	bd70      	pop	{r4, r5, r6, pc}
    13ca:	46c0      	nop			; (mov r8, r8)
    13cc:	000012c9 	.word	0x000012c9
    13d0:	000098ec 	.word	0x000098ec
    13d4:	ffffbfff 	.word	0xffffbfff

000013d8 <_usart_init>:
{
    13d8:	b510      	push	{r4, lr}
    13da:	0004      	movs	r4, r0
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    13dc:	4b1f      	ldr	r3, [pc, #124]	; (145c <_usart_init+0x84>)
    13de:	18c3      	adds	r3, r0, r3
    13e0:	0a9b      	lsrs	r3, r3, #10
		if (_usarts[i].number == sercom_offset) {
    13e2:	b2db      	uxtb	r3, r3
    13e4:	2b00      	cmp	r3, #0
    13e6:	d004      	beq.n	13f2 <_usart_init+0x1a>
	ASSERT(false);
    13e8:	4a1d      	ldr	r2, [pc, #116]	; (1460 <_usart_init+0x88>)
    13ea:	491e      	ldr	r1, [pc, #120]	; (1464 <_usart_init+0x8c>)
    13ec:	2000      	movs	r0, #0
    13ee:	4b1e      	ldr	r3, [pc, #120]	; (1468 <_usart_init+0x90>)
    13f0:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
    13f2:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
    13f4:	07db      	lsls	r3, r3, #31
    13f6:	d418      	bmi.n	142a <_usart_init+0x52>
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    13f8:	2203      	movs	r2, #3
    13fa:	69e3      	ldr	r3, [r4, #28]
    13fc:	421a      	tst	r2, r3
    13fe:	d1fc      	bne.n	13fa <_usart_init+0x22>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    1400:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    1402:	079b      	lsls	r3, r3, #30
    1404:	d50b      	bpl.n	141e <_usart_init+0x46>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    1406:	6823      	ldr	r3, [r4, #0]
    1408:	2202      	movs	r2, #2
    140a:	4393      	bics	r3, r2
    140c:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    140e:	3201      	adds	r2, #1
    1410:	69e3      	ldr	r3, [r4, #28]
    1412:	421a      	tst	r2, r3
    1414:	d1fc      	bne.n	1410 <_usart_init+0x38>
    1416:	2202      	movs	r2, #2
    1418:	69e3      	ldr	r3, [r4, #28]
    141a:	421a      	tst	r2, r3
    141c:	d1fc      	bne.n	1418 <_usart_init+0x40>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    141e:	2305      	movs	r3, #5
    1420:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1422:	2203      	movs	r2, #3
    1424:	69e3      	ldr	r3, [r4, #28]
    1426:	421a      	tst	r2, r3
    1428:	d1fc      	bne.n	1424 <_usart_init+0x4c>
    142a:	2201      	movs	r2, #1
    142c:	69e3      	ldr	r3, [r4, #28]
    142e:	421a      	tst	r2, r3
    1430:	d1fc      	bne.n	142c <_usart_init+0x54>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    1432:	4b0e      	ldr	r3, [pc, #56]	; (146c <_usart_init+0x94>)
    1434:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1436:	2203      	movs	r2, #3
    1438:	69e3      	ldr	r3, [r4, #28]
    143a:	421a      	tst	r2, r3
    143c:	d1fc      	bne.n	1438 <_usart_init+0x60>
	((Sercom *)hw)->USART.CTRLB.reg = data;
    143e:	23c0      	movs	r3, #192	; 0xc0
    1440:	029b      	lsls	r3, r3, #10
    1442:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1444:	2207      	movs	r2, #7
    1446:	69e3      	ldr	r3, [r4, #28]
    1448:	421a      	tst	r2, r3
    144a:	d1fc      	bne.n	1446 <_usart_init+0x6e>
	((Sercom *)hw)->USART.BAUD.reg = data;
    144c:	4b08      	ldr	r3, [pc, #32]	; (1470 <_usart_init+0x98>)
    144e:	81a3      	strh	r3, [r4, #12]
	((Sercom *)hw)->USART.RXPL.reg = data;
    1450:	2300      	movs	r3, #0
    1452:	73a3      	strb	r3, [r4, #14]
}

static inline void hri_sercomusart_write_DBGCTRL_reg(const void *const hw, hri_sercomusart_dbgctrl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    1454:	2230      	movs	r2, #48	; 0x30
    1456:	54a3      	strb	r3, [r4, r2]
}
    1458:	2000      	movs	r0, #0
    145a:	bd10      	pop	{r4, pc}
    145c:	bdfffc00 	.word	0xbdfffc00
    1460:	0000023a 	.word	0x0000023a
    1464:	00009904 	.word	0x00009904
    1468:	00000ffd 	.word	0x00000ffd
    146c:	40310004 	.word	0x40310004
    1470:	ffffe282 	.word	0xffffe282

00001474 <_usart_sync_init>:
{
    1474:	b570      	push	{r4, r5, r6, lr}
    1476:	0005      	movs	r5, r0
    1478:	000c      	movs	r4, r1
	ASSERT(device);
    147a:	1e43      	subs	r3, r0, #1
    147c:	4198      	sbcs	r0, r3
    147e:	b2c0      	uxtb	r0, r0
    1480:	22b4      	movs	r2, #180	; 0xb4
    1482:	4904      	ldr	r1, [pc, #16]	; (1494 <_usart_sync_init+0x20>)
    1484:	4b04      	ldr	r3, [pc, #16]	; (1498 <_usart_sync_init+0x24>)
    1486:	4798      	blx	r3
	device->hw = hw;
    1488:	602c      	str	r4, [r5, #0]
	return _usart_init(hw);
    148a:	0020      	movs	r0, r4
    148c:	4b03      	ldr	r3, [pc, #12]	; (149c <_usart_sync_init+0x28>)
    148e:	4798      	blx	r3
}
    1490:	bd70      	pop	{r4, r5, r6, pc}
    1492:	46c0      	nop			; (mov r8, r8)
    1494:	00009904 	.word	0x00009904
    1498:	00000ffd 	.word	0x00000ffd
    149c:	000013d9 	.word	0x000013d9

000014a0 <_usart_sync_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    14a0:	6802      	ldr	r2, [r0, #0]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    14a2:	6813      	ldr	r3, [r2, #0]
    14a4:	2102      	movs	r1, #2
    14a6:	430b      	orrs	r3, r1
    14a8:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    14aa:	3101      	adds	r1, #1
    14ac:	69d3      	ldr	r3, [r2, #28]
    14ae:	4219      	tst	r1, r3
    14b0:	d1fc      	bne.n	14ac <_usart_sync_enable+0xc>
}
    14b2:	4770      	bx	lr

000014b4 <_usart_sync_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    14b4:	6803      	ldr	r3, [r0, #0]
    14b6:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    14b8:	8519      	strh	r1, [r3, #40]	; 0x28
}
    14ba:	4770      	bx	lr

000014bc <_usart_sync_read_byte>:
	return hri_sercomusart_read_DATA_reg(device->hw);
    14bc:	6803      	ldr	r3, [r0, #0]
	return ((Sercom *)hw)->USART.DATA.reg;
    14be:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    14c0:	b2c0      	uxtb	r0, r0
}
    14c2:	4770      	bx	lr

000014c4 <_usart_sync_is_ready_to_send>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
    14c4:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    14c6:	7e18      	ldrb	r0, [r3, #24]
    14c8:	2301      	movs	r3, #1
    14ca:	4018      	ands	r0, r3
}
    14cc:	4770      	bx	lr

000014ce <_usart_sync_is_transmit_done>:
	return hri_sercomusart_get_interrupt_TXC_bit(device->hw);
    14ce:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    14d0:	7e18      	ldrb	r0, [r3, #24]
    14d2:	0780      	lsls	r0, r0, #30
    14d4:	0fc0      	lsrs	r0, r0, #31
}
    14d6:	4770      	bx	lr

000014d8 <_usart_sync_is_byte_received>:
	return hri_sercomusart_get_interrupt_RXC_bit(device->hw);
    14d8:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    14da:	7e18      	ldrb	r0, [r3, #24]
    14dc:	0740      	lsls	r0, r0, #29
    14de:	0fc0      	lsrs	r0, r0, #31
}
    14e0:	4770      	bx	lr
	...

000014e4 <_i2c_m_sync_init>:
{
    14e4:	b570      	push	{r4, r5, r6, lr}
    14e6:	0004      	movs	r4, r0
    14e8:	000d      	movs	r5, r1
	ASSERT(i2c_dev);
    14ea:	1e43      	subs	r3, r0, #1
    14ec:	4198      	sbcs	r0, r3
    14ee:	b2c0      	uxtb	r0, r0
    14f0:	4a04      	ldr	r2, [pc, #16]	; (1504 <_i2c_m_sync_init+0x20>)
    14f2:	4905      	ldr	r1, [pc, #20]	; (1508 <_i2c_m_sync_init+0x24>)
    14f4:	4b05      	ldr	r3, [pc, #20]	; (150c <_i2c_m_sync_init+0x28>)
    14f6:	4798      	blx	r3
	i2c_dev->hw = hw;
    14f8:	6125      	str	r5, [r4, #16]
	return _i2c_m_sync_init_impl(&i2c_dev->service, hw);
    14fa:	0029      	movs	r1, r5
    14fc:	0020      	movs	r0, r4
    14fe:	4b04      	ldr	r3, [pc, #16]	; (1510 <_i2c_m_sync_init+0x2c>)
    1500:	4798      	blx	r3
}
    1502:	bd70      	pop	{r4, r5, r6, pc}
    1504:	00000507 	.word	0x00000507
    1508:	00009904 	.word	0x00009904
    150c:	00000ffd 	.word	0x00000ffd
    1510:	000012fd 	.word	0x000012fd

00001514 <_i2c_m_sync_enable>:
{
    1514:	b570      	push	{r4, r5, r6, lr}
    1516:	0004      	movs	r4, r0
	ASSERT(i2c_dev);
    1518:	4d1a      	ldr	r5, [pc, #104]	; (1584 <_i2c_m_sync_enable+0x70>)
    151a:	1e43      	subs	r3, r0, #1
    151c:	4198      	sbcs	r0, r3
    151e:	b2c0      	uxtb	r0, r0
    1520:	4a19      	ldr	r2, [pc, #100]	; (1588 <_i2c_m_sync_enable+0x74>)
    1522:	0029      	movs	r1, r5
    1524:	4e19      	ldr	r6, [pc, #100]	; (158c <_i2c_m_sync_enable+0x78>)
    1526:	47b0      	blx	r6
	return _i2c_m_enable_implementation(i2c_dev->hw);
    1528:	6924      	ldr	r4, [r4, #16]
	ASSERT(hw);
    152a:	0020      	movs	r0, r4
    152c:	1e43      	subs	r3, r0, #1
    152e:	4198      	sbcs	r0, r3
    1530:	b2c0      	uxtb	r0, r0
    1532:	4a17      	ldr	r2, [pc, #92]	; (1590 <_i2c_m_sync_enable+0x7c>)
    1534:	0029      	movs	r1, r5
    1536:	47b0      	blx	r6
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    1538:	6823      	ldr	r3, [r4, #0]
    153a:	2202      	movs	r2, #2
    153c:	4313      	orrs	r3, r2
    153e:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1540:	3201      	adds	r2, #1
    1542:	69e3      	ldr	r3, [r4, #28]
    1544:	421a      	tst	r2, r3
    1546:	d1fc      	bne.n	1542 <_i2c_m_sync_enable+0x2e>
    1548:	2504      	movs	r5, #4
    154a:	2204      	movs	r2, #4
}

static inline hri_sercomi2cm_status_reg_t hri_sercomi2cm_read_STATUS_BUSSTATE_bf(const void *const hw)
{
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SYSOP);
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    154c:	2003      	movs	r0, #3
}

static inline void hri_sercomi2cm_clear_STATUS_reg(const void *const hw, hri_sercomi2cm_status_reg_t mask)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.STATUS.reg = mask;
    154e:	2610      	movs	r6, #16
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1550:	4910      	ldr	r1, [pc, #64]	; (1594 <_i2c_m_sync_enable+0x80>)
    1552:	69e3      	ldr	r3, [r4, #28]
    1554:	421a      	tst	r2, r3
    1556:	d1fc      	bne.n	1552 <_i2c_m_sync_enable+0x3e>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    1558:	8b63      	ldrh	r3, [r4, #26]
    155a:	091b      	lsrs	r3, r3, #4
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
    155c:	4003      	ands	r3, r0
    155e:	2b01      	cmp	r3, #1
    1560:	d00a      	beq.n	1578 <_i2c_m_sync_enable+0x64>
    1562:	3901      	subs	r1, #1
		if (timeout <= 0) {
    1564:	2900      	cmp	r1, #0
    1566:	d1f4      	bne.n	1552 <_i2c_m_sync_enable+0x3e>
    1568:	3d01      	subs	r5, #1
			if (--timeout_attempt)
    156a:	2d00      	cmp	r5, #0
    156c:	d006      	beq.n	157c <_i2c_m_sync_enable+0x68>
	((Sercom *)hw)->I2CM.STATUS.reg = mask;
    156e:	8366      	strh	r6, [r4, #26]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1570:	69e3      	ldr	r3, [r4, #28]
    1572:	421a      	tst	r2, r3
    1574:	d1fc      	bne.n	1570 <_i2c_m_sync_enable+0x5c>
    1576:	e7eb      	b.n	1550 <_i2c_m_sync_enable+0x3c>
	return ERR_NONE;
    1578:	2000      	movs	r0, #0
}
    157a:	bd70      	pop	{r4, r5, r6, pc}
				return I2C_ERR_BUSY;
    157c:	2006      	movs	r0, #6
    157e:	4240      	negs	r0, r0
	return _i2c_m_enable_implementation(i2c_dev->hw);
    1580:	e7fb      	b.n	157a <_i2c_m_sync_enable+0x66>
    1582:	46c0      	nop			; (mov r8, r8)
    1584:	00009904 	.word	0x00009904
    1588:	00000524 	.word	0x00000524
    158c:	00000ffd 	.word	0x00000ffd
    1590:	000005f4 	.word	0x000005f4
    1594:	0000ffff 	.word	0x0000ffff

00001598 <_i2c_m_sync_transfer>:
{
    1598:	b5f0      	push	{r4, r5, r6, r7, lr}
    159a:	46de      	mov	lr, fp
    159c:	4657      	mov	r7, sl
    159e:	464e      	mov	r6, r9
    15a0:	4645      	mov	r5, r8
    15a2:	b5e0      	push	{r5, r6, r7, lr}
    15a4:	b083      	sub	sp, #12
    15a6:	0005      	movs	r5, r0
    15a8:	4688      	mov	r8, r1
	void *   hw = i2c_dev->hw;
    15aa:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    15ac:	0006      	movs	r6, r0
    15ae:	1e73      	subs	r3, r6, #1
    15b0:	419e      	sbcs	r6, r3
    15b2:	b2f3      	uxtb	r3, r6
    15b4:	9301      	str	r3, [sp, #4]
    15b6:	4fb4      	ldr	r7, [pc, #720]	; (1888 <_i2c_m_sync_transfer+0x2f0>)
    15b8:	4ab4      	ldr	r2, [pc, #720]	; (188c <_i2c_m_sync_transfer+0x2f4>)
    15ba:	0039      	movs	r1, r7
    15bc:	0018      	movs	r0, r3
    15be:	4eb4      	ldr	r6, [pc, #720]	; (1890 <_i2c_m_sync_transfer+0x2f8>)
    15c0:	47b0      	blx	r6
	ASSERT(i2c_dev->hw);
    15c2:	6928      	ldr	r0, [r5, #16]
    15c4:	1e43      	subs	r3, r0, #1
    15c6:	4198      	sbcs	r0, r3
    15c8:	b2c0      	uxtb	r0, r0
    15ca:	22b8      	movs	r2, #184	; 0xb8
    15cc:	00d2      	lsls	r2, r2, #3
    15ce:	0039      	movs	r1, r7
    15d0:	47b0      	blx	r6
	ASSERT(msg);
    15d2:	4640      	mov	r0, r8
    15d4:	1e43      	subs	r3, r0, #1
    15d6:	4198      	sbcs	r0, r3
    15d8:	b2c0      	uxtb	r0, r0
    15da:	4aae      	ldr	r2, [pc, #696]	; (1894 <_i2c_m_sync_transfer+0x2fc>)
    15dc:	0039      	movs	r1, r7
    15de:	47b0      	blx	r6
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    15e0:	886b      	ldrh	r3, [r5, #2]
    15e2:	05db      	lsls	r3, r3, #23
    15e4:	d500      	bpl.n	15e8 <_i2c_m_sync_transfer+0x50>
    15e6:	e224      	b.n	1a32 <_i2c_m_sync_transfer+0x49a>
	msg->flags |= I2C_M_BUSY;
    15e8:	4643      	mov	r3, r8
    15ea:	885a      	ldrh	r2, [r3, #2]
    15ec:	2380      	movs	r3, #128	; 0x80
    15ee:	005b      	lsls	r3, r3, #1
    15f0:	431a      	orrs	r2, r3
    15f2:	4641      	mov	r1, r8
    15f4:	804a      	strh	r2, [r1, #2]
	i2c_dev->service.msg = *msg;
    15f6:	002a      	movs	r2, r5
    15f8:	c9c1      	ldmia	r1!, {r0, r6, r7}
    15fa:	c2c1      	stmia	r2!, {r0, r6, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
    15fc:	6862      	ldr	r2, [r4, #4]
    15fe:	4313      	orrs	r3, r2
    1600:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1602:	2204      	movs	r2, #4
    1604:	69e3      	ldr	r3, [r4, #28]
    1606:	421a      	tst	r2, r3
    1608:	d1fc      	bne.n	1604 <_i2c_m_sync_transfer+0x6c>
	void *             hw    = i2c_dev->hw;
    160a:	692f      	ldr	r7, [r5, #16]
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    160c:	683b      	ldr	r3, [r7, #0]
    160e:	4699      	mov	r9, r3
	ASSERT(i2c_dev);
    1610:	4aa1      	ldr	r2, [pc, #644]	; (1898 <_i2c_m_sync_transfer+0x300>)
    1612:	499d      	ldr	r1, [pc, #628]	; (1888 <_i2c_m_sync_transfer+0x2f0>)
    1614:	9801      	ldr	r0, [sp, #4]
    1616:	4b9e      	ldr	r3, [pc, #632]	; (1890 <_i2c_m_sync_transfer+0x2f8>)
    1618:	4798      	blx	r3
	if (msg->len == 1 && sclsm) {
    161a:	686b      	ldr	r3, [r5, #4]
    161c:	2b01      	cmp	r3, #1
    161e:	d05a      	beq.n	16d6 <_i2c_m_sync_transfer+0x13e>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    1620:	687b      	ldr	r3, [r7, #4]
    1622:	4a9e      	ldr	r2, [pc, #632]	; (189c <_i2c_m_sync_transfer+0x304>)
    1624:	4013      	ands	r3, r2
    1626:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1628:	2204      	movs	r2, #4
    162a:	69fb      	ldr	r3, [r7, #28]
    162c:	421a      	tst	r2, r3
    162e:	d1fc      	bne.n	162a <_i2c_m_sync_transfer+0x92>
	if (msg->addr & I2C_M_TEN) {
    1630:	882b      	ldrh	r3, [r5, #0]
    1632:	055a      	lsls	r2, r3, #21
    1634:	d55c      	bpl.n	16f0 <_i2c_m_sync_transfer+0x158>
		if (msg->flags & I2C_M_RD) {
    1636:	886a      	ldrh	r2, [r5, #2]
    1638:	07d2      	lsls	r2, r2, #31
    163a:	d504      	bpl.n	1646 <_i2c_m_sync_transfer+0xae>
			msg->flags |= I2C_M_TEN;
    163c:	886a      	ldrh	r2, [r5, #2]
    163e:	2180      	movs	r1, #128	; 0x80
    1640:	00c9      	lsls	r1, r1, #3
    1642:	430a      	orrs	r2, r1
    1644:	806a      	strh	r2, [r5, #2]
		                              ((msg->addr & TEN_ADDR_MASK) << 1) | SERCOM_I2CM_ADDR_TENBITEN
    1646:	005b      	lsls	r3, r3, #1
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    1648:	4995      	ldr	r1, [pc, #596]	; (18a0 <_i2c_m_sync_transfer+0x308>)
    164a:	4019      	ands	r1, r3
    164c:	2204      	movs	r2, #4
    164e:	69fb      	ldr	r3, [r7, #28]
    1650:	421a      	tst	r2, r3
    1652:	d1fc      	bne.n	164e <_i2c_m_sync_transfer+0xb6>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    1654:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1656:	2280      	movs	r2, #128	; 0x80
    1658:	01d2      	lsls	r2, r2, #7
    165a:	401a      	ands	r2, r3
		hri_sercomi2cm_write_ADDR_reg(hw,
    165c:	2380      	movs	r3, #128	; 0x80
    165e:	021b      	lsls	r3, r3, #8
    1660:	4313      	orrs	r3, r2
    1662:	4319      	orrs	r1, r3
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1664:	6279      	str	r1, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1666:	2204      	movs	r2, #4
    1668:	69fb      	ldr	r3, [r7, #28]
    166a:	421a      	tst	r2, r3
    166c:	d1fc      	bne.n	1668 <_i2c_m_sync_transfer+0xd0>
	void *   hw      = i2c_dev->hw;
    166e:	6929      	ldr	r1, [r5, #16]
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    1670:	7e0b      	ldrb	r3, [r1, #24]
    1672:	b2db      	uxtb	r3, r3
    1674:	4a8b      	ldr	r2, [pc, #556]	; (18a4 <_i2c_m_sync_transfer+0x30c>)
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    1676:	2003      	movs	r0, #3
    1678:	4218      	tst	r0, r3
    167a:	d104      	bne.n	1686 <_i2c_m_sync_transfer+0xee>
    167c:	7e0b      	ldrb	r3, [r1, #24]
    167e:	b2db      	uxtb	r3, r3
    1680:	3a01      	subs	r2, #1
		if (timeout-- == 0) {
    1682:	2a00      	cmp	r2, #0
    1684:	d1f8      	bne.n	1678 <_i2c_m_sync_transfer+0xe0>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1686:	683e      	ldr	r6, [r7, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1688:	2104      	movs	r1, #4
    168a:	69fa      	ldr	r2, [r7, #28]
    168c:	4211      	tst	r1, r2
    168e:	d1fc      	bne.n	168a <_i2c_m_sync_transfer+0xf2>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    1690:	8b7a      	ldrh	r2, [r7, #26]
    1692:	b292      	uxth	r2, r2
	if (flags & MB_FLAG) {
    1694:	07d9      	lsls	r1, r3, #31
    1696:	d400      	bmi.n	169a <_i2c_m_sync_transfer+0x102>
    1698:	e0a0      	b.n	17dc <_i2c_m_sync_transfer+0x244>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    169a:	0793      	lsls	r3, r2, #30
    169c:	d53e      	bpl.n	171c <_i2c_m_sync_transfer+0x184>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    169e:	2301      	movs	r3, #1
    16a0:	763b      	strb	r3, [r7, #24]
			msg->flags |= I2C_M_FAIL;
    16a2:	886b      	ldrh	r3, [r5, #2]
    16a4:	2180      	movs	r1, #128	; 0x80
    16a6:	0149      	lsls	r1, r1, #5
    16a8:	430b      	orrs	r3, r1
    16aa:	806b      	strh	r3, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    16ac:	886b      	ldrh	r3, [r5, #2]
    16ae:	497e      	ldr	r1, [pc, #504]	; (18a8 <_i2c_m_sync_transfer+0x310>)
    16b0:	400b      	ands	r3, r1
    16b2:	806b      	strh	r3, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    16b4:	2001      	movs	r0, #1
    16b6:	0003      	movs	r3, r0
    16b8:	4013      	ands	r3, r2
			return I2C_ERR_BAD_ADDRESS;
    16ba:	4258      	negs	r0, r3
    16bc:	4158      	adcs	r0, r3
    16be:	3805      	subs	r0, #5
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    16c0:	886b      	ldrh	r3, [r5, #2]
    16c2:	4a79      	ldr	r2, [pc, #484]	; (18a8 <_i2c_m_sync_transfer+0x310>)
    16c4:	4013      	ands	r3, r2
    16c6:	806b      	strh	r3, [r5, #2]
}
    16c8:	b003      	add	sp, #12
    16ca:	bc3c      	pop	{r2, r3, r4, r5}
    16cc:	4690      	mov	r8, r2
    16ce:	4699      	mov	r9, r3
    16d0:	46a2      	mov	sl, r4
    16d2:	46ab      	mov	fp, r5
    16d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (msg->len == 1 && sclsm) {
    16d6:	464b      	mov	r3, r9
    16d8:	011b      	lsls	r3, r3, #4
    16da:	d5a1      	bpl.n	1620 <_i2c_m_sync_transfer+0x88>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    16dc:	687a      	ldr	r2, [r7, #4]
    16de:	2380      	movs	r3, #128	; 0x80
    16e0:	02db      	lsls	r3, r3, #11
    16e2:	4313      	orrs	r3, r2
    16e4:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    16e6:	2204      	movs	r2, #4
    16e8:	69fb      	ldr	r3, [r7, #28]
    16ea:	421a      	tst	r2, r3
    16ec:	d1fc      	bne.n	16e8 <_i2c_m_sync_transfer+0x150>
    16ee:	e79f      	b.n	1630 <_i2c_m_sync_transfer+0x98>
		                              ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0)
    16f0:	886a      	ldrh	r2, [r5, #2]
    16f2:	005b      	lsls	r3, r3, #1
    16f4:	21ff      	movs	r1, #255	; 0xff
    16f6:	400b      	ands	r3, r1
    16f8:	39fe      	subs	r1, #254	; 0xfe
    16fa:	4011      	ands	r1, r2
    16fc:	4319      	orrs	r1, r3
    16fe:	2204      	movs	r2, #4
    1700:	69fb      	ldr	r3, [r7, #28]
    1702:	421a      	tst	r2, r3
    1704:	d1fc      	bne.n	1700 <_i2c_m_sync_transfer+0x168>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    1706:	6a7b      	ldr	r3, [r7, #36]	; 0x24
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    1708:	2280      	movs	r2, #128	; 0x80
    170a:	01d2      	lsls	r2, r2, #7
    170c:	4013      	ands	r3, r2
		hri_sercomi2cm_write_ADDR_reg(hw,
    170e:	430b      	orrs	r3, r1
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1710:	627b      	str	r3, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1712:	2204      	movs	r2, #4
    1714:	69fb      	ldr	r3, [r7, #28]
    1716:	421a      	tst	r2, r3
    1718:	d1fc      	bne.n	1714 <_i2c_m_sync_transfer+0x17c>
    171a:	e7a8      	b.n	166e <_i2c_m_sync_transfer+0xd6>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    171c:	0753      	lsls	r3, r2, #29
    171e:	d41b      	bmi.n	1758 <_i2c_m_sync_transfer+0x1c0>
			if (msg->flags & I2C_M_TEN) {
    1720:	886b      	ldrh	r3, [r5, #2]
    1722:	055b      	lsls	r3, r3, #21
    1724:	d535      	bpl.n	1792 <_i2c_m_sync_transfer+0x1fa>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
    1726:	882b      	ldrh	r3, [r5, #0]
    1728:	09db      	lsrs	r3, r3, #7
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    172a:	2106      	movs	r1, #6
    172c:	4019      	ands	r1, r3
    172e:	2204      	movs	r2, #4
    1730:	69fb      	ldr	r3, [r7, #28]
    1732:	421a      	tst	r2, r3
    1734:	d1fc      	bne.n	1730 <_i2c_m_sync_transfer+0x198>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    1736:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1738:	2280      	movs	r2, #128	; 0x80
    173a:	01d2      	lsls	r2, r2, #7
    173c:	4013      	ands	r3, r2
				hri_sercomi2cm_write_ADDR_reg(hw,
    173e:	22f1      	movs	r2, #241	; 0xf1
    1740:	4313      	orrs	r3, r2
    1742:	430b      	orrs	r3, r1
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1744:	627b      	str	r3, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1746:	3aed      	subs	r2, #237	; 0xed
    1748:	69fb      	ldr	r3, [r7, #28]
    174a:	421a      	tst	r2, r3
    174c:	d1fc      	bne.n	1748 <_i2c_m_sync_transfer+0x1b0>
				msg->flags &= ~I2C_M_TEN;
    174e:	886b      	ldrh	r3, [r5, #2]
    1750:	4a56      	ldr	r2, [pc, #344]	; (18ac <_i2c_m_sync_transfer+0x314>)
    1752:	4013      	ands	r3, r2
    1754:	806b      	strh	r3, [r5, #2]
    1756:	e066      	b.n	1826 <_i2c_m_sync_transfer+0x28e>
				if (msg->len > 0) {
    1758:	686b      	ldr	r3, [r5, #4]
    175a:	2b00      	cmp	r3, #0
    175c:	dd04      	ble.n	1768 <_i2c_m_sync_transfer+0x1d0>
					msg->flags |= I2C_M_FAIL;
    175e:	886b      	ldrh	r3, [r5, #2]
    1760:	2280      	movs	r2, #128	; 0x80
    1762:	0152      	lsls	r2, r2, #5
    1764:	4313      	orrs	r3, r2
    1766:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    1768:	886b      	ldrh	r3, [r5, #2]
    176a:	b21b      	sxth	r3, r3
    176c:	2b00      	cmp	r3, #0
    176e:	db06      	blt.n	177e <_i2c_m_sync_transfer+0x1e6>
				msg->flags &= ~I2C_M_BUSY;
    1770:	886b      	ldrh	r3, [r5, #2]
    1772:	4a4d      	ldr	r2, [pc, #308]	; (18a8 <_i2c_m_sync_transfer+0x310>)
    1774:	4013      	ands	r3, r2
    1776:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    1778:	2002      	movs	r0, #2
    177a:	4240      	negs	r0, r0
    177c:	e7a0      	b.n	16c0 <_i2c_m_sync_transfer+0x128>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    177e:	687a      	ldr	r2, [r7, #4]
    1780:	23c0      	movs	r3, #192	; 0xc0
    1782:	029b      	lsls	r3, r3, #10
    1784:	4313      	orrs	r3, r2
    1786:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1788:	2304      	movs	r3, #4
    178a:	69fa      	ldr	r2, [r7, #28]
    178c:	4213      	tst	r3, r2
    178e:	d1fc      	bne.n	178a <_i2c_m_sync_transfer+0x1f2>
    1790:	e7ee      	b.n	1770 <_i2c_m_sync_transfer+0x1d8>
			if (msg->len == 0) {
    1792:	686b      	ldr	r3, [r5, #4]
    1794:	2b00      	cmp	r3, #0
    1796:	d112      	bne.n	17be <_i2c_m_sync_transfer+0x226>
				if (msg->flags & I2C_M_STOP) {
    1798:	886b      	ldrh	r3, [r5, #2]
    179a:	b21b      	sxth	r3, r3
    179c:	2b00      	cmp	r3, #0
    179e:	db04      	blt.n	17aa <_i2c_m_sync_transfer+0x212>
				msg->flags &= ~I2C_M_BUSY;
    17a0:	886b      	ldrh	r3, [r5, #2]
    17a2:	4a41      	ldr	r2, [pc, #260]	; (18a8 <_i2c_m_sync_transfer+0x310>)
    17a4:	4013      	ands	r3, r2
    17a6:	806b      	strh	r3, [r5, #2]
    17a8:	e03d      	b.n	1826 <_i2c_m_sync_transfer+0x28e>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    17aa:	687a      	ldr	r2, [r7, #4]
    17ac:	23c0      	movs	r3, #192	; 0xc0
    17ae:	029b      	lsls	r3, r3, #10
    17b0:	4313      	orrs	r3, r2
    17b2:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    17b4:	2204      	movs	r2, #4
    17b6:	69fb      	ldr	r3, [r7, #28]
    17b8:	421a      	tst	r2, r3
    17ba:	d1fc      	bne.n	17b6 <_i2c_m_sync_transfer+0x21e>
    17bc:	e7f0      	b.n	17a0 <_i2c_m_sync_transfer+0x208>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    17be:	68ab      	ldr	r3, [r5, #8]
    17c0:	781a      	ldrb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    17c2:	2328      	movs	r3, #40	; 0x28
    17c4:	54fa      	strb	r2, [r7, r3]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    17c6:	2204      	movs	r2, #4
    17c8:	69fb      	ldr	r3, [r7, #28]
    17ca:	421a      	tst	r2, r3
    17cc:	d1fc      	bne.n	17c8 <_i2c_m_sync_transfer+0x230>
				msg->buffer++;
    17ce:	68ab      	ldr	r3, [r5, #8]
    17d0:	3301      	adds	r3, #1
    17d2:	60ab      	str	r3, [r5, #8]
				msg->len--;
    17d4:	686b      	ldr	r3, [r5, #4]
    17d6:	3b01      	subs	r3, #1
    17d8:	606b      	str	r3, [r5, #4]
    17da:	e024      	b.n	1826 <_i2c_m_sync_transfer+0x28e>
	} else if (flags & SB_FLAG) {
    17dc:	079b      	lsls	r3, r3, #30
    17de:	d522      	bpl.n	1826 <_i2c_m_sync_transfer+0x28e>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    17e0:	686b      	ldr	r3, [r5, #4]
    17e2:	2b00      	cmp	r3, #0
    17e4:	d040      	beq.n	1868 <_i2c_m_sync_transfer+0x2d0>
    17e6:	0752      	lsls	r2, r2, #29
    17e8:	d43e      	bmi.n	1868 <_i2c_m_sync_transfer+0x2d0>
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
    17ea:	0136      	lsls	r6, r6, #4
    17ec:	0ff6      	lsrs	r6, r6, #31
			msg->len--;
    17ee:	3b01      	subs	r3, #1
    17f0:	606b      	str	r3, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    17f2:	2b00      	cmp	r3, #0
    17f4:	d000      	beq.n	17f8 <_i2c_m_sync_transfer+0x260>
    17f6:	e11f      	b.n	1a38 <_i2c_m_sync_transfer+0x4a0>
    17f8:	2e00      	cmp	r6, #0
    17fa:	d100      	bne.n	17fe <_i2c_m_sync_transfer+0x266>
    17fc:	e122      	b.n	1a44 <_i2c_m_sync_transfer+0x4ac>
				if (msg->flags & I2C_M_STOP) {
    17fe:	886b      	ldrh	r3, [r5, #2]
    1800:	b21b      	sxth	r3, r3
    1802:	2b00      	cmp	r3, #0
    1804:	db1d      	blt.n	1842 <_i2c_m_sync_transfer+0x2aa>
				msg->flags &= ~I2C_M_BUSY;
    1806:	886b      	ldrh	r3, [r5, #2]
    1808:	4a27      	ldr	r2, [pc, #156]	; (18a8 <_i2c_m_sync_transfer+0x310>)
    180a:	4013      	ands	r3, r2
    180c:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    180e:	68a9      	ldr	r1, [r5, #8]
    1810:	1c4b      	adds	r3, r1, #1
    1812:	60ab      	str	r3, [r5, #8]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1814:	2204      	movs	r2, #4
    1816:	69fb      	ldr	r3, [r7, #28]
    1818:	421a      	tst	r2, r3
    181a:	d1fc      	bne.n	1816 <_i2c_m_sync_transfer+0x27e>
	return ((Sercom *)hw)->I2CM.DATA.reg;
    181c:	2328      	movs	r3, #40	; 0x28
    181e:	5cfb      	ldrb	r3, [r7, r3]
    1820:	700b      	strb	r3, [r1, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1822:	2302      	movs	r3, #2
    1824:	763b      	strb	r3, [r7, #24]
			return I2C_NACK;
    1826:	2600      	movs	r6, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    1828:	2380      	movs	r3, #128	; 0x80
    182a:	005b      	lsls	r3, r3, #1
    182c:	469a      	mov	sl, r3
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    182e:	2103      	movs	r1, #3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1830:	2204      	movs	r2, #4
	if (flags & MB_FLAG) {
    1832:	3bff      	subs	r3, #255	; 0xff
    1834:	469c      	mov	ip, r3
	} else if (flags & SB_FLAG) {
    1836:	3301      	adds	r3, #1
    1838:	4699      	mov	r9, r3
	return ((Sercom *)hw)->I2CM.DATA.reg;
    183a:	3326      	adds	r3, #38	; 0x26
    183c:	469b      	mov	fp, r3
    183e:	9601      	str	r6, [sp, #4]
    1840:	e0c2      	b.n	19c8 <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    1842:	687b      	ldr	r3, [r7, #4]
    1844:	4a18      	ldr	r2, [pc, #96]	; (18a8 <_i2c_m_sync_transfer+0x310>)
    1846:	4013      	ands	r3, r2
    1848:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    184a:	3206      	adds	r2, #6
    184c:	32ff      	adds	r2, #255	; 0xff
    184e:	69fb      	ldr	r3, [r7, #28]
    1850:	421a      	tst	r2, r3
    1852:	d1fc      	bne.n	184e <_i2c_m_sync_transfer+0x2b6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1854:	687a      	ldr	r2, [r7, #4]
    1856:	23c0      	movs	r3, #192	; 0xc0
    1858:	029b      	lsls	r3, r3, #10
    185a:	4313      	orrs	r3, r2
    185c:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    185e:	2204      	movs	r2, #4
    1860:	69fb      	ldr	r3, [r7, #28]
    1862:	421a      	tst	r2, r3
    1864:	d1fc      	bne.n	1860 <_i2c_m_sync_transfer+0x2c8>
    1866:	e7ce      	b.n	1806 <_i2c_m_sync_transfer+0x26e>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1868:	2302      	movs	r3, #2
    186a:	763b      	strb	r3, [r7, #24]
			return I2C_NACK;
    186c:	2002      	movs	r0, #2
    186e:	4240      	negs	r0, r0
    1870:	e726      	b.n	16c0 <_i2c_m_sync_transfer+0x128>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1872:	6862      	ldr	r2, [r4, #4]
    1874:	23c0      	movs	r3, #192	; 0xc0
    1876:	029b      	lsls	r3, r3, #10
    1878:	4313      	orrs	r3, r2
    187a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    187c:	2204      	movs	r2, #4
    187e:	69e3      	ldr	r3, [r4, #28]
    1880:	421a      	tst	r2, r3
    1882:	d1fc      	bne.n	187e <_i2c_m_sync_transfer+0x2e6>
    1884:	e0b5      	b.n	19f2 <_i2c_m_sync_transfer+0x45a>
    1886:	46c0      	nop			; (mov r8, r8)
    1888:	00009904 	.word	0x00009904
    188c:	000005bf 	.word	0x000005bf
    1890:	00000ffd 	.word	0x00000ffd
    1894:	000005c1 	.word	0x000005c1
    1898:	00000594 	.word	0x00000594
    189c:	fffbffff 	.word	0xfffbffff
    18a0:	000007fe 	.word	0x000007fe
    18a4:	0000ffff 	.word	0x0000ffff
    18a8:	fffffeff 	.word	0xfffffeff
    18ac:	fffffbff 	.word	0xfffffbff
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    18b0:	4202      	tst	r2, r0
    18b2:	d11b      	bne.n	18ec <_i2c_m_sync_transfer+0x354>
			if (msg->flags & I2C_M_TEN) {
    18b4:	886b      	ldrh	r3, [r5, #2]
    18b6:	055b      	lsls	r3, r3, #21
    18b8:	d535      	bpl.n	1926 <_i2c_m_sync_transfer+0x38e>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
    18ba:	882b      	ldrh	r3, [r5, #0]
    18bc:	09db      	lsrs	r3, r3, #7
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    18be:	2006      	movs	r0, #6
    18c0:	4018      	ands	r0, r3
    18c2:	69e3      	ldr	r3, [r4, #28]
    18c4:	421a      	tst	r2, r3
    18c6:	d1fc      	bne.n	18c2 <_i2c_m_sync_transfer+0x32a>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    18c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
    18ca:	2680      	movs	r6, #128	; 0x80
    18cc:	01f6      	lsls	r6, r6, #7
    18ce:	4033      	ands	r3, r6
				hri_sercomi2cm_write_ADDR_reg(hw,
    18d0:	26f1      	movs	r6, #241	; 0xf1
    18d2:	4333      	orrs	r3, r6
    18d4:	4303      	orrs	r3, r0
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    18d6:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    18d8:	69e3      	ldr	r3, [r4, #28]
    18da:	421a      	tst	r2, r3
    18dc:	d1fc      	bne.n	18d8 <_i2c_m_sync_transfer+0x340>
				msg->flags &= ~I2C_M_TEN;
    18de:	886b      	ldrh	r3, [r5, #2]
    18e0:	4878      	ldr	r0, [pc, #480]	; (1ac4 <_i2c_m_sync_transfer+0x52c>)
    18e2:	4003      	ands	r3, r0
    18e4:	806b      	strh	r3, [r5, #2]
				return I2C_OK;
    18e6:	2300      	movs	r3, #0
    18e8:	9301      	str	r3, [sp, #4]
    18ea:	e06d      	b.n	19c8 <_i2c_m_sync_transfer+0x430>
				if (msg->len > 0) {
    18ec:	686b      	ldr	r3, [r5, #4]
    18ee:	2b00      	cmp	r3, #0
    18f0:	dd04      	ble.n	18fc <_i2c_m_sync_transfer+0x364>
					msg->flags |= I2C_M_FAIL;
    18f2:	886b      	ldrh	r3, [r5, #2]
    18f4:	2080      	movs	r0, #128	; 0x80
    18f6:	0140      	lsls	r0, r0, #5
    18f8:	4303      	orrs	r3, r0
    18fa:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    18fc:	886b      	ldrh	r3, [r5, #2]
    18fe:	b21b      	sxth	r3, r3
    1900:	2b00      	cmp	r3, #0
    1902:	db07      	blt.n	1914 <_i2c_m_sync_transfer+0x37c>
				msg->flags &= ~I2C_M_BUSY;
    1904:	886b      	ldrh	r3, [r5, #2]
    1906:	4870      	ldr	r0, [pc, #448]	; (1ac8 <_i2c_m_sync_transfer+0x530>)
    1908:	4003      	ands	r3, r0
    190a:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    190c:	2302      	movs	r3, #2
    190e:	425b      	negs	r3, r3
    1910:	9301      	str	r3, [sp, #4]
    1912:	e059      	b.n	19c8 <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1914:	6860      	ldr	r0, [r4, #4]
    1916:	23c0      	movs	r3, #192	; 0xc0
    1918:	029b      	lsls	r3, r3, #10
    191a:	4303      	orrs	r3, r0
    191c:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    191e:	69e3      	ldr	r3, [r4, #28]
    1920:	421a      	tst	r2, r3
    1922:	d1fc      	bne.n	191e <_i2c_m_sync_transfer+0x386>
    1924:	e7ee      	b.n	1904 <_i2c_m_sync_transfer+0x36c>
			if (msg->len == 0) {
    1926:	686b      	ldr	r3, [r5, #4]
    1928:	2b00      	cmp	r3, #0
    192a:	d113      	bne.n	1954 <_i2c_m_sync_transfer+0x3bc>
				if (msg->flags & I2C_M_STOP) {
    192c:	886b      	ldrh	r3, [r5, #2]
    192e:	b21b      	sxth	r3, r3
    1930:	2b00      	cmp	r3, #0
    1932:	db06      	blt.n	1942 <_i2c_m_sync_transfer+0x3aa>
				msg->flags &= ~I2C_M_BUSY;
    1934:	886b      	ldrh	r3, [r5, #2]
    1936:	4864      	ldr	r0, [pc, #400]	; (1ac8 <_i2c_m_sync_transfer+0x530>)
    1938:	4003      	ands	r3, r0
    193a:	806b      	strh	r3, [r5, #2]
			return I2C_OK;
    193c:	2300      	movs	r3, #0
    193e:	9301      	str	r3, [sp, #4]
    1940:	e042      	b.n	19c8 <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1942:	6860      	ldr	r0, [r4, #4]
    1944:	23c0      	movs	r3, #192	; 0xc0
    1946:	029b      	lsls	r3, r3, #10
    1948:	4303      	orrs	r3, r0
    194a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    194c:	69e3      	ldr	r3, [r4, #28]
    194e:	421a      	tst	r2, r3
    1950:	d1fc      	bne.n	194c <_i2c_m_sync_transfer+0x3b4>
    1952:	e7ef      	b.n	1934 <_i2c_m_sync_transfer+0x39c>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    1954:	68ab      	ldr	r3, [r5, #8]
    1956:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    1958:	4658      	mov	r0, fp
    195a:	5423      	strb	r3, [r4, r0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    195c:	69e3      	ldr	r3, [r4, #28]
    195e:	421a      	tst	r2, r3
    1960:	d1fc      	bne.n	195c <_i2c_m_sync_transfer+0x3c4>
				msg->buffer++;
    1962:	68ab      	ldr	r3, [r5, #8]
    1964:	3301      	adds	r3, #1
    1966:	60ab      	str	r3, [r5, #8]
				msg->len--;
    1968:	686b      	ldr	r3, [r5, #4]
    196a:	3b01      	subs	r3, #1
    196c:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    196e:	2300      	movs	r3, #0
    1970:	9301      	str	r3, [sp, #4]
    1972:	e029      	b.n	19c8 <_i2c_m_sync_transfer+0x430>
	return I2C_OK;
    1974:	2600      	movs	r6, #0
    1976:	9601      	str	r6, [sp, #4]
	} else if (flags & SB_FLAG) {
    1978:	464e      	mov	r6, r9
    197a:	421e      	tst	r6, r3
    197c:	d024      	beq.n	19c8 <_i2c_m_sync_transfer+0x430>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    197e:	686b      	ldr	r3, [r5, #4]
    1980:	2b00      	cmp	r3, #0
    1982:	d04d      	beq.n	1a20 <_i2c_m_sync_transfer+0x488>
    1984:	4202      	tst	r2, r0
    1986:	d14b      	bne.n	1a20 <_i2c_m_sync_transfer+0x488>
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
    1988:	0eff      	lsrs	r7, r7, #27
    198a:	4660      	mov	r0, ip
    198c:	4007      	ands	r7, r0
			msg->len--;
    198e:	3b01      	subs	r3, #1
    1990:	606b      	str	r3, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1992:	2b00      	cmp	r3, #0
    1994:	d000      	beq.n	1998 <_i2c_m_sync_transfer+0x400>
    1996:	e082      	b.n	1a9e <_i2c_m_sync_transfer+0x506>
    1998:	2f00      	cmp	r7, #0
    199a:	d100      	bne.n	199e <_i2c_m_sync_transfer+0x406>
    199c:	e085      	b.n	1aaa <_i2c_m_sync_transfer+0x512>
				if (msg->flags & I2C_M_STOP) {
    199e:	886b      	ldrh	r3, [r5, #2]
    19a0:	b21b      	sxth	r3, r3
    19a2:	2b00      	cmp	r3, #0
    19a4:	db2c      	blt.n	1a00 <_i2c_m_sync_transfer+0x468>
				msg->flags &= ~I2C_M_BUSY;
    19a6:	886b      	ldrh	r3, [r5, #2]
    19a8:	4847      	ldr	r0, [pc, #284]	; (1ac8 <_i2c_m_sync_transfer+0x530>)
    19aa:	4003      	ands	r3, r0
    19ac:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    19ae:	68a8      	ldr	r0, [r5, #8]
    19b0:	1c43      	adds	r3, r0, #1
    19b2:	60ab      	str	r3, [r5, #8]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    19b4:	69e3      	ldr	r3, [r4, #28]
    19b6:	421a      	tst	r2, r3
    19b8:	d1fc      	bne.n	19b4 <_i2c_m_sync_transfer+0x41c>
	return ((Sercom *)hw)->I2CM.DATA.reg;
    19ba:	465b      	mov	r3, fp
    19bc:	5ce3      	ldrb	r3, [r4, r3]
    19be:	7003      	strb	r3, [r0, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    19c0:	464b      	mov	r3, r9
    19c2:	7623      	strb	r3, [r4, #24]
	return I2C_OK;
    19c4:	2300      	movs	r3, #0
    19c6:	9301      	str	r3, [sp, #4]
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    19c8:	886b      	ldrh	r3, [r5, #2]
    19ca:	4650      	mov	r0, sl
    19cc:	4203      	tst	r3, r0
    19ce:	d02d      	beq.n	1a2c <_i2c_m_sync_transfer+0x494>
	void *   hw      = i2c_dev->hw;
    19d0:	692e      	ldr	r6, [r5, #16]
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    19d2:	7e33      	ldrb	r3, [r6, #24]
    19d4:	b2db      	uxtb	r3, r3
    19d6:	483d      	ldr	r0, [pc, #244]	; (1acc <_i2c_m_sync_transfer+0x534>)
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    19d8:	4219      	tst	r1, r3
    19da:	d141      	bne.n	1a60 <_i2c_m_sync_transfer+0x4c8>
    19dc:	7e33      	ldrb	r3, [r6, #24]
    19de:	b2db      	uxtb	r3, r3
    19e0:	3801      	subs	r0, #1
		if (timeout-- == 0) {
    19e2:	2800      	cmp	r0, #0
    19e4:	d1f8      	bne.n	19d8 <_i2c_m_sync_transfer+0x440>
			if (msg->flags & I2C_M_STOP) {
    19e6:	4643      	mov	r3, r8
    19e8:	885b      	ldrh	r3, [r3, #2]
    19ea:	b21b      	sxth	r3, r3
    19ec:	2b00      	cmp	r3, #0
    19ee:	da00      	bge.n	19f2 <_i2c_m_sync_transfer+0x45a>
    19f0:	e73f      	b.n	1872 <_i2c_m_sync_transfer+0x2da>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    19f2:	886b      	ldrh	r3, [r5, #2]
    19f4:	4a34      	ldr	r2, [pc, #208]	; (1ac8 <_i2c_m_sync_transfer+0x530>)
    19f6:	4013      	ands	r3, r2
    19f8:	806b      	strh	r3, [r5, #2]
			return I2C_ERR_BUS;
    19fa:	2005      	movs	r0, #5
    19fc:	4240      	negs	r0, r0
			return ret;
    19fe:	e663      	b.n	16c8 <_i2c_m_sync_transfer+0x130>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    1a00:	6863      	ldr	r3, [r4, #4]
    1a02:	4831      	ldr	r0, [pc, #196]	; (1ac8 <_i2c_m_sync_transfer+0x530>)
    1a04:	4003      	ands	r3, r0
    1a06:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a08:	69e3      	ldr	r3, [r4, #28]
    1a0a:	421a      	tst	r2, r3
    1a0c:	d1fc      	bne.n	1a08 <_i2c_m_sync_transfer+0x470>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1a0e:	6860      	ldr	r0, [r4, #4]
    1a10:	23c0      	movs	r3, #192	; 0xc0
    1a12:	029b      	lsls	r3, r3, #10
    1a14:	4303      	orrs	r3, r0
    1a16:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a18:	69e3      	ldr	r3, [r4, #28]
    1a1a:	421a      	tst	r2, r3
    1a1c:	d1fc      	bne.n	1a18 <_i2c_m_sync_transfer+0x480>
    1a1e:	e7c2      	b.n	19a6 <_i2c_m_sync_transfer+0x40e>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1a20:	464b      	mov	r3, r9
    1a22:	7623      	strb	r3, [r4, #24]
			return I2C_NACK;
    1a24:	2302      	movs	r3, #2
    1a26:	425b      	negs	r3, r3
    1a28:	9301      	str	r3, [sp, #4]
    1a2a:	e7cd      	b.n	19c8 <_i2c_m_sync_transfer+0x430>
    1a2c:	9e01      	ldr	r6, [sp, #4]
    1a2e:	0030      	movs	r0, r6
    1a30:	e64a      	b.n	16c8 <_i2c_m_sync_transfer+0x130>
		return I2C_ERR_BUSY;
    1a32:	2006      	movs	r0, #6
    1a34:	4240      	negs	r0, r0
    1a36:	e647      	b.n	16c8 <_i2c_m_sync_transfer+0x130>
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1a38:	2b01      	cmp	r3, #1
    1a3a:	d000      	beq.n	1a3e <_i2c_m_sync_transfer+0x4a6>
    1a3c:	e6e7      	b.n	180e <_i2c_m_sync_transfer+0x276>
    1a3e:	2e00      	cmp	r6, #0
    1a40:	d100      	bne.n	1a44 <_i2c_m_sync_transfer+0x4ac>
    1a42:	e6e4      	b.n	180e <_i2c_m_sync_transfer+0x276>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1a44:	687a      	ldr	r2, [r7, #4]
    1a46:	2380      	movs	r3, #128	; 0x80
    1a48:	02db      	lsls	r3, r3, #11
    1a4a:	4313      	orrs	r3, r2
    1a4c:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a4e:	2204      	movs	r2, #4
    1a50:	69fb      	ldr	r3, [r7, #28]
    1a52:	421a      	tst	r2, r3
    1a54:	d1fc      	bne.n	1a50 <_i2c_m_sync_transfer+0x4b8>
			if (msg->len == 0) {
    1a56:	686b      	ldr	r3, [r5, #4]
    1a58:	2b00      	cmp	r3, #0
    1a5a:	d100      	bne.n	1a5e <_i2c_m_sync_transfer+0x4c6>
    1a5c:	e6cf      	b.n	17fe <_i2c_m_sync_transfer+0x266>
    1a5e:	e6d6      	b.n	180e <_i2c_m_sync_transfer+0x276>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1a60:	6827      	ldr	r7, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a62:	69e0      	ldr	r0, [r4, #28]
    1a64:	4202      	tst	r2, r0
    1a66:	d1fc      	bne.n	1a62 <_i2c_m_sync_transfer+0x4ca>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    1a68:	8b60      	ldrh	r0, [r4, #26]
    1a6a:	b280      	uxth	r0, r0
	if (flags & MB_FLAG) {
    1a6c:	4666      	mov	r6, ip
    1a6e:	421e      	tst	r6, r3
    1a70:	d100      	bne.n	1a74 <_i2c_m_sync_transfer+0x4dc>
    1a72:	e77f      	b.n	1974 <_i2c_m_sync_transfer+0x3dc>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    1a74:	464b      	mov	r3, r9
    1a76:	4203      	tst	r3, r0
    1a78:	d100      	bne.n	1a7c <_i2c_m_sync_transfer+0x4e4>
    1a7a:	e719      	b.n	18b0 <_i2c_m_sync_transfer+0x318>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    1a7c:	7626      	strb	r6, [r4, #24]
			msg->flags |= I2C_M_FAIL;
    1a7e:	886b      	ldrh	r3, [r5, #2]
    1a80:	2680      	movs	r6, #128	; 0x80
    1a82:	0176      	lsls	r6, r6, #5
    1a84:	4333      	orrs	r3, r6
    1a86:	806b      	strh	r3, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    1a88:	886b      	ldrh	r3, [r5, #2]
    1a8a:	4e0f      	ldr	r6, [pc, #60]	; (1ac8 <_i2c_m_sync_transfer+0x530>)
    1a8c:	4033      	ands	r3, r6
    1a8e:	806b      	strh	r3, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    1a90:	4663      	mov	r3, ip
    1a92:	4018      	ands	r0, r3
			return I2C_ERR_BAD_ADDRESS;
    1a94:	4246      	negs	r6, r0
    1a96:	4146      	adcs	r6, r0
    1a98:	1f73      	subs	r3, r6, #5
    1a9a:	9301      	str	r3, [sp, #4]
    1a9c:	e794      	b.n	19c8 <_i2c_m_sync_transfer+0x430>
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1a9e:	2b01      	cmp	r3, #1
    1aa0:	d000      	beq.n	1aa4 <_i2c_m_sync_transfer+0x50c>
    1aa2:	e784      	b.n	19ae <_i2c_m_sync_transfer+0x416>
    1aa4:	2f00      	cmp	r7, #0
    1aa6:	d100      	bne.n	1aaa <_i2c_m_sync_transfer+0x512>
    1aa8:	e781      	b.n	19ae <_i2c_m_sync_transfer+0x416>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1aaa:	6860      	ldr	r0, [r4, #4]
    1aac:	2380      	movs	r3, #128	; 0x80
    1aae:	02db      	lsls	r3, r3, #11
    1ab0:	4303      	orrs	r3, r0
    1ab2:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1ab4:	69e3      	ldr	r3, [r4, #28]
    1ab6:	421a      	tst	r2, r3
    1ab8:	d1fc      	bne.n	1ab4 <_i2c_m_sync_transfer+0x51c>
			if (msg->len == 0) {
    1aba:	686b      	ldr	r3, [r5, #4]
    1abc:	2b00      	cmp	r3, #0
    1abe:	d100      	bne.n	1ac2 <_i2c_m_sync_transfer+0x52a>
    1ac0:	e76d      	b.n	199e <_i2c_m_sync_transfer+0x406>
    1ac2:	e774      	b.n	19ae <_i2c_m_sync_transfer+0x416>
    1ac4:	fffffbff 	.word	0xfffffbff
    1ac8:	fffffeff 	.word	0xfffffeff
    1acc:	0000ffff 	.word	0x0000ffff

00001ad0 <_slcd_sync_set_segment>:
	return ERR_NONE;
}

static int32_t _slcd_sync_set_segment(struct _slcd_sync_device *dev, const uint32_t com, const uint32_t seg,
                                      const bool on)
{
    1ad0:	b510      	push	{r4, lr}
	if ((SLCD_COMNUM(seg) >= CONF_SLCD_COM_NUM) || (SLCD_SEGNUM(seg) >= CONF_SLCD_SEG_NUM)) {
    1ad2:	0214      	lsls	r4, r2, #8
    1ad4:	0e24      	lsrs	r4, r4, #24
    1ad6:	2c04      	cmp	r4, #4
    1ad8:	d82d      	bhi.n	1b36 <_slcd_sync_set_segment+0x66>
    1ada:	24ff      	movs	r4, #255	; 0xff
    1adc:	4014      	ands	r4, r2
    1ade:	2c17      	cmp	r4, #23
    1ae0:	d82c      	bhi.n	1b3c <_slcd_sync_set_segment+0x6c>
		return ERR_INVALID_ARG;
	}
	/* Use register instead hri interface to optimization code */
	if (on) {
    1ae2:	2b00      	cmp	r3, #0
    1ae4:	d012      	beq.n	1b0c <_slcd_sync_set_segment+0x3c>
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
    1ae6:	0954      	lsrs	r4, r2, #5
    1ae8:	6803      	ldr	r3, [r0, #0]
    1aea:	3324      	adds	r3, #36	; 0x24
    1aec:	0049      	lsls	r1, r1, #1
    1aee:	1909      	adds	r1, r1, r4
    1af0:	0089      	lsls	r1, r1, #2
		    |= (seg < 32) ? (1 << seg) : (1 << (seg >> 5));
    1af2:	1859      	adds	r1, r3, r1
    1af4:	6808      	ldr	r0, [r1, #0]
    1af6:	2a1f      	cmp	r2, #31
    1af8:	d805      	bhi.n	1b06 <_slcd_sync_set_segment+0x36>
    1afa:	2301      	movs	r3, #1
    1afc:	4093      	lsls	r3, r2
    1afe:	4303      	orrs	r3, r0
    1b00:	600b      	str	r3, [r1, #0]
	} else {
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
	}

	return ERR_NONE;
    1b02:	2000      	movs	r0, #0
}
    1b04:	bd10      	pop	{r4, pc}
		    |= (seg < 32) ? (1 << seg) : (1 << (seg >> 5));
    1b06:	2301      	movs	r3, #1
    1b08:	40a3      	lsls	r3, r4
    1b0a:	e7f8      	b.n	1afe <_slcd_sync_set_segment+0x2e>
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
    1b0c:	0954      	lsrs	r4, r2, #5
    1b0e:	6803      	ldr	r3, [r0, #0]
    1b10:	3324      	adds	r3, #36	; 0x24
    1b12:	0049      	lsls	r1, r1, #1
    1b14:	1909      	adds	r1, r1, r4
    1b16:	0089      	lsls	r1, r1, #2
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
    1b18:	1859      	adds	r1, r3, r1
    1b1a:	6808      	ldr	r0, [r1, #0]
    1b1c:	2a1f      	cmp	r2, #31
    1b1e:	d806      	bhi.n	1b2e <_slcd_sync_set_segment+0x5e>
    1b20:	2301      	movs	r3, #1
    1b22:	4093      	lsls	r3, r2
    1b24:	43db      	mvns	r3, r3
    1b26:	4003      	ands	r3, r0
    1b28:	600b      	str	r3, [r1, #0]
	return ERR_NONE;
    1b2a:	2000      	movs	r0, #0
    1b2c:	e7ea      	b.n	1b04 <_slcd_sync_set_segment+0x34>
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
    1b2e:	2201      	movs	r2, #1
    1b30:	40a2      	lsls	r2, r4
    1b32:	43d3      	mvns	r3, r2
    1b34:	e7f7      	b.n	1b26 <_slcd_sync_set_segment+0x56>
		return ERR_INVALID_ARG;
    1b36:	200d      	movs	r0, #13
    1b38:	4240      	negs	r0, r0
    1b3a:	e7e3      	b.n	1b04 <_slcd_sync_set_segment+0x34>
    1b3c:	200d      	movs	r0, #13
    1b3e:	4240      	negs	r0, r0
    1b40:	e7e0      	b.n	1b04 <_slcd_sync_set_segment+0x34>
	...

00001b44 <_slcd_sync_init>:
	};
}

static inline bool hri_slcd_is_syncing(const void *const hw, hri_slcd_syncbusy_reg_t reg)
{
	return ((Slcd *)hw)->SYNCBUSY.reg & reg;
    1b44:	694b      	ldr	r3, [r1, #20]
	if (!hri_slcd_is_syncing(hw, SLCD_SYNCBUSY_SWRST)) {
    1b46:	07db      	lsls	r3, r3, #31
    1b48:	d418      	bmi.n	1b7c <_slcd_sync_init+0x38>
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b4a:	2203      	movs	r2, #3
    1b4c:	694b      	ldr	r3, [r1, #20]
    1b4e:	421a      	tst	r2, r3
    1b50:	d1fc      	bne.n	1b4c <_slcd_sync_init+0x8>

static inline bool hri_slcd_get_CTRLA_ENABLE_bit(const void *const hw)
{
	uint32_t tmp;
	hri_slcd_wait_for_sync(hw, SLCD_SYNCBUSY_SWRST | SLCD_SYNCBUSY_ENABLE);
	tmp = ((Slcd *)hw)->CTRLA.reg;
    1b52:	680b      	ldr	r3, [r1, #0]
		if (hri_slcd_get_CTRLA_ENABLE_bit(hw)) {
    1b54:	079b      	lsls	r3, r3, #30
    1b56:	d50b      	bpl.n	1b70 <_slcd_sync_init+0x2c>
}

static inline void hri_slcd_clear_CTRLA_ENABLE_bit(const void *const hw)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1b58:	680b      	ldr	r3, [r1, #0]
    1b5a:	2202      	movs	r2, #2
    1b5c:	4393      	bics	r3, r2
    1b5e:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b60:	3201      	adds	r2, #1
    1b62:	694b      	ldr	r3, [r1, #20]
    1b64:	421a      	tst	r2, r3
    1b66:	d1fc      	bne.n	1b62 <_slcd_sync_init+0x1e>
    1b68:	2202      	movs	r2, #2
    1b6a:	694b      	ldr	r3, [r1, #20]
    1b6c:	421a      	tst	r2, r3
    1b6e:	d1fc      	bne.n	1b6a <_slcd_sync_init+0x26>
}

static inline void hri_slcd_write_CTRLA_reg(const void *const hw, hri_slcd_ctrla_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLA.reg = data;
    1b70:	2301      	movs	r3, #1
    1b72:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b74:	2203      	movs	r2, #3
    1b76:	694b      	ldr	r3, [r1, #20]
    1b78:	421a      	tst	r2, r3
    1b7a:	d1fc      	bne.n	1b76 <_slcd_sync_init+0x32>
    1b7c:	2201      	movs	r2, #1
    1b7e:	694b      	ldr	r3, [r1, #20]
    1b80:	421a      	tst	r2, r3
    1b82:	d1fc      	bne.n	1b7e <_slcd_sync_init+0x3a>
	dev->hw = hw;
    1b84:	6001      	str	r1, [r0, #0]
	((Slcd *)hw)->CTRLA.reg = data;
    1b86:	4b16      	ldr	r3, [pc, #88]	; (1be0 <_slcd_sync_init+0x9c>)
    1b88:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b8a:	2203      	movs	r2, #3
    1b8c:	694b      	ldr	r3, [r1, #20]
    1b8e:	421a      	tst	r2, r3
    1b90:	d1fc      	bne.n	1b8c <_slcd_sync_init+0x48>
}

static inline void hri_slcd_write_CTRLB_reg(const void *const hw, hri_slcd_ctrlb_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLB.reg = data;
    1b92:	2381      	movs	r3, #129	; 0x81
    1b94:	808b      	strh	r3, [r1, #4]
}

static inline void hri_slcd_write_CTRLC_reg(const void *const hw, hri_slcd_ctrlc_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLC.reg = data;
    1b96:	3b01      	subs	r3, #1
    1b98:	80cb      	strh	r3, [r1, #6]
}

static inline void hri_slcd_write_CTRLD_reg(const void *const hw, hri_slcd_ctrld_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLD.reg = data;
    1b9a:	720b      	strb	r3, [r1, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b9c:	2207      	movs	r2, #7
    1b9e:	694b      	ldr	r3, [r1, #20]
    1ba0:	421a      	tst	r2, r3
    1ba2:	d1fc      	bne.n	1b9e <_slcd_sync_init+0x5a>
}

static inline void hri_slcd_write_LPENL_reg(const void *const hw, hri_slcd_lpenl_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->LPENL.reg = data;
    1ba4:	4b0f      	ldr	r3, [pc, #60]	; (1be4 <_slcd_sync_init+0xa0>)
    1ba6:	61cb      	str	r3, [r1, #28]
}

static inline void hri_slcd_write_LPENH_reg(const void *const hw, hri_slcd_lpenh_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->LPENH.reg = data;
    1ba8:	23ff      	movs	r3, #255	; 0xff
    1baa:	011b      	lsls	r3, r3, #4
    1bac:	620b      	str	r3, [r1, #32]
}

static inline void hri_slcd_write_SDATAL0_reg(const void *const hw, hri_slcd_sdatal0_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL0.reg = data;
    1bae:	2300      	movs	r3, #0
    1bb0:	624b      	str	r3, [r1, #36]	; 0x24
}

static inline void hri_slcd_write_SDATAH0_reg(const void *const hw, hri_slcd_sdatah0_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH0.reg = data;
    1bb2:	628b      	str	r3, [r1, #40]	; 0x28
}

static inline void hri_slcd_write_SDATAL1_reg(const void *const hw, hri_slcd_sdatal1_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL1.reg = data;
    1bb4:	62cb      	str	r3, [r1, #44]	; 0x2c
}

static inline void hri_slcd_write_SDATAH1_reg(const void *const hw, hri_slcd_sdatah1_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH1.reg = data;
    1bb6:	630b      	str	r3, [r1, #48]	; 0x30
}

static inline void hri_slcd_write_SDATAL2_reg(const void *const hw, hri_slcd_sdatal2_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL2.reg = data;
    1bb8:	634b      	str	r3, [r1, #52]	; 0x34
}

static inline void hri_slcd_write_SDATAH2_reg(const void *const hw, hri_slcd_sdatah2_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH2.reg = data;
    1bba:	638b      	str	r3, [r1, #56]	; 0x38
}

static inline void hri_slcd_write_SDATAL3_reg(const void *const hw, hri_slcd_sdatal3_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL3.reg = data;
    1bbc:	63cb      	str	r3, [r1, #60]	; 0x3c
}

static inline void hri_slcd_write_SDATAH3_reg(const void *const hw, hri_slcd_sdatah3_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH3.reg = data;
    1bbe:	640b      	str	r3, [r1, #64]	; 0x40
}

static inline void hri_slcd_write_SDATAL4_reg(const void *const hw, hri_slcd_sdatal4_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL4.reg = data;
    1bc0:	644b      	str	r3, [r1, #68]	; 0x44
}

static inline void hri_slcd_write_SDATAH4_reg(const void *const hw, hri_slcd_sdatah4_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH4.reg = data;
    1bc2:	648b      	str	r3, [r1, #72]	; 0x48
}

static inline void hri_slcd_write_SDATAL5_reg(const void *const hw, hri_slcd_sdatal5_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL5.reg = data;
    1bc4:	64cb      	str	r3, [r1, #76]	; 0x4c
}

static inline void hri_slcd_write_SDATAH5_reg(const void *const hw, hri_slcd_sdatah5_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH5.reg = data;
    1bc6:	650b      	str	r3, [r1, #80]	; 0x50
}

static inline void hri_slcd_write_SDATAL6_reg(const void *const hw, hri_slcd_sdatal6_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL6.reg = data;
    1bc8:	654b      	str	r3, [r1, #84]	; 0x54
}

static inline void hri_slcd_write_SDATAH6_reg(const void *const hw, hri_slcd_sdatah6_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH6.reg = data;
    1bca:	658b      	str	r3, [r1, #88]	; 0x58
}

static inline void hri_slcd_write_SDATAL7_reg(const void *const hw, hri_slcd_sdatal7_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL7.reg = data;
    1bcc:	65cb      	str	r3, [r1, #92]	; 0x5c
}

static inline void hri_slcd_write_SDATAH7_reg(const void *const hw, hri_slcd_sdatah7_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH7.reg = data;
    1bce:	660b      	str	r3, [r1, #96]	; 0x60
	hri_slcd_set_BCFG_MODE_bit(dev->hw);
    1bd0:	6802      	ldr	r2, [r0, #0]
}

static inline void hri_slcd_set_BCFG_MODE_bit(const void *const hw)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_MODE;
    1bd2:	6e93      	ldr	r3, [r2, #104]	; 0x68
    1bd4:	2101      	movs	r1, #1
    1bd6:	430b      	orrs	r3, r1
    1bd8:	6693      	str	r3, [r2, #104]	; 0x68
}
    1bda:	2000      	movs	r0, #0
    1bdc:	4770      	bx	lr
    1bde:	46c0      	nop			; (mov r8, r8)
    1be0:	00033014 	.word	0x00033014
    1be4:	cfffffc0 	.word	0xcfffffc0

00001be8 <_slcd_sync_enable>:
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1be8:	6802      	ldr	r2, [r0, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1bea:	6813      	ldr	r3, [r2, #0]
    1bec:	2102      	movs	r1, #2
    1bee:	430b      	orrs	r3, r1
    1bf0:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1bf2:	3101      	adds	r1, #1
    1bf4:	6953      	ldr	r3, [r2, #20]
    1bf6:	4219      	tst	r1, r3
    1bf8:	d1fc      	bne.n	1bf4 <_slcd_sync_enable+0xc>
}
    1bfa:	2000      	movs	r0, #0
    1bfc:	4770      	bx	lr
	...

00001c00 <_slcd_sync_seg_on>:
{
    1c00:	b510      	push	{r4, lr}
	return _slcd_sync_set_segment(dev, SLCD_COMNUM(seg), SLCD_SEGNUM(seg), true);
    1c02:	23ff      	movs	r3, #255	; 0xff
    1c04:	001a      	movs	r2, r3
    1c06:	400a      	ands	r2, r1
    1c08:	0c09      	lsrs	r1, r1, #16
    1c0a:	4019      	ands	r1, r3
    1c0c:	3bfe      	subs	r3, #254	; 0xfe
    1c0e:	4c01      	ldr	r4, [pc, #4]	; (1c14 <_slcd_sync_seg_on+0x14>)
    1c10:	47a0      	blx	r4
}
    1c12:	bd10      	pop	{r4, pc}
    1c14:	00001ad1 	.word	0x00001ad1

00001c18 <_slcd_sync_seg_blink>:
{
    1c18:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c1a:	46c6      	mov	lr, r8
    1c1c:	b500      	push	{lr}
    1c1e:	0004      	movs	r4, r0
	if ((SLCD_COMNUM(seg) >= CONF_SLCD_COM_NUM) || (SLCD_SEGNUM(seg) >= CONF_SLCD_SEG_NUM)) {
    1c20:	020d      	lsls	r5, r1, #8
    1c22:	0e2d      	lsrs	r5, r5, #24
    1c24:	2d04      	cmp	r5, #4
    1c26:	d900      	bls.n	1c2a <_slcd_sync_seg_blink+0x12>
    1c28:	e087      	b.n	1d3a <_slcd_sync_seg_blink+0x122>
    1c2a:	26ff      	movs	r6, #255	; 0xff
    1c2c:	400e      	ands	r6, r1
	if (SLCD_SEGNUM(seg) >= 2) {
    1c2e:	2e01      	cmp	r6, #1
    1c30:	d900      	bls.n	1c34 <_slcd_sync_seg_blink+0x1c>
    1c32:	e085      	b.n	1d40 <_slcd_sync_seg_blink+0x128>
	if (period > SLCD_FC_MAX_MS || period < SLCD_FC_MIN_MS) {
    1c34:	4945      	ldr	r1, [pc, #276]	; (1d4c <_slcd_sync_seg_blink+0x134>)
    1c36:	0013      	movs	r3, r2
    1c38:	3b0f      	subs	r3, #15
    1c3a:	428b      	cmp	r3, r1
    1c3c:	d900      	bls.n	1c40 <_slcd_sync_seg_blink+0x28>
    1c3e:	e082      	b.n	1d46 <_slcd_sync_seg_blink+0x12e>
	hri_slcd_clear_CTRLD_FC0EN_bit(dev->hw);
    1c40:	6801      	ldr	r1, [r0, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_FC0EN;
    1c42:	7a0b      	ldrb	r3, [r1, #8]
    1c44:	2010      	movs	r0, #16
    1c46:	4383      	bics	r3, r0
    1c48:	720b      	strb	r3, [r1, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c4a:	2707      	movs	r7, #7
    1c4c:	694b      	ldr	r3, [r1, #20]
    1c4e:	421f      	tst	r7, r3
    1c50:	d1fc      	bne.n	1c4c <_slcd_sync_seg_blink+0x34>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_CTRLD);
    1c52:	6827      	ldr	r7, [r4, #0]
    1c54:	2104      	movs	r1, #4
    1c56:	697b      	ldr	r3, [r7, #20]
    1c58:	4219      	tst	r1, r3
    1c5a:	d1fc      	bne.n	1c56 <_slcd_sync_seg_blink+0x3e>
	if (period <= SLCD_FC_BYPASS_MAX_MS) {
    1c5c:	23f0      	movs	r3, #240	; 0xf0
    1c5e:	005b      	lsls	r3, r3, #1
    1c60:	429a      	cmp	r2, r3
    1c62:	d853      	bhi.n	1d0c <_slcd_sync_seg_blink+0xf4>
	((Slcd *)hw)->FC0.reg |= mask;
    1c64:	7e38      	ldrb	r0, [r7, #24]
    1c66:	b2c3      	uxtb	r3, r0
    1c68:	4698      	mov	r8, r3
		hri_slcd_set_FC0_reg(dev->hw, SLCD_FC0_PB | ((period / (1000 / SLCD_FRAME_FREQUENCY)) - 1));
    1c6a:	210f      	movs	r1, #15
    1c6c:	0010      	movs	r0, r2
    1c6e:	4b38      	ldr	r3, [pc, #224]	; (1d50 <_slcd_sync_seg_blink+0x138>)
    1c70:	4798      	blx	r3
    1c72:	1e43      	subs	r3, r0, #1
    1c74:	2080      	movs	r0, #128	; 0x80
    1c76:	4240      	negs	r0, r0
    1c78:	4642      	mov	r2, r8
    1c7a:	4310      	orrs	r0, r2
    1c7c:	4303      	orrs	r3, r0
    1c7e:	b2db      	uxtb	r3, r3
    1c80:	763b      	strb	r3, [r7, #24]
	hri_slcd_set_CTRLD_FC0EN_bit(dev->hw);
    1c82:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_FC0EN;
    1c84:	7a13      	ldrb	r3, [r2, #8]
    1c86:	2110      	movs	r1, #16
    1c88:	430b      	orrs	r3, r1
    1c8a:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c8c:	3909      	subs	r1, #9
    1c8e:	6953      	ldr	r3, [r2, #20]
    1c90:	4219      	tst	r1, r3
    1c92:	d1fc      	bne.n	1c8e <_slcd_sync_seg_blink+0x76>
	_slcd_sync_set_segment(dev, SLCD_COMNUM(seg), SLCD_SEGNUM(seg), true);
    1c94:	2301      	movs	r3, #1
    1c96:	0032      	movs	r2, r6
    1c98:	0029      	movs	r1, r5
    1c9a:	0020      	movs	r0, r4
    1c9c:	4f2d      	ldr	r7, [pc, #180]	; (1d54 <_slcd_sync_seg_blink+0x13c>)
    1c9e:	47b8      	blx	r7
	hri_slcd_clear_CTRLD_BLINK_bit(dev->hw);
    1ca0:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_BLINK;
    1ca2:	7a13      	ldrb	r3, [r2, #8]
    1ca4:	2102      	movs	r1, #2
    1ca6:	438b      	bics	r3, r1
    1ca8:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1caa:	3105      	adds	r1, #5
    1cac:	6953      	ldr	r3, [r2, #20]
    1cae:	4219      	tst	r1, r3
    1cb0:	d1fc      	bne.n	1cac <_slcd_sync_seg_blink+0x94>
	hri_slcd_clear_CTRLA_ENABLE_bit(dev->hw);
    1cb2:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1cb4:	6813      	ldr	r3, [r2, #0]
    1cb6:	2102      	movs	r1, #2
    1cb8:	438b      	bics	r3, r1
    1cba:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cbc:	3101      	adds	r1, #1
    1cbe:	6953      	ldr	r3, [r2, #20]
    1cc0:	4219      	tst	r1, r3
    1cc2:	d1fc      	bne.n	1cbe <_slcd_sync_seg_blink+0xa6>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_ENABLE);
    1cc4:	6822      	ldr	r2, [r4, #0]
    1cc6:	2102      	movs	r1, #2
    1cc8:	6953      	ldr	r3, [r2, #20]
    1cca:	4219      	tst	r1, r3
    1ccc:	d1fc      	bne.n	1cc8 <_slcd_sync_seg_blink+0xb0>
	if (SLCD_SEGNUM(seg) == 0) {
    1cce:	2e00      	cmp	r6, #0
    1cd0:	d129      	bne.n	1d26 <_slcd_sync_seg_blink+0x10e>
}

static inline void hri_slcd_set_BCFG_BSS0_bf(const void *const hw, hri_slcd_bcfg_reg_t mask)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_BSS0(mask);
    1cd2:	6e91      	ldr	r1, [r2, #104]	; 0x68
		hri_slcd_set_BCFG_BSS0_bf(dev->hw, 1 << SLCD_COMNUM(seg));
    1cd4:	2380      	movs	r3, #128	; 0x80
    1cd6:	045b      	lsls	r3, r3, #17
    1cd8:	40ab      	lsls	r3, r5
    1cda:	0c1b      	lsrs	r3, r3, #16
    1cdc:	430b      	orrs	r3, r1
    1cde:	6693      	str	r3, [r2, #104]	; 0x68
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1ce0:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1ce2:	6813      	ldr	r3, [r2, #0]
    1ce4:	2102      	movs	r1, #2
    1ce6:	430b      	orrs	r3, r1
    1ce8:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cea:	3101      	adds	r1, #1
    1cec:	6953      	ldr	r3, [r2, #20]
    1cee:	4219      	tst	r1, r3
    1cf0:	d1fc      	bne.n	1cec <_slcd_sync_seg_blink+0xd4>
	hri_slcd_set_CTRLD_BLINK_bit(dev->hw);
    1cf2:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_BLINK;
    1cf4:	7a13      	ldrb	r3, [r2, #8]
    1cf6:	2102      	movs	r1, #2
    1cf8:	430b      	orrs	r3, r1
    1cfa:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cfc:	3105      	adds	r1, #5
    1cfe:	6953      	ldr	r3, [r2, #20]
    1d00:	4219      	tst	r1, r3
    1d02:	d1fc      	bne.n	1cfe <_slcd_sync_seg_blink+0xe6>
	return ERR_NONE;
    1d04:	2000      	movs	r0, #0
}
    1d06:	bc04      	pop	{r2}
    1d08:	4690      	mov	r8, r2
    1d0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((Slcd *)hw)->FC0.reg |= mask;
    1d0c:	7e3b      	ldrb	r3, [r7, #24]
    1d0e:	b2db      	uxtb	r3, r3
    1d10:	4698      	mov	r8, r3
		hri_slcd_set_FC0_reg(dev->hw, (((period / (1000 / SLCD_FRAME_FREQUENCY)) / 8 - 1)));
    1d12:	2178      	movs	r1, #120	; 0x78
    1d14:	0010      	movs	r0, r2
    1d16:	4b0e      	ldr	r3, [pc, #56]	; (1d50 <_slcd_sync_seg_blink+0x138>)
    1d18:	4798      	blx	r3
    1d1a:	3801      	subs	r0, #1
    1d1c:	4643      	mov	r3, r8
    1d1e:	4318      	orrs	r0, r3
    1d20:	b2c0      	uxtb	r0, r0
    1d22:	7638      	strb	r0, [r7, #24]
    1d24:	e7ad      	b.n	1c82 <_slcd_sync_seg_blink+0x6a>
}

static inline void hri_slcd_set_BCFG_BSS1_bf(const void *const hw, hri_slcd_bcfg_reg_t mask)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_BSS1(mask);
    1d26:	6e91      	ldr	r1, [r2, #104]	; 0x68
		hri_slcd_set_BCFG_BSS1_bf(dev->hw, 1 << SLCD_COMNUM(seg));
    1d28:	2380      	movs	r3, #128	; 0x80
    1d2a:	025b      	lsls	r3, r3, #9
    1d2c:	40ab      	lsls	r3, r5
    1d2e:	20ff      	movs	r0, #255	; 0xff
    1d30:	0400      	lsls	r0, r0, #16
    1d32:	4003      	ands	r3, r0
    1d34:	430b      	orrs	r3, r1
    1d36:	6693      	str	r3, [r2, #104]	; 0x68
    1d38:	e7d2      	b.n	1ce0 <_slcd_sync_seg_blink+0xc8>
		return ERR_INVALID_ARG;
    1d3a:	200d      	movs	r0, #13
    1d3c:	4240      	negs	r0, r0
    1d3e:	e7e2      	b.n	1d06 <_slcd_sync_seg_blink+0xee>
		return ERR_INVALID_ARG;
    1d40:	200d      	movs	r0, #13
    1d42:	4240      	negs	r0, r0
    1d44:	e7df      	b.n	1d06 <_slcd_sync_seg_blink+0xee>
		return ERR_INVALID_ARG;
    1d46:	200d      	movs	r0, #13
    1d48:	4240      	negs	r0, r0
    1d4a:	e7dc      	b.n	1d06 <_slcd_sync_seg_blink+0xee>
    1d4c:	00000ef1 	.word	0x00000ef1
    1d50:	00002989 	.word	0x00002989
    1d54:	00001ad1 	.word	0x00001ad1

00001d58 <_slcd_sync_write_char>:
{
    1d58:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d5a:	46d6      	mov	lr, sl
    1d5c:	464f      	mov	r7, r9
    1d5e:	4646      	mov	r6, r8
    1d60:	b5c0      	push	{r6, r7, lr}
	if (cm_setting[index].size == 7) {
    1d62:	0094      	lsls	r4, r2, #2
    1d64:	4b3c      	ldr	r3, [pc, #240]	; (1e58 <_slcd_sync_write_char+0x100>)
    1d66:	191b      	adds	r3, r3, r4
    1d68:	78dd      	ldrb	r5, [r3, #3]
    1d6a:	2d07      	cmp	r5, #7
    1d6c:	d004      	beq.n	1d78 <_slcd_sync_write_char+0x20>
	} else if (cm_setting[index].size == 14) {
    1d6e:	2d0e      	cmp	r5, #14
    1d70:	d01a      	beq.n	1da8 <_slcd_sync_write_char+0x50>
		return ERR_INVALID_ARG;
    1d72:	200d      	movs	r0, #13
    1d74:	4240      	negs	r0, r0
    1d76:	e060      	b.n	1e3a <_slcd_sync_write_char+0xe2>
			if (cm7_lut[i].character == character) {
    1d78:	2900      	cmp	r1, #0
    1d7a:	d00d      	beq.n	1d98 <_slcd_sync_write_char+0x40>
    1d7c:	2301      	movs	r3, #1
    1d7e:	4f37      	ldr	r7, [pc, #220]	; (1e5c <_slcd_sync_write_char+0x104>)
    1d80:	2630      	movs	r6, #48	; 0x30
    1d82:	009c      	lsls	r4, r3, #2
    1d84:	193c      	adds	r4, r7, r4
    1d86:	5da4      	ldrb	r4, [r4, r6]
    1d88:	428c      	cmp	r4, r1
    1d8a:	d006      	beq.n	1d9a <_slcd_sync_write_char+0x42>
		for (i = 0; i<sizeof(cm7_lut)>> 2; i++) {
    1d8c:	3301      	adds	r3, #1
    1d8e:	2b11      	cmp	r3, #17
    1d90:	d1f7      	bne.n	1d82 <_slcd_sync_write_char+0x2a>
		return ERR_INVALID_ARG;
    1d92:	200d      	movs	r0, #13
    1d94:	4240      	negs	r0, r0
    1d96:	e050      	b.n	1e3a <_slcd_sync_write_char+0xe2>
			if (cm7_lut[i].character == character) {
    1d98:	2300      	movs	r3, #0
				data = cm7_lut[i].mapping;
    1d9a:	009b      	lsls	r3, r3, #2
    1d9c:	492f      	ldr	r1, [pc, #188]	; (1e5c <_slcd_sync_write_char+0x104>)
    1d9e:	18cb      	adds	r3, r1, r3
    1da0:	6b1c      	ldr	r4, [r3, #48]	; 0x30
    1da2:	0a23      	lsrs	r3, r4, #8
    1da4:	469c      	mov	ip, r3
				break;
    1da6:	e016      	b.n	1dd6 <_slcd_sync_write_char+0x7e>
			if (cm14_lut[i].character == character) {
    1da8:	2930      	cmp	r1, #48	; 0x30
    1daa:	d00d      	beq.n	1dc8 <_slcd_sync_write_char+0x70>
    1dac:	2301      	movs	r3, #1
    1dae:	4f2b      	ldr	r7, [pc, #172]	; (1e5c <_slcd_sync_write_char+0x104>)
    1db0:	2674      	movs	r6, #116	; 0x74
    1db2:	009c      	lsls	r4, r3, #2
    1db4:	193c      	adds	r4, r7, r4
    1db6:	5da4      	ldrb	r4, [r4, r6]
    1db8:	428c      	cmp	r4, r1
    1dba:	d006      	beq.n	1dca <_slcd_sync_write_char+0x72>
		for (i = 0; i<sizeof(cm14_lut)>> 2; i++) {
    1dbc:	3301      	adds	r3, #1
    1dbe:	2b33      	cmp	r3, #51	; 0x33
    1dc0:	d1f7      	bne.n	1db2 <_slcd_sync_write_char+0x5a>
		return ERR_INVALID_ARG;
    1dc2:	200d      	movs	r0, #13
    1dc4:	4240      	negs	r0, r0
    1dc6:	e038      	b.n	1e3a <_slcd_sync_write_char+0xe2>
			if (cm14_lut[i].character == character) {
    1dc8:	2300      	movs	r3, #0
				data = cm14_lut[i].mapping;
    1dca:	009b      	lsls	r3, r3, #2
    1dcc:	4923      	ldr	r1, [pc, #140]	; (1e5c <_slcd_sync_write_char+0x104>)
    1dce:	18cb      	adds	r3, r1, r3
    1dd0:	6f5c      	ldr	r4, [r3, #116]	; 0x74
    1dd2:	0a23      	lsrs	r3, r4, #8
    1dd4:	469c      	mov	ip, r3

static inline void hri_slcd_write_CMCFG_NSEG_bf(const void *const hw, hri_slcd_cmcfg_reg_t data)
{
	uint8_t tmp;
	SLCD_CRITICAL_SECTION_ENTER();
	tmp = ((Slcd *)hw)->CMCFG.reg;
    1dd6:	2470      	movs	r4, #112	; 0x70
    1dd8:	6803      	ldr	r3, [r0, #0]
    1dda:	5d1b      	ldrb	r3, [r3, r4]
	tmp &= ~SLCD_CMCFG_NSEG_Msk;
    1ddc:	2607      	movs	r6, #7
    1dde:	43b3      	bics	r3, r6
	hri_slcd_write_CMCFG_NSEG_bf(dev->hw, cm_setting[index].nseg);
    1de0:	491d      	ldr	r1, [pc, #116]	; (1e58 <_slcd_sync_write_char+0x100>)
    1de2:	468a      	mov	sl, r1
    1de4:	0092      	lsls	r2, r2, #2
    1de6:	188f      	adds	r7, r1, r2
	tmp |= SLCD_CMCFG_NSEG(data);
    1de8:	78be      	ldrb	r6, [r7, #2]
    1dea:	46b1      	mov	r9, r6
    1dec:	2607      	movs	r6, #7
    1dee:	4649      	mov	r1, r9
    1df0:	400e      	ands	r6, r1
    1df2:	4333      	orrs	r3, r6
	((Slcd *)hw)->CMCFG.reg = tmp;
    1df4:	6801      	ldr	r1, [r0, #0]
    1df6:	550b      	strb	r3, [r1, r4]
	hri_slcd_write_CMINDEX_CINDEX_bf(dev->hw, cm_setting[index].com_index);
    1df8:	6804      	ldr	r4, [r0, #0]

static inline void hri_slcd_write_CMINDEX_CINDEX_bf(const void *const hw, hri_slcd_cmindex_reg_t data)
{
	uint16_t tmp;
	SLCD_CRITICAL_SECTION_ENTER();
	tmp = ((Slcd *)hw)->CMINDEX.reg;
    1dfa:	2684      	movs	r6, #132	; 0x84
    1dfc:	5ba3      	ldrh	r3, [r4, r6]
	tmp &= ~SLCD_CMINDEX_CINDEX_Msk;
    1dfe:	4918      	ldr	r1, [pc, #96]	; (1e60 <_slcd_sync_write_char+0x108>)
    1e00:	400b      	ands	r3, r1
    1e02:	4651      	mov	r1, sl
    1e04:	5c52      	ldrb	r2, [r2, r1]
	tmp |= SLCD_CMINDEX_CINDEX(data);
    1e06:	0212      	lsls	r2, r2, #8
    1e08:	21e0      	movs	r1, #224	; 0xe0
    1e0a:	00c9      	lsls	r1, r1, #3
    1e0c:	400a      	ands	r2, r1
    1e0e:	4313      	orrs	r3, r2
	((Slcd *)hw)->CMINDEX.reg = tmp;
    1e10:	53a3      	strh	r3, [r4, r6]
	hri_slcd_write_CMINDEX_SINDEX_bf(dev->hw, cm_setting[index].seg_index);
    1e12:	6802      	ldr	r2, [r0, #0]
	tmp = ((Slcd *)hw)->CMINDEX.reg;
    1e14:	5b93      	ldrh	r3, [r2, r6]
	tmp &= ~SLCD_CMINDEX_SINDEX_Msk;
    1e16:	213f      	movs	r1, #63	; 0x3f
    1e18:	438b      	bics	r3, r1
	tmp |= SLCD_CMINDEX_SINDEX(data);
    1e1a:	787f      	ldrb	r7, [r7, #1]
    1e1c:	4039      	ands	r1, r7
    1e1e:	430b      	orrs	r3, r1
	((Slcd *)hw)->CMINDEX.reg = tmp;
    1e20:	5393      	strh	r3, [r2, r6]
	if (cm_setting[index].size == 7) {
    1e22:	2d07      	cmp	r5, #7
    1e24:	d00e      	beq.n	1e44 <_slcd_sync_write_char+0xec>
	} else if (cm_setting[index].size == 14) {
    1e26:	2d0e      	cmp	r5, #14
    1e28:	d011      	beq.n	1e4e <_slcd_sync_write_char+0xf6>
	while (hri_slcd_get_STATUS_CMWRBUSY_bit(dev->hw))
    1e2a:	6802      	ldr	r2, [r0, #0]
    1e2c:	2108      	movs	r1, #8
	return (((Slcd *)hw)->STATUS.reg & SLCD_STATUS_CMWRBUSY) >> SLCD_STATUS_CMWRBUSY_Pos;
    1e2e:	7c13      	ldrb	r3, [r2, #16]
    1e30:	420b      	tst	r3, r1
    1e32:	d1fc      	bne.n	1e2e <_slcd_sync_write_char+0xd6>
}

static inline void hri_slcd_write_CMDATA_reg(const void *const hw, hri_slcd_cmdata_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CMDATA.reg = data;
    1e34:	4663      	mov	r3, ip
    1e36:	67d3      	str	r3, [r2, #124]	; 0x7c
	return ERR_NONE;
    1e38:	2000      	movs	r0, #0
}
    1e3a:	bc1c      	pop	{r2, r3, r4}
    1e3c:	4690      	mov	r8, r2
    1e3e:	4699      	mov	r9, r3
    1e40:	46a2      	mov	sl, r4
    1e42:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((Slcd *)hw)->CMDMASK.reg = data;
    1e44:	4a07      	ldr	r2, [pc, #28]	; (1e64 <_slcd_sync_write_char+0x10c>)
    1e46:	2380      	movs	r3, #128	; 0x80
    1e48:	6801      	ldr	r1, [r0, #0]
    1e4a:	50ca      	str	r2, [r1, r3]
    1e4c:	e7ed      	b.n	1e2a <_slcd_sync_write_char+0xd2>
    1e4e:	4a06      	ldr	r2, [pc, #24]	; (1e68 <_slcd_sync_write_char+0x110>)
    1e50:	2380      	movs	r3, #128	; 0x80
    1e52:	6801      	ldr	r1, [r0, #0]
    1e54:	50ca      	str	r2, [r1, r3]
    1e56:	e7e8      	b.n	1e2a <_slcd_sync_write_char+0xd2>
    1e58:	00009920 	.word	0x00009920
    1e5c:	000099a0 	.word	0x000099a0
    1e60:	fffff8ff 	.word	0xfffff8ff
    1e64:	00ffff80 	.word	0x00ffff80
    1e68:	00ffc000 	.word	0x00ffc000

00001e6c <_slcd_sync_set_animation_period>:
{
    1e6c:	b570      	push	{r4, r5, r6, lr}
    1e6e:	0005      	movs	r5, r0
    1e70:	0008      	movs	r0, r1
	hri_slcd_clear_CTRLD_FC1EN_bit(dev->hw);
    1e72:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_FC1EN;
    1e74:	7a13      	ldrb	r3, [r2, #8]
    1e76:	2120      	movs	r1, #32
    1e78:	438b      	bics	r3, r1
    1e7a:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1e7c:	3919      	subs	r1, #25
    1e7e:	6953      	ldr	r3, [r2, #20]
    1e80:	4219      	tst	r1, r3
    1e82:	d1fc      	bne.n	1e7e <_slcd_sync_set_animation_period+0x12>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_CTRLD);
    1e84:	682c      	ldr	r4, [r5, #0]
    1e86:	2204      	movs	r2, #4
    1e88:	6963      	ldr	r3, [r4, #20]
    1e8a:	421a      	tst	r2, r3
    1e8c:	d1fc      	bne.n	1e88 <_slcd_sync_set_animation_period+0x1c>
	if (period <= SLCD_FC_BYPASS_MAX_MS) {
    1e8e:	23f0      	movs	r3, #240	; 0xf0
    1e90:	005b      	lsls	r3, r3, #1
    1e92:	4298      	cmp	r0, r3
    1e94:	d816      	bhi.n	1ec4 <_slcd_sync_set_animation_period+0x58>
	((Slcd *)hw)->FC1.reg |= mask;
    1e96:	7e66      	ldrb	r6, [r4, #25]
    1e98:	b2f6      	uxtb	r6, r6
		hri_slcd_set_FC1_reg(dev->hw, SLCD_FC1_PB | ((period / (1000 / SLCD_FRAME_FREQUENCY)) - 1));
    1e9a:	210f      	movs	r1, #15
    1e9c:	4b0e      	ldr	r3, [pc, #56]	; (1ed8 <_slcd_sync_set_animation_period+0x6c>)
    1e9e:	4798      	blx	r3
    1ea0:	3801      	subs	r0, #1
    1ea2:	4306      	orrs	r6, r0
    1ea4:	2380      	movs	r3, #128	; 0x80
    1ea6:	425b      	negs	r3, r3
    1ea8:	4333      	orrs	r3, r6
    1eaa:	b2db      	uxtb	r3, r3
    1eac:	7663      	strb	r3, [r4, #25]
	hri_slcd_set_CTRLD_FC1EN_bit(dev->hw);
    1eae:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_FC1EN;
    1eb0:	7a13      	ldrb	r3, [r2, #8]
    1eb2:	2120      	movs	r1, #32
    1eb4:	430b      	orrs	r3, r1
    1eb6:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1eb8:	3919      	subs	r1, #25
    1eba:	6953      	ldr	r3, [r2, #20]
    1ebc:	4219      	tst	r1, r3
    1ebe:	d1fc      	bne.n	1eba <_slcd_sync_set_animation_period+0x4e>
}
    1ec0:	2000      	movs	r0, #0
    1ec2:	bd70      	pop	{r4, r5, r6, pc}
	((Slcd *)hw)->FC1.reg |= mask;
    1ec4:	7e66      	ldrb	r6, [r4, #25]
    1ec6:	b2f6      	uxtb	r6, r6
		hri_slcd_set_FC1_reg(dev->hw, (((period / (1000 / SLCD_FRAME_FREQUENCY)) / 8 - 1)));
    1ec8:	2178      	movs	r1, #120	; 0x78
    1eca:	4b03      	ldr	r3, [pc, #12]	; (1ed8 <_slcd_sync_set_animation_period+0x6c>)
    1ecc:	4798      	blx	r3
    1ece:	3801      	subs	r0, #1
    1ed0:	4306      	orrs	r6, r0
    1ed2:	b2f6      	uxtb	r6, r6
    1ed4:	7666      	strb	r6, [r4, #25]
    1ed6:	e7ea      	b.n	1eae <_slcd_sync_set_animation_period+0x42>
    1ed8:	00002989 	.word	0x00002989

00001edc <_slcd_sync_start_animation>:
{
    1edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1ede:	46ce      	mov	lr, r9
    1ee0:	4647      	mov	r7, r8
    1ee2:	b580      	push	{r7, lr}
    1ee4:	0005      	movs	r5, r0
    1ee6:	000e      	movs	r6, r1
    1ee8:	0014      	movs	r4, r2
	if (len > 16) {
    1eea:	2a10      	cmp	r2, #16
    1eec:	d900      	bls.n	1ef0 <_slcd_sync_start_animation+0x14>
    1eee:	e08e      	b.n	200e <STACK_SIZE+0xe>
	for (i = 0; i < len; i++) {
    1ef0:	2a00      	cmp	r2, #0
    1ef2:	d012      	beq.n	1f1a <_slcd_sync_start_animation+0x3e>
		if ((SLCD_SEGNUM(segs[i]) != 2 && SLCD_SEGNUM(segs[i]) != 3)) {
    1ef4:	780a      	ldrb	r2, [r1, #0]
    1ef6:	3a02      	subs	r2, #2
    1ef8:	2a01      	cmp	r2, #1
    1efa:	d900      	bls.n	1efe <_slcd_sync_start_animation+0x22>
    1efc:	e08a      	b.n	2014 <STACK_SIZE+0x14>
    1efe:	1d08      	adds	r0, r1, #4
    1f00:	00a1      	lsls	r1, r4, #2
    1f02:	1871      	adds	r1, r6, r1
    1f04:	27ff      	movs	r7, #255	; 0xff
	for (i = 0; i < len; i++) {
    1f06:	4288      	cmp	r0, r1
    1f08:	d007      	beq.n	1f1a <_slcd_sync_start_animation+0x3e>
		if ((SLCD_SEGNUM(segs[i]) != 2 && SLCD_SEGNUM(segs[i]) != 3)) {
    1f0a:	c804      	ldmia	r0!, {r2}
    1f0c:	403a      	ands	r2, r7
    1f0e:	3a02      	subs	r2, #2
    1f10:	2a01      	cmp	r2, #1
    1f12:	d9f8      	bls.n	1f06 <_slcd_sync_start_animation+0x2a>
			return ERR_INVALID_ARG;
    1f14:	200d      	movs	r0, #13
    1f16:	4240      	negs	r0, r0
    1f18:	e075      	b.n	2006 <STACK_SIZE+0x6>
	if (period > SLCD_FC_MAX_MS || period < SLCD_FC_MIN_MS) {
    1f1a:	4941      	ldr	r1, [pc, #260]	; (2020 <STACK_SIZE+0x20>)
    1f1c:	001a      	movs	r2, r3
    1f1e:	3a0f      	subs	r2, #15
    1f20:	428a      	cmp	r2, r1
    1f22:	d900      	bls.n	1f26 <_slcd_sync_start_animation+0x4a>
    1f24:	e079      	b.n	201a <STACK_SIZE+0x1a>
	_slcd_sync_set_animation_period(dev, period);
    1f26:	0019      	movs	r1, r3
    1f28:	0028      	movs	r0, r5
    1f2a:	4b3e      	ldr	r3, [pc, #248]	; (2024 <STACK_SIZE+0x24>)
    1f2c:	4798      	blx	r3
	hri_slcd_clear_CTRLA_ENABLE_bit(dev->hw);
    1f2e:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1f30:	6813      	ldr	r3, [r2, #0]
    1f32:	2102      	movs	r1, #2
    1f34:	438b      	bics	r3, r1
    1f36:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1f38:	3101      	adds	r1, #1
    1f3a:	6953      	ldr	r3, [r2, #20]
    1f3c:	4219      	tst	r1, r3
    1f3e:	d1fc      	bne.n	1f3a <_slcd_sync_start_animation+0x5e>
	hri_slcd_clear_CTRLD_CSREN_bit(dev->hw);
    1f40:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_CSREN;
    1f42:	7a13      	ldrb	r3, [r2, #8]
    1f44:	2104      	movs	r1, #4
    1f46:	438b      	bics	r3, r1
    1f48:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1f4a:	3103      	adds	r1, #3
    1f4c:	6953      	ldr	r3, [r2, #20]
    1f4e:	4219      	tst	r1, r3
    1f50:	d1fc      	bne.n	1f4c <_slcd_sync_start_animation+0x70>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_ENABLE | SLCD_SYNCBUSY_CTRLD);
    1f52:	682a      	ldr	r2, [r5, #0]
    1f54:	2106      	movs	r1, #6
    1f56:	6953      	ldr	r3, [r2, #20]
    1f58:	4219      	tst	r1, r3
    1f5a:	d1fc      	bne.n	1f56 <_slcd_sync_start_animation+0x7a>
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_FCS(mask);
    1f5c:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
    1f5e:	2102      	movs	r1, #2
    1f60:	430b      	orrs	r3, r1
    1f62:	66d3      	str	r3, [r2, #108]	; 0x6c
	hri_slcd_write_CSRCFG_DATA_bf(dev->hw, 0);
    1f64:	682a      	ldr	r2, [r5, #0]
	tmp = ((Slcd *)hw)->CSRCFG.reg;
    1f66:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
	tmp &= ~SLCD_CSRCFG_DATA_Msk;
    1f68:	492f      	ldr	r1, [pc, #188]	; (2028 <STACK_SIZE+0x28>)
    1f6a:	400b      	ands	r3, r1
	((Slcd *)hw)->CSRCFG.reg = tmp;
    1f6c:	66d3      	str	r3, [r2, #108]	; 0x6c
	for (i = 0; i < len; i++) {
    1f6e:	2c00      	cmp	r4, #0
    1f70:	d029      	beq.n	1fc6 <_slcd_sync_start_animation+0xea>
    1f72:	0030      	movs	r0, r6
    1f74:	00a4      	lsls	r4, r4, #2
    1f76:	1931      	adds	r1, r6, r4
    1f78:	2400      	movs	r4, #0
		hri_slcd_set_CSRCFG_DATA_bf(dev->hw, (1 << ((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2))));
    1f7a:	26ff      	movs	r6, #255	; 0xff
    1f7c:	2301      	movs	r3, #1
    1f7e:	469c      	mov	ip, r3
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_DATA(mask);
    1f80:	4b2a      	ldr	r3, [pc, #168]	; (202c <STACK_SIZE+0x2c>)
    1f82:	4698      	mov	r8, r3
    1f84:	e002      	b.n	1f8c <_slcd_sync_start_animation+0xb0>
    1f86:	3004      	adds	r0, #4
	for (i = 0; i < len; i++) {
    1f88:	4288      	cmp	r0, r1
    1f8a:	d01c      	beq.n	1fc6 <_slcd_sync_start_animation+0xea>
		hri_slcd_set_CSRCFG_DATA_bf(dev->hw, (1 << ((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2))));
    1f8c:	682f      	ldr	r7, [r5, #0]
    1f8e:	6802      	ldr	r2, [r0, #0]
    1f90:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    1f92:	4699      	mov	r9, r3
    1f94:	0c13      	lsrs	r3, r2, #16
    1f96:	4033      	ands	r3, r6
    1f98:	005b      	lsls	r3, r3, #1
    1f9a:	4032      	ands	r2, r6
    1f9c:	3a02      	subs	r2, #2
    1f9e:	189a      	adds	r2, r3, r2
    1fa0:	4663      	mov	r3, ip
    1fa2:	4093      	lsls	r3, r2
    1fa4:	021b      	lsls	r3, r3, #8
    1fa6:	4642      	mov	r2, r8
    1fa8:	4013      	ands	r3, r2
    1faa:	464a      	mov	r2, r9
    1fac:	4313      	orrs	r3, r2
    1fae:	66fb      	str	r3, [r7, #108]	; 0x6c
		if (((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2)) > csrlen) {
    1fb0:	6802      	ldr	r2, [r0, #0]
    1fb2:	0c13      	lsrs	r3, r2, #16
    1fb4:	4033      	ands	r3, r6
    1fb6:	005b      	lsls	r3, r3, #1
    1fb8:	4032      	ands	r2, r6
    1fba:	3a02      	subs	r2, #2
    1fbc:	189b      	adds	r3, r3, r2
    1fbe:	429c      	cmp	r4, r3
    1fc0:	d2e1      	bcs.n	1f86 <_slcd_sync_start_animation+0xaa>
    1fc2:	001c      	movs	r4, r3
    1fc4:	e7df      	b.n	1f86 <_slcd_sync_start_animation+0xaa>
	hri_slcd_set_CSRCFG_SIZE_bf(dev->hw, csrlen + 1);
    1fc6:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_SIZE(mask);
    1fc8:	6ed1      	ldr	r1, [r2, #108]	; 0x6c
    1fca:	3401      	adds	r4, #1
    1fcc:	0124      	lsls	r4, r4, #4
    1fce:	23ff      	movs	r3, #255	; 0xff
    1fd0:	401c      	ands	r4, r3
    1fd2:	430c      	orrs	r4, r1
    1fd4:	66d4      	str	r4, [r2, #108]	; 0x6c
	hri_slcd_set_BCFG_MODE_bit(dev->hw);
    1fd6:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_MODE;
    1fd8:	6e93      	ldr	r3, [r2, #104]	; 0x68
    1fda:	2101      	movs	r1, #1
    1fdc:	430b      	orrs	r3, r1
    1fde:	6693      	str	r3, [r2, #104]	; 0x68
	hri_slcd_set_CTRLD_CSREN_bit(dev->hw);
    1fe0:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_CSREN;
    1fe2:	7a13      	ldrb	r3, [r2, #8]
    1fe4:	3103      	adds	r1, #3
    1fe6:	430b      	orrs	r3, r1
    1fe8:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1fea:	3103      	adds	r1, #3
    1fec:	6953      	ldr	r3, [r2, #20]
    1fee:	4219      	tst	r1, r3
    1ff0:	d1fc      	bne.n	1fec <_slcd_sync_start_animation+0x110>
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1ff2:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1ff4:	6813      	ldr	r3, [r2, #0]
    1ff6:	2102      	movs	r1, #2
    1ff8:	430b      	orrs	r3, r1
    1ffa:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1ffc:	3101      	adds	r1, #1
    1ffe:	6953      	ldr	r3, [r2, #20]
    2000:	4219      	tst	r1, r3
    2002:	d1fc      	bne.n	1ffe <_slcd_sync_start_animation+0x122>
	return ERR_NONE;
    2004:	2000      	movs	r0, #0
}
    2006:	bc0c      	pop	{r2, r3}
    2008:	4690      	mov	r8, r2
    200a:	4699      	mov	r9, r3
    200c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return ERR_INVALID_ARG;
    200e:	200d      	movs	r0, #13
    2010:	4240      	negs	r0, r0
    2012:	e7f8      	b.n	2006 <STACK_SIZE+0x6>
			return ERR_INVALID_ARG;
    2014:	200d      	movs	r0, #13
    2016:	4240      	negs	r0, r0
    2018:	e7f5      	b.n	2006 <STACK_SIZE+0x6>
		return ERR_INVALID_ARG;
    201a:	200d      	movs	r0, #13
    201c:	4240      	negs	r0, r0
    201e:	e7f2      	b.n	2006 <STACK_SIZE+0x6>
    2020:	00000ef1 	.word	0x00000ef1
    2024:	00001e6d 	.word	0x00001e6d
    2028:	ff0000ff 	.word	0xff0000ff
    202c:	00ffff00 	.word	0x00ffff00

00002030 <dot_product>:
  if (s_sample_index >= SAMPLE_BUF_SIZE) {
    s_sample_index %= SAMPLE_BUF_SIZE;
  }
}

static int32_t dot_product(int offset) {
    2030:	b5f0      	push	{r4, r5, r6, r7, lr}
    2032:	0006      	movs	r6, r0
  return sample_buf[(s_sample_index + index) % SAMPLE_BUF_SIZE];
    2034:	4b0f      	ldr	r3, [pc, #60]	; (2074 <dot_product+0x44>)
    2036:	6819      	ldr	r1, [r3, #0]
    2038:	1c4d      	adds	r5, r1, #1
    203a:	35ff      	adds	r5, #255	; 0xff
  int32_t total = 0;
    203c:	2000      	movs	r0, #0
  return sample_buf[(s_sample_index + index) % SAMPLE_BUF_SIZE];
    203e:	001c      	movs	r4, r3
    2040:	1873      	adds	r3, r6, r1
    2042:	17da      	asrs	r2, r3, #31
    2044:	0dd2      	lsrs	r2, r2, #23
    2046:	189b      	adds	r3, r3, r2
    2048:	05db      	lsls	r3, r3, #23
    204a:	0ddb      	lsrs	r3, r3, #23
    204c:	1a9b      	subs	r3, r3, r2
    204e:	009b      	lsls	r3, r3, #2
    2050:	18e3      	adds	r3, r4, r3
    2052:	17cf      	asrs	r7, r1, #31
    2054:	0dff      	lsrs	r7, r7, #23
    2056:	19ca      	adds	r2, r1, r7
    2058:	05d2      	lsls	r2, r2, #23
    205a:	0dd2      	lsrs	r2, r2, #23
    205c:	1bd2      	subs	r2, r2, r7
    205e:	0092      	lsls	r2, r2, #2
    2060:	18a2      	adds	r2, r4, r2
  for (int i=0; i<WINDOW_SIZE; i++) {
    int32_t a = get_sample(i);
    int32_t b = get_sample(i+offset);
    total += a * b;
    2062:	685f      	ldr	r7, [r3, #4]
    2064:	6853      	ldr	r3, [r2, #4]
    2066:	437b      	muls	r3, r7
    2068:	18c0      	adds	r0, r0, r3
    206a:	3101      	adds	r1, #1
  for (int i=0; i<WINDOW_SIZE; i++) {
    206c:	42a9      	cmp	r1, r5
    206e:	d1e7      	bne.n	2040 <dot_product+0x10>
  }
  return total;
}
    2070:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2072:	46c0      	nop			; (mov r8, r8)
    2074:	20000a4c 	.word	0x20000a4c

00002078 <main>:
int main(void) {
    2078:	b5f0      	push	{r4, r5, r6, r7, lr}
    207a:	46d6      	mov	lr, sl
    207c:	464f      	mov	r7, r9
    207e:	b580      	push	{r7, lr}
    2080:	b093      	sub	sp, #76	; 0x4c
  atmel_start_init();
    2082:	4b82      	ldr	r3, [pc, #520]	; (228c <main+0x214>)
    2084:	4798      	blx	r3
  slcd_sync_enable(&SEGMENT_LCD_0);
    2086:	4c82      	ldr	r4, [pc, #520]	; (2290 <main+0x218>)
    2088:	0020      	movs	r0, r4
    208a:	4b82      	ldr	r3, [pc, #520]	; (2294 <main+0x21c>)
    208c:	4798      	blx	r3
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N0);
    208e:	21c0      	movs	r1, #192	; 0xc0
    2090:	0289      	lsls	r1, r1, #10
    2092:	0020      	movs	r0, r4
    2094:	4d80      	ldr	r5, [pc, #512]	; (2298 <main+0x220>)
    2096:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N1);
    2098:	2180      	movs	r1, #128	; 0x80
    209a:	02c9      	lsls	r1, r1, #11
    209c:	0020      	movs	r0, r4
    209e:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N2);
    20a0:	21a0      	movs	r1, #160	; 0xa0
    20a2:	02c9      	lsls	r1, r1, #11
    20a4:	0020      	movs	r0, r4
    20a6:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N3);
    20a8:	21c0      	movs	r1, #192	; 0xc0
    20aa:	02c9      	lsls	r1, r1, #11
    20ac:	0020      	movs	r0, r4
    20ae:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N4);
    20b0:	21e0      	movs	r1, #224	; 0xe0
    20b2:	02c9      	lsls	r1, r1, #11
    20b4:	0020      	movs	r0, r4
    20b6:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S0);
    20b8:	2115      	movs	r1, #21
    20ba:	0020      	movs	r0, r4
    20bc:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S1);
    20be:	2114      	movs	r1, #20
    20c0:	0020      	movs	r0, r4
    20c2:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S2);
    20c4:	2113      	movs	r1, #19
    20c6:	0020      	movs	r0, r4
    20c8:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S3);
    20ca:	2116      	movs	r1, #22
    20cc:	0020      	movs	r0, r4
    20ce:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S4);
    20d0:	210e      	movs	r1, #14
    20d2:	0020      	movs	r0, r4
    20d4:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S5);
    20d6:	210d      	movs	r1, #13
    20d8:	0020      	movs	r0, r4
    20da:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S6);
    20dc:	210f      	movs	r1, #15
    20de:	0020      	movs	r0, r4
    20e0:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S7);
    20e2:	2117      	movs	r1, #23
    20e4:	0020      	movs	r0, r4
    20e6:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D01);
    20e8:	2110      	movs	r1, #16
    20ea:	0020      	movs	r0, r4
    20ec:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D02);
    20ee:	2111      	movs	r1, #17
    20f0:	0020      	movs	r0, r4
    20f2:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D03);
    20f4:	2112      	movs	r1, #18
    20f6:	0020      	movs	r0, r4
    20f8:	47a8      	blx	r5
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B0, 1000);
    20fa:	25fa      	movs	r5, #250	; 0xfa
    20fc:	00ad      	lsls	r5, r5, #2
    20fe:	002a      	movs	r2, r5
    2100:	2180      	movs	r1, #128	; 0x80
    2102:	0249      	lsls	r1, r1, #9
    2104:	0020      	movs	r0, r4
    2106:	4e65      	ldr	r6, [pc, #404]	; (229c <main+0x224>)
    2108:	47b0      	blx	r6
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B1, 1000);
    210a:	002a      	movs	r2, r5
    210c:	2180      	movs	r1, #128	; 0x80
    210e:	0289      	lsls	r1, r1, #10
    2110:	0020      	movs	r0, r4
    2112:	47b0      	blx	r6
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B2, 1000);
    2114:	002a      	movs	r2, r5
    2116:	2100      	movs	r1, #0
    2118:	0020      	movs	r0, r4
    211a:	47b0      	blx	r6
  uint32_t segs[8] = {TSLCD_SEG_W0,  TSLCD_SEG_W1,  TSLCD_SEG_W2,
    211c:	a906      	add	r1, sp, #24
    211e:	4b60      	ldr	r3, [pc, #384]	; (22a0 <main+0x228>)
    2120:	000a      	movs	r2, r1
    2122:	cbc1      	ldmia	r3!, {r0, r6, r7}
    2124:	c2c1      	stmia	r2!, {r0, r6, r7}
    2126:	cbc1      	ldmia	r3!, {r0, r6, r7}
    2128:	c2c1      	stmia	r2!, {r0, r6, r7}
    212a:	cb41      	ldmia	r3!, {r0, r6}
    212c:	c241      	stmia	r2!, {r0, r6}
  slcd_sync_start_animation(&SEGMENT_LCD_0, segs, 8, 1000);
    212e:	002b      	movs	r3, r5
    2130:	2208      	movs	r2, #8
    2132:	0020      	movs	r0, r4
    2134:	4d5b      	ldr	r5, [pc, #364]	; (22a4 <main+0x22c>)
    2136:	47a8      	blx	r5
  slcd_sync_write_char(&SEGMENT_LCD_0, '0', 0);
    2138:	2200      	movs	r2, #0
    213a:	2130      	movs	r1, #48	; 0x30
    213c:	0020      	movs	r0, r4
    213e:	4d5a      	ldr	r5, [pc, #360]	; (22a8 <main+0x230>)
    2140:	47a8      	blx	r5
  slcd_sync_write_char(&SEGMENT_LCD_0, '1', 1);
    2142:	2201      	movs	r2, #1
    2144:	2131      	movs	r1, #49	; 0x31
    2146:	0020      	movs	r0, r4
    2148:	47a8      	blx	r5
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"234", 3, 2);
    214a:	2302      	movs	r3, #2
    214c:	2203      	movs	r2, #3
    214e:	4957      	ldr	r1, [pc, #348]	; (22ac <main+0x234>)
    2150:	0020      	movs	r0, r4
    2152:	4d57      	ldr	r5, [pc, #348]	; (22b0 <main+0x238>)
    2154:	47a8      	blx	r5
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"abcdefgh", 8, 5);
    2156:	2305      	movs	r3, #5
    2158:	2208      	movs	r2, #8
    215a:	4956      	ldr	r1, [pc, #344]	; (22b4 <main+0x23c>)
    215c:	0020      	movs	r0, r4
    215e:	47a8      	blx	r5
  err = adxl345_dev_init(&adxl345_dev, &ADXL345_0, ADXL345_I2C_PRIMARY_ADDRESS,
    2160:	2380      	movs	r3, #128	; 0x80
    2162:	011b      	lsls	r3, r3, #4
    2164:	2253      	movs	r2, #83	; 0x53
    2166:	4954      	ldr	r1, [pc, #336]	; (22b8 <main+0x240>)
    2168:	a80e      	add	r0, sp, #56	; 0x38
    216a:	4c54      	ldr	r4, [pc, #336]	; (22bc <main+0x244>)
    216c:	47a0      	blx	r4
    216e:	0001      	movs	r1, r0
  printf("adxl345_dev_init() => %d\n", err);
    2170:	4853      	ldr	r0, [pc, #332]	; (22c0 <main+0x248>)
    2172:	4c54      	ldr	r4, [pc, #336]	; (22c4 <main+0x24c>)
    2174:	47a0      	blx	r4
  err = adxl345_init(&adxl345, &adxl345_dev);
    2176:	a90e      	add	r1, sp, #56	; 0x38
    2178:	a811      	add	r0, sp, #68	; 0x44
    217a:	4b53      	ldr	r3, [pc, #332]	; (22c8 <main+0x250>)
    217c:	4798      	blx	r3
    217e:	0001      	movs	r1, r0
  printf("adxl345_init() => %d\n", err);
    2180:	4852      	ldr	r0, [pc, #328]	; (22cc <main+0x254>)
    2182:	47a0      	blx	r4
  err = adxl345_stop(&adxl345);
    2184:	a811      	add	r0, sp, #68	; 0x44
    2186:	4b52      	ldr	r3, [pc, #328]	; (22d0 <main+0x258>)
    2188:	4798      	blx	r3
    218a:	0001      	movs	r1, r0
  printf("adxl345_stop() => %d\n", err);
    218c:	4851      	ldr	r0, [pc, #324]	; (22d4 <main+0x25c>)
    218e:	47a0      	blx	r4
  err = adxl345_set_bw_rate_reg(&adxl345, ADXL345_RATE_200);
    2190:	210b      	movs	r1, #11
    2192:	a811      	add	r0, sp, #68	; 0x44
    2194:	4b50      	ldr	r3, [pc, #320]	; (22d8 <main+0x260>)
    2196:	4798      	blx	r3
    2198:	0001      	movs	r1, r0
  printf("adxl345_set_bw_rate_reg() => %d\n", err);
    219a:	4850      	ldr	r0, [pc, #320]	; (22dc <main+0x264>)
    219c:	47a0      	blx	r4
  err = adxl345_set_fifo_ctl_reg(&adxl345, ADXL345_FIFO_MODE_ENABLE | 1);
    219e:	2141      	movs	r1, #65	; 0x41
    21a0:	a811      	add	r0, sp, #68	; 0x44
    21a2:	4b4f      	ldr	r3, [pc, #316]	; (22e0 <main+0x268>)
    21a4:	4798      	blx	r3
    21a6:	0001      	movs	r1, r0
  printf("adxl345_set_fifo_ctl_reg() => %d\n", err);
    21a8:	484e      	ldr	r0, [pc, #312]	; (22e4 <main+0x26c>)
    21aa:	47a0      	blx	r4
  err = adxl345_start(&adxl345);
    21ac:	a811      	add	r0, sp, #68	; 0x44
    21ae:	4b4e      	ldr	r3, [pc, #312]	; (22e8 <main+0x270>)
    21b0:	4798      	blx	r3
    21b2:	0001      	movs	r1, r0
  printf("adxl345_start() => %d\n", err);
    21b4:	484d      	ldr	r0, [pc, #308]	; (22ec <main+0x274>)
    21b6:	47a0      	blx	r4
  s_high_water = 0;
    21b8:	4b4d      	ldr	r3, [pc, #308]	; (22f0 <main+0x278>)
    21ba:	2200      	movs	r2, #0
    21bc:	711a      	strb	r2, [r3, #4]
  s_samples_read = 0;
    21be:	609a      	str	r2, [r3, #8]
  /* err = */ adxl345_available_samples(adxl345, &available);
    21c0:	4b4c      	ldr	r3, [pc, #304]	; (22f4 <main+0x27c>)
    21c2:	469a      	mov	sl, r3
    s_sample_index %= SAMPLE_BUF_SIZE;
    21c4:	4b4c      	ldr	r3, [pc, #304]	; (22f8 <main+0x280>)
    21c6:	4699      	mov	r9, r3
    21c8:	e048      	b.n	225c <main+0x1e4>
  for (int i = 0; i < available; i++) {
    21ca:	3501      	adds	r5, #1
    21cc:	230f      	movs	r3, #15
    21ce:	aa02      	add	r2, sp, #8
    21d0:	4694      	mov	ip, r2
    21d2:	4463      	add	r3, ip
    21d4:	781b      	ldrb	r3, [r3, #0]
    21d6:	429d      	cmp	r5, r3
    21d8:	da17      	bge.n	220a <main+0x192>
    /* err = */ adxl345_get_isample(adxl345, &sample);
    21da:	af06      	add	r7, sp, #24
    21dc:	0039      	movs	r1, r7
    21de:	a811      	add	r0, sp, #68	; 0x44
    21e0:	47b0      	blx	r6
    put_sample(sample.z);
    21e2:	2304      	movs	r3, #4
    21e4:	5ef9      	ldrsh	r1, [r7, r3]
  sample_buf[s_sample_index++] = sample;
    21e6:	6822      	ldr	r2, [r4, #0]
    21e8:	1c53      	adds	r3, r2, #1
    21ea:	6023      	str	r3, [r4, #0]
    21ec:	0092      	lsls	r2, r2, #2
    21ee:	18a2      	adds	r2, r4, r2
    21f0:	6051      	str	r1, [r2, #4]
  if (s_sample_index >= SAMPLE_BUF_SIZE) {
    21f2:	4a42      	ldr	r2, [pc, #264]	; (22fc <main+0x284>)
    21f4:	4293      	cmp	r3, r2
    21f6:	dde8      	ble.n	21ca <main+0x152>
    s_sample_index %= SAMPLE_BUF_SIZE;
    21f8:	17da      	asrs	r2, r3, #31
    21fa:	0dd2      	lsrs	r2, r2, #23
    21fc:	189b      	adds	r3, r3, r2
    21fe:	05db      	lsls	r3, r3, #23
    2200:	0ddb      	lsrs	r3, r3, #23
    2202:	1a9b      	subs	r3, r3, r2
    2204:	464a      	mov	r2, r9
    2206:	6013      	str	r3, [r2, #0]
    2208:	e7df      	b.n	21ca <main+0x152>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    220a:	2108      	movs	r1, #8
    220c:	238c      	movs	r3, #140	; 0x8c
    220e:	005b      	lsls	r3, r3, #1
    2210:	22c0      	movs	r2, #192	; 0xc0
    2212:	05d2      	lsls	r2, r2, #23
    2214:	50d1      	str	r1, [r2, r3]

static void autocorrelate(correlation_t *corr) {
  set_test_pin(true);  // for scope timing

  // compute first point (makes inner loop more efficient)
  corr->dot_product = dot_product(MIN_OFFSET);
    2216:	200c      	movs	r0, #12
    2218:	4b39      	ldr	r3, [pc, #228]	; (2300 <main+0x288>)
    221a:	4798      	blx	r3
    221c:	0005      	movs	r5, r0
  corr->offset = MIN_OFFSET;
    221e:	230c      	movs	r3, #12
    2220:	9303      	str	r3, [sp, #12]

  // compute the rest of the points
  for (int offset=MIN_OFFSET+1; offset<WINDOW_SIZE; offset++) {
    2222:	240d      	movs	r4, #13
    int32_t dp = dot_product(offset);
    2224:	4e36      	ldr	r6, [pc, #216]	; (2300 <main+0x288>)
  for (int offset=MIN_OFFSET+1; offset<WINDOW_SIZE; offset++) {
    2226:	2780      	movs	r7, #128	; 0x80
    2228:	007f      	lsls	r7, r7, #1
    222a:	e002      	b.n	2232 <main+0x1ba>
    222c:	3401      	adds	r4, #1
    222e:	42bc      	cmp	r4, r7
    2230:	d006      	beq.n	2240 <main+0x1c8>
    int32_t dp = dot_product(offset);
    2232:	0020      	movs	r0, r4
    2234:	47b0      	blx	r6
    if (dp > corr->dot_product) {
    2236:	42a8      	cmp	r0, r5
    2238:	ddf8      	ble.n	222c <main+0x1b4>
      corr->dot_product = dp;
      corr->offset = offset;
    223a:	9403      	str	r4, [sp, #12]
      corr->dot_product = dp;
    223c:	0005      	movs	r5, r0
    223e:	e7f5      	b.n	222c <main+0x1b4>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2240:	2108      	movs	r1, #8
    2242:	238a      	movs	r3, #138	; 0x8a
    2244:	005b      	lsls	r3, r3, #1
    2246:	22c0      	movs	r2, #192	; 0xc0
    2248:	05d2      	lsls	r2, r2, #23
    224a:	50d1      	str	r1, [r2, r3]
    printf("%d %5ld %3d %ld\n", s_high_water, s_samples_read, corr.offset, corr.dot_product);
    224c:	4b28      	ldr	r3, [pc, #160]	; (22f0 <main+0x278>)
    224e:	689a      	ldr	r2, [r3, #8]
    2250:	7919      	ldrb	r1, [r3, #4]
    2252:	9500      	str	r5, [sp, #0]
    2254:	9b03      	ldr	r3, [sp, #12]
    2256:	482b      	ldr	r0, [pc, #172]	; (2304 <main+0x28c>)
    2258:	4c1a      	ldr	r4, [pc, #104]	; (22c4 <main+0x24c>)
    225a:	47a0      	blx	r4
  /* err = */ adxl345_available_samples(adxl345, &available);
    225c:	240f      	movs	r4, #15
    225e:	ab02      	add	r3, sp, #8
    2260:	469c      	mov	ip, r3
    2262:	4464      	add	r4, ip
    2264:	0021      	movs	r1, r4
    2266:	a811      	add	r0, sp, #68	; 0x44
    2268:	47d0      	blx	sl
  if (available > s_high_water) s_high_water = available;
    226a:	7823      	ldrb	r3, [r4, #0]
    226c:	4a20      	ldr	r2, [pc, #128]	; (22f0 <main+0x278>)
    226e:	7912      	ldrb	r2, [r2, #4]
    2270:	429a      	cmp	r2, r3
    2272:	d201      	bcs.n	2278 <main+0x200>
    2274:	4a1e      	ldr	r2, [pc, #120]	; (22f0 <main+0x278>)
    2276:	7113      	strb	r3, [r2, #4]
  s_samples_read += available;
    2278:	491d      	ldr	r1, [pc, #116]	; (22f0 <main+0x278>)
    227a:	688a      	ldr	r2, [r1, #8]
    227c:	18d2      	adds	r2, r2, r3
    227e:	608a      	str	r2, [r1, #8]
  for (int i = 0; i < available; i++) {
    2280:	2b00      	cmp	r3, #0
    2282:	ddc2      	ble.n	220a <main+0x192>
    2284:	2500      	movs	r5, #0
    /* err = */ adxl345_get_isample(adxl345, &sample);
    2286:	4e20      	ldr	r6, [pc, #128]	; (2308 <main+0x290>)
  sample_buf[s_sample_index++] = sample;
    2288:	4c1b      	ldr	r4, [pc, #108]	; (22f8 <main+0x280>)
    228a:	e7a6      	b.n	21da <main+0x162>
    228c:	0000030d 	.word	0x0000030d
    2290:	200012e0 	.word	0x200012e0
    2294:	00000b01 	.word	0x00000b01
    2298:	00000b29 	.word	0x00000b29
    229c:	00000b55 	.word	0x00000b55
    22a0:	00009ae0 	.word	0x00009ae0
    22a4:	00000c31 	.word	0x00000c31
    22a8:	00000b8d 	.word	0x00000b8d
    22ac:	00009b00 	.word	0x00009b00
    22b0:	00000bbd 	.word	0x00000bbd
    22b4:	00009b04 	.word	0x00009b04
    22b8:	200012f0 	.word	0x200012f0
    22bc:	00000281 	.word	0x00000281
    22c0:	00009b10 	.word	0x00009b10
    22c4:	00004381 	.word	0x00004381
    22c8:	0000011d 	.word	0x0000011d
    22cc:	00009b2c 	.word	0x00009b2c
    22d0:	000001ed 	.word	0x000001ed
    22d4:	00009b44 	.word	0x00009b44
    22d8:	00000145 	.word	0x00000145
    22dc:	00009b5c 	.word	0x00009b5c
    22e0:	00000195 	.word	0x00000195
    22e4:	00009b80 	.word	0x00009b80
    22e8:	000001bd 	.word	0x000001bd
    22ec:	00009ba4 	.word	0x00009ba4
    22f0:	2000124c 	.word	0x2000124c
    22f4:	0000021d 	.word	0x0000021d
    22f8:	20000a4c 	.word	0x20000a4c
    22fc:	000001ff 	.word	0x000001ff
    2300:	00002031 	.word	0x00002031
    2304:	00009bbc 	.word	0x00009bbc
    2308:	00000245 	.word	0x00000245

0000230c <touch_timer_handler>:
Input  : none
Output : none
Notes  :
============================================================================*/
void touch_timer_handler(void)
{
    230c:	b510      	push	{r4, lr}
	/* Count complete - Measure touch sensors */
	time_to_measure_touch_flag = 1u;
    230e:	2201      	movs	r2, #1
    2310:	4b02      	ldr	r3, [pc, #8]	; (231c <touch_timer_handler+0x10>)
    2312:	705a      	strb	r2, [r3, #1]
	qtm_update_qtlib_timer(DEF_TOUCH_MEASUREMENT_PERIOD_MS);
    2314:	2014      	movs	r0, #20
    2316:	4b02      	ldr	r3, [pc, #8]	; (2320 <touch_timer_handler+0x14>)
    2318:	4798      	blx	r3
}
    231a:	bd10      	pop	{r4, pc}
    231c:	20001258 	.word	0x20001258
    2320:	000024d1 	.word	0x000024d1

00002324 <Timer_task_cb>:

void Timer_task_cb(const struct timer_task *const timer_task)
{
    2324:	b510      	push	{r4, lr}
	touch_timer_handler();
    2326:	4b01      	ldr	r3, [pc, #4]	; (232c <Timer_task_cb+0x8>)
    2328:	4798      	blx	r3
}
    232a:	bd10      	pop	{r4, pc}
    232c:	0000230d 	.word	0x0000230d

00002330 <touch_timer_config>:

void touch_timer_config(void)
{
    2330:	b510      	push	{r4, lr}
	static struct timer_task Timer_task;
#if (KRONO_GESTURE_ENABLE == 1u)
	Timer_task.interval = 1;
#else
	Timer_task.interval = DEF_TOUCH_MEASUREMENT_PERIOD_MS;
    2332:	4908      	ldr	r1, [pc, #32]	; (2354 <touch_timer_config+0x24>)
    2334:	2314      	movs	r3, #20
    2336:	60cb      	str	r3, [r1, #12]
#endif
	Timer_task.cb   = Timer_task_cb;
    2338:	4b07      	ldr	r3, [pc, #28]	; (2358 <touch_timer_config+0x28>)
    233a:	610b      	str	r3, [r1, #16]
	Timer_task.mode = TIMER_TASK_REPEAT;
    233c:	2301      	movs	r3, #1
    233e:	750b      	strb	r3, [r1, #20]

	timer_add_task(&Timer, &Timer_task);
    2340:	3104      	adds	r1, #4
    2342:	4c06      	ldr	r4, [pc, #24]	; (235c <touch_timer_config+0x2c>)
    2344:	0020      	movs	r0, r4
    2346:	4b06      	ldr	r3, [pc, #24]	; (2360 <touch_timer_config+0x30>)
    2348:	4798      	blx	r3
	timer_start(&Timer);
    234a:	0020      	movs	r0, r4
    234c:	4b05      	ldr	r3, [pc, #20]	; (2364 <touch_timer_config+0x34>)
    234e:	4798      	blx	r3
}
    2350:	bd10      	pop	{r4, pc}
    2352:	46c0      	nop			; (mov r8, r8)
    2354:	20001258 	.word	0x20001258
    2358:	00002325 	.word	0x00002325
    235c:	200012c4 	.word	0x200012c4
    2360:	00000df5 	.word	0x00000df5
    2364:	00000db9 	.word	0x00000db9

00002368 <touch_init>:
{
    2368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	touch_timer_config();
    236a:	4b12      	ldr	r3, [pc, #72]	; (23b4 <touch_init+0x4c>)
    236c:	4798      	blx	r3
	qtm_ptc_init_acquisition_module(&qtlib_acq_set1);
    236e:	4812      	ldr	r0, [pc, #72]	; (23b8 <touch_init+0x50>)
    2370:	4b12      	ldr	r3, [pc, #72]	; (23bc <touch_init+0x54>)
    2372:	4798      	blx	r3
	qtm_ptc_qtlib_assign_signal_memory(&touch_acq_signals_raw[0]);
    2374:	4812      	ldr	r0, [pc, #72]	; (23c0 <touch_init+0x58>)
    2376:	4b13      	ldr	r3, [pc, #76]	; (23c4 <touch_init+0x5c>)
    2378:	4798      	blx	r3
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++)
    237a:	2400      	movs	r4, #0
		qtm_enable_sensor_node(&qtlib_acq_set1, sensor_nodes);
    237c:	4d0e      	ldr	r5, [pc, #56]	; (23b8 <touch_init+0x50>)
    237e:	4f12      	ldr	r7, [pc, #72]	; (23c8 <touch_init+0x60>)
		qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_nodes);
    2380:	4e12      	ldr	r6, [pc, #72]	; (23cc <touch_init+0x64>)
		qtm_enable_sensor_node(&qtlib_acq_set1, sensor_nodes);
    2382:	0021      	movs	r1, r4
    2384:	0028      	movs	r0, r5
    2386:	47b8      	blx	r7
		qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_nodes);
    2388:	0021      	movs	r1, r4
    238a:	0028      	movs	r0, r5
    238c:	47b0      	blx	r6
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++)
    238e:	3401      	adds	r4, #1
    2390:	b2a4      	uxth	r4, r4
    2392:	2c05      	cmp	r4, #5
    2394:	d1f5      	bne.n	2382 <touch_init+0x1a>
    2396:	4d0e      	ldr	r5, [pc, #56]	; (23d0 <touch_init+0x68>)
    2398:	2400      	movs	r4, #0
		qtm_init_sensor_key(&qtlib_key_set1, sensor_nodes, &ptc_qtlib_node_stat1[sensor_nodes]);
    239a:	4e07      	ldr	r6, [pc, #28]	; (23b8 <touch_init+0x50>)
    239c:	360c      	adds	r6, #12
    239e:	4f0d      	ldr	r7, [pc, #52]	; (23d4 <touch_init+0x6c>)
    23a0:	b2e1      	uxtb	r1, r4
    23a2:	002a      	movs	r2, r5
    23a4:	0030      	movs	r0, r6
    23a6:	47b8      	blx	r7
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++) {
    23a8:	3401      	adds	r4, #1
    23aa:	b2a4      	uxth	r4, r4
    23ac:	3506      	adds	r5, #6
    23ae:	2c05      	cmp	r4, #5
    23b0:	d1f6      	bne.n	23a0 <touch_init+0x38>
}
    23b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    23b4:	00002331 	.word	0x00002331
    23b8:	20000000 	.word	0x20000000
    23bc:	00002761 	.word	0x00002761
    23c0:	20001338 	.word	0x20001338
    23c4:	00002829 	.word	0x00002829
    23c8:	0000283d 	.word	0x0000283d
    23cc:	0000285d 	.word	0x0000285d
    23d0:	20001318 	.word	0x20001318
    23d4:	000024e1 	.word	0x000024e1

000023d8 <PTC_Handler>:
Input  : none
Output : none
Notes  : none
============================================================================*/
void PTC_Handler(void)
{
    23d8:	b510      	push	{r4, lr}
	qtm_ptc_clear_interrupt();
    23da:	4b02      	ldr	r3, [pc, #8]	; (23e4 <PTC_Handler+0xc>)
    23dc:	4798      	blx	r3
	qtm_saml22_ptc_handler_eoc();
    23de:	4b02      	ldr	r3, [pc, #8]	; (23e8 <PTC_Handler+0x10>)
    23e0:	4798      	blx	r3
}
    23e2:	bd10      	pop	{r4, pc}
    23e4:	000028ad 	.word	0x000028ad
    23e8:	000028d1 	.word	0x000028d1

000023ec <_read>:
#include <stdio.h>

int __attribute__((weak)) _read(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _read(int file, char *ptr, int len)
{
    23ec:	b510      	push	{r4, lr}
    23ee:	000b      	movs	r3, r1
	int n = 0;

	if (file != 0) {
    23f0:	2800      	cmp	r0, #0
    23f2:	d109      	bne.n	2408 <_read+0x1c>
		return -1;
	}

	n = stdio_io_read((uint8_t *)ptr, len);
    23f4:	0011      	movs	r1, r2
    23f6:	0018      	movs	r0, r3
    23f8:	4b05      	ldr	r3, [pc, #20]	; (2410 <_read+0x24>)
    23fa:	4798      	blx	r3
    23fc:	2800      	cmp	r0, #0
    23fe:	db00      	blt.n	2402 <_read+0x16>
	if (n < 0) {
		return -1;
	}

	return n;
}
    2400:	bd10      	pop	{r4, pc}
    2402:	2001      	movs	r0, #1
    2404:	4240      	negs	r0, r0
    2406:	e7fb      	b.n	2400 <_read+0x14>
		return -1;
    2408:	2001      	movs	r0, #1
    240a:	4240      	negs	r0, r0
    240c:	e7f8      	b.n	2400 <_read+0x14>
    240e:	46c0      	nop			; (mov r8, r8)
    2410:	00002469 	.word	0x00002469

00002414 <_write>:
#include <stdio.h>

int __attribute__((weak)) _write(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _write(int file, char *ptr, int len)
{
    2414:	b510      	push	{r4, lr}
    2416:	000b      	movs	r3, r1
	int n = 0;

	if ((file != 1) && (file != 2) && (file != 3)) {
    2418:	3801      	subs	r0, #1
    241a:	2802      	cmp	r0, #2
    241c:	d809      	bhi.n	2432 <_write+0x1e>
		return -1;
	}

	n = stdio_io_write((const uint8_t *)ptr, len);
    241e:	0011      	movs	r1, r2
    2420:	0018      	movs	r0, r3
    2422:	4b05      	ldr	r3, [pc, #20]	; (2438 <_write+0x24>)
    2424:	4798      	blx	r3
    2426:	2800      	cmp	r0, #0
    2428:	db00      	blt.n	242c <_write+0x18>
	if (n < 0) {
		return -1;
	}

	return n;
}
    242a:	bd10      	pop	{r4, pc}
    242c:	2001      	movs	r0, #1
    242e:	4240      	negs	r0, r0
    2430:	e7fb      	b.n	242a <_write+0x16>
		return -1;
    2432:	2001      	movs	r0, #1
    2434:	4240      	negs	r0, r0
    2436:	e7f8      	b.n	242a <_write+0x16>
    2438:	0000248d 	.word	0x0000248d

0000243c <stdio_io_init>:

/** IO descriptor for STDIO access. */
static struct io_descriptor *stdio_io = NULL;

void stdio_io_init(struct io_descriptor *io)
{
    243c:	b570      	push	{r4, r5, r6, lr}
    243e:	0006      	movs	r6, r0
#if defined(__GNUC__)
	/* Specify that stdout and stdin should not be buffered. */
	setbuf(stdout, NULL);
    2440:	4d06      	ldr	r5, [pc, #24]	; (245c <stdio_io_init+0x20>)
    2442:	682b      	ldr	r3, [r5, #0]
    2444:	6898      	ldr	r0, [r3, #8]
    2446:	2100      	movs	r1, #0
    2448:	4c05      	ldr	r4, [pc, #20]	; (2460 <stdio_io_init+0x24>)
    244a:	47a0      	blx	r4
	setbuf(stdin, NULL);
    244c:	682b      	ldr	r3, [r5, #0]
    244e:	6858      	ldr	r0, [r3, #4]
    2450:	2100      	movs	r1, #0
    2452:	47a0      	blx	r4
	 * and AVR GCC library:
	 * - printf() emits one character at a time.
	 * - getchar() requests only 1 byte to exit.
	 */
#endif
	stdio_io = io;
    2454:	4b03      	ldr	r3, [pc, #12]	; (2464 <stdio_io_init+0x28>)
    2456:	601e      	str	r6, [r3, #0]
}
    2458:	bd70      	pop	{r4, r5, r6, pc}
    245a:	46c0      	nop			; (mov r8, r8)
    245c:	2000007c 	.word	0x2000007c
    2460:	000043a5 	.word	0x000043a5
    2464:	20001270 	.word	0x20001270

00002468 <stdio_io_read>:
{
	stdio_io = io;
}

int32_t stdio_io_read(uint8_t *buf, const int32_t len)
{
    2468:	b510      	push	{r4, lr}
    246a:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    246c:	4b05      	ldr	r3, [pc, #20]	; (2484 <stdio_io_read+0x1c>)
    246e:	6818      	ldr	r0, [r3, #0]
    2470:	2800      	cmp	r0, #0
    2472:	d004      	beq.n	247e <stdio_io_read+0x16>
		return 0;
	}
	return io_read(stdio_io, buf, len);
    2474:	b28a      	uxth	r2, r1
    2476:	0021      	movs	r1, r4
    2478:	4b03      	ldr	r3, [pc, #12]	; (2488 <stdio_io_read+0x20>)
    247a:	4798      	blx	r3
}
    247c:	bd10      	pop	{r4, pc}
		return 0;
    247e:	2000      	movs	r0, #0
    2480:	e7fc      	b.n	247c <stdio_io_read+0x14>
    2482:	46c0      	nop			; (mov r8, r8)
    2484:	20001270 	.word	0x20001270
    2488:	00000a99 	.word	0x00000a99

0000248c <stdio_io_write>:

int32_t stdio_io_write(const uint8_t *buf, const int32_t len)
{
    248c:	b510      	push	{r4, lr}
    248e:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    2490:	4b05      	ldr	r3, [pc, #20]	; (24a8 <stdio_io_write+0x1c>)
    2492:	6818      	ldr	r0, [r3, #0]
    2494:	2800      	cmp	r0, #0
    2496:	d004      	beq.n	24a2 <stdio_io_write+0x16>
		return 0;
	}
	return io_write(stdio_io, buf, len);
    2498:	b28a      	uxth	r2, r1
    249a:	0021      	movs	r1, r4
    249c:	4b03      	ldr	r3, [pc, #12]	; (24ac <stdio_io_write+0x20>)
    249e:	4798      	blx	r3
}
    24a0:	bd10      	pop	{r4, pc}
		return 0;
    24a2:	2000      	movs	r0, #0
    24a4:	e7fc      	b.n	24a0 <stdio_io_write+0x14>
    24a6:	46c0      	nop			; (mov r8, r8)
    24a8:	20001270 	.word	0x20001270
    24ac:	00000a65 	.word	0x00000a65

000024b0 <stdio_redirect_init>:
	/* Print welcome message */
	printf("\r\nHello ATMEL World!\r\n");
}

void stdio_redirect_init(void)
{
    24b0:	b510      	push	{r4, lr}

	usart_sync_enable(&EDBG_0);
    24b2:	4c04      	ldr	r4, [pc, #16]	; (24c4 <stdio_redirect_init+0x14>)
    24b4:	0020      	movs	r0, r4
    24b6:	4b04      	ldr	r3, [pc, #16]	; (24c8 <stdio_redirect_init+0x18>)
    24b8:	4798      	blx	r3
	stdio_io_init(&EDBG_0.io);
    24ba:	0020      	movs	r0, r4
    24bc:	4b03      	ldr	r3, [pc, #12]	; (24cc <stdio_redirect_init+0x1c>)
    24be:	4798      	blx	r3
}
    24c0:	bd10      	pop	{r4, pc}
    24c2:	46c0      	nop			; (mov r8, r8)
    24c4:	200012e4 	.word	0x200012e4
    24c8:	00000fd1 	.word	0x00000fd1
    24cc:	0000243d 	.word	0x0000243d

000024d0 <qtm_update_qtlib_timer>:
    24d0:	4a02      	ldr	r2, [pc, #8]	; (24dc <qtm_update_qtlib_timer+0xc>)
    24d2:	8813      	ldrh	r3, [r2, #0]
    24d4:	18c0      	adds	r0, r0, r3
    24d6:	8010      	strh	r0, [r2, #0]
    24d8:	4770      	bx	lr
    24da:	46c0      	nop			; (mov r8, r8)
    24dc:	20001274 	.word	0x20001274

000024e0 <qtm_init_sensor_key>:
    24e0:	b510      	push	{r4, lr}
    24e2:	230b      	movs	r3, #11
    24e4:	2800      	cmp	r0, #0
    24e6:	d00b      	beq.n	2500 <qtm_init_sensor_key+0x20>
    24e8:	2a00      	cmp	r2, #0
    24ea:	d009      	beq.n	2500 <qtm_init_sensor_key+0x20>
    24ec:	3301      	adds	r3, #1
    24ee:	000c      	movs	r4, r1
    24f0:	435c      	muls	r4, r3
    24f2:	6881      	ldr	r1, [r0, #8]
    24f4:	3b0b      	subs	r3, #11
    24f6:	550b      	strb	r3, [r1, r4]
    24f8:	6883      	ldr	r3, [r0, #8]
    24fa:	1919      	adds	r1, r3, r4
    24fc:	2300      	movs	r3, #0
    24fe:	604a      	str	r2, [r1, #4]
    2500:	0018      	movs	r0, r3
    2502:	bc10      	pop	{r4}
    2504:	bc02      	pop	{r1}
    2506:	4708      	bx	r1

00002508 <pin_mode_analog>:
    2508:	b530      	push	{r4, r5, lr}
    250a:	2401      	movs	r4, #1
    250c:	084b      	lsrs	r3, r1, #1
    250e:	01c0      	lsls	r0, r0, #7
    2510:	4a0b      	ldr	r2, [pc, #44]	; (2540 <pin_mode_analog+0x38>)
    2512:	181b      	adds	r3, r3, r0
    2514:	189b      	adds	r3, r3, r2
    2516:	4221      	tst	r1, r4
    2518:	d004      	beq.n	2524 <pin_mode_analog+0x1c>
    251a:	220f      	movs	r2, #15
    251c:	781c      	ldrb	r4, [r3, #0]
    251e:	4022      	ands	r2, r4
    2520:	2410      	movs	r4, #16
    2522:	e002      	b.n	252a <pin_mode_analog+0x22>
    2524:	250f      	movs	r5, #15
    2526:	781a      	ldrb	r2, [r3, #0]
    2528:	43aa      	bics	r2, r5
    252a:	4322      	orrs	r2, r4
    252c:	701a      	strb	r2, [r3, #0]
    252e:	2201      	movs	r2, #1
    2530:	4b04      	ldr	r3, [pc, #16]	; (2544 <pin_mode_analog+0x3c>)
    2532:	1808      	adds	r0, r1, r0
    2534:	18c0      	adds	r0, r0, r3
    2536:	7803      	ldrb	r3, [r0, #0]
    2538:	4313      	orrs	r3, r2
    253a:	7003      	strb	r3, [r0, #0]
    253c:	bd30      	pop	{r4, r5, pc}
    253e:	46c0      	nop			; (mov r8, r8)
    2540:	41006030 	.word	0x41006030
    2544:	41006040 	.word	0x41006040

00002548 <sync_config>:
    2548:	4a02      	ldr	r2, [pc, #8]	; (2554 <sync_config+0xc>)
    254a:	8993      	ldrh	r3, [r2, #12]
    254c:	2b00      	cmp	r3, #0
    254e:	d1fc      	bne.n	254a <sync_config+0x2>
    2550:	4770      	bx	lr
    2552:	46c0      	nop			; (mov r8, r8)
    2554:	42003800 	.word	0x42003800

00002558 <select_next_channel_to_measure>:
    2558:	b5f0      	push	{r4, r5, r6, r7, lr}
    255a:	2406      	movs	r4, #6
    255c:	2501      	movs	r5, #1
    255e:	490c      	ldr	r1, [pc, #48]	; (2590 <select_next_channel_to_measure+0x38>)
    2560:	4a0c      	ldr	r2, [pc, #48]	; (2594 <select_next_channel_to_measure+0x3c>)
    2562:	6809      	ldr	r1, [r1, #0]
    2564:	8813      	ldrh	r3, [r2, #0]
    2566:	6808      	ldr	r0, [r1, #0]
    2568:	8800      	ldrh	r0, [r0, #0]
    256a:	4283      	cmp	r3, r0
    256c:	d20b      	bcs.n	2586 <select_next_channel_to_measure+0x2e>
    256e:	0026      	movs	r6, r4
    2570:	435e      	muls	r6, r3
    2572:	688f      	ldr	r7, [r1, #8]
    2574:	5df6      	ldrb	r6, [r6, r7]
    2576:	422e      	tst	r6, r5
    2578:	d102      	bne.n	2580 <select_next_channel_to_measure+0x28>
    257a:	3301      	adds	r3, #1
    257c:	b29b      	uxth	r3, r3
    257e:	e7f4      	b.n	256a <select_next_channel_to_measure+0x12>
    2580:	8013      	strh	r3, [r2, #0]
    2582:	2000      	movs	r0, #0
    2584:	e002      	b.n	258c <select_next_channel_to_measure+0x34>
    2586:	2300      	movs	r3, #0
    2588:	2001      	movs	r0, #1
    258a:	8013      	strh	r3, [r2, #0]
    258c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    258e:	46c0      	nop			; (mov r8, r8)
    2590:	20001384 	.word	0x20001384
    2594:	20001278 	.word	0x20001278

00002598 <qtm_measure_node>:
    2598:	b5f0      	push	{r4, r5, r6, r7, lr}
    259a:	4f67      	ldr	r7, [pc, #412]	; (2738 <qtm_measure_node+0x1a0>)
    259c:	b089      	sub	sp, #36	; 0x24
    259e:	9003      	str	r0, [sp, #12]
    25a0:	47b8      	blx	r7
    25a2:	2202      	movs	r2, #2
    25a4:	250c      	movs	r5, #12
    25a6:	4c65      	ldr	r4, [pc, #404]	; (273c <qtm_measure_node+0x1a4>)
    25a8:	8823      	ldrh	r3, [r4, #0]
    25aa:	4393      	bics	r3, r2
    25ac:	8023      	strh	r3, [r4, #0]
    25ae:	47b8      	blx	r7
    25b0:	9b03      	ldr	r3, [sp, #12]
    25b2:	4e63      	ldr	r6, [pc, #396]	; (2740 <qtm_measure_node+0x1a8>)
    25b4:	435d      	muls	r5, r3
    25b6:	6833      	ldr	r3, [r6, #0]
    25b8:	6c61      	ldr	r1, [r4, #68]	; 0x44
    25ba:	685b      	ldr	r3, [r3, #4]
    25bc:	195b      	adds	r3, r3, r5
    25be:	685b      	ldr	r3, [r3, #4]
    25c0:	021b      	lsls	r3, r3, #8
    25c2:	0a1a      	lsrs	r2, r3, #8
    25c4:	0e0b      	lsrs	r3, r1, #24
    25c6:	061b      	lsls	r3, r3, #24
    25c8:	4313      	orrs	r3, r2
    25ca:	6463      	str	r3, [r4, #68]	; 0x44
    25cc:	47b8      	blx	r7
    25ce:	6833      	ldr	r3, [r6, #0]
    25d0:	685b      	ldr	r3, [r3, #4]
    25d2:	595b      	ldr	r3, [r3, r5]
    25d4:	63e3      	str	r3, [r4, #60]	; 0x3c
    25d6:	47b8      	blx	r7
    25d8:	2306      	movs	r3, #6
    25da:	9a03      	ldr	r2, [sp, #12]
    25dc:	6831      	ldr	r1, [r6, #0]
    25de:	4353      	muls	r3, r2
    25e0:	688a      	ldr	r2, [r1, #8]
    25e2:	18d2      	adds	r2, r2, r3
    25e4:	8892      	ldrh	r2, [r2, #4]
    25e6:	64a2      	str	r2, [r4, #72]	; 0x48
    25e8:	9703      	str	r7, [sp, #12]
    25ea:	2702      	movs	r7, #2
    25ec:	688a      	ldr	r2, [r1, #8]
    25ee:	18d2      	adds	r2, r2, r3
    25f0:	7810      	ldrb	r0, [r2, #0]
    25f2:	4238      	tst	r0, r7
    25f4:	d001      	beq.n	25fa <qtm_measure_node+0x62>
    25f6:	2005      	movs	r0, #5
    25f8:	7010      	strb	r0, [r2, #0]
    25fa:	688a      	ldr	r2, [r1, #8]
    25fc:	5cd7      	ldrb	r7, [r2, r3]
    25fe:	9b03      	ldr	r3, [sp, #12]
    2600:	06ff      	lsls	r7, r7, #27
    2602:	0f7f      	lsrs	r7, r7, #29
    2604:	4798      	blx	r3
    2606:	2f00      	cmp	r7, #0
    2608:	d10a      	bne.n	2620 <qtm_measure_node+0x88>
    260a:	6833      	ldr	r3, [r6, #0]
    260c:	494d      	ldr	r1, [pc, #308]	; (2744 <qtm_measure_node+0x1ac>)
    260e:	685b      	ldr	r3, [r3, #4]
    2610:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    2612:	195b      	adds	r3, r3, r5
    2614:	7a9b      	ldrb	r3, [r3, #10]
    2616:	091b      	lsrs	r3, r3, #4
    2618:	18cb      	adds	r3, r1, r3
    261a:	7a1b      	ldrb	r3, [r3, #8]
    261c:	041b      	lsls	r3, r3, #16
    261e:	e002      	b.n	2626 <qtm_measure_node+0x8e>
    2620:	22fc      	movs	r2, #252	; 0xfc
    2622:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    2624:	0392      	lsls	r2, r2, #14
    2626:	4313      	orrs	r3, r2
    2628:	64a3      	str	r3, [r4, #72]	; 0x48
    262a:	9b03      	ldr	r3, [sp, #12]
    262c:	4798      	blx	r3
    262e:	6833      	ldr	r3, [r6, #0]
    2630:	6921      	ldr	r1, [r4, #16]
    2632:	685b      	ldr	r3, [r3, #4]
    2634:	4f41      	ldr	r7, [pc, #260]	; (273c <qtm_measure_node+0x1a4>)
    2636:	195b      	adds	r3, r3, r5
    2638:	7a5a      	ldrb	r2, [r3, #9]
    263a:	2307      	movs	r3, #7
    263c:	0912      	lsrs	r2, r2, #4
    263e:	401a      	ands	r2, r3
    2640:	4b41      	ldr	r3, [pc, #260]	; (2748 <qtm_measure_node+0x1b0>)
    2642:	0512      	lsls	r2, r2, #20
    2644:	400b      	ands	r3, r1
    2646:	4313      	orrs	r3, r2
    2648:	6123      	str	r3, [r4, #16]
    264a:	9b03      	ldr	r3, [sp, #12]
    264c:	4798      	blx	r3
    264e:	2203      	movs	r2, #3
    2650:	6833      	ldr	r3, [r6, #0]
    2652:	8821      	ldrh	r1, [r4, #0]
    2654:	685b      	ldr	r3, [r3, #4]
    2656:	195b      	adds	r3, r3, r5
    2658:	7a5b      	ldrb	r3, [r3, #9]
    265a:	401a      	ands	r2, r3
    265c:	4b3b      	ldr	r3, [pc, #236]	; (274c <qtm_measure_node+0x1b4>)
    265e:	0212      	lsls	r2, r2, #8
    2660:	400b      	ands	r3, r1
    2662:	4313      	orrs	r3, r2
    2664:	8023      	strh	r3, [r4, #0]
    2666:	9b03      	ldr	r3, [sp, #12]
    2668:	4798      	blx	r3
    266a:	2107      	movs	r1, #7
    266c:	6833      	ldr	r3, [r6, #0]
    266e:	685b      	ldr	r3, [r3, #4]
    2670:	195b      	adds	r3, r3, r5
    2672:	7ada      	ldrb	r2, [r3, #11]
    2674:	6923      	ldr	r3, [r4, #16]
    2676:	400a      	ands	r2, r1
    2678:	4935      	ldr	r1, [pc, #212]	; (2750 <qtm_measure_node+0x1b8>)
    267a:	0412      	lsls	r2, r2, #16
    267c:	400b      	ands	r3, r1
    267e:	4313      	orrs	r3, r2
    2680:	6123      	str	r3, [r4, #16]
    2682:	9b03      	ldr	r3, [sp, #12]
    2684:	4798      	blx	r3
    2686:	6833      	ldr	r3, [r6, #0]
    2688:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    268a:	685b      	ldr	r3, [r3, #4]
    268c:	195d      	adds	r5, r3, r5
    268e:	7a2b      	ldrb	r3, [r5, #8]
    2690:	2502      	movs	r5, #2
    2692:	061a      	lsls	r2, r3, #24
    2694:	020b      	lsls	r3, r1, #8
    2696:	0a1b      	lsrs	r3, r3, #8
    2698:	4313      	orrs	r3, r2
    269a:	64a3      	str	r3, [r4, #72]	; 0x48
    269c:	9b03      	ldr	r3, [sp, #12]
    269e:	4798      	blx	r3
    26a0:	8823      	ldrh	r3, [r4, #0]
    26a2:	432b      	orrs	r3, r5
    26a4:	8023      	strh	r3, [r4, #0]
    26a6:	4b2b      	ldr	r3, [pc, #172]	; (2754 <qtm_measure_node+0x1bc>)
    26a8:	685e      	ldr	r6, [r3, #4]
    26aa:	2e00      	cmp	r6, #0
    26ac:	d03b      	beq.n	2726 <qtm_measure_node+0x18e>
    26ae:	2401      	movs	r4, #1
    26b0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    26b2:	0e1b      	lsrs	r3, r3, #24
    26b4:	9304      	str	r3, [sp, #16]
    26b6:	693b      	ldr	r3, [r7, #16]
    26b8:	051b      	lsls	r3, r3, #20
    26ba:	0f1b      	lsrs	r3, r3, #28
    26bc:	9305      	str	r3, [sp, #20]
    26be:	883b      	ldrh	r3, [r7, #0]
    26c0:	059b      	lsls	r3, r3, #22
    26c2:	0f9b      	lsrs	r3, r3, #30
    26c4:	9306      	str	r3, [sp, #24]
    26c6:	9b03      	ldr	r3, [sp, #12]
    26c8:	4798      	blx	r3
    26ca:	883b      	ldrh	r3, [r7, #0]
    26cc:	43ab      	bics	r3, r5
    26ce:	803b      	strh	r3, [r7, #0]
    26d0:	9b03      	ldr	r3, [sp, #12]
    26d2:	4798      	blx	r3
    26d4:	793b      	ldrb	r3, [r7, #4]
    26d6:	4323      	orrs	r3, r4
    26d8:	713b      	strb	r3, [r7, #4]
    26da:	9b03      	ldr	r3, [sp, #12]
    26dc:	4798      	blx	r3
    26de:	793b      	ldrb	r3, [r7, #4]
    26e0:	432b      	orrs	r3, r5
    26e2:	713b      	strb	r3, [r7, #4]
    26e4:	9b03      	ldr	r3, [sp, #12]
    26e6:	4798      	blx	r3
    26e8:	2108      	movs	r1, #8
    26ea:	693b      	ldr	r3, [r7, #16]
    26ec:	9307      	str	r3, [sp, #28]
    26ee:	4b1a      	ldr	r3, [pc, #104]	; (2758 <qtm_measure_node+0x1c0>)
    26f0:	681a      	ldr	r2, [r3, #0]
    26f2:	7813      	ldrb	r3, [r2, #0]
    26f4:	430b      	orrs	r3, r1
    26f6:	7013      	strb	r3, [r2, #0]
    26f8:	9b03      	ldr	r3, [sp, #12]
    26fa:	4798      	blx	r3
    26fc:	693b      	ldr	r3, [r7, #16]
    26fe:	4a14      	ldr	r2, [pc, #80]	; (2750 <qtm_measure_node+0x1b8>)
    2700:	4013      	ands	r3, r2
    2702:	613b      	str	r3, [r7, #16]
    2704:	9b07      	ldr	r3, [sp, #28]
    2706:	9a06      	ldr	r2, [sp, #24]
    2708:	9905      	ldr	r1, [sp, #20]
    270a:	9804      	ldr	r0, [sp, #16]
    270c:	9300      	str	r3, [sp, #0]
    270e:	4b13      	ldr	r3, [pc, #76]	; (275c <qtm_measure_node+0x1c4>)
    2710:	47b0      	blx	r6
    2712:	9b03      	ldr	r3, [sp, #12]
    2714:	4798      	blx	r3
    2716:	883b      	ldrh	r3, [r7, #0]
    2718:	431d      	orrs	r5, r3
    271a:	803d      	strh	r5, [r7, #0]
    271c:	9b03      	ldr	r3, [sp, #12]
    271e:	4798      	blx	r3
    2720:	7f3b      	ldrb	r3, [r7, #28]
    2722:	4323      	orrs	r3, r4
    2724:	e004      	b.n	2730 <qtm_measure_node+0x198>
    2726:	9b03      	ldr	r3, [sp, #12]
    2728:	4798      	blx	r3
    272a:	2201      	movs	r2, #1
    272c:	7f3b      	ldrb	r3, [r7, #28]
    272e:	4313      	orrs	r3, r2
    2730:	773b      	strb	r3, [r7, #28]
    2732:	b009      	add	sp, #36	; 0x24
    2734:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2736:	46c0      	nop			; (mov r8, r8)
    2738:	00002549 	.word	0x00002549
    273c:	42003800 	.word	0x42003800
    2740:	20001384 	.word	0x20001384
    2744:	00009bce 	.word	0x00009bce
    2748:	ff8fffff 	.word	0xff8fffff
    274c:	fffffcff 	.word	0xfffffcff
    2750:	fff8ffff 	.word	0xfff8ffff
    2754:	20001278 	.word	0x20001278
    2758:	20001380 	.word	0x20001380
    275c:	42003810 	.word	0x42003810

00002760 <qtm_ptc_init_acquisition_module>:
    2760:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    2762:	0001      	movs	r1, r0
    2764:	200b      	movs	r0, #11
    2766:	2900      	cmp	r1, #0
    2768:	d053      	beq.n	2812 <qtm_ptc_init_acquisition_module+0xb2>
    276a:	680b      	ldr	r3, [r1, #0]
    276c:	240c      	movs	r4, #12
    276e:	8818      	ldrh	r0, [r3, #0]
    2770:	2300      	movs	r3, #0
    2772:	001d      	movs	r5, r3
    2774:	001f      	movs	r7, r3
    2776:	b29a      	uxth	r2, r3
    2778:	4290      	cmp	r0, r2
    277a:	d909      	bls.n	2790 <qtm_ptc_init_acquisition_module+0x30>
    277c:	0022      	movs	r2, r4
    277e:	435a      	muls	r2, r3
    2780:	684e      	ldr	r6, [r1, #4]
    2782:	3301      	adds	r3, #1
    2784:	18b2      	adds	r2, r6, r2
    2786:	6816      	ldr	r6, [r2, #0]
    2788:	6852      	ldr	r2, [r2, #4]
    278a:	4337      	orrs	r7, r6
    278c:	4315      	orrs	r5, r2
    278e:	e7f2      	b.n	2776 <qtm_ptc_init_acquisition_module+0x16>
    2790:	2002      	movs	r0, #2
    2792:	2d00      	cmp	r5, #0
    2794:	d03d      	beq.n	2812 <qtm_ptc_init_acquisition_module+0xb2>
    2796:	2400      	movs	r4, #0
    2798:	2601      	movs	r6, #1
    279a:	043b      	lsls	r3, r7, #16
    279c:	432b      	orrs	r3, r5
    279e:	9301      	str	r3, [sp, #4]
    27a0:	9b01      	ldr	r3, [sp, #4]
    27a2:	40e3      	lsrs	r3, r4
    27a4:	4233      	tst	r3, r6
    27a6:	d010      	beq.n	27ca <qtm_ptc_init_acquisition_module+0x6a>
    27a8:	4b1a      	ldr	r3, [pc, #104]	; (2814 <qtm_ptc_init_acquisition_module+0xb4>)
    27aa:	4a1b      	ldr	r2, [pc, #108]	; (2818 <qtm_ptc_init_acquisition_module+0xb8>)
    27ac:	330e      	adds	r3, #14
    27ae:	5ce3      	ldrb	r3, [r4, r3]
    27b0:	2000      	movs	r0, #0
    27b2:	1e19      	subs	r1, r3, #0
    27b4:	291f      	cmp	r1, #31
    27b6:	d907      	bls.n	27c8 <qtm_ptc_init_acquisition_module+0x68>
    27b8:	3920      	subs	r1, #32
    27ba:	b2c9      	uxtb	r1, r1
    27bc:	2001      	movs	r0, #1
    27be:	291f      	cmp	r1, #31
    27c0:	d902      	bls.n	27c8 <qtm_ptc_init_acquisition_module+0x68>
    27c2:	2002      	movs	r0, #2
    27c4:	3b40      	subs	r3, #64	; 0x40
    27c6:	b2d9      	uxtb	r1, r3
    27c8:	4790      	blx	r2
    27ca:	3401      	adds	r4, #1
    27cc:	2c20      	cmp	r4, #32
    27ce:	d1e7      	bne.n	27a0 <qtm_ptc_init_acquisition_module+0x40>
    27d0:	4e12      	ldr	r6, [pc, #72]	; (281c <qtm_ptc_init_acquisition_module+0xbc>)
    27d2:	47b0      	blx	r6
    27d4:	2300      	movs	r3, #0
    27d6:	4c12      	ldr	r4, [pc, #72]	; (2820 <qtm_ptc_init_acquisition_module+0xc0>)
    27d8:	8023      	strh	r3, [r4, #0]
    27da:	4b12      	ldr	r3, [pc, #72]	; (2824 <qtm_ptc_init_acquisition_module+0xc4>)
    27dc:	7a1b      	ldrb	r3, [r3, #8]
    27de:	9301      	str	r3, [sp, #4]
    27e0:	2b00      	cmp	r3, #0
    27e2:	d10d      	bne.n	2800 <qtm_ptc_init_acquisition_module+0xa0>
    27e4:	47b0      	blx	r6
    27e6:	9b01      	ldr	r3, [sp, #4]
    27e8:	61a3      	str	r3, [r4, #24]
    27ea:	69a3      	ldr	r3, [r4, #24]
    27ec:	431f      	orrs	r7, r3
    27ee:	61a7      	str	r7, [r4, #24]
    27f0:	47b0      	blx	r6
    27f2:	69a3      	ldr	r3, [r4, #24]
    27f4:	4a0b      	ldr	r2, [pc, #44]	; (2824 <qtm_ptc_init_acquisition_module+0xc4>)
    27f6:	431d      	orrs	r5, r3
    27f8:	2301      	movs	r3, #1
    27fa:	61a5      	str	r5, [r4, #24]
    27fc:	7213      	strb	r3, [r2, #8]
    27fe:	e007      	b.n	2810 <qtm_ptc_init_acquisition_module+0xb0>
    2800:	47b0      	blx	r6
    2802:	69a3      	ldr	r3, [r4, #24]
    2804:	431f      	orrs	r7, r3
    2806:	61a7      	str	r7, [r4, #24]
    2808:	47b0      	blx	r6
    280a:	69a3      	ldr	r3, [r4, #24]
    280c:	431d      	orrs	r5, r3
    280e:	61a5      	str	r5, [r4, #24]
    2810:	2000      	movs	r0, #0
    2812:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    2814:	00009bce 	.word	0x00009bce
    2818:	00002509 	.word	0x00002509
    281c:	00002549 	.word	0x00002549
    2820:	42003800 	.word	0x42003800
    2824:	20001278 	.word	0x20001278

00002828 <qtm_ptc_qtlib_assign_signal_memory>:
    2828:	230b      	movs	r3, #11
    282a:	2800      	cmp	r0, #0
    282c:	d002      	beq.n	2834 <qtm_ptc_qtlib_assign_signal_memory+0xc>
    282e:	4b02      	ldr	r3, [pc, #8]	; (2838 <qtm_ptc_qtlib_assign_signal_memory+0x10>)
    2830:	6018      	str	r0, [r3, #0]
    2832:	2300      	movs	r3, #0
    2834:	0018      	movs	r0, r3
    2836:	4770      	bx	lr
    2838:	20001388 	.word	0x20001388

0000283c <qtm_enable_sensor_node>:
    283c:	230b      	movs	r3, #11
    283e:	2800      	cmp	r0, #0
    2840:	d00a      	beq.n	2858 <qtm_enable_sensor_node+0x1c>
    2842:	6803      	ldr	r3, [r0, #0]
    2844:	881a      	ldrh	r2, [r3, #0]
    2846:	2302      	movs	r3, #2
    2848:	428a      	cmp	r2, r1
    284a:	d305      	bcc.n	2858 <qtm_enable_sensor_node+0x1c>
    284c:	3304      	adds	r3, #4
    284e:	4359      	muls	r1, r3
    2850:	6882      	ldr	r2, [r0, #8]
    2852:	3b05      	subs	r3, #5
    2854:	548b      	strb	r3, [r1, r2]
    2856:	2300      	movs	r3, #0
    2858:	0018      	movs	r0, r3
    285a:	4770      	bx	lr

0000285c <qtm_calibrate_sensor_node>:
    285c:	0002      	movs	r2, r0
    285e:	b510      	push	{r4, lr}
    2860:	200b      	movs	r0, #11
    2862:	2a00      	cmp	r2, #0
    2864:	d01f      	beq.n	28a6 <qtm_calibrate_sensor_node+0x4a>
    2866:	6813      	ldr	r3, [r2, #0]
    2868:	3809      	subs	r0, #9
    286a:	881c      	ldrh	r4, [r3, #0]
    286c:	428c      	cmp	r4, r1
    286e:	d31a      	bcc.n	28a6 <qtm_calibrate_sensor_node+0x4a>
    2870:	789b      	ldrb	r3, [r3, #2]
    2872:	6892      	ldr	r2, [r2, #8]
    2874:	2b40      	cmp	r3, #64	; 0x40
    2876:	d105      	bne.n	2884 <qtm_calibrate_sensor_node+0x28>
    2878:	208d      	movs	r0, #141	; 0x8d
    287a:	3b3a      	subs	r3, #58	; 0x3a
    287c:	434b      	muls	r3, r1
    287e:	0080      	lsls	r0, r0, #2
    2880:	18d3      	adds	r3, r2, r3
    2882:	e007      	b.n	2894 <qtm_calibrate_sensor_node+0x38>
    2884:	3b80      	subs	r3, #128	; 0x80
    2886:	b2db      	uxtb	r3, r3
    2888:	2b01      	cmp	r3, #1
    288a:	d805      	bhi.n	2898 <qtm_calibrate_sensor_node+0x3c>
    288c:	2306      	movs	r3, #6
    288e:	434b      	muls	r3, r1
    2890:	4805      	ldr	r0, [pc, #20]	; (28a8 <qtm_calibrate_sensor_node+0x4c>)
    2892:	18d3      	adds	r3, r2, r3
    2894:	8098      	strh	r0, [r3, #4]
    2896:	2000      	movs	r0, #0
    2898:	2306      	movs	r3, #6
    289a:	4359      	muls	r1, r3
    289c:	1851      	adds	r1, r2, r1
    289e:	2202      	movs	r2, #2
    28a0:	780b      	ldrb	r3, [r1, #0]
    28a2:	4313      	orrs	r3, r2
    28a4:	700b      	strb	r3, [r1, #0]
    28a6:	bd10      	pop	{r4, pc}
    28a8:	00000567 	.word	0x00000567

000028ac <qtm_ptc_clear_interrupt>:
    28ac:	2002      	movs	r0, #2
    28ae:	4b07      	ldr	r3, [pc, #28]	; (28cc <qtm_ptc_clear_interrupt+0x20>)
    28b0:	7a9a      	ldrb	r2, [r3, #10]
    28b2:	b2d2      	uxtb	r2, r2
    28b4:	4202      	tst	r2, r0
    28b6:	d002      	beq.n	28be <qtm_ptc_clear_interrupt+0x12>
    28b8:	7a99      	ldrb	r1, [r3, #10]
    28ba:	4301      	orrs	r1, r0
    28bc:	7299      	strb	r1, [r3, #10]
    28be:	2101      	movs	r1, #1
    28c0:	420a      	tst	r2, r1
    28c2:	d002      	beq.n	28ca <qtm_ptc_clear_interrupt+0x1e>
    28c4:	7a9a      	ldrb	r2, [r3, #10]
    28c6:	430a      	orrs	r2, r1
    28c8:	729a      	strb	r2, [r3, #10]
    28ca:	4770      	bx	lr
    28cc:	42003800 	.word	0x42003800

000028d0 <qtm_saml22_ptc_handler_eoc>:
    28d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    28d2:	4b23      	ldr	r3, [pc, #140]	; (2960 <qtm_saml22_ptc_handler_eoc+0x90>)
    28d4:	4798      	blx	r3
    28d6:	2102      	movs	r1, #2
    28d8:	4a22      	ldr	r2, [pc, #136]	; (2964 <qtm_saml22_ptc_handler_eoc+0x94>)
    28da:	8813      	ldrh	r3, [r2, #0]
    28dc:	438b      	bics	r3, r1
    28de:	8013      	strh	r3, [r2, #0]
    28e0:	4b21      	ldr	r3, [pc, #132]	; (2968 <qtm_saml22_ptc_handler_eoc+0x98>)
    28e2:	4798      	blx	r3
    28e4:	4b21      	ldr	r3, [pc, #132]	; (296c <qtm_saml22_ptc_handler_eoc+0x9c>)
    28e6:	4c22      	ldr	r4, [pc, #136]	; (2970 <qtm_saml22_ptc_handler_eoc+0xa0>)
    28e8:	4a22      	ldr	r2, [pc, #136]	; (2974 <qtm_saml22_ptc_handler_eoc+0xa4>)
    28ea:	8819      	ldrh	r1, [r3, #0]
    28ec:	8818      	ldrh	r0, [r3, #0]
    28ee:	8823      	ldrh	r3, [r4, #0]
    28f0:	6812      	ldr	r2, [r2, #0]
    28f2:	005b      	lsls	r3, r3, #1
    28f4:	52d0      	strh	r0, [r2, r3]
    28f6:	4b20      	ldr	r3, [pc, #128]	; (2978 <qtm_saml22_ptc_handler_eoc+0xa8>)
    28f8:	b289      	uxth	r1, r1
    28fa:	781b      	ldrb	r3, [r3, #0]
    28fc:	0020      	movs	r0, r4
    28fe:	2b01      	cmp	r3, #1
    2900:	d002      	beq.n	2908 <qtm_saml22_ptc_handler_eoc+0x38>
    2902:	2b02      	cmp	r3, #2
    2904:	d00f      	beq.n	2926 <qtm_saml22_ptc_handler_eoc+0x56>
    2906:	e029      	b.n	295c <qtm_saml22_ptc_handler_eoc+0x8c>
    2908:	8823      	ldrh	r3, [r4, #0]
    290a:	3301      	adds	r3, #1
    290c:	8023      	strh	r3, [r4, #0]
    290e:	4b1b      	ldr	r3, [pc, #108]	; (297c <qtm_saml22_ptc_handler_eoc+0xac>)
    2910:	4798      	blx	r3
    2912:	2800      	cmp	r0, #0
    2914:	d105      	bne.n	2922 <qtm_saml22_ptc_handler_eoc+0x52>
    2916:	4b1a      	ldr	r3, [pc, #104]	; (2980 <qtm_saml22_ptc_handler_eoc+0xb0>)
    2918:	8820      	ldrh	r0, [r4, #0]
    291a:	4798      	blx	r3
    291c:	2304      	movs	r3, #4
    291e:	7223      	strb	r3, [r4, #8]
    2920:	e01c      	b.n	295c <qtm_saml22_ptc_handler_eoc+0x8c>
    2922:	68e3      	ldr	r3, [r4, #12]
    2924:	e019      	b.n	295a <qtm_saml22_ptc_handler_eoc+0x8a>
    2926:	4b17      	ldr	r3, [pc, #92]	; (2984 <qtm_saml22_ptc_handler_eoc+0xb4>)
    2928:	8824      	ldrh	r4, [r4, #0]
    292a:	681d      	ldr	r5, [r3, #0]
    292c:	230c      	movs	r3, #12
    292e:	4363      	muls	r3, r4
    2930:	686a      	ldr	r2, [r5, #4]
    2932:	2700      	movs	r7, #0
    2934:	18d3      	adds	r3, r2, r3
    2936:	220f      	movs	r2, #15
    2938:	7a9e      	ldrb	r6, [r3, #10]
    293a:	4016      	ands	r6, r2
    293c:	7ada      	ldrb	r2, [r3, #11]
    293e:	4296      	cmp	r6, r2
    2940:	d201      	bcs.n	2946 <qtm_saml22_ptc_handler_eoc+0x76>
    2942:	1b92      	subs	r2, r2, r6
    2944:	b2d7      	uxtb	r7, r2
    2946:	2206      	movs	r2, #6
    2948:	0013      	movs	r3, r2
    294a:	40f9      	lsrs	r1, r7
    294c:	4363      	muls	r3, r4
    294e:	68ad      	ldr	r5, [r5, #8]
    2950:	18eb      	adds	r3, r5, r3
    2952:	8059      	strh	r1, [r3, #2]
    2954:	2302      	movs	r3, #2
    2956:	7203      	strb	r3, [r0, #8]
    2958:	6903      	ldr	r3, [r0, #16]
    295a:	4798      	blx	r3
    295c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    295e:	46c0      	nop			; (mov r8, r8)
    2960:	00002549 	.word	0x00002549
    2964:	42003800 	.word	0x42003800
    2968:	000028ad 	.word	0x000028ad
    296c:	42003858 	.word	0x42003858
    2970:	20001278 	.word	0x20001278
    2974:	20001388 	.word	0x20001388
    2978:	2000007a 	.word	0x2000007a
    297c:	00002559 	.word	0x00002559
    2980:	00002599 	.word	0x00002599
    2984:	20001384 	.word	0x20001384

00002988 <__udivsi3>:
    2988:	2200      	movs	r2, #0
    298a:	0843      	lsrs	r3, r0, #1
    298c:	428b      	cmp	r3, r1
    298e:	d374      	bcc.n	2a7a <__udivsi3+0xf2>
    2990:	0903      	lsrs	r3, r0, #4
    2992:	428b      	cmp	r3, r1
    2994:	d35f      	bcc.n	2a56 <__udivsi3+0xce>
    2996:	0a03      	lsrs	r3, r0, #8
    2998:	428b      	cmp	r3, r1
    299a:	d344      	bcc.n	2a26 <__udivsi3+0x9e>
    299c:	0b03      	lsrs	r3, r0, #12
    299e:	428b      	cmp	r3, r1
    29a0:	d328      	bcc.n	29f4 <__udivsi3+0x6c>
    29a2:	0c03      	lsrs	r3, r0, #16
    29a4:	428b      	cmp	r3, r1
    29a6:	d30d      	bcc.n	29c4 <__udivsi3+0x3c>
    29a8:	22ff      	movs	r2, #255	; 0xff
    29aa:	0209      	lsls	r1, r1, #8
    29ac:	ba12      	rev	r2, r2
    29ae:	0c03      	lsrs	r3, r0, #16
    29b0:	428b      	cmp	r3, r1
    29b2:	d302      	bcc.n	29ba <__udivsi3+0x32>
    29b4:	1212      	asrs	r2, r2, #8
    29b6:	0209      	lsls	r1, r1, #8
    29b8:	d065      	beq.n	2a86 <__udivsi3+0xfe>
    29ba:	0b03      	lsrs	r3, r0, #12
    29bc:	428b      	cmp	r3, r1
    29be:	d319      	bcc.n	29f4 <__udivsi3+0x6c>
    29c0:	e000      	b.n	29c4 <__udivsi3+0x3c>
    29c2:	0a09      	lsrs	r1, r1, #8
    29c4:	0bc3      	lsrs	r3, r0, #15
    29c6:	428b      	cmp	r3, r1
    29c8:	d301      	bcc.n	29ce <__udivsi3+0x46>
    29ca:	03cb      	lsls	r3, r1, #15
    29cc:	1ac0      	subs	r0, r0, r3
    29ce:	4152      	adcs	r2, r2
    29d0:	0b83      	lsrs	r3, r0, #14
    29d2:	428b      	cmp	r3, r1
    29d4:	d301      	bcc.n	29da <__udivsi3+0x52>
    29d6:	038b      	lsls	r3, r1, #14
    29d8:	1ac0      	subs	r0, r0, r3
    29da:	4152      	adcs	r2, r2
    29dc:	0b43      	lsrs	r3, r0, #13
    29de:	428b      	cmp	r3, r1
    29e0:	d301      	bcc.n	29e6 <__udivsi3+0x5e>
    29e2:	034b      	lsls	r3, r1, #13
    29e4:	1ac0      	subs	r0, r0, r3
    29e6:	4152      	adcs	r2, r2
    29e8:	0b03      	lsrs	r3, r0, #12
    29ea:	428b      	cmp	r3, r1
    29ec:	d301      	bcc.n	29f2 <__udivsi3+0x6a>
    29ee:	030b      	lsls	r3, r1, #12
    29f0:	1ac0      	subs	r0, r0, r3
    29f2:	4152      	adcs	r2, r2
    29f4:	0ac3      	lsrs	r3, r0, #11
    29f6:	428b      	cmp	r3, r1
    29f8:	d301      	bcc.n	29fe <__udivsi3+0x76>
    29fa:	02cb      	lsls	r3, r1, #11
    29fc:	1ac0      	subs	r0, r0, r3
    29fe:	4152      	adcs	r2, r2
    2a00:	0a83      	lsrs	r3, r0, #10
    2a02:	428b      	cmp	r3, r1
    2a04:	d301      	bcc.n	2a0a <__udivsi3+0x82>
    2a06:	028b      	lsls	r3, r1, #10
    2a08:	1ac0      	subs	r0, r0, r3
    2a0a:	4152      	adcs	r2, r2
    2a0c:	0a43      	lsrs	r3, r0, #9
    2a0e:	428b      	cmp	r3, r1
    2a10:	d301      	bcc.n	2a16 <__udivsi3+0x8e>
    2a12:	024b      	lsls	r3, r1, #9
    2a14:	1ac0      	subs	r0, r0, r3
    2a16:	4152      	adcs	r2, r2
    2a18:	0a03      	lsrs	r3, r0, #8
    2a1a:	428b      	cmp	r3, r1
    2a1c:	d301      	bcc.n	2a22 <__udivsi3+0x9a>
    2a1e:	020b      	lsls	r3, r1, #8
    2a20:	1ac0      	subs	r0, r0, r3
    2a22:	4152      	adcs	r2, r2
    2a24:	d2cd      	bcs.n	29c2 <__udivsi3+0x3a>
    2a26:	09c3      	lsrs	r3, r0, #7
    2a28:	428b      	cmp	r3, r1
    2a2a:	d301      	bcc.n	2a30 <__udivsi3+0xa8>
    2a2c:	01cb      	lsls	r3, r1, #7
    2a2e:	1ac0      	subs	r0, r0, r3
    2a30:	4152      	adcs	r2, r2
    2a32:	0983      	lsrs	r3, r0, #6
    2a34:	428b      	cmp	r3, r1
    2a36:	d301      	bcc.n	2a3c <__udivsi3+0xb4>
    2a38:	018b      	lsls	r3, r1, #6
    2a3a:	1ac0      	subs	r0, r0, r3
    2a3c:	4152      	adcs	r2, r2
    2a3e:	0943      	lsrs	r3, r0, #5
    2a40:	428b      	cmp	r3, r1
    2a42:	d301      	bcc.n	2a48 <__udivsi3+0xc0>
    2a44:	014b      	lsls	r3, r1, #5
    2a46:	1ac0      	subs	r0, r0, r3
    2a48:	4152      	adcs	r2, r2
    2a4a:	0903      	lsrs	r3, r0, #4
    2a4c:	428b      	cmp	r3, r1
    2a4e:	d301      	bcc.n	2a54 <__udivsi3+0xcc>
    2a50:	010b      	lsls	r3, r1, #4
    2a52:	1ac0      	subs	r0, r0, r3
    2a54:	4152      	adcs	r2, r2
    2a56:	08c3      	lsrs	r3, r0, #3
    2a58:	428b      	cmp	r3, r1
    2a5a:	d301      	bcc.n	2a60 <__udivsi3+0xd8>
    2a5c:	00cb      	lsls	r3, r1, #3
    2a5e:	1ac0      	subs	r0, r0, r3
    2a60:	4152      	adcs	r2, r2
    2a62:	0883      	lsrs	r3, r0, #2
    2a64:	428b      	cmp	r3, r1
    2a66:	d301      	bcc.n	2a6c <__udivsi3+0xe4>
    2a68:	008b      	lsls	r3, r1, #2
    2a6a:	1ac0      	subs	r0, r0, r3
    2a6c:	4152      	adcs	r2, r2
    2a6e:	0843      	lsrs	r3, r0, #1
    2a70:	428b      	cmp	r3, r1
    2a72:	d301      	bcc.n	2a78 <__udivsi3+0xf0>
    2a74:	004b      	lsls	r3, r1, #1
    2a76:	1ac0      	subs	r0, r0, r3
    2a78:	4152      	adcs	r2, r2
    2a7a:	1a41      	subs	r1, r0, r1
    2a7c:	d200      	bcs.n	2a80 <__udivsi3+0xf8>
    2a7e:	4601      	mov	r1, r0
    2a80:	4152      	adcs	r2, r2
    2a82:	4610      	mov	r0, r2
    2a84:	4770      	bx	lr
    2a86:	e7ff      	b.n	2a88 <__udivsi3+0x100>
    2a88:	b501      	push	{r0, lr}
    2a8a:	2000      	movs	r0, #0
    2a8c:	f000 f806 	bl	2a9c <__aeabi_idiv0>
    2a90:	bd02      	pop	{r1, pc}
    2a92:	46c0      	nop			; (mov r8, r8)

00002a94 <__aeabi_uidivmod>:
    2a94:	2900      	cmp	r1, #0
    2a96:	d0f7      	beq.n	2a88 <__udivsi3+0x100>
    2a98:	e776      	b.n	2988 <__udivsi3>
    2a9a:	4770      	bx	lr

00002a9c <__aeabi_idiv0>:
    2a9c:	4770      	bx	lr
    2a9e:	46c0      	nop			; (mov r8, r8)

00002aa0 <__aeabi_uldivmod>:
    2aa0:	2b00      	cmp	r3, #0
    2aa2:	d111      	bne.n	2ac8 <__aeabi_uldivmod+0x28>
    2aa4:	2a00      	cmp	r2, #0
    2aa6:	d10f      	bne.n	2ac8 <__aeabi_uldivmod+0x28>
    2aa8:	2900      	cmp	r1, #0
    2aaa:	d100      	bne.n	2aae <__aeabi_uldivmod+0xe>
    2aac:	2800      	cmp	r0, #0
    2aae:	d002      	beq.n	2ab6 <__aeabi_uldivmod+0x16>
    2ab0:	2100      	movs	r1, #0
    2ab2:	43c9      	mvns	r1, r1
    2ab4:	1c08      	adds	r0, r1, #0
    2ab6:	b407      	push	{r0, r1, r2}
    2ab8:	4802      	ldr	r0, [pc, #8]	; (2ac4 <__aeabi_uldivmod+0x24>)
    2aba:	a102      	add	r1, pc, #8	; (adr r1, 2ac4 <__aeabi_uldivmod+0x24>)
    2abc:	1840      	adds	r0, r0, r1
    2abe:	9002      	str	r0, [sp, #8]
    2ac0:	bd03      	pop	{r0, r1, pc}
    2ac2:	46c0      	nop			; (mov r8, r8)
    2ac4:	ffffffd9 	.word	0xffffffd9
    2ac8:	b403      	push	{r0, r1}
    2aca:	4668      	mov	r0, sp
    2acc:	b501      	push	{r0, lr}
    2ace:	9802      	ldr	r0, [sp, #8]
    2ad0:	f000 f806 	bl	2ae0 <__udivmoddi4>
    2ad4:	9b01      	ldr	r3, [sp, #4]
    2ad6:	469e      	mov	lr, r3
    2ad8:	b002      	add	sp, #8
    2ada:	bc0c      	pop	{r2, r3}
    2adc:	4770      	bx	lr
    2ade:	46c0      	nop			; (mov r8, r8)

00002ae0 <__udivmoddi4>:
    2ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ae2:	4657      	mov	r7, sl
    2ae4:	464e      	mov	r6, r9
    2ae6:	4645      	mov	r5, r8
    2ae8:	46de      	mov	lr, fp
    2aea:	b5e0      	push	{r5, r6, r7, lr}
    2aec:	0004      	movs	r4, r0
    2aee:	b083      	sub	sp, #12
    2af0:	000d      	movs	r5, r1
    2af2:	4692      	mov	sl, r2
    2af4:	4699      	mov	r9, r3
    2af6:	428b      	cmp	r3, r1
    2af8:	d82f      	bhi.n	2b5a <__udivmoddi4+0x7a>
    2afa:	d02c      	beq.n	2b56 <__udivmoddi4+0x76>
    2afc:	4649      	mov	r1, r9
    2afe:	4650      	mov	r0, sl
    2b00:	f001 fa82 	bl	4008 <__clzdi2>
    2b04:	0029      	movs	r1, r5
    2b06:	0006      	movs	r6, r0
    2b08:	0020      	movs	r0, r4
    2b0a:	f001 fa7d 	bl	4008 <__clzdi2>
    2b0e:	1a33      	subs	r3, r6, r0
    2b10:	4698      	mov	r8, r3
    2b12:	3b20      	subs	r3, #32
    2b14:	469b      	mov	fp, r3
    2b16:	d500      	bpl.n	2b1a <__udivmoddi4+0x3a>
    2b18:	e074      	b.n	2c04 <__udivmoddi4+0x124>
    2b1a:	4653      	mov	r3, sl
    2b1c:	465a      	mov	r2, fp
    2b1e:	4093      	lsls	r3, r2
    2b20:	001f      	movs	r7, r3
    2b22:	4653      	mov	r3, sl
    2b24:	4642      	mov	r2, r8
    2b26:	4093      	lsls	r3, r2
    2b28:	001e      	movs	r6, r3
    2b2a:	42af      	cmp	r7, r5
    2b2c:	d829      	bhi.n	2b82 <__udivmoddi4+0xa2>
    2b2e:	d026      	beq.n	2b7e <__udivmoddi4+0x9e>
    2b30:	465b      	mov	r3, fp
    2b32:	1ba4      	subs	r4, r4, r6
    2b34:	41bd      	sbcs	r5, r7
    2b36:	2b00      	cmp	r3, #0
    2b38:	da00      	bge.n	2b3c <__udivmoddi4+0x5c>
    2b3a:	e079      	b.n	2c30 <__udivmoddi4+0x150>
    2b3c:	2200      	movs	r2, #0
    2b3e:	2300      	movs	r3, #0
    2b40:	9200      	str	r2, [sp, #0]
    2b42:	9301      	str	r3, [sp, #4]
    2b44:	2301      	movs	r3, #1
    2b46:	465a      	mov	r2, fp
    2b48:	4093      	lsls	r3, r2
    2b4a:	9301      	str	r3, [sp, #4]
    2b4c:	2301      	movs	r3, #1
    2b4e:	4642      	mov	r2, r8
    2b50:	4093      	lsls	r3, r2
    2b52:	9300      	str	r3, [sp, #0]
    2b54:	e019      	b.n	2b8a <__udivmoddi4+0xaa>
    2b56:	4282      	cmp	r2, r0
    2b58:	d9d0      	bls.n	2afc <__udivmoddi4+0x1c>
    2b5a:	2200      	movs	r2, #0
    2b5c:	2300      	movs	r3, #0
    2b5e:	9200      	str	r2, [sp, #0]
    2b60:	9301      	str	r3, [sp, #4]
    2b62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2b64:	2b00      	cmp	r3, #0
    2b66:	d001      	beq.n	2b6c <__udivmoddi4+0x8c>
    2b68:	601c      	str	r4, [r3, #0]
    2b6a:	605d      	str	r5, [r3, #4]
    2b6c:	9800      	ldr	r0, [sp, #0]
    2b6e:	9901      	ldr	r1, [sp, #4]
    2b70:	b003      	add	sp, #12
    2b72:	bc3c      	pop	{r2, r3, r4, r5}
    2b74:	4690      	mov	r8, r2
    2b76:	4699      	mov	r9, r3
    2b78:	46a2      	mov	sl, r4
    2b7a:	46ab      	mov	fp, r5
    2b7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b7e:	42a3      	cmp	r3, r4
    2b80:	d9d6      	bls.n	2b30 <__udivmoddi4+0x50>
    2b82:	2200      	movs	r2, #0
    2b84:	2300      	movs	r3, #0
    2b86:	9200      	str	r2, [sp, #0]
    2b88:	9301      	str	r3, [sp, #4]
    2b8a:	4643      	mov	r3, r8
    2b8c:	2b00      	cmp	r3, #0
    2b8e:	d0e8      	beq.n	2b62 <__udivmoddi4+0x82>
    2b90:	07fb      	lsls	r3, r7, #31
    2b92:	0872      	lsrs	r2, r6, #1
    2b94:	431a      	orrs	r2, r3
    2b96:	4646      	mov	r6, r8
    2b98:	087b      	lsrs	r3, r7, #1
    2b9a:	e00e      	b.n	2bba <__udivmoddi4+0xda>
    2b9c:	42ab      	cmp	r3, r5
    2b9e:	d101      	bne.n	2ba4 <__udivmoddi4+0xc4>
    2ba0:	42a2      	cmp	r2, r4
    2ba2:	d80c      	bhi.n	2bbe <__udivmoddi4+0xde>
    2ba4:	1aa4      	subs	r4, r4, r2
    2ba6:	419d      	sbcs	r5, r3
    2ba8:	2001      	movs	r0, #1
    2baa:	1924      	adds	r4, r4, r4
    2bac:	416d      	adcs	r5, r5
    2bae:	2100      	movs	r1, #0
    2bb0:	3e01      	subs	r6, #1
    2bb2:	1824      	adds	r4, r4, r0
    2bb4:	414d      	adcs	r5, r1
    2bb6:	2e00      	cmp	r6, #0
    2bb8:	d006      	beq.n	2bc8 <__udivmoddi4+0xe8>
    2bba:	42ab      	cmp	r3, r5
    2bbc:	d9ee      	bls.n	2b9c <__udivmoddi4+0xbc>
    2bbe:	3e01      	subs	r6, #1
    2bc0:	1924      	adds	r4, r4, r4
    2bc2:	416d      	adcs	r5, r5
    2bc4:	2e00      	cmp	r6, #0
    2bc6:	d1f8      	bne.n	2bba <__udivmoddi4+0xda>
    2bc8:	465b      	mov	r3, fp
    2bca:	9800      	ldr	r0, [sp, #0]
    2bcc:	9901      	ldr	r1, [sp, #4]
    2bce:	1900      	adds	r0, r0, r4
    2bd0:	4169      	adcs	r1, r5
    2bd2:	2b00      	cmp	r3, #0
    2bd4:	db22      	blt.n	2c1c <__udivmoddi4+0x13c>
    2bd6:	002b      	movs	r3, r5
    2bd8:	465a      	mov	r2, fp
    2bda:	40d3      	lsrs	r3, r2
    2bdc:	002a      	movs	r2, r5
    2bde:	4644      	mov	r4, r8
    2be0:	40e2      	lsrs	r2, r4
    2be2:	001c      	movs	r4, r3
    2be4:	465b      	mov	r3, fp
    2be6:	0015      	movs	r5, r2
    2be8:	2b00      	cmp	r3, #0
    2bea:	db2c      	blt.n	2c46 <__udivmoddi4+0x166>
    2bec:	0026      	movs	r6, r4
    2bee:	409e      	lsls	r6, r3
    2bf0:	0033      	movs	r3, r6
    2bf2:	0026      	movs	r6, r4
    2bf4:	4647      	mov	r7, r8
    2bf6:	40be      	lsls	r6, r7
    2bf8:	0032      	movs	r2, r6
    2bfa:	1a80      	subs	r0, r0, r2
    2bfc:	4199      	sbcs	r1, r3
    2bfe:	9000      	str	r0, [sp, #0]
    2c00:	9101      	str	r1, [sp, #4]
    2c02:	e7ae      	b.n	2b62 <__udivmoddi4+0x82>
    2c04:	4642      	mov	r2, r8
    2c06:	2320      	movs	r3, #32
    2c08:	1a9b      	subs	r3, r3, r2
    2c0a:	4652      	mov	r2, sl
    2c0c:	40da      	lsrs	r2, r3
    2c0e:	4641      	mov	r1, r8
    2c10:	0013      	movs	r3, r2
    2c12:	464a      	mov	r2, r9
    2c14:	408a      	lsls	r2, r1
    2c16:	0017      	movs	r7, r2
    2c18:	431f      	orrs	r7, r3
    2c1a:	e782      	b.n	2b22 <__udivmoddi4+0x42>
    2c1c:	4642      	mov	r2, r8
    2c1e:	2320      	movs	r3, #32
    2c20:	1a9b      	subs	r3, r3, r2
    2c22:	002a      	movs	r2, r5
    2c24:	4646      	mov	r6, r8
    2c26:	409a      	lsls	r2, r3
    2c28:	0023      	movs	r3, r4
    2c2a:	40f3      	lsrs	r3, r6
    2c2c:	4313      	orrs	r3, r2
    2c2e:	e7d5      	b.n	2bdc <__udivmoddi4+0xfc>
    2c30:	4642      	mov	r2, r8
    2c32:	2320      	movs	r3, #32
    2c34:	2100      	movs	r1, #0
    2c36:	1a9b      	subs	r3, r3, r2
    2c38:	2200      	movs	r2, #0
    2c3a:	9100      	str	r1, [sp, #0]
    2c3c:	9201      	str	r2, [sp, #4]
    2c3e:	2201      	movs	r2, #1
    2c40:	40da      	lsrs	r2, r3
    2c42:	9201      	str	r2, [sp, #4]
    2c44:	e782      	b.n	2b4c <__udivmoddi4+0x6c>
    2c46:	4642      	mov	r2, r8
    2c48:	2320      	movs	r3, #32
    2c4a:	0026      	movs	r6, r4
    2c4c:	1a9b      	subs	r3, r3, r2
    2c4e:	40de      	lsrs	r6, r3
    2c50:	002f      	movs	r7, r5
    2c52:	46b4      	mov	ip, r6
    2c54:	4097      	lsls	r7, r2
    2c56:	4666      	mov	r6, ip
    2c58:	003b      	movs	r3, r7
    2c5a:	4333      	orrs	r3, r6
    2c5c:	e7c9      	b.n	2bf2 <__udivmoddi4+0x112>
    2c5e:	46c0      	nop			; (mov r8, r8)

00002c60 <__aeabi_ddiv>:
    2c60:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c62:	4657      	mov	r7, sl
    2c64:	4645      	mov	r5, r8
    2c66:	46de      	mov	lr, fp
    2c68:	464e      	mov	r6, r9
    2c6a:	b5e0      	push	{r5, r6, r7, lr}
    2c6c:	004c      	lsls	r4, r1, #1
    2c6e:	030e      	lsls	r6, r1, #12
    2c70:	b087      	sub	sp, #28
    2c72:	4683      	mov	fp, r0
    2c74:	4692      	mov	sl, r2
    2c76:	001d      	movs	r5, r3
    2c78:	4680      	mov	r8, r0
    2c7a:	0b36      	lsrs	r6, r6, #12
    2c7c:	0d64      	lsrs	r4, r4, #21
    2c7e:	0fcf      	lsrs	r7, r1, #31
    2c80:	2c00      	cmp	r4, #0
    2c82:	d04f      	beq.n	2d24 <__aeabi_ddiv+0xc4>
    2c84:	4b6f      	ldr	r3, [pc, #444]	; (2e44 <__aeabi_ddiv+0x1e4>)
    2c86:	429c      	cmp	r4, r3
    2c88:	d035      	beq.n	2cf6 <__aeabi_ddiv+0x96>
    2c8a:	2380      	movs	r3, #128	; 0x80
    2c8c:	0f42      	lsrs	r2, r0, #29
    2c8e:	041b      	lsls	r3, r3, #16
    2c90:	00f6      	lsls	r6, r6, #3
    2c92:	4313      	orrs	r3, r2
    2c94:	4333      	orrs	r3, r6
    2c96:	4699      	mov	r9, r3
    2c98:	00c3      	lsls	r3, r0, #3
    2c9a:	4698      	mov	r8, r3
    2c9c:	4b6a      	ldr	r3, [pc, #424]	; (2e48 <__aeabi_ddiv+0x1e8>)
    2c9e:	2600      	movs	r6, #0
    2ca0:	469c      	mov	ip, r3
    2ca2:	2300      	movs	r3, #0
    2ca4:	4464      	add	r4, ip
    2ca6:	9303      	str	r3, [sp, #12]
    2ca8:	032b      	lsls	r3, r5, #12
    2caa:	0b1b      	lsrs	r3, r3, #12
    2cac:	469b      	mov	fp, r3
    2cae:	006b      	lsls	r3, r5, #1
    2cb0:	0fed      	lsrs	r5, r5, #31
    2cb2:	4650      	mov	r0, sl
    2cb4:	0d5b      	lsrs	r3, r3, #21
    2cb6:	9501      	str	r5, [sp, #4]
    2cb8:	d05e      	beq.n	2d78 <__aeabi_ddiv+0x118>
    2cba:	4a62      	ldr	r2, [pc, #392]	; (2e44 <__aeabi_ddiv+0x1e4>)
    2cbc:	4293      	cmp	r3, r2
    2cbe:	d053      	beq.n	2d68 <__aeabi_ddiv+0x108>
    2cc0:	465a      	mov	r2, fp
    2cc2:	00d1      	lsls	r1, r2, #3
    2cc4:	2280      	movs	r2, #128	; 0x80
    2cc6:	0f40      	lsrs	r0, r0, #29
    2cc8:	0412      	lsls	r2, r2, #16
    2cca:	4302      	orrs	r2, r0
    2ccc:	430a      	orrs	r2, r1
    2cce:	4693      	mov	fp, r2
    2cd0:	4652      	mov	r2, sl
    2cd2:	00d1      	lsls	r1, r2, #3
    2cd4:	4a5c      	ldr	r2, [pc, #368]	; (2e48 <__aeabi_ddiv+0x1e8>)
    2cd6:	4694      	mov	ip, r2
    2cd8:	2200      	movs	r2, #0
    2cda:	4463      	add	r3, ip
    2cdc:	0038      	movs	r0, r7
    2cde:	4068      	eors	r0, r5
    2ce0:	4684      	mov	ip, r0
    2ce2:	9002      	str	r0, [sp, #8]
    2ce4:	1ae4      	subs	r4, r4, r3
    2ce6:	4316      	orrs	r6, r2
    2ce8:	2e0f      	cmp	r6, #15
    2cea:	d900      	bls.n	2cee <__aeabi_ddiv+0x8e>
    2cec:	e0b4      	b.n	2e58 <__aeabi_ddiv+0x1f8>
    2cee:	4b57      	ldr	r3, [pc, #348]	; (2e4c <__aeabi_ddiv+0x1ec>)
    2cf0:	00b6      	lsls	r6, r6, #2
    2cf2:	599b      	ldr	r3, [r3, r6]
    2cf4:	469f      	mov	pc, r3
    2cf6:	0003      	movs	r3, r0
    2cf8:	4333      	orrs	r3, r6
    2cfa:	4699      	mov	r9, r3
    2cfc:	d16c      	bne.n	2dd8 <__aeabi_ddiv+0x178>
    2cfe:	2300      	movs	r3, #0
    2d00:	4698      	mov	r8, r3
    2d02:	3302      	adds	r3, #2
    2d04:	2608      	movs	r6, #8
    2d06:	9303      	str	r3, [sp, #12]
    2d08:	e7ce      	b.n	2ca8 <__aeabi_ddiv+0x48>
    2d0a:	46cb      	mov	fp, r9
    2d0c:	4641      	mov	r1, r8
    2d0e:	9a03      	ldr	r2, [sp, #12]
    2d10:	9701      	str	r7, [sp, #4]
    2d12:	2a02      	cmp	r2, #2
    2d14:	d165      	bne.n	2de2 <__aeabi_ddiv+0x182>
    2d16:	9b01      	ldr	r3, [sp, #4]
    2d18:	4c4a      	ldr	r4, [pc, #296]	; (2e44 <__aeabi_ddiv+0x1e4>)
    2d1a:	469c      	mov	ip, r3
    2d1c:	2300      	movs	r3, #0
    2d1e:	2200      	movs	r2, #0
    2d20:	4698      	mov	r8, r3
    2d22:	e06b      	b.n	2dfc <__aeabi_ddiv+0x19c>
    2d24:	0003      	movs	r3, r0
    2d26:	4333      	orrs	r3, r6
    2d28:	4699      	mov	r9, r3
    2d2a:	d04e      	beq.n	2dca <__aeabi_ddiv+0x16a>
    2d2c:	2e00      	cmp	r6, #0
    2d2e:	d100      	bne.n	2d32 <__aeabi_ddiv+0xd2>
    2d30:	e1bc      	b.n	30ac <__aeabi_ddiv+0x44c>
    2d32:	0030      	movs	r0, r6
    2d34:	f001 f94a 	bl	3fcc <__clzsi2>
    2d38:	0003      	movs	r3, r0
    2d3a:	3b0b      	subs	r3, #11
    2d3c:	2b1c      	cmp	r3, #28
    2d3e:	dd00      	ble.n	2d42 <__aeabi_ddiv+0xe2>
    2d40:	e1ac      	b.n	309c <__aeabi_ddiv+0x43c>
    2d42:	221d      	movs	r2, #29
    2d44:	1ad3      	subs	r3, r2, r3
    2d46:	465a      	mov	r2, fp
    2d48:	0001      	movs	r1, r0
    2d4a:	40da      	lsrs	r2, r3
    2d4c:	3908      	subs	r1, #8
    2d4e:	408e      	lsls	r6, r1
    2d50:	0013      	movs	r3, r2
    2d52:	4333      	orrs	r3, r6
    2d54:	4699      	mov	r9, r3
    2d56:	465b      	mov	r3, fp
    2d58:	408b      	lsls	r3, r1
    2d5a:	4698      	mov	r8, r3
    2d5c:	2300      	movs	r3, #0
    2d5e:	4c3c      	ldr	r4, [pc, #240]	; (2e50 <__aeabi_ddiv+0x1f0>)
    2d60:	2600      	movs	r6, #0
    2d62:	1a24      	subs	r4, r4, r0
    2d64:	9303      	str	r3, [sp, #12]
    2d66:	e79f      	b.n	2ca8 <__aeabi_ddiv+0x48>
    2d68:	4651      	mov	r1, sl
    2d6a:	465a      	mov	r2, fp
    2d6c:	4311      	orrs	r1, r2
    2d6e:	d129      	bne.n	2dc4 <__aeabi_ddiv+0x164>
    2d70:	2200      	movs	r2, #0
    2d72:	4693      	mov	fp, r2
    2d74:	3202      	adds	r2, #2
    2d76:	e7b1      	b.n	2cdc <__aeabi_ddiv+0x7c>
    2d78:	4659      	mov	r1, fp
    2d7a:	4301      	orrs	r1, r0
    2d7c:	d01e      	beq.n	2dbc <__aeabi_ddiv+0x15c>
    2d7e:	465b      	mov	r3, fp
    2d80:	2b00      	cmp	r3, #0
    2d82:	d100      	bne.n	2d86 <__aeabi_ddiv+0x126>
    2d84:	e19e      	b.n	30c4 <__aeabi_ddiv+0x464>
    2d86:	4658      	mov	r0, fp
    2d88:	f001 f920 	bl	3fcc <__clzsi2>
    2d8c:	0003      	movs	r3, r0
    2d8e:	3b0b      	subs	r3, #11
    2d90:	2b1c      	cmp	r3, #28
    2d92:	dd00      	ble.n	2d96 <__aeabi_ddiv+0x136>
    2d94:	e18f      	b.n	30b6 <__aeabi_ddiv+0x456>
    2d96:	0002      	movs	r2, r0
    2d98:	4659      	mov	r1, fp
    2d9a:	3a08      	subs	r2, #8
    2d9c:	4091      	lsls	r1, r2
    2d9e:	468b      	mov	fp, r1
    2da0:	211d      	movs	r1, #29
    2da2:	1acb      	subs	r3, r1, r3
    2da4:	4651      	mov	r1, sl
    2da6:	40d9      	lsrs	r1, r3
    2da8:	000b      	movs	r3, r1
    2daa:	4659      	mov	r1, fp
    2dac:	430b      	orrs	r3, r1
    2dae:	4651      	mov	r1, sl
    2db0:	469b      	mov	fp, r3
    2db2:	4091      	lsls	r1, r2
    2db4:	4b26      	ldr	r3, [pc, #152]	; (2e50 <__aeabi_ddiv+0x1f0>)
    2db6:	2200      	movs	r2, #0
    2db8:	1a1b      	subs	r3, r3, r0
    2dba:	e78f      	b.n	2cdc <__aeabi_ddiv+0x7c>
    2dbc:	2300      	movs	r3, #0
    2dbe:	2201      	movs	r2, #1
    2dc0:	469b      	mov	fp, r3
    2dc2:	e78b      	b.n	2cdc <__aeabi_ddiv+0x7c>
    2dc4:	4651      	mov	r1, sl
    2dc6:	2203      	movs	r2, #3
    2dc8:	e788      	b.n	2cdc <__aeabi_ddiv+0x7c>
    2dca:	2300      	movs	r3, #0
    2dcc:	4698      	mov	r8, r3
    2dce:	3301      	adds	r3, #1
    2dd0:	2604      	movs	r6, #4
    2dd2:	2400      	movs	r4, #0
    2dd4:	9303      	str	r3, [sp, #12]
    2dd6:	e767      	b.n	2ca8 <__aeabi_ddiv+0x48>
    2dd8:	2303      	movs	r3, #3
    2dda:	46b1      	mov	r9, r6
    2ddc:	9303      	str	r3, [sp, #12]
    2dde:	260c      	movs	r6, #12
    2de0:	e762      	b.n	2ca8 <__aeabi_ddiv+0x48>
    2de2:	2a03      	cmp	r2, #3
    2de4:	d100      	bne.n	2de8 <__aeabi_ddiv+0x188>
    2de6:	e25c      	b.n	32a2 <__aeabi_ddiv+0x642>
    2de8:	9b01      	ldr	r3, [sp, #4]
    2dea:	2a01      	cmp	r2, #1
    2dec:	d000      	beq.n	2df0 <__aeabi_ddiv+0x190>
    2dee:	e1e4      	b.n	31ba <__aeabi_ddiv+0x55a>
    2df0:	4013      	ands	r3, r2
    2df2:	469c      	mov	ip, r3
    2df4:	2300      	movs	r3, #0
    2df6:	2400      	movs	r4, #0
    2df8:	2200      	movs	r2, #0
    2dfa:	4698      	mov	r8, r3
    2dfc:	2100      	movs	r1, #0
    2dfe:	0312      	lsls	r2, r2, #12
    2e00:	0b13      	lsrs	r3, r2, #12
    2e02:	0d0a      	lsrs	r2, r1, #20
    2e04:	0512      	lsls	r2, r2, #20
    2e06:	431a      	orrs	r2, r3
    2e08:	0523      	lsls	r3, r4, #20
    2e0a:	4c12      	ldr	r4, [pc, #72]	; (2e54 <__aeabi_ddiv+0x1f4>)
    2e0c:	4640      	mov	r0, r8
    2e0e:	4022      	ands	r2, r4
    2e10:	4313      	orrs	r3, r2
    2e12:	4662      	mov	r2, ip
    2e14:	005b      	lsls	r3, r3, #1
    2e16:	07d2      	lsls	r2, r2, #31
    2e18:	085b      	lsrs	r3, r3, #1
    2e1a:	4313      	orrs	r3, r2
    2e1c:	0019      	movs	r1, r3
    2e1e:	b007      	add	sp, #28
    2e20:	bc3c      	pop	{r2, r3, r4, r5}
    2e22:	4690      	mov	r8, r2
    2e24:	4699      	mov	r9, r3
    2e26:	46a2      	mov	sl, r4
    2e28:	46ab      	mov	fp, r5
    2e2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e2c:	2300      	movs	r3, #0
    2e2e:	2280      	movs	r2, #128	; 0x80
    2e30:	469c      	mov	ip, r3
    2e32:	0312      	lsls	r2, r2, #12
    2e34:	4698      	mov	r8, r3
    2e36:	4c03      	ldr	r4, [pc, #12]	; (2e44 <__aeabi_ddiv+0x1e4>)
    2e38:	e7e0      	b.n	2dfc <__aeabi_ddiv+0x19c>
    2e3a:	2300      	movs	r3, #0
    2e3c:	4c01      	ldr	r4, [pc, #4]	; (2e44 <__aeabi_ddiv+0x1e4>)
    2e3e:	2200      	movs	r2, #0
    2e40:	4698      	mov	r8, r3
    2e42:	e7db      	b.n	2dfc <__aeabi_ddiv+0x19c>
    2e44:	000007ff 	.word	0x000007ff
    2e48:	fffffc01 	.word	0xfffffc01
    2e4c:	00009bfc 	.word	0x00009bfc
    2e50:	fffffc0d 	.word	0xfffffc0d
    2e54:	800fffff 	.word	0x800fffff
    2e58:	45d9      	cmp	r9, fp
    2e5a:	d900      	bls.n	2e5e <__aeabi_ddiv+0x1fe>
    2e5c:	e139      	b.n	30d2 <__aeabi_ddiv+0x472>
    2e5e:	d100      	bne.n	2e62 <__aeabi_ddiv+0x202>
    2e60:	e134      	b.n	30cc <__aeabi_ddiv+0x46c>
    2e62:	2300      	movs	r3, #0
    2e64:	4646      	mov	r6, r8
    2e66:	464d      	mov	r5, r9
    2e68:	469a      	mov	sl, r3
    2e6a:	3c01      	subs	r4, #1
    2e6c:	465b      	mov	r3, fp
    2e6e:	0e0a      	lsrs	r2, r1, #24
    2e70:	021b      	lsls	r3, r3, #8
    2e72:	431a      	orrs	r2, r3
    2e74:	020b      	lsls	r3, r1, #8
    2e76:	0c17      	lsrs	r7, r2, #16
    2e78:	9303      	str	r3, [sp, #12]
    2e7a:	0413      	lsls	r3, r2, #16
    2e7c:	0c1b      	lsrs	r3, r3, #16
    2e7e:	0039      	movs	r1, r7
    2e80:	0028      	movs	r0, r5
    2e82:	4690      	mov	r8, r2
    2e84:	9301      	str	r3, [sp, #4]
    2e86:	f7ff fd7f 	bl	2988 <__udivsi3>
    2e8a:	0002      	movs	r2, r0
    2e8c:	9b01      	ldr	r3, [sp, #4]
    2e8e:	4683      	mov	fp, r0
    2e90:	435a      	muls	r2, r3
    2e92:	0028      	movs	r0, r5
    2e94:	0039      	movs	r1, r7
    2e96:	4691      	mov	r9, r2
    2e98:	f7ff fdfc 	bl	2a94 <__aeabi_uidivmod>
    2e9c:	0c35      	lsrs	r5, r6, #16
    2e9e:	0409      	lsls	r1, r1, #16
    2ea0:	430d      	orrs	r5, r1
    2ea2:	45a9      	cmp	r9, r5
    2ea4:	d90d      	bls.n	2ec2 <__aeabi_ddiv+0x262>
    2ea6:	465b      	mov	r3, fp
    2ea8:	4445      	add	r5, r8
    2eaa:	3b01      	subs	r3, #1
    2eac:	45a8      	cmp	r8, r5
    2eae:	d900      	bls.n	2eb2 <__aeabi_ddiv+0x252>
    2eb0:	e13a      	b.n	3128 <__aeabi_ddiv+0x4c8>
    2eb2:	45a9      	cmp	r9, r5
    2eb4:	d800      	bhi.n	2eb8 <__aeabi_ddiv+0x258>
    2eb6:	e137      	b.n	3128 <__aeabi_ddiv+0x4c8>
    2eb8:	2302      	movs	r3, #2
    2eba:	425b      	negs	r3, r3
    2ebc:	469c      	mov	ip, r3
    2ebe:	4445      	add	r5, r8
    2ec0:	44e3      	add	fp, ip
    2ec2:	464b      	mov	r3, r9
    2ec4:	1aeb      	subs	r3, r5, r3
    2ec6:	0039      	movs	r1, r7
    2ec8:	0018      	movs	r0, r3
    2eca:	9304      	str	r3, [sp, #16]
    2ecc:	f7ff fd5c 	bl	2988 <__udivsi3>
    2ed0:	9b01      	ldr	r3, [sp, #4]
    2ed2:	0005      	movs	r5, r0
    2ed4:	4343      	muls	r3, r0
    2ed6:	0039      	movs	r1, r7
    2ed8:	9804      	ldr	r0, [sp, #16]
    2eda:	4699      	mov	r9, r3
    2edc:	f7ff fdda 	bl	2a94 <__aeabi_uidivmod>
    2ee0:	0433      	lsls	r3, r6, #16
    2ee2:	0409      	lsls	r1, r1, #16
    2ee4:	0c1b      	lsrs	r3, r3, #16
    2ee6:	430b      	orrs	r3, r1
    2ee8:	4599      	cmp	r9, r3
    2eea:	d909      	bls.n	2f00 <__aeabi_ddiv+0x2a0>
    2eec:	4443      	add	r3, r8
    2eee:	1e6a      	subs	r2, r5, #1
    2ef0:	4598      	cmp	r8, r3
    2ef2:	d900      	bls.n	2ef6 <__aeabi_ddiv+0x296>
    2ef4:	e11a      	b.n	312c <__aeabi_ddiv+0x4cc>
    2ef6:	4599      	cmp	r9, r3
    2ef8:	d800      	bhi.n	2efc <__aeabi_ddiv+0x29c>
    2efa:	e117      	b.n	312c <__aeabi_ddiv+0x4cc>
    2efc:	3d02      	subs	r5, #2
    2efe:	4443      	add	r3, r8
    2f00:	464a      	mov	r2, r9
    2f02:	1a9b      	subs	r3, r3, r2
    2f04:	465a      	mov	r2, fp
    2f06:	0412      	lsls	r2, r2, #16
    2f08:	432a      	orrs	r2, r5
    2f0a:	9903      	ldr	r1, [sp, #12]
    2f0c:	4693      	mov	fp, r2
    2f0e:	0c10      	lsrs	r0, r2, #16
    2f10:	0c0a      	lsrs	r2, r1, #16
    2f12:	4691      	mov	r9, r2
    2f14:	0409      	lsls	r1, r1, #16
    2f16:	465a      	mov	r2, fp
    2f18:	0c09      	lsrs	r1, r1, #16
    2f1a:	464e      	mov	r6, r9
    2f1c:	000d      	movs	r5, r1
    2f1e:	0412      	lsls	r2, r2, #16
    2f20:	0c12      	lsrs	r2, r2, #16
    2f22:	4345      	muls	r5, r0
    2f24:	9105      	str	r1, [sp, #20]
    2f26:	4351      	muls	r1, r2
    2f28:	4372      	muls	r2, r6
    2f2a:	4370      	muls	r0, r6
    2f2c:	1952      	adds	r2, r2, r5
    2f2e:	0c0e      	lsrs	r6, r1, #16
    2f30:	18b2      	adds	r2, r6, r2
    2f32:	4295      	cmp	r5, r2
    2f34:	d903      	bls.n	2f3e <__aeabi_ddiv+0x2de>
    2f36:	2580      	movs	r5, #128	; 0x80
    2f38:	026d      	lsls	r5, r5, #9
    2f3a:	46ac      	mov	ip, r5
    2f3c:	4460      	add	r0, ip
    2f3e:	0c15      	lsrs	r5, r2, #16
    2f40:	0409      	lsls	r1, r1, #16
    2f42:	0412      	lsls	r2, r2, #16
    2f44:	0c09      	lsrs	r1, r1, #16
    2f46:	1828      	adds	r0, r5, r0
    2f48:	1852      	adds	r2, r2, r1
    2f4a:	4283      	cmp	r3, r0
    2f4c:	d200      	bcs.n	2f50 <__aeabi_ddiv+0x2f0>
    2f4e:	e0ce      	b.n	30ee <__aeabi_ddiv+0x48e>
    2f50:	d100      	bne.n	2f54 <__aeabi_ddiv+0x2f4>
    2f52:	e0c8      	b.n	30e6 <__aeabi_ddiv+0x486>
    2f54:	1a1d      	subs	r5, r3, r0
    2f56:	4653      	mov	r3, sl
    2f58:	1a9e      	subs	r6, r3, r2
    2f5a:	45b2      	cmp	sl, r6
    2f5c:	4192      	sbcs	r2, r2
    2f5e:	4252      	negs	r2, r2
    2f60:	1aab      	subs	r3, r5, r2
    2f62:	469a      	mov	sl, r3
    2f64:	4598      	cmp	r8, r3
    2f66:	d100      	bne.n	2f6a <__aeabi_ddiv+0x30a>
    2f68:	e117      	b.n	319a <__aeabi_ddiv+0x53a>
    2f6a:	0039      	movs	r1, r7
    2f6c:	0018      	movs	r0, r3
    2f6e:	f7ff fd0b 	bl	2988 <__udivsi3>
    2f72:	9b01      	ldr	r3, [sp, #4]
    2f74:	0005      	movs	r5, r0
    2f76:	4343      	muls	r3, r0
    2f78:	0039      	movs	r1, r7
    2f7a:	4650      	mov	r0, sl
    2f7c:	9304      	str	r3, [sp, #16]
    2f7e:	f7ff fd89 	bl	2a94 <__aeabi_uidivmod>
    2f82:	9804      	ldr	r0, [sp, #16]
    2f84:	040b      	lsls	r3, r1, #16
    2f86:	0c31      	lsrs	r1, r6, #16
    2f88:	4319      	orrs	r1, r3
    2f8a:	4288      	cmp	r0, r1
    2f8c:	d909      	bls.n	2fa2 <__aeabi_ddiv+0x342>
    2f8e:	4441      	add	r1, r8
    2f90:	1e6b      	subs	r3, r5, #1
    2f92:	4588      	cmp	r8, r1
    2f94:	d900      	bls.n	2f98 <__aeabi_ddiv+0x338>
    2f96:	e107      	b.n	31a8 <__aeabi_ddiv+0x548>
    2f98:	4288      	cmp	r0, r1
    2f9a:	d800      	bhi.n	2f9e <__aeabi_ddiv+0x33e>
    2f9c:	e104      	b.n	31a8 <__aeabi_ddiv+0x548>
    2f9e:	3d02      	subs	r5, #2
    2fa0:	4441      	add	r1, r8
    2fa2:	9b04      	ldr	r3, [sp, #16]
    2fa4:	1acb      	subs	r3, r1, r3
    2fa6:	0018      	movs	r0, r3
    2fa8:	0039      	movs	r1, r7
    2faa:	9304      	str	r3, [sp, #16]
    2fac:	f7ff fcec 	bl	2988 <__udivsi3>
    2fb0:	9b01      	ldr	r3, [sp, #4]
    2fb2:	4682      	mov	sl, r0
    2fb4:	4343      	muls	r3, r0
    2fb6:	0039      	movs	r1, r7
    2fb8:	9804      	ldr	r0, [sp, #16]
    2fba:	9301      	str	r3, [sp, #4]
    2fbc:	f7ff fd6a 	bl	2a94 <__aeabi_uidivmod>
    2fc0:	9801      	ldr	r0, [sp, #4]
    2fc2:	040b      	lsls	r3, r1, #16
    2fc4:	0431      	lsls	r1, r6, #16
    2fc6:	0c09      	lsrs	r1, r1, #16
    2fc8:	4319      	orrs	r1, r3
    2fca:	4288      	cmp	r0, r1
    2fcc:	d90d      	bls.n	2fea <__aeabi_ddiv+0x38a>
    2fce:	4653      	mov	r3, sl
    2fd0:	4441      	add	r1, r8
    2fd2:	3b01      	subs	r3, #1
    2fd4:	4588      	cmp	r8, r1
    2fd6:	d900      	bls.n	2fda <__aeabi_ddiv+0x37a>
    2fd8:	e0e8      	b.n	31ac <__aeabi_ddiv+0x54c>
    2fda:	4288      	cmp	r0, r1
    2fdc:	d800      	bhi.n	2fe0 <__aeabi_ddiv+0x380>
    2fde:	e0e5      	b.n	31ac <__aeabi_ddiv+0x54c>
    2fe0:	2302      	movs	r3, #2
    2fe2:	425b      	negs	r3, r3
    2fe4:	469c      	mov	ip, r3
    2fe6:	4441      	add	r1, r8
    2fe8:	44e2      	add	sl, ip
    2fea:	9b01      	ldr	r3, [sp, #4]
    2fec:	042d      	lsls	r5, r5, #16
    2fee:	1ace      	subs	r6, r1, r3
    2ff0:	4651      	mov	r1, sl
    2ff2:	4329      	orrs	r1, r5
    2ff4:	9d05      	ldr	r5, [sp, #20]
    2ff6:	464f      	mov	r7, r9
    2ff8:	002a      	movs	r2, r5
    2ffa:	040b      	lsls	r3, r1, #16
    2ffc:	0c08      	lsrs	r0, r1, #16
    2ffe:	0c1b      	lsrs	r3, r3, #16
    3000:	435a      	muls	r2, r3
    3002:	4345      	muls	r5, r0
    3004:	437b      	muls	r3, r7
    3006:	4378      	muls	r0, r7
    3008:	195b      	adds	r3, r3, r5
    300a:	0c17      	lsrs	r7, r2, #16
    300c:	18fb      	adds	r3, r7, r3
    300e:	429d      	cmp	r5, r3
    3010:	d903      	bls.n	301a <__aeabi_ddiv+0x3ba>
    3012:	2580      	movs	r5, #128	; 0x80
    3014:	026d      	lsls	r5, r5, #9
    3016:	46ac      	mov	ip, r5
    3018:	4460      	add	r0, ip
    301a:	0c1d      	lsrs	r5, r3, #16
    301c:	0412      	lsls	r2, r2, #16
    301e:	041b      	lsls	r3, r3, #16
    3020:	0c12      	lsrs	r2, r2, #16
    3022:	1828      	adds	r0, r5, r0
    3024:	189b      	adds	r3, r3, r2
    3026:	4286      	cmp	r6, r0
    3028:	d200      	bcs.n	302c <__aeabi_ddiv+0x3cc>
    302a:	e093      	b.n	3154 <__aeabi_ddiv+0x4f4>
    302c:	d100      	bne.n	3030 <__aeabi_ddiv+0x3d0>
    302e:	e08e      	b.n	314e <__aeabi_ddiv+0x4ee>
    3030:	2301      	movs	r3, #1
    3032:	4319      	orrs	r1, r3
    3034:	4ba0      	ldr	r3, [pc, #640]	; (32b8 <__aeabi_ddiv+0x658>)
    3036:	18e3      	adds	r3, r4, r3
    3038:	2b00      	cmp	r3, #0
    303a:	dc00      	bgt.n	303e <__aeabi_ddiv+0x3de>
    303c:	e099      	b.n	3172 <__aeabi_ddiv+0x512>
    303e:	074a      	lsls	r2, r1, #29
    3040:	d000      	beq.n	3044 <__aeabi_ddiv+0x3e4>
    3042:	e09e      	b.n	3182 <__aeabi_ddiv+0x522>
    3044:	465a      	mov	r2, fp
    3046:	01d2      	lsls	r2, r2, #7
    3048:	d506      	bpl.n	3058 <__aeabi_ddiv+0x3f8>
    304a:	465a      	mov	r2, fp
    304c:	4b9b      	ldr	r3, [pc, #620]	; (32bc <__aeabi_ddiv+0x65c>)
    304e:	401a      	ands	r2, r3
    3050:	2380      	movs	r3, #128	; 0x80
    3052:	4693      	mov	fp, r2
    3054:	00db      	lsls	r3, r3, #3
    3056:	18e3      	adds	r3, r4, r3
    3058:	4a99      	ldr	r2, [pc, #612]	; (32c0 <__aeabi_ddiv+0x660>)
    305a:	4293      	cmp	r3, r2
    305c:	dd68      	ble.n	3130 <__aeabi_ddiv+0x4d0>
    305e:	2301      	movs	r3, #1
    3060:	9a02      	ldr	r2, [sp, #8]
    3062:	4c98      	ldr	r4, [pc, #608]	; (32c4 <__aeabi_ddiv+0x664>)
    3064:	401a      	ands	r2, r3
    3066:	2300      	movs	r3, #0
    3068:	4694      	mov	ip, r2
    306a:	4698      	mov	r8, r3
    306c:	2200      	movs	r2, #0
    306e:	e6c5      	b.n	2dfc <__aeabi_ddiv+0x19c>
    3070:	2280      	movs	r2, #128	; 0x80
    3072:	464b      	mov	r3, r9
    3074:	0312      	lsls	r2, r2, #12
    3076:	4213      	tst	r3, r2
    3078:	d00a      	beq.n	3090 <__aeabi_ddiv+0x430>
    307a:	465b      	mov	r3, fp
    307c:	4213      	tst	r3, r2
    307e:	d106      	bne.n	308e <__aeabi_ddiv+0x42e>
    3080:	431a      	orrs	r2, r3
    3082:	0312      	lsls	r2, r2, #12
    3084:	0b12      	lsrs	r2, r2, #12
    3086:	46ac      	mov	ip, r5
    3088:	4688      	mov	r8, r1
    308a:	4c8e      	ldr	r4, [pc, #568]	; (32c4 <__aeabi_ddiv+0x664>)
    308c:	e6b6      	b.n	2dfc <__aeabi_ddiv+0x19c>
    308e:	464b      	mov	r3, r9
    3090:	431a      	orrs	r2, r3
    3092:	0312      	lsls	r2, r2, #12
    3094:	0b12      	lsrs	r2, r2, #12
    3096:	46bc      	mov	ip, r7
    3098:	4c8a      	ldr	r4, [pc, #552]	; (32c4 <__aeabi_ddiv+0x664>)
    309a:	e6af      	b.n	2dfc <__aeabi_ddiv+0x19c>
    309c:	0003      	movs	r3, r0
    309e:	465a      	mov	r2, fp
    30a0:	3b28      	subs	r3, #40	; 0x28
    30a2:	409a      	lsls	r2, r3
    30a4:	2300      	movs	r3, #0
    30a6:	4691      	mov	r9, r2
    30a8:	4698      	mov	r8, r3
    30aa:	e657      	b.n	2d5c <__aeabi_ddiv+0xfc>
    30ac:	4658      	mov	r0, fp
    30ae:	f000 ff8d 	bl	3fcc <__clzsi2>
    30b2:	3020      	adds	r0, #32
    30b4:	e640      	b.n	2d38 <__aeabi_ddiv+0xd8>
    30b6:	0003      	movs	r3, r0
    30b8:	4652      	mov	r2, sl
    30ba:	3b28      	subs	r3, #40	; 0x28
    30bc:	409a      	lsls	r2, r3
    30be:	2100      	movs	r1, #0
    30c0:	4693      	mov	fp, r2
    30c2:	e677      	b.n	2db4 <__aeabi_ddiv+0x154>
    30c4:	f000 ff82 	bl	3fcc <__clzsi2>
    30c8:	3020      	adds	r0, #32
    30ca:	e65f      	b.n	2d8c <__aeabi_ddiv+0x12c>
    30cc:	4588      	cmp	r8, r1
    30ce:	d200      	bcs.n	30d2 <__aeabi_ddiv+0x472>
    30d0:	e6c7      	b.n	2e62 <__aeabi_ddiv+0x202>
    30d2:	464b      	mov	r3, r9
    30d4:	07de      	lsls	r6, r3, #31
    30d6:	085d      	lsrs	r5, r3, #1
    30d8:	4643      	mov	r3, r8
    30da:	085b      	lsrs	r3, r3, #1
    30dc:	431e      	orrs	r6, r3
    30de:	4643      	mov	r3, r8
    30e0:	07db      	lsls	r3, r3, #31
    30e2:	469a      	mov	sl, r3
    30e4:	e6c2      	b.n	2e6c <__aeabi_ddiv+0x20c>
    30e6:	2500      	movs	r5, #0
    30e8:	4592      	cmp	sl, r2
    30ea:	d300      	bcc.n	30ee <__aeabi_ddiv+0x48e>
    30ec:	e733      	b.n	2f56 <__aeabi_ddiv+0x2f6>
    30ee:	9e03      	ldr	r6, [sp, #12]
    30f0:	4659      	mov	r1, fp
    30f2:	46b4      	mov	ip, r6
    30f4:	44e2      	add	sl, ip
    30f6:	45b2      	cmp	sl, r6
    30f8:	41ad      	sbcs	r5, r5
    30fa:	426d      	negs	r5, r5
    30fc:	4445      	add	r5, r8
    30fe:	18eb      	adds	r3, r5, r3
    3100:	3901      	subs	r1, #1
    3102:	4598      	cmp	r8, r3
    3104:	d207      	bcs.n	3116 <__aeabi_ddiv+0x4b6>
    3106:	4298      	cmp	r0, r3
    3108:	d900      	bls.n	310c <__aeabi_ddiv+0x4ac>
    310a:	e07f      	b.n	320c <__aeabi_ddiv+0x5ac>
    310c:	d100      	bne.n	3110 <__aeabi_ddiv+0x4b0>
    310e:	e0bc      	b.n	328a <__aeabi_ddiv+0x62a>
    3110:	1a1d      	subs	r5, r3, r0
    3112:	468b      	mov	fp, r1
    3114:	e71f      	b.n	2f56 <__aeabi_ddiv+0x2f6>
    3116:	4598      	cmp	r8, r3
    3118:	d1fa      	bne.n	3110 <__aeabi_ddiv+0x4b0>
    311a:	9d03      	ldr	r5, [sp, #12]
    311c:	4555      	cmp	r5, sl
    311e:	d9f2      	bls.n	3106 <__aeabi_ddiv+0x4a6>
    3120:	4643      	mov	r3, r8
    3122:	468b      	mov	fp, r1
    3124:	1a1d      	subs	r5, r3, r0
    3126:	e716      	b.n	2f56 <__aeabi_ddiv+0x2f6>
    3128:	469b      	mov	fp, r3
    312a:	e6ca      	b.n	2ec2 <__aeabi_ddiv+0x262>
    312c:	0015      	movs	r5, r2
    312e:	e6e7      	b.n	2f00 <__aeabi_ddiv+0x2a0>
    3130:	465a      	mov	r2, fp
    3132:	08c9      	lsrs	r1, r1, #3
    3134:	0752      	lsls	r2, r2, #29
    3136:	430a      	orrs	r2, r1
    3138:	055b      	lsls	r3, r3, #21
    313a:	4690      	mov	r8, r2
    313c:	0d5c      	lsrs	r4, r3, #21
    313e:	465a      	mov	r2, fp
    3140:	2301      	movs	r3, #1
    3142:	9902      	ldr	r1, [sp, #8]
    3144:	0252      	lsls	r2, r2, #9
    3146:	4019      	ands	r1, r3
    3148:	0b12      	lsrs	r2, r2, #12
    314a:	468c      	mov	ip, r1
    314c:	e656      	b.n	2dfc <__aeabi_ddiv+0x19c>
    314e:	2b00      	cmp	r3, #0
    3150:	d100      	bne.n	3154 <__aeabi_ddiv+0x4f4>
    3152:	e76f      	b.n	3034 <__aeabi_ddiv+0x3d4>
    3154:	4446      	add	r6, r8
    3156:	1e4a      	subs	r2, r1, #1
    3158:	45b0      	cmp	r8, r6
    315a:	d929      	bls.n	31b0 <__aeabi_ddiv+0x550>
    315c:	0011      	movs	r1, r2
    315e:	4286      	cmp	r6, r0
    3160:	d000      	beq.n	3164 <__aeabi_ddiv+0x504>
    3162:	e765      	b.n	3030 <__aeabi_ddiv+0x3d0>
    3164:	9a03      	ldr	r2, [sp, #12]
    3166:	4293      	cmp	r3, r2
    3168:	d000      	beq.n	316c <__aeabi_ddiv+0x50c>
    316a:	e761      	b.n	3030 <__aeabi_ddiv+0x3d0>
    316c:	e762      	b.n	3034 <__aeabi_ddiv+0x3d4>
    316e:	2101      	movs	r1, #1
    3170:	4249      	negs	r1, r1
    3172:	2001      	movs	r0, #1
    3174:	1ac2      	subs	r2, r0, r3
    3176:	2a38      	cmp	r2, #56	; 0x38
    3178:	dd21      	ble.n	31be <__aeabi_ddiv+0x55e>
    317a:	9b02      	ldr	r3, [sp, #8]
    317c:	4003      	ands	r3, r0
    317e:	469c      	mov	ip, r3
    3180:	e638      	b.n	2df4 <__aeabi_ddiv+0x194>
    3182:	220f      	movs	r2, #15
    3184:	400a      	ands	r2, r1
    3186:	2a04      	cmp	r2, #4
    3188:	d100      	bne.n	318c <__aeabi_ddiv+0x52c>
    318a:	e75b      	b.n	3044 <__aeabi_ddiv+0x3e4>
    318c:	000a      	movs	r2, r1
    318e:	1d11      	adds	r1, r2, #4
    3190:	4291      	cmp	r1, r2
    3192:	4192      	sbcs	r2, r2
    3194:	4252      	negs	r2, r2
    3196:	4493      	add	fp, r2
    3198:	e754      	b.n	3044 <__aeabi_ddiv+0x3e4>
    319a:	4b47      	ldr	r3, [pc, #284]	; (32b8 <__aeabi_ddiv+0x658>)
    319c:	18e3      	adds	r3, r4, r3
    319e:	2b00      	cmp	r3, #0
    31a0:	dde5      	ble.n	316e <__aeabi_ddiv+0x50e>
    31a2:	2201      	movs	r2, #1
    31a4:	4252      	negs	r2, r2
    31a6:	e7f2      	b.n	318e <__aeabi_ddiv+0x52e>
    31a8:	001d      	movs	r5, r3
    31aa:	e6fa      	b.n	2fa2 <__aeabi_ddiv+0x342>
    31ac:	469a      	mov	sl, r3
    31ae:	e71c      	b.n	2fea <__aeabi_ddiv+0x38a>
    31b0:	42b0      	cmp	r0, r6
    31b2:	d839      	bhi.n	3228 <__aeabi_ddiv+0x5c8>
    31b4:	d06e      	beq.n	3294 <__aeabi_ddiv+0x634>
    31b6:	0011      	movs	r1, r2
    31b8:	e73a      	b.n	3030 <__aeabi_ddiv+0x3d0>
    31ba:	9302      	str	r3, [sp, #8]
    31bc:	e73a      	b.n	3034 <__aeabi_ddiv+0x3d4>
    31be:	2a1f      	cmp	r2, #31
    31c0:	dc3c      	bgt.n	323c <__aeabi_ddiv+0x5dc>
    31c2:	2320      	movs	r3, #32
    31c4:	1a9b      	subs	r3, r3, r2
    31c6:	000c      	movs	r4, r1
    31c8:	4658      	mov	r0, fp
    31ca:	4099      	lsls	r1, r3
    31cc:	4098      	lsls	r0, r3
    31ce:	1e4b      	subs	r3, r1, #1
    31d0:	4199      	sbcs	r1, r3
    31d2:	465b      	mov	r3, fp
    31d4:	40d4      	lsrs	r4, r2
    31d6:	40d3      	lsrs	r3, r2
    31d8:	4320      	orrs	r0, r4
    31da:	4308      	orrs	r0, r1
    31dc:	001a      	movs	r2, r3
    31de:	0743      	lsls	r3, r0, #29
    31e0:	d009      	beq.n	31f6 <__aeabi_ddiv+0x596>
    31e2:	230f      	movs	r3, #15
    31e4:	4003      	ands	r3, r0
    31e6:	2b04      	cmp	r3, #4
    31e8:	d005      	beq.n	31f6 <__aeabi_ddiv+0x596>
    31ea:	0001      	movs	r1, r0
    31ec:	1d08      	adds	r0, r1, #4
    31ee:	4288      	cmp	r0, r1
    31f0:	419b      	sbcs	r3, r3
    31f2:	425b      	negs	r3, r3
    31f4:	18d2      	adds	r2, r2, r3
    31f6:	0213      	lsls	r3, r2, #8
    31f8:	d53a      	bpl.n	3270 <__aeabi_ddiv+0x610>
    31fa:	2301      	movs	r3, #1
    31fc:	9a02      	ldr	r2, [sp, #8]
    31fe:	2401      	movs	r4, #1
    3200:	401a      	ands	r2, r3
    3202:	2300      	movs	r3, #0
    3204:	4694      	mov	ip, r2
    3206:	4698      	mov	r8, r3
    3208:	2200      	movs	r2, #0
    320a:	e5f7      	b.n	2dfc <__aeabi_ddiv+0x19c>
    320c:	2102      	movs	r1, #2
    320e:	4249      	negs	r1, r1
    3210:	468c      	mov	ip, r1
    3212:	9d03      	ldr	r5, [sp, #12]
    3214:	44e3      	add	fp, ip
    3216:	46ac      	mov	ip, r5
    3218:	44e2      	add	sl, ip
    321a:	45aa      	cmp	sl, r5
    321c:	41ad      	sbcs	r5, r5
    321e:	426d      	negs	r5, r5
    3220:	4445      	add	r5, r8
    3222:	18ed      	adds	r5, r5, r3
    3224:	1a2d      	subs	r5, r5, r0
    3226:	e696      	b.n	2f56 <__aeabi_ddiv+0x2f6>
    3228:	1e8a      	subs	r2, r1, #2
    322a:	9903      	ldr	r1, [sp, #12]
    322c:	004d      	lsls	r5, r1, #1
    322e:	428d      	cmp	r5, r1
    3230:	4189      	sbcs	r1, r1
    3232:	4249      	negs	r1, r1
    3234:	4441      	add	r1, r8
    3236:	1876      	adds	r6, r6, r1
    3238:	9503      	str	r5, [sp, #12]
    323a:	e78f      	b.n	315c <__aeabi_ddiv+0x4fc>
    323c:	201f      	movs	r0, #31
    323e:	4240      	negs	r0, r0
    3240:	1ac3      	subs	r3, r0, r3
    3242:	4658      	mov	r0, fp
    3244:	40d8      	lsrs	r0, r3
    3246:	0003      	movs	r3, r0
    3248:	2a20      	cmp	r2, #32
    324a:	d028      	beq.n	329e <__aeabi_ddiv+0x63e>
    324c:	2040      	movs	r0, #64	; 0x40
    324e:	465d      	mov	r5, fp
    3250:	1a82      	subs	r2, r0, r2
    3252:	4095      	lsls	r5, r2
    3254:	4329      	orrs	r1, r5
    3256:	1e4a      	subs	r2, r1, #1
    3258:	4191      	sbcs	r1, r2
    325a:	4319      	orrs	r1, r3
    325c:	2307      	movs	r3, #7
    325e:	2200      	movs	r2, #0
    3260:	400b      	ands	r3, r1
    3262:	d009      	beq.n	3278 <__aeabi_ddiv+0x618>
    3264:	230f      	movs	r3, #15
    3266:	2200      	movs	r2, #0
    3268:	400b      	ands	r3, r1
    326a:	0008      	movs	r0, r1
    326c:	2b04      	cmp	r3, #4
    326e:	d1bd      	bne.n	31ec <__aeabi_ddiv+0x58c>
    3270:	0001      	movs	r1, r0
    3272:	0753      	lsls	r3, r2, #29
    3274:	0252      	lsls	r2, r2, #9
    3276:	0b12      	lsrs	r2, r2, #12
    3278:	08c9      	lsrs	r1, r1, #3
    327a:	4319      	orrs	r1, r3
    327c:	2301      	movs	r3, #1
    327e:	4688      	mov	r8, r1
    3280:	9902      	ldr	r1, [sp, #8]
    3282:	2400      	movs	r4, #0
    3284:	4019      	ands	r1, r3
    3286:	468c      	mov	ip, r1
    3288:	e5b8      	b.n	2dfc <__aeabi_ddiv+0x19c>
    328a:	4552      	cmp	r2, sl
    328c:	d8be      	bhi.n	320c <__aeabi_ddiv+0x5ac>
    328e:	468b      	mov	fp, r1
    3290:	2500      	movs	r5, #0
    3292:	e660      	b.n	2f56 <__aeabi_ddiv+0x2f6>
    3294:	9d03      	ldr	r5, [sp, #12]
    3296:	429d      	cmp	r5, r3
    3298:	d3c6      	bcc.n	3228 <__aeabi_ddiv+0x5c8>
    329a:	0011      	movs	r1, r2
    329c:	e762      	b.n	3164 <__aeabi_ddiv+0x504>
    329e:	2500      	movs	r5, #0
    32a0:	e7d8      	b.n	3254 <__aeabi_ddiv+0x5f4>
    32a2:	2280      	movs	r2, #128	; 0x80
    32a4:	465b      	mov	r3, fp
    32a6:	0312      	lsls	r2, r2, #12
    32a8:	431a      	orrs	r2, r3
    32aa:	9b01      	ldr	r3, [sp, #4]
    32ac:	0312      	lsls	r2, r2, #12
    32ae:	0b12      	lsrs	r2, r2, #12
    32b0:	469c      	mov	ip, r3
    32b2:	4688      	mov	r8, r1
    32b4:	4c03      	ldr	r4, [pc, #12]	; (32c4 <__aeabi_ddiv+0x664>)
    32b6:	e5a1      	b.n	2dfc <__aeabi_ddiv+0x19c>
    32b8:	000003ff 	.word	0x000003ff
    32bc:	feffffff 	.word	0xfeffffff
    32c0:	000007fe 	.word	0x000007fe
    32c4:	000007ff 	.word	0x000007ff

000032c8 <__aeabi_dmul>:
    32c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    32ca:	4657      	mov	r7, sl
    32cc:	4645      	mov	r5, r8
    32ce:	46de      	mov	lr, fp
    32d0:	464e      	mov	r6, r9
    32d2:	b5e0      	push	{r5, r6, r7, lr}
    32d4:	030c      	lsls	r4, r1, #12
    32d6:	4698      	mov	r8, r3
    32d8:	004e      	lsls	r6, r1, #1
    32da:	0b23      	lsrs	r3, r4, #12
    32dc:	b087      	sub	sp, #28
    32de:	0007      	movs	r7, r0
    32e0:	4692      	mov	sl, r2
    32e2:	469b      	mov	fp, r3
    32e4:	0d76      	lsrs	r6, r6, #21
    32e6:	0fcd      	lsrs	r5, r1, #31
    32e8:	2e00      	cmp	r6, #0
    32ea:	d06b      	beq.n	33c4 <__aeabi_dmul+0xfc>
    32ec:	4b6d      	ldr	r3, [pc, #436]	; (34a4 <__aeabi_dmul+0x1dc>)
    32ee:	429e      	cmp	r6, r3
    32f0:	d035      	beq.n	335e <__aeabi_dmul+0x96>
    32f2:	2480      	movs	r4, #128	; 0x80
    32f4:	465b      	mov	r3, fp
    32f6:	0f42      	lsrs	r2, r0, #29
    32f8:	0424      	lsls	r4, r4, #16
    32fa:	00db      	lsls	r3, r3, #3
    32fc:	4314      	orrs	r4, r2
    32fe:	431c      	orrs	r4, r3
    3300:	00c3      	lsls	r3, r0, #3
    3302:	4699      	mov	r9, r3
    3304:	4b68      	ldr	r3, [pc, #416]	; (34a8 <__aeabi_dmul+0x1e0>)
    3306:	46a3      	mov	fp, r4
    3308:	469c      	mov	ip, r3
    330a:	2300      	movs	r3, #0
    330c:	2700      	movs	r7, #0
    330e:	4466      	add	r6, ip
    3310:	9302      	str	r3, [sp, #8]
    3312:	4643      	mov	r3, r8
    3314:	031c      	lsls	r4, r3, #12
    3316:	005a      	lsls	r2, r3, #1
    3318:	0fdb      	lsrs	r3, r3, #31
    331a:	4650      	mov	r0, sl
    331c:	0b24      	lsrs	r4, r4, #12
    331e:	0d52      	lsrs	r2, r2, #21
    3320:	4698      	mov	r8, r3
    3322:	d100      	bne.n	3326 <__aeabi_dmul+0x5e>
    3324:	e076      	b.n	3414 <__aeabi_dmul+0x14c>
    3326:	4b5f      	ldr	r3, [pc, #380]	; (34a4 <__aeabi_dmul+0x1dc>)
    3328:	429a      	cmp	r2, r3
    332a:	d06d      	beq.n	3408 <__aeabi_dmul+0x140>
    332c:	2380      	movs	r3, #128	; 0x80
    332e:	0f41      	lsrs	r1, r0, #29
    3330:	041b      	lsls	r3, r3, #16
    3332:	430b      	orrs	r3, r1
    3334:	495c      	ldr	r1, [pc, #368]	; (34a8 <__aeabi_dmul+0x1e0>)
    3336:	00e4      	lsls	r4, r4, #3
    3338:	468c      	mov	ip, r1
    333a:	431c      	orrs	r4, r3
    333c:	00c3      	lsls	r3, r0, #3
    333e:	2000      	movs	r0, #0
    3340:	4462      	add	r2, ip
    3342:	4641      	mov	r1, r8
    3344:	18b6      	adds	r6, r6, r2
    3346:	4069      	eors	r1, r5
    3348:	1c72      	adds	r2, r6, #1
    334a:	9101      	str	r1, [sp, #4]
    334c:	4694      	mov	ip, r2
    334e:	4307      	orrs	r7, r0
    3350:	2f0f      	cmp	r7, #15
    3352:	d900      	bls.n	3356 <__aeabi_dmul+0x8e>
    3354:	e0b0      	b.n	34b8 <__aeabi_dmul+0x1f0>
    3356:	4a55      	ldr	r2, [pc, #340]	; (34ac <__aeabi_dmul+0x1e4>)
    3358:	00bf      	lsls	r7, r7, #2
    335a:	59d2      	ldr	r2, [r2, r7]
    335c:	4697      	mov	pc, r2
    335e:	465b      	mov	r3, fp
    3360:	4303      	orrs	r3, r0
    3362:	4699      	mov	r9, r3
    3364:	d000      	beq.n	3368 <__aeabi_dmul+0xa0>
    3366:	e087      	b.n	3478 <__aeabi_dmul+0x1b0>
    3368:	2300      	movs	r3, #0
    336a:	469b      	mov	fp, r3
    336c:	3302      	adds	r3, #2
    336e:	2708      	movs	r7, #8
    3370:	9302      	str	r3, [sp, #8]
    3372:	e7ce      	b.n	3312 <__aeabi_dmul+0x4a>
    3374:	4642      	mov	r2, r8
    3376:	9201      	str	r2, [sp, #4]
    3378:	2802      	cmp	r0, #2
    337a:	d067      	beq.n	344c <__aeabi_dmul+0x184>
    337c:	2803      	cmp	r0, #3
    337e:	d100      	bne.n	3382 <__aeabi_dmul+0xba>
    3380:	e20e      	b.n	37a0 <__aeabi_dmul+0x4d8>
    3382:	2801      	cmp	r0, #1
    3384:	d000      	beq.n	3388 <__aeabi_dmul+0xc0>
    3386:	e162      	b.n	364e <__aeabi_dmul+0x386>
    3388:	2300      	movs	r3, #0
    338a:	2400      	movs	r4, #0
    338c:	2200      	movs	r2, #0
    338e:	4699      	mov	r9, r3
    3390:	9901      	ldr	r1, [sp, #4]
    3392:	4001      	ands	r1, r0
    3394:	b2cd      	uxtb	r5, r1
    3396:	2100      	movs	r1, #0
    3398:	0312      	lsls	r2, r2, #12
    339a:	0d0b      	lsrs	r3, r1, #20
    339c:	0b12      	lsrs	r2, r2, #12
    339e:	051b      	lsls	r3, r3, #20
    33a0:	4313      	orrs	r3, r2
    33a2:	4a43      	ldr	r2, [pc, #268]	; (34b0 <__aeabi_dmul+0x1e8>)
    33a4:	0524      	lsls	r4, r4, #20
    33a6:	4013      	ands	r3, r2
    33a8:	431c      	orrs	r4, r3
    33aa:	0064      	lsls	r4, r4, #1
    33ac:	07ed      	lsls	r5, r5, #31
    33ae:	0864      	lsrs	r4, r4, #1
    33b0:	432c      	orrs	r4, r5
    33b2:	4648      	mov	r0, r9
    33b4:	0021      	movs	r1, r4
    33b6:	b007      	add	sp, #28
    33b8:	bc3c      	pop	{r2, r3, r4, r5}
    33ba:	4690      	mov	r8, r2
    33bc:	4699      	mov	r9, r3
    33be:	46a2      	mov	sl, r4
    33c0:	46ab      	mov	fp, r5
    33c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    33c4:	4303      	orrs	r3, r0
    33c6:	4699      	mov	r9, r3
    33c8:	d04f      	beq.n	346a <__aeabi_dmul+0x1a2>
    33ca:	465b      	mov	r3, fp
    33cc:	2b00      	cmp	r3, #0
    33ce:	d100      	bne.n	33d2 <__aeabi_dmul+0x10a>
    33d0:	e189      	b.n	36e6 <__aeabi_dmul+0x41e>
    33d2:	4658      	mov	r0, fp
    33d4:	f000 fdfa 	bl	3fcc <__clzsi2>
    33d8:	0003      	movs	r3, r0
    33da:	3b0b      	subs	r3, #11
    33dc:	2b1c      	cmp	r3, #28
    33de:	dd00      	ble.n	33e2 <__aeabi_dmul+0x11a>
    33e0:	e17a      	b.n	36d8 <__aeabi_dmul+0x410>
    33e2:	221d      	movs	r2, #29
    33e4:	1ad3      	subs	r3, r2, r3
    33e6:	003a      	movs	r2, r7
    33e8:	0001      	movs	r1, r0
    33ea:	465c      	mov	r4, fp
    33ec:	40da      	lsrs	r2, r3
    33ee:	3908      	subs	r1, #8
    33f0:	408c      	lsls	r4, r1
    33f2:	0013      	movs	r3, r2
    33f4:	408f      	lsls	r7, r1
    33f6:	4323      	orrs	r3, r4
    33f8:	469b      	mov	fp, r3
    33fa:	46b9      	mov	r9, r7
    33fc:	2300      	movs	r3, #0
    33fe:	4e2d      	ldr	r6, [pc, #180]	; (34b4 <__aeabi_dmul+0x1ec>)
    3400:	2700      	movs	r7, #0
    3402:	1a36      	subs	r6, r6, r0
    3404:	9302      	str	r3, [sp, #8]
    3406:	e784      	b.n	3312 <__aeabi_dmul+0x4a>
    3408:	4653      	mov	r3, sl
    340a:	4323      	orrs	r3, r4
    340c:	d12a      	bne.n	3464 <__aeabi_dmul+0x19c>
    340e:	2400      	movs	r4, #0
    3410:	2002      	movs	r0, #2
    3412:	e796      	b.n	3342 <__aeabi_dmul+0x7a>
    3414:	4653      	mov	r3, sl
    3416:	4323      	orrs	r3, r4
    3418:	d020      	beq.n	345c <__aeabi_dmul+0x194>
    341a:	2c00      	cmp	r4, #0
    341c:	d100      	bne.n	3420 <__aeabi_dmul+0x158>
    341e:	e157      	b.n	36d0 <__aeabi_dmul+0x408>
    3420:	0020      	movs	r0, r4
    3422:	f000 fdd3 	bl	3fcc <__clzsi2>
    3426:	0003      	movs	r3, r0
    3428:	3b0b      	subs	r3, #11
    342a:	2b1c      	cmp	r3, #28
    342c:	dd00      	ble.n	3430 <__aeabi_dmul+0x168>
    342e:	e149      	b.n	36c4 <__aeabi_dmul+0x3fc>
    3430:	211d      	movs	r1, #29
    3432:	1acb      	subs	r3, r1, r3
    3434:	4651      	mov	r1, sl
    3436:	0002      	movs	r2, r0
    3438:	40d9      	lsrs	r1, r3
    343a:	4653      	mov	r3, sl
    343c:	3a08      	subs	r2, #8
    343e:	4094      	lsls	r4, r2
    3440:	4093      	lsls	r3, r2
    3442:	430c      	orrs	r4, r1
    3444:	4a1b      	ldr	r2, [pc, #108]	; (34b4 <__aeabi_dmul+0x1ec>)
    3446:	1a12      	subs	r2, r2, r0
    3448:	2000      	movs	r0, #0
    344a:	e77a      	b.n	3342 <__aeabi_dmul+0x7a>
    344c:	2501      	movs	r5, #1
    344e:	9b01      	ldr	r3, [sp, #4]
    3450:	4c14      	ldr	r4, [pc, #80]	; (34a4 <__aeabi_dmul+0x1dc>)
    3452:	401d      	ands	r5, r3
    3454:	2300      	movs	r3, #0
    3456:	2200      	movs	r2, #0
    3458:	4699      	mov	r9, r3
    345a:	e79c      	b.n	3396 <__aeabi_dmul+0xce>
    345c:	2400      	movs	r4, #0
    345e:	2200      	movs	r2, #0
    3460:	2001      	movs	r0, #1
    3462:	e76e      	b.n	3342 <__aeabi_dmul+0x7a>
    3464:	4653      	mov	r3, sl
    3466:	2003      	movs	r0, #3
    3468:	e76b      	b.n	3342 <__aeabi_dmul+0x7a>
    346a:	2300      	movs	r3, #0
    346c:	469b      	mov	fp, r3
    346e:	3301      	adds	r3, #1
    3470:	2704      	movs	r7, #4
    3472:	2600      	movs	r6, #0
    3474:	9302      	str	r3, [sp, #8]
    3476:	e74c      	b.n	3312 <__aeabi_dmul+0x4a>
    3478:	2303      	movs	r3, #3
    347a:	4681      	mov	r9, r0
    347c:	270c      	movs	r7, #12
    347e:	9302      	str	r3, [sp, #8]
    3480:	e747      	b.n	3312 <__aeabi_dmul+0x4a>
    3482:	2280      	movs	r2, #128	; 0x80
    3484:	2300      	movs	r3, #0
    3486:	2500      	movs	r5, #0
    3488:	0312      	lsls	r2, r2, #12
    348a:	4699      	mov	r9, r3
    348c:	4c05      	ldr	r4, [pc, #20]	; (34a4 <__aeabi_dmul+0x1dc>)
    348e:	e782      	b.n	3396 <__aeabi_dmul+0xce>
    3490:	465c      	mov	r4, fp
    3492:	464b      	mov	r3, r9
    3494:	9802      	ldr	r0, [sp, #8]
    3496:	e76f      	b.n	3378 <__aeabi_dmul+0xb0>
    3498:	465c      	mov	r4, fp
    349a:	464b      	mov	r3, r9
    349c:	9501      	str	r5, [sp, #4]
    349e:	9802      	ldr	r0, [sp, #8]
    34a0:	e76a      	b.n	3378 <__aeabi_dmul+0xb0>
    34a2:	46c0      	nop			; (mov r8, r8)
    34a4:	000007ff 	.word	0x000007ff
    34a8:	fffffc01 	.word	0xfffffc01
    34ac:	00009c3c 	.word	0x00009c3c
    34b0:	800fffff 	.word	0x800fffff
    34b4:	fffffc0d 	.word	0xfffffc0d
    34b8:	464a      	mov	r2, r9
    34ba:	4649      	mov	r1, r9
    34bc:	0c17      	lsrs	r7, r2, #16
    34be:	0c1a      	lsrs	r2, r3, #16
    34c0:	041b      	lsls	r3, r3, #16
    34c2:	0c1b      	lsrs	r3, r3, #16
    34c4:	0408      	lsls	r0, r1, #16
    34c6:	0019      	movs	r1, r3
    34c8:	0c00      	lsrs	r0, r0, #16
    34ca:	4341      	muls	r1, r0
    34cc:	0015      	movs	r5, r2
    34ce:	4688      	mov	r8, r1
    34d0:	0019      	movs	r1, r3
    34d2:	437d      	muls	r5, r7
    34d4:	4379      	muls	r1, r7
    34d6:	9503      	str	r5, [sp, #12]
    34d8:	4689      	mov	r9, r1
    34da:	0029      	movs	r1, r5
    34dc:	0015      	movs	r5, r2
    34de:	4345      	muls	r5, r0
    34e0:	444d      	add	r5, r9
    34e2:	9502      	str	r5, [sp, #8]
    34e4:	4645      	mov	r5, r8
    34e6:	0c2d      	lsrs	r5, r5, #16
    34e8:	46aa      	mov	sl, r5
    34ea:	9d02      	ldr	r5, [sp, #8]
    34ec:	4455      	add	r5, sl
    34ee:	45a9      	cmp	r9, r5
    34f0:	d906      	bls.n	3500 <__aeabi_dmul+0x238>
    34f2:	468a      	mov	sl, r1
    34f4:	2180      	movs	r1, #128	; 0x80
    34f6:	0249      	lsls	r1, r1, #9
    34f8:	4689      	mov	r9, r1
    34fa:	44ca      	add	sl, r9
    34fc:	4651      	mov	r1, sl
    34fe:	9103      	str	r1, [sp, #12]
    3500:	0c29      	lsrs	r1, r5, #16
    3502:	9104      	str	r1, [sp, #16]
    3504:	4641      	mov	r1, r8
    3506:	0409      	lsls	r1, r1, #16
    3508:	042d      	lsls	r5, r5, #16
    350a:	0c09      	lsrs	r1, r1, #16
    350c:	4688      	mov	r8, r1
    350e:	0029      	movs	r1, r5
    3510:	0c25      	lsrs	r5, r4, #16
    3512:	0424      	lsls	r4, r4, #16
    3514:	4441      	add	r1, r8
    3516:	0c24      	lsrs	r4, r4, #16
    3518:	9105      	str	r1, [sp, #20]
    351a:	0021      	movs	r1, r4
    351c:	4341      	muls	r1, r0
    351e:	4688      	mov	r8, r1
    3520:	0021      	movs	r1, r4
    3522:	4379      	muls	r1, r7
    3524:	468a      	mov	sl, r1
    3526:	4368      	muls	r0, r5
    3528:	4641      	mov	r1, r8
    352a:	4450      	add	r0, sl
    352c:	4681      	mov	r9, r0
    352e:	0c08      	lsrs	r0, r1, #16
    3530:	4448      	add	r0, r9
    3532:	436f      	muls	r7, r5
    3534:	4582      	cmp	sl, r0
    3536:	d903      	bls.n	3540 <__aeabi_dmul+0x278>
    3538:	2180      	movs	r1, #128	; 0x80
    353a:	0249      	lsls	r1, r1, #9
    353c:	4689      	mov	r9, r1
    353e:	444f      	add	r7, r9
    3540:	0c01      	lsrs	r1, r0, #16
    3542:	4689      	mov	r9, r1
    3544:	0039      	movs	r1, r7
    3546:	4449      	add	r1, r9
    3548:	9102      	str	r1, [sp, #8]
    354a:	4641      	mov	r1, r8
    354c:	040f      	lsls	r7, r1, #16
    354e:	9904      	ldr	r1, [sp, #16]
    3550:	0c3f      	lsrs	r7, r7, #16
    3552:	4688      	mov	r8, r1
    3554:	0400      	lsls	r0, r0, #16
    3556:	19c0      	adds	r0, r0, r7
    3558:	4480      	add	r8, r0
    355a:	4641      	mov	r1, r8
    355c:	9104      	str	r1, [sp, #16]
    355e:	4659      	mov	r1, fp
    3560:	0c0f      	lsrs	r7, r1, #16
    3562:	0409      	lsls	r1, r1, #16
    3564:	0c09      	lsrs	r1, r1, #16
    3566:	4688      	mov	r8, r1
    3568:	4359      	muls	r1, r3
    356a:	468a      	mov	sl, r1
    356c:	0039      	movs	r1, r7
    356e:	4351      	muls	r1, r2
    3570:	4689      	mov	r9, r1
    3572:	4641      	mov	r1, r8
    3574:	434a      	muls	r2, r1
    3576:	4651      	mov	r1, sl
    3578:	0c09      	lsrs	r1, r1, #16
    357a:	468b      	mov	fp, r1
    357c:	437b      	muls	r3, r7
    357e:	18d2      	adds	r2, r2, r3
    3580:	445a      	add	r2, fp
    3582:	4293      	cmp	r3, r2
    3584:	d903      	bls.n	358e <__aeabi_dmul+0x2c6>
    3586:	2380      	movs	r3, #128	; 0x80
    3588:	025b      	lsls	r3, r3, #9
    358a:	469b      	mov	fp, r3
    358c:	44d9      	add	r9, fp
    358e:	4651      	mov	r1, sl
    3590:	0409      	lsls	r1, r1, #16
    3592:	0c09      	lsrs	r1, r1, #16
    3594:	468a      	mov	sl, r1
    3596:	4641      	mov	r1, r8
    3598:	4361      	muls	r1, r4
    359a:	437c      	muls	r4, r7
    359c:	0c13      	lsrs	r3, r2, #16
    359e:	0412      	lsls	r2, r2, #16
    35a0:	444b      	add	r3, r9
    35a2:	4452      	add	r2, sl
    35a4:	46a1      	mov	r9, r4
    35a6:	468a      	mov	sl, r1
    35a8:	003c      	movs	r4, r7
    35aa:	4641      	mov	r1, r8
    35ac:	436c      	muls	r4, r5
    35ae:	434d      	muls	r5, r1
    35b0:	4651      	mov	r1, sl
    35b2:	444d      	add	r5, r9
    35b4:	0c0f      	lsrs	r7, r1, #16
    35b6:	197d      	adds	r5, r7, r5
    35b8:	45a9      	cmp	r9, r5
    35ba:	d903      	bls.n	35c4 <__aeabi_dmul+0x2fc>
    35bc:	2180      	movs	r1, #128	; 0x80
    35be:	0249      	lsls	r1, r1, #9
    35c0:	4688      	mov	r8, r1
    35c2:	4444      	add	r4, r8
    35c4:	9f04      	ldr	r7, [sp, #16]
    35c6:	9903      	ldr	r1, [sp, #12]
    35c8:	46b8      	mov	r8, r7
    35ca:	4441      	add	r1, r8
    35cc:	468b      	mov	fp, r1
    35ce:	4583      	cmp	fp, r0
    35d0:	4180      	sbcs	r0, r0
    35d2:	4241      	negs	r1, r0
    35d4:	4688      	mov	r8, r1
    35d6:	4651      	mov	r1, sl
    35d8:	0408      	lsls	r0, r1, #16
    35da:	042f      	lsls	r7, r5, #16
    35dc:	0c00      	lsrs	r0, r0, #16
    35de:	183f      	adds	r7, r7, r0
    35e0:	4658      	mov	r0, fp
    35e2:	9902      	ldr	r1, [sp, #8]
    35e4:	1810      	adds	r0, r2, r0
    35e6:	4689      	mov	r9, r1
    35e8:	4290      	cmp	r0, r2
    35ea:	4192      	sbcs	r2, r2
    35ec:	444f      	add	r7, r9
    35ee:	46ba      	mov	sl, r7
    35f0:	4252      	negs	r2, r2
    35f2:	4699      	mov	r9, r3
    35f4:	4693      	mov	fp, r2
    35f6:	44c2      	add	sl, r8
    35f8:	44d1      	add	r9, sl
    35fa:	44cb      	add	fp, r9
    35fc:	428f      	cmp	r7, r1
    35fe:	41bf      	sbcs	r7, r7
    3600:	45c2      	cmp	sl, r8
    3602:	4189      	sbcs	r1, r1
    3604:	4599      	cmp	r9, r3
    3606:	419b      	sbcs	r3, r3
    3608:	4593      	cmp	fp, r2
    360a:	4192      	sbcs	r2, r2
    360c:	427f      	negs	r7, r7
    360e:	4249      	negs	r1, r1
    3610:	0c2d      	lsrs	r5, r5, #16
    3612:	4252      	negs	r2, r2
    3614:	430f      	orrs	r7, r1
    3616:	425b      	negs	r3, r3
    3618:	4313      	orrs	r3, r2
    361a:	197f      	adds	r7, r7, r5
    361c:	18ff      	adds	r7, r7, r3
    361e:	465b      	mov	r3, fp
    3620:	193c      	adds	r4, r7, r4
    3622:	0ddb      	lsrs	r3, r3, #23
    3624:	9a05      	ldr	r2, [sp, #20]
    3626:	0264      	lsls	r4, r4, #9
    3628:	431c      	orrs	r4, r3
    362a:	0243      	lsls	r3, r0, #9
    362c:	4313      	orrs	r3, r2
    362e:	1e5d      	subs	r5, r3, #1
    3630:	41ab      	sbcs	r3, r5
    3632:	465a      	mov	r2, fp
    3634:	0dc0      	lsrs	r0, r0, #23
    3636:	4303      	orrs	r3, r0
    3638:	0252      	lsls	r2, r2, #9
    363a:	4313      	orrs	r3, r2
    363c:	01e2      	lsls	r2, r4, #7
    363e:	d556      	bpl.n	36ee <__aeabi_dmul+0x426>
    3640:	2001      	movs	r0, #1
    3642:	085a      	lsrs	r2, r3, #1
    3644:	4003      	ands	r3, r0
    3646:	4313      	orrs	r3, r2
    3648:	07e2      	lsls	r2, r4, #31
    364a:	4313      	orrs	r3, r2
    364c:	0864      	lsrs	r4, r4, #1
    364e:	485a      	ldr	r0, [pc, #360]	; (37b8 <__aeabi_dmul+0x4f0>)
    3650:	4460      	add	r0, ip
    3652:	2800      	cmp	r0, #0
    3654:	dd4d      	ble.n	36f2 <__aeabi_dmul+0x42a>
    3656:	075a      	lsls	r2, r3, #29
    3658:	d009      	beq.n	366e <__aeabi_dmul+0x3a6>
    365a:	220f      	movs	r2, #15
    365c:	401a      	ands	r2, r3
    365e:	2a04      	cmp	r2, #4
    3660:	d005      	beq.n	366e <__aeabi_dmul+0x3a6>
    3662:	1d1a      	adds	r2, r3, #4
    3664:	429a      	cmp	r2, r3
    3666:	419b      	sbcs	r3, r3
    3668:	425b      	negs	r3, r3
    366a:	18e4      	adds	r4, r4, r3
    366c:	0013      	movs	r3, r2
    366e:	01e2      	lsls	r2, r4, #7
    3670:	d504      	bpl.n	367c <__aeabi_dmul+0x3b4>
    3672:	2080      	movs	r0, #128	; 0x80
    3674:	4a51      	ldr	r2, [pc, #324]	; (37bc <__aeabi_dmul+0x4f4>)
    3676:	00c0      	lsls	r0, r0, #3
    3678:	4014      	ands	r4, r2
    367a:	4460      	add	r0, ip
    367c:	4a50      	ldr	r2, [pc, #320]	; (37c0 <__aeabi_dmul+0x4f8>)
    367e:	4290      	cmp	r0, r2
    3680:	dd00      	ble.n	3684 <__aeabi_dmul+0x3bc>
    3682:	e6e3      	b.n	344c <__aeabi_dmul+0x184>
    3684:	2501      	movs	r5, #1
    3686:	08db      	lsrs	r3, r3, #3
    3688:	0762      	lsls	r2, r4, #29
    368a:	431a      	orrs	r2, r3
    368c:	0264      	lsls	r4, r4, #9
    368e:	9b01      	ldr	r3, [sp, #4]
    3690:	4691      	mov	r9, r2
    3692:	0b22      	lsrs	r2, r4, #12
    3694:	0544      	lsls	r4, r0, #21
    3696:	0d64      	lsrs	r4, r4, #21
    3698:	401d      	ands	r5, r3
    369a:	e67c      	b.n	3396 <__aeabi_dmul+0xce>
    369c:	2280      	movs	r2, #128	; 0x80
    369e:	4659      	mov	r1, fp
    36a0:	0312      	lsls	r2, r2, #12
    36a2:	4211      	tst	r1, r2
    36a4:	d008      	beq.n	36b8 <__aeabi_dmul+0x3f0>
    36a6:	4214      	tst	r4, r2
    36a8:	d106      	bne.n	36b8 <__aeabi_dmul+0x3f0>
    36aa:	4322      	orrs	r2, r4
    36ac:	0312      	lsls	r2, r2, #12
    36ae:	0b12      	lsrs	r2, r2, #12
    36b0:	4645      	mov	r5, r8
    36b2:	4699      	mov	r9, r3
    36b4:	4c43      	ldr	r4, [pc, #268]	; (37c4 <__aeabi_dmul+0x4fc>)
    36b6:	e66e      	b.n	3396 <__aeabi_dmul+0xce>
    36b8:	465b      	mov	r3, fp
    36ba:	431a      	orrs	r2, r3
    36bc:	0312      	lsls	r2, r2, #12
    36be:	0b12      	lsrs	r2, r2, #12
    36c0:	4c40      	ldr	r4, [pc, #256]	; (37c4 <__aeabi_dmul+0x4fc>)
    36c2:	e668      	b.n	3396 <__aeabi_dmul+0xce>
    36c4:	0003      	movs	r3, r0
    36c6:	4654      	mov	r4, sl
    36c8:	3b28      	subs	r3, #40	; 0x28
    36ca:	409c      	lsls	r4, r3
    36cc:	2300      	movs	r3, #0
    36ce:	e6b9      	b.n	3444 <__aeabi_dmul+0x17c>
    36d0:	f000 fc7c 	bl	3fcc <__clzsi2>
    36d4:	3020      	adds	r0, #32
    36d6:	e6a6      	b.n	3426 <__aeabi_dmul+0x15e>
    36d8:	0003      	movs	r3, r0
    36da:	3b28      	subs	r3, #40	; 0x28
    36dc:	409f      	lsls	r7, r3
    36de:	2300      	movs	r3, #0
    36e0:	46bb      	mov	fp, r7
    36e2:	4699      	mov	r9, r3
    36e4:	e68a      	b.n	33fc <__aeabi_dmul+0x134>
    36e6:	f000 fc71 	bl	3fcc <__clzsi2>
    36ea:	3020      	adds	r0, #32
    36ec:	e674      	b.n	33d8 <__aeabi_dmul+0x110>
    36ee:	46b4      	mov	ip, r6
    36f0:	e7ad      	b.n	364e <__aeabi_dmul+0x386>
    36f2:	2501      	movs	r5, #1
    36f4:	1a2a      	subs	r2, r5, r0
    36f6:	2a38      	cmp	r2, #56	; 0x38
    36f8:	dd06      	ble.n	3708 <__aeabi_dmul+0x440>
    36fa:	9b01      	ldr	r3, [sp, #4]
    36fc:	2400      	movs	r4, #0
    36fe:	401d      	ands	r5, r3
    3700:	2300      	movs	r3, #0
    3702:	2200      	movs	r2, #0
    3704:	4699      	mov	r9, r3
    3706:	e646      	b.n	3396 <__aeabi_dmul+0xce>
    3708:	2a1f      	cmp	r2, #31
    370a:	dc21      	bgt.n	3750 <__aeabi_dmul+0x488>
    370c:	2520      	movs	r5, #32
    370e:	0020      	movs	r0, r4
    3710:	1aad      	subs	r5, r5, r2
    3712:	001e      	movs	r6, r3
    3714:	40ab      	lsls	r3, r5
    3716:	40a8      	lsls	r0, r5
    3718:	40d6      	lsrs	r6, r2
    371a:	1e5d      	subs	r5, r3, #1
    371c:	41ab      	sbcs	r3, r5
    371e:	4330      	orrs	r0, r6
    3720:	4318      	orrs	r0, r3
    3722:	40d4      	lsrs	r4, r2
    3724:	0743      	lsls	r3, r0, #29
    3726:	d009      	beq.n	373c <__aeabi_dmul+0x474>
    3728:	230f      	movs	r3, #15
    372a:	4003      	ands	r3, r0
    372c:	2b04      	cmp	r3, #4
    372e:	d005      	beq.n	373c <__aeabi_dmul+0x474>
    3730:	0003      	movs	r3, r0
    3732:	1d18      	adds	r0, r3, #4
    3734:	4298      	cmp	r0, r3
    3736:	419b      	sbcs	r3, r3
    3738:	425b      	negs	r3, r3
    373a:	18e4      	adds	r4, r4, r3
    373c:	0223      	lsls	r3, r4, #8
    373e:	d521      	bpl.n	3784 <__aeabi_dmul+0x4bc>
    3740:	2501      	movs	r5, #1
    3742:	9b01      	ldr	r3, [sp, #4]
    3744:	2401      	movs	r4, #1
    3746:	401d      	ands	r5, r3
    3748:	2300      	movs	r3, #0
    374a:	2200      	movs	r2, #0
    374c:	4699      	mov	r9, r3
    374e:	e622      	b.n	3396 <__aeabi_dmul+0xce>
    3750:	251f      	movs	r5, #31
    3752:	0021      	movs	r1, r4
    3754:	426d      	negs	r5, r5
    3756:	1a28      	subs	r0, r5, r0
    3758:	40c1      	lsrs	r1, r0
    375a:	0008      	movs	r0, r1
    375c:	2a20      	cmp	r2, #32
    375e:	d01d      	beq.n	379c <__aeabi_dmul+0x4d4>
    3760:	355f      	adds	r5, #95	; 0x5f
    3762:	1aaa      	subs	r2, r5, r2
    3764:	4094      	lsls	r4, r2
    3766:	4323      	orrs	r3, r4
    3768:	1e5c      	subs	r4, r3, #1
    376a:	41a3      	sbcs	r3, r4
    376c:	2507      	movs	r5, #7
    376e:	4303      	orrs	r3, r0
    3770:	401d      	ands	r5, r3
    3772:	2200      	movs	r2, #0
    3774:	2d00      	cmp	r5, #0
    3776:	d009      	beq.n	378c <__aeabi_dmul+0x4c4>
    3778:	220f      	movs	r2, #15
    377a:	2400      	movs	r4, #0
    377c:	401a      	ands	r2, r3
    377e:	0018      	movs	r0, r3
    3780:	2a04      	cmp	r2, #4
    3782:	d1d6      	bne.n	3732 <__aeabi_dmul+0x46a>
    3784:	0003      	movs	r3, r0
    3786:	0765      	lsls	r5, r4, #29
    3788:	0264      	lsls	r4, r4, #9
    378a:	0b22      	lsrs	r2, r4, #12
    378c:	08db      	lsrs	r3, r3, #3
    378e:	432b      	orrs	r3, r5
    3790:	2501      	movs	r5, #1
    3792:	4699      	mov	r9, r3
    3794:	9b01      	ldr	r3, [sp, #4]
    3796:	2400      	movs	r4, #0
    3798:	401d      	ands	r5, r3
    379a:	e5fc      	b.n	3396 <__aeabi_dmul+0xce>
    379c:	2400      	movs	r4, #0
    379e:	e7e2      	b.n	3766 <__aeabi_dmul+0x49e>
    37a0:	2280      	movs	r2, #128	; 0x80
    37a2:	2501      	movs	r5, #1
    37a4:	0312      	lsls	r2, r2, #12
    37a6:	4322      	orrs	r2, r4
    37a8:	9901      	ldr	r1, [sp, #4]
    37aa:	0312      	lsls	r2, r2, #12
    37ac:	0b12      	lsrs	r2, r2, #12
    37ae:	400d      	ands	r5, r1
    37b0:	4699      	mov	r9, r3
    37b2:	4c04      	ldr	r4, [pc, #16]	; (37c4 <__aeabi_dmul+0x4fc>)
    37b4:	e5ef      	b.n	3396 <__aeabi_dmul+0xce>
    37b6:	46c0      	nop			; (mov r8, r8)
    37b8:	000003ff 	.word	0x000003ff
    37bc:	feffffff 	.word	0xfeffffff
    37c0:	000007fe 	.word	0x000007fe
    37c4:	000007ff 	.word	0x000007ff

000037c8 <__aeabi_dsub>:
    37c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    37ca:	4646      	mov	r6, r8
    37cc:	46d6      	mov	lr, sl
    37ce:	464f      	mov	r7, r9
    37d0:	030c      	lsls	r4, r1, #12
    37d2:	b5c0      	push	{r6, r7, lr}
    37d4:	0fcd      	lsrs	r5, r1, #31
    37d6:	004e      	lsls	r6, r1, #1
    37d8:	0a61      	lsrs	r1, r4, #9
    37da:	0f44      	lsrs	r4, r0, #29
    37dc:	430c      	orrs	r4, r1
    37de:	00c1      	lsls	r1, r0, #3
    37e0:	0058      	lsls	r0, r3, #1
    37e2:	0d40      	lsrs	r0, r0, #21
    37e4:	4684      	mov	ip, r0
    37e6:	468a      	mov	sl, r1
    37e8:	000f      	movs	r7, r1
    37ea:	0319      	lsls	r1, r3, #12
    37ec:	0f50      	lsrs	r0, r2, #29
    37ee:	0a49      	lsrs	r1, r1, #9
    37f0:	4301      	orrs	r1, r0
    37f2:	48c6      	ldr	r0, [pc, #792]	; (3b0c <__aeabi_dsub+0x344>)
    37f4:	0d76      	lsrs	r6, r6, #21
    37f6:	46a8      	mov	r8, r5
    37f8:	0fdb      	lsrs	r3, r3, #31
    37fa:	00d2      	lsls	r2, r2, #3
    37fc:	4584      	cmp	ip, r0
    37fe:	d100      	bne.n	3802 <__aeabi_dsub+0x3a>
    3800:	e0d8      	b.n	39b4 <__aeabi_dsub+0x1ec>
    3802:	2001      	movs	r0, #1
    3804:	4043      	eors	r3, r0
    3806:	42ab      	cmp	r3, r5
    3808:	d100      	bne.n	380c <__aeabi_dsub+0x44>
    380a:	e0a6      	b.n	395a <__aeabi_dsub+0x192>
    380c:	4660      	mov	r0, ip
    380e:	1a35      	subs	r5, r6, r0
    3810:	2d00      	cmp	r5, #0
    3812:	dc00      	bgt.n	3816 <__aeabi_dsub+0x4e>
    3814:	e105      	b.n	3a22 <__aeabi_dsub+0x25a>
    3816:	2800      	cmp	r0, #0
    3818:	d110      	bne.n	383c <__aeabi_dsub+0x74>
    381a:	000b      	movs	r3, r1
    381c:	4313      	orrs	r3, r2
    381e:	d100      	bne.n	3822 <__aeabi_dsub+0x5a>
    3820:	e0d7      	b.n	39d2 <__aeabi_dsub+0x20a>
    3822:	1e6b      	subs	r3, r5, #1
    3824:	2b00      	cmp	r3, #0
    3826:	d000      	beq.n	382a <__aeabi_dsub+0x62>
    3828:	e14b      	b.n	3ac2 <__aeabi_dsub+0x2fa>
    382a:	4653      	mov	r3, sl
    382c:	1a9f      	subs	r7, r3, r2
    382e:	45ba      	cmp	sl, r7
    3830:	4180      	sbcs	r0, r0
    3832:	1a64      	subs	r4, r4, r1
    3834:	4240      	negs	r0, r0
    3836:	1a24      	subs	r4, r4, r0
    3838:	2601      	movs	r6, #1
    383a:	e01e      	b.n	387a <__aeabi_dsub+0xb2>
    383c:	4bb3      	ldr	r3, [pc, #716]	; (3b0c <__aeabi_dsub+0x344>)
    383e:	429e      	cmp	r6, r3
    3840:	d048      	beq.n	38d4 <__aeabi_dsub+0x10c>
    3842:	2380      	movs	r3, #128	; 0x80
    3844:	041b      	lsls	r3, r3, #16
    3846:	4319      	orrs	r1, r3
    3848:	2d38      	cmp	r5, #56	; 0x38
    384a:	dd00      	ble.n	384e <__aeabi_dsub+0x86>
    384c:	e119      	b.n	3a82 <__aeabi_dsub+0x2ba>
    384e:	2d1f      	cmp	r5, #31
    3850:	dd00      	ble.n	3854 <__aeabi_dsub+0x8c>
    3852:	e14c      	b.n	3aee <__aeabi_dsub+0x326>
    3854:	2320      	movs	r3, #32
    3856:	000f      	movs	r7, r1
    3858:	1b5b      	subs	r3, r3, r5
    385a:	0010      	movs	r0, r2
    385c:	409a      	lsls	r2, r3
    385e:	409f      	lsls	r7, r3
    3860:	40e8      	lsrs	r0, r5
    3862:	1e53      	subs	r3, r2, #1
    3864:	419a      	sbcs	r2, r3
    3866:	40e9      	lsrs	r1, r5
    3868:	4307      	orrs	r7, r0
    386a:	4317      	orrs	r7, r2
    386c:	4653      	mov	r3, sl
    386e:	1bdf      	subs	r7, r3, r7
    3870:	1a61      	subs	r1, r4, r1
    3872:	45ba      	cmp	sl, r7
    3874:	41a4      	sbcs	r4, r4
    3876:	4264      	negs	r4, r4
    3878:	1b0c      	subs	r4, r1, r4
    387a:	0223      	lsls	r3, r4, #8
    387c:	d400      	bmi.n	3880 <__aeabi_dsub+0xb8>
    387e:	e0c5      	b.n	3a0c <__aeabi_dsub+0x244>
    3880:	0264      	lsls	r4, r4, #9
    3882:	0a65      	lsrs	r5, r4, #9
    3884:	2d00      	cmp	r5, #0
    3886:	d100      	bne.n	388a <__aeabi_dsub+0xc2>
    3888:	e0f6      	b.n	3a78 <__aeabi_dsub+0x2b0>
    388a:	0028      	movs	r0, r5
    388c:	f000 fb9e 	bl	3fcc <__clzsi2>
    3890:	0003      	movs	r3, r0
    3892:	3b08      	subs	r3, #8
    3894:	2b1f      	cmp	r3, #31
    3896:	dd00      	ble.n	389a <__aeabi_dsub+0xd2>
    3898:	e0e9      	b.n	3a6e <__aeabi_dsub+0x2a6>
    389a:	2220      	movs	r2, #32
    389c:	003c      	movs	r4, r7
    389e:	1ad2      	subs	r2, r2, r3
    38a0:	409d      	lsls	r5, r3
    38a2:	40d4      	lsrs	r4, r2
    38a4:	409f      	lsls	r7, r3
    38a6:	4325      	orrs	r5, r4
    38a8:	429e      	cmp	r6, r3
    38aa:	dd00      	ble.n	38ae <__aeabi_dsub+0xe6>
    38ac:	e0db      	b.n	3a66 <__aeabi_dsub+0x29e>
    38ae:	1b9e      	subs	r6, r3, r6
    38b0:	1c73      	adds	r3, r6, #1
    38b2:	2b1f      	cmp	r3, #31
    38b4:	dd00      	ble.n	38b8 <__aeabi_dsub+0xf0>
    38b6:	e10a      	b.n	3ace <__aeabi_dsub+0x306>
    38b8:	2220      	movs	r2, #32
    38ba:	0038      	movs	r0, r7
    38bc:	1ad2      	subs	r2, r2, r3
    38be:	0029      	movs	r1, r5
    38c0:	4097      	lsls	r7, r2
    38c2:	002c      	movs	r4, r5
    38c4:	4091      	lsls	r1, r2
    38c6:	40d8      	lsrs	r0, r3
    38c8:	1e7a      	subs	r2, r7, #1
    38ca:	4197      	sbcs	r7, r2
    38cc:	40dc      	lsrs	r4, r3
    38ce:	2600      	movs	r6, #0
    38d0:	4301      	orrs	r1, r0
    38d2:	430f      	orrs	r7, r1
    38d4:	077b      	lsls	r3, r7, #29
    38d6:	d009      	beq.n	38ec <__aeabi_dsub+0x124>
    38d8:	230f      	movs	r3, #15
    38da:	403b      	ands	r3, r7
    38dc:	2b04      	cmp	r3, #4
    38de:	d005      	beq.n	38ec <__aeabi_dsub+0x124>
    38e0:	1d3b      	adds	r3, r7, #4
    38e2:	42bb      	cmp	r3, r7
    38e4:	41bf      	sbcs	r7, r7
    38e6:	427f      	negs	r7, r7
    38e8:	19e4      	adds	r4, r4, r7
    38ea:	001f      	movs	r7, r3
    38ec:	0223      	lsls	r3, r4, #8
    38ee:	d525      	bpl.n	393c <__aeabi_dsub+0x174>
    38f0:	4b86      	ldr	r3, [pc, #536]	; (3b0c <__aeabi_dsub+0x344>)
    38f2:	3601      	adds	r6, #1
    38f4:	429e      	cmp	r6, r3
    38f6:	d100      	bne.n	38fa <__aeabi_dsub+0x132>
    38f8:	e0af      	b.n	3a5a <__aeabi_dsub+0x292>
    38fa:	4b85      	ldr	r3, [pc, #532]	; (3b10 <__aeabi_dsub+0x348>)
    38fc:	2501      	movs	r5, #1
    38fe:	401c      	ands	r4, r3
    3900:	4643      	mov	r3, r8
    3902:	0762      	lsls	r2, r4, #29
    3904:	08ff      	lsrs	r7, r7, #3
    3906:	0264      	lsls	r4, r4, #9
    3908:	0576      	lsls	r6, r6, #21
    390a:	4317      	orrs	r7, r2
    390c:	0b24      	lsrs	r4, r4, #12
    390e:	0d76      	lsrs	r6, r6, #21
    3910:	401d      	ands	r5, r3
    3912:	2100      	movs	r1, #0
    3914:	0324      	lsls	r4, r4, #12
    3916:	0b23      	lsrs	r3, r4, #12
    3918:	0d0c      	lsrs	r4, r1, #20
    391a:	4a7e      	ldr	r2, [pc, #504]	; (3b14 <__aeabi_dsub+0x34c>)
    391c:	0524      	lsls	r4, r4, #20
    391e:	431c      	orrs	r4, r3
    3920:	4014      	ands	r4, r2
    3922:	0533      	lsls	r3, r6, #20
    3924:	4323      	orrs	r3, r4
    3926:	005b      	lsls	r3, r3, #1
    3928:	07ed      	lsls	r5, r5, #31
    392a:	085b      	lsrs	r3, r3, #1
    392c:	432b      	orrs	r3, r5
    392e:	0038      	movs	r0, r7
    3930:	0019      	movs	r1, r3
    3932:	bc1c      	pop	{r2, r3, r4}
    3934:	4690      	mov	r8, r2
    3936:	4699      	mov	r9, r3
    3938:	46a2      	mov	sl, r4
    393a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    393c:	2501      	movs	r5, #1
    393e:	4643      	mov	r3, r8
    3940:	0762      	lsls	r2, r4, #29
    3942:	08ff      	lsrs	r7, r7, #3
    3944:	4317      	orrs	r7, r2
    3946:	08e4      	lsrs	r4, r4, #3
    3948:	401d      	ands	r5, r3
    394a:	4b70      	ldr	r3, [pc, #448]	; (3b0c <__aeabi_dsub+0x344>)
    394c:	429e      	cmp	r6, r3
    394e:	d036      	beq.n	39be <__aeabi_dsub+0x1f6>
    3950:	0324      	lsls	r4, r4, #12
    3952:	0576      	lsls	r6, r6, #21
    3954:	0b24      	lsrs	r4, r4, #12
    3956:	0d76      	lsrs	r6, r6, #21
    3958:	e7db      	b.n	3912 <__aeabi_dsub+0x14a>
    395a:	4663      	mov	r3, ip
    395c:	1af3      	subs	r3, r6, r3
    395e:	2b00      	cmp	r3, #0
    3960:	dc00      	bgt.n	3964 <__aeabi_dsub+0x19c>
    3962:	e094      	b.n	3a8e <__aeabi_dsub+0x2c6>
    3964:	4660      	mov	r0, ip
    3966:	2800      	cmp	r0, #0
    3968:	d035      	beq.n	39d6 <__aeabi_dsub+0x20e>
    396a:	4868      	ldr	r0, [pc, #416]	; (3b0c <__aeabi_dsub+0x344>)
    396c:	4286      	cmp	r6, r0
    396e:	d0b1      	beq.n	38d4 <__aeabi_dsub+0x10c>
    3970:	2780      	movs	r7, #128	; 0x80
    3972:	043f      	lsls	r7, r7, #16
    3974:	4339      	orrs	r1, r7
    3976:	2b38      	cmp	r3, #56	; 0x38
    3978:	dc00      	bgt.n	397c <__aeabi_dsub+0x1b4>
    397a:	e0fd      	b.n	3b78 <__aeabi_dsub+0x3b0>
    397c:	430a      	orrs	r2, r1
    397e:	0017      	movs	r7, r2
    3980:	2100      	movs	r1, #0
    3982:	1e7a      	subs	r2, r7, #1
    3984:	4197      	sbcs	r7, r2
    3986:	4457      	add	r7, sl
    3988:	4557      	cmp	r7, sl
    398a:	4180      	sbcs	r0, r0
    398c:	1909      	adds	r1, r1, r4
    398e:	4244      	negs	r4, r0
    3990:	190c      	adds	r4, r1, r4
    3992:	0223      	lsls	r3, r4, #8
    3994:	d53a      	bpl.n	3a0c <__aeabi_dsub+0x244>
    3996:	4b5d      	ldr	r3, [pc, #372]	; (3b0c <__aeabi_dsub+0x344>)
    3998:	3601      	adds	r6, #1
    399a:	429e      	cmp	r6, r3
    399c:	d100      	bne.n	39a0 <__aeabi_dsub+0x1d8>
    399e:	e14b      	b.n	3c38 <__aeabi_dsub+0x470>
    39a0:	2201      	movs	r2, #1
    39a2:	4b5b      	ldr	r3, [pc, #364]	; (3b10 <__aeabi_dsub+0x348>)
    39a4:	401c      	ands	r4, r3
    39a6:	087b      	lsrs	r3, r7, #1
    39a8:	4017      	ands	r7, r2
    39aa:	431f      	orrs	r7, r3
    39ac:	07e2      	lsls	r2, r4, #31
    39ae:	4317      	orrs	r7, r2
    39b0:	0864      	lsrs	r4, r4, #1
    39b2:	e78f      	b.n	38d4 <__aeabi_dsub+0x10c>
    39b4:	0008      	movs	r0, r1
    39b6:	4310      	orrs	r0, r2
    39b8:	d000      	beq.n	39bc <__aeabi_dsub+0x1f4>
    39ba:	e724      	b.n	3806 <__aeabi_dsub+0x3e>
    39bc:	e721      	b.n	3802 <__aeabi_dsub+0x3a>
    39be:	0023      	movs	r3, r4
    39c0:	433b      	orrs	r3, r7
    39c2:	d100      	bne.n	39c6 <__aeabi_dsub+0x1fe>
    39c4:	e1b9      	b.n	3d3a <__aeabi_dsub+0x572>
    39c6:	2280      	movs	r2, #128	; 0x80
    39c8:	0312      	lsls	r2, r2, #12
    39ca:	4314      	orrs	r4, r2
    39cc:	0324      	lsls	r4, r4, #12
    39ce:	0b24      	lsrs	r4, r4, #12
    39d0:	e79f      	b.n	3912 <__aeabi_dsub+0x14a>
    39d2:	002e      	movs	r6, r5
    39d4:	e77e      	b.n	38d4 <__aeabi_dsub+0x10c>
    39d6:	0008      	movs	r0, r1
    39d8:	4310      	orrs	r0, r2
    39da:	d100      	bne.n	39de <__aeabi_dsub+0x216>
    39dc:	e0ca      	b.n	3b74 <__aeabi_dsub+0x3ac>
    39de:	1e58      	subs	r0, r3, #1
    39e0:	4684      	mov	ip, r0
    39e2:	2800      	cmp	r0, #0
    39e4:	d000      	beq.n	39e8 <__aeabi_dsub+0x220>
    39e6:	e0e7      	b.n	3bb8 <__aeabi_dsub+0x3f0>
    39e8:	4452      	add	r2, sl
    39ea:	4552      	cmp	r2, sl
    39ec:	4180      	sbcs	r0, r0
    39ee:	1864      	adds	r4, r4, r1
    39f0:	4240      	negs	r0, r0
    39f2:	1824      	adds	r4, r4, r0
    39f4:	0017      	movs	r7, r2
    39f6:	2601      	movs	r6, #1
    39f8:	0223      	lsls	r3, r4, #8
    39fa:	d507      	bpl.n	3a0c <__aeabi_dsub+0x244>
    39fc:	2602      	movs	r6, #2
    39fe:	e7cf      	b.n	39a0 <__aeabi_dsub+0x1d8>
    3a00:	4664      	mov	r4, ip
    3a02:	432c      	orrs	r4, r5
    3a04:	d100      	bne.n	3a08 <__aeabi_dsub+0x240>
    3a06:	e1b3      	b.n	3d70 <__aeabi_dsub+0x5a8>
    3a08:	002c      	movs	r4, r5
    3a0a:	4667      	mov	r7, ip
    3a0c:	077b      	lsls	r3, r7, #29
    3a0e:	d000      	beq.n	3a12 <__aeabi_dsub+0x24a>
    3a10:	e762      	b.n	38d8 <__aeabi_dsub+0x110>
    3a12:	0763      	lsls	r3, r4, #29
    3a14:	08ff      	lsrs	r7, r7, #3
    3a16:	431f      	orrs	r7, r3
    3a18:	2501      	movs	r5, #1
    3a1a:	4643      	mov	r3, r8
    3a1c:	08e4      	lsrs	r4, r4, #3
    3a1e:	401d      	ands	r5, r3
    3a20:	e793      	b.n	394a <__aeabi_dsub+0x182>
    3a22:	2d00      	cmp	r5, #0
    3a24:	d178      	bne.n	3b18 <__aeabi_dsub+0x350>
    3a26:	1c75      	adds	r5, r6, #1
    3a28:	056d      	lsls	r5, r5, #21
    3a2a:	0d6d      	lsrs	r5, r5, #21
    3a2c:	2d01      	cmp	r5, #1
    3a2e:	dc00      	bgt.n	3a32 <__aeabi_dsub+0x26a>
    3a30:	e0f2      	b.n	3c18 <__aeabi_dsub+0x450>
    3a32:	4650      	mov	r0, sl
    3a34:	1a80      	subs	r0, r0, r2
    3a36:	4582      	cmp	sl, r0
    3a38:	41bf      	sbcs	r7, r7
    3a3a:	1a65      	subs	r5, r4, r1
    3a3c:	427f      	negs	r7, r7
    3a3e:	1bed      	subs	r5, r5, r7
    3a40:	4684      	mov	ip, r0
    3a42:	0228      	lsls	r0, r5, #8
    3a44:	d400      	bmi.n	3a48 <__aeabi_dsub+0x280>
    3a46:	e08c      	b.n	3b62 <__aeabi_dsub+0x39a>
    3a48:	4650      	mov	r0, sl
    3a4a:	1a17      	subs	r7, r2, r0
    3a4c:	42ba      	cmp	r2, r7
    3a4e:	4192      	sbcs	r2, r2
    3a50:	1b0c      	subs	r4, r1, r4
    3a52:	4255      	negs	r5, r2
    3a54:	1b65      	subs	r5, r4, r5
    3a56:	4698      	mov	r8, r3
    3a58:	e714      	b.n	3884 <__aeabi_dsub+0xbc>
    3a5a:	2501      	movs	r5, #1
    3a5c:	4643      	mov	r3, r8
    3a5e:	2400      	movs	r4, #0
    3a60:	401d      	ands	r5, r3
    3a62:	2700      	movs	r7, #0
    3a64:	e755      	b.n	3912 <__aeabi_dsub+0x14a>
    3a66:	4c2a      	ldr	r4, [pc, #168]	; (3b10 <__aeabi_dsub+0x348>)
    3a68:	1af6      	subs	r6, r6, r3
    3a6a:	402c      	ands	r4, r5
    3a6c:	e732      	b.n	38d4 <__aeabi_dsub+0x10c>
    3a6e:	003d      	movs	r5, r7
    3a70:	3828      	subs	r0, #40	; 0x28
    3a72:	4085      	lsls	r5, r0
    3a74:	2700      	movs	r7, #0
    3a76:	e717      	b.n	38a8 <__aeabi_dsub+0xe0>
    3a78:	0038      	movs	r0, r7
    3a7a:	f000 faa7 	bl	3fcc <__clzsi2>
    3a7e:	3020      	adds	r0, #32
    3a80:	e706      	b.n	3890 <__aeabi_dsub+0xc8>
    3a82:	430a      	orrs	r2, r1
    3a84:	0017      	movs	r7, r2
    3a86:	2100      	movs	r1, #0
    3a88:	1e7a      	subs	r2, r7, #1
    3a8a:	4197      	sbcs	r7, r2
    3a8c:	e6ee      	b.n	386c <__aeabi_dsub+0xa4>
    3a8e:	2b00      	cmp	r3, #0
    3a90:	d000      	beq.n	3a94 <__aeabi_dsub+0x2cc>
    3a92:	e0e5      	b.n	3c60 <__aeabi_dsub+0x498>
    3a94:	1c73      	adds	r3, r6, #1
    3a96:	469c      	mov	ip, r3
    3a98:	055b      	lsls	r3, r3, #21
    3a9a:	0d5b      	lsrs	r3, r3, #21
    3a9c:	2b01      	cmp	r3, #1
    3a9e:	dc00      	bgt.n	3aa2 <__aeabi_dsub+0x2da>
    3aa0:	e09f      	b.n	3be2 <__aeabi_dsub+0x41a>
    3aa2:	4b1a      	ldr	r3, [pc, #104]	; (3b0c <__aeabi_dsub+0x344>)
    3aa4:	459c      	cmp	ip, r3
    3aa6:	d100      	bne.n	3aaa <__aeabi_dsub+0x2e2>
    3aa8:	e0c5      	b.n	3c36 <__aeabi_dsub+0x46e>
    3aaa:	4452      	add	r2, sl
    3aac:	4552      	cmp	r2, sl
    3aae:	4180      	sbcs	r0, r0
    3ab0:	1864      	adds	r4, r4, r1
    3ab2:	4240      	negs	r0, r0
    3ab4:	1824      	adds	r4, r4, r0
    3ab6:	07e7      	lsls	r7, r4, #31
    3ab8:	0852      	lsrs	r2, r2, #1
    3aba:	4317      	orrs	r7, r2
    3abc:	0864      	lsrs	r4, r4, #1
    3abe:	4666      	mov	r6, ip
    3ac0:	e708      	b.n	38d4 <__aeabi_dsub+0x10c>
    3ac2:	4812      	ldr	r0, [pc, #72]	; (3b0c <__aeabi_dsub+0x344>)
    3ac4:	4285      	cmp	r5, r0
    3ac6:	d100      	bne.n	3aca <__aeabi_dsub+0x302>
    3ac8:	e085      	b.n	3bd6 <__aeabi_dsub+0x40e>
    3aca:	001d      	movs	r5, r3
    3acc:	e6bc      	b.n	3848 <__aeabi_dsub+0x80>
    3ace:	0029      	movs	r1, r5
    3ad0:	3e1f      	subs	r6, #31
    3ad2:	40f1      	lsrs	r1, r6
    3ad4:	2b20      	cmp	r3, #32
    3ad6:	d100      	bne.n	3ada <__aeabi_dsub+0x312>
    3ad8:	e07f      	b.n	3bda <__aeabi_dsub+0x412>
    3ada:	2240      	movs	r2, #64	; 0x40
    3adc:	1ad3      	subs	r3, r2, r3
    3ade:	409d      	lsls	r5, r3
    3ae0:	432f      	orrs	r7, r5
    3ae2:	1e7d      	subs	r5, r7, #1
    3ae4:	41af      	sbcs	r7, r5
    3ae6:	2400      	movs	r4, #0
    3ae8:	430f      	orrs	r7, r1
    3aea:	2600      	movs	r6, #0
    3aec:	e78e      	b.n	3a0c <__aeabi_dsub+0x244>
    3aee:	002b      	movs	r3, r5
    3af0:	000f      	movs	r7, r1
    3af2:	3b20      	subs	r3, #32
    3af4:	40df      	lsrs	r7, r3
    3af6:	2d20      	cmp	r5, #32
    3af8:	d071      	beq.n	3bde <__aeabi_dsub+0x416>
    3afa:	2340      	movs	r3, #64	; 0x40
    3afc:	1b5d      	subs	r5, r3, r5
    3afe:	40a9      	lsls	r1, r5
    3b00:	430a      	orrs	r2, r1
    3b02:	1e51      	subs	r1, r2, #1
    3b04:	418a      	sbcs	r2, r1
    3b06:	2100      	movs	r1, #0
    3b08:	4317      	orrs	r7, r2
    3b0a:	e6af      	b.n	386c <__aeabi_dsub+0xa4>
    3b0c:	000007ff 	.word	0x000007ff
    3b10:	ff7fffff 	.word	0xff7fffff
    3b14:	800fffff 	.word	0x800fffff
    3b18:	2e00      	cmp	r6, #0
    3b1a:	d03e      	beq.n	3b9a <__aeabi_dsub+0x3d2>
    3b1c:	4eb3      	ldr	r6, [pc, #716]	; (3dec <__aeabi_dsub+0x624>)
    3b1e:	45b4      	cmp	ip, r6
    3b20:	d045      	beq.n	3bae <__aeabi_dsub+0x3e6>
    3b22:	2680      	movs	r6, #128	; 0x80
    3b24:	0436      	lsls	r6, r6, #16
    3b26:	426d      	negs	r5, r5
    3b28:	4334      	orrs	r4, r6
    3b2a:	2d38      	cmp	r5, #56	; 0x38
    3b2c:	dd00      	ble.n	3b30 <__aeabi_dsub+0x368>
    3b2e:	e0a8      	b.n	3c82 <__aeabi_dsub+0x4ba>
    3b30:	2d1f      	cmp	r5, #31
    3b32:	dd00      	ble.n	3b36 <__aeabi_dsub+0x36e>
    3b34:	e11f      	b.n	3d76 <__aeabi_dsub+0x5ae>
    3b36:	2620      	movs	r6, #32
    3b38:	0027      	movs	r7, r4
    3b3a:	4650      	mov	r0, sl
    3b3c:	1b76      	subs	r6, r6, r5
    3b3e:	40b7      	lsls	r7, r6
    3b40:	40e8      	lsrs	r0, r5
    3b42:	4307      	orrs	r7, r0
    3b44:	4650      	mov	r0, sl
    3b46:	40b0      	lsls	r0, r6
    3b48:	1e46      	subs	r6, r0, #1
    3b4a:	41b0      	sbcs	r0, r6
    3b4c:	40ec      	lsrs	r4, r5
    3b4e:	4338      	orrs	r0, r7
    3b50:	1a17      	subs	r7, r2, r0
    3b52:	42ba      	cmp	r2, r7
    3b54:	4192      	sbcs	r2, r2
    3b56:	1b0c      	subs	r4, r1, r4
    3b58:	4252      	negs	r2, r2
    3b5a:	1aa4      	subs	r4, r4, r2
    3b5c:	4666      	mov	r6, ip
    3b5e:	4698      	mov	r8, r3
    3b60:	e68b      	b.n	387a <__aeabi_dsub+0xb2>
    3b62:	4664      	mov	r4, ip
    3b64:	4667      	mov	r7, ip
    3b66:	432c      	orrs	r4, r5
    3b68:	d000      	beq.n	3b6c <__aeabi_dsub+0x3a4>
    3b6a:	e68b      	b.n	3884 <__aeabi_dsub+0xbc>
    3b6c:	2500      	movs	r5, #0
    3b6e:	2600      	movs	r6, #0
    3b70:	2700      	movs	r7, #0
    3b72:	e6ea      	b.n	394a <__aeabi_dsub+0x182>
    3b74:	001e      	movs	r6, r3
    3b76:	e6ad      	b.n	38d4 <__aeabi_dsub+0x10c>
    3b78:	2b1f      	cmp	r3, #31
    3b7a:	dc60      	bgt.n	3c3e <__aeabi_dsub+0x476>
    3b7c:	2720      	movs	r7, #32
    3b7e:	1af8      	subs	r0, r7, r3
    3b80:	000f      	movs	r7, r1
    3b82:	4684      	mov	ip, r0
    3b84:	4087      	lsls	r7, r0
    3b86:	0010      	movs	r0, r2
    3b88:	40d8      	lsrs	r0, r3
    3b8a:	4307      	orrs	r7, r0
    3b8c:	4660      	mov	r0, ip
    3b8e:	4082      	lsls	r2, r0
    3b90:	1e50      	subs	r0, r2, #1
    3b92:	4182      	sbcs	r2, r0
    3b94:	40d9      	lsrs	r1, r3
    3b96:	4317      	orrs	r7, r2
    3b98:	e6f5      	b.n	3986 <__aeabi_dsub+0x1be>
    3b9a:	0026      	movs	r6, r4
    3b9c:	4650      	mov	r0, sl
    3b9e:	4306      	orrs	r6, r0
    3ba0:	d005      	beq.n	3bae <__aeabi_dsub+0x3e6>
    3ba2:	43ed      	mvns	r5, r5
    3ba4:	2d00      	cmp	r5, #0
    3ba6:	d0d3      	beq.n	3b50 <__aeabi_dsub+0x388>
    3ba8:	4e90      	ldr	r6, [pc, #576]	; (3dec <__aeabi_dsub+0x624>)
    3baa:	45b4      	cmp	ip, r6
    3bac:	d1bd      	bne.n	3b2a <__aeabi_dsub+0x362>
    3bae:	000c      	movs	r4, r1
    3bb0:	0017      	movs	r7, r2
    3bb2:	4666      	mov	r6, ip
    3bb4:	4698      	mov	r8, r3
    3bb6:	e68d      	b.n	38d4 <__aeabi_dsub+0x10c>
    3bb8:	488c      	ldr	r0, [pc, #560]	; (3dec <__aeabi_dsub+0x624>)
    3bba:	4283      	cmp	r3, r0
    3bbc:	d00b      	beq.n	3bd6 <__aeabi_dsub+0x40e>
    3bbe:	4663      	mov	r3, ip
    3bc0:	e6d9      	b.n	3976 <__aeabi_dsub+0x1ae>
    3bc2:	2d00      	cmp	r5, #0
    3bc4:	d000      	beq.n	3bc8 <__aeabi_dsub+0x400>
    3bc6:	e096      	b.n	3cf6 <__aeabi_dsub+0x52e>
    3bc8:	0008      	movs	r0, r1
    3bca:	4310      	orrs	r0, r2
    3bcc:	d100      	bne.n	3bd0 <__aeabi_dsub+0x408>
    3bce:	e0e2      	b.n	3d96 <__aeabi_dsub+0x5ce>
    3bd0:	000c      	movs	r4, r1
    3bd2:	0017      	movs	r7, r2
    3bd4:	4698      	mov	r8, r3
    3bd6:	4e85      	ldr	r6, [pc, #532]	; (3dec <__aeabi_dsub+0x624>)
    3bd8:	e67c      	b.n	38d4 <__aeabi_dsub+0x10c>
    3bda:	2500      	movs	r5, #0
    3bdc:	e780      	b.n	3ae0 <__aeabi_dsub+0x318>
    3bde:	2100      	movs	r1, #0
    3be0:	e78e      	b.n	3b00 <__aeabi_dsub+0x338>
    3be2:	0023      	movs	r3, r4
    3be4:	4650      	mov	r0, sl
    3be6:	4303      	orrs	r3, r0
    3be8:	2e00      	cmp	r6, #0
    3bea:	d000      	beq.n	3bee <__aeabi_dsub+0x426>
    3bec:	e0a8      	b.n	3d40 <__aeabi_dsub+0x578>
    3bee:	2b00      	cmp	r3, #0
    3bf0:	d100      	bne.n	3bf4 <__aeabi_dsub+0x42c>
    3bf2:	e0de      	b.n	3db2 <__aeabi_dsub+0x5ea>
    3bf4:	000b      	movs	r3, r1
    3bf6:	4313      	orrs	r3, r2
    3bf8:	d100      	bne.n	3bfc <__aeabi_dsub+0x434>
    3bfa:	e66b      	b.n	38d4 <__aeabi_dsub+0x10c>
    3bfc:	4452      	add	r2, sl
    3bfe:	4552      	cmp	r2, sl
    3c00:	4180      	sbcs	r0, r0
    3c02:	1864      	adds	r4, r4, r1
    3c04:	4240      	negs	r0, r0
    3c06:	1824      	adds	r4, r4, r0
    3c08:	0017      	movs	r7, r2
    3c0a:	0223      	lsls	r3, r4, #8
    3c0c:	d400      	bmi.n	3c10 <__aeabi_dsub+0x448>
    3c0e:	e6fd      	b.n	3a0c <__aeabi_dsub+0x244>
    3c10:	4b77      	ldr	r3, [pc, #476]	; (3df0 <__aeabi_dsub+0x628>)
    3c12:	4666      	mov	r6, ip
    3c14:	401c      	ands	r4, r3
    3c16:	e65d      	b.n	38d4 <__aeabi_dsub+0x10c>
    3c18:	0025      	movs	r5, r4
    3c1a:	4650      	mov	r0, sl
    3c1c:	4305      	orrs	r5, r0
    3c1e:	2e00      	cmp	r6, #0
    3c20:	d1cf      	bne.n	3bc2 <__aeabi_dsub+0x3fa>
    3c22:	2d00      	cmp	r5, #0
    3c24:	d14f      	bne.n	3cc6 <__aeabi_dsub+0x4fe>
    3c26:	000c      	movs	r4, r1
    3c28:	4314      	orrs	r4, r2
    3c2a:	d100      	bne.n	3c2e <__aeabi_dsub+0x466>
    3c2c:	e0a0      	b.n	3d70 <__aeabi_dsub+0x5a8>
    3c2e:	000c      	movs	r4, r1
    3c30:	0017      	movs	r7, r2
    3c32:	4698      	mov	r8, r3
    3c34:	e64e      	b.n	38d4 <__aeabi_dsub+0x10c>
    3c36:	4666      	mov	r6, ip
    3c38:	2400      	movs	r4, #0
    3c3a:	2700      	movs	r7, #0
    3c3c:	e685      	b.n	394a <__aeabi_dsub+0x182>
    3c3e:	001f      	movs	r7, r3
    3c40:	0008      	movs	r0, r1
    3c42:	3f20      	subs	r7, #32
    3c44:	40f8      	lsrs	r0, r7
    3c46:	0007      	movs	r7, r0
    3c48:	2b20      	cmp	r3, #32
    3c4a:	d100      	bne.n	3c4e <__aeabi_dsub+0x486>
    3c4c:	e08e      	b.n	3d6c <__aeabi_dsub+0x5a4>
    3c4e:	2040      	movs	r0, #64	; 0x40
    3c50:	1ac3      	subs	r3, r0, r3
    3c52:	4099      	lsls	r1, r3
    3c54:	430a      	orrs	r2, r1
    3c56:	1e51      	subs	r1, r2, #1
    3c58:	418a      	sbcs	r2, r1
    3c5a:	2100      	movs	r1, #0
    3c5c:	4317      	orrs	r7, r2
    3c5e:	e692      	b.n	3986 <__aeabi_dsub+0x1be>
    3c60:	2e00      	cmp	r6, #0
    3c62:	d114      	bne.n	3c8e <__aeabi_dsub+0x4c6>
    3c64:	0026      	movs	r6, r4
    3c66:	4650      	mov	r0, sl
    3c68:	4306      	orrs	r6, r0
    3c6a:	d062      	beq.n	3d32 <__aeabi_dsub+0x56a>
    3c6c:	43db      	mvns	r3, r3
    3c6e:	2b00      	cmp	r3, #0
    3c70:	d15c      	bne.n	3d2c <__aeabi_dsub+0x564>
    3c72:	1887      	adds	r7, r0, r2
    3c74:	4297      	cmp	r7, r2
    3c76:	4192      	sbcs	r2, r2
    3c78:	1864      	adds	r4, r4, r1
    3c7a:	4252      	negs	r2, r2
    3c7c:	18a4      	adds	r4, r4, r2
    3c7e:	4666      	mov	r6, ip
    3c80:	e687      	b.n	3992 <__aeabi_dsub+0x1ca>
    3c82:	4650      	mov	r0, sl
    3c84:	4320      	orrs	r0, r4
    3c86:	1e44      	subs	r4, r0, #1
    3c88:	41a0      	sbcs	r0, r4
    3c8a:	2400      	movs	r4, #0
    3c8c:	e760      	b.n	3b50 <__aeabi_dsub+0x388>
    3c8e:	4e57      	ldr	r6, [pc, #348]	; (3dec <__aeabi_dsub+0x624>)
    3c90:	45b4      	cmp	ip, r6
    3c92:	d04e      	beq.n	3d32 <__aeabi_dsub+0x56a>
    3c94:	2680      	movs	r6, #128	; 0x80
    3c96:	0436      	lsls	r6, r6, #16
    3c98:	425b      	negs	r3, r3
    3c9a:	4334      	orrs	r4, r6
    3c9c:	2b38      	cmp	r3, #56	; 0x38
    3c9e:	dd00      	ble.n	3ca2 <__aeabi_dsub+0x4da>
    3ca0:	e07f      	b.n	3da2 <__aeabi_dsub+0x5da>
    3ca2:	2b1f      	cmp	r3, #31
    3ca4:	dd00      	ble.n	3ca8 <__aeabi_dsub+0x4e0>
    3ca6:	e08b      	b.n	3dc0 <__aeabi_dsub+0x5f8>
    3ca8:	2620      	movs	r6, #32
    3caa:	0027      	movs	r7, r4
    3cac:	4650      	mov	r0, sl
    3cae:	1af6      	subs	r6, r6, r3
    3cb0:	40b7      	lsls	r7, r6
    3cb2:	40d8      	lsrs	r0, r3
    3cb4:	4307      	orrs	r7, r0
    3cb6:	4650      	mov	r0, sl
    3cb8:	40b0      	lsls	r0, r6
    3cba:	1e46      	subs	r6, r0, #1
    3cbc:	41b0      	sbcs	r0, r6
    3cbe:	4307      	orrs	r7, r0
    3cc0:	40dc      	lsrs	r4, r3
    3cc2:	18bf      	adds	r7, r7, r2
    3cc4:	e7d6      	b.n	3c74 <__aeabi_dsub+0x4ac>
    3cc6:	000d      	movs	r5, r1
    3cc8:	4315      	orrs	r5, r2
    3cca:	d100      	bne.n	3cce <__aeabi_dsub+0x506>
    3ccc:	e602      	b.n	38d4 <__aeabi_dsub+0x10c>
    3cce:	4650      	mov	r0, sl
    3cd0:	1a80      	subs	r0, r0, r2
    3cd2:	4582      	cmp	sl, r0
    3cd4:	41bf      	sbcs	r7, r7
    3cd6:	1a65      	subs	r5, r4, r1
    3cd8:	427f      	negs	r7, r7
    3cda:	1bed      	subs	r5, r5, r7
    3cdc:	4684      	mov	ip, r0
    3cde:	0228      	lsls	r0, r5, #8
    3ce0:	d400      	bmi.n	3ce4 <__aeabi_dsub+0x51c>
    3ce2:	e68d      	b.n	3a00 <__aeabi_dsub+0x238>
    3ce4:	4650      	mov	r0, sl
    3ce6:	1a17      	subs	r7, r2, r0
    3ce8:	42ba      	cmp	r2, r7
    3cea:	4192      	sbcs	r2, r2
    3cec:	1b0c      	subs	r4, r1, r4
    3cee:	4252      	negs	r2, r2
    3cf0:	1aa4      	subs	r4, r4, r2
    3cf2:	4698      	mov	r8, r3
    3cf4:	e5ee      	b.n	38d4 <__aeabi_dsub+0x10c>
    3cf6:	000d      	movs	r5, r1
    3cf8:	4315      	orrs	r5, r2
    3cfa:	d100      	bne.n	3cfe <__aeabi_dsub+0x536>
    3cfc:	e76b      	b.n	3bd6 <__aeabi_dsub+0x40e>
    3cfe:	4650      	mov	r0, sl
    3d00:	0767      	lsls	r7, r4, #29
    3d02:	08c0      	lsrs	r0, r0, #3
    3d04:	4307      	orrs	r7, r0
    3d06:	2080      	movs	r0, #128	; 0x80
    3d08:	08e4      	lsrs	r4, r4, #3
    3d0a:	0300      	lsls	r0, r0, #12
    3d0c:	4204      	tst	r4, r0
    3d0e:	d007      	beq.n	3d20 <__aeabi_dsub+0x558>
    3d10:	08cd      	lsrs	r5, r1, #3
    3d12:	4205      	tst	r5, r0
    3d14:	d104      	bne.n	3d20 <__aeabi_dsub+0x558>
    3d16:	002c      	movs	r4, r5
    3d18:	4698      	mov	r8, r3
    3d1a:	08d7      	lsrs	r7, r2, #3
    3d1c:	0749      	lsls	r1, r1, #29
    3d1e:	430f      	orrs	r7, r1
    3d20:	0f7b      	lsrs	r3, r7, #29
    3d22:	00e4      	lsls	r4, r4, #3
    3d24:	431c      	orrs	r4, r3
    3d26:	00ff      	lsls	r7, r7, #3
    3d28:	4e30      	ldr	r6, [pc, #192]	; (3dec <__aeabi_dsub+0x624>)
    3d2a:	e5d3      	b.n	38d4 <__aeabi_dsub+0x10c>
    3d2c:	4e2f      	ldr	r6, [pc, #188]	; (3dec <__aeabi_dsub+0x624>)
    3d2e:	45b4      	cmp	ip, r6
    3d30:	d1b4      	bne.n	3c9c <__aeabi_dsub+0x4d4>
    3d32:	000c      	movs	r4, r1
    3d34:	0017      	movs	r7, r2
    3d36:	4666      	mov	r6, ip
    3d38:	e5cc      	b.n	38d4 <__aeabi_dsub+0x10c>
    3d3a:	2700      	movs	r7, #0
    3d3c:	2400      	movs	r4, #0
    3d3e:	e5e8      	b.n	3912 <__aeabi_dsub+0x14a>
    3d40:	2b00      	cmp	r3, #0
    3d42:	d039      	beq.n	3db8 <__aeabi_dsub+0x5f0>
    3d44:	000b      	movs	r3, r1
    3d46:	4313      	orrs	r3, r2
    3d48:	d100      	bne.n	3d4c <__aeabi_dsub+0x584>
    3d4a:	e744      	b.n	3bd6 <__aeabi_dsub+0x40e>
    3d4c:	08c0      	lsrs	r0, r0, #3
    3d4e:	0767      	lsls	r7, r4, #29
    3d50:	4307      	orrs	r7, r0
    3d52:	2080      	movs	r0, #128	; 0x80
    3d54:	08e4      	lsrs	r4, r4, #3
    3d56:	0300      	lsls	r0, r0, #12
    3d58:	4204      	tst	r4, r0
    3d5a:	d0e1      	beq.n	3d20 <__aeabi_dsub+0x558>
    3d5c:	08cb      	lsrs	r3, r1, #3
    3d5e:	4203      	tst	r3, r0
    3d60:	d1de      	bne.n	3d20 <__aeabi_dsub+0x558>
    3d62:	08d7      	lsrs	r7, r2, #3
    3d64:	0749      	lsls	r1, r1, #29
    3d66:	430f      	orrs	r7, r1
    3d68:	001c      	movs	r4, r3
    3d6a:	e7d9      	b.n	3d20 <__aeabi_dsub+0x558>
    3d6c:	2100      	movs	r1, #0
    3d6e:	e771      	b.n	3c54 <__aeabi_dsub+0x48c>
    3d70:	2500      	movs	r5, #0
    3d72:	2700      	movs	r7, #0
    3d74:	e5e9      	b.n	394a <__aeabi_dsub+0x182>
    3d76:	002e      	movs	r6, r5
    3d78:	0027      	movs	r7, r4
    3d7a:	3e20      	subs	r6, #32
    3d7c:	40f7      	lsrs	r7, r6
    3d7e:	2d20      	cmp	r5, #32
    3d80:	d02f      	beq.n	3de2 <__aeabi_dsub+0x61a>
    3d82:	2640      	movs	r6, #64	; 0x40
    3d84:	1b75      	subs	r5, r6, r5
    3d86:	40ac      	lsls	r4, r5
    3d88:	4650      	mov	r0, sl
    3d8a:	4320      	orrs	r0, r4
    3d8c:	1e44      	subs	r4, r0, #1
    3d8e:	41a0      	sbcs	r0, r4
    3d90:	2400      	movs	r4, #0
    3d92:	4338      	orrs	r0, r7
    3d94:	e6dc      	b.n	3b50 <__aeabi_dsub+0x388>
    3d96:	2480      	movs	r4, #128	; 0x80
    3d98:	2500      	movs	r5, #0
    3d9a:	0324      	lsls	r4, r4, #12
    3d9c:	4e13      	ldr	r6, [pc, #76]	; (3dec <__aeabi_dsub+0x624>)
    3d9e:	2700      	movs	r7, #0
    3da0:	e5d3      	b.n	394a <__aeabi_dsub+0x182>
    3da2:	4650      	mov	r0, sl
    3da4:	4320      	orrs	r0, r4
    3da6:	0007      	movs	r7, r0
    3da8:	1e78      	subs	r0, r7, #1
    3daa:	4187      	sbcs	r7, r0
    3dac:	2400      	movs	r4, #0
    3dae:	18bf      	adds	r7, r7, r2
    3db0:	e760      	b.n	3c74 <__aeabi_dsub+0x4ac>
    3db2:	000c      	movs	r4, r1
    3db4:	0017      	movs	r7, r2
    3db6:	e58d      	b.n	38d4 <__aeabi_dsub+0x10c>
    3db8:	000c      	movs	r4, r1
    3dba:	0017      	movs	r7, r2
    3dbc:	4e0b      	ldr	r6, [pc, #44]	; (3dec <__aeabi_dsub+0x624>)
    3dbe:	e589      	b.n	38d4 <__aeabi_dsub+0x10c>
    3dc0:	001e      	movs	r6, r3
    3dc2:	0027      	movs	r7, r4
    3dc4:	3e20      	subs	r6, #32
    3dc6:	40f7      	lsrs	r7, r6
    3dc8:	2b20      	cmp	r3, #32
    3dca:	d00c      	beq.n	3de6 <__aeabi_dsub+0x61e>
    3dcc:	2640      	movs	r6, #64	; 0x40
    3dce:	1af3      	subs	r3, r6, r3
    3dd0:	409c      	lsls	r4, r3
    3dd2:	4650      	mov	r0, sl
    3dd4:	4320      	orrs	r0, r4
    3dd6:	1e44      	subs	r4, r0, #1
    3dd8:	41a0      	sbcs	r0, r4
    3dda:	4307      	orrs	r7, r0
    3ddc:	2400      	movs	r4, #0
    3dde:	18bf      	adds	r7, r7, r2
    3de0:	e748      	b.n	3c74 <__aeabi_dsub+0x4ac>
    3de2:	2400      	movs	r4, #0
    3de4:	e7d0      	b.n	3d88 <__aeabi_dsub+0x5c0>
    3de6:	2400      	movs	r4, #0
    3de8:	e7f3      	b.n	3dd2 <__aeabi_dsub+0x60a>
    3dea:	46c0      	nop			; (mov r8, r8)
    3dec:	000007ff 	.word	0x000007ff
    3df0:	ff7fffff 	.word	0xff7fffff

00003df4 <__aeabi_d2iz>:
    3df4:	b530      	push	{r4, r5, lr}
    3df6:	4d13      	ldr	r5, [pc, #76]	; (3e44 <__aeabi_d2iz+0x50>)
    3df8:	030a      	lsls	r2, r1, #12
    3dfa:	004b      	lsls	r3, r1, #1
    3dfc:	0b12      	lsrs	r2, r2, #12
    3dfe:	0d5b      	lsrs	r3, r3, #21
    3e00:	0fc9      	lsrs	r1, r1, #31
    3e02:	2400      	movs	r4, #0
    3e04:	42ab      	cmp	r3, r5
    3e06:	dd10      	ble.n	3e2a <__aeabi_d2iz+0x36>
    3e08:	4c0f      	ldr	r4, [pc, #60]	; (3e48 <__aeabi_d2iz+0x54>)
    3e0a:	42a3      	cmp	r3, r4
    3e0c:	dc0f      	bgt.n	3e2e <__aeabi_d2iz+0x3a>
    3e0e:	2480      	movs	r4, #128	; 0x80
    3e10:	4d0e      	ldr	r5, [pc, #56]	; (3e4c <__aeabi_d2iz+0x58>)
    3e12:	0364      	lsls	r4, r4, #13
    3e14:	4322      	orrs	r2, r4
    3e16:	1aed      	subs	r5, r5, r3
    3e18:	2d1f      	cmp	r5, #31
    3e1a:	dd0b      	ble.n	3e34 <__aeabi_d2iz+0x40>
    3e1c:	480c      	ldr	r0, [pc, #48]	; (3e50 <__aeabi_d2iz+0x5c>)
    3e1e:	1ac3      	subs	r3, r0, r3
    3e20:	40da      	lsrs	r2, r3
    3e22:	4254      	negs	r4, r2
    3e24:	2900      	cmp	r1, #0
    3e26:	d100      	bne.n	3e2a <__aeabi_d2iz+0x36>
    3e28:	0014      	movs	r4, r2
    3e2a:	0020      	movs	r0, r4
    3e2c:	bd30      	pop	{r4, r5, pc}
    3e2e:	4b09      	ldr	r3, [pc, #36]	; (3e54 <__aeabi_d2iz+0x60>)
    3e30:	18cc      	adds	r4, r1, r3
    3e32:	e7fa      	b.n	3e2a <__aeabi_d2iz+0x36>
    3e34:	4c08      	ldr	r4, [pc, #32]	; (3e58 <__aeabi_d2iz+0x64>)
    3e36:	40e8      	lsrs	r0, r5
    3e38:	46a4      	mov	ip, r4
    3e3a:	4463      	add	r3, ip
    3e3c:	409a      	lsls	r2, r3
    3e3e:	4302      	orrs	r2, r0
    3e40:	e7ef      	b.n	3e22 <__aeabi_d2iz+0x2e>
    3e42:	46c0      	nop			; (mov r8, r8)
    3e44:	000003fe 	.word	0x000003fe
    3e48:	0000041d 	.word	0x0000041d
    3e4c:	00000433 	.word	0x00000433
    3e50:	00000413 	.word	0x00000413
    3e54:	7fffffff 	.word	0x7fffffff
    3e58:	fffffbed 	.word	0xfffffbed

00003e5c <__aeabi_i2d>:
    3e5c:	b570      	push	{r4, r5, r6, lr}
    3e5e:	2800      	cmp	r0, #0
    3e60:	d030      	beq.n	3ec4 <__aeabi_i2d+0x68>
    3e62:	17c3      	asrs	r3, r0, #31
    3e64:	18c4      	adds	r4, r0, r3
    3e66:	405c      	eors	r4, r3
    3e68:	0fc5      	lsrs	r5, r0, #31
    3e6a:	0020      	movs	r0, r4
    3e6c:	f000 f8ae 	bl	3fcc <__clzsi2>
    3e70:	4b17      	ldr	r3, [pc, #92]	; (3ed0 <__aeabi_i2d+0x74>)
    3e72:	4a18      	ldr	r2, [pc, #96]	; (3ed4 <__aeabi_i2d+0x78>)
    3e74:	1a1b      	subs	r3, r3, r0
    3e76:	1ad2      	subs	r2, r2, r3
    3e78:	2a1f      	cmp	r2, #31
    3e7a:	dd18      	ble.n	3eae <__aeabi_i2d+0x52>
    3e7c:	4a16      	ldr	r2, [pc, #88]	; (3ed8 <__aeabi_i2d+0x7c>)
    3e7e:	1ad2      	subs	r2, r2, r3
    3e80:	4094      	lsls	r4, r2
    3e82:	2200      	movs	r2, #0
    3e84:	0324      	lsls	r4, r4, #12
    3e86:	055b      	lsls	r3, r3, #21
    3e88:	0b24      	lsrs	r4, r4, #12
    3e8a:	0d5b      	lsrs	r3, r3, #21
    3e8c:	2100      	movs	r1, #0
    3e8e:	0010      	movs	r0, r2
    3e90:	0324      	lsls	r4, r4, #12
    3e92:	0d0a      	lsrs	r2, r1, #20
    3e94:	0b24      	lsrs	r4, r4, #12
    3e96:	0512      	lsls	r2, r2, #20
    3e98:	4322      	orrs	r2, r4
    3e9a:	4c10      	ldr	r4, [pc, #64]	; (3edc <__aeabi_i2d+0x80>)
    3e9c:	051b      	lsls	r3, r3, #20
    3e9e:	4022      	ands	r2, r4
    3ea0:	4313      	orrs	r3, r2
    3ea2:	005b      	lsls	r3, r3, #1
    3ea4:	07ed      	lsls	r5, r5, #31
    3ea6:	085b      	lsrs	r3, r3, #1
    3ea8:	432b      	orrs	r3, r5
    3eaa:	0019      	movs	r1, r3
    3eac:	bd70      	pop	{r4, r5, r6, pc}
    3eae:	0021      	movs	r1, r4
    3eb0:	4091      	lsls	r1, r2
    3eb2:	000a      	movs	r2, r1
    3eb4:	210b      	movs	r1, #11
    3eb6:	1a08      	subs	r0, r1, r0
    3eb8:	40c4      	lsrs	r4, r0
    3eba:	055b      	lsls	r3, r3, #21
    3ebc:	0324      	lsls	r4, r4, #12
    3ebe:	0b24      	lsrs	r4, r4, #12
    3ec0:	0d5b      	lsrs	r3, r3, #21
    3ec2:	e7e3      	b.n	3e8c <__aeabi_i2d+0x30>
    3ec4:	2500      	movs	r5, #0
    3ec6:	2300      	movs	r3, #0
    3ec8:	2400      	movs	r4, #0
    3eca:	2200      	movs	r2, #0
    3ecc:	e7de      	b.n	3e8c <__aeabi_i2d+0x30>
    3ece:	46c0      	nop			; (mov r8, r8)
    3ed0:	0000041e 	.word	0x0000041e
    3ed4:	00000433 	.word	0x00000433
    3ed8:	00000413 	.word	0x00000413
    3edc:	800fffff 	.word	0x800fffff

00003ee0 <__aeabi_ui2d>:
    3ee0:	b510      	push	{r4, lr}
    3ee2:	1e04      	subs	r4, r0, #0
    3ee4:	d028      	beq.n	3f38 <__aeabi_ui2d+0x58>
    3ee6:	f000 f871 	bl	3fcc <__clzsi2>
    3eea:	4b15      	ldr	r3, [pc, #84]	; (3f40 <__aeabi_ui2d+0x60>)
    3eec:	4a15      	ldr	r2, [pc, #84]	; (3f44 <__aeabi_ui2d+0x64>)
    3eee:	1a1b      	subs	r3, r3, r0
    3ef0:	1ad2      	subs	r2, r2, r3
    3ef2:	2a1f      	cmp	r2, #31
    3ef4:	dd15      	ble.n	3f22 <__aeabi_ui2d+0x42>
    3ef6:	4a14      	ldr	r2, [pc, #80]	; (3f48 <__aeabi_ui2d+0x68>)
    3ef8:	1ad2      	subs	r2, r2, r3
    3efa:	4094      	lsls	r4, r2
    3efc:	2200      	movs	r2, #0
    3efe:	0324      	lsls	r4, r4, #12
    3f00:	055b      	lsls	r3, r3, #21
    3f02:	0b24      	lsrs	r4, r4, #12
    3f04:	0d5b      	lsrs	r3, r3, #21
    3f06:	2100      	movs	r1, #0
    3f08:	0010      	movs	r0, r2
    3f0a:	0324      	lsls	r4, r4, #12
    3f0c:	0d0a      	lsrs	r2, r1, #20
    3f0e:	0b24      	lsrs	r4, r4, #12
    3f10:	0512      	lsls	r2, r2, #20
    3f12:	4322      	orrs	r2, r4
    3f14:	4c0d      	ldr	r4, [pc, #52]	; (3f4c <__aeabi_ui2d+0x6c>)
    3f16:	051b      	lsls	r3, r3, #20
    3f18:	4022      	ands	r2, r4
    3f1a:	4313      	orrs	r3, r2
    3f1c:	005b      	lsls	r3, r3, #1
    3f1e:	0859      	lsrs	r1, r3, #1
    3f20:	bd10      	pop	{r4, pc}
    3f22:	0021      	movs	r1, r4
    3f24:	4091      	lsls	r1, r2
    3f26:	000a      	movs	r2, r1
    3f28:	210b      	movs	r1, #11
    3f2a:	1a08      	subs	r0, r1, r0
    3f2c:	40c4      	lsrs	r4, r0
    3f2e:	055b      	lsls	r3, r3, #21
    3f30:	0324      	lsls	r4, r4, #12
    3f32:	0b24      	lsrs	r4, r4, #12
    3f34:	0d5b      	lsrs	r3, r3, #21
    3f36:	e7e6      	b.n	3f06 <__aeabi_ui2d+0x26>
    3f38:	2300      	movs	r3, #0
    3f3a:	2400      	movs	r4, #0
    3f3c:	2200      	movs	r2, #0
    3f3e:	e7e2      	b.n	3f06 <__aeabi_ui2d+0x26>
    3f40:	0000041e 	.word	0x0000041e
    3f44:	00000433 	.word	0x00000433
    3f48:	00000413 	.word	0x00000413
    3f4c:	800fffff 	.word	0x800fffff

00003f50 <__aeabi_cdrcmple>:
    3f50:	4684      	mov	ip, r0
    3f52:	1c10      	adds	r0, r2, #0
    3f54:	4662      	mov	r2, ip
    3f56:	468c      	mov	ip, r1
    3f58:	1c19      	adds	r1, r3, #0
    3f5a:	4663      	mov	r3, ip
    3f5c:	e000      	b.n	3f60 <__aeabi_cdcmpeq>
    3f5e:	46c0      	nop			; (mov r8, r8)

00003f60 <__aeabi_cdcmpeq>:
    3f60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    3f62:	f000 f8fb 	bl	415c <__ledf2>
    3f66:	2800      	cmp	r0, #0
    3f68:	d401      	bmi.n	3f6e <__aeabi_cdcmpeq+0xe>
    3f6a:	2100      	movs	r1, #0
    3f6c:	42c8      	cmn	r0, r1
    3f6e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00003f70 <__aeabi_dcmpeq>:
    3f70:	b510      	push	{r4, lr}
    3f72:	f000 f855 	bl	4020 <__eqdf2>
    3f76:	4240      	negs	r0, r0
    3f78:	3001      	adds	r0, #1
    3f7a:	bd10      	pop	{r4, pc}

00003f7c <__aeabi_dcmplt>:
    3f7c:	b510      	push	{r4, lr}
    3f7e:	f000 f8ed 	bl	415c <__ledf2>
    3f82:	2800      	cmp	r0, #0
    3f84:	db01      	blt.n	3f8a <__aeabi_dcmplt+0xe>
    3f86:	2000      	movs	r0, #0
    3f88:	bd10      	pop	{r4, pc}
    3f8a:	2001      	movs	r0, #1
    3f8c:	bd10      	pop	{r4, pc}
    3f8e:	46c0      	nop			; (mov r8, r8)

00003f90 <__aeabi_dcmple>:
    3f90:	b510      	push	{r4, lr}
    3f92:	f000 f8e3 	bl	415c <__ledf2>
    3f96:	2800      	cmp	r0, #0
    3f98:	dd01      	ble.n	3f9e <__aeabi_dcmple+0xe>
    3f9a:	2000      	movs	r0, #0
    3f9c:	bd10      	pop	{r4, pc}
    3f9e:	2001      	movs	r0, #1
    3fa0:	bd10      	pop	{r4, pc}
    3fa2:	46c0      	nop			; (mov r8, r8)

00003fa4 <__aeabi_dcmpgt>:
    3fa4:	b510      	push	{r4, lr}
    3fa6:	f000 f875 	bl	4094 <__gedf2>
    3faa:	2800      	cmp	r0, #0
    3fac:	dc01      	bgt.n	3fb2 <__aeabi_dcmpgt+0xe>
    3fae:	2000      	movs	r0, #0
    3fb0:	bd10      	pop	{r4, pc}
    3fb2:	2001      	movs	r0, #1
    3fb4:	bd10      	pop	{r4, pc}
    3fb6:	46c0      	nop			; (mov r8, r8)

00003fb8 <__aeabi_dcmpge>:
    3fb8:	b510      	push	{r4, lr}
    3fba:	f000 f86b 	bl	4094 <__gedf2>
    3fbe:	2800      	cmp	r0, #0
    3fc0:	da01      	bge.n	3fc6 <__aeabi_dcmpge+0xe>
    3fc2:	2000      	movs	r0, #0
    3fc4:	bd10      	pop	{r4, pc}
    3fc6:	2001      	movs	r0, #1
    3fc8:	bd10      	pop	{r4, pc}
    3fca:	46c0      	nop			; (mov r8, r8)

00003fcc <__clzsi2>:
    3fcc:	211c      	movs	r1, #28
    3fce:	2301      	movs	r3, #1
    3fd0:	041b      	lsls	r3, r3, #16
    3fd2:	4298      	cmp	r0, r3
    3fd4:	d301      	bcc.n	3fda <__clzsi2+0xe>
    3fd6:	0c00      	lsrs	r0, r0, #16
    3fd8:	3910      	subs	r1, #16
    3fda:	0a1b      	lsrs	r3, r3, #8
    3fdc:	4298      	cmp	r0, r3
    3fde:	d301      	bcc.n	3fe4 <__clzsi2+0x18>
    3fe0:	0a00      	lsrs	r0, r0, #8
    3fe2:	3908      	subs	r1, #8
    3fe4:	091b      	lsrs	r3, r3, #4
    3fe6:	4298      	cmp	r0, r3
    3fe8:	d301      	bcc.n	3fee <__clzsi2+0x22>
    3fea:	0900      	lsrs	r0, r0, #4
    3fec:	3904      	subs	r1, #4
    3fee:	a202      	add	r2, pc, #8	; (adr r2, 3ff8 <__clzsi2+0x2c>)
    3ff0:	5c10      	ldrb	r0, [r2, r0]
    3ff2:	1840      	adds	r0, r0, r1
    3ff4:	4770      	bx	lr
    3ff6:	46c0      	nop			; (mov r8, r8)
    3ff8:	02020304 	.word	0x02020304
    3ffc:	01010101 	.word	0x01010101
	...

00004008 <__clzdi2>:
    4008:	b510      	push	{r4, lr}
    400a:	2900      	cmp	r1, #0
    400c:	d103      	bne.n	4016 <__clzdi2+0xe>
    400e:	f7ff ffdd 	bl	3fcc <__clzsi2>
    4012:	3020      	adds	r0, #32
    4014:	e002      	b.n	401c <__clzdi2+0x14>
    4016:	1c08      	adds	r0, r1, #0
    4018:	f7ff ffd8 	bl	3fcc <__clzsi2>
    401c:	bd10      	pop	{r4, pc}
    401e:	46c0      	nop			; (mov r8, r8)

00004020 <__eqdf2>:
    4020:	b5f0      	push	{r4, r5, r6, r7, lr}
    4022:	464f      	mov	r7, r9
    4024:	4646      	mov	r6, r8
    4026:	46d6      	mov	lr, sl
    4028:	005c      	lsls	r4, r3, #1
    402a:	b5c0      	push	{r6, r7, lr}
    402c:	031f      	lsls	r7, r3, #12
    402e:	0fdb      	lsrs	r3, r3, #31
    4030:	469a      	mov	sl, r3
    4032:	4b17      	ldr	r3, [pc, #92]	; (4090 <__eqdf2+0x70>)
    4034:	030e      	lsls	r6, r1, #12
    4036:	004d      	lsls	r5, r1, #1
    4038:	4684      	mov	ip, r0
    403a:	4680      	mov	r8, r0
    403c:	0b36      	lsrs	r6, r6, #12
    403e:	0d6d      	lsrs	r5, r5, #21
    4040:	0fc9      	lsrs	r1, r1, #31
    4042:	4691      	mov	r9, r2
    4044:	0b3f      	lsrs	r7, r7, #12
    4046:	0d64      	lsrs	r4, r4, #21
    4048:	2001      	movs	r0, #1
    404a:	429d      	cmp	r5, r3
    404c:	d008      	beq.n	4060 <__eqdf2+0x40>
    404e:	429c      	cmp	r4, r3
    4050:	d001      	beq.n	4056 <__eqdf2+0x36>
    4052:	42a5      	cmp	r5, r4
    4054:	d00b      	beq.n	406e <__eqdf2+0x4e>
    4056:	bc1c      	pop	{r2, r3, r4}
    4058:	4690      	mov	r8, r2
    405a:	4699      	mov	r9, r3
    405c:	46a2      	mov	sl, r4
    405e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4060:	4663      	mov	r3, ip
    4062:	4333      	orrs	r3, r6
    4064:	d1f7      	bne.n	4056 <__eqdf2+0x36>
    4066:	42ac      	cmp	r4, r5
    4068:	d1f5      	bne.n	4056 <__eqdf2+0x36>
    406a:	433a      	orrs	r2, r7
    406c:	d1f3      	bne.n	4056 <__eqdf2+0x36>
    406e:	2001      	movs	r0, #1
    4070:	42be      	cmp	r6, r7
    4072:	d1f0      	bne.n	4056 <__eqdf2+0x36>
    4074:	45c8      	cmp	r8, r9
    4076:	d1ee      	bne.n	4056 <__eqdf2+0x36>
    4078:	4551      	cmp	r1, sl
    407a:	d007      	beq.n	408c <__eqdf2+0x6c>
    407c:	2d00      	cmp	r5, #0
    407e:	d1ea      	bne.n	4056 <__eqdf2+0x36>
    4080:	4663      	mov	r3, ip
    4082:	431e      	orrs	r6, r3
    4084:	0030      	movs	r0, r6
    4086:	1e46      	subs	r6, r0, #1
    4088:	41b0      	sbcs	r0, r6
    408a:	e7e4      	b.n	4056 <__eqdf2+0x36>
    408c:	2000      	movs	r0, #0
    408e:	e7e2      	b.n	4056 <__eqdf2+0x36>
    4090:	000007ff 	.word	0x000007ff

00004094 <__gedf2>:
    4094:	b5f0      	push	{r4, r5, r6, r7, lr}
    4096:	4645      	mov	r5, r8
    4098:	46de      	mov	lr, fp
    409a:	4657      	mov	r7, sl
    409c:	464e      	mov	r6, r9
    409e:	b5e0      	push	{r5, r6, r7, lr}
    40a0:	031f      	lsls	r7, r3, #12
    40a2:	0b3d      	lsrs	r5, r7, #12
    40a4:	4f2c      	ldr	r7, [pc, #176]	; (4158 <__gedf2+0xc4>)
    40a6:	030e      	lsls	r6, r1, #12
    40a8:	004c      	lsls	r4, r1, #1
    40aa:	46ab      	mov	fp, r5
    40ac:	005d      	lsls	r5, r3, #1
    40ae:	4684      	mov	ip, r0
    40b0:	0b36      	lsrs	r6, r6, #12
    40b2:	0d64      	lsrs	r4, r4, #21
    40b4:	0fc9      	lsrs	r1, r1, #31
    40b6:	4690      	mov	r8, r2
    40b8:	0d6d      	lsrs	r5, r5, #21
    40ba:	0fdb      	lsrs	r3, r3, #31
    40bc:	42bc      	cmp	r4, r7
    40be:	d02a      	beq.n	4116 <__gedf2+0x82>
    40c0:	4f25      	ldr	r7, [pc, #148]	; (4158 <__gedf2+0xc4>)
    40c2:	42bd      	cmp	r5, r7
    40c4:	d02d      	beq.n	4122 <__gedf2+0x8e>
    40c6:	2c00      	cmp	r4, #0
    40c8:	d10f      	bne.n	40ea <__gedf2+0x56>
    40ca:	4330      	orrs	r0, r6
    40cc:	0007      	movs	r7, r0
    40ce:	4681      	mov	r9, r0
    40d0:	4278      	negs	r0, r7
    40d2:	4178      	adcs	r0, r7
    40d4:	b2c0      	uxtb	r0, r0
    40d6:	2d00      	cmp	r5, #0
    40d8:	d117      	bne.n	410a <__gedf2+0x76>
    40da:	465f      	mov	r7, fp
    40dc:	433a      	orrs	r2, r7
    40de:	d114      	bne.n	410a <__gedf2+0x76>
    40e0:	464b      	mov	r3, r9
    40e2:	2000      	movs	r0, #0
    40e4:	2b00      	cmp	r3, #0
    40e6:	d00a      	beq.n	40fe <__gedf2+0x6a>
    40e8:	e006      	b.n	40f8 <__gedf2+0x64>
    40ea:	2d00      	cmp	r5, #0
    40ec:	d102      	bne.n	40f4 <__gedf2+0x60>
    40ee:	4658      	mov	r0, fp
    40f0:	4302      	orrs	r2, r0
    40f2:	d001      	beq.n	40f8 <__gedf2+0x64>
    40f4:	4299      	cmp	r1, r3
    40f6:	d018      	beq.n	412a <__gedf2+0x96>
    40f8:	4248      	negs	r0, r1
    40fa:	2101      	movs	r1, #1
    40fc:	4308      	orrs	r0, r1
    40fe:	bc3c      	pop	{r2, r3, r4, r5}
    4100:	4690      	mov	r8, r2
    4102:	4699      	mov	r9, r3
    4104:	46a2      	mov	sl, r4
    4106:	46ab      	mov	fp, r5
    4108:	bdf0      	pop	{r4, r5, r6, r7, pc}
    410a:	2800      	cmp	r0, #0
    410c:	d0f2      	beq.n	40f4 <__gedf2+0x60>
    410e:	2001      	movs	r0, #1
    4110:	3b01      	subs	r3, #1
    4112:	4318      	orrs	r0, r3
    4114:	e7f3      	b.n	40fe <__gedf2+0x6a>
    4116:	0037      	movs	r7, r6
    4118:	4307      	orrs	r7, r0
    411a:	d0d1      	beq.n	40c0 <__gedf2+0x2c>
    411c:	2002      	movs	r0, #2
    411e:	4240      	negs	r0, r0
    4120:	e7ed      	b.n	40fe <__gedf2+0x6a>
    4122:	465f      	mov	r7, fp
    4124:	4317      	orrs	r7, r2
    4126:	d0ce      	beq.n	40c6 <__gedf2+0x32>
    4128:	e7f8      	b.n	411c <__gedf2+0x88>
    412a:	42ac      	cmp	r4, r5
    412c:	dce4      	bgt.n	40f8 <__gedf2+0x64>
    412e:	da03      	bge.n	4138 <__gedf2+0xa4>
    4130:	1e48      	subs	r0, r1, #1
    4132:	2101      	movs	r1, #1
    4134:	4308      	orrs	r0, r1
    4136:	e7e2      	b.n	40fe <__gedf2+0x6a>
    4138:	455e      	cmp	r6, fp
    413a:	d8dd      	bhi.n	40f8 <__gedf2+0x64>
    413c:	d006      	beq.n	414c <__gedf2+0xb8>
    413e:	2000      	movs	r0, #0
    4140:	455e      	cmp	r6, fp
    4142:	d2dc      	bcs.n	40fe <__gedf2+0x6a>
    4144:	2301      	movs	r3, #1
    4146:	1e48      	subs	r0, r1, #1
    4148:	4318      	orrs	r0, r3
    414a:	e7d8      	b.n	40fe <__gedf2+0x6a>
    414c:	45c4      	cmp	ip, r8
    414e:	d8d3      	bhi.n	40f8 <__gedf2+0x64>
    4150:	2000      	movs	r0, #0
    4152:	45c4      	cmp	ip, r8
    4154:	d3f6      	bcc.n	4144 <__gedf2+0xb0>
    4156:	e7d2      	b.n	40fe <__gedf2+0x6a>
    4158:	000007ff 	.word	0x000007ff

0000415c <__ledf2>:
    415c:	b5f0      	push	{r4, r5, r6, r7, lr}
    415e:	464e      	mov	r6, r9
    4160:	4645      	mov	r5, r8
    4162:	46de      	mov	lr, fp
    4164:	4657      	mov	r7, sl
    4166:	005c      	lsls	r4, r3, #1
    4168:	b5e0      	push	{r5, r6, r7, lr}
    416a:	031f      	lsls	r7, r3, #12
    416c:	0fdb      	lsrs	r3, r3, #31
    416e:	4699      	mov	r9, r3
    4170:	4b2a      	ldr	r3, [pc, #168]	; (421c <__ledf2+0xc0>)
    4172:	030e      	lsls	r6, r1, #12
    4174:	004d      	lsls	r5, r1, #1
    4176:	0fc9      	lsrs	r1, r1, #31
    4178:	4684      	mov	ip, r0
    417a:	0b36      	lsrs	r6, r6, #12
    417c:	0d6d      	lsrs	r5, r5, #21
    417e:	468b      	mov	fp, r1
    4180:	4690      	mov	r8, r2
    4182:	0b3f      	lsrs	r7, r7, #12
    4184:	0d64      	lsrs	r4, r4, #21
    4186:	429d      	cmp	r5, r3
    4188:	d020      	beq.n	41cc <__ledf2+0x70>
    418a:	4b24      	ldr	r3, [pc, #144]	; (421c <__ledf2+0xc0>)
    418c:	429c      	cmp	r4, r3
    418e:	d022      	beq.n	41d6 <__ledf2+0x7a>
    4190:	2d00      	cmp	r5, #0
    4192:	d112      	bne.n	41ba <__ledf2+0x5e>
    4194:	4330      	orrs	r0, r6
    4196:	4243      	negs	r3, r0
    4198:	4143      	adcs	r3, r0
    419a:	b2db      	uxtb	r3, r3
    419c:	2c00      	cmp	r4, #0
    419e:	d01f      	beq.n	41e0 <__ledf2+0x84>
    41a0:	2b00      	cmp	r3, #0
    41a2:	d00c      	beq.n	41be <__ledf2+0x62>
    41a4:	464b      	mov	r3, r9
    41a6:	2001      	movs	r0, #1
    41a8:	3b01      	subs	r3, #1
    41aa:	4303      	orrs	r3, r0
    41ac:	0018      	movs	r0, r3
    41ae:	bc3c      	pop	{r2, r3, r4, r5}
    41b0:	4690      	mov	r8, r2
    41b2:	4699      	mov	r9, r3
    41b4:	46a2      	mov	sl, r4
    41b6:	46ab      	mov	fp, r5
    41b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    41ba:	2c00      	cmp	r4, #0
    41bc:	d016      	beq.n	41ec <__ledf2+0x90>
    41be:	45cb      	cmp	fp, r9
    41c0:	d017      	beq.n	41f2 <__ledf2+0x96>
    41c2:	465b      	mov	r3, fp
    41c4:	4259      	negs	r1, r3
    41c6:	2301      	movs	r3, #1
    41c8:	430b      	orrs	r3, r1
    41ca:	e7ef      	b.n	41ac <__ledf2+0x50>
    41cc:	0031      	movs	r1, r6
    41ce:	2302      	movs	r3, #2
    41d0:	4301      	orrs	r1, r0
    41d2:	d1eb      	bne.n	41ac <__ledf2+0x50>
    41d4:	e7d9      	b.n	418a <__ledf2+0x2e>
    41d6:	0039      	movs	r1, r7
    41d8:	2302      	movs	r3, #2
    41da:	4311      	orrs	r1, r2
    41dc:	d1e6      	bne.n	41ac <__ledf2+0x50>
    41de:	e7d7      	b.n	4190 <__ledf2+0x34>
    41e0:	433a      	orrs	r2, r7
    41e2:	d1dd      	bne.n	41a0 <__ledf2+0x44>
    41e4:	2300      	movs	r3, #0
    41e6:	2800      	cmp	r0, #0
    41e8:	d0e0      	beq.n	41ac <__ledf2+0x50>
    41ea:	e7ea      	b.n	41c2 <__ledf2+0x66>
    41ec:	433a      	orrs	r2, r7
    41ee:	d1e6      	bne.n	41be <__ledf2+0x62>
    41f0:	e7e7      	b.n	41c2 <__ledf2+0x66>
    41f2:	42a5      	cmp	r5, r4
    41f4:	dce5      	bgt.n	41c2 <__ledf2+0x66>
    41f6:	db05      	blt.n	4204 <__ledf2+0xa8>
    41f8:	42be      	cmp	r6, r7
    41fa:	d8e2      	bhi.n	41c2 <__ledf2+0x66>
    41fc:	d007      	beq.n	420e <__ledf2+0xb2>
    41fe:	2300      	movs	r3, #0
    4200:	42be      	cmp	r6, r7
    4202:	d2d3      	bcs.n	41ac <__ledf2+0x50>
    4204:	4659      	mov	r1, fp
    4206:	2301      	movs	r3, #1
    4208:	3901      	subs	r1, #1
    420a:	430b      	orrs	r3, r1
    420c:	e7ce      	b.n	41ac <__ledf2+0x50>
    420e:	45c4      	cmp	ip, r8
    4210:	d8d7      	bhi.n	41c2 <__ledf2+0x66>
    4212:	2300      	movs	r3, #0
    4214:	45c4      	cmp	ip, r8
    4216:	d3f5      	bcc.n	4204 <__ledf2+0xa8>
    4218:	e7c8      	b.n	41ac <__ledf2+0x50>
    421a:	46c0      	nop			; (mov r8, r8)
    421c:	000007ff 	.word	0x000007ff

00004220 <__libc_init_array>:
    4220:	b570      	push	{r4, r5, r6, lr}
    4222:	4e0d      	ldr	r6, [pc, #52]	; (4258 <__libc_init_array+0x38>)
    4224:	4d0d      	ldr	r5, [pc, #52]	; (425c <__libc_init_array+0x3c>)
    4226:	2400      	movs	r4, #0
    4228:	1bad      	subs	r5, r5, r6
    422a:	10ad      	asrs	r5, r5, #2
    422c:	d005      	beq.n	423a <__libc_init_array+0x1a>
    422e:	00a3      	lsls	r3, r4, #2
    4230:	58f3      	ldr	r3, [r6, r3]
    4232:	3401      	adds	r4, #1
    4234:	4798      	blx	r3
    4236:	42a5      	cmp	r5, r4
    4238:	d1f9      	bne.n	422e <__libc_init_array+0xe>
    423a:	f005 ff15 	bl	a068 <_init>
    423e:	4e08      	ldr	r6, [pc, #32]	; (4260 <__libc_init_array+0x40>)
    4240:	4d08      	ldr	r5, [pc, #32]	; (4264 <__libc_init_array+0x44>)
    4242:	2400      	movs	r4, #0
    4244:	1bad      	subs	r5, r5, r6
    4246:	10ad      	asrs	r5, r5, #2
    4248:	d005      	beq.n	4256 <__libc_init_array+0x36>
    424a:	00a3      	lsls	r3, r4, #2
    424c:	58f3      	ldr	r3, [r6, r3]
    424e:	3401      	adds	r4, #1
    4250:	4798      	blx	r3
    4252:	42a5      	cmp	r5, r4
    4254:	d1f9      	bne.n	424a <__libc_init_array+0x2a>
    4256:	bd70      	pop	{r4, r5, r6, pc}
    4258:	0000a074 	.word	0x0000a074
    425c:	0000a074 	.word	0x0000a074
    4260:	0000a074 	.word	0x0000a074
    4264:	0000a07c 	.word	0x0000a07c

00004268 <memcpy>:
    4268:	b5f0      	push	{r4, r5, r6, r7, lr}
    426a:	0005      	movs	r5, r0
    426c:	2a0f      	cmp	r2, #15
    426e:	d92f      	bls.n	42d0 <memcpy+0x68>
    4270:	000b      	movs	r3, r1
    4272:	4303      	orrs	r3, r0
    4274:	079b      	lsls	r3, r3, #30
    4276:	d134      	bne.n	42e2 <memcpy+0x7a>
    4278:	0016      	movs	r6, r2
    427a:	000c      	movs	r4, r1
    427c:	0003      	movs	r3, r0
    427e:	3e10      	subs	r6, #16
    4280:	0935      	lsrs	r5, r6, #4
    4282:	3501      	adds	r5, #1
    4284:	012d      	lsls	r5, r5, #4
    4286:	1945      	adds	r5, r0, r5
    4288:	6827      	ldr	r7, [r4, #0]
    428a:	601f      	str	r7, [r3, #0]
    428c:	6867      	ldr	r7, [r4, #4]
    428e:	605f      	str	r7, [r3, #4]
    4290:	68a7      	ldr	r7, [r4, #8]
    4292:	609f      	str	r7, [r3, #8]
    4294:	68e7      	ldr	r7, [r4, #12]
    4296:	3410      	adds	r4, #16
    4298:	60df      	str	r7, [r3, #12]
    429a:	3310      	adds	r3, #16
    429c:	429d      	cmp	r5, r3
    429e:	d1f3      	bne.n	4288 <memcpy+0x20>
    42a0:	230f      	movs	r3, #15
    42a2:	439e      	bics	r6, r3
    42a4:	3610      	adds	r6, #16
    42a6:	1985      	adds	r5, r0, r6
    42a8:	1989      	adds	r1, r1, r6
    42aa:	4013      	ands	r3, r2
    42ac:	2b03      	cmp	r3, #3
    42ae:	d91a      	bls.n	42e6 <memcpy+0x7e>
    42b0:	1f1e      	subs	r6, r3, #4
    42b2:	2300      	movs	r3, #0
    42b4:	08b4      	lsrs	r4, r6, #2
    42b6:	3401      	adds	r4, #1
    42b8:	00a4      	lsls	r4, r4, #2
    42ba:	58cf      	ldr	r7, [r1, r3]
    42bc:	50ef      	str	r7, [r5, r3]
    42be:	3304      	adds	r3, #4
    42c0:	42a3      	cmp	r3, r4
    42c2:	d1fa      	bne.n	42ba <memcpy+0x52>
    42c4:	2403      	movs	r4, #3
    42c6:	43a6      	bics	r6, r4
    42c8:	1d33      	adds	r3, r6, #4
    42ca:	4022      	ands	r2, r4
    42cc:	18c9      	adds	r1, r1, r3
    42ce:	18ed      	adds	r5, r5, r3
    42d0:	2a00      	cmp	r2, #0
    42d2:	d005      	beq.n	42e0 <memcpy+0x78>
    42d4:	2300      	movs	r3, #0
    42d6:	5ccc      	ldrb	r4, [r1, r3]
    42d8:	54ec      	strb	r4, [r5, r3]
    42da:	3301      	adds	r3, #1
    42dc:	4293      	cmp	r3, r2
    42de:	d1fa      	bne.n	42d6 <memcpy+0x6e>
    42e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    42e2:	0005      	movs	r5, r0
    42e4:	e7f6      	b.n	42d4 <memcpy+0x6c>
    42e6:	001a      	movs	r2, r3
    42e8:	e7f2      	b.n	42d0 <memcpy+0x68>
    42ea:	46c0      	nop			; (mov r8, r8)

000042ec <memset>:
    42ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    42ee:	0783      	lsls	r3, r0, #30
    42f0:	d043      	beq.n	437a <memset+0x8e>
    42f2:	1e54      	subs	r4, r2, #1
    42f4:	2a00      	cmp	r2, #0
    42f6:	d03f      	beq.n	4378 <memset+0x8c>
    42f8:	b2ce      	uxtb	r6, r1
    42fa:	0002      	movs	r2, r0
    42fc:	2503      	movs	r5, #3
    42fe:	e002      	b.n	4306 <memset+0x1a>
    4300:	001a      	movs	r2, r3
    4302:	3c01      	subs	r4, #1
    4304:	d338      	bcc.n	4378 <memset+0x8c>
    4306:	1c53      	adds	r3, r2, #1
    4308:	7016      	strb	r6, [r2, #0]
    430a:	422b      	tst	r3, r5
    430c:	d1f8      	bne.n	4300 <memset+0x14>
    430e:	2c03      	cmp	r4, #3
    4310:	d92a      	bls.n	4368 <memset+0x7c>
    4312:	22ff      	movs	r2, #255	; 0xff
    4314:	400a      	ands	r2, r1
    4316:	0215      	lsls	r5, r2, #8
    4318:	4315      	orrs	r5, r2
    431a:	042a      	lsls	r2, r5, #16
    431c:	4315      	orrs	r5, r2
    431e:	2c0f      	cmp	r4, #15
    4320:	d914      	bls.n	434c <memset+0x60>
    4322:	0027      	movs	r7, r4
    4324:	001a      	movs	r2, r3
    4326:	3f10      	subs	r7, #16
    4328:	093e      	lsrs	r6, r7, #4
    432a:	3601      	adds	r6, #1
    432c:	0136      	lsls	r6, r6, #4
    432e:	199e      	adds	r6, r3, r6
    4330:	6015      	str	r5, [r2, #0]
    4332:	6055      	str	r5, [r2, #4]
    4334:	6095      	str	r5, [r2, #8]
    4336:	60d5      	str	r5, [r2, #12]
    4338:	3210      	adds	r2, #16
    433a:	4296      	cmp	r6, r2
    433c:	d1f8      	bne.n	4330 <memset+0x44>
    433e:	220f      	movs	r2, #15
    4340:	4397      	bics	r7, r2
    4342:	3710      	adds	r7, #16
    4344:	19db      	adds	r3, r3, r7
    4346:	4014      	ands	r4, r2
    4348:	2c03      	cmp	r4, #3
    434a:	d90d      	bls.n	4368 <memset+0x7c>
    434c:	001a      	movs	r2, r3
    434e:	1f27      	subs	r7, r4, #4
    4350:	08be      	lsrs	r6, r7, #2
    4352:	3601      	adds	r6, #1
    4354:	00b6      	lsls	r6, r6, #2
    4356:	199e      	adds	r6, r3, r6
    4358:	c220      	stmia	r2!, {r5}
    435a:	42b2      	cmp	r2, r6
    435c:	d1fc      	bne.n	4358 <memset+0x6c>
    435e:	2203      	movs	r2, #3
    4360:	4397      	bics	r7, r2
    4362:	3704      	adds	r7, #4
    4364:	19db      	adds	r3, r3, r7
    4366:	4014      	ands	r4, r2
    4368:	2c00      	cmp	r4, #0
    436a:	d005      	beq.n	4378 <memset+0x8c>
    436c:	b2c9      	uxtb	r1, r1
    436e:	191c      	adds	r4, r3, r4
    4370:	7019      	strb	r1, [r3, #0]
    4372:	3301      	adds	r3, #1
    4374:	429c      	cmp	r4, r3
    4376:	d1fb      	bne.n	4370 <memset+0x84>
    4378:	bdf0      	pop	{r4, r5, r6, r7, pc}
    437a:	0014      	movs	r4, r2
    437c:	0003      	movs	r3, r0
    437e:	e7c6      	b.n	430e <memset+0x22>

00004380 <printf>:
    4380:	b40f      	push	{r0, r1, r2, r3}
    4382:	b500      	push	{lr}
    4384:	4906      	ldr	r1, [pc, #24]	; (43a0 <printf+0x20>)
    4386:	b083      	sub	sp, #12
    4388:	ab04      	add	r3, sp, #16
    438a:	6808      	ldr	r0, [r1, #0]
    438c:	cb04      	ldmia	r3!, {r2}
    438e:	6881      	ldr	r1, [r0, #8]
    4390:	9301      	str	r3, [sp, #4]
    4392:	f000 f913 	bl	45bc <_vfprintf_r>
    4396:	b003      	add	sp, #12
    4398:	bc08      	pop	{r3}
    439a:	b004      	add	sp, #16
    439c:	4718      	bx	r3
    439e:	46c0      	nop			; (mov r8, r8)
    43a0:	2000007c 	.word	0x2000007c

000043a4 <setbuf>:
    43a4:	424a      	negs	r2, r1
    43a6:	414a      	adcs	r2, r1
    43a8:	2380      	movs	r3, #128	; 0x80
    43aa:	b510      	push	{r4, lr}
    43ac:	0052      	lsls	r2, r2, #1
    43ae:	00db      	lsls	r3, r3, #3
    43b0:	f000 f802 	bl	43b8 <setvbuf>
    43b4:	bd10      	pop	{r4, pc}
    43b6:	46c0      	nop			; (mov r8, r8)

000043b8 <setvbuf>:
    43b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    43ba:	4647      	mov	r7, r8
    43bc:	46ce      	mov	lr, r9
    43be:	b580      	push	{r7, lr}
    43c0:	001f      	movs	r7, r3
    43c2:	4b63      	ldr	r3, [pc, #396]	; (4550 <setvbuf+0x198>)
    43c4:	b083      	sub	sp, #12
    43c6:	681d      	ldr	r5, [r3, #0]
    43c8:	0004      	movs	r4, r0
    43ca:	4688      	mov	r8, r1
    43cc:	0016      	movs	r6, r2
    43ce:	2d00      	cmp	r5, #0
    43d0:	d002      	beq.n	43d8 <setvbuf+0x20>
    43d2:	6bab      	ldr	r3, [r5, #56]	; 0x38
    43d4:	2b00      	cmp	r3, #0
    43d6:	d066      	beq.n	44a6 <setvbuf+0xee>
    43d8:	2e02      	cmp	r6, #2
    43da:	d005      	beq.n	43e8 <setvbuf+0x30>
    43dc:	2e01      	cmp	r6, #1
    43de:	d900      	bls.n	43e2 <setvbuf+0x2a>
    43e0:	e0a1      	b.n	4526 <setvbuf+0x16e>
    43e2:	2f00      	cmp	r7, #0
    43e4:	da00      	bge.n	43e8 <setvbuf+0x30>
    43e6:	e09e      	b.n	4526 <setvbuf+0x16e>
    43e8:	6e63      	ldr	r3, [r4, #100]	; 0x64
    43ea:	07db      	lsls	r3, r3, #31
    43ec:	d533      	bpl.n	4456 <setvbuf+0x9e>
    43ee:	0021      	movs	r1, r4
    43f0:	0028      	movs	r0, r5
    43f2:	f002 fe27 	bl	7044 <_fflush_r>
    43f6:	6b21      	ldr	r1, [r4, #48]	; 0x30
    43f8:	2900      	cmp	r1, #0
    43fa:	d008      	beq.n	440e <setvbuf+0x56>
    43fc:	0023      	movs	r3, r4
    43fe:	3340      	adds	r3, #64	; 0x40
    4400:	4299      	cmp	r1, r3
    4402:	d002      	beq.n	440a <setvbuf+0x52>
    4404:	0028      	movs	r0, r5
    4406:	f002 ff21 	bl	724c <_free_r>
    440a:	2300      	movs	r3, #0
    440c:	6323      	str	r3, [r4, #48]	; 0x30
    440e:	2300      	movs	r3, #0
    4410:	61a3      	str	r3, [r4, #24]
    4412:	6063      	str	r3, [r4, #4]
    4414:	220c      	movs	r2, #12
    4416:	5ea3      	ldrsh	r3, [r4, r2]
    4418:	061a      	lsls	r2, r3, #24
    441a:	d43d      	bmi.n	4498 <setvbuf+0xe0>
    441c:	4a4d      	ldr	r2, [pc, #308]	; (4554 <setvbuf+0x19c>)
    441e:	4013      	ands	r3, r2
    4420:	81a3      	strh	r3, [r4, #12]
    4422:	2e02      	cmp	r6, #2
    4424:	d01e      	beq.n	4464 <setvbuf+0xac>
    4426:	ab01      	add	r3, sp, #4
    4428:	466a      	mov	r2, sp
    442a:	0021      	movs	r1, r4
    442c:	0028      	movs	r0, r5
    442e:	f003 f9a9 	bl	7784 <__swhatbuf_r>
    4432:	89a3      	ldrh	r3, [r4, #12]
    4434:	4318      	orrs	r0, r3
    4436:	81a0      	strh	r0, [r4, #12]
    4438:	2f00      	cmp	r7, #0
    443a:	d138      	bne.n	44ae <setvbuf+0xf6>
    443c:	9f00      	ldr	r7, [sp, #0]
    443e:	0038      	movs	r0, r7
    4440:	f003 fa18 	bl	7874 <malloc>
    4444:	4680      	mov	r8, r0
    4446:	2800      	cmp	r0, #0
    4448:	d100      	bne.n	444c <setvbuf+0x94>
    444a:	e06f      	b.n	452c <setvbuf+0x174>
    444c:	2280      	movs	r2, #128	; 0x80
    444e:	89a3      	ldrh	r3, [r4, #12]
    4450:	4313      	orrs	r3, r2
    4452:	81a3      	strh	r3, [r4, #12]
    4454:	e02e      	b.n	44b4 <setvbuf+0xfc>
    4456:	89a3      	ldrh	r3, [r4, #12]
    4458:	059b      	lsls	r3, r3, #22
    445a:	d4c8      	bmi.n	43ee <setvbuf+0x36>
    445c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    445e:	f003 f98d 	bl	777c <__retarget_lock_acquire_recursive>
    4462:	e7c4      	b.n	43ee <setvbuf+0x36>
    4464:	2500      	movs	r5, #0
    4466:	2202      	movs	r2, #2
    4468:	4313      	orrs	r3, r2
    446a:	2200      	movs	r2, #0
    446c:	60a2      	str	r2, [r4, #8]
    446e:	0022      	movs	r2, r4
    4470:	3243      	adds	r2, #67	; 0x43
    4472:	6022      	str	r2, [r4, #0]
    4474:	6122      	str	r2, [r4, #16]
    4476:	2201      	movs	r2, #1
    4478:	6e61      	ldr	r1, [r4, #100]	; 0x64
    447a:	81a3      	strh	r3, [r4, #12]
    447c:	6162      	str	r2, [r4, #20]
    447e:	4211      	tst	r1, r2
    4480:	d104      	bne.n	448c <setvbuf+0xd4>
    4482:	059b      	lsls	r3, r3, #22
    4484:	d402      	bmi.n	448c <setvbuf+0xd4>
    4486:	6da0      	ldr	r0, [r4, #88]	; 0x58
    4488:	f003 f97a 	bl	7780 <__retarget_lock_release_recursive>
    448c:	0028      	movs	r0, r5
    448e:	b003      	add	sp, #12
    4490:	bc0c      	pop	{r2, r3}
    4492:	4690      	mov	r8, r2
    4494:	4699      	mov	r9, r3
    4496:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4498:	6921      	ldr	r1, [r4, #16]
    449a:	0028      	movs	r0, r5
    449c:	f002 fed6 	bl	724c <_free_r>
    44a0:	220c      	movs	r2, #12
    44a2:	5ea3      	ldrsh	r3, [r4, r2]
    44a4:	e7ba      	b.n	441c <setvbuf+0x64>
    44a6:	0028      	movs	r0, r5
    44a8:	f002 fe26 	bl	70f8 <__sinit>
    44ac:	e794      	b.n	43d8 <setvbuf+0x20>
    44ae:	4643      	mov	r3, r8
    44b0:	2b00      	cmp	r3, #0
    44b2:	d0c4      	beq.n	443e <setvbuf+0x86>
    44b4:	6bab      	ldr	r3, [r5, #56]	; 0x38
    44b6:	2b00      	cmp	r3, #0
    44b8:	d027      	beq.n	450a <setvbuf+0x152>
    44ba:	9b00      	ldr	r3, [sp, #0]
    44bc:	429f      	cmp	r7, r3
    44be:	d02a      	beq.n	4516 <setvbuf+0x15e>
    44c0:	2380      	movs	r3, #128	; 0x80
    44c2:	89a2      	ldrh	r2, [r4, #12]
    44c4:	011b      	lsls	r3, r3, #4
    44c6:	4313      	orrs	r3, r2
    44c8:	b21b      	sxth	r3, r3
    44ca:	81a3      	strh	r3, [r4, #12]
    44cc:	2e01      	cmp	r6, #1
    44ce:	d026      	beq.n	451e <setvbuf+0x166>
    44d0:	4642      	mov	r2, r8
    44d2:	6022      	str	r2, [r4, #0]
    44d4:	6122      	str	r2, [r4, #16]
    44d6:	2208      	movs	r2, #8
    44d8:	b29b      	uxth	r3, r3
    44da:	6167      	str	r7, [r4, #20]
    44dc:	401a      	ands	r2, r3
    44de:	d00b      	beq.n	44f8 <setvbuf+0x140>
    44e0:	07da      	lsls	r2, r3, #31
    44e2:	d510      	bpl.n	4506 <setvbuf+0x14e>
    44e4:	2200      	movs	r2, #0
    44e6:	2501      	movs	r5, #1
    44e8:	60a2      	str	r2, [r4, #8]
    44ea:	6e62      	ldr	r2, [r4, #100]	; 0x64
    44ec:	427f      	negs	r7, r7
    44ee:	61a7      	str	r7, [r4, #24]
    44f0:	4015      	ands	r5, r2
    44f2:	d0c6      	beq.n	4482 <setvbuf+0xca>
    44f4:	2500      	movs	r5, #0
    44f6:	e7c9      	b.n	448c <setvbuf+0xd4>
    44f8:	60a2      	str	r2, [r4, #8]
    44fa:	2501      	movs	r5, #1
    44fc:	6e62      	ldr	r2, [r4, #100]	; 0x64
    44fe:	4015      	ands	r5, r2
    4500:	d0bf      	beq.n	4482 <setvbuf+0xca>
    4502:	2500      	movs	r5, #0
    4504:	e7c2      	b.n	448c <setvbuf+0xd4>
    4506:	60a7      	str	r7, [r4, #8]
    4508:	e7f7      	b.n	44fa <setvbuf+0x142>
    450a:	0028      	movs	r0, r5
    450c:	f002 fdf4 	bl	70f8 <__sinit>
    4510:	9b00      	ldr	r3, [sp, #0]
    4512:	429f      	cmp	r7, r3
    4514:	d1d4      	bne.n	44c0 <setvbuf+0x108>
    4516:	220c      	movs	r2, #12
    4518:	5ea3      	ldrsh	r3, [r4, r2]
    451a:	2e01      	cmp	r6, #1
    451c:	d1d8      	bne.n	44d0 <setvbuf+0x118>
    451e:	2201      	movs	r2, #1
    4520:	4313      	orrs	r3, r2
    4522:	81a3      	strh	r3, [r4, #12]
    4524:	e7d4      	b.n	44d0 <setvbuf+0x118>
    4526:	2501      	movs	r5, #1
    4528:	426d      	negs	r5, r5
    452a:	e7af      	b.n	448c <setvbuf+0xd4>
    452c:	9b00      	ldr	r3, [sp, #0]
    452e:	4699      	mov	r9, r3
    4530:	42bb      	cmp	r3, r7
    4532:	d005      	beq.n	4540 <setvbuf+0x188>
    4534:	0018      	movs	r0, r3
    4536:	f003 f99d 	bl	7874 <malloc>
    453a:	4680      	mov	r8, r0
    453c:	2800      	cmp	r0, #0
    453e:	d104      	bne.n	454a <setvbuf+0x192>
    4540:	2501      	movs	r5, #1
    4542:	220c      	movs	r2, #12
    4544:	5ea3      	ldrsh	r3, [r4, r2]
    4546:	426d      	negs	r5, r5
    4548:	e78d      	b.n	4466 <setvbuf+0xae>
    454a:	464f      	mov	r7, r9
    454c:	e77e      	b.n	444c <setvbuf+0x94>
    454e:	46c0      	nop			; (mov r8, r8)
    4550:	2000007c 	.word	0x2000007c
    4554:	fffff35c 	.word	0xfffff35c

00004558 <strlen>:
    4558:	b510      	push	{r4, lr}
    455a:	0783      	lsls	r3, r0, #30
    455c:	d025      	beq.n	45aa <strlen+0x52>
    455e:	7803      	ldrb	r3, [r0, #0]
    4560:	2b00      	cmp	r3, #0
    4562:	d024      	beq.n	45ae <strlen+0x56>
    4564:	0003      	movs	r3, r0
    4566:	2103      	movs	r1, #3
    4568:	e002      	b.n	4570 <strlen+0x18>
    456a:	781a      	ldrb	r2, [r3, #0]
    456c:	2a00      	cmp	r2, #0
    456e:	d01a      	beq.n	45a6 <strlen+0x4e>
    4570:	3301      	adds	r3, #1
    4572:	420b      	tst	r3, r1
    4574:	d1f9      	bne.n	456a <strlen+0x12>
    4576:	6819      	ldr	r1, [r3, #0]
    4578:	4a0e      	ldr	r2, [pc, #56]	; (45b4 <strlen+0x5c>)
    457a:	4c0f      	ldr	r4, [pc, #60]	; (45b8 <strlen+0x60>)
    457c:	188a      	adds	r2, r1, r2
    457e:	438a      	bics	r2, r1
    4580:	4222      	tst	r2, r4
    4582:	d106      	bne.n	4592 <strlen+0x3a>
    4584:	3304      	adds	r3, #4
    4586:	6819      	ldr	r1, [r3, #0]
    4588:	4a0a      	ldr	r2, [pc, #40]	; (45b4 <strlen+0x5c>)
    458a:	188a      	adds	r2, r1, r2
    458c:	438a      	bics	r2, r1
    458e:	4222      	tst	r2, r4
    4590:	d0f8      	beq.n	4584 <strlen+0x2c>
    4592:	001a      	movs	r2, r3
    4594:	781b      	ldrb	r3, [r3, #0]
    4596:	2b00      	cmp	r3, #0
    4598:	d003      	beq.n	45a2 <strlen+0x4a>
    459a:	3201      	adds	r2, #1
    459c:	7811      	ldrb	r1, [r2, #0]
    459e:	2900      	cmp	r1, #0
    45a0:	d1fb      	bne.n	459a <strlen+0x42>
    45a2:	1a10      	subs	r0, r2, r0
    45a4:	bd10      	pop	{r4, pc}
    45a6:	1a18      	subs	r0, r3, r0
    45a8:	e7fc      	b.n	45a4 <strlen+0x4c>
    45aa:	0003      	movs	r3, r0
    45ac:	e7e3      	b.n	4576 <strlen+0x1e>
    45ae:	2000      	movs	r0, #0
    45b0:	e7f8      	b.n	45a4 <strlen+0x4c>
    45b2:	46c0      	nop			; (mov r8, r8)
    45b4:	fefefeff 	.word	0xfefefeff
    45b8:	80808080 	.word	0x80808080

000045bc <_vfprintf_r>:
    45bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    45be:	46de      	mov	lr, fp
    45c0:	464e      	mov	r6, r9
    45c2:	4645      	mov	r5, r8
    45c4:	4657      	mov	r7, sl
    45c6:	b5e0      	push	{r5, r6, r7, lr}
    45c8:	b0c3      	sub	sp, #268	; 0x10c
    45ca:	4689      	mov	r9, r1
    45cc:	0014      	movs	r4, r2
    45ce:	001d      	movs	r5, r3
    45d0:	930f      	str	r3, [sp, #60]	; 0x3c
    45d2:	0006      	movs	r6, r0
    45d4:	9006      	str	r0, [sp, #24]
    45d6:	f003 f8bf 	bl	7758 <_localeconv_r>
    45da:	6803      	ldr	r3, [r0, #0]
    45dc:	0018      	movs	r0, r3
    45de:	9318      	str	r3, [sp, #96]	; 0x60
    45e0:	f7ff ffba 	bl	4558 <strlen>
    45e4:	9017      	str	r0, [sp, #92]	; 0x5c
    45e6:	2e00      	cmp	r6, #0
    45e8:	d004      	beq.n	45f4 <_vfprintf_r+0x38>
    45ea:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    45ec:	9307      	str	r3, [sp, #28]
    45ee:	2b00      	cmp	r3, #0
    45f0:	d100      	bne.n	45f4 <_vfprintf_r+0x38>
    45f2:	e0a7      	b.n	4744 <_vfprintf_r+0x188>
    45f4:	464b      	mov	r3, r9
    45f6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    45f8:	07db      	lsls	r3, r3, #31
    45fa:	d478      	bmi.n	46ee <_vfprintf_r+0x132>
    45fc:	464b      	mov	r3, r9
    45fe:	210c      	movs	r1, #12
    4600:	5e59      	ldrsh	r1, [r3, r1]
    4602:	b28b      	uxth	r3, r1
    4604:	059a      	lsls	r2, r3, #22
    4606:	d56e      	bpl.n	46e6 <_vfprintf_r+0x12a>
    4608:	2280      	movs	r2, #128	; 0x80
    460a:	0192      	lsls	r2, r2, #6
    460c:	4213      	tst	r3, r2
    460e:	d109      	bne.n	4624 <_vfprintf_r+0x68>
    4610:	430a      	orrs	r2, r1
    4612:	464b      	mov	r3, r9
    4614:	4649      	mov	r1, r9
    4616:	819a      	strh	r2, [r3, #12]
    4618:	6e49      	ldr	r1, [r1, #100]	; 0x64
    461a:	4bcc      	ldr	r3, [pc, #816]	; (494c <_vfprintf_r+0x390>)
    461c:	400b      	ands	r3, r1
    461e:	4649      	mov	r1, r9
    4620:	664b      	str	r3, [r1, #100]	; 0x64
    4622:	b293      	uxth	r3, r2
    4624:	071a      	lsls	r2, r3, #28
    4626:	d567      	bpl.n	46f8 <_vfprintf_r+0x13c>
    4628:	464a      	mov	r2, r9
    462a:	6912      	ldr	r2, [r2, #16]
    462c:	2a00      	cmp	r2, #0
    462e:	d063      	beq.n	46f8 <_vfprintf_r+0x13c>
    4630:	221a      	movs	r2, #26
    4632:	401a      	ands	r2, r3
    4634:	2a0a      	cmp	r2, #10
    4636:	d100      	bne.n	463a <_vfprintf_r+0x7e>
    4638:	e088      	b.n	474c <_vfprintf_r+0x190>
    463a:	ab32      	add	r3, sp, #200	; 0xc8
    463c:	9325      	str	r3, [sp, #148]	; 0x94
    463e:	2300      	movs	r3, #0
    4640:	46cb      	mov	fp, r9
    4642:	af25      	add	r7, sp, #148	; 0x94
    4644:	60bb      	str	r3, [r7, #8]
    4646:	607b      	str	r3, [r7, #4]
    4648:	9407      	str	r4, [sp, #28]
    464a:	9314      	str	r3, [sp, #80]	; 0x50
    464c:	9316      	str	r3, [sp, #88]	; 0x58
    464e:	9315      	str	r3, [sp, #84]	; 0x54
    4650:	ae32      	add	r6, sp, #200	; 0xc8
    4652:	9319      	str	r3, [sp, #100]	; 0x64
    4654:	931a      	str	r3, [sp, #104]	; 0x68
    4656:	930a      	str	r3, [sp, #40]	; 0x28
    4658:	9c07      	ldr	r4, [sp, #28]
    465a:	7823      	ldrb	r3, [r4, #0]
    465c:	2b00      	cmp	r3, #0
    465e:	d101      	bne.n	4664 <_vfprintf_r+0xa8>
    4660:	f000 fd9e 	bl	51a0 <_vfprintf_r+0xbe4>
    4664:	2b25      	cmp	r3, #37	; 0x25
    4666:	d103      	bne.n	4670 <_vfprintf_r+0xb4>
    4668:	f000 fd9a 	bl	51a0 <_vfprintf_r+0xbe4>
    466c:	2b25      	cmp	r3, #37	; 0x25
    466e:	d003      	beq.n	4678 <_vfprintf_r+0xbc>
    4670:	3401      	adds	r4, #1
    4672:	7823      	ldrb	r3, [r4, #0]
    4674:	2b00      	cmp	r3, #0
    4676:	d1f9      	bne.n	466c <_vfprintf_r+0xb0>
    4678:	9b07      	ldr	r3, [sp, #28]
    467a:	1ae5      	subs	r5, r4, r3
    467c:	d010      	beq.n	46a0 <_vfprintf_r+0xe4>
    467e:	9b07      	ldr	r3, [sp, #28]
    4680:	6075      	str	r5, [r6, #4]
    4682:	6033      	str	r3, [r6, #0]
    4684:	68bb      	ldr	r3, [r7, #8]
    4686:	195b      	adds	r3, r3, r5
    4688:	60bb      	str	r3, [r7, #8]
    468a:	687b      	ldr	r3, [r7, #4]
    468c:	3301      	adds	r3, #1
    468e:	607b      	str	r3, [r7, #4]
    4690:	2b07      	cmp	r3, #7
    4692:	dc4c      	bgt.n	472e <_vfprintf_r+0x172>
    4694:	3608      	adds	r6, #8
    4696:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4698:	469c      	mov	ip, r3
    469a:	44ac      	add	ip, r5
    469c:	4663      	mov	r3, ip
    469e:	930a      	str	r3, [sp, #40]	; 0x28
    46a0:	7823      	ldrb	r3, [r4, #0]
    46a2:	2b00      	cmp	r3, #0
    46a4:	d101      	bne.n	46aa <_vfprintf_r+0xee>
    46a6:	f000 fc99 	bl	4fdc <_vfprintf_r+0xa20>
    46aa:	1c63      	adds	r3, r4, #1
    46ac:	9307      	str	r3, [sp, #28]
    46ae:	2300      	movs	r3, #0
    46b0:	aa16      	add	r2, sp, #88	; 0x58
    46b2:	77d3      	strb	r3, [r2, #31]
    46b4:	2201      	movs	r2, #1
    46b6:	4252      	negs	r2, r2
    46b8:	4692      	mov	sl, r2
    46ba:	2200      	movs	r2, #0
    46bc:	920b      	str	r2, [sp, #44]	; 0x2c
    46be:	3220      	adds	r2, #32
    46c0:	4691      	mov	r9, r2
    46c2:	3220      	adds	r2, #32
    46c4:	7863      	ldrb	r3, [r4, #1]
    46c6:	2100      	movs	r1, #0
    46c8:	2000      	movs	r0, #0
    46ca:	2400      	movs	r4, #0
    46cc:	4694      	mov	ip, r2
    46ce:	9a07      	ldr	r2, [sp, #28]
    46d0:	3201      	adds	r2, #1
    46d2:	9207      	str	r2, [sp, #28]
    46d4:	001a      	movs	r2, r3
    46d6:	3a20      	subs	r2, #32
    46d8:	2a58      	cmp	r2, #88	; 0x58
    46da:	d900      	bls.n	46de <_vfprintf_r+0x122>
    46dc:	e2e7      	b.n	4cae <_vfprintf_r+0x6f2>
    46de:	4d9c      	ldr	r5, [pc, #624]	; (4950 <_vfprintf_r+0x394>)
    46e0:	0092      	lsls	r2, r2, #2
    46e2:	58aa      	ldr	r2, [r5, r2]
    46e4:	4697      	mov	pc, r2
    46e6:	464b      	mov	r3, r9
    46e8:	6d98      	ldr	r0, [r3, #88]	; 0x58
    46ea:	f003 f847 	bl	777c <__retarget_lock_acquire_recursive>
    46ee:	464b      	mov	r3, r9
    46f0:	210c      	movs	r1, #12
    46f2:	5e59      	ldrsh	r1, [r3, r1]
    46f4:	b28b      	uxth	r3, r1
    46f6:	e787      	b.n	4608 <_vfprintf_r+0x4c>
    46f8:	4649      	mov	r1, r9
    46fa:	9806      	ldr	r0, [sp, #24]
    46fc:	f001 fb0e 	bl	5d1c <__swsetup_r>
    4700:	464b      	mov	r3, r9
    4702:	2800      	cmp	r0, #0
    4704:	d03a      	beq.n	477c <_vfprintf_r+0x1c0>
    4706:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    4708:	07db      	lsls	r3, r3, #31
    470a:	d405      	bmi.n	4718 <_vfprintf_r+0x15c>
    470c:	464b      	mov	r3, r9
    470e:	899b      	ldrh	r3, [r3, #12]
    4710:	059b      	lsls	r3, r3, #22
    4712:	d401      	bmi.n	4718 <_vfprintf_r+0x15c>
    4714:	f000 ffcf 	bl	56b6 <_vfprintf_r+0x10fa>
    4718:	2301      	movs	r3, #1
    471a:	425b      	negs	r3, r3
    471c:	930a      	str	r3, [sp, #40]	; 0x28
    471e:	980a      	ldr	r0, [sp, #40]	; 0x28
    4720:	b043      	add	sp, #268	; 0x10c
    4722:	bc3c      	pop	{r2, r3, r4, r5}
    4724:	4690      	mov	r8, r2
    4726:	4699      	mov	r9, r3
    4728:	46a2      	mov	sl, r4
    472a:	46ab      	mov	fp, r5
    472c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    472e:	003a      	movs	r2, r7
    4730:	4659      	mov	r1, fp
    4732:	9806      	ldr	r0, [sp, #24]
    4734:	f004 f9a4 	bl	8a80 <__sprint_r>
    4738:	2800      	cmp	r0, #0
    473a:	d001      	beq.n	4740 <_vfprintf_r+0x184>
    473c:	f000 fcce 	bl	50dc <_vfprintf_r+0xb20>
    4740:	ae32      	add	r6, sp, #200	; 0xc8
    4742:	e7a8      	b.n	4696 <_vfprintf_r+0xda>
    4744:	9806      	ldr	r0, [sp, #24]
    4746:	f002 fcd7 	bl	70f8 <__sinit>
    474a:	e753      	b.n	45f4 <_vfprintf_r+0x38>
    474c:	464a      	mov	r2, r9
    474e:	210e      	movs	r1, #14
    4750:	5e52      	ldrsh	r2, [r2, r1]
    4752:	2a00      	cmp	r2, #0
    4754:	da00      	bge.n	4758 <_vfprintf_r+0x19c>
    4756:	e770      	b.n	463a <_vfprintf_r+0x7e>
    4758:	464a      	mov	r2, r9
    475a:	6e52      	ldr	r2, [r2, #100]	; 0x64
    475c:	07d2      	lsls	r2, r2, #31
    475e:	d405      	bmi.n	476c <_vfprintf_r+0x1b0>
    4760:	059b      	lsls	r3, r3, #22
    4762:	d403      	bmi.n	476c <_vfprintf_r+0x1b0>
    4764:	464b      	mov	r3, r9
    4766:	6d98      	ldr	r0, [r3, #88]	; 0x58
    4768:	f003 f80a 	bl	7780 <__retarget_lock_release_recursive>
    476c:	002b      	movs	r3, r5
    476e:	0022      	movs	r2, r4
    4770:	4649      	mov	r1, r9
    4772:	9806      	ldr	r0, [sp, #24]
    4774:	f001 fa8e 	bl	5c94 <__sbprintf>
    4778:	900a      	str	r0, [sp, #40]	; 0x28
    477a:	e7d0      	b.n	471e <_vfprintf_r+0x162>
    477c:	899b      	ldrh	r3, [r3, #12]
    477e:	e757      	b.n	4630 <_vfprintf_r+0x74>
    4780:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4782:	920f      	str	r2, [sp, #60]	; 0x3c
    4784:	425b      	negs	r3, r3
    4786:	930b      	str	r3, [sp, #44]	; 0x2c
    4788:	2304      	movs	r3, #4
    478a:	431c      	orrs	r4, r3
    478c:	9b07      	ldr	r3, [sp, #28]
    478e:	781b      	ldrb	r3, [r3, #0]
    4790:	e79d      	b.n	46ce <_vfprintf_r+0x112>
    4792:	9b07      	ldr	r3, [sp, #28]
    4794:	2101      	movs	r1, #1
    4796:	781b      	ldrb	r3, [r3, #0]
    4798:	202b      	movs	r0, #43	; 0x2b
    479a:	e798      	b.n	46ce <_vfprintf_r+0x112>
    479c:	9b07      	ldr	r3, [sp, #28]
    479e:	1c5a      	adds	r2, r3, #1
    47a0:	781b      	ldrb	r3, [r3, #0]
    47a2:	4690      	mov	r8, r2
    47a4:	2b2a      	cmp	r3, #42	; 0x2a
    47a6:	d101      	bne.n	47ac <_vfprintf_r+0x1f0>
    47a8:	f001 fa38 	bl	5c1c <_vfprintf_r+0x1660>
    47ac:	001a      	movs	r2, r3
    47ae:	2500      	movs	r5, #0
    47b0:	3a30      	subs	r2, #48	; 0x30
    47b2:	46aa      	mov	sl, r5
    47b4:	2a09      	cmp	r2, #9
    47b6:	d901      	bls.n	47bc <_vfprintf_r+0x200>
    47b8:	f001 f96d 	bl	5a96 <_vfprintf_r+0x14da>
    47bc:	0025      	movs	r5, r4
    47be:	4643      	mov	r3, r8
    47c0:	4654      	mov	r4, sl
    47c2:	4688      	mov	r8, r1
    47c4:	4682      	mov	sl, r0
    47c6:	00a1      	lsls	r1, r4, #2
    47c8:	190c      	adds	r4, r1, r4
    47ca:	7818      	ldrb	r0, [r3, #0]
    47cc:	0064      	lsls	r4, r4, #1
    47ce:	18a4      	adds	r4, r4, r2
    47d0:	0002      	movs	r2, r0
    47d2:	1c59      	adds	r1, r3, #1
    47d4:	3a30      	subs	r2, #48	; 0x30
    47d6:	000b      	movs	r3, r1
    47d8:	2a09      	cmp	r2, #9
    47da:	d9f4      	bls.n	47c6 <_vfprintf_r+0x20a>
    47dc:	9107      	str	r1, [sp, #28]
    47de:	0003      	movs	r3, r0
    47e0:	4641      	mov	r1, r8
    47e2:	4650      	mov	r0, sl
    47e4:	46a2      	mov	sl, r4
    47e6:	002c      	movs	r4, r5
    47e8:	e774      	b.n	46d4 <_vfprintf_r+0x118>
    47ea:	9312      	str	r3, [sp, #72]	; 0x48
    47ec:	2900      	cmp	r1, #0
    47ee:	d001      	beq.n	47f4 <_vfprintf_r+0x238>
    47f0:	f001 fa2e 	bl	5c50 <_vfprintf_r+0x1694>
    47f4:	4b57      	ldr	r3, [pc, #348]	; (4954 <_vfprintf_r+0x398>)
    47f6:	9319      	str	r3, [sp, #100]	; 0x64
    47f8:	06a3      	lsls	r3, r4, #26
    47fa:	d501      	bpl.n	4800 <_vfprintf_r+0x244>
    47fc:	f000 fe9a 	bl	5534 <_vfprintf_r+0xf78>
    4800:	06e3      	lsls	r3, r4, #27
    4802:	d501      	bpl.n	4808 <_vfprintf_r+0x24c>
    4804:	f000 fd9a 	bl	533c <_vfprintf_r+0xd80>
    4808:	0663      	lsls	r3, r4, #25
    480a:	d401      	bmi.n	4810 <_vfprintf_r+0x254>
    480c:	f000 fd96 	bl	533c <_vfprintf_r+0xd80>
    4810:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4812:	881a      	ldrh	r2, [r3, #0]
    4814:	920c      	str	r2, [sp, #48]	; 0x30
    4816:	2200      	movs	r2, #0
    4818:	3304      	adds	r3, #4
    481a:	920d      	str	r2, [sp, #52]	; 0x34
    481c:	930f      	str	r3, [sp, #60]	; 0x3c
    481e:	07e3      	lsls	r3, r4, #31
    4820:	d401      	bmi.n	4826 <_vfprintf_r+0x26a>
    4822:	f000 fd76 	bl	5312 <_vfprintf_r+0xd56>
    4826:	990c      	ldr	r1, [sp, #48]	; 0x30
    4828:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    482a:	000b      	movs	r3, r1
    482c:	4313      	orrs	r3, r2
    482e:	001a      	movs	r2, r3
    4830:	2302      	movs	r3, #2
    4832:	2a00      	cmp	r2, #0
    4834:	d008      	beq.n	4848 <_vfprintf_r+0x28c>
    4836:	2030      	movs	r0, #48	; 0x30
    4838:	a91e      	add	r1, sp, #120	; 0x78
    483a:	7008      	strb	r0, [r1, #0]
    483c:	2548      	movs	r5, #72	; 0x48
    483e:	4668      	mov	r0, sp
    4840:	1940      	adds	r0, r0, r5
    4842:	7800      	ldrb	r0, [r0, #0]
    4844:	431c      	orrs	r4, r3
    4846:	7048      	strb	r0, [r1, #1]
    4848:	2100      	movs	r1, #0
    484a:	4688      	mov	r8, r1
    484c:	a816      	add	r0, sp, #88	; 0x58
    484e:	77c1      	strb	r1, [r0, #31]
    4850:	4651      	mov	r1, sl
    4852:	3101      	adds	r1, #1
    4854:	d100      	bne.n	4858 <_vfprintf_r+0x29c>
    4856:	e0e6      	b.n	4a26 <_vfprintf_r+0x46a>
    4858:	2180      	movs	r1, #128	; 0x80
    485a:	0020      	movs	r0, r4
    485c:	4388      	bics	r0, r1
    485e:	9009      	str	r0, [sp, #36]	; 0x24
    4860:	2a00      	cmp	r2, #0
    4862:	d000      	beq.n	4866 <_vfprintf_r+0x2aa>
    4864:	e0e3      	b.n	4a2e <_vfprintf_r+0x472>
    4866:	4652      	mov	r2, sl
    4868:	2a00      	cmp	r2, #0
    486a:	d001      	beq.n	4870 <_vfprintf_r+0x2b4>
    486c:	f000 fc38 	bl	50e0 <_vfprintf_r+0xb24>
    4870:	2b00      	cmp	r3, #0
    4872:	d001      	beq.n	4878 <_vfprintf_r+0x2bc>
    4874:	f000 fd0c 	bl	5290 <_vfprintf_r+0xcd4>
    4878:	2001      	movs	r0, #1
    487a:	ab32      	add	r3, sp, #200	; 0xc8
    487c:	4020      	ands	r0, r4
    487e:	900e      	str	r0, [sp, #56]	; 0x38
    4880:	9311      	str	r3, [sp, #68]	; 0x44
    4882:	d008      	beq.n	4896 <_vfprintf_r+0x2da>
    4884:	2327      	movs	r3, #39	; 0x27
    4886:	2130      	movs	r1, #48	; 0x30
    4888:	aa28      	add	r2, sp, #160	; 0xa0
    488a:	54d1      	strb	r1, [r2, r3]
    488c:	aa16      	add	r2, sp, #88	; 0x58
    488e:	4694      	mov	ip, r2
    4890:	3348      	adds	r3, #72	; 0x48
    4892:	4463      	add	r3, ip
    4894:	9311      	str	r3, [sp, #68]	; 0x44
    4896:	4653      	mov	r3, sl
    4898:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    489a:	9308      	str	r3, [sp, #32]
    489c:	4592      	cmp	sl, r2
    489e:	da00      	bge.n	48a2 <_vfprintf_r+0x2e6>
    48a0:	9208      	str	r2, [sp, #32]
    48a2:	2300      	movs	r3, #0
    48a4:	9313      	str	r3, [sp, #76]	; 0x4c
    48a6:	4643      	mov	r3, r8
    48a8:	2b00      	cmp	r3, #0
    48aa:	d002      	beq.n	48b2 <_vfprintf_r+0x2f6>
    48ac:	9b08      	ldr	r3, [sp, #32]
    48ae:	3301      	adds	r3, #1
    48b0:	9308      	str	r3, [sp, #32]
    48b2:	2302      	movs	r3, #2
    48b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
    48b6:	401a      	ands	r2, r3
    48b8:	4691      	mov	r9, r2
    48ba:	d002      	beq.n	48c2 <_vfprintf_r+0x306>
    48bc:	9b08      	ldr	r3, [sp, #32]
    48be:	3302      	adds	r3, #2
    48c0:	9308      	str	r3, [sp, #32]
    48c2:	2384      	movs	r3, #132	; 0x84
    48c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
    48c6:	401a      	ands	r2, r3
    48c8:	9210      	str	r2, [sp, #64]	; 0x40
    48ca:	d000      	beq.n	48ce <_vfprintf_r+0x312>
    48cc:	e207      	b.n	4cde <_vfprintf_r+0x722>
    48ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    48d0:	9a08      	ldr	r2, [sp, #32]
    48d2:	1a9c      	subs	r4, r3, r2
    48d4:	2c00      	cmp	r4, #0
    48d6:	dc00      	bgt.n	48da <_vfprintf_r+0x31e>
    48d8:	e201      	b.n	4cde <_vfprintf_r+0x722>
    48da:	491f      	ldr	r1, [pc, #124]	; (4958 <_vfprintf_r+0x39c>)
    48dc:	68ba      	ldr	r2, [r7, #8]
    48de:	687b      	ldr	r3, [r7, #4]
    48e0:	4688      	mov	r8, r1
    48e2:	2c10      	cmp	r4, #16
    48e4:	dd21      	ble.n	492a <_vfprintf_r+0x36e>
    48e6:	0031      	movs	r1, r6
    48e8:	2510      	movs	r5, #16
    48ea:	465e      	mov	r6, fp
    48ec:	e003      	b.n	48f6 <_vfprintf_r+0x33a>
    48ee:	3c10      	subs	r4, #16
    48f0:	3108      	adds	r1, #8
    48f2:	2c10      	cmp	r4, #16
    48f4:	dd17      	ble.n	4926 <_vfprintf_r+0x36a>
    48f6:	4640      	mov	r0, r8
    48f8:	3210      	adds	r2, #16
    48fa:	3301      	adds	r3, #1
    48fc:	6008      	str	r0, [r1, #0]
    48fe:	604d      	str	r5, [r1, #4]
    4900:	60ba      	str	r2, [r7, #8]
    4902:	607b      	str	r3, [r7, #4]
    4904:	2b07      	cmp	r3, #7
    4906:	ddf2      	ble.n	48ee <_vfprintf_r+0x332>
    4908:	003a      	movs	r2, r7
    490a:	0031      	movs	r1, r6
    490c:	9806      	ldr	r0, [sp, #24]
    490e:	f004 f8b7 	bl	8a80 <__sprint_r>
    4912:	2800      	cmp	r0, #0
    4914:	d001      	beq.n	491a <_vfprintf_r+0x35e>
    4916:	f000 fccf 	bl	52b8 <_vfprintf_r+0xcfc>
    491a:	3c10      	subs	r4, #16
    491c:	68ba      	ldr	r2, [r7, #8]
    491e:	687b      	ldr	r3, [r7, #4]
    4920:	a932      	add	r1, sp, #200	; 0xc8
    4922:	2c10      	cmp	r4, #16
    4924:	dce7      	bgt.n	48f6 <_vfprintf_r+0x33a>
    4926:	46b3      	mov	fp, r6
    4928:	000e      	movs	r6, r1
    492a:	4641      	mov	r1, r8
    492c:	6074      	str	r4, [r6, #4]
    492e:	3301      	adds	r3, #1
    4930:	18a4      	adds	r4, r4, r2
    4932:	6031      	str	r1, [r6, #0]
    4934:	60bc      	str	r4, [r7, #8]
    4936:	607b      	str	r3, [r7, #4]
    4938:	2b07      	cmp	r3, #7
    493a:	dd01      	ble.n	4940 <_vfprintf_r+0x384>
    493c:	f000 fcae 	bl	529c <_vfprintf_r+0xce0>
    4940:	ab16      	add	r3, sp, #88	; 0x58
    4942:	7fdb      	ldrb	r3, [r3, #31]
    4944:	3608      	adds	r6, #8
    4946:	4698      	mov	r8, r3
    4948:	e1ca      	b.n	4ce0 <_vfprintf_r+0x724>
    494a:	46c0      	nop			; (mov r8, r8)
    494c:	ffffdfff 	.word	0xffffdfff
    4950:	00009c80 	.word	0x00009c80
    4954:	00009e08 	.word	0x00009e08
    4958:	00009e28 	.word	0x00009e28
    495c:	2200      	movs	r2, #0
    495e:	9d07      	ldr	r5, [sp, #28]
    4960:	3b30      	subs	r3, #48	; 0x30
    4962:	46a8      	mov	r8, r5
    4964:	920b      	str	r2, [sp, #44]	; 0x2c
    4966:	001a      	movs	r2, r3
    4968:	9408      	str	r4, [sp, #32]
    496a:	002c      	movs	r4, r5
    496c:	4655      	mov	r5, sl
    496e:	4682      	mov	sl, r0
    4970:	4640      	mov	r0, r8
    4972:	4688      	mov	r8, r1
    4974:	0011      	movs	r1, r2
    4976:	2200      	movs	r2, #0
    4978:	0093      	lsls	r3, r2, #2
    497a:	189a      	adds	r2, r3, r2
    497c:	7803      	ldrb	r3, [r0, #0]
    497e:	0052      	lsls	r2, r2, #1
    4980:	188a      	adds	r2, r1, r2
    4982:	0019      	movs	r1, r3
    4984:	3401      	adds	r4, #1
    4986:	3930      	subs	r1, #48	; 0x30
    4988:	0020      	movs	r0, r4
    498a:	2909      	cmp	r1, #9
    498c:	d9f4      	bls.n	4978 <_vfprintf_r+0x3bc>
    498e:	9407      	str	r4, [sp, #28]
    4990:	4650      	mov	r0, sl
    4992:	9c08      	ldr	r4, [sp, #32]
    4994:	920b      	str	r2, [sp, #44]	; 0x2c
    4996:	4641      	mov	r1, r8
    4998:	46aa      	mov	sl, r5
    499a:	e69b      	b.n	46d4 <_vfprintf_r+0x118>
    499c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    499e:	9312      	str	r3, [sp, #72]	; 0x48
    49a0:	6813      	ldr	r3, [r2, #0]
    49a2:	2120      	movs	r1, #32
    49a4:	9308      	str	r3, [sp, #32]
    49a6:	466b      	mov	r3, sp
    49a8:	185b      	adds	r3, r3, r1
    49aa:	781b      	ldrb	r3, [r3, #0]
    49ac:	ad28      	add	r5, sp, #160	; 0xa0
    49ae:	702b      	strb	r3, [r5, #0]
    49b0:	2300      	movs	r3, #0
    49b2:	a916      	add	r1, sp, #88	; 0x58
    49b4:	77cb      	strb	r3, [r1, #31]
    49b6:	0013      	movs	r3, r2
    49b8:	3304      	adds	r3, #4
    49ba:	930f      	str	r3, [sp, #60]	; 0x3c
    49bc:	2300      	movs	r3, #0
    49be:	9409      	str	r4, [sp, #36]	; 0x24
    49c0:	4698      	mov	r8, r3
    49c2:	3301      	adds	r3, #1
    49c4:	9308      	str	r3, [sp, #32]
    49c6:	930e      	str	r3, [sp, #56]	; 0x38
    49c8:	2300      	movs	r3, #0
    49ca:	9511      	str	r5, [sp, #68]	; 0x44
    49cc:	469a      	mov	sl, r3
    49ce:	9313      	str	r3, [sp, #76]	; 0x4c
    49d0:	e76f      	b.n	48b2 <_vfprintf_r+0x2f6>
    49d2:	9312      	str	r3, [sp, #72]	; 0x48
    49d4:	2900      	cmp	r1, #0
    49d6:	d001      	beq.n	49dc <_vfprintf_r+0x420>
    49d8:	f001 f94d 	bl	5c76 <_vfprintf_r+0x16ba>
    49dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    49de:	06a3      	lsls	r3, r4, #26
    49e0:	d501      	bpl.n	49e6 <_vfprintf_r+0x42a>
    49e2:	f000 fd5a 	bl	549a <_vfprintf_r+0xede>
    49e6:	06e3      	lsls	r3, r4, #27
    49e8:	d501      	bpl.n	49ee <_vfprintf_r+0x432>
    49ea:	f000 fcab 	bl	5344 <_vfprintf_r+0xd88>
    49ee:	0663      	lsls	r3, r4, #25
    49f0:	d401      	bmi.n	49f6 <_vfprintf_r+0x43a>
    49f2:	f000 fca7 	bl	5344 <_vfprintf_r+0xd88>
    49f6:	2100      	movs	r1, #0
    49f8:	5e53      	ldrsh	r3, [r2, r1]
    49fa:	930c      	str	r3, [sp, #48]	; 0x30
    49fc:	3204      	adds	r2, #4
    49fe:	17db      	asrs	r3, r3, #31
    4a00:	930d      	str	r3, [sp, #52]	; 0x34
    4a02:	920f      	str	r2, [sp, #60]	; 0x3c
    4a04:	2b00      	cmp	r3, #0
    4a06:	da01      	bge.n	4a0c <_vfprintf_r+0x450>
    4a08:	f000 fdb2 	bl	5570 <_vfprintf_r+0xfb4>
    4a0c:	990c      	ldr	r1, [sp, #48]	; 0x30
    4a0e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4a10:	0008      	movs	r0, r1
    4a12:	4651      	mov	r1, sl
    4a14:	ab16      	add	r3, sp, #88	; 0x58
    4a16:	7fdb      	ldrb	r3, [r3, #31]
    4a18:	4310      	orrs	r0, r2
    4a1a:	4698      	mov	r8, r3
    4a1c:	0002      	movs	r2, r0
    4a1e:	2301      	movs	r3, #1
    4a20:	3101      	adds	r1, #1
    4a22:	d000      	beq.n	4a26 <_vfprintf_r+0x46a>
    4a24:	e718      	b.n	4858 <_vfprintf_r+0x29c>
    4a26:	2a00      	cmp	r2, #0
    4a28:	d100      	bne.n	4a2c <_vfprintf_r+0x470>
    4a2a:	e35a      	b.n	50e2 <_vfprintf_r+0xb26>
    4a2c:	9409      	str	r4, [sp, #36]	; 0x24
    4a2e:	2b01      	cmp	r3, #1
    4a30:	d101      	bne.n	4a36 <_vfprintf_r+0x47a>
    4a32:	f000 fc06 	bl	5242 <_vfprintf_r+0xc86>
    4a36:	2b02      	cmp	r3, #2
    4a38:	d000      	beq.n	4a3c <_vfprintf_r+0x480>
    4a3a:	e380      	b.n	513e <_vfprintf_r+0xb82>
    4a3c:	9c19      	ldr	r4, [sp, #100]	; 0x64
    4a3e:	200f      	movs	r0, #15
    4a40:	46a1      	mov	r9, r4
    4a42:	46b4      	mov	ip, r6
    4a44:	ab32      	add	r3, sp, #200	; 0xc8
    4a46:	0019      	movs	r1, r3
    4a48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4a4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4a4c:	0004      	movs	r4, r0
    4a4e:	464d      	mov	r5, r9
    4a50:	4014      	ands	r4, r2
    4a52:	5d2c      	ldrb	r4, [r5, r4]
    4a54:	071e      	lsls	r6, r3, #28
    4a56:	0915      	lsrs	r5, r2, #4
    4a58:	3901      	subs	r1, #1
    4a5a:	432e      	orrs	r6, r5
    4a5c:	700c      	strb	r4, [r1, #0]
    4a5e:	091c      	lsrs	r4, r3, #4
    4a60:	0023      	movs	r3, r4
    4a62:	0034      	movs	r4, r6
    4a64:	0032      	movs	r2, r6
    4a66:	431c      	orrs	r4, r3
    4a68:	d1f0      	bne.n	4a4c <_vfprintf_r+0x490>
    4a6a:	920c      	str	r2, [sp, #48]	; 0x30
    4a6c:	930d      	str	r3, [sp, #52]	; 0x34
    4a6e:	ab32      	add	r3, sp, #200	; 0xc8
    4a70:	1a5b      	subs	r3, r3, r1
    4a72:	9111      	str	r1, [sp, #68]	; 0x44
    4a74:	4666      	mov	r6, ip
    4a76:	930e      	str	r3, [sp, #56]	; 0x38
    4a78:	e70d      	b.n	4896 <_vfprintf_r+0x2da>
    4a7a:	4663      	mov	r3, ip
    4a7c:	431c      	orrs	r4, r3
    4a7e:	9b07      	ldr	r3, [sp, #28]
    4a80:	781b      	ldrb	r3, [r3, #0]
    4a82:	e624      	b.n	46ce <_vfprintf_r+0x112>
    4a84:	9b07      	ldr	r3, [sp, #28]
    4a86:	781b      	ldrb	r3, [r3, #0]
    4a88:	2b6c      	cmp	r3, #108	; 0x6c
    4a8a:	d101      	bne.n	4a90 <_vfprintf_r+0x4d4>
    4a8c:	f000 fe8c 	bl	57a8 <_vfprintf_r+0x11ec>
    4a90:	2210      	movs	r2, #16
    4a92:	4314      	orrs	r4, r2
    4a94:	e61b      	b.n	46ce <_vfprintf_r+0x112>
    4a96:	2900      	cmp	r1, #0
    4a98:	d001      	beq.n	4a9e <_vfprintf_r+0x4e2>
    4a9a:	f001 f8d5 	bl	5c48 <_vfprintf_r+0x168c>
    4a9e:	06a3      	lsls	r3, r4, #26
    4aa0:	d501      	bpl.n	4aa6 <_vfprintf_r+0x4ea>
    4aa2:	f000 fe76 	bl	5792 <_vfprintf_r+0x11d6>
    4aa6:	06e3      	lsls	r3, r4, #27
    4aa8:	d500      	bpl.n	4aac <_vfprintf_r+0x4f0>
    4aaa:	e110      	b.n	4cce <_vfprintf_r+0x712>
    4aac:	0663      	lsls	r3, r4, #25
    4aae:	d400      	bmi.n	4ab2 <_vfprintf_r+0x4f6>
    4ab0:	e10d      	b.n	4cce <_vfprintf_r+0x712>
    4ab2:	4669      	mov	r1, sp
    4ab4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4ab6:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    4ab8:	681a      	ldr	r2, [r3, #0]
    4aba:	3304      	adds	r3, #4
    4abc:	9208      	str	r2, [sp, #32]
    4abe:	8011      	strh	r1, [r2, #0]
    4ac0:	930f      	str	r3, [sp, #60]	; 0x3c
    4ac2:	e5c9      	b.n	4658 <_vfprintf_r+0x9c>
    4ac4:	990f      	ldr	r1, [sp, #60]	; 0x3c
    4ac6:	2230      	movs	r2, #48	; 0x30
    4ac8:	680b      	ldr	r3, [r1, #0]
    4aca:	930c      	str	r3, [sp, #48]	; 0x30
    4acc:	2300      	movs	r3, #0
    4ace:	930d      	str	r3, [sp, #52]	; 0x34
    4ad0:	3302      	adds	r3, #2
    4ad2:	431c      	orrs	r4, r3
    4ad4:	ab1e      	add	r3, sp, #120	; 0x78
    4ad6:	701a      	strb	r2, [r3, #0]
    4ad8:	3248      	adds	r2, #72	; 0x48
    4ada:	705a      	strb	r2, [r3, #1]
    4adc:	000b      	movs	r3, r1
    4ade:	3304      	adds	r3, #4
    4ae0:	930f      	str	r3, [sp, #60]	; 0x3c
    4ae2:	4bc1      	ldr	r3, [pc, #772]	; (4de8 <_vfprintf_r+0x82c>)
    4ae4:	9212      	str	r2, [sp, #72]	; 0x48
    4ae6:	9319      	str	r3, [sp, #100]	; 0x64
    4ae8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4aea:	2302      	movs	r3, #2
    4aec:	e6ac      	b.n	4848 <_vfprintf_r+0x28c>
    4aee:	464b      	mov	r3, r9
    4af0:	431c      	orrs	r4, r3
    4af2:	9b07      	ldr	r3, [sp, #28]
    4af4:	781b      	ldrb	r3, [r3, #0]
    4af6:	e5ea      	b.n	46ce <_vfprintf_r+0x112>
    4af8:	9312      	str	r3, [sp, #72]	; 0x48
    4afa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4afc:	a916      	add	r1, sp, #88	; 0x58
    4afe:	1d1d      	adds	r5, r3, #4
    4b00:	681b      	ldr	r3, [r3, #0]
    4b02:	001a      	movs	r2, r3
    4b04:	9311      	str	r3, [sp, #68]	; 0x44
    4b06:	2300      	movs	r3, #0
    4b08:	77cb      	strb	r3, [r1, #31]
    4b0a:	2a00      	cmp	r2, #0
    4b0c:	d101      	bne.n	4b12 <_vfprintf_r+0x556>
    4b0e:	f000 ff01 	bl	5914 <_vfprintf_r+0x1358>
    4b12:	4653      	mov	r3, sl
    4b14:	3301      	adds	r3, #1
    4b16:	d101      	bne.n	4b1c <_vfprintf_r+0x560>
    4b18:	f000 fe64 	bl	57e4 <_vfprintf_r+0x1228>
    4b1c:	4652      	mov	r2, sl
    4b1e:	2100      	movs	r1, #0
    4b20:	9811      	ldr	r0, [sp, #68]	; 0x44
    4b22:	f003 f965 	bl	7df0 <memchr>
    4b26:	2800      	cmp	r0, #0
    4b28:	d101      	bne.n	4b2e <_vfprintf_r+0x572>
    4b2a:	f000 ff78 	bl	5a1e <_vfprintf_r+0x1462>
    4b2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4b30:	1ac3      	subs	r3, r0, r3
    4b32:	001a      	movs	r2, r3
    4b34:	930e      	str	r3, [sp, #56]	; 0x38
    4b36:	43db      	mvns	r3, r3
    4b38:	17db      	asrs	r3, r3, #31
    4b3a:	401a      	ands	r2, r3
    4b3c:	ab16      	add	r3, sp, #88	; 0x58
    4b3e:	7fdb      	ldrb	r3, [r3, #31]
    4b40:	9208      	str	r2, [sp, #32]
    4b42:	4698      	mov	r8, r3
    4b44:	2300      	movs	r3, #0
    4b46:	950f      	str	r5, [sp, #60]	; 0x3c
    4b48:	9409      	str	r4, [sp, #36]	; 0x24
    4b4a:	469a      	mov	sl, r3
    4b4c:	9313      	str	r3, [sp, #76]	; 0x4c
    4b4e:	e6aa      	b.n	48a6 <_vfprintf_r+0x2ea>
    4b50:	2308      	movs	r3, #8
    4b52:	431c      	orrs	r4, r3
    4b54:	9b07      	ldr	r3, [sp, #28]
    4b56:	781b      	ldrb	r3, [r3, #0]
    4b58:	e5b9      	b.n	46ce <_vfprintf_r+0x112>
    4b5a:	9312      	str	r3, [sp, #72]	; 0x48
    4b5c:	2310      	movs	r3, #16
    4b5e:	431c      	orrs	r4, r3
    4b60:	06a3      	lsls	r3, r4, #26
    4b62:	d501      	bpl.n	4b68 <_vfprintf_r+0x5ac>
    4b64:	f000 fca7 	bl	54b6 <_vfprintf_r+0xefa>
    4b68:	06e3      	lsls	r3, r4, #27
    4b6a:	d500      	bpl.n	4b6e <_vfprintf_r+0x5b2>
    4b6c:	e3ee      	b.n	534c <_vfprintf_r+0xd90>
    4b6e:	0663      	lsls	r3, r4, #25
    4b70:	d400      	bmi.n	4b74 <_vfprintf_r+0x5b8>
    4b72:	e3eb      	b.n	534c <_vfprintf_r+0xd90>
    4b74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4b76:	881a      	ldrh	r2, [r3, #0]
    4b78:	920c      	str	r2, [sp, #48]	; 0x30
    4b7a:	2200      	movs	r2, #0
    4b7c:	3304      	adds	r3, #4
    4b7e:	920d      	str	r2, [sp, #52]	; 0x34
    4b80:	930f      	str	r3, [sp, #60]	; 0x3c
    4b82:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4b84:	2300      	movs	r3, #0
    4b86:	e65f      	b.n	4848 <_vfprintf_r+0x28c>
    4b88:	9312      	str	r3, [sp, #72]	; 0x48
    4b8a:	2310      	movs	r3, #16
    4b8c:	431c      	orrs	r4, r3
    4b8e:	06a3      	lsls	r3, r4, #26
    4b90:	d501      	bpl.n	4b96 <_vfprintf_r+0x5da>
    4b92:	f000 fcba 	bl	550a <_vfprintf_r+0xf4e>
    4b96:	06e3      	lsls	r3, r4, #27
    4b98:	d500      	bpl.n	4b9c <_vfprintf_r+0x5e0>
    4b9a:	e3da      	b.n	5352 <_vfprintf_r+0xd96>
    4b9c:	0663      	lsls	r3, r4, #25
    4b9e:	d400      	bmi.n	4ba2 <_vfprintf_r+0x5e6>
    4ba0:	e3d7      	b.n	5352 <_vfprintf_r+0xd96>
    4ba2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4ba4:	881a      	ldrh	r2, [r3, #0]
    4ba6:	920c      	str	r2, [sp, #48]	; 0x30
    4ba8:	2200      	movs	r2, #0
    4baa:	3304      	adds	r3, #4
    4bac:	920d      	str	r2, [sp, #52]	; 0x34
    4bae:	930f      	str	r3, [sp, #60]	; 0x3c
    4bb0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4bb2:	2301      	movs	r3, #1
    4bb4:	e648      	b.n	4848 <_vfprintf_r+0x28c>
    4bb6:	9312      	str	r3, [sp, #72]	; 0x48
    4bb8:	2900      	cmp	r1, #0
    4bba:	d001      	beq.n	4bc0 <_vfprintf_r+0x604>
    4bbc:	f001 f857 	bl	5c6e <_vfprintf_r+0x16b2>
    4bc0:	4b8a      	ldr	r3, [pc, #552]	; (4dec <_vfprintf_r+0x830>)
    4bc2:	9319      	str	r3, [sp, #100]	; 0x64
    4bc4:	e618      	b.n	47f8 <_vfprintf_r+0x23c>
    4bc6:	2301      	movs	r3, #1
    4bc8:	431c      	orrs	r4, r3
    4bca:	9b07      	ldr	r3, [sp, #28]
    4bcc:	781b      	ldrb	r3, [r3, #0]
    4bce:	e57e      	b.n	46ce <_vfprintf_r+0x112>
    4bd0:	2380      	movs	r3, #128	; 0x80
    4bd2:	431c      	orrs	r4, r3
    4bd4:	9b07      	ldr	r3, [sp, #28]
    4bd6:	781b      	ldrb	r3, [r3, #0]
    4bd8:	e579      	b.n	46ce <_vfprintf_r+0x112>
    4bda:	9b07      	ldr	r3, [sp, #28]
    4bdc:	781b      	ldrb	r3, [r3, #0]
    4bde:	2800      	cmp	r0, #0
    4be0:	d000      	beq.n	4be4 <_vfprintf_r+0x628>
    4be2:	e574      	b.n	46ce <_vfprintf_r+0x112>
    4be4:	2101      	movs	r1, #1
    4be6:	3020      	adds	r0, #32
    4be8:	e571      	b.n	46ce <_vfprintf_r+0x112>
    4bea:	9312      	str	r3, [sp, #72]	; 0x48
    4bec:	2900      	cmp	r1, #0
    4bee:	d001      	beq.n	4bf4 <_vfprintf_r+0x638>
    4bf0:	f001 f839 	bl	5c66 <_vfprintf_r+0x16aa>
    4bf4:	2207      	movs	r2, #7
    4bf6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4bf8:	3307      	adds	r3, #7
    4bfa:	4393      	bics	r3, r2
    4bfc:	3201      	adds	r2, #1
    4bfe:	4694      	mov	ip, r2
    4c00:	449c      	add	ip, r3
    4c02:	4662      	mov	r2, ip
    4c04:	920f      	str	r2, [sp, #60]	; 0x3c
    4c06:	681a      	ldr	r2, [r3, #0]
    4c08:	9216      	str	r2, [sp, #88]	; 0x58
    4c0a:	685b      	ldr	r3, [r3, #4]
    4c0c:	2201      	movs	r2, #1
    4c0e:	9315      	str	r3, [sp, #84]	; 0x54
    4c10:	9b15      	ldr	r3, [sp, #84]	; 0x54
    4c12:	9d16      	ldr	r5, [sp, #88]	; 0x58
    4c14:	005b      	lsls	r3, r3, #1
    4c16:	085b      	lsrs	r3, r3, #1
    4c18:	4698      	mov	r8, r3
    4c1a:	4252      	negs	r2, r2
    4c1c:	4b74      	ldr	r3, [pc, #464]	; (4df0 <_vfprintf_r+0x834>)
    4c1e:	0028      	movs	r0, r5
    4c20:	4641      	mov	r1, r8
    4c22:	f004 fde7 	bl	97f4 <__aeabi_dcmpun>
    4c26:	2800      	cmp	r0, #0
    4c28:	d001      	beq.n	4c2e <_vfprintf_r+0x672>
    4c2a:	f000 fcb4 	bl	5596 <_vfprintf_r+0xfda>
    4c2e:	2201      	movs	r2, #1
    4c30:	4b6f      	ldr	r3, [pc, #444]	; (4df0 <_vfprintf_r+0x834>)
    4c32:	4252      	negs	r2, r2
    4c34:	0028      	movs	r0, r5
    4c36:	4641      	mov	r1, r8
    4c38:	f7ff f9aa 	bl	3f90 <__aeabi_dcmple>
    4c3c:	2800      	cmp	r0, #0
    4c3e:	d001      	beq.n	4c44 <_vfprintf_r+0x688>
    4c40:	f000 fca9 	bl	5596 <_vfprintf_r+0xfda>
    4c44:	2200      	movs	r2, #0
    4c46:	2300      	movs	r3, #0
    4c48:	9816      	ldr	r0, [sp, #88]	; 0x58
    4c4a:	9915      	ldr	r1, [sp, #84]	; 0x54
    4c4c:	f7ff f996 	bl	3f7c <__aeabi_dcmplt>
    4c50:	2800      	cmp	r0, #0
    4c52:	d001      	beq.n	4c58 <_vfprintf_r+0x69c>
    4c54:	f000 fd55 	bl	5702 <_vfprintf_r+0x1146>
    4c58:	ab16      	add	r3, sp, #88	; 0x58
    4c5a:	7fdb      	ldrb	r3, [r3, #31]
    4c5c:	4698      	mov	r8, r3
    4c5e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4c60:	2b47      	cmp	r3, #71	; 0x47
    4c62:	dd01      	ble.n	4c68 <_vfprintf_r+0x6ac>
    4c64:	f000 fdb4 	bl	57d0 <_vfprintf_r+0x1214>
    4c68:	4b62      	ldr	r3, [pc, #392]	; (4df4 <_vfprintf_r+0x838>)
    4c6a:	9311      	str	r3, [sp, #68]	; 0x44
    4c6c:	2380      	movs	r3, #128	; 0x80
    4c6e:	439c      	bics	r4, r3
    4c70:	3b7d      	subs	r3, #125	; 0x7d
    4c72:	9308      	str	r3, [sp, #32]
    4c74:	930e      	str	r3, [sp, #56]	; 0x38
    4c76:	2300      	movs	r3, #0
    4c78:	9409      	str	r4, [sp, #36]	; 0x24
    4c7a:	469a      	mov	sl, r3
    4c7c:	9313      	str	r3, [sp, #76]	; 0x4c
    4c7e:	e612      	b.n	48a6 <_vfprintf_r+0x2ea>
    4c80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4c82:	1d1a      	adds	r2, r3, #4
    4c84:	681b      	ldr	r3, [r3, #0]
    4c86:	930b      	str	r3, [sp, #44]	; 0x2c
    4c88:	2b00      	cmp	r3, #0
    4c8a:	da00      	bge.n	4c8e <_vfprintf_r+0x6d2>
    4c8c:	e578      	b.n	4780 <_vfprintf_r+0x1c4>
    4c8e:	9b07      	ldr	r3, [sp, #28]
    4c90:	920f      	str	r2, [sp, #60]	; 0x3c
    4c92:	781b      	ldrb	r3, [r3, #0]
    4c94:	e51b      	b.n	46ce <_vfprintf_r+0x112>
    4c96:	9312      	str	r3, [sp, #72]	; 0x48
    4c98:	2900      	cmp	r1, #0
    4c9a:	d001      	beq.n	4ca0 <_vfprintf_r+0x6e4>
    4c9c:	f000 ffcc 	bl	5c38 <_vfprintf_r+0x167c>
    4ca0:	2310      	movs	r3, #16
    4ca2:	431c      	orrs	r4, r3
    4ca4:	e69a      	b.n	49dc <_vfprintf_r+0x420>
    4ca6:	9312      	str	r3, [sp, #72]	; 0x48
    4ca8:	e771      	b.n	4b8e <_vfprintf_r+0x5d2>
    4caa:	9312      	str	r3, [sp, #72]	; 0x48
    4cac:	e758      	b.n	4b60 <_vfprintf_r+0x5a4>
    4cae:	9312      	str	r3, [sp, #72]	; 0x48
    4cb0:	2900      	cmp	r1, #0
    4cb2:	d001      	beq.n	4cb8 <_vfprintf_r+0x6fc>
    4cb4:	f000 ffd3 	bl	5c5e <_vfprintf_r+0x16a2>
    4cb8:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4cba:	2b00      	cmp	r3, #0
    4cbc:	d100      	bne.n	4cc0 <_vfprintf_r+0x704>
    4cbe:	e18d      	b.n	4fdc <_vfprintf_r+0xa20>
    4cc0:	ad28      	add	r5, sp, #160	; 0xa0
    4cc2:	702b      	strb	r3, [r5, #0]
    4cc4:	2300      	movs	r3, #0
    4cc6:	aa16      	add	r2, sp, #88	; 0x58
    4cc8:	77d3      	strb	r3, [r2, #31]
    4cca:	9409      	str	r4, [sp, #36]	; 0x24
    4ccc:	e678      	b.n	49c0 <_vfprintf_r+0x404>
    4cce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4cd0:	990a      	ldr	r1, [sp, #40]	; 0x28
    4cd2:	6813      	ldr	r3, [r2, #0]
    4cd4:	6019      	str	r1, [r3, #0]
    4cd6:	0013      	movs	r3, r2
    4cd8:	3304      	adds	r3, #4
    4cda:	930f      	str	r3, [sp, #60]	; 0x3c
    4cdc:	e4bc      	b.n	4658 <_vfprintf_r+0x9c>
    4cde:	68bc      	ldr	r4, [r7, #8]
    4ce0:	4643      	mov	r3, r8
    4ce2:	2b00      	cmp	r3, #0
    4ce4:	d00f      	beq.n	4d06 <_vfprintf_r+0x74a>
    4ce6:	aa16      	add	r2, sp, #88	; 0x58
    4ce8:	231f      	movs	r3, #31
    4cea:	4694      	mov	ip, r2
    4cec:	4463      	add	r3, ip
    4cee:	6033      	str	r3, [r6, #0]
    4cf0:	2301      	movs	r3, #1
    4cf2:	6073      	str	r3, [r6, #4]
    4cf4:	687b      	ldr	r3, [r7, #4]
    4cf6:	3401      	adds	r4, #1
    4cf8:	3301      	adds	r3, #1
    4cfa:	60bc      	str	r4, [r7, #8]
    4cfc:	607b      	str	r3, [r7, #4]
    4cfe:	2b07      	cmp	r3, #7
    4d00:	dd00      	ble.n	4d04 <_vfprintf_r+0x748>
    4d02:	e203      	b.n	510c <_vfprintf_r+0xb50>
    4d04:	3608      	adds	r6, #8
    4d06:	464b      	mov	r3, r9
    4d08:	2b00      	cmp	r3, #0
    4d0a:	d00c      	beq.n	4d26 <_vfprintf_r+0x76a>
    4d0c:	ab1e      	add	r3, sp, #120	; 0x78
    4d0e:	6033      	str	r3, [r6, #0]
    4d10:	2302      	movs	r3, #2
    4d12:	6073      	str	r3, [r6, #4]
    4d14:	687b      	ldr	r3, [r7, #4]
    4d16:	3402      	adds	r4, #2
    4d18:	3301      	adds	r3, #1
    4d1a:	60bc      	str	r4, [r7, #8]
    4d1c:	607b      	str	r3, [r7, #4]
    4d1e:	2b07      	cmp	r3, #7
    4d20:	dd00      	ble.n	4d24 <_vfprintf_r+0x768>
    4d22:	e1fd      	b.n	5120 <_vfprintf_r+0xb64>
    4d24:	3608      	adds	r6, #8
    4d26:	9b10      	ldr	r3, [sp, #64]	; 0x40
    4d28:	2b80      	cmp	r3, #128	; 0x80
    4d2a:	d100      	bne.n	4d2e <_vfprintf_r+0x772>
    4d2c:	e173      	b.n	5016 <_vfprintf_r+0xa5a>
    4d2e:	4653      	mov	r3, sl
    4d30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4d32:	1a9d      	subs	r5, r3, r2
    4d34:	2d00      	cmp	r5, #0
    4d36:	dd32      	ble.n	4d9e <_vfprintf_r+0x7e2>
    4d38:	4a2f      	ldr	r2, [pc, #188]	; (4df8 <_vfprintf_r+0x83c>)
    4d3a:	687b      	ldr	r3, [r7, #4]
    4d3c:	4691      	mov	r9, r2
    4d3e:	2d10      	cmp	r5, #16
    4d40:	dd22      	ble.n	4d88 <_vfprintf_r+0x7cc>
    4d42:	2210      	movs	r2, #16
    4d44:	4692      	mov	sl, r2
    4d46:	0022      	movs	r2, r4
    4d48:	465c      	mov	r4, fp
    4d4a:	e003      	b.n	4d54 <_vfprintf_r+0x798>
    4d4c:	3d10      	subs	r5, #16
    4d4e:	3608      	adds	r6, #8
    4d50:	2d10      	cmp	r5, #16
    4d52:	dd17      	ble.n	4d84 <_vfprintf_r+0x7c8>
    4d54:	4649      	mov	r1, r9
    4d56:	6031      	str	r1, [r6, #0]
    4d58:	4651      	mov	r1, sl
    4d5a:	3210      	adds	r2, #16
    4d5c:	3301      	adds	r3, #1
    4d5e:	6071      	str	r1, [r6, #4]
    4d60:	60ba      	str	r2, [r7, #8]
    4d62:	607b      	str	r3, [r7, #4]
    4d64:	2b07      	cmp	r3, #7
    4d66:	ddf1      	ble.n	4d4c <_vfprintf_r+0x790>
    4d68:	003a      	movs	r2, r7
    4d6a:	0021      	movs	r1, r4
    4d6c:	9806      	ldr	r0, [sp, #24]
    4d6e:	f003 fe87 	bl	8a80 <__sprint_r>
    4d72:	2800      	cmp	r0, #0
    4d74:	d000      	beq.n	4d78 <_vfprintf_r+0x7bc>
    4d76:	e18a      	b.n	508e <_vfprintf_r+0xad2>
    4d78:	3d10      	subs	r5, #16
    4d7a:	68ba      	ldr	r2, [r7, #8]
    4d7c:	687b      	ldr	r3, [r7, #4]
    4d7e:	ae32      	add	r6, sp, #200	; 0xc8
    4d80:	2d10      	cmp	r5, #16
    4d82:	dce7      	bgt.n	4d54 <_vfprintf_r+0x798>
    4d84:	46a3      	mov	fp, r4
    4d86:	0014      	movs	r4, r2
    4d88:	464a      	mov	r2, r9
    4d8a:	1964      	adds	r4, r4, r5
    4d8c:	3301      	adds	r3, #1
    4d8e:	6032      	str	r2, [r6, #0]
    4d90:	6075      	str	r5, [r6, #4]
    4d92:	60bc      	str	r4, [r7, #8]
    4d94:	607b      	str	r3, [r7, #4]
    4d96:	2b07      	cmp	r3, #7
    4d98:	dd00      	ble.n	4d9c <_vfprintf_r+0x7e0>
    4d9a:	e1ad      	b.n	50f8 <_vfprintf_r+0xb3c>
    4d9c:	3608      	adds	r6, #8
    4d9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4da0:	05db      	lsls	r3, r3, #23
    4da2:	d500      	bpl.n	4da6 <_vfprintf_r+0x7ea>
    4da4:	e0be      	b.n	4f24 <_vfprintf_r+0x968>
    4da6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4da8:	6033      	str	r3, [r6, #0]
    4daa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    4dac:	469c      	mov	ip, r3
    4dae:	6073      	str	r3, [r6, #4]
    4db0:	687b      	ldr	r3, [r7, #4]
    4db2:	4464      	add	r4, ip
    4db4:	3301      	adds	r3, #1
    4db6:	60bc      	str	r4, [r7, #8]
    4db8:	607b      	str	r3, [r7, #4]
    4dba:	2b07      	cmp	r3, #7
    4dbc:	dd00      	ble.n	4dc0 <_vfprintf_r+0x804>
    4dbe:	e0a6      	b.n	4f0e <_vfprintf_r+0x952>
    4dc0:	3608      	adds	r6, #8
    4dc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4dc4:	075b      	lsls	r3, r3, #29
    4dc6:	d54a      	bpl.n	4e5e <_vfprintf_r+0x8a2>
    4dc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4dca:	9a08      	ldr	r2, [sp, #32]
    4dcc:	1a9d      	subs	r5, r3, r2
    4dce:	2d00      	cmp	r5, #0
    4dd0:	dd45      	ble.n	4e5e <_vfprintf_r+0x8a2>
    4dd2:	4a0a      	ldr	r2, [pc, #40]	; (4dfc <_vfprintf_r+0x840>)
    4dd4:	687b      	ldr	r3, [r7, #4]
    4dd6:	4690      	mov	r8, r2
    4dd8:	2d10      	cmp	r5, #16
    4dda:	dd2f      	ble.n	4e3c <_vfprintf_r+0x880>
    4ddc:	2210      	movs	r2, #16
    4dde:	4691      	mov	r9, r2
    4de0:	0022      	movs	r2, r4
    4de2:	465c      	mov	r4, fp
    4de4:	e010      	b.n	4e08 <_vfprintf_r+0x84c>
    4de6:	46c0      	nop			; (mov r8, r8)
    4de8:	00009e08 	.word	0x00009e08
    4dec:	00009df4 	.word	0x00009df4
    4df0:	7fefffff 	.word	0x7fefffff
    4df4:	00009de4 	.word	0x00009de4
    4df8:	00009e38 	.word	0x00009e38
    4dfc:	00009e28 	.word	0x00009e28
    4e00:	3d10      	subs	r5, #16
    4e02:	3608      	adds	r6, #8
    4e04:	2d10      	cmp	r5, #16
    4e06:	dd17      	ble.n	4e38 <_vfprintf_r+0x87c>
    4e08:	49d1      	ldr	r1, [pc, #836]	; (5150 <_vfprintf_r+0xb94>)
    4e0a:	3210      	adds	r2, #16
    4e0c:	6031      	str	r1, [r6, #0]
    4e0e:	4649      	mov	r1, r9
    4e10:	3301      	adds	r3, #1
    4e12:	6071      	str	r1, [r6, #4]
    4e14:	60ba      	str	r2, [r7, #8]
    4e16:	607b      	str	r3, [r7, #4]
    4e18:	2b07      	cmp	r3, #7
    4e1a:	ddf1      	ble.n	4e00 <_vfprintf_r+0x844>
    4e1c:	003a      	movs	r2, r7
    4e1e:	0021      	movs	r1, r4
    4e20:	9806      	ldr	r0, [sp, #24]
    4e22:	f003 fe2d 	bl	8a80 <__sprint_r>
    4e26:	2800      	cmp	r0, #0
    4e28:	d000      	beq.n	4e2c <_vfprintf_r+0x870>
    4e2a:	e130      	b.n	508e <_vfprintf_r+0xad2>
    4e2c:	3d10      	subs	r5, #16
    4e2e:	68ba      	ldr	r2, [r7, #8]
    4e30:	687b      	ldr	r3, [r7, #4]
    4e32:	ae32      	add	r6, sp, #200	; 0xc8
    4e34:	2d10      	cmp	r5, #16
    4e36:	dce7      	bgt.n	4e08 <_vfprintf_r+0x84c>
    4e38:	46a3      	mov	fp, r4
    4e3a:	0014      	movs	r4, r2
    4e3c:	4642      	mov	r2, r8
    4e3e:	1964      	adds	r4, r4, r5
    4e40:	3301      	adds	r3, #1
    4e42:	c624      	stmia	r6!, {r2, r5}
    4e44:	60bc      	str	r4, [r7, #8]
    4e46:	607b      	str	r3, [r7, #4]
    4e48:	2b07      	cmp	r3, #7
    4e4a:	dd08      	ble.n	4e5e <_vfprintf_r+0x8a2>
    4e4c:	003a      	movs	r2, r7
    4e4e:	4659      	mov	r1, fp
    4e50:	9806      	ldr	r0, [sp, #24]
    4e52:	f003 fe15 	bl	8a80 <__sprint_r>
    4e56:	2800      	cmp	r0, #0
    4e58:	d000      	beq.n	4e5c <_vfprintf_r+0x8a0>
    4e5a:	e13f      	b.n	50dc <_vfprintf_r+0xb20>
    4e5c:	68bc      	ldr	r4, [r7, #8]
    4e5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4e60:	9908      	ldr	r1, [sp, #32]
    4e62:	428b      	cmp	r3, r1
    4e64:	da00      	bge.n	4e68 <_vfprintf_r+0x8ac>
    4e66:	000b      	movs	r3, r1
    4e68:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4e6a:	4694      	mov	ip, r2
    4e6c:	449c      	add	ip, r3
    4e6e:	4663      	mov	r3, ip
    4e70:	930a      	str	r3, [sp, #40]	; 0x28
    4e72:	2c00      	cmp	r4, #0
    4e74:	d000      	beq.n	4e78 <_vfprintf_r+0x8bc>
    4e76:	e129      	b.n	50cc <_vfprintf_r+0xb10>
    4e78:	2300      	movs	r3, #0
    4e7a:	ae32      	add	r6, sp, #200	; 0xc8
    4e7c:	607b      	str	r3, [r7, #4]
    4e7e:	f7ff fbeb 	bl	4658 <_vfprintf_r+0x9c>
    4e82:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4e84:	2b01      	cmp	r3, #1
    4e86:	dc00      	bgt.n	4e8a <_vfprintf_r+0x8ce>
    4e88:	e103      	b.n	5092 <_vfprintf_r+0xad6>
    4e8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4e8c:	3401      	adds	r4, #1
    4e8e:	6033      	str	r3, [r6, #0]
    4e90:	2301      	movs	r3, #1
    4e92:	6073      	str	r3, [r6, #4]
    4e94:	687b      	ldr	r3, [r7, #4]
    4e96:	60bc      	str	r4, [r7, #8]
    4e98:	3301      	adds	r3, #1
    4e9a:	607b      	str	r3, [r7, #4]
    4e9c:	2b07      	cmp	r3, #7
    4e9e:	dd00      	ble.n	4ea2 <_vfprintf_r+0x8e6>
    4ea0:	e2ef      	b.n	5482 <_vfprintf_r+0xec6>
    4ea2:	3608      	adds	r6, #8
    4ea4:	9a18      	ldr	r2, [sp, #96]	; 0x60
    4ea6:	3301      	adds	r3, #1
    4ea8:	6032      	str	r2, [r6, #0]
    4eaa:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    4eac:	4698      	mov	r8, r3
    4eae:	4694      	mov	ip, r2
    4eb0:	4464      	add	r4, ip
    4eb2:	6072      	str	r2, [r6, #4]
    4eb4:	60bc      	str	r4, [r7, #8]
    4eb6:	607b      	str	r3, [r7, #4]
    4eb8:	2b07      	cmp	r3, #7
    4eba:	dd00      	ble.n	4ebe <_vfprintf_r+0x902>
    4ebc:	e318      	b.n	54f0 <_vfprintf_r+0xf34>
    4ebe:	3608      	adds	r6, #8
    4ec0:	2200      	movs	r2, #0
    4ec2:	2300      	movs	r3, #0
    4ec4:	9816      	ldr	r0, [sp, #88]	; 0x58
    4ec6:	9915      	ldr	r1, [sp, #84]	; 0x54
    4ec8:	f7ff f852 	bl	3f70 <__aeabi_dcmpeq>
    4ecc:	2800      	cmp	r0, #0
    4ece:	d000      	beq.n	4ed2 <_vfprintf_r+0x916>
    4ed0:	e1f4      	b.n	52bc <_vfprintf_r+0xd00>
    4ed2:	9d11      	ldr	r5, [sp, #68]	; 0x44
    4ed4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4ed6:	3501      	adds	r5, #1
    4ed8:	3b01      	subs	r3, #1
    4eda:	6035      	str	r5, [r6, #0]
    4edc:	6073      	str	r3, [r6, #4]
    4ede:	18e4      	adds	r4, r4, r3
    4ee0:	2301      	movs	r3, #1
    4ee2:	469c      	mov	ip, r3
    4ee4:	44e0      	add	r8, ip
    4ee6:	4643      	mov	r3, r8
    4ee8:	60bc      	str	r4, [r7, #8]
    4eea:	607b      	str	r3, [r7, #4]
    4eec:	2b07      	cmp	r3, #7
    4eee:	dd00      	ble.n	4ef2 <_vfprintf_r+0x936>
    4ef0:	e0e0      	b.n	50b4 <_vfprintf_r+0xaf8>
    4ef2:	3608      	adds	r6, #8
    4ef4:	ab21      	add	r3, sp, #132	; 0x84
    4ef6:	6033      	str	r3, [r6, #0]
    4ef8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    4efa:	469c      	mov	ip, r3
    4efc:	6073      	str	r3, [r6, #4]
    4efe:	4643      	mov	r3, r8
    4f00:	4464      	add	r4, ip
    4f02:	3301      	adds	r3, #1
    4f04:	60bc      	str	r4, [r7, #8]
    4f06:	607b      	str	r3, [r7, #4]
    4f08:	2b07      	cmp	r3, #7
    4f0a:	dc00      	bgt.n	4f0e <_vfprintf_r+0x952>
    4f0c:	e758      	b.n	4dc0 <_vfprintf_r+0x804>
    4f0e:	003a      	movs	r2, r7
    4f10:	4659      	mov	r1, fp
    4f12:	9806      	ldr	r0, [sp, #24]
    4f14:	f003 fdb4 	bl	8a80 <__sprint_r>
    4f18:	2800      	cmp	r0, #0
    4f1a:	d000      	beq.n	4f1e <_vfprintf_r+0x962>
    4f1c:	e0de      	b.n	50dc <_vfprintf_r+0xb20>
    4f1e:	68bc      	ldr	r4, [r7, #8]
    4f20:	ae32      	add	r6, sp, #200	; 0xc8
    4f22:	e74e      	b.n	4dc2 <_vfprintf_r+0x806>
    4f24:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4f26:	2b65      	cmp	r3, #101	; 0x65
    4f28:	ddab      	ble.n	4e82 <_vfprintf_r+0x8c6>
    4f2a:	2200      	movs	r2, #0
    4f2c:	2300      	movs	r3, #0
    4f2e:	9816      	ldr	r0, [sp, #88]	; 0x58
    4f30:	9915      	ldr	r1, [sp, #84]	; 0x54
    4f32:	f7ff f81d 	bl	3f70 <__aeabi_dcmpeq>
    4f36:	2800      	cmp	r0, #0
    4f38:	d100      	bne.n	4f3c <_vfprintf_r+0x980>
    4f3a:	e134      	b.n	51a6 <_vfprintf_r+0xbea>
    4f3c:	4b85      	ldr	r3, [pc, #532]	; (5154 <_vfprintf_r+0xb98>)
    4f3e:	3401      	adds	r4, #1
    4f40:	6033      	str	r3, [r6, #0]
    4f42:	2301      	movs	r3, #1
    4f44:	6073      	str	r3, [r6, #4]
    4f46:	687b      	ldr	r3, [r7, #4]
    4f48:	60bc      	str	r4, [r7, #8]
    4f4a:	3301      	adds	r3, #1
    4f4c:	607b      	str	r3, [r7, #4]
    4f4e:	2b07      	cmp	r3, #7
    4f50:	dd00      	ble.n	4f54 <_vfprintf_r+0x998>
    4f52:	e3dc      	b.n	570e <_vfprintf_r+0x1152>
    4f54:	3608      	adds	r6, #8
    4f56:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    4f58:	9a14      	ldr	r2, [sp, #80]	; 0x50
    4f5a:	4293      	cmp	r3, r2
    4f5c:	db03      	blt.n	4f66 <_vfprintf_r+0x9aa>
    4f5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4f60:	07db      	lsls	r3, r3, #31
    4f62:	d400      	bmi.n	4f66 <_vfprintf_r+0x9aa>
    4f64:	e3b7      	b.n	56d6 <_vfprintf_r+0x111a>
    4f66:	9b18      	ldr	r3, [sp, #96]	; 0x60
    4f68:	68ba      	ldr	r2, [r7, #8]
    4f6a:	6033      	str	r3, [r6, #0]
    4f6c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    4f6e:	469c      	mov	ip, r3
    4f70:	6073      	str	r3, [r6, #4]
    4f72:	687b      	ldr	r3, [r7, #4]
    4f74:	4462      	add	r2, ip
    4f76:	3301      	adds	r3, #1
    4f78:	0014      	movs	r4, r2
    4f7a:	60ba      	str	r2, [r7, #8]
    4f7c:	607b      	str	r3, [r7, #4]
    4f7e:	2b07      	cmp	r3, #7
    4f80:	dd01      	ble.n	4f86 <_vfprintf_r+0x9ca>
    4f82:	f000 fc19 	bl	57b8 <_vfprintf_r+0x11fc>
    4f86:	3608      	adds	r6, #8
    4f88:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4f8a:	1e5d      	subs	r5, r3, #1
    4f8c:	2d00      	cmp	r5, #0
    4f8e:	dc00      	bgt.n	4f92 <_vfprintf_r+0x9d6>
    4f90:	e717      	b.n	4dc2 <_vfprintf_r+0x806>
    4f92:	4a71      	ldr	r2, [pc, #452]	; (5158 <_vfprintf_r+0xb9c>)
    4f94:	687b      	ldr	r3, [r7, #4]
    4f96:	4691      	mov	r9, r2
    4f98:	2d10      	cmp	r5, #16
    4f9a:	dc00      	bgt.n	4f9e <_vfprintf_r+0x9e2>
    4f9c:	e1c3      	b.n	5326 <_vfprintf_r+0xd6a>
    4f9e:	2210      	movs	r2, #16
    4fa0:	4690      	mov	r8, r2
    4fa2:	0022      	movs	r2, r4
    4fa4:	464c      	mov	r4, r9
    4fa6:	46d9      	mov	r9, fp
    4fa8:	e004      	b.n	4fb4 <_vfprintf_r+0x9f8>
    4faa:	3608      	adds	r6, #8
    4fac:	3d10      	subs	r5, #16
    4fae:	2d10      	cmp	r5, #16
    4fb0:	dc00      	bgt.n	4fb4 <_vfprintf_r+0x9f8>
    4fb2:	e37c      	b.n	56ae <_vfprintf_r+0x10f2>
    4fb4:	4641      	mov	r1, r8
    4fb6:	3210      	adds	r2, #16
    4fb8:	3301      	adds	r3, #1
    4fba:	6034      	str	r4, [r6, #0]
    4fbc:	6071      	str	r1, [r6, #4]
    4fbe:	60ba      	str	r2, [r7, #8]
    4fc0:	607b      	str	r3, [r7, #4]
    4fc2:	2b07      	cmp	r3, #7
    4fc4:	ddf1      	ble.n	4faa <_vfprintf_r+0x9ee>
    4fc6:	003a      	movs	r2, r7
    4fc8:	4649      	mov	r1, r9
    4fca:	9806      	ldr	r0, [sp, #24]
    4fcc:	f003 fd58 	bl	8a80 <__sprint_r>
    4fd0:	2800      	cmp	r0, #0
    4fd2:	d10b      	bne.n	4fec <_vfprintf_r+0xa30>
    4fd4:	68ba      	ldr	r2, [r7, #8]
    4fd6:	687b      	ldr	r3, [r7, #4]
    4fd8:	ae32      	add	r6, sp, #200	; 0xc8
    4fda:	e7e7      	b.n	4fac <_vfprintf_r+0x9f0>
    4fdc:	68bb      	ldr	r3, [r7, #8]
    4fde:	46d9      	mov	r9, fp
    4fe0:	2b00      	cmp	r3, #0
    4fe2:	d001      	beq.n	4fe8 <_vfprintf_r+0xa2c>
    4fe4:	f000 fd4c 	bl	5a80 <_vfprintf_r+0x14c4>
    4fe8:	2300      	movs	r3, #0
    4fea:	607b      	str	r3, [r7, #4]
    4fec:	464b      	mov	r3, r9
    4fee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    4ff0:	07db      	lsls	r3, r3, #31
    4ff2:	d40d      	bmi.n	5010 <_vfprintf_r+0xa54>
    4ff4:	464b      	mov	r3, r9
    4ff6:	899b      	ldrh	r3, [r3, #12]
    4ff8:	059a      	lsls	r2, r3, #22
    4ffa:	d505      	bpl.n	5008 <_vfprintf_r+0xa4c>
    4ffc:	065b      	lsls	r3, r3, #25
    4ffe:	d401      	bmi.n	5004 <_vfprintf_r+0xa48>
    5000:	f7ff fb8d 	bl	471e <_vfprintf_r+0x162>
    5004:	f7ff fb88 	bl	4718 <_vfprintf_r+0x15c>
    5008:	464b      	mov	r3, r9
    500a:	6d98      	ldr	r0, [r3, #88]	; 0x58
    500c:	f002 fbb8 	bl	7780 <__retarget_lock_release_recursive>
    5010:	464b      	mov	r3, r9
    5012:	899b      	ldrh	r3, [r3, #12]
    5014:	e7f2      	b.n	4ffc <_vfprintf_r+0xa40>
    5016:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5018:	9a08      	ldr	r2, [sp, #32]
    501a:	1a9d      	subs	r5, r3, r2
    501c:	2d00      	cmp	r5, #0
    501e:	dc00      	bgt.n	5022 <_vfprintf_r+0xa66>
    5020:	e685      	b.n	4d2e <_vfprintf_r+0x772>
    5022:	4a4d      	ldr	r2, [pc, #308]	; (5158 <_vfprintf_r+0xb9c>)
    5024:	687b      	ldr	r3, [r7, #4]
    5026:	4691      	mov	r9, r2
    5028:	2d10      	cmp	r5, #16
    502a:	dd24      	ble.n	5076 <_vfprintf_r+0xaba>
    502c:	2210      	movs	r2, #16
    502e:	0021      	movs	r1, r4
    5030:	4690      	mov	r8, r2
    5032:	465c      	mov	r4, fp
    5034:	0032      	movs	r2, r6
    5036:	464e      	mov	r6, r9
    5038:	e003      	b.n	5042 <_vfprintf_r+0xa86>
    503a:	3d10      	subs	r5, #16
    503c:	3208      	adds	r2, #8
    503e:	2d10      	cmp	r5, #16
    5040:	dd15      	ble.n	506e <_vfprintf_r+0xab2>
    5042:	4640      	mov	r0, r8
    5044:	3110      	adds	r1, #16
    5046:	3301      	adds	r3, #1
    5048:	6016      	str	r6, [r2, #0]
    504a:	6050      	str	r0, [r2, #4]
    504c:	60b9      	str	r1, [r7, #8]
    504e:	607b      	str	r3, [r7, #4]
    5050:	2b07      	cmp	r3, #7
    5052:	ddf2      	ble.n	503a <_vfprintf_r+0xa7e>
    5054:	003a      	movs	r2, r7
    5056:	0021      	movs	r1, r4
    5058:	9806      	ldr	r0, [sp, #24]
    505a:	f003 fd11 	bl	8a80 <__sprint_r>
    505e:	2800      	cmp	r0, #0
    5060:	d115      	bne.n	508e <_vfprintf_r+0xad2>
    5062:	3d10      	subs	r5, #16
    5064:	68b9      	ldr	r1, [r7, #8]
    5066:	687b      	ldr	r3, [r7, #4]
    5068:	aa32      	add	r2, sp, #200	; 0xc8
    506a:	2d10      	cmp	r5, #16
    506c:	dce9      	bgt.n	5042 <_vfprintf_r+0xa86>
    506e:	46a3      	mov	fp, r4
    5070:	46b1      	mov	r9, r6
    5072:	000c      	movs	r4, r1
    5074:	0016      	movs	r6, r2
    5076:	464a      	mov	r2, r9
    5078:	1964      	adds	r4, r4, r5
    507a:	3301      	adds	r3, #1
    507c:	6032      	str	r2, [r6, #0]
    507e:	6075      	str	r5, [r6, #4]
    5080:	60bc      	str	r4, [r7, #8]
    5082:	607b      	str	r3, [r7, #4]
    5084:	2b07      	cmp	r3, #7
    5086:	dd00      	ble.n	508a <_vfprintf_r+0xace>
    5088:	e263      	b.n	5552 <_vfprintf_r+0xf96>
    508a:	3608      	adds	r6, #8
    508c:	e64f      	b.n	4d2e <_vfprintf_r+0x772>
    508e:	46a1      	mov	r9, r4
    5090:	e7ac      	b.n	4fec <_vfprintf_r+0xa30>
    5092:	2301      	movs	r3, #1
    5094:	9a09      	ldr	r2, [sp, #36]	; 0x24
    5096:	4213      	tst	r3, r2
    5098:	d000      	beq.n	509c <_vfprintf_r+0xae0>
    509a:	e6f6      	b.n	4e8a <_vfprintf_r+0x8ce>
    509c:	6073      	str	r3, [r6, #4]
    509e:	687b      	ldr	r3, [r7, #4]
    50a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
    50a2:	3301      	adds	r3, #1
    50a4:	3401      	adds	r4, #1
    50a6:	6032      	str	r2, [r6, #0]
    50a8:	60bc      	str	r4, [r7, #8]
    50aa:	4698      	mov	r8, r3
    50ac:	607b      	str	r3, [r7, #4]
    50ae:	2b07      	cmp	r3, #7
    50b0:	dc00      	bgt.n	50b4 <_vfprintf_r+0xaf8>
    50b2:	e71e      	b.n	4ef2 <_vfprintf_r+0x936>
    50b4:	003a      	movs	r2, r7
    50b6:	4659      	mov	r1, fp
    50b8:	9806      	ldr	r0, [sp, #24]
    50ba:	f003 fce1 	bl	8a80 <__sprint_r>
    50be:	2800      	cmp	r0, #0
    50c0:	d10c      	bne.n	50dc <_vfprintf_r+0xb20>
    50c2:	687b      	ldr	r3, [r7, #4]
    50c4:	68bc      	ldr	r4, [r7, #8]
    50c6:	4698      	mov	r8, r3
    50c8:	ae32      	add	r6, sp, #200	; 0xc8
    50ca:	e713      	b.n	4ef4 <_vfprintf_r+0x938>
    50cc:	003a      	movs	r2, r7
    50ce:	4659      	mov	r1, fp
    50d0:	9806      	ldr	r0, [sp, #24]
    50d2:	f003 fcd5 	bl	8a80 <__sprint_r>
    50d6:	2800      	cmp	r0, #0
    50d8:	d100      	bne.n	50dc <_vfprintf_r+0xb20>
    50da:	e6cd      	b.n	4e78 <_vfprintf_r+0x8bc>
    50dc:	46d9      	mov	r9, fp
    50de:	e785      	b.n	4fec <_vfprintf_r+0xa30>
    50e0:	9c09      	ldr	r4, [sp, #36]	; 0x24
    50e2:	2b01      	cmp	r3, #1
    50e4:	d100      	bne.n	50e8 <_vfprintf_r+0xb2c>
    50e6:	e148      	b.n	537a <_vfprintf_r+0xdbe>
    50e8:	2b02      	cmp	r3, #2
    50ea:	d123      	bne.n	5134 <_vfprintf_r+0xb78>
    50ec:	9409      	str	r4, [sp, #36]	; 0x24
    50ee:	2300      	movs	r3, #0
    50f0:	2400      	movs	r4, #0
    50f2:	930c      	str	r3, [sp, #48]	; 0x30
    50f4:	940d      	str	r4, [sp, #52]	; 0x34
    50f6:	e4a1      	b.n	4a3c <_vfprintf_r+0x480>
    50f8:	003a      	movs	r2, r7
    50fa:	4659      	mov	r1, fp
    50fc:	9806      	ldr	r0, [sp, #24]
    50fe:	f003 fcbf 	bl	8a80 <__sprint_r>
    5102:	2800      	cmp	r0, #0
    5104:	d1ea      	bne.n	50dc <_vfprintf_r+0xb20>
    5106:	68bc      	ldr	r4, [r7, #8]
    5108:	ae32      	add	r6, sp, #200	; 0xc8
    510a:	e648      	b.n	4d9e <_vfprintf_r+0x7e2>
    510c:	003a      	movs	r2, r7
    510e:	4659      	mov	r1, fp
    5110:	9806      	ldr	r0, [sp, #24]
    5112:	f003 fcb5 	bl	8a80 <__sprint_r>
    5116:	2800      	cmp	r0, #0
    5118:	d1e0      	bne.n	50dc <_vfprintf_r+0xb20>
    511a:	68bc      	ldr	r4, [r7, #8]
    511c:	ae32      	add	r6, sp, #200	; 0xc8
    511e:	e5f2      	b.n	4d06 <_vfprintf_r+0x74a>
    5120:	003a      	movs	r2, r7
    5122:	4659      	mov	r1, fp
    5124:	9806      	ldr	r0, [sp, #24]
    5126:	f003 fcab 	bl	8a80 <__sprint_r>
    512a:	2800      	cmp	r0, #0
    512c:	d1d6      	bne.n	50dc <_vfprintf_r+0xb20>
    512e:	68bc      	ldr	r4, [r7, #8]
    5130:	ae32      	add	r6, sp, #200	; 0xc8
    5132:	e5f8      	b.n	4d26 <_vfprintf_r+0x76a>
    5134:	9409      	str	r4, [sp, #36]	; 0x24
    5136:	2300      	movs	r3, #0
    5138:	2400      	movs	r4, #0
    513a:	930c      	str	r3, [sp, #48]	; 0x30
    513c:	940d      	str	r4, [sp, #52]	; 0x34
    513e:	980c      	ldr	r0, [sp, #48]	; 0x30
    5140:	990d      	ldr	r1, [sp, #52]	; 0x34
    5142:	4653      	mov	r3, sl
    5144:	aa32      	add	r2, sp, #200	; 0xc8
    5146:	4691      	mov	r9, r2
    5148:	9308      	str	r3, [sp, #32]
    514a:	46b2      	mov	sl, r6
    514c:	e007      	b.n	515e <_vfprintf_r+0xba2>
    514e:	46c0      	nop			; (mov r8, r8)
    5150:	00009e28 	.word	0x00009e28
    5154:	00009e24 	.word	0x00009e24
    5158:	00009e38 	.word	0x00009e38
    515c:	46a1      	mov	r9, r4
    515e:	074a      	lsls	r2, r1, #29
    5160:	4694      	mov	ip, r2
    5162:	464b      	mov	r3, r9
    5164:	4665      	mov	r5, ip
    5166:	1e5c      	subs	r4, r3, #1
    5168:	08c6      	lsrs	r6, r0, #3
    516a:	2307      	movs	r3, #7
    516c:	08ca      	lsrs	r2, r1, #3
    516e:	4335      	orrs	r5, r6
    5170:	0011      	movs	r1, r2
    5172:	002a      	movs	r2, r5
    5174:	4003      	ands	r3, r0
    5176:	3330      	adds	r3, #48	; 0x30
    5178:	7023      	strb	r3, [r4, #0]
    517a:	0028      	movs	r0, r5
    517c:	430a      	orrs	r2, r1
    517e:	d1ed      	bne.n	515c <_vfprintf_r+0xba0>
    5180:	900c      	str	r0, [sp, #48]	; 0x30
    5182:	910d      	str	r1, [sp, #52]	; 0x34
    5184:	9908      	ldr	r1, [sp, #32]
    5186:	4656      	mov	r6, sl
    5188:	468a      	mov	sl, r1
    518a:	9909      	ldr	r1, [sp, #36]	; 0x24
    518c:	464a      	mov	r2, r9
    518e:	9411      	str	r4, [sp, #68]	; 0x44
    5190:	07c9      	lsls	r1, r1, #31
    5192:	d500      	bpl.n	5196 <_vfprintf_r+0xbda>
    5194:	e0e0      	b.n	5358 <_vfprintf_r+0xd9c>
    5196:	ab32      	add	r3, sp, #200	; 0xc8
    5198:	1b1b      	subs	r3, r3, r4
    519a:	930e      	str	r3, [sp, #56]	; 0x38
    519c:	f7ff fb7b 	bl	4896 <_vfprintf_r+0x2da>
    51a0:	9c07      	ldr	r4, [sp, #28]
    51a2:	f7ff fa7d 	bl	46a0 <_vfprintf_r+0xe4>
    51a6:	981f      	ldr	r0, [sp, #124]	; 0x7c
    51a8:	2800      	cmp	r0, #0
    51aa:	dc00      	bgt.n	51ae <_vfprintf_r+0xbf2>
    51ac:	e2b9      	b.n	5722 <_vfprintf_r+0x1166>
    51ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    51b0:	9914      	ldr	r1, [sp, #80]	; 0x50
    51b2:	0013      	movs	r3, r2
    51b4:	4690      	mov	r8, r2
    51b6:	428b      	cmp	r3, r1
    51b8:	dd00      	ble.n	51bc <_vfprintf_r+0xc00>
    51ba:	4688      	mov	r8, r1
    51bc:	4643      	mov	r3, r8
    51be:	2b00      	cmp	r3, #0
    51c0:	dd0c      	ble.n	51dc <_vfprintf_r+0xc20>
    51c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    51c4:	4444      	add	r4, r8
    51c6:	6033      	str	r3, [r6, #0]
    51c8:	4643      	mov	r3, r8
    51ca:	6073      	str	r3, [r6, #4]
    51cc:	687b      	ldr	r3, [r7, #4]
    51ce:	60bc      	str	r4, [r7, #8]
    51d0:	3301      	adds	r3, #1
    51d2:	607b      	str	r3, [r7, #4]
    51d4:	2b07      	cmp	r3, #7
    51d6:	dd00      	ble.n	51da <_vfprintf_r+0xc1e>
    51d8:	e389      	b.n	58ee <_vfprintf_r+0x1332>
    51da:	3608      	adds	r6, #8
    51dc:	4643      	mov	r3, r8
    51de:	43db      	mvns	r3, r3
    51e0:	4642      	mov	r2, r8
    51e2:	17db      	asrs	r3, r3, #31
    51e4:	4013      	ands	r3, r2
    51e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    51e8:	1ad3      	subs	r3, r2, r3
    51ea:	4698      	mov	r8, r3
    51ec:	2b00      	cmp	r3, #0
    51ee:	dc00      	bgt.n	51f2 <_vfprintf_r+0xc36>
    51f0:	e0eb      	b.n	53ca <_vfprintf_r+0xe0e>
    51f2:	2b10      	cmp	r3, #16
    51f4:	dc01      	bgt.n	51fa <_vfprintf_r+0xc3e>
    51f6:	f000 fcd9 	bl	5bac <_vfprintf_r+0x15f0>
    51fa:	4adc      	ldr	r2, [pc, #880]	; (556c <_vfprintf_r+0xfb0>)
    51fc:	687b      	ldr	r3, [r7, #4]
    51fe:	4691      	mov	r9, r2
    5200:	2210      	movs	r2, #16
    5202:	464d      	mov	r5, r9
    5204:	4692      	mov	sl, r2
    5206:	0022      	movs	r2, r4
    5208:	4644      	mov	r4, r8
    520a:	46d8      	mov	r8, fp
    520c:	e004      	b.n	5218 <_vfprintf_r+0xc5c>
    520e:	3608      	adds	r6, #8
    5210:	3c10      	subs	r4, #16
    5212:	2c10      	cmp	r4, #16
    5214:	dc00      	bgt.n	5218 <_vfprintf_r+0xc5c>
    5216:	e0bf      	b.n	5398 <_vfprintf_r+0xddc>
    5218:	4651      	mov	r1, sl
    521a:	3210      	adds	r2, #16
    521c:	3301      	adds	r3, #1
    521e:	6035      	str	r5, [r6, #0]
    5220:	6071      	str	r1, [r6, #4]
    5222:	60ba      	str	r2, [r7, #8]
    5224:	607b      	str	r3, [r7, #4]
    5226:	2b07      	cmp	r3, #7
    5228:	ddf1      	ble.n	520e <_vfprintf_r+0xc52>
    522a:	003a      	movs	r2, r7
    522c:	4641      	mov	r1, r8
    522e:	9806      	ldr	r0, [sp, #24]
    5230:	f003 fc26 	bl	8a80 <__sprint_r>
    5234:	2800      	cmp	r0, #0
    5236:	d000      	beq.n	523a <_vfprintf_r+0xc7e>
    5238:	e3b6      	b.n	59a8 <_vfprintf_r+0x13ec>
    523a:	68ba      	ldr	r2, [r7, #8]
    523c:	687b      	ldr	r3, [r7, #4]
    523e:	ae32      	add	r6, sp, #200	; 0xc8
    5240:	e7e6      	b.n	5210 <_vfprintf_r+0xc54>
    5242:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5244:	2b00      	cmp	r3, #0
    5246:	d100      	bne.n	524a <_vfprintf_r+0xc8e>
    5248:	e092      	b.n	5370 <_vfprintf_r+0xdb4>
    524a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    524c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    524e:	ab32      	add	r3, sp, #200	; 0xc8
    5250:	46b1      	mov	r9, r6
    5252:	001e      	movs	r6, r3
    5254:	0020      	movs	r0, r4
    5256:	0029      	movs	r1, r5
    5258:	220a      	movs	r2, #10
    525a:	2300      	movs	r3, #0
    525c:	f7fd fc20 	bl	2aa0 <__aeabi_uldivmod>
    5260:	3e01      	subs	r6, #1
    5262:	3230      	adds	r2, #48	; 0x30
    5264:	7032      	strb	r2, [r6, #0]
    5266:	2300      	movs	r3, #0
    5268:	0020      	movs	r0, r4
    526a:	0029      	movs	r1, r5
    526c:	220a      	movs	r2, #10
    526e:	f7fd fc17 	bl	2aa0 <__aeabi_uldivmod>
    5272:	0003      	movs	r3, r0
    5274:	0004      	movs	r4, r0
    5276:	000d      	movs	r5, r1
    5278:	430b      	orrs	r3, r1
    527a:	d1eb      	bne.n	5254 <_vfprintf_r+0xc98>
    527c:	0032      	movs	r2, r6
    527e:	ab32      	add	r3, sp, #200	; 0xc8
    5280:	1a9b      	subs	r3, r3, r2
    5282:	9611      	str	r6, [sp, #68]	; 0x44
    5284:	940c      	str	r4, [sp, #48]	; 0x30
    5286:	950d      	str	r5, [sp, #52]	; 0x34
    5288:	464e      	mov	r6, r9
    528a:	930e      	str	r3, [sp, #56]	; 0x38
    528c:	f7ff fb03 	bl	4896 <_vfprintf_r+0x2da>
    5290:	2300      	movs	r3, #0
    5292:	930e      	str	r3, [sp, #56]	; 0x38
    5294:	ab32      	add	r3, sp, #200	; 0xc8
    5296:	9311      	str	r3, [sp, #68]	; 0x44
    5298:	f7ff fafd 	bl	4896 <_vfprintf_r+0x2da>
    529c:	003a      	movs	r2, r7
    529e:	4659      	mov	r1, fp
    52a0:	9806      	ldr	r0, [sp, #24]
    52a2:	f003 fbed 	bl	8a80 <__sprint_r>
    52a6:	2800      	cmp	r0, #0
    52a8:	d000      	beq.n	52ac <_vfprintf_r+0xcf0>
    52aa:	e717      	b.n	50dc <_vfprintf_r+0xb20>
    52ac:	ab16      	add	r3, sp, #88	; 0x58
    52ae:	7fdb      	ldrb	r3, [r3, #31]
    52b0:	68bc      	ldr	r4, [r7, #8]
    52b2:	4698      	mov	r8, r3
    52b4:	ae32      	add	r6, sp, #200	; 0xc8
    52b6:	e513      	b.n	4ce0 <_vfprintf_r+0x724>
    52b8:	46b1      	mov	r9, r6
    52ba:	e697      	b.n	4fec <_vfprintf_r+0xa30>
    52bc:	9b14      	ldr	r3, [sp, #80]	; 0x50
    52be:	1e5d      	subs	r5, r3, #1
    52c0:	2d00      	cmp	r5, #0
    52c2:	dc00      	bgt.n	52c6 <_vfprintf_r+0xd0a>
    52c4:	e616      	b.n	4ef4 <_vfprintf_r+0x938>
    52c6:	4ba9      	ldr	r3, [pc, #676]	; (556c <_vfprintf_r+0xfb0>)
    52c8:	4699      	mov	r9, r3
    52ca:	2d10      	cmp	r5, #16
    52cc:	dc00      	bgt.n	52d0 <_vfprintf_r+0xd14>
    52ce:	e10a      	b.n	54e6 <_vfprintf_r+0xf2a>
    52d0:	2310      	movs	r3, #16
    52d2:	0022      	movs	r2, r4
    52d4:	469a      	mov	sl, r3
    52d6:	465c      	mov	r4, fp
    52d8:	4643      	mov	r3, r8
    52da:	e004      	b.n	52e6 <_vfprintf_r+0xd2a>
    52dc:	3608      	adds	r6, #8
    52de:	3d10      	subs	r5, #16
    52e0:	2d10      	cmp	r5, #16
    52e2:	dc00      	bgt.n	52e6 <_vfprintf_r+0xd2a>
    52e4:	e0fc      	b.n	54e0 <_vfprintf_r+0xf24>
    52e6:	4649      	mov	r1, r9
    52e8:	6031      	str	r1, [r6, #0]
    52ea:	4651      	mov	r1, sl
    52ec:	3210      	adds	r2, #16
    52ee:	3301      	adds	r3, #1
    52f0:	6071      	str	r1, [r6, #4]
    52f2:	60ba      	str	r2, [r7, #8]
    52f4:	607b      	str	r3, [r7, #4]
    52f6:	2b07      	cmp	r3, #7
    52f8:	ddf0      	ble.n	52dc <_vfprintf_r+0xd20>
    52fa:	003a      	movs	r2, r7
    52fc:	0021      	movs	r1, r4
    52fe:	9806      	ldr	r0, [sp, #24]
    5300:	f003 fbbe 	bl	8a80 <__sprint_r>
    5304:	2800      	cmp	r0, #0
    5306:	d000      	beq.n	530a <_vfprintf_r+0xd4e>
    5308:	e6c1      	b.n	508e <_vfprintf_r+0xad2>
    530a:	68ba      	ldr	r2, [r7, #8]
    530c:	687b      	ldr	r3, [r7, #4]
    530e:	ae32      	add	r6, sp, #200	; 0xc8
    5310:	e7e5      	b.n	52de <_vfprintf_r+0xd22>
    5312:	990c      	ldr	r1, [sp, #48]	; 0x30
    5314:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5316:	0008      	movs	r0, r1
    5318:	4310      	orrs	r0, r2
    531a:	2302      	movs	r3, #2
    531c:	0002      	movs	r2, r0
    531e:	f7ff fa93 	bl	4848 <_vfprintf_r+0x28c>
    5322:	46a3      	mov	fp, r4
    5324:	0014      	movs	r4, r2
    5326:	464a      	mov	r2, r9
    5328:	1964      	adds	r4, r4, r5
    532a:	3301      	adds	r3, #1
    532c:	6032      	str	r2, [r6, #0]
    532e:	6075      	str	r5, [r6, #4]
    5330:	60bc      	str	r4, [r7, #8]
    5332:	607b      	str	r3, [r7, #4]
    5334:	2b07      	cmp	r3, #7
    5336:	dc00      	bgt.n	533a <_vfprintf_r+0xd7e>
    5338:	e542      	b.n	4dc0 <_vfprintf_r+0x804>
    533a:	e5e8      	b.n	4f0e <_vfprintf_r+0x952>
    533c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    533e:	681a      	ldr	r2, [r3, #0]
    5340:	f7ff fa68 	bl	4814 <_vfprintf_r+0x258>
    5344:	6813      	ldr	r3, [r2, #0]
    5346:	9308      	str	r3, [sp, #32]
    5348:	f7ff fb57 	bl	49fa <_vfprintf_r+0x43e>
    534c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    534e:	681a      	ldr	r2, [r3, #0]
    5350:	e412      	b.n	4b78 <_vfprintf_r+0x5bc>
    5352:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5354:	681a      	ldr	r2, [r3, #0]
    5356:	e426      	b.n	4ba6 <_vfprintf_r+0x5ea>
    5358:	2b30      	cmp	r3, #48	; 0x30
    535a:	d100      	bne.n	535e <_vfprintf_r+0xda2>
    535c:	e23c      	b.n	57d8 <_vfprintf_r+0x121c>
    535e:	2330      	movs	r3, #48	; 0x30
    5360:	3a02      	subs	r2, #2
    5362:	7013      	strb	r3, [r2, #0]
    5364:	ab32      	add	r3, sp, #200	; 0xc8
    5366:	1a9b      	subs	r3, r3, r2
    5368:	930e      	str	r3, [sp, #56]	; 0x38
    536a:	9211      	str	r2, [sp, #68]	; 0x44
    536c:	f7ff fa93 	bl	4896 <_vfprintf_r+0x2da>
    5370:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5372:	2b09      	cmp	r3, #9
    5374:	d900      	bls.n	5378 <_vfprintf_r+0xdbc>
    5376:	e768      	b.n	524a <_vfprintf_r+0xc8e>
    5378:	9c09      	ldr	r4, [sp, #36]	; 0x24
    537a:	2227      	movs	r2, #39	; 0x27
    537c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    537e:	a928      	add	r1, sp, #160	; 0xa0
    5380:	3330      	adds	r3, #48	; 0x30
    5382:	548b      	strb	r3, [r1, r2]
    5384:	2301      	movs	r3, #1
    5386:	aa16      	add	r2, sp, #88	; 0x58
    5388:	4694      	mov	ip, r2
    538a:	930e      	str	r3, [sp, #56]	; 0x38
    538c:	336e      	adds	r3, #110	; 0x6e
    538e:	4463      	add	r3, ip
    5390:	9409      	str	r4, [sp, #36]	; 0x24
    5392:	9311      	str	r3, [sp, #68]	; 0x44
    5394:	f7ff fa7f 	bl	4896 <_vfprintf_r+0x2da>
    5398:	46c3      	mov	fp, r8
    539a:	46a9      	mov	r9, r5
    539c:	46a0      	mov	r8, r4
    539e:	0014      	movs	r4, r2
    53a0:	464a      	mov	r2, r9
    53a2:	6032      	str	r2, [r6, #0]
    53a4:	4642      	mov	r2, r8
    53a6:	4444      	add	r4, r8
    53a8:	3301      	adds	r3, #1
    53aa:	6072      	str	r2, [r6, #4]
    53ac:	60bc      	str	r4, [r7, #8]
    53ae:	607b      	str	r3, [r7, #4]
    53b0:	2b07      	cmp	r3, #7
    53b2:	dc00      	bgt.n	53b6 <_vfprintf_r+0xdfa>
    53b4:	e18d      	b.n	56d2 <_vfprintf_r+0x1116>
    53b6:	003a      	movs	r2, r7
    53b8:	4659      	mov	r1, fp
    53ba:	9806      	ldr	r0, [sp, #24]
    53bc:	f003 fb60 	bl	8a80 <__sprint_r>
    53c0:	2800      	cmp	r0, #0
    53c2:	d000      	beq.n	53c6 <_vfprintf_r+0xe0a>
    53c4:	e68a      	b.n	50dc <_vfprintf_r+0xb20>
    53c6:	68bc      	ldr	r4, [r7, #8]
    53c8:	ae32      	add	r6, sp, #200	; 0xc8
    53ca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    53cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
    53ce:	4293      	cmp	r3, r2
    53d0:	db00      	blt.n	53d4 <_vfprintf_r+0xe18>
    53d2:	e179      	b.n	56c8 <_vfprintf_r+0x110c>
    53d4:	9a18      	ldr	r2, [sp, #96]	; 0x60
    53d6:	6032      	str	r2, [r6, #0]
    53d8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    53da:	4694      	mov	ip, r2
    53dc:	6072      	str	r2, [r6, #4]
    53de:	687a      	ldr	r2, [r7, #4]
    53e0:	4464      	add	r4, ip
    53e2:	3201      	adds	r2, #1
    53e4:	60bc      	str	r4, [r7, #8]
    53e6:	607a      	str	r2, [r7, #4]
    53e8:	2a07      	cmp	r2, #7
    53ea:	dd00      	ble.n	53ee <_vfprintf_r+0xe32>
    53ec:	e176      	b.n	56dc <_vfprintf_r+0x1120>
    53ee:	3608      	adds	r6, #8
    53f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
    53f2:	9913      	ldr	r1, [sp, #76]	; 0x4c
    53f4:	1ad3      	subs	r3, r2, r3
    53f6:	1a52      	subs	r2, r2, r1
    53f8:	4690      	mov	r8, r2
    53fa:	429a      	cmp	r2, r3
    53fc:	dd00      	ble.n	5400 <_vfprintf_r+0xe44>
    53fe:	4698      	mov	r8, r3
    5400:	4642      	mov	r2, r8
    5402:	2a00      	cmp	r2, #0
    5404:	dd0f      	ble.n	5426 <_vfprintf_r+0xe6a>
    5406:	9913      	ldr	r1, [sp, #76]	; 0x4c
    5408:	9a11      	ldr	r2, [sp, #68]	; 0x44
    540a:	468c      	mov	ip, r1
    540c:	4462      	add	r2, ip
    540e:	6032      	str	r2, [r6, #0]
    5410:	4642      	mov	r2, r8
    5412:	6072      	str	r2, [r6, #4]
    5414:	687a      	ldr	r2, [r7, #4]
    5416:	4444      	add	r4, r8
    5418:	3201      	adds	r2, #1
    541a:	60bc      	str	r4, [r7, #8]
    541c:	607a      	str	r2, [r7, #4]
    541e:	2a07      	cmp	r2, #7
    5420:	dd00      	ble.n	5424 <_vfprintf_r+0xe68>
    5422:	e289      	b.n	5938 <_vfprintf_r+0x137c>
    5424:	3608      	adds	r6, #8
    5426:	4642      	mov	r2, r8
    5428:	43d5      	mvns	r5, r2
    542a:	17ed      	asrs	r5, r5, #31
    542c:	4015      	ands	r5, r2
    542e:	1b5d      	subs	r5, r3, r5
    5430:	2d00      	cmp	r5, #0
    5432:	dc00      	bgt.n	5436 <_vfprintf_r+0xe7a>
    5434:	e4c5      	b.n	4dc2 <_vfprintf_r+0x806>
    5436:	4a4d      	ldr	r2, [pc, #308]	; (556c <_vfprintf_r+0xfb0>)
    5438:	687b      	ldr	r3, [r7, #4]
    543a:	4691      	mov	r9, r2
    543c:	2d10      	cmp	r5, #16
    543e:	dc00      	bgt.n	5442 <_vfprintf_r+0xe86>
    5440:	e771      	b.n	5326 <_vfprintf_r+0xd6a>
    5442:	2210      	movs	r2, #16
    5444:	4690      	mov	r8, r2
    5446:	0022      	movs	r2, r4
    5448:	465c      	mov	r4, fp
    544a:	e004      	b.n	5456 <_vfprintf_r+0xe9a>
    544c:	3608      	adds	r6, #8
    544e:	3d10      	subs	r5, #16
    5450:	2d10      	cmp	r5, #16
    5452:	dc00      	bgt.n	5456 <_vfprintf_r+0xe9a>
    5454:	e765      	b.n	5322 <_vfprintf_r+0xd66>
    5456:	4649      	mov	r1, r9
    5458:	6031      	str	r1, [r6, #0]
    545a:	4641      	mov	r1, r8
    545c:	3210      	adds	r2, #16
    545e:	3301      	adds	r3, #1
    5460:	6071      	str	r1, [r6, #4]
    5462:	60ba      	str	r2, [r7, #8]
    5464:	607b      	str	r3, [r7, #4]
    5466:	2b07      	cmp	r3, #7
    5468:	ddf0      	ble.n	544c <_vfprintf_r+0xe90>
    546a:	003a      	movs	r2, r7
    546c:	0021      	movs	r1, r4
    546e:	9806      	ldr	r0, [sp, #24]
    5470:	f003 fb06 	bl	8a80 <__sprint_r>
    5474:	2800      	cmp	r0, #0
    5476:	d000      	beq.n	547a <_vfprintf_r+0xebe>
    5478:	e609      	b.n	508e <_vfprintf_r+0xad2>
    547a:	68ba      	ldr	r2, [r7, #8]
    547c:	687b      	ldr	r3, [r7, #4]
    547e:	ae32      	add	r6, sp, #200	; 0xc8
    5480:	e7e5      	b.n	544e <_vfprintf_r+0xe92>
    5482:	003a      	movs	r2, r7
    5484:	4659      	mov	r1, fp
    5486:	9806      	ldr	r0, [sp, #24]
    5488:	f003 fafa 	bl	8a80 <__sprint_r>
    548c:	2800      	cmp	r0, #0
    548e:	d000      	beq.n	5492 <_vfprintf_r+0xed6>
    5490:	e624      	b.n	50dc <_vfprintf_r+0xb20>
    5492:	68bc      	ldr	r4, [r7, #8]
    5494:	687b      	ldr	r3, [r7, #4]
    5496:	ae32      	add	r6, sp, #200	; 0xc8
    5498:	e504      	b.n	4ea4 <_vfprintf_r+0x8e8>
    549a:	2307      	movs	r3, #7
    549c:	3207      	adds	r2, #7
    549e:	439a      	bics	r2, r3
    54a0:	3301      	adds	r3, #1
    54a2:	469c      	mov	ip, r3
    54a4:	4494      	add	ip, r2
    54a6:	4663      	mov	r3, ip
    54a8:	930f      	str	r3, [sp, #60]	; 0x3c
    54aa:	6853      	ldr	r3, [r2, #4]
    54ac:	6812      	ldr	r2, [r2, #0]
    54ae:	930d      	str	r3, [sp, #52]	; 0x34
    54b0:	920c      	str	r2, [sp, #48]	; 0x30
    54b2:	f7ff faa7 	bl	4a04 <_vfprintf_r+0x448>
    54b6:	2207      	movs	r2, #7
    54b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    54ba:	3307      	adds	r3, #7
    54bc:	4393      	bics	r3, r2
    54be:	3201      	adds	r2, #1
    54c0:	4694      	mov	ip, r2
    54c2:	449c      	add	ip, r3
    54c4:	4662      	mov	r2, ip
    54c6:	920f      	str	r2, [sp, #60]	; 0x3c
    54c8:	681a      	ldr	r2, [r3, #0]
    54ca:	685b      	ldr	r3, [r3, #4]
    54cc:	0011      	movs	r1, r2
    54ce:	001a      	movs	r2, r3
    54d0:	0008      	movs	r0, r1
    54d2:	4310      	orrs	r0, r2
    54d4:	910c      	str	r1, [sp, #48]	; 0x30
    54d6:	920d      	str	r2, [sp, #52]	; 0x34
    54d8:	2300      	movs	r3, #0
    54da:	0002      	movs	r2, r0
    54dc:	f7ff f9b4 	bl	4848 <_vfprintf_r+0x28c>
    54e0:	46a3      	mov	fp, r4
    54e2:	4698      	mov	r8, r3
    54e4:	0014      	movs	r4, r2
    54e6:	464b      	mov	r3, r9
    54e8:	6075      	str	r5, [r6, #4]
    54ea:	6033      	str	r3, [r6, #0]
    54ec:	1964      	adds	r4, r4, r5
    54ee:	e4f7      	b.n	4ee0 <_vfprintf_r+0x924>
    54f0:	003a      	movs	r2, r7
    54f2:	4659      	mov	r1, fp
    54f4:	9806      	ldr	r0, [sp, #24]
    54f6:	f003 fac3 	bl	8a80 <__sprint_r>
    54fa:	2800      	cmp	r0, #0
    54fc:	d000      	beq.n	5500 <_vfprintf_r+0xf44>
    54fe:	e5ed      	b.n	50dc <_vfprintf_r+0xb20>
    5500:	687b      	ldr	r3, [r7, #4]
    5502:	68bc      	ldr	r4, [r7, #8]
    5504:	4698      	mov	r8, r3
    5506:	ae32      	add	r6, sp, #200	; 0xc8
    5508:	e4da      	b.n	4ec0 <_vfprintf_r+0x904>
    550a:	2207      	movs	r2, #7
    550c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    550e:	3307      	adds	r3, #7
    5510:	4393      	bics	r3, r2
    5512:	3201      	adds	r2, #1
    5514:	4694      	mov	ip, r2
    5516:	449c      	add	ip, r3
    5518:	4662      	mov	r2, ip
    551a:	920f      	str	r2, [sp, #60]	; 0x3c
    551c:	681a      	ldr	r2, [r3, #0]
    551e:	685b      	ldr	r3, [r3, #4]
    5520:	0011      	movs	r1, r2
    5522:	001a      	movs	r2, r3
    5524:	0008      	movs	r0, r1
    5526:	4310      	orrs	r0, r2
    5528:	910c      	str	r1, [sp, #48]	; 0x30
    552a:	920d      	str	r2, [sp, #52]	; 0x34
    552c:	2301      	movs	r3, #1
    552e:	0002      	movs	r2, r0
    5530:	f7ff f98a 	bl	4848 <_vfprintf_r+0x28c>
    5534:	2207      	movs	r2, #7
    5536:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5538:	3307      	adds	r3, #7
    553a:	4393      	bics	r3, r2
    553c:	3201      	adds	r2, #1
    553e:	4694      	mov	ip, r2
    5540:	449c      	add	ip, r3
    5542:	4662      	mov	r2, ip
    5544:	920f      	str	r2, [sp, #60]	; 0x3c
    5546:	681a      	ldr	r2, [r3, #0]
    5548:	685b      	ldr	r3, [r3, #4]
    554a:	920c      	str	r2, [sp, #48]	; 0x30
    554c:	930d      	str	r3, [sp, #52]	; 0x34
    554e:	f7ff f966 	bl	481e <_vfprintf_r+0x262>
    5552:	003a      	movs	r2, r7
    5554:	4659      	mov	r1, fp
    5556:	9806      	ldr	r0, [sp, #24]
    5558:	f003 fa92 	bl	8a80 <__sprint_r>
    555c:	2800      	cmp	r0, #0
    555e:	d000      	beq.n	5562 <_vfprintf_r+0xfa6>
    5560:	e5bc      	b.n	50dc <_vfprintf_r+0xb20>
    5562:	68bc      	ldr	r4, [r7, #8]
    5564:	ae32      	add	r6, sp, #200	; 0xc8
    5566:	f7ff fbe2 	bl	4d2e <_vfprintf_r+0x772>
    556a:	46c0      	nop			; (mov r8, r8)
    556c:	00009e38 	.word	0x00009e38
    5570:	980c      	ldr	r0, [sp, #48]	; 0x30
    5572:	990d      	ldr	r1, [sp, #52]	; 0x34
    5574:	2300      	movs	r3, #0
    5576:	4242      	negs	r2, r0
    5578:	418b      	sbcs	r3, r1
    557a:	0011      	movs	r1, r2
    557c:	001a      	movs	r2, r3
    557e:	232d      	movs	r3, #45	; 0x2d
    5580:	a816      	add	r0, sp, #88	; 0x58
    5582:	77c3      	strb	r3, [r0, #31]
    5584:	0008      	movs	r0, r1
    5586:	4310      	orrs	r0, r2
    5588:	910c      	str	r1, [sp, #48]	; 0x30
    558a:	920d      	str	r2, [sp, #52]	; 0x34
    558c:	4698      	mov	r8, r3
    558e:	0002      	movs	r2, r0
    5590:	3b2c      	subs	r3, #44	; 0x2c
    5592:	f7ff f95d 	bl	4850 <_vfprintf_r+0x294>
    5596:	9916      	ldr	r1, [sp, #88]	; 0x58
    5598:	9d15      	ldr	r5, [sp, #84]	; 0x54
    559a:	000a      	movs	r2, r1
    559c:	0008      	movs	r0, r1
    559e:	002b      	movs	r3, r5
    55a0:	0029      	movs	r1, r5
    55a2:	f004 f927 	bl	97f4 <__aeabi_dcmpun>
    55a6:	2800      	cmp	r0, #0
    55a8:	d000      	beq.n	55ac <_vfprintf_r+0xff0>
    55aa:	e2c6      	b.n	5b3a <_vfprintf_r+0x157e>
    55ac:	4653      	mov	r3, sl
    55ae:	3301      	adds	r3, #1
    55b0:	d100      	bne.n	55b4 <_vfprintf_r+0xff8>
    55b2:	e09f      	b.n	56f4 <_vfprintf_r+0x1138>
    55b4:	2320      	movs	r3, #32
    55b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    55b8:	439a      	bics	r2, r3
    55ba:	920e      	str	r2, [sp, #56]	; 0x38
    55bc:	2a47      	cmp	r2, #71	; 0x47
    55be:	d100      	bne.n	55c2 <_vfprintf_r+0x1006>
    55c0:	e1a1      	b.n	5906 <_vfprintf_r+0x134a>
    55c2:	2380      	movs	r3, #128	; 0x80
    55c4:	005b      	lsls	r3, r3, #1
    55c6:	4323      	orrs	r3, r4
    55c8:	9309      	str	r3, [sp, #36]	; 0x24
    55ca:	9b15      	ldr	r3, [sp, #84]	; 0x54
    55cc:	2b00      	cmp	r3, #0
    55ce:	da00      	bge.n	55d2 <_vfprintf_r+0x1016>
    55d0:	e1ed      	b.n	59ae <_vfprintf_r+0x13f2>
    55d2:	9a16      	ldr	r2, [sp, #88]	; 0x58
    55d4:	9308      	str	r3, [sp, #32]
    55d6:	2300      	movs	r3, #0
    55d8:	4691      	mov	r9, r2
    55da:	9310      	str	r3, [sp, #64]	; 0x40
    55dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    55de:	2b66      	cmp	r3, #102	; 0x66
    55e0:	d100      	bne.n	55e4 <_vfprintf_r+0x1028>
    55e2:	e1b8      	b.n	5956 <_vfprintf_r+0x139a>
    55e4:	2b46      	cmp	r3, #70	; 0x46
    55e6:	d100      	bne.n	55ea <_vfprintf_r+0x102e>
    55e8:	e237      	b.n	5a5a <_vfprintf_r+0x149e>
    55ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    55ec:	9806      	ldr	r0, [sp, #24]
    55ee:	3a45      	subs	r2, #69	; 0x45
    55f0:	0013      	movs	r3, r2
    55f2:	4259      	negs	r1, r3
    55f4:	4159      	adcs	r1, r3
    55f6:	ab20      	add	r3, sp, #128	; 0x80
    55f8:	000d      	movs	r5, r1
    55fa:	9303      	str	r3, [sp, #12]
    55fc:	ab1f      	add	r3, sp, #124	; 0x7c
    55fe:	9302      	str	r3, [sp, #8]
    5600:	2302      	movs	r3, #2
    5602:	aa23      	add	r2, sp, #140	; 0x8c
    5604:	4455      	add	r5, sl
    5606:	921b      	str	r2, [sp, #108]	; 0x6c
    5608:	9204      	str	r2, [sp, #16]
    560a:	9300      	str	r3, [sp, #0]
    560c:	9501      	str	r5, [sp, #4]
    560e:	9b08      	ldr	r3, [sp, #32]
    5610:	464a      	mov	r2, r9
    5612:	f000 fcab 	bl	5f6c <_dtoa_r>
    5616:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5618:	9011      	str	r0, [sp, #68]	; 0x44
    561a:	2b67      	cmp	r3, #103	; 0x67
    561c:	d000      	beq.n	5620 <_vfprintf_r+0x1064>
    561e:	e20b      	b.n	5a38 <_vfprintf_r+0x147c>
    5620:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5622:	4698      	mov	r8, r3
    5624:	44a8      	add	r8, r5
    5626:	07e3      	lsls	r3, r4, #31
    5628:	d400      	bmi.n	562c <_vfprintf_r+0x1070>
    562a:	e277      	b.n	5b1c <_vfprintf_r+0x1560>
    562c:	2300      	movs	r3, #0
    562e:	2200      	movs	r2, #0
    5630:	4648      	mov	r0, r9
    5632:	9908      	ldr	r1, [sp, #32]
    5634:	f7fe fc9c 	bl	3f70 <__aeabi_dcmpeq>
    5638:	4643      	mov	r3, r8
    563a:	2800      	cmp	r0, #0
    563c:	d10a      	bne.n	5654 <_vfprintf_r+0x1098>
    563e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5640:	4543      	cmp	r3, r8
    5642:	d207      	bcs.n	5654 <_vfprintf_r+0x1098>
    5644:	2130      	movs	r1, #48	; 0x30
    5646:	4640      	mov	r0, r8
    5648:	1c5a      	adds	r2, r3, #1
    564a:	9223      	str	r2, [sp, #140]	; 0x8c
    564c:	7019      	strb	r1, [r3, #0]
    564e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5650:	4298      	cmp	r0, r3
    5652:	d8f9      	bhi.n	5648 <_vfprintf_r+0x108c>
    5654:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5656:	1a9b      	subs	r3, r3, r2
    5658:	9314      	str	r3, [sp, #80]	; 0x50
    565a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    565c:	2b47      	cmp	r3, #71	; 0x47
    565e:	d100      	bne.n	5662 <_vfprintf_r+0x10a6>
    5660:	e0d0      	b.n	5804 <_vfprintf_r+0x1248>
    5662:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5664:	2b65      	cmp	r3, #101	; 0x65
    5666:	dc00      	bgt.n	566a <_vfprintf_r+0x10ae>
    5668:	e2d5      	b.n	5c16 <_vfprintf_r+0x165a>
    566a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    566c:	2b66      	cmp	r3, #102	; 0x66
    566e:	d100      	bne.n	5672 <_vfprintf_r+0x10b6>
    5670:	e1c6      	b.n	5a00 <_vfprintf_r+0x1444>
    5672:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5674:	9313      	str	r3, [sp, #76]	; 0x4c
    5676:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5678:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    567a:	0019      	movs	r1, r3
    567c:	4291      	cmp	r1, r2
    567e:	dd00      	ble.n	5682 <_vfprintf_r+0x10c6>
    5680:	e1a0      	b.n	59c4 <_vfprintf_r+0x1408>
    5682:	07e3      	lsls	r3, r4, #31
    5684:	d500      	bpl.n	5688 <_vfprintf_r+0x10cc>
    5686:	e242      	b.n	5b0e <_vfprintf_r+0x1552>
    5688:	43d3      	mvns	r3, r2
    568a:	17db      	asrs	r3, r3, #31
    568c:	0011      	movs	r1, r2
    568e:	401a      	ands	r2, r3
    5690:	2367      	movs	r3, #103	; 0x67
    5692:	9208      	str	r2, [sp, #32]
    5694:	910e      	str	r1, [sp, #56]	; 0x38
    5696:	9312      	str	r3, [sp, #72]	; 0x48
    5698:	9b10      	ldr	r3, [sp, #64]	; 0x40
    569a:	2b00      	cmp	r3, #0
    569c:	d000      	beq.n	56a0 <_vfprintf_r+0x10e4>
    569e:	e0a9      	b.n	57f4 <_vfprintf_r+0x1238>
    56a0:	ab16      	add	r3, sp, #88	; 0x58
    56a2:	7fdb      	ldrb	r3, [r3, #31]
    56a4:	4698      	mov	r8, r3
    56a6:	2300      	movs	r3, #0
    56a8:	469a      	mov	sl, r3
    56aa:	f7ff f8fc 	bl	48a6 <_vfprintf_r+0x2ea>
    56ae:	46cb      	mov	fp, r9
    56b0:	46a1      	mov	r9, r4
    56b2:	0014      	movs	r4, r2
    56b4:	e637      	b.n	5326 <_vfprintf_r+0xd6a>
    56b6:	464b      	mov	r3, r9
    56b8:	6d98      	ldr	r0, [r3, #88]	; 0x58
    56ba:	f002 f861 	bl	7780 <__retarget_lock_release_recursive>
    56be:	2301      	movs	r3, #1
    56c0:	425b      	negs	r3, r3
    56c2:	930a      	str	r3, [sp, #40]	; 0x28
    56c4:	f7ff f82b 	bl	471e <_vfprintf_r+0x162>
    56c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
    56ca:	07d2      	lsls	r2, r2, #31
    56cc:	d400      	bmi.n	56d0 <_vfprintf_r+0x1114>
    56ce:	e68f      	b.n	53f0 <_vfprintf_r+0xe34>
    56d0:	e680      	b.n	53d4 <_vfprintf_r+0xe18>
    56d2:	3608      	adds	r6, #8
    56d4:	e679      	b.n	53ca <_vfprintf_r+0xe0e>
    56d6:	68bc      	ldr	r4, [r7, #8]
    56d8:	f7ff fb73 	bl	4dc2 <_vfprintf_r+0x806>
    56dc:	003a      	movs	r2, r7
    56de:	4659      	mov	r1, fp
    56e0:	9806      	ldr	r0, [sp, #24]
    56e2:	f003 f9cd 	bl	8a80 <__sprint_r>
    56e6:	2800      	cmp	r0, #0
    56e8:	d000      	beq.n	56ec <_vfprintf_r+0x1130>
    56ea:	e4f7      	b.n	50dc <_vfprintf_r+0xb20>
    56ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    56ee:	68bc      	ldr	r4, [r7, #8]
    56f0:	ae32      	add	r6, sp, #200	; 0xc8
    56f2:	e67d      	b.n	53f0 <_vfprintf_r+0xe34>
    56f4:	2320      	movs	r3, #32
    56f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    56f8:	439a      	bics	r2, r3
    56fa:	3b1a      	subs	r3, #26
    56fc:	920e      	str	r2, [sp, #56]	; 0x38
    56fe:	469a      	mov	sl, r3
    5700:	e75f      	b.n	55c2 <_vfprintf_r+0x1006>
    5702:	232d      	movs	r3, #45	; 0x2d
    5704:	aa16      	add	r2, sp, #88	; 0x58
    5706:	77d3      	strb	r3, [r2, #31]
    5708:	4698      	mov	r8, r3
    570a:	f7ff faa8 	bl	4c5e <_vfprintf_r+0x6a2>
    570e:	003a      	movs	r2, r7
    5710:	4659      	mov	r1, fp
    5712:	9806      	ldr	r0, [sp, #24]
    5714:	f003 f9b4 	bl	8a80 <__sprint_r>
    5718:	2800      	cmp	r0, #0
    571a:	d000      	beq.n	571e <_vfprintf_r+0x1162>
    571c:	e4de      	b.n	50dc <_vfprintf_r+0xb20>
    571e:	ae32      	add	r6, sp, #200	; 0xc8
    5720:	e419      	b.n	4f56 <_vfprintf_r+0x99a>
    5722:	4be3      	ldr	r3, [pc, #908]	; (5ab0 <_vfprintf_r+0x14f4>)
    5724:	3401      	adds	r4, #1
    5726:	6033      	str	r3, [r6, #0]
    5728:	2301      	movs	r3, #1
    572a:	6073      	str	r3, [r6, #4]
    572c:	687b      	ldr	r3, [r7, #4]
    572e:	60bc      	str	r4, [r7, #8]
    5730:	3301      	adds	r3, #1
    5732:	607b      	str	r3, [r7, #4]
    5734:	2b07      	cmp	r3, #7
    5736:	dd00      	ble.n	573a <_vfprintf_r+0x117e>
    5738:	e155      	b.n	59e6 <_vfprintf_r+0x142a>
    573a:	3608      	adds	r6, #8
    573c:	2800      	cmp	r0, #0
    573e:	d107      	bne.n	5750 <_vfprintf_r+0x1194>
    5740:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5742:	2b00      	cmp	r3, #0
    5744:	d104      	bne.n	5750 <_vfprintf_r+0x1194>
    5746:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5748:	07db      	lsls	r3, r3, #31
    574a:	d401      	bmi.n	5750 <_vfprintf_r+0x1194>
    574c:	f7ff fb39 	bl	4dc2 <_vfprintf_r+0x806>
    5750:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5752:	6033      	str	r3, [r6, #0]
    5754:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    5756:	1919      	adds	r1, r3, r4
    5758:	6073      	str	r3, [r6, #4]
    575a:	687b      	ldr	r3, [r7, #4]
    575c:	60b9      	str	r1, [r7, #8]
    575e:	3301      	adds	r3, #1
    5760:	607b      	str	r3, [r7, #4]
    5762:	2b07      	cmp	r3, #7
    5764:	dd00      	ble.n	5768 <_vfprintf_r+0x11ac>
    5766:	e1c4      	b.n	5af2 <_vfprintf_r+0x1536>
    5768:	0032      	movs	r2, r6
    576a:	3208      	adds	r2, #8
    576c:	2800      	cmp	r0, #0
    576e:	da00      	bge.n	5772 <_vfprintf_r+0x11b6>
    5770:	e195      	b.n	5a9e <_vfprintf_r+0x14e2>
    5772:	9811      	ldr	r0, [sp, #68]	; 0x44
    5774:	3301      	adds	r3, #1
    5776:	6010      	str	r0, [r2, #0]
    5778:	9814      	ldr	r0, [sp, #80]	; 0x50
    577a:	607b      	str	r3, [r7, #4]
    577c:	1844      	adds	r4, r0, r1
    577e:	6050      	str	r0, [r2, #4]
    5780:	60bc      	str	r4, [r7, #8]
    5782:	2b07      	cmp	r3, #7
    5784:	dd01      	ble.n	578a <_vfprintf_r+0x11ce>
    5786:	f7ff fbc2 	bl	4f0e <_vfprintf_r+0x952>
    578a:	3208      	adds	r2, #8
    578c:	0016      	movs	r6, r2
    578e:	f7ff fb18 	bl	4dc2 <_vfprintf_r+0x806>
    5792:	990f      	ldr	r1, [sp, #60]	; 0x3c
    5794:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5796:	680b      	ldr	r3, [r1, #0]
    5798:	601a      	str	r2, [r3, #0]
    579a:	17d2      	asrs	r2, r2, #31
    579c:	605a      	str	r2, [r3, #4]
    579e:	000b      	movs	r3, r1
    57a0:	3304      	adds	r3, #4
    57a2:	930f      	str	r3, [sp, #60]	; 0x3c
    57a4:	f7fe ff58 	bl	4658 <_vfprintf_r+0x9c>
    57a8:	464b      	mov	r3, r9
    57aa:	9a07      	ldr	r2, [sp, #28]
    57ac:	431c      	orrs	r4, r3
    57ae:	3201      	adds	r2, #1
    57b0:	7813      	ldrb	r3, [r2, #0]
    57b2:	9207      	str	r2, [sp, #28]
    57b4:	f7fe ff8b 	bl	46ce <_vfprintf_r+0x112>
    57b8:	003a      	movs	r2, r7
    57ba:	4659      	mov	r1, fp
    57bc:	9806      	ldr	r0, [sp, #24]
    57be:	f003 f95f 	bl	8a80 <__sprint_r>
    57c2:	2800      	cmp	r0, #0
    57c4:	d000      	beq.n	57c8 <_vfprintf_r+0x120c>
    57c6:	e489      	b.n	50dc <_vfprintf_r+0xb20>
    57c8:	68bc      	ldr	r4, [r7, #8]
    57ca:	ae32      	add	r6, sp, #200	; 0xc8
    57cc:	f7ff fbdc 	bl	4f88 <_vfprintf_r+0x9cc>
    57d0:	4bb8      	ldr	r3, [pc, #736]	; (5ab4 <_vfprintf_r+0x14f8>)
    57d2:	9311      	str	r3, [sp, #68]	; 0x44
    57d4:	f7ff fa4a 	bl	4c6c <_vfprintf_r+0x6b0>
    57d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
    57da:	ab32      	add	r3, sp, #200	; 0xc8
    57dc:	1a9b      	subs	r3, r3, r2
    57de:	930e      	str	r3, [sp, #56]	; 0x38
    57e0:	f7ff f859 	bl	4896 <_vfprintf_r+0x2da>
    57e4:	9811      	ldr	r0, [sp, #68]	; 0x44
    57e6:	f7fe feb7 	bl	4558 <strlen>
    57ea:	0002      	movs	r2, r0
    57ec:	900e      	str	r0, [sp, #56]	; 0x38
    57ee:	0003      	movs	r3, r0
    57f0:	f7ff f9a1 	bl	4b36 <_vfprintf_r+0x57a>
    57f4:	232d      	movs	r3, #45	; 0x2d
    57f6:	aa16      	add	r2, sp, #88	; 0x58
    57f8:	77d3      	strb	r3, [r2, #31]
    57fa:	4698      	mov	r8, r3
    57fc:	2300      	movs	r3, #0
    57fe:	469a      	mov	sl, r3
    5800:	f7ff f854 	bl	48ac <_vfprintf_r+0x2f0>
    5804:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5806:	9313      	str	r3, [sp, #76]	; 0x4c
    5808:	1cda      	adds	r2, r3, #3
    580a:	db02      	blt.n	5812 <_vfprintf_r+0x1256>
    580c:	459a      	cmp	sl, r3
    580e:	db00      	blt.n	5812 <_vfprintf_r+0x1256>
    5810:	e731      	b.n	5676 <_vfprintf_r+0x10ba>
    5812:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5814:	3b02      	subs	r3, #2
    5816:	9312      	str	r3, [sp, #72]	; 0x48
    5818:	222c      	movs	r2, #44	; 0x2c
    581a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    581c:	2148      	movs	r1, #72	; 0x48
    581e:	1e5d      	subs	r5, r3, #1
    5820:	ab16      	add	r3, sp, #88	; 0x58
    5822:	189b      	adds	r3, r3, r2
    5824:	466a      	mov	r2, sp
    5826:	1852      	adds	r2, r2, r1
    5828:	7812      	ldrb	r2, [r2, #0]
    582a:	951f      	str	r5, [sp, #124]	; 0x7c
    582c:	701a      	strb	r2, [r3, #0]
    582e:	2d00      	cmp	r5, #0
    5830:	da00      	bge.n	5834 <_vfprintf_r+0x1278>
    5832:	e1cb      	b.n	5bcc <_vfprintf_r+0x1610>
    5834:	212d      	movs	r1, #45	; 0x2d
    5836:	232b      	movs	r3, #43	; 0x2b
    5838:	aa16      	add	r2, sp, #88	; 0x58
    583a:	1852      	adds	r2, r2, r1
    583c:	7013      	strb	r3, [r2, #0]
    583e:	2d09      	cmp	r5, #9
    5840:	dc00      	bgt.n	5844 <_vfprintf_r+0x1288>
    5842:	e16d      	b.n	5b20 <_vfprintf_r+0x1564>
    5844:	aa16      	add	r2, sp, #88	; 0x58
    5846:	233b      	movs	r3, #59	; 0x3b
    5848:	4694      	mov	ip, r2
    584a:	4463      	add	r3, ip
    584c:	469a      	mov	sl, r3
    584e:	46b1      	mov	r9, r6
    5850:	46a0      	mov	r8, r4
    5852:	4656      	mov	r6, sl
    5854:	e000      	b.n	5858 <_vfprintf_r+0x129c>
    5856:	0026      	movs	r6, r4
    5858:	0028      	movs	r0, r5
    585a:	210a      	movs	r1, #10
    585c:	f003 fcb6 	bl	91cc <__aeabi_idivmod>
    5860:	1e74      	subs	r4, r6, #1
    5862:	3130      	adds	r1, #48	; 0x30
    5864:	7021      	strb	r1, [r4, #0]
    5866:	0028      	movs	r0, r5
    5868:	210a      	movs	r1, #10
    586a:	f003 fbc9 	bl	9000 <__divsi3>
    586e:	0005      	movs	r5, r0
    5870:	2809      	cmp	r0, #9
    5872:	dcf0      	bgt.n	5856 <_vfprintf_r+0x129a>
    5874:	0023      	movs	r3, r4
    5876:	4644      	mov	r4, r8
    5878:	46b0      	mov	r8, r6
    587a:	464e      	mov	r6, r9
    587c:	4699      	mov	r9, r3
    587e:	0003      	movs	r3, r0
    5880:	3330      	adds	r3, #48	; 0x30
    5882:	b2d8      	uxtb	r0, r3
    5884:	4643      	mov	r3, r8
    5886:	3b02      	subs	r3, #2
    5888:	7018      	strb	r0, [r3, #0]
    588a:	459a      	cmp	sl, r3
    588c:	d800      	bhi.n	5890 <_vfprintf_r+0x12d4>
    588e:	e1f6      	b.n	5c7e <_vfprintf_r+0x16c2>
    5890:	4642      	mov	r2, r8
    5892:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5894:	4645      	mov	r5, r8
    5896:	1a99      	subs	r1, r3, r2
    5898:	2301      	movs	r3, #1
    589a:	3107      	adds	r1, #7
    589c:	425b      	negs	r3, r3
    589e:	e001      	b.n	58a4 <_vfprintf_r+0x12e8>
    58a0:	5ce8      	ldrb	r0, [r5, r3]
    58a2:	3301      	adds	r3, #1
    58a4:	aa21      	add	r2, sp, #132	; 0x84
    58a6:	18d2      	adds	r2, r2, r3
    58a8:	70d0      	strb	r0, [r2, #3]
    58aa:	428b      	cmp	r3, r1
    58ac:	d1f8      	bne.n	58a0 <_vfprintf_r+0x12e4>
    58ae:	a916      	add	r1, sp, #88	; 0x58
    58b0:	468c      	mov	ip, r1
    58b2:	222e      	movs	r2, #46	; 0x2e
    58b4:	464b      	mov	r3, r9
    58b6:	4462      	add	r2, ip
    58b8:	4694      	mov	ip, r2
    58ba:	1afb      	subs	r3, r7, r3
    58bc:	4463      	add	r3, ip
    58be:	aa21      	add	r2, sp, #132	; 0x84
    58c0:	9914      	ldr	r1, [sp, #80]	; 0x50
    58c2:	1a9b      	subs	r3, r3, r2
    58c4:	469c      	mov	ip, r3
    58c6:	000a      	movs	r2, r1
    58c8:	4462      	add	r2, ip
    58ca:	931a      	str	r3, [sp, #104]	; 0x68
    58cc:	920e      	str	r2, [sp, #56]	; 0x38
    58ce:	2901      	cmp	r1, #1
    58d0:	dc00      	bgt.n	58d4 <_vfprintf_r+0x1318>
    58d2:	e170      	b.n	5bb6 <_vfprintf_r+0x15fa>
    58d4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    58d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    58d8:	4694      	mov	ip, r2
    58da:	4463      	add	r3, ip
    58dc:	001a      	movs	r2, r3
    58de:	930e      	str	r3, [sp, #56]	; 0x38
    58e0:	43db      	mvns	r3, r3
    58e2:	17db      	asrs	r3, r3, #31
    58e4:	401a      	ands	r2, r3
    58e6:	2300      	movs	r3, #0
    58e8:	9208      	str	r2, [sp, #32]
    58ea:	9313      	str	r3, [sp, #76]	; 0x4c
    58ec:	e6d4      	b.n	5698 <_vfprintf_r+0x10dc>
    58ee:	003a      	movs	r2, r7
    58f0:	4659      	mov	r1, fp
    58f2:	9806      	ldr	r0, [sp, #24]
    58f4:	f003 f8c4 	bl	8a80 <__sprint_r>
    58f8:	2800      	cmp	r0, #0
    58fa:	d001      	beq.n	5900 <_vfprintf_r+0x1344>
    58fc:	f7ff fbee 	bl	50dc <_vfprintf_r+0xb20>
    5900:	68bc      	ldr	r4, [r7, #8]
    5902:	ae32      	add	r6, sp, #200	; 0xc8
    5904:	e46a      	b.n	51dc <_vfprintf_r+0xc20>
    5906:	4653      	mov	r3, sl
    5908:	2b00      	cmp	r3, #0
    590a:	d000      	beq.n	590e <_vfprintf_r+0x1352>
    590c:	e659      	b.n	55c2 <_vfprintf_r+0x1006>
    590e:	3301      	adds	r3, #1
    5910:	469a      	mov	sl, r3
    5912:	e656      	b.n	55c2 <_vfprintf_r+0x1006>
    5914:	4653      	mov	r3, sl
    5916:	9308      	str	r3, [sp, #32]
    5918:	2b06      	cmp	r3, #6
    591a:	d901      	bls.n	5920 <_vfprintf_r+0x1364>
    591c:	2306      	movs	r3, #6
    591e:	9308      	str	r3, [sp, #32]
    5920:	9b08      	ldr	r3, [sp, #32]
    5922:	950f      	str	r5, [sp, #60]	; 0x3c
    5924:	930e      	str	r3, [sp, #56]	; 0x38
    5926:	2300      	movs	r3, #0
    5928:	4698      	mov	r8, r3
    592a:	469a      	mov	sl, r3
    592c:	9313      	str	r3, [sp, #76]	; 0x4c
    592e:	4b62      	ldr	r3, [pc, #392]	; (5ab8 <_vfprintf_r+0x14fc>)
    5930:	9409      	str	r4, [sp, #36]	; 0x24
    5932:	9311      	str	r3, [sp, #68]	; 0x44
    5934:	f7fe ffbd 	bl	48b2 <_vfprintf_r+0x2f6>
    5938:	003a      	movs	r2, r7
    593a:	4659      	mov	r1, fp
    593c:	9806      	ldr	r0, [sp, #24]
    593e:	f003 f89f 	bl	8a80 <__sprint_r>
    5942:	2800      	cmp	r0, #0
    5944:	d001      	beq.n	594a <_vfprintf_r+0x138e>
    5946:	f7ff fbc9 	bl	50dc <_vfprintf_r+0xb20>
    594a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    594c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    594e:	68bc      	ldr	r4, [r7, #8]
    5950:	1a9b      	subs	r3, r3, r2
    5952:	ae32      	add	r6, sp, #200	; 0xc8
    5954:	e567      	b.n	5426 <_vfprintf_r+0xe6a>
    5956:	ab23      	add	r3, sp, #140	; 0x8c
    5958:	931b      	str	r3, [sp, #108]	; 0x6c
    595a:	9304      	str	r3, [sp, #16]
    595c:	ab20      	add	r3, sp, #128	; 0x80
    595e:	9303      	str	r3, [sp, #12]
    5960:	ab1f      	add	r3, sp, #124	; 0x7c
    5962:	9302      	str	r3, [sp, #8]
    5964:	4653      	mov	r3, sl
    5966:	9301      	str	r3, [sp, #4]
    5968:	2303      	movs	r3, #3
    596a:	464a      	mov	r2, r9
    596c:	9300      	str	r3, [sp, #0]
    596e:	9806      	ldr	r0, [sp, #24]
    5970:	9b08      	ldr	r3, [sp, #32]
    5972:	f000 fafb 	bl	5f6c <_dtoa_r>
    5976:	0003      	movs	r3, r0
    5978:	4453      	add	r3, sl
    597a:	4698      	mov	r8, r3
    597c:	4655      	mov	r5, sl
    597e:	9011      	str	r0, [sp, #68]	; 0x44
    5980:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5982:	781b      	ldrb	r3, [r3, #0]
    5984:	2b30      	cmp	r3, #48	; 0x30
    5986:	d002      	beq.n	598e <_vfprintf_r+0x13d2>
    5988:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    598a:	4498      	add	r8, r3
    598c:	e64e      	b.n	562c <_vfprintf_r+0x1070>
    598e:	2200      	movs	r2, #0
    5990:	2300      	movs	r3, #0
    5992:	4648      	mov	r0, r9
    5994:	9908      	ldr	r1, [sp, #32]
    5996:	f7fe faeb 	bl	3f70 <__aeabi_dcmpeq>
    599a:	2800      	cmp	r0, #0
    599c:	d1f4      	bne.n	5988 <_vfprintf_r+0x13cc>
    599e:	2301      	movs	r3, #1
    59a0:	1b5b      	subs	r3, r3, r5
    59a2:	931f      	str	r3, [sp, #124]	; 0x7c
    59a4:	4498      	add	r8, r3
    59a6:	e641      	b.n	562c <_vfprintf_r+0x1070>
    59a8:	46c1      	mov	r9, r8
    59aa:	f7ff fb1f 	bl	4fec <_vfprintf_r+0xa30>
    59ae:	2280      	movs	r2, #128	; 0x80
    59b0:	0612      	lsls	r2, r2, #24
    59b2:	4694      	mov	ip, r2
    59b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
    59b6:	4699      	mov	r9, r3
    59b8:	9b15      	ldr	r3, [sp, #84]	; 0x54
    59ba:	4463      	add	r3, ip
    59bc:	9308      	str	r3, [sp, #32]
    59be:	232d      	movs	r3, #45	; 0x2d
    59c0:	9310      	str	r3, [sp, #64]	; 0x40
    59c2:	e60b      	b.n	55dc <_vfprintf_r+0x1020>
    59c4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    59c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
    59c8:	4694      	mov	ip, r2
    59ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    59cc:	4463      	add	r3, ip
    59ce:	930e      	str	r3, [sp, #56]	; 0x38
    59d0:	2a00      	cmp	r2, #0
    59d2:	dc00      	bgt.n	59d6 <_vfprintf_r+0x141a>
    59d4:	e0e3      	b.n	5b9e <_vfprintf_r+0x15e2>
    59d6:	001a      	movs	r2, r3
    59d8:	43db      	mvns	r3, r3
    59da:	17db      	asrs	r3, r3, #31
    59dc:	401a      	ands	r2, r3
    59de:	2367      	movs	r3, #103	; 0x67
    59e0:	9208      	str	r2, [sp, #32]
    59e2:	9312      	str	r3, [sp, #72]	; 0x48
    59e4:	e658      	b.n	5698 <_vfprintf_r+0x10dc>
    59e6:	003a      	movs	r2, r7
    59e8:	4659      	mov	r1, fp
    59ea:	9806      	ldr	r0, [sp, #24]
    59ec:	f003 f848 	bl	8a80 <__sprint_r>
    59f0:	2800      	cmp	r0, #0
    59f2:	d001      	beq.n	59f8 <_vfprintf_r+0x143c>
    59f4:	f7ff fb72 	bl	50dc <_vfprintf_r+0xb20>
    59f8:	981f      	ldr	r0, [sp, #124]	; 0x7c
    59fa:	68bc      	ldr	r4, [r7, #8]
    59fc:	ae32      	add	r6, sp, #200	; 0xc8
    59fe:	e69d      	b.n	573c <_vfprintf_r+0x1180>
    5a00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5a02:	9313      	str	r3, [sp, #76]	; 0x4c
    5a04:	2b00      	cmp	r3, #0
    5a06:	dc00      	bgt.n	5a0a <_vfprintf_r+0x144e>
    5a08:	e0f2      	b.n	5bf0 <_vfprintf_r+0x1634>
    5a0a:	4652      	mov	r2, sl
    5a0c:	2a00      	cmp	r2, #0
    5a0e:	d000      	beq.n	5a12 <_vfprintf_r+0x1456>
    5a10:	e0a0      	b.n	5b54 <_vfprintf_r+0x1598>
    5a12:	07e2      	lsls	r2, r4, #31
    5a14:	d500      	bpl.n	5a18 <_vfprintf_r+0x145c>
    5a16:	e09d      	b.n	5b54 <_vfprintf_r+0x1598>
    5a18:	9308      	str	r3, [sp, #32]
    5a1a:	930e      	str	r3, [sp, #56]	; 0x38
    5a1c:	e63c      	b.n	5698 <_vfprintf_r+0x10dc>
    5a1e:	ab16      	add	r3, sp, #88	; 0x58
    5a20:	7fdb      	ldrb	r3, [r3, #31]
    5a22:	950f      	str	r5, [sp, #60]	; 0x3c
    5a24:	4698      	mov	r8, r3
    5a26:	4653      	mov	r3, sl
    5a28:	9308      	str	r3, [sp, #32]
    5a2a:	930e      	str	r3, [sp, #56]	; 0x38
    5a2c:	2300      	movs	r3, #0
    5a2e:	9409      	str	r4, [sp, #36]	; 0x24
    5a30:	469a      	mov	sl, r3
    5a32:	9313      	str	r3, [sp, #76]	; 0x4c
    5a34:	f7fe ff37 	bl	48a6 <_vfprintf_r+0x2ea>
    5a38:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5a3a:	4698      	mov	r8, r3
    5a3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5a3e:	44a8      	add	r8, r5
    5a40:	2b47      	cmp	r3, #71	; 0x47
    5a42:	d000      	beq.n	5a46 <_vfprintf_r+0x148a>
    5a44:	e5f2      	b.n	562c <_vfprintf_r+0x1070>
    5a46:	07e3      	lsls	r3, r4, #31
    5a48:	d400      	bmi.n	5a4c <_vfprintf_r+0x1490>
    5a4a:	e0dc      	b.n	5c06 <_vfprintf_r+0x164a>
    5a4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5a4e:	4698      	mov	r8, r3
    5a50:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5a52:	44a8      	add	r8, r5
    5a54:	2b46      	cmp	r3, #70	; 0x46
    5a56:	d093      	beq.n	5980 <_vfprintf_r+0x13c4>
    5a58:	e5e8      	b.n	562c <_vfprintf_r+0x1070>
    5a5a:	ab23      	add	r3, sp, #140	; 0x8c
    5a5c:	931b      	str	r3, [sp, #108]	; 0x6c
    5a5e:	9304      	str	r3, [sp, #16]
    5a60:	ab20      	add	r3, sp, #128	; 0x80
    5a62:	9303      	str	r3, [sp, #12]
    5a64:	ab1f      	add	r3, sp, #124	; 0x7c
    5a66:	9302      	str	r3, [sp, #8]
    5a68:	4653      	mov	r3, sl
    5a6a:	9301      	str	r3, [sp, #4]
    5a6c:	2303      	movs	r3, #3
    5a6e:	464a      	mov	r2, r9
    5a70:	9300      	str	r3, [sp, #0]
    5a72:	9806      	ldr	r0, [sp, #24]
    5a74:	9b08      	ldr	r3, [sp, #32]
    5a76:	f000 fa79 	bl	5f6c <_dtoa_r>
    5a7a:	4655      	mov	r5, sl
    5a7c:	9011      	str	r0, [sp, #68]	; 0x44
    5a7e:	e7e5      	b.n	5a4c <_vfprintf_r+0x1490>
    5a80:	003a      	movs	r2, r7
    5a82:	4659      	mov	r1, fp
    5a84:	9806      	ldr	r0, [sp, #24]
    5a86:	f002 fffb 	bl	8a80 <__sprint_r>
    5a8a:	2800      	cmp	r0, #0
    5a8c:	d101      	bne.n	5a92 <_vfprintf_r+0x14d6>
    5a8e:	f7ff faab 	bl	4fe8 <_vfprintf_r+0xa2c>
    5a92:	f7ff faab 	bl	4fec <_vfprintf_r+0xa30>
    5a96:	4642      	mov	r2, r8
    5a98:	9207      	str	r2, [sp, #28]
    5a9a:	f7fe fe1b 	bl	46d4 <_vfprintf_r+0x118>
    5a9e:	4244      	negs	r4, r0
    5aa0:	3010      	adds	r0, #16
    5aa2:	db00      	blt.n	5aa6 <_vfprintf_r+0x14ea>
    5aa4:	e0d8      	b.n	5c58 <_vfprintf_r+0x169c>
    5aa6:	4805      	ldr	r0, [pc, #20]	; (5abc <_vfprintf_r+0x1500>)
    5aa8:	2610      	movs	r6, #16
    5aaa:	0005      	movs	r5, r0
    5aac:	e00c      	b.n	5ac8 <_vfprintf_r+0x150c>
    5aae:	46c0      	nop			; (mov r8, r8)
    5ab0:	00009e24 	.word	0x00009e24
    5ab4:	00009de8 	.word	0x00009de8
    5ab8:	00009e1c 	.word	0x00009e1c
    5abc:	00009e38 	.word	0x00009e38
    5ac0:	3208      	adds	r2, #8
    5ac2:	3c10      	subs	r4, #16
    5ac4:	2c10      	cmp	r4, #16
    5ac6:	dd51      	ble.n	5b6c <_vfprintf_r+0x15b0>
    5ac8:	3110      	adds	r1, #16
    5aca:	3301      	adds	r3, #1
    5acc:	6015      	str	r5, [r2, #0]
    5ace:	6056      	str	r6, [r2, #4]
    5ad0:	60b9      	str	r1, [r7, #8]
    5ad2:	607b      	str	r3, [r7, #4]
    5ad4:	2b07      	cmp	r3, #7
    5ad6:	ddf3      	ble.n	5ac0 <_vfprintf_r+0x1504>
    5ad8:	003a      	movs	r2, r7
    5ada:	4659      	mov	r1, fp
    5adc:	9806      	ldr	r0, [sp, #24]
    5ade:	f002 ffcf 	bl	8a80 <__sprint_r>
    5ae2:	2800      	cmp	r0, #0
    5ae4:	d001      	beq.n	5aea <_vfprintf_r+0x152e>
    5ae6:	f7ff faf9 	bl	50dc <_vfprintf_r+0xb20>
    5aea:	68b9      	ldr	r1, [r7, #8]
    5aec:	687b      	ldr	r3, [r7, #4]
    5aee:	aa32      	add	r2, sp, #200	; 0xc8
    5af0:	e7e7      	b.n	5ac2 <_vfprintf_r+0x1506>
    5af2:	003a      	movs	r2, r7
    5af4:	4659      	mov	r1, fp
    5af6:	9806      	ldr	r0, [sp, #24]
    5af8:	f002 ffc2 	bl	8a80 <__sprint_r>
    5afc:	2800      	cmp	r0, #0
    5afe:	d001      	beq.n	5b04 <_vfprintf_r+0x1548>
    5b00:	f7ff faec 	bl	50dc <_vfprintf_r+0xb20>
    5b04:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5b06:	68b9      	ldr	r1, [r7, #8]
    5b08:	687b      	ldr	r3, [r7, #4]
    5b0a:	aa32      	add	r2, sp, #200	; 0xc8
    5b0c:	e62e      	b.n	576c <_vfprintf_r+0x11b0>
    5b0e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5b10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5b12:	4694      	mov	ip, r2
    5b14:	4463      	add	r3, ip
    5b16:	001a      	movs	r2, r3
    5b18:	930e      	str	r3, [sp, #56]	; 0x38
    5b1a:	e75d      	b.n	59d8 <_vfprintf_r+0x141c>
    5b1c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5b1e:	e599      	b.n	5654 <_vfprintf_r+0x1098>
    5b20:	212e      	movs	r1, #46	; 0x2e
    5b22:	2330      	movs	r3, #48	; 0x30
    5b24:	aa16      	add	r2, sp, #88	; 0x58
    5b26:	1852      	adds	r2, r2, r1
    5b28:	7013      	strb	r3, [r2, #0]
    5b2a:	002b      	movs	r3, r5
    5b2c:	aa16      	add	r2, sp, #88	; 0x58
    5b2e:	3101      	adds	r1, #1
    5b30:	3330      	adds	r3, #48	; 0x30
    5b32:	1852      	adds	r2, r2, r1
    5b34:	7013      	strb	r3, [r2, #0]
    5b36:	ab22      	add	r3, sp, #136	; 0x88
    5b38:	e6c1      	b.n	58be <_vfprintf_r+0x1302>
    5b3a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5b3c:	2b00      	cmp	r3, #0
    5b3e:	db52      	blt.n	5be6 <_vfprintf_r+0x162a>
    5b40:	ab16      	add	r3, sp, #88	; 0x58
    5b42:	7fdb      	ldrb	r3, [r3, #31]
    5b44:	4698      	mov	r8, r3
    5b46:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5b48:	2b47      	cmp	r3, #71	; 0x47
    5b4a:	dc48      	bgt.n	5bde <_vfprintf_r+0x1622>
    5b4c:	4b4e      	ldr	r3, [pc, #312]	; (5c88 <_vfprintf_r+0x16cc>)
    5b4e:	9311      	str	r3, [sp, #68]	; 0x44
    5b50:	f7ff f88c 	bl	4c6c <_vfprintf_r+0x6b0>
    5b54:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5b56:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5b58:	4694      	mov	ip, r2
    5b5a:	4463      	add	r3, ip
    5b5c:	4453      	add	r3, sl
    5b5e:	001a      	movs	r2, r3
    5b60:	930e      	str	r3, [sp, #56]	; 0x38
    5b62:	43db      	mvns	r3, r3
    5b64:	17db      	asrs	r3, r3, #31
    5b66:	401a      	ands	r2, r3
    5b68:	9208      	str	r2, [sp, #32]
    5b6a:	e595      	b.n	5698 <_vfprintf_r+0x10dc>
    5b6c:	46a9      	mov	r9, r5
    5b6e:	4648      	mov	r0, r9
    5b70:	1909      	adds	r1, r1, r4
    5b72:	3301      	adds	r3, #1
    5b74:	6010      	str	r0, [r2, #0]
    5b76:	6054      	str	r4, [r2, #4]
    5b78:	60b9      	str	r1, [r7, #8]
    5b7a:	3208      	adds	r2, #8
    5b7c:	607b      	str	r3, [r7, #4]
    5b7e:	2b07      	cmp	r3, #7
    5b80:	dc00      	bgt.n	5b84 <_vfprintf_r+0x15c8>
    5b82:	e5f6      	b.n	5772 <_vfprintf_r+0x11b6>
    5b84:	003a      	movs	r2, r7
    5b86:	4659      	mov	r1, fp
    5b88:	9806      	ldr	r0, [sp, #24]
    5b8a:	f002 ff79 	bl	8a80 <__sprint_r>
    5b8e:	2800      	cmp	r0, #0
    5b90:	d001      	beq.n	5b96 <_vfprintf_r+0x15da>
    5b92:	f7ff faa3 	bl	50dc <_vfprintf_r+0xb20>
    5b96:	68b9      	ldr	r1, [r7, #8]
    5b98:	687b      	ldr	r3, [r7, #4]
    5b9a:	aa32      	add	r2, sp, #200	; 0xc8
    5b9c:	e5e9      	b.n	5772 <_vfprintf_r+0x11b6>
    5b9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5ba0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5ba2:	1a98      	subs	r0, r3, r2
    5ba4:	1c43      	adds	r3, r0, #1
    5ba6:	001a      	movs	r2, r3
    5ba8:	930e      	str	r3, [sp, #56]	; 0x38
    5baa:	e715      	b.n	59d8 <_vfprintf_r+0x141c>
    5bac:	4a37      	ldr	r2, [pc, #220]	; (5c8c <_vfprintf_r+0x16d0>)
    5bae:	687b      	ldr	r3, [r7, #4]
    5bb0:	4691      	mov	r9, r2
    5bb2:	f7ff fbf5 	bl	53a0 <_vfprintf_r+0xde4>
    5bb6:	2301      	movs	r3, #1
    5bb8:	4023      	ands	r3, r4
    5bba:	9313      	str	r3, [sp, #76]	; 0x4c
    5bbc:	d000      	beq.n	5bc0 <_vfprintf_r+0x1604>
    5bbe:	e689      	b.n	58d4 <_vfprintf_r+0x1318>
    5bc0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5bc2:	43d3      	mvns	r3, r2
    5bc4:	17db      	asrs	r3, r3, #31
    5bc6:	401a      	ands	r2, r3
    5bc8:	9208      	str	r2, [sp, #32]
    5bca:	e565      	b.n	5698 <_vfprintf_r+0x10dc>
    5bcc:	2301      	movs	r3, #1
    5bce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5bd0:	391b      	subs	r1, #27
    5bd2:	1a9d      	subs	r5, r3, r2
    5bd4:	aa16      	add	r2, sp, #88	; 0x58
    5bd6:	332c      	adds	r3, #44	; 0x2c
    5bd8:	1852      	adds	r2, r2, r1
    5bda:	7013      	strb	r3, [r2, #0]
    5bdc:	e62f      	b.n	583e <_vfprintf_r+0x1282>
    5bde:	4b2c      	ldr	r3, [pc, #176]	; (5c90 <_vfprintf_r+0x16d4>)
    5be0:	9311      	str	r3, [sp, #68]	; 0x44
    5be2:	f7ff f843 	bl	4c6c <_vfprintf_r+0x6b0>
    5be6:	232d      	movs	r3, #45	; 0x2d
    5be8:	aa16      	add	r2, sp, #88	; 0x58
    5bea:	77d3      	strb	r3, [r2, #31]
    5bec:	4698      	mov	r8, r3
    5bee:	e7aa      	b.n	5b46 <_vfprintf_r+0x158a>
    5bf0:	4653      	mov	r3, sl
    5bf2:	2b00      	cmp	r3, #0
    5bf4:	d101      	bne.n	5bfa <_vfprintf_r+0x163e>
    5bf6:	07e3      	lsls	r3, r4, #31
    5bf8:	d503      	bpl.n	5c02 <_vfprintf_r+0x1646>
    5bfa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    5bfc:	1c58      	adds	r0, r3, #1
    5bfe:	0003      	movs	r3, r0
    5c00:	e7ac      	b.n	5b5c <_vfprintf_r+0x15a0>
    5c02:	2301      	movs	r3, #1
    5c04:	e708      	b.n	5a18 <_vfprintf_r+0x145c>
    5c06:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5c08:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5c0a:	1a9b      	subs	r3, r3, r2
    5c0c:	9314      	str	r3, [sp, #80]	; 0x50
    5c0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5c10:	2b47      	cmp	r3, #71	; 0x47
    5c12:	d100      	bne.n	5c16 <_vfprintf_r+0x165a>
    5c14:	e5f6      	b.n	5804 <_vfprintf_r+0x1248>
    5c16:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5c18:	9313      	str	r3, [sp, #76]	; 0x4c
    5c1a:	e5fd      	b.n	5818 <_vfprintf_r+0x125c>
    5c1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5c1e:	1d1d      	adds	r5, r3, #4
    5c20:	681b      	ldr	r3, [r3, #0]
    5c22:	46a8      	mov	r8, r5
    5c24:	469a      	mov	sl, r3
    5c26:	2b00      	cmp	r3, #0
    5c28:	db0a      	blt.n	5c40 <_vfprintf_r+0x1684>
    5c2a:	4645      	mov	r5, r8
    5c2c:	9b07      	ldr	r3, [sp, #28]
    5c2e:	950f      	str	r5, [sp, #60]	; 0x3c
    5c30:	785b      	ldrb	r3, [r3, #1]
    5c32:	9207      	str	r2, [sp, #28]
    5c34:	f7fe fd4b 	bl	46ce <_vfprintf_r+0x112>
    5c38:	ab16      	add	r3, sp, #88	; 0x58
    5c3a:	77d8      	strb	r0, [r3, #31]
    5c3c:	f7ff f830 	bl	4ca0 <_vfprintf_r+0x6e4>
    5c40:	2301      	movs	r3, #1
    5c42:	425b      	negs	r3, r3
    5c44:	469a      	mov	sl, r3
    5c46:	e7f0      	b.n	5c2a <_vfprintf_r+0x166e>
    5c48:	ab16      	add	r3, sp, #88	; 0x58
    5c4a:	77d8      	strb	r0, [r3, #31]
    5c4c:	f7fe ff27 	bl	4a9e <_vfprintf_r+0x4e2>
    5c50:	ab16      	add	r3, sp, #88	; 0x58
    5c52:	77d8      	strb	r0, [r3, #31]
    5c54:	f7fe fdce 	bl	47f4 <_vfprintf_r+0x238>
    5c58:	480c      	ldr	r0, [pc, #48]	; (5c8c <_vfprintf_r+0x16d0>)
    5c5a:	4681      	mov	r9, r0
    5c5c:	e787      	b.n	5b6e <_vfprintf_r+0x15b2>
    5c5e:	ab16      	add	r3, sp, #88	; 0x58
    5c60:	77d8      	strb	r0, [r3, #31]
    5c62:	f7ff f829 	bl	4cb8 <_vfprintf_r+0x6fc>
    5c66:	ab16      	add	r3, sp, #88	; 0x58
    5c68:	77d8      	strb	r0, [r3, #31]
    5c6a:	f7fe ffc3 	bl	4bf4 <_vfprintf_r+0x638>
    5c6e:	ab16      	add	r3, sp, #88	; 0x58
    5c70:	77d8      	strb	r0, [r3, #31]
    5c72:	f7fe ffa5 	bl	4bc0 <_vfprintf_r+0x604>
    5c76:	ab16      	add	r3, sp, #88	; 0x58
    5c78:	77d8      	strb	r0, [r3, #31]
    5c7a:	f7fe feaf 	bl	49dc <_vfprintf_r+0x420>
    5c7e:	aa16      	add	r2, sp, #88	; 0x58
    5c80:	232e      	movs	r3, #46	; 0x2e
    5c82:	4694      	mov	ip, r2
    5c84:	4463      	add	r3, ip
    5c86:	e61a      	b.n	58be <_vfprintf_r+0x1302>
    5c88:	00009dec 	.word	0x00009dec
    5c8c:	00009e38 	.word	0x00009e38
    5c90:	00009df0 	.word	0x00009df0

00005c94 <__sbprintf>:
    5c94:	b5f0      	push	{r4, r5, r6, r7, lr}
    5c96:	0015      	movs	r5, r2
    5c98:	2202      	movs	r2, #2
    5c9a:	4c1e      	ldr	r4, [pc, #120]	; (5d14 <__sbprintf+0x80>)
    5c9c:	001f      	movs	r7, r3
    5c9e:	898b      	ldrh	r3, [r1, #12]
    5ca0:	44a5      	add	sp, r4
    5ca2:	4393      	bics	r3, r2
    5ca4:	466a      	mov	r2, sp
    5ca6:	8193      	strh	r3, [r2, #12]
    5ca8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    5caa:	0006      	movs	r6, r0
    5cac:	9319      	str	r3, [sp, #100]	; 0x64
    5cae:	89cb      	ldrh	r3, [r1, #14]
    5cb0:	a816      	add	r0, sp, #88	; 0x58
    5cb2:	81d3      	strh	r3, [r2, #14]
    5cb4:	69cb      	ldr	r3, [r1, #28]
    5cb6:	000c      	movs	r4, r1
    5cb8:	9307      	str	r3, [sp, #28]
    5cba:	6a4b      	ldr	r3, [r1, #36]	; 0x24
    5cbc:	9309      	str	r3, [sp, #36]	; 0x24
    5cbe:	ab1a      	add	r3, sp, #104	; 0x68
    5cc0:	9300      	str	r3, [sp, #0]
    5cc2:	9304      	str	r3, [sp, #16]
    5cc4:	2380      	movs	r3, #128	; 0x80
    5cc6:	00db      	lsls	r3, r3, #3
    5cc8:	9302      	str	r3, [sp, #8]
    5cca:	9305      	str	r3, [sp, #20]
    5ccc:	2300      	movs	r3, #0
    5cce:	9306      	str	r3, [sp, #24]
    5cd0:	f001 fd50 	bl	7774 <__retarget_lock_init_recursive>
    5cd4:	002a      	movs	r2, r5
    5cd6:	003b      	movs	r3, r7
    5cd8:	4669      	mov	r1, sp
    5cda:	0030      	movs	r0, r6
    5cdc:	f7fe fc6e 	bl	45bc <_vfprintf_r>
    5ce0:	1e05      	subs	r5, r0, #0
    5ce2:	db05      	blt.n	5cf0 <__sbprintf+0x5c>
    5ce4:	4669      	mov	r1, sp
    5ce6:	0030      	movs	r0, r6
    5ce8:	f001 f9ac 	bl	7044 <_fflush_r>
    5cec:	2800      	cmp	r0, #0
    5cee:	d10e      	bne.n	5d0e <__sbprintf+0x7a>
    5cf0:	466b      	mov	r3, sp
    5cf2:	899b      	ldrh	r3, [r3, #12]
    5cf4:	065b      	lsls	r3, r3, #25
    5cf6:	d503      	bpl.n	5d00 <__sbprintf+0x6c>
    5cf8:	2240      	movs	r2, #64	; 0x40
    5cfa:	89a3      	ldrh	r3, [r4, #12]
    5cfc:	4313      	orrs	r3, r2
    5cfe:	81a3      	strh	r3, [r4, #12]
    5d00:	9816      	ldr	r0, [sp, #88]	; 0x58
    5d02:	f001 fd39 	bl	7778 <__retarget_lock_close_recursive>
    5d06:	0028      	movs	r0, r5
    5d08:	4b03      	ldr	r3, [pc, #12]	; (5d18 <__sbprintf+0x84>)
    5d0a:	449d      	add	sp, r3
    5d0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5d0e:	2501      	movs	r5, #1
    5d10:	426d      	negs	r5, r5
    5d12:	e7ed      	b.n	5cf0 <__sbprintf+0x5c>
    5d14:	fffffb94 	.word	0xfffffb94
    5d18:	0000046c 	.word	0x0000046c

00005d1c <__swsetup_r>:
    5d1c:	4b33      	ldr	r3, [pc, #204]	; (5dec <__swsetup_r+0xd0>)
    5d1e:	b570      	push	{r4, r5, r6, lr}
    5d20:	0005      	movs	r5, r0
    5d22:	6818      	ldr	r0, [r3, #0]
    5d24:	000c      	movs	r4, r1
    5d26:	2800      	cmp	r0, #0
    5d28:	d002      	beq.n	5d30 <__swsetup_r+0x14>
    5d2a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    5d2c:	2b00      	cmp	r3, #0
    5d2e:	d03c      	beq.n	5daa <__swsetup_r+0x8e>
    5d30:	230c      	movs	r3, #12
    5d32:	5ee2      	ldrsh	r2, [r4, r3]
    5d34:	b293      	uxth	r3, r2
    5d36:	0719      	lsls	r1, r3, #28
    5d38:	d50d      	bpl.n	5d56 <__swsetup_r+0x3a>
    5d3a:	6921      	ldr	r1, [r4, #16]
    5d3c:	2900      	cmp	r1, #0
    5d3e:	d015      	beq.n	5d6c <__swsetup_r+0x50>
    5d40:	07da      	lsls	r2, r3, #31
    5d42:	d521      	bpl.n	5d88 <__swsetup_r+0x6c>
    5d44:	2300      	movs	r3, #0
    5d46:	60a3      	str	r3, [r4, #8]
    5d48:	6963      	ldr	r3, [r4, #20]
    5d4a:	2000      	movs	r0, #0
    5d4c:	425b      	negs	r3, r3
    5d4e:	61a3      	str	r3, [r4, #24]
    5d50:	2900      	cmp	r1, #0
    5d52:	d021      	beq.n	5d98 <__swsetup_r+0x7c>
    5d54:	bd70      	pop	{r4, r5, r6, pc}
    5d56:	06d9      	lsls	r1, r3, #27
    5d58:	d53f      	bpl.n	5dda <__swsetup_r+0xbe>
    5d5a:	075b      	lsls	r3, r3, #29
    5d5c:	d428      	bmi.n	5db0 <__swsetup_r+0x94>
    5d5e:	6921      	ldr	r1, [r4, #16]
    5d60:	2308      	movs	r3, #8
    5d62:	4313      	orrs	r3, r2
    5d64:	81a3      	strh	r3, [r4, #12]
    5d66:	b29b      	uxth	r3, r3
    5d68:	2900      	cmp	r1, #0
    5d6a:	d1e9      	bne.n	5d40 <__swsetup_r+0x24>
    5d6c:	22a0      	movs	r2, #160	; 0xa0
    5d6e:	2080      	movs	r0, #128	; 0x80
    5d70:	0092      	lsls	r2, r2, #2
    5d72:	0080      	lsls	r0, r0, #2
    5d74:	401a      	ands	r2, r3
    5d76:	4282      	cmp	r2, r0
    5d78:	d0e2      	beq.n	5d40 <__swsetup_r+0x24>
    5d7a:	0021      	movs	r1, r4
    5d7c:	0028      	movs	r0, r5
    5d7e:	f001 fd31 	bl	77e4 <__smakebuf_r>
    5d82:	89a3      	ldrh	r3, [r4, #12]
    5d84:	6921      	ldr	r1, [r4, #16]
    5d86:	e7db      	b.n	5d40 <__swsetup_r+0x24>
    5d88:	2200      	movs	r2, #0
    5d8a:	079b      	lsls	r3, r3, #30
    5d8c:	d400      	bmi.n	5d90 <__swsetup_r+0x74>
    5d8e:	6962      	ldr	r2, [r4, #20]
    5d90:	60a2      	str	r2, [r4, #8]
    5d92:	2000      	movs	r0, #0
    5d94:	2900      	cmp	r1, #0
    5d96:	d1dd      	bne.n	5d54 <__swsetup_r+0x38>
    5d98:	220c      	movs	r2, #12
    5d9a:	5ea3      	ldrsh	r3, [r4, r2]
    5d9c:	061a      	lsls	r2, r3, #24
    5d9e:	d5d9      	bpl.n	5d54 <__swsetup_r+0x38>
    5da0:	2240      	movs	r2, #64	; 0x40
    5da2:	4313      	orrs	r3, r2
    5da4:	81a3      	strh	r3, [r4, #12]
    5da6:	3801      	subs	r0, #1
    5da8:	e7d4      	b.n	5d54 <__swsetup_r+0x38>
    5daa:	f001 f9a5 	bl	70f8 <__sinit>
    5dae:	e7bf      	b.n	5d30 <__swsetup_r+0x14>
    5db0:	6b21      	ldr	r1, [r4, #48]	; 0x30
    5db2:	2900      	cmp	r1, #0
    5db4:	d00a      	beq.n	5dcc <__swsetup_r+0xb0>
    5db6:	0023      	movs	r3, r4
    5db8:	3340      	adds	r3, #64	; 0x40
    5dba:	4299      	cmp	r1, r3
    5dbc:	d004      	beq.n	5dc8 <__swsetup_r+0xac>
    5dbe:	0028      	movs	r0, r5
    5dc0:	f001 fa44 	bl	724c <_free_r>
    5dc4:	230c      	movs	r3, #12
    5dc6:	5ee2      	ldrsh	r2, [r4, r3]
    5dc8:	2300      	movs	r3, #0
    5dca:	6323      	str	r3, [r4, #48]	; 0x30
    5dcc:	2324      	movs	r3, #36	; 0x24
    5dce:	439a      	bics	r2, r3
    5dd0:	2300      	movs	r3, #0
    5dd2:	6921      	ldr	r1, [r4, #16]
    5dd4:	6063      	str	r3, [r4, #4]
    5dd6:	6021      	str	r1, [r4, #0]
    5dd8:	e7c2      	b.n	5d60 <__swsetup_r+0x44>
    5dda:	2309      	movs	r3, #9
    5ddc:	602b      	str	r3, [r5, #0]
    5dde:	2340      	movs	r3, #64	; 0x40
    5de0:	2001      	movs	r0, #1
    5de2:	431a      	orrs	r2, r3
    5de4:	81a2      	strh	r2, [r4, #12]
    5de6:	4240      	negs	r0, r0
    5de8:	e7b4      	b.n	5d54 <__swsetup_r+0x38>
    5dea:	46c0      	nop			; (mov r8, r8)
    5dec:	2000007c 	.word	0x2000007c

00005df0 <register_fini>:
    5df0:	4b03      	ldr	r3, [pc, #12]	; (5e00 <register_fini+0x10>)
    5df2:	b510      	push	{r4, lr}
    5df4:	2b00      	cmp	r3, #0
    5df6:	d002      	beq.n	5dfe <register_fini+0xe>
    5df8:	4802      	ldr	r0, [pc, #8]	; (5e04 <register_fini+0x14>)
    5dfa:	f000 f805 	bl	5e08 <atexit>
    5dfe:	bd10      	pop	{r4, pc}
    5e00:	00000000 	.word	0x00000000
    5e04:	00007179 	.word	0x00007179

00005e08 <atexit>:
    5e08:	b510      	push	{r4, lr}
    5e0a:	0001      	movs	r1, r0
    5e0c:	2300      	movs	r3, #0
    5e0e:	2200      	movs	r2, #0
    5e10:	2000      	movs	r0, #0
    5e12:	f002 fe53 	bl	8abc <__register_exitproc>
    5e16:	bd10      	pop	{r4, pc}

00005e18 <quorem>:
    5e18:	b5f0      	push	{r4, r5, r6, r7, lr}
    5e1a:	4645      	mov	r5, r8
    5e1c:	4680      	mov	r8, r0
    5e1e:	46de      	mov	lr, fp
    5e20:	4657      	mov	r7, sl
    5e22:	464e      	mov	r6, r9
    5e24:	4642      	mov	r2, r8
    5e26:	b5e0      	push	{r5, r6, r7, lr}
    5e28:	690c      	ldr	r4, [r1, #16]
    5e2a:	6912      	ldr	r2, [r2, #16]
    5e2c:	b085      	sub	sp, #20
    5e2e:	000b      	movs	r3, r1
    5e30:	9102      	str	r1, [sp, #8]
    5e32:	2000      	movs	r0, #0
    5e34:	4294      	cmp	r4, r2
    5e36:	dd00      	ble.n	5e3a <quorem+0x22>
    5e38:	e090      	b.n	5f5c <quorem+0x144>
    5e3a:	2214      	movs	r2, #20
    5e3c:	4694      	mov	ip, r2
    5e3e:	4463      	add	r3, ip
    5e40:	4699      	mov	r9, r3
    5e42:	464a      	mov	r2, r9
    5e44:	3c01      	subs	r4, #1
    5e46:	00a3      	lsls	r3, r4, #2
    5e48:	18d6      	adds	r6, r2, r3
    5e4a:	2214      	movs	r2, #20
    5e4c:	4442      	add	r2, r8
    5e4e:	4693      	mov	fp, r2
    5e50:	449b      	add	fp, r3
    5e52:	6833      	ldr	r3, [r6, #0]
    5e54:	0015      	movs	r5, r2
    5e56:	1c59      	adds	r1, r3, #1
    5e58:	465b      	mov	r3, fp
    5e5a:	6818      	ldr	r0, [r3, #0]
    5e5c:	9201      	str	r2, [sp, #4]
    5e5e:	f7fc fd93 	bl	2988 <__udivsi3>
    5e62:	1e03      	subs	r3, r0, #0
    5e64:	9000      	str	r0, [sp, #0]
    5e66:	d042      	beq.n	5eee <quorem+0xd6>
    5e68:	0029      	movs	r1, r5
    5e6a:	2700      	movs	r7, #0
    5e6c:	464d      	mov	r5, r9
    5e6e:	2000      	movs	r0, #0
    5e70:	46b1      	mov	r9, r6
    5e72:	46a2      	mov	sl, r4
    5e74:	003e      	movs	r6, r7
    5e76:	0004      	movs	r4, r0
    5e78:	469c      	mov	ip, r3
    5e7a:	002f      	movs	r7, r5
    5e7c:	0008      	movs	r0, r1
    5e7e:	9503      	str	r5, [sp, #12]
    5e80:	4663      	mov	r3, ip
    5e82:	cf04      	ldmia	r7!, {r2}
    5e84:	0415      	lsls	r5, r2, #16
    5e86:	0c2d      	lsrs	r5, r5, #16
    5e88:	435d      	muls	r5, r3
    5e8a:	0c12      	lsrs	r2, r2, #16
    5e8c:	435a      	muls	r2, r3
    5e8e:	19ad      	adds	r5, r5, r6
    5e90:	0c2b      	lsrs	r3, r5, #16
    5e92:	18d2      	adds	r2, r2, r3
    5e94:	6803      	ldr	r3, [r0, #0]
    5e96:	042d      	lsls	r5, r5, #16
    5e98:	0419      	lsls	r1, r3, #16
    5e9a:	0c09      	lsrs	r1, r1, #16
    5e9c:	1909      	adds	r1, r1, r4
    5e9e:	0c16      	lsrs	r6, r2, #16
    5ea0:	0c2d      	lsrs	r5, r5, #16
    5ea2:	0412      	lsls	r2, r2, #16
    5ea4:	1b49      	subs	r1, r1, r5
    5ea6:	0c12      	lsrs	r2, r2, #16
    5ea8:	0c1b      	lsrs	r3, r3, #16
    5eaa:	1a9b      	subs	r3, r3, r2
    5eac:	140a      	asrs	r2, r1, #16
    5eae:	189b      	adds	r3, r3, r2
    5eb0:	0409      	lsls	r1, r1, #16
    5eb2:	141c      	asrs	r4, r3, #16
    5eb4:	0c09      	lsrs	r1, r1, #16
    5eb6:	041b      	lsls	r3, r3, #16
    5eb8:	4319      	orrs	r1, r3
    5eba:	c002      	stmia	r0!, {r1}
    5ebc:	45b9      	cmp	r9, r7
    5ebe:	d2df      	bcs.n	5e80 <quorem+0x68>
    5ec0:	9b03      	ldr	r3, [sp, #12]
    5ec2:	464e      	mov	r6, r9
    5ec4:	4699      	mov	r9, r3
    5ec6:	465b      	mov	r3, fp
    5ec8:	681b      	ldr	r3, [r3, #0]
    5eca:	4654      	mov	r4, sl
    5ecc:	2b00      	cmp	r3, #0
    5ece:	d10e      	bne.n	5eee <quorem+0xd6>
    5ed0:	465b      	mov	r3, fp
    5ed2:	9a01      	ldr	r2, [sp, #4]
    5ed4:	3b04      	subs	r3, #4
    5ed6:	429a      	cmp	r2, r3
    5ed8:	d304      	bcc.n	5ee4 <quorem+0xcc>
    5eda:	e006      	b.n	5eea <quorem+0xd2>
    5edc:	3b04      	subs	r3, #4
    5ede:	3c01      	subs	r4, #1
    5ee0:	429a      	cmp	r2, r3
    5ee2:	d202      	bcs.n	5eea <quorem+0xd2>
    5ee4:	6819      	ldr	r1, [r3, #0]
    5ee6:	2900      	cmp	r1, #0
    5ee8:	d0f8      	beq.n	5edc <quorem+0xc4>
    5eea:	4643      	mov	r3, r8
    5eec:	611c      	str	r4, [r3, #16]
    5eee:	9902      	ldr	r1, [sp, #8]
    5ef0:	4640      	mov	r0, r8
    5ef2:	f002 fa51 	bl	8398 <__mcmp>
    5ef6:	2800      	cmp	r0, #0
    5ef8:	db2f      	blt.n	5f5a <quorem+0x142>
    5efa:	464f      	mov	r7, r9
    5efc:	2000      	movs	r0, #0
    5efe:	9b00      	ldr	r3, [sp, #0]
    5f00:	9d01      	ldr	r5, [sp, #4]
    5f02:	3301      	adds	r3, #1
    5f04:	9300      	str	r3, [sp, #0]
    5f06:	682b      	ldr	r3, [r5, #0]
    5f08:	cf02      	ldmia	r7!, {r1}
    5f0a:	041a      	lsls	r2, r3, #16
    5f0c:	0c12      	lsrs	r2, r2, #16
    5f0e:	1810      	adds	r0, r2, r0
    5f10:	040a      	lsls	r2, r1, #16
    5f12:	0c12      	lsrs	r2, r2, #16
    5f14:	1a82      	subs	r2, r0, r2
    5f16:	0c09      	lsrs	r1, r1, #16
    5f18:	0c1b      	lsrs	r3, r3, #16
    5f1a:	1a5b      	subs	r3, r3, r1
    5f1c:	1411      	asrs	r1, r2, #16
    5f1e:	185b      	adds	r3, r3, r1
    5f20:	0412      	lsls	r2, r2, #16
    5f22:	1418      	asrs	r0, r3, #16
    5f24:	0c12      	lsrs	r2, r2, #16
    5f26:	041b      	lsls	r3, r3, #16
    5f28:	4313      	orrs	r3, r2
    5f2a:	c508      	stmia	r5!, {r3}
    5f2c:	42be      	cmp	r6, r7
    5f2e:	d2ea      	bcs.n	5f06 <quorem+0xee>
    5f30:	9901      	ldr	r1, [sp, #4]
    5f32:	00a3      	lsls	r3, r4, #2
    5f34:	468c      	mov	ip, r1
    5f36:	4463      	add	r3, ip
    5f38:	681a      	ldr	r2, [r3, #0]
    5f3a:	2a00      	cmp	r2, #0
    5f3c:	d10d      	bne.n	5f5a <quorem+0x142>
    5f3e:	3b04      	subs	r3, #4
    5f40:	000a      	movs	r2, r1
    5f42:	4299      	cmp	r1, r3
    5f44:	d304      	bcc.n	5f50 <quorem+0x138>
    5f46:	e006      	b.n	5f56 <quorem+0x13e>
    5f48:	3b04      	subs	r3, #4
    5f4a:	3c01      	subs	r4, #1
    5f4c:	429a      	cmp	r2, r3
    5f4e:	d202      	bcs.n	5f56 <quorem+0x13e>
    5f50:	6819      	ldr	r1, [r3, #0]
    5f52:	2900      	cmp	r1, #0
    5f54:	d0f8      	beq.n	5f48 <quorem+0x130>
    5f56:	4643      	mov	r3, r8
    5f58:	611c      	str	r4, [r3, #16]
    5f5a:	9800      	ldr	r0, [sp, #0]
    5f5c:	b005      	add	sp, #20
    5f5e:	bc3c      	pop	{r2, r3, r4, r5}
    5f60:	4690      	mov	r8, r2
    5f62:	4699      	mov	r9, r3
    5f64:	46a2      	mov	sl, r4
    5f66:	46ab      	mov	fp, r5
    5f68:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5f6a:	46c0      	nop			; (mov r8, r8)

00005f6c <_dtoa_r>:
    5f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5f6e:	4657      	mov	r7, sl
    5f70:	464e      	mov	r6, r9
    5f72:	4645      	mov	r5, r8
    5f74:	46de      	mov	lr, fp
    5f76:	b5e0      	push	{r5, r6, r7, lr}
    5f78:	6c01      	ldr	r1, [r0, #64]	; 0x40
    5f7a:	b099      	sub	sp, #100	; 0x64
    5f7c:	4682      	mov	sl, r0
    5f7e:	001d      	movs	r5, r3
    5f80:	0016      	movs	r6, r2
    5f82:	001f      	movs	r7, r3
    5f84:	2900      	cmp	r1, #0
    5f86:	d009      	beq.n	5f9c <_dtoa_r+0x30>
    5f88:	2301      	movs	r3, #1
    5f8a:	6c42      	ldr	r2, [r0, #68]	; 0x44
    5f8c:	4093      	lsls	r3, r2
    5f8e:	604a      	str	r2, [r1, #4]
    5f90:	608b      	str	r3, [r1, #8]
    5f92:	f001 fff5 	bl	7f80 <_Bfree>
    5f96:	2300      	movs	r3, #0
    5f98:	4652      	mov	r2, sl
    5f9a:	6413      	str	r3, [r2, #64]	; 0x40
    5f9c:	46b8      	mov	r8, r7
    5f9e:	2f00      	cmp	r7, #0
    5fa0:	db37      	blt.n	6012 <_dtoa_r+0xa6>
    5fa2:	2300      	movs	r3, #0
    5fa4:	9a25      	ldr	r2, [sp, #148]	; 0x94
    5fa6:	6013      	str	r3, [r2, #0]
    5fa8:	4642      	mov	r2, r8
    5faa:	4bd6      	ldr	r3, [pc, #856]	; (6304 <_dtoa_r+0x398>)
    5fac:	401a      	ands	r2, r3
    5fae:	429a      	cmp	r2, r3
    5fb0:	d018      	beq.n	5fe4 <_dtoa_r+0x78>
    5fb2:	2200      	movs	r2, #0
    5fb4:	2300      	movs	r3, #0
    5fb6:	0030      	movs	r0, r6
    5fb8:	0039      	movs	r1, r7
    5fba:	f7fd ffd9 	bl	3f70 <__aeabi_dcmpeq>
    5fbe:	2800      	cmp	r0, #0
    5fc0:	d02f      	beq.n	6022 <_dtoa_r+0xb6>
    5fc2:	2301      	movs	r3, #1
    5fc4:	9a24      	ldr	r2, [sp, #144]	; 0x90
    5fc6:	6013      	str	r3, [r2, #0]
    5fc8:	9b26      	ldr	r3, [sp, #152]	; 0x98
    5fca:	2b00      	cmp	r3, #0
    5fcc:	d100      	bne.n	5fd0 <_dtoa_r+0x64>
    5fce:	e22a      	b.n	6426 <_dtoa_r+0x4ba>
    5fd0:	48cd      	ldr	r0, [pc, #820]	; (6308 <_dtoa_r+0x39c>)
    5fd2:	6018      	str	r0, [r3, #0]
    5fd4:	3801      	subs	r0, #1
    5fd6:	b019      	add	sp, #100	; 0x64
    5fd8:	bc3c      	pop	{r2, r3, r4, r5}
    5fda:	4690      	mov	r8, r2
    5fdc:	4699      	mov	r9, r3
    5fde:	46a2      	mov	sl, r4
    5fe0:	46ab      	mov	fp, r5
    5fe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5fe4:	4bc9      	ldr	r3, [pc, #804]	; (630c <_dtoa_r+0x3a0>)
    5fe6:	9a24      	ldr	r2, [sp, #144]	; 0x90
    5fe8:	6013      	str	r3, [r2, #0]
    5fea:	2e00      	cmp	r6, #0
    5fec:	d10b      	bne.n	6006 <_dtoa_r+0x9a>
    5fee:	4643      	mov	r3, r8
    5ff0:	0318      	lsls	r0, r3, #12
    5ff2:	d108      	bne.n	6006 <_dtoa_r+0x9a>
    5ff4:	9b26      	ldr	r3, [sp, #152]	; 0x98
    5ff6:	48c6      	ldr	r0, [pc, #792]	; (6310 <_dtoa_r+0x3a4>)
    5ff8:	2b00      	cmp	r3, #0
    5ffa:	d0ec      	beq.n	5fd6 <_dtoa_r+0x6a>
    5ffc:	0003      	movs	r3, r0
    5ffe:	3308      	adds	r3, #8
    6000:	9a26      	ldr	r2, [sp, #152]	; 0x98
    6002:	6013      	str	r3, [r2, #0]
    6004:	e7e7      	b.n	5fd6 <_dtoa_r+0x6a>
    6006:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6008:	48c2      	ldr	r0, [pc, #776]	; (6314 <_dtoa_r+0x3a8>)
    600a:	2b00      	cmp	r3, #0
    600c:	d0e3      	beq.n	5fd6 <_dtoa_r+0x6a>
    600e:	1cc3      	adds	r3, r0, #3
    6010:	e7f6      	b.n	6000 <_dtoa_r+0x94>
    6012:	2301      	movs	r3, #1
    6014:	9a25      	ldr	r2, [sp, #148]	; 0x94
    6016:	0068      	lsls	r0, r5, #1
    6018:	6013      	str	r3, [r2, #0]
    601a:	0843      	lsrs	r3, r0, #1
    601c:	4698      	mov	r8, r3
    601e:	001f      	movs	r7, r3
    6020:	e7c2      	b.n	5fa8 <_dtoa_r+0x3c>
    6022:	ab16      	add	r3, sp, #88	; 0x58
    6024:	9301      	str	r3, [sp, #4]
    6026:	ab17      	add	r3, sp, #92	; 0x5c
    6028:	9300      	str	r3, [sp, #0]
    602a:	0032      	movs	r2, r6
    602c:	003b      	movs	r3, r7
    602e:	4650      	mov	r0, sl
    6030:	f002 fa68 	bl	8504 <__d2b>
    6034:	4643      	mov	r3, r8
    6036:	4683      	mov	fp, r0
    6038:	0d1a      	lsrs	r2, r3, #20
    603a:	d100      	bne.n	603e <_dtoa_r+0xd2>
    603c:	e1d6      	b.n	63ec <_dtoa_r+0x480>
    603e:	033b      	lsls	r3, r7, #12
    6040:	4cb5      	ldr	r4, [pc, #724]	; (6318 <_dtoa_r+0x3ac>)
    6042:	0b1b      	lsrs	r3, r3, #12
    6044:	431c      	orrs	r4, r3
    6046:	4bb5      	ldr	r3, [pc, #724]	; (631c <_dtoa_r+0x3b0>)
    6048:	0030      	movs	r0, r6
    604a:	4698      	mov	r8, r3
    604c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    604e:	0021      	movs	r1, r4
    6050:	4699      	mov	r9, r3
    6052:	2300      	movs	r3, #0
    6054:	4490      	add	r8, r2
    6056:	930f      	str	r3, [sp, #60]	; 0x3c
    6058:	2200      	movs	r2, #0
    605a:	4bb1      	ldr	r3, [pc, #708]	; (6320 <_dtoa_r+0x3b4>)
    605c:	f7fd fbb4 	bl	37c8 <__aeabi_dsub>
    6060:	4ab0      	ldr	r2, [pc, #704]	; (6324 <_dtoa_r+0x3b8>)
    6062:	4bb1      	ldr	r3, [pc, #708]	; (6328 <_dtoa_r+0x3bc>)
    6064:	f7fd f930 	bl	32c8 <__aeabi_dmul>
    6068:	4ab0      	ldr	r2, [pc, #704]	; (632c <_dtoa_r+0x3c0>)
    606a:	4bb1      	ldr	r3, [pc, #708]	; (6330 <_dtoa_r+0x3c4>)
    606c:	f003 f8b2 	bl	91d4 <__aeabi_dadd>
    6070:	0004      	movs	r4, r0
    6072:	4640      	mov	r0, r8
    6074:	000d      	movs	r5, r1
    6076:	f7fd fef1 	bl	3e5c <__aeabi_i2d>
    607a:	4aae      	ldr	r2, [pc, #696]	; (6334 <_dtoa_r+0x3c8>)
    607c:	4bae      	ldr	r3, [pc, #696]	; (6338 <_dtoa_r+0x3cc>)
    607e:	f7fd f923 	bl	32c8 <__aeabi_dmul>
    6082:	0002      	movs	r2, r0
    6084:	000b      	movs	r3, r1
    6086:	0020      	movs	r0, r4
    6088:	0029      	movs	r1, r5
    608a:	f003 f8a3 	bl	91d4 <__aeabi_dadd>
    608e:	0004      	movs	r4, r0
    6090:	000d      	movs	r5, r1
    6092:	f7fd feaf 	bl	3df4 <__aeabi_d2iz>
    6096:	2200      	movs	r2, #0
    6098:	9003      	str	r0, [sp, #12]
    609a:	2300      	movs	r3, #0
    609c:	0020      	movs	r0, r4
    609e:	0029      	movs	r1, r5
    60a0:	f7fd ff6c 	bl	3f7c <__aeabi_dcmplt>
    60a4:	2800      	cmp	r0, #0
    60a6:	d000      	beq.n	60aa <_dtoa_r+0x13e>
    60a8:	e2b1      	b.n	660e <_dtoa_r+0x6a2>
    60aa:	2301      	movs	r3, #1
    60ac:	9c03      	ldr	r4, [sp, #12]
    60ae:	930c      	str	r3, [sp, #48]	; 0x30
    60b0:	2c16      	cmp	r4, #22
    60b2:	d810      	bhi.n	60d6 <_dtoa_r+0x16a>
    60b4:	49a1      	ldr	r1, [pc, #644]	; (633c <_dtoa_r+0x3d0>)
    60b6:	00e3      	lsls	r3, r4, #3
    60b8:	18c9      	adds	r1, r1, r3
    60ba:	0032      	movs	r2, r6
    60bc:	6808      	ldr	r0, [r1, #0]
    60be:	6849      	ldr	r1, [r1, #4]
    60c0:	003b      	movs	r3, r7
    60c2:	f7fd ff6f 	bl	3fa4 <__aeabi_dcmpgt>
    60c6:	2800      	cmp	r0, #0
    60c8:	d100      	bne.n	60cc <_dtoa_r+0x160>
    60ca:	e31d      	b.n	6708 <_dtoa_r+0x79c>
    60cc:	0023      	movs	r3, r4
    60ce:	3b01      	subs	r3, #1
    60d0:	9303      	str	r3, [sp, #12]
    60d2:	2300      	movs	r3, #0
    60d4:	930c      	str	r3, [sp, #48]	; 0x30
    60d6:	464b      	mov	r3, r9
    60d8:	4642      	mov	r2, r8
    60da:	1a9a      	subs	r2, r3, r2
    60dc:	2300      	movs	r3, #0
    60de:	9306      	str	r3, [sp, #24]
    60e0:	0013      	movs	r3, r2
    60e2:	3b01      	subs	r3, #1
    60e4:	9304      	str	r3, [sp, #16]
    60e6:	d500      	bpl.n	60ea <_dtoa_r+0x17e>
    60e8:	e2a1      	b.n	662e <_dtoa_r+0x6c2>
    60ea:	9b03      	ldr	r3, [sp, #12]
    60ec:	2b00      	cmp	r3, #0
    60ee:	da00      	bge.n	60f2 <_dtoa_r+0x186>
    60f0:	e284      	b.n	65fc <_dtoa_r+0x690>
    60f2:	469c      	mov	ip, r3
    60f4:	930d      	str	r3, [sp, #52]	; 0x34
    60f6:	2300      	movs	r3, #0
    60f8:	9a04      	ldr	r2, [sp, #16]
    60fa:	4699      	mov	r9, r3
    60fc:	0011      	movs	r1, r2
    60fe:	4461      	add	r1, ip
    6100:	9104      	str	r1, [sp, #16]
    6102:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6104:	2b09      	cmp	r3, #9
    6106:	d900      	bls.n	610a <_dtoa_r+0x19e>
    6108:	e18f      	b.n	642a <_dtoa_r+0x4be>
    610a:	2401      	movs	r4, #1
    610c:	2b05      	cmp	r3, #5
    610e:	dd02      	ble.n	6116 <_dtoa_r+0x1aa>
    6110:	2400      	movs	r4, #0
    6112:	3b04      	subs	r3, #4
    6114:	9322      	str	r3, [sp, #136]	; 0x88
    6116:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6118:	2b03      	cmp	r3, #3
    611a:	d101      	bne.n	6120 <_dtoa_r+0x1b4>
    611c:	f000 fcce 	bl	6abc <_dtoa_r+0xb50>
    6120:	dc01      	bgt.n	6126 <_dtoa_r+0x1ba>
    6122:	f000 fc92 	bl	6a4a <_dtoa_r+0xade>
    6126:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6128:	2b04      	cmp	r3, #4
    612a:	d101      	bne.n	6130 <_dtoa_r+0x1c4>
    612c:	f000 fc40 	bl	69b0 <_dtoa_r+0xa44>
    6130:	2301      	movs	r3, #1
    6132:	930b      	str	r3, [sp, #44]	; 0x2c
    6134:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6136:	2b05      	cmp	r3, #5
    6138:	d001      	beq.n	613e <_dtoa_r+0x1d2>
    613a:	f000 fc8b 	bl	6a54 <_dtoa_r+0xae8>
    613e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    6140:	9b03      	ldr	r3, [sp, #12]
    6142:	4694      	mov	ip, r2
    6144:	4463      	add	r3, ip
    6146:	930e      	str	r3, [sp, #56]	; 0x38
    6148:	3301      	adds	r3, #1
    614a:	9307      	str	r3, [sp, #28]
    614c:	1e1d      	subs	r5, r3, #0
    614e:	dc01      	bgt.n	6154 <_dtoa_r+0x1e8>
    6150:	f000 fd49 	bl	6be6 <_dtoa_r+0xc7a>
    6154:	9b07      	ldr	r3, [sp, #28]
    6156:	4698      	mov	r8, r3
    6158:	2300      	movs	r3, #0
    615a:	4652      	mov	r2, sl
    615c:	2100      	movs	r1, #0
    615e:	6453      	str	r3, [r2, #68]	; 0x44
    6160:	2d17      	cmp	r5, #23
    6162:	d90a      	bls.n	617a <_dtoa_r+0x20e>
    6164:	2201      	movs	r2, #1
    6166:	3304      	adds	r3, #4
    6168:	005b      	lsls	r3, r3, #1
    616a:	0018      	movs	r0, r3
    616c:	3014      	adds	r0, #20
    616e:	0011      	movs	r1, r2
    6170:	3201      	adds	r2, #1
    6172:	4285      	cmp	r5, r0
    6174:	d2f8      	bcs.n	6168 <_dtoa_r+0x1fc>
    6176:	4653      	mov	r3, sl
    6178:	6459      	str	r1, [r3, #68]	; 0x44
    617a:	4650      	mov	r0, sl
    617c:	f001 fed8 	bl	7f30 <_Balloc>
    6180:	4653      	mov	r3, sl
    6182:	6418      	str	r0, [r3, #64]	; 0x40
    6184:	4643      	mov	r3, r8
    6186:	900a      	str	r0, [sp, #40]	; 0x28
    6188:	2b0e      	cmp	r3, #14
    618a:	d900      	bls.n	618e <_dtoa_r+0x222>
    618c:	e161      	b.n	6452 <_dtoa_r+0x4e6>
    618e:	2c00      	cmp	r4, #0
    6190:	d100      	bne.n	6194 <_dtoa_r+0x228>
    6192:	e15e      	b.n	6452 <_dtoa_r+0x4e6>
    6194:	9610      	str	r6, [sp, #64]	; 0x40
    6196:	9711      	str	r7, [sp, #68]	; 0x44
    6198:	9e03      	ldr	r6, [sp, #12]
    619a:	2e00      	cmp	r6, #0
    619c:	dc01      	bgt.n	61a2 <_dtoa_r+0x236>
    619e:	f000 fd25 	bl	6bec <_dtoa_r+0xc80>
    61a2:	0032      	movs	r2, r6
    61a4:	210f      	movs	r1, #15
    61a6:	4b65      	ldr	r3, [pc, #404]	; (633c <_dtoa_r+0x3d0>)
    61a8:	400a      	ands	r2, r1
    61aa:	00d2      	lsls	r2, r2, #3
    61ac:	189b      	adds	r3, r3, r2
    61ae:	1136      	asrs	r6, r6, #4
    61b0:	681c      	ldr	r4, [r3, #0]
    61b2:	685d      	ldr	r5, [r3, #4]
    61b4:	06f3      	lsls	r3, r6, #27
    61b6:	d401      	bmi.n	61bc <_dtoa_r+0x250>
    61b8:	f000 fcca 	bl	6b50 <_dtoa_r+0xbe4>
    61bc:	4b60      	ldr	r3, [pc, #384]	; (6340 <_dtoa_r+0x3d4>)
    61be:	400e      	ands	r6, r1
    61c0:	6a1a      	ldr	r2, [r3, #32]
    61c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    61c4:	9810      	ldr	r0, [sp, #64]	; 0x40
    61c6:	9911      	ldr	r1, [sp, #68]	; 0x44
    61c8:	f7fc fd4a 	bl	2c60 <__aeabi_ddiv>
    61cc:	2303      	movs	r3, #3
    61ce:	4698      	mov	r8, r3
    61d0:	9008      	str	r0, [sp, #32]
    61d2:	9109      	str	r1, [sp, #36]	; 0x24
    61d4:	2e00      	cmp	r6, #0
    61d6:	d011      	beq.n	61fc <_dtoa_r+0x290>
    61d8:	4f59      	ldr	r7, [pc, #356]	; (6340 <_dtoa_r+0x3d4>)
    61da:	2301      	movs	r3, #1
    61dc:	4233      	tst	r3, r6
    61de:	d009      	beq.n	61f4 <_dtoa_r+0x288>
    61e0:	469c      	mov	ip, r3
    61e2:	683a      	ldr	r2, [r7, #0]
    61e4:	687b      	ldr	r3, [r7, #4]
    61e6:	0020      	movs	r0, r4
    61e8:	0029      	movs	r1, r5
    61ea:	44e0      	add	r8, ip
    61ec:	f7fd f86c 	bl	32c8 <__aeabi_dmul>
    61f0:	0004      	movs	r4, r0
    61f2:	000d      	movs	r5, r1
    61f4:	1076      	asrs	r6, r6, #1
    61f6:	3708      	adds	r7, #8
    61f8:	2e00      	cmp	r6, #0
    61fa:	d1ee      	bne.n	61da <_dtoa_r+0x26e>
    61fc:	0022      	movs	r2, r4
    61fe:	9808      	ldr	r0, [sp, #32]
    6200:	9909      	ldr	r1, [sp, #36]	; 0x24
    6202:	002b      	movs	r3, r5
    6204:	f7fc fd2c 	bl	2c60 <__aeabi_ddiv>
    6208:	0006      	movs	r6, r0
    620a:	000f      	movs	r7, r1
    620c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    620e:	2b00      	cmp	r3, #0
    6210:	d009      	beq.n	6226 <_dtoa_r+0x2ba>
    6212:	2200      	movs	r2, #0
    6214:	4b40      	ldr	r3, [pc, #256]	; (6318 <_dtoa_r+0x3ac>)
    6216:	0030      	movs	r0, r6
    6218:	0039      	movs	r1, r7
    621a:	f7fd feaf 	bl	3f7c <__aeabi_dcmplt>
    621e:	2800      	cmp	r0, #0
    6220:	d001      	beq.n	6226 <_dtoa_r+0x2ba>
    6222:	f000 fdc2 	bl	6daa <_dtoa_r+0xe3e>
    6226:	4640      	mov	r0, r8
    6228:	f7fd fe18 	bl	3e5c <__aeabi_i2d>
    622c:	0032      	movs	r2, r6
    622e:	003b      	movs	r3, r7
    6230:	f7fd f84a 	bl	32c8 <__aeabi_dmul>
    6234:	2200      	movs	r2, #0
    6236:	4b43      	ldr	r3, [pc, #268]	; (6344 <_dtoa_r+0x3d8>)
    6238:	f002 ffcc 	bl	91d4 <__aeabi_dadd>
    623c:	4a42      	ldr	r2, [pc, #264]	; (6348 <_dtoa_r+0x3dc>)
    623e:	000b      	movs	r3, r1
    6240:	4694      	mov	ip, r2
    6242:	4463      	add	r3, ip
    6244:	9008      	str	r0, [sp, #32]
    6246:	9109      	str	r1, [sp, #36]	; 0x24
    6248:	9309      	str	r3, [sp, #36]	; 0x24
    624a:	9b07      	ldr	r3, [sp, #28]
    624c:	2b00      	cmp	r3, #0
    624e:	d101      	bne.n	6254 <_dtoa_r+0x2e8>
    6250:	f000 fc50 	bl	6af4 <_dtoa_r+0xb88>
    6254:	9b03      	ldr	r3, [sp, #12]
    6256:	9313      	str	r3, [sp, #76]	; 0x4c
    6258:	9b07      	ldr	r3, [sp, #28]
    625a:	9312      	str	r3, [sp, #72]	; 0x48
    625c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    625e:	2b00      	cmp	r3, #0
    6260:	d101      	bne.n	6266 <_dtoa_r+0x2fa>
    6262:	f000 fd1d 	bl	6ca0 <_dtoa_r+0xd34>
    6266:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6268:	2000      	movs	r0, #0
    626a:	1e5a      	subs	r2, r3, #1
    626c:	4b33      	ldr	r3, [pc, #204]	; (633c <_dtoa_r+0x3d0>)
    626e:	00d2      	lsls	r2, r2, #3
    6270:	189b      	adds	r3, r3, r2
    6272:	681a      	ldr	r2, [r3, #0]
    6274:	685b      	ldr	r3, [r3, #4]
    6276:	4935      	ldr	r1, [pc, #212]	; (634c <_dtoa_r+0x3e0>)
    6278:	f7fc fcf2 	bl	2c60 <__aeabi_ddiv>
    627c:	9a08      	ldr	r2, [sp, #32]
    627e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6280:	f7fd faa2 	bl	37c8 <__aeabi_dsub>
    6284:	9008      	str	r0, [sp, #32]
    6286:	9109      	str	r1, [sp, #36]	; 0x24
    6288:	0039      	movs	r1, r7
    628a:	0030      	movs	r0, r6
    628c:	f7fd fdb2 	bl	3df4 <__aeabi_d2iz>
    6290:	0004      	movs	r4, r0
    6292:	f7fd fde3 	bl	3e5c <__aeabi_i2d>
    6296:	0002      	movs	r2, r0
    6298:	000b      	movs	r3, r1
    629a:	0030      	movs	r0, r6
    629c:	0039      	movs	r1, r7
    629e:	f7fd fa93 	bl	37c8 <__aeabi_dsub>
    62a2:	0005      	movs	r5, r0
    62a4:	000e      	movs	r6, r1
    62a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    62a8:	3430      	adds	r4, #48	; 0x30
    62aa:	1c51      	adds	r1, r2, #1
    62ac:	b2e7      	uxtb	r7, r4
    62ae:	9114      	str	r1, [sp, #80]	; 0x50
    62b0:	7017      	strb	r7, [r2, #0]
    62b2:	0033      	movs	r3, r6
    62b4:	9808      	ldr	r0, [sp, #32]
    62b6:	9909      	ldr	r1, [sp, #36]	; 0x24
    62b8:	002a      	movs	r2, r5
    62ba:	f7fd fe73 	bl	3fa4 <__aeabi_dcmpgt>
    62be:	2800      	cmp	r0, #0
    62c0:	d001      	beq.n	62c6 <_dtoa_r+0x35a>
    62c2:	f000 fdfe 	bl	6ec2 <_dtoa_r+0xf56>
    62c6:	002a      	movs	r2, r5
    62c8:	0033      	movs	r3, r6
    62ca:	2000      	movs	r0, #0
    62cc:	4912      	ldr	r1, [pc, #72]	; (6318 <_dtoa_r+0x3ac>)
    62ce:	f7fd fa7b 	bl	37c8 <__aeabi_dsub>
    62d2:	0002      	movs	r2, r0
    62d4:	000b      	movs	r3, r1
    62d6:	9808      	ldr	r0, [sp, #32]
    62d8:	9909      	ldr	r1, [sp, #36]	; 0x24
    62da:	f7fd fe63 	bl	3fa4 <__aeabi_dcmpgt>
    62de:	2800      	cmp	r0, #0
    62e0:	d001      	beq.n	62e6 <_dtoa_r+0x37a>
    62e2:	f000 fde7 	bl	6eb4 <_dtoa_r+0xf48>
    62e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    62e8:	2b01      	cmp	r3, #1
    62ea:	d101      	bne.n	62f0 <_dtoa_r+0x384>
    62ec:	f000 fc78 	bl	6be0 <_dtoa_r+0xc74>
    62f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    62f2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    62f4:	4694      	mov	ip, r2
    62f6:	4463      	add	r3, ip
    62f8:	4698      	mov	r8, r3
    62fa:	464b      	mov	r3, r9
    62fc:	9312      	str	r3, [sp, #72]	; 0x48
    62fe:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6300:	4699      	mov	r9, r3
    6302:	e038      	b.n	6376 <_dtoa_r+0x40a>
    6304:	7ff00000 	.word	0x7ff00000
    6308:	00009e25 	.word	0x00009e25
    630c:	0000270f 	.word	0x0000270f
    6310:	00009e48 	.word	0x00009e48
    6314:	00009e54 	.word	0x00009e54
    6318:	3ff00000 	.word	0x3ff00000
    631c:	fffffc01 	.word	0xfffffc01
    6320:	3ff80000 	.word	0x3ff80000
    6324:	636f4361 	.word	0x636f4361
    6328:	3fd287a7 	.word	0x3fd287a7
    632c:	8b60c8b3 	.word	0x8b60c8b3
    6330:	3fc68a28 	.word	0x3fc68a28
    6334:	509f79fb 	.word	0x509f79fb
    6338:	3fd34413 	.word	0x3fd34413
    633c:	00009e80 	.word	0x00009e80
    6340:	00009e58 	.word	0x00009e58
    6344:	401c0000 	.word	0x401c0000
    6348:	fcc00000 	.word	0xfcc00000
    634c:	3fe00000 	.word	0x3fe00000
    6350:	002a      	movs	r2, r5
    6352:	0033      	movs	r3, r6
    6354:	2000      	movs	r0, #0
    6356:	49b9      	ldr	r1, [pc, #740]	; (663c <_dtoa_r+0x6d0>)
    6358:	f7fd fa36 	bl	37c8 <__aeabi_dsub>
    635c:	9a08      	ldr	r2, [sp, #32]
    635e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6360:	f7fd fe0c 	bl	3f7c <__aeabi_dcmplt>
    6364:	2800      	cmp	r0, #0
    6366:	d001      	beq.n	636c <_dtoa_r+0x400>
    6368:	f000 fd74 	bl	6e54 <_dtoa_r+0xee8>
    636c:	46a1      	mov	r9, r4
    636e:	4544      	cmp	r4, r8
    6370:	d101      	bne.n	6376 <_dtoa_r+0x40a>
    6372:	f000 fc33 	bl	6bdc <_dtoa_r+0xc70>
    6376:	9808      	ldr	r0, [sp, #32]
    6378:	9909      	ldr	r1, [sp, #36]	; 0x24
    637a:	2200      	movs	r2, #0
    637c:	4bb0      	ldr	r3, [pc, #704]	; (6640 <_dtoa_r+0x6d4>)
    637e:	f7fc ffa3 	bl	32c8 <__aeabi_dmul>
    6382:	2200      	movs	r2, #0
    6384:	4bae      	ldr	r3, [pc, #696]	; (6640 <_dtoa_r+0x6d4>)
    6386:	9008      	str	r0, [sp, #32]
    6388:	9109      	str	r1, [sp, #36]	; 0x24
    638a:	0028      	movs	r0, r5
    638c:	0031      	movs	r1, r6
    638e:	f7fc ff9b 	bl	32c8 <__aeabi_dmul>
    6392:	000d      	movs	r5, r1
    6394:	0004      	movs	r4, r0
    6396:	f7fd fd2d 	bl	3df4 <__aeabi_d2iz>
    639a:	0007      	movs	r7, r0
    639c:	f7fd fd5e 	bl	3e5c <__aeabi_i2d>
    63a0:	0002      	movs	r2, r0
    63a2:	000b      	movs	r3, r1
    63a4:	0020      	movs	r0, r4
    63a6:	0029      	movs	r1, r5
    63a8:	f7fd fa0e 	bl	37c8 <__aeabi_dsub>
    63ac:	464b      	mov	r3, r9
    63ae:	3730      	adds	r7, #48	; 0x30
    63b0:	b2ff      	uxtb	r7, r7
    63b2:	1c5c      	adds	r4, r3, #1
    63b4:	701f      	strb	r7, [r3, #0]
    63b6:	9a08      	ldr	r2, [sp, #32]
    63b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    63ba:	0005      	movs	r5, r0
    63bc:	000e      	movs	r6, r1
    63be:	f7fd fddd 	bl	3f7c <__aeabi_dcmplt>
    63c2:	2800      	cmp	r0, #0
    63c4:	d0c4      	beq.n	6350 <_dtoa_r+0x3e4>
    63c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    63c8:	9303      	str	r3, [sp, #12]
    63ca:	4659      	mov	r1, fp
    63cc:	4650      	mov	r0, sl
    63ce:	f001 fdd7 	bl	7f80 <_Bfree>
    63d2:	2300      	movs	r3, #0
    63d4:	7023      	strb	r3, [r4, #0]
    63d6:	9b03      	ldr	r3, [sp, #12]
    63d8:	9a24      	ldr	r2, [sp, #144]	; 0x90
    63da:	3301      	adds	r3, #1
    63dc:	6013      	str	r3, [r2, #0]
    63de:	9b26      	ldr	r3, [sp, #152]	; 0x98
    63e0:	2b00      	cmp	r3, #0
    63e2:	d100      	bne.n	63e6 <_dtoa_r+0x47a>
    63e4:	e3a8      	b.n	6b38 <_dtoa_r+0xbcc>
    63e6:	601c      	str	r4, [r3, #0]
    63e8:	980a      	ldr	r0, [sp, #40]	; 0x28
    63ea:	e5f4      	b.n	5fd6 <_dtoa_r+0x6a>
    63ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
    63ee:	4699      	mov	r9, r3
    63f0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    63f2:	444b      	add	r3, r9
    63f4:	001c      	movs	r4, r3
    63f6:	4b93      	ldr	r3, [pc, #588]	; (6644 <_dtoa_r+0x6d8>)
    63f8:	18e3      	adds	r3, r4, r3
    63fa:	2b20      	cmp	r3, #32
    63fc:	dc00      	bgt.n	6400 <_dtoa_r+0x494>
    63fe:	e17e      	b.n	66fe <_dtoa_r+0x792>
    6400:	0031      	movs	r1, r6
    6402:	4a91      	ldr	r2, [pc, #580]	; (6648 <_dtoa_r+0x6dc>)
    6404:	4640      	mov	r0, r8
    6406:	18a2      	adds	r2, r4, r2
    6408:	40d1      	lsrs	r1, r2
    640a:	000a      	movs	r2, r1
    640c:	2140      	movs	r1, #64	; 0x40
    640e:	1acb      	subs	r3, r1, r3
    6410:	4098      	lsls	r0, r3
    6412:	4310      	orrs	r0, r2
    6414:	f7fd fd64 	bl	3ee0 <__aeabi_ui2d>
    6418:	1e63      	subs	r3, r4, #1
    641a:	4698      	mov	r8, r3
    641c:	2301      	movs	r3, #1
    641e:	4d8b      	ldr	r5, [pc, #556]	; (664c <_dtoa_r+0x6e0>)
    6420:	930f      	str	r3, [sp, #60]	; 0x3c
    6422:	1949      	adds	r1, r1, r5
    6424:	e618      	b.n	6058 <_dtoa_r+0xec>
    6426:	488a      	ldr	r0, [pc, #552]	; (6650 <_dtoa_r+0x6e4>)
    6428:	e5d5      	b.n	5fd6 <_dtoa_r+0x6a>
    642a:	2300      	movs	r3, #0
    642c:	4652      	mov	r2, sl
    642e:	2100      	movs	r1, #0
    6430:	6453      	str	r3, [r2, #68]	; 0x44
    6432:	4650      	mov	r0, sl
    6434:	f001 fd7c 	bl	7f30 <_Balloc>
    6438:	4653      	mov	r3, sl
    643a:	6418      	str	r0, [r3, #64]	; 0x40
    643c:	2301      	movs	r3, #1
    643e:	425b      	negs	r3, r3
    6440:	9307      	str	r3, [sp, #28]
    6442:	930e      	str	r3, [sp, #56]	; 0x38
    6444:	3302      	adds	r3, #2
    6446:	2200      	movs	r2, #0
    6448:	930b      	str	r3, [sp, #44]	; 0x2c
    644a:	2300      	movs	r3, #0
    644c:	900a      	str	r0, [sp, #40]	; 0x28
    644e:	9223      	str	r2, [sp, #140]	; 0x8c
    6450:	9322      	str	r3, [sp, #136]	; 0x88
    6452:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6454:	2b00      	cmp	r3, #0
    6456:	da00      	bge.n	645a <_dtoa_r+0x4ee>
    6458:	e0ab      	b.n	65b2 <_dtoa_r+0x646>
    645a:	9a03      	ldr	r2, [sp, #12]
    645c:	2a0e      	cmp	r2, #14
    645e:	dd00      	ble.n	6462 <_dtoa_r+0x4f6>
    6460:	e0a7      	b.n	65b2 <_dtoa_r+0x646>
    6462:	4b7c      	ldr	r3, [pc, #496]	; (6654 <_dtoa_r+0x6e8>)
    6464:	00d2      	lsls	r2, r2, #3
    6466:	189b      	adds	r3, r3, r2
    6468:	685c      	ldr	r4, [r3, #4]
    646a:	681b      	ldr	r3, [r3, #0]
    646c:	9304      	str	r3, [sp, #16]
    646e:	9405      	str	r4, [sp, #20]
    6470:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6472:	2b00      	cmp	r3, #0
    6474:	da00      	bge.n	6478 <_dtoa_r+0x50c>
    6476:	e2a7      	b.n	69c8 <_dtoa_r+0xa5c>
    6478:	9c04      	ldr	r4, [sp, #16]
    647a:	9d05      	ldr	r5, [sp, #20]
    647c:	0030      	movs	r0, r6
    647e:	0022      	movs	r2, r4
    6480:	002b      	movs	r3, r5
    6482:	0039      	movs	r1, r7
    6484:	f7fc fbec 	bl	2c60 <__aeabi_ddiv>
    6488:	f7fd fcb4 	bl	3df4 <__aeabi_d2iz>
    648c:	4680      	mov	r8, r0
    648e:	f7fd fce5 	bl	3e5c <__aeabi_i2d>
    6492:	0022      	movs	r2, r4
    6494:	002b      	movs	r3, r5
    6496:	f7fc ff17 	bl	32c8 <__aeabi_dmul>
    649a:	0002      	movs	r2, r0
    649c:	000b      	movs	r3, r1
    649e:	0030      	movs	r0, r6
    64a0:	0039      	movs	r1, r7
    64a2:	f7fd f991 	bl	37c8 <__aeabi_dsub>
    64a6:	4643      	mov	r3, r8
    64a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    64aa:	3330      	adds	r3, #48	; 0x30
    64ac:	7013      	strb	r3, [r2, #0]
    64ae:	9b07      	ldr	r3, [sp, #28]
    64b0:	0006      	movs	r6, r0
    64b2:	000f      	movs	r7, r1
    64b4:	1c54      	adds	r4, r2, #1
    64b6:	2b01      	cmp	r3, #1
    64b8:	d04e      	beq.n	6558 <_dtoa_r+0x5ec>
    64ba:	2200      	movs	r2, #0
    64bc:	4b60      	ldr	r3, [pc, #384]	; (6640 <_dtoa_r+0x6d4>)
    64be:	f7fc ff03 	bl	32c8 <__aeabi_dmul>
    64c2:	2200      	movs	r2, #0
    64c4:	2300      	movs	r3, #0
    64c6:	0006      	movs	r6, r0
    64c8:	000f      	movs	r7, r1
    64ca:	f7fd fd51 	bl	3f70 <__aeabi_dcmpeq>
    64ce:	2800      	cmp	r0, #0
    64d0:	d000      	beq.n	64d4 <_dtoa_r+0x568>
    64d2:	e77a      	b.n	63ca <_dtoa_r+0x45e>
    64d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    64d6:	9a07      	ldr	r2, [sp, #28]
    64d8:	1c9d      	adds	r5, r3, #2
    64da:	469c      	mov	ip, r3
    64dc:	465b      	mov	r3, fp
    64de:	9306      	str	r3, [sp, #24]
    64e0:	4653      	mov	r3, sl
    64e2:	4462      	add	r2, ip
    64e4:	46aa      	mov	sl, r5
    64e6:	9c04      	ldr	r4, [sp, #16]
    64e8:	9d05      	ldr	r5, [sp, #20]
    64ea:	4691      	mov	r9, r2
    64ec:	9307      	str	r3, [sp, #28]
    64ee:	e00f      	b.n	6510 <_dtoa_r+0x5a4>
    64f0:	2200      	movs	r2, #0
    64f2:	4b53      	ldr	r3, [pc, #332]	; (6640 <_dtoa_r+0x6d4>)
    64f4:	f7fc fee8 	bl	32c8 <__aeabi_dmul>
    64f8:	2301      	movs	r3, #1
    64fa:	469c      	mov	ip, r3
    64fc:	2200      	movs	r2, #0
    64fe:	2300      	movs	r3, #0
    6500:	0006      	movs	r6, r0
    6502:	000f      	movs	r7, r1
    6504:	44e2      	add	sl, ip
    6506:	f7fd fd33 	bl	3f70 <__aeabi_dcmpeq>
    650a:	2800      	cmp	r0, #0
    650c:	d000      	beq.n	6510 <_dtoa_r+0x5a4>
    650e:	e2d9      	b.n	6ac4 <_dtoa_r+0xb58>
    6510:	0022      	movs	r2, r4
    6512:	002b      	movs	r3, r5
    6514:	0030      	movs	r0, r6
    6516:	0039      	movs	r1, r7
    6518:	f7fc fba2 	bl	2c60 <__aeabi_ddiv>
    651c:	f7fd fc6a 	bl	3df4 <__aeabi_d2iz>
    6520:	4680      	mov	r8, r0
    6522:	f7fd fc9b 	bl	3e5c <__aeabi_i2d>
    6526:	0022      	movs	r2, r4
    6528:	002b      	movs	r3, r5
    652a:	f7fc fecd 	bl	32c8 <__aeabi_dmul>
    652e:	0002      	movs	r2, r0
    6530:	000b      	movs	r3, r1
    6532:	0030      	movs	r0, r6
    6534:	0039      	movs	r1, r7
    6536:	f7fd f947 	bl	37c8 <__aeabi_dsub>
    653a:	4653      	mov	r3, sl
    653c:	4642      	mov	r2, r8
    653e:	3b01      	subs	r3, #1
    6540:	3230      	adds	r2, #48	; 0x30
    6542:	0006      	movs	r6, r0
    6544:	000f      	movs	r7, r1
    6546:	46d3      	mov	fp, sl
    6548:	701a      	strb	r2, [r3, #0]
    654a:	45d1      	cmp	r9, sl
    654c:	d1d0      	bne.n	64f0 <_dtoa_r+0x584>
    654e:	9b06      	ldr	r3, [sp, #24]
    6550:	4654      	mov	r4, sl
    6552:	469b      	mov	fp, r3
    6554:	9b07      	ldr	r3, [sp, #28]
    6556:	469a      	mov	sl, r3
    6558:	0032      	movs	r2, r6
    655a:	003b      	movs	r3, r7
    655c:	0030      	movs	r0, r6
    655e:	0039      	movs	r1, r7
    6560:	f002 fe38 	bl	91d4 <__aeabi_dadd>
    6564:	0006      	movs	r6, r0
    6566:	000f      	movs	r7, r1
    6568:	0002      	movs	r2, r0
    656a:	000b      	movs	r3, r1
    656c:	9804      	ldr	r0, [sp, #16]
    656e:	9905      	ldr	r1, [sp, #20]
    6570:	f7fd fd04 	bl	3f7c <__aeabi_dcmplt>
    6574:	2800      	cmp	r0, #0
    6576:	d10c      	bne.n	6592 <_dtoa_r+0x626>
    6578:	9804      	ldr	r0, [sp, #16]
    657a:	9905      	ldr	r1, [sp, #20]
    657c:	0032      	movs	r2, r6
    657e:	003b      	movs	r3, r7
    6580:	f7fd fcf6 	bl	3f70 <__aeabi_dcmpeq>
    6584:	2800      	cmp	r0, #0
    6586:	d100      	bne.n	658a <_dtoa_r+0x61e>
    6588:	e71f      	b.n	63ca <_dtoa_r+0x45e>
    658a:	4643      	mov	r3, r8
    658c:	07db      	lsls	r3, r3, #31
    658e:	d400      	bmi.n	6592 <_dtoa_r+0x626>
    6590:	e71b      	b.n	63ca <_dtoa_r+0x45e>
    6592:	1e65      	subs	r5, r4, #1
    6594:	782f      	ldrb	r7, [r5, #0]
    6596:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6598:	e006      	b.n	65a8 <_dtoa_r+0x63c>
    659a:	429d      	cmp	r5, r3
    659c:	d100      	bne.n	65a0 <_dtoa_r+0x634>
    659e:	e351      	b.n	6c44 <_dtoa_r+0xcd8>
    65a0:	3c02      	subs	r4, #2
    65a2:	7827      	ldrb	r7, [r4, #0]
    65a4:	002c      	movs	r4, r5
    65a6:	3d01      	subs	r5, #1
    65a8:	2f39      	cmp	r7, #57	; 0x39
    65aa:	d0f6      	beq.n	659a <_dtoa_r+0x62e>
    65ac:	3701      	adds	r7, #1
    65ae:	702f      	strb	r7, [r5, #0]
    65b0:	e70b      	b.n	63ca <_dtoa_r+0x45e>
    65b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    65b4:	2a00      	cmp	r2, #0
    65b6:	d04f      	beq.n	6658 <_dtoa_r+0x6ec>
    65b8:	9a22      	ldr	r2, [sp, #136]	; 0x88
    65ba:	2a01      	cmp	r2, #1
    65bc:	dc00      	bgt.n	65c0 <_dtoa_r+0x654>
    65be:	e22c      	b.n	6a1a <_dtoa_r+0xaae>
    65c0:	9b07      	ldr	r3, [sp, #28]
    65c2:	1e5c      	subs	r4, r3, #1
    65c4:	464b      	mov	r3, r9
    65c6:	45a1      	cmp	r9, r4
    65c8:	da00      	bge.n	65cc <_dtoa_r+0x660>
    65ca:	e2b8      	b.n	6b3e <_dtoa_r+0xbd2>
    65cc:	1b1c      	subs	r4, r3, r4
    65ce:	9b07      	ldr	r3, [sp, #28]
    65d0:	2b00      	cmp	r3, #0
    65d2:	da00      	bge.n	65d6 <_dtoa_r+0x66a>
    65d4:	e3d4      	b.n	6d80 <_dtoa_r+0xe14>
    65d6:	9b06      	ldr	r3, [sp, #24]
    65d8:	9308      	str	r3, [sp, #32]
    65da:	9b07      	ldr	r3, [sp, #28]
    65dc:	9a06      	ldr	r2, [sp, #24]
    65de:	2101      	movs	r1, #1
    65e0:	4694      	mov	ip, r2
    65e2:	449c      	add	ip, r3
    65e4:	4662      	mov	r2, ip
    65e6:	9206      	str	r2, [sp, #24]
    65e8:	9a04      	ldr	r2, [sp, #16]
    65ea:	4650      	mov	r0, sl
    65ec:	4694      	mov	ip, r2
    65ee:	449c      	add	ip, r3
    65f0:	4663      	mov	r3, ip
    65f2:	9304      	str	r3, [sp, #16]
    65f4:	f001 fd5c 	bl	80b0 <__i2b>
    65f8:	4680      	mov	r8, r0
    65fa:	e032      	b.n	6662 <_dtoa_r+0x6f6>
    65fc:	9a06      	ldr	r2, [sp, #24]
    65fe:	9b03      	ldr	r3, [sp, #12]
    6600:	1ad2      	subs	r2, r2, r3
    6602:	425b      	negs	r3, r3
    6604:	4699      	mov	r9, r3
    6606:	2300      	movs	r3, #0
    6608:	9206      	str	r2, [sp, #24]
    660a:	930d      	str	r3, [sp, #52]	; 0x34
    660c:	e579      	b.n	6102 <_dtoa_r+0x196>
    660e:	9803      	ldr	r0, [sp, #12]
    6610:	f7fd fc24 	bl	3e5c <__aeabi_i2d>
    6614:	000b      	movs	r3, r1
    6616:	0002      	movs	r2, r0
    6618:	0029      	movs	r1, r5
    661a:	0020      	movs	r0, r4
    661c:	f7fd fca8 	bl	3f70 <__aeabi_dcmpeq>
    6620:	0002      	movs	r2, r0
    6622:	4250      	negs	r0, r2
    6624:	4150      	adcs	r0, r2
    6626:	9b03      	ldr	r3, [sp, #12]
    6628:	1a1b      	subs	r3, r3, r0
    662a:	9303      	str	r3, [sp, #12]
    662c:	e53d      	b.n	60aa <_dtoa_r+0x13e>
    662e:	2301      	movs	r3, #1
    6630:	1a9b      	subs	r3, r3, r2
    6632:	9306      	str	r3, [sp, #24]
    6634:	2300      	movs	r3, #0
    6636:	9304      	str	r3, [sp, #16]
    6638:	e557      	b.n	60ea <_dtoa_r+0x17e>
    663a:	46c0      	nop			; (mov r8, r8)
    663c:	3ff00000 	.word	0x3ff00000
    6640:	40240000 	.word	0x40240000
    6644:	00000432 	.word	0x00000432
    6648:	00000412 	.word	0x00000412
    664c:	fe100000 	.word	0xfe100000
    6650:	00009e24 	.word	0x00009e24
    6654:	00009e80 	.word	0x00009e80
    6658:	9b06      	ldr	r3, [sp, #24]
    665a:	464c      	mov	r4, r9
    665c:	9308      	str	r3, [sp, #32]
    665e:	2300      	movs	r3, #0
    6660:	4698      	mov	r8, r3
    6662:	9908      	ldr	r1, [sp, #32]
    6664:	1e0b      	subs	r3, r1, #0
    6666:	dd0e      	ble.n	6686 <_dtoa_r+0x71a>
    6668:	9a04      	ldr	r2, [sp, #16]
    666a:	2a00      	cmp	r2, #0
    666c:	dd0b      	ble.n	6686 <_dtoa_r+0x71a>
    666e:	4293      	cmp	r3, r2
    6670:	dd00      	ble.n	6674 <_dtoa_r+0x708>
    6672:	e187      	b.n	6984 <_dtoa_r+0xa18>
    6674:	9a06      	ldr	r2, [sp, #24]
    6676:	1ad2      	subs	r2, r2, r3
    6678:	9206      	str	r2, [sp, #24]
    667a:	9a08      	ldr	r2, [sp, #32]
    667c:	1ad2      	subs	r2, r2, r3
    667e:	9208      	str	r2, [sp, #32]
    6680:	9a04      	ldr	r2, [sp, #16]
    6682:	1ad3      	subs	r3, r2, r3
    6684:	9304      	str	r3, [sp, #16]
    6686:	464b      	mov	r3, r9
    6688:	2b00      	cmp	r3, #0
    668a:	d01a      	beq.n	66c2 <_dtoa_r+0x756>
    668c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    668e:	2b00      	cmp	r3, #0
    6690:	d100      	bne.n	6694 <_dtoa_r+0x728>
    6692:	e1bb      	b.n	6a0c <_dtoa_r+0xaa0>
    6694:	2c00      	cmp	r4, #0
    6696:	dd10      	ble.n	66ba <_dtoa_r+0x74e>
    6698:	4641      	mov	r1, r8
    669a:	0022      	movs	r2, r4
    669c:	4650      	mov	r0, sl
    669e:	f001 fdbb 	bl	8218 <__pow5mult>
    66a2:	465a      	mov	r2, fp
    66a4:	0001      	movs	r1, r0
    66a6:	4680      	mov	r8, r0
    66a8:	4650      	mov	r0, sl
    66aa:	f001 fd0b 	bl	80c4 <__multiply>
    66ae:	0005      	movs	r5, r0
    66b0:	4659      	mov	r1, fp
    66b2:	4650      	mov	r0, sl
    66b4:	f001 fc64 	bl	7f80 <_Bfree>
    66b8:	46ab      	mov	fp, r5
    66ba:	464b      	mov	r3, r9
    66bc:	1b1a      	subs	r2, r3, r4
    66be:	d000      	beq.n	66c2 <_dtoa_r+0x756>
    66c0:	e1a5      	b.n	6a0e <_dtoa_r+0xaa2>
    66c2:	2101      	movs	r1, #1
    66c4:	4650      	mov	r0, sl
    66c6:	f001 fcf3 	bl	80b0 <__i2b>
    66ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    66cc:	4681      	mov	r9, r0
    66ce:	2b00      	cmp	r3, #0
    66d0:	dd1d      	ble.n	670e <_dtoa_r+0x7a2>
    66d2:	001a      	movs	r2, r3
    66d4:	0001      	movs	r1, r0
    66d6:	4650      	mov	r0, sl
    66d8:	f001 fd9e 	bl	8218 <__pow5mult>
    66dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
    66de:	4681      	mov	r9, r0
    66e0:	2b01      	cmp	r3, #1
    66e2:	dc00      	bgt.n	66e6 <_dtoa_r+0x77a>
    66e4:	e150      	b.n	6988 <_dtoa_r+0xa1c>
    66e6:	2400      	movs	r4, #0
    66e8:	464b      	mov	r3, r9
    66ea:	691b      	ldr	r3, [r3, #16]
    66ec:	3303      	adds	r3, #3
    66ee:	009b      	lsls	r3, r3, #2
    66f0:	444b      	add	r3, r9
    66f2:	6858      	ldr	r0, [r3, #4]
    66f4:	f001 fc94 	bl	8020 <__hi0bits>
    66f8:	2320      	movs	r3, #32
    66fa:	1a1b      	subs	r3, r3, r0
    66fc:	e010      	b.n	6720 <_dtoa_r+0x7b4>
    66fe:	2220      	movs	r2, #32
    6700:	0030      	movs	r0, r6
    6702:	1ad3      	subs	r3, r2, r3
    6704:	4098      	lsls	r0, r3
    6706:	e685      	b.n	6414 <_dtoa_r+0x4a8>
    6708:	2300      	movs	r3, #0
    670a:	930c      	str	r3, [sp, #48]	; 0x30
    670c:	e4e3      	b.n	60d6 <_dtoa_r+0x16a>
    670e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6710:	2400      	movs	r4, #0
    6712:	2b01      	cmp	r3, #1
    6714:	dc00      	bgt.n	6718 <_dtoa_r+0x7ac>
    6716:	e18b      	b.n	6a30 <_dtoa_r+0xac4>
    6718:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    671a:	2301      	movs	r3, #1
    671c:	2a00      	cmp	r2, #0
    671e:	d1e3      	bne.n	66e8 <_dtoa_r+0x77c>
    6720:	9904      	ldr	r1, [sp, #16]
    6722:	201f      	movs	r0, #31
    6724:	468c      	mov	ip, r1
    6726:	4463      	add	r3, ip
    6728:	4018      	ands	r0, r3
    672a:	d100      	bne.n	672e <_dtoa_r+0x7c2>
    672c:	e0ae      	b.n	688c <_dtoa_r+0x920>
    672e:	2320      	movs	r3, #32
    6730:	1a1b      	subs	r3, r3, r0
    6732:	2b04      	cmp	r3, #4
    6734:	dc00      	bgt.n	6738 <_dtoa_r+0x7cc>
    6736:	e3cc      	b.n	6ed2 <_dtoa_r+0xf66>
    6738:	231c      	movs	r3, #28
    673a:	1a18      	subs	r0, r3, r0
    673c:	9b06      	ldr	r3, [sp, #24]
    673e:	469c      	mov	ip, r3
    6740:	4484      	add	ip, r0
    6742:	4663      	mov	r3, ip
    6744:	9306      	str	r3, [sp, #24]
    6746:	9b08      	ldr	r3, [sp, #32]
    6748:	469c      	mov	ip, r3
    674a:	4484      	add	ip, r0
    674c:	4663      	mov	r3, ip
    674e:	468c      	mov	ip, r1
    6750:	4484      	add	ip, r0
    6752:	9308      	str	r3, [sp, #32]
    6754:	4663      	mov	r3, ip
    6756:	9304      	str	r3, [sp, #16]
    6758:	9b06      	ldr	r3, [sp, #24]
    675a:	2b00      	cmp	r3, #0
    675c:	dd05      	ble.n	676a <_dtoa_r+0x7fe>
    675e:	4659      	mov	r1, fp
    6760:	001a      	movs	r2, r3
    6762:	4650      	mov	r0, sl
    6764:	f001 fdb8 	bl	82d8 <__lshift>
    6768:	4683      	mov	fp, r0
    676a:	9b04      	ldr	r3, [sp, #16]
    676c:	2b00      	cmp	r3, #0
    676e:	dd05      	ble.n	677c <_dtoa_r+0x810>
    6770:	4649      	mov	r1, r9
    6772:	001a      	movs	r2, r3
    6774:	4650      	mov	r0, sl
    6776:	f001 fdaf 	bl	82d8 <__lshift>
    677a:	4681      	mov	r9, r0
    677c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    677e:	2b00      	cmp	r3, #0
    6780:	d000      	beq.n	6784 <_dtoa_r+0x818>
    6782:	e094      	b.n	68ae <_dtoa_r+0x942>
    6784:	9b07      	ldr	r3, [sp, #28]
    6786:	2b00      	cmp	r3, #0
    6788:	dc00      	bgt.n	678c <_dtoa_r+0x820>
    678a:	e175      	b.n	6a78 <_dtoa_r+0xb0c>
    678c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    678e:	2b00      	cmp	r3, #0
    6790:	d100      	bne.n	6794 <_dtoa_r+0x828>
    6792:	e0a6      	b.n	68e2 <_dtoa_r+0x976>
    6794:	9b08      	ldr	r3, [sp, #32]
    6796:	2b00      	cmp	r3, #0
    6798:	dd05      	ble.n	67a6 <_dtoa_r+0x83a>
    679a:	4641      	mov	r1, r8
    679c:	001a      	movs	r2, r3
    679e:	4650      	mov	r0, sl
    67a0:	f001 fd9a 	bl	82d8 <__lshift>
    67a4:	4680      	mov	r8, r0
    67a6:	4643      	mov	r3, r8
    67a8:	930c      	str	r3, [sp, #48]	; 0x30
    67aa:	2c00      	cmp	r4, #0
    67ac:	d000      	beq.n	67b0 <_dtoa_r+0x844>
    67ae:	e250      	b.n	6c52 <_dtoa_r+0xce6>
    67b0:	9c07      	ldr	r4, [sp, #28]
    67b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    67b4:	3c01      	subs	r4, #1
    67b6:	0023      	movs	r3, r4
    67b8:	4694      	mov	ip, r2
    67ba:	4463      	add	r3, ip
    67bc:	9308      	str	r3, [sp, #32]
    67be:	2301      	movs	r3, #1
    67c0:	4033      	ands	r3, r6
    67c2:	9307      	str	r3, [sp, #28]
    67c4:	464b      	mov	r3, r9
    67c6:	9306      	str	r3, [sp, #24]
    67c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    67ca:	4657      	mov	r7, sl
    67cc:	4645      	mov	r5, r8
    67ce:	465e      	mov	r6, fp
    67d0:	4692      	mov	sl, r2
    67d2:	4698      	mov	r8, r3
    67d4:	9b06      	ldr	r3, [sp, #24]
    67d6:	0030      	movs	r0, r6
    67d8:	0019      	movs	r1, r3
    67da:	4699      	mov	r9, r3
    67dc:	f7ff fb1c 	bl	5e18 <quorem>
    67e0:	0003      	movs	r3, r0
    67e2:	900b      	str	r0, [sp, #44]	; 0x2c
    67e4:	3330      	adds	r3, #48	; 0x30
    67e6:	0029      	movs	r1, r5
    67e8:	0030      	movs	r0, r6
    67ea:	9304      	str	r3, [sp, #16]
    67ec:	f001 fdd4 	bl	8398 <__mcmp>
    67f0:	4649      	mov	r1, r9
    67f2:	0004      	movs	r4, r0
    67f4:	4642      	mov	r2, r8
    67f6:	0038      	movs	r0, r7
    67f8:	f001 fde8 	bl	83cc <__mdiff>
    67fc:	68c3      	ldr	r3, [r0, #12]
    67fe:	4681      	mov	r9, r0
    6800:	2b00      	cmp	r3, #0
    6802:	d000      	beq.n	6806 <_dtoa_r+0x89a>
    6804:	e11e      	b.n	6a44 <_dtoa_r+0xad8>
    6806:	0001      	movs	r1, r0
    6808:	0030      	movs	r0, r6
    680a:	f001 fdc5 	bl	8398 <__mcmp>
    680e:	4683      	mov	fp, r0
    6810:	4649      	mov	r1, r9
    6812:	0038      	movs	r0, r7
    6814:	f001 fbb4 	bl	7f80 <_Bfree>
    6818:	465b      	mov	r3, fp
    681a:	9a22      	ldr	r2, [sp, #136]	; 0x88
    681c:	4313      	orrs	r3, r2
    681e:	d103      	bne.n	6828 <_dtoa_r+0x8bc>
    6820:	9b07      	ldr	r3, [sp, #28]
    6822:	2b00      	cmp	r3, #0
    6824:	d100      	bne.n	6828 <_dtoa_r+0x8bc>
    6826:	e306      	b.n	6e36 <_dtoa_r+0xeca>
    6828:	2c00      	cmp	r4, #0
    682a:	da00      	bge.n	682e <_dtoa_r+0x8c2>
    682c:	e1a8      	b.n	6b80 <_dtoa_r+0xc14>
    682e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6830:	431c      	orrs	r4, r3
    6832:	d103      	bne.n	683c <_dtoa_r+0x8d0>
    6834:	9b07      	ldr	r3, [sp, #28]
    6836:	2b00      	cmp	r3, #0
    6838:	d100      	bne.n	683c <_dtoa_r+0x8d0>
    683a:	e1a1      	b.n	6b80 <_dtoa_r+0xc14>
    683c:	465b      	mov	r3, fp
    683e:	2b00      	cmp	r3, #0
    6840:	dd00      	ble.n	6844 <_dtoa_r+0x8d8>
    6842:	e282      	b.n	6d4a <_dtoa_r+0xdde>
    6844:	4669      	mov	r1, sp
    6846:	4652      	mov	r2, sl
    6848:	4653      	mov	r3, sl
    684a:	7c09      	ldrb	r1, [r1, #16]
    684c:	1c5c      	adds	r4, r3, #1
    684e:	7011      	strb	r1, [r2, #0]
    6850:	9a08      	ldr	r2, [sp, #32]
    6852:	4552      	cmp	r2, sl
    6854:	d100      	bne.n	6858 <_dtoa_r+0x8ec>
    6856:	e28a      	b.n	6d6e <_dtoa_r+0xe02>
    6858:	0031      	movs	r1, r6
    685a:	2300      	movs	r3, #0
    685c:	220a      	movs	r2, #10
    685e:	0038      	movs	r0, r7
    6860:	f001 fb98 	bl	7f94 <__multadd>
    6864:	2300      	movs	r3, #0
    6866:	0006      	movs	r6, r0
    6868:	220a      	movs	r2, #10
    686a:	0029      	movs	r1, r5
    686c:	0038      	movs	r0, r7
    686e:	4545      	cmp	r5, r8
    6870:	d100      	bne.n	6874 <_dtoa_r+0x908>
    6872:	e0e1      	b.n	6a38 <_dtoa_r+0xacc>
    6874:	f001 fb8e 	bl	7f94 <__multadd>
    6878:	4641      	mov	r1, r8
    687a:	0005      	movs	r5, r0
    687c:	2300      	movs	r3, #0
    687e:	220a      	movs	r2, #10
    6880:	0038      	movs	r0, r7
    6882:	f001 fb87 	bl	7f94 <__multadd>
    6886:	46a2      	mov	sl, r4
    6888:	4680      	mov	r8, r0
    688a:	e7a3      	b.n	67d4 <_dtoa_r+0x868>
    688c:	201c      	movs	r0, #28
    688e:	9b06      	ldr	r3, [sp, #24]
    6890:	469c      	mov	ip, r3
    6892:	4484      	add	ip, r0
    6894:	4663      	mov	r3, ip
    6896:	9306      	str	r3, [sp, #24]
    6898:	9b08      	ldr	r3, [sp, #32]
    689a:	469c      	mov	ip, r3
    689c:	4484      	add	ip, r0
    689e:	4663      	mov	r3, ip
    68a0:	9308      	str	r3, [sp, #32]
    68a2:	9b04      	ldr	r3, [sp, #16]
    68a4:	469c      	mov	ip, r3
    68a6:	4484      	add	ip, r0
    68a8:	4663      	mov	r3, ip
    68aa:	9304      	str	r3, [sp, #16]
    68ac:	e754      	b.n	6758 <_dtoa_r+0x7ec>
    68ae:	4649      	mov	r1, r9
    68b0:	4658      	mov	r0, fp
    68b2:	f001 fd71 	bl	8398 <__mcmp>
    68b6:	2800      	cmp	r0, #0
    68b8:	db00      	blt.n	68bc <_dtoa_r+0x950>
    68ba:	e763      	b.n	6784 <_dtoa_r+0x818>
    68bc:	9b03      	ldr	r3, [sp, #12]
    68be:	4659      	mov	r1, fp
    68c0:	3b01      	subs	r3, #1
    68c2:	9303      	str	r3, [sp, #12]
    68c4:	220a      	movs	r2, #10
    68c6:	2300      	movs	r3, #0
    68c8:	4650      	mov	r0, sl
    68ca:	f001 fb63 	bl	7f94 <__multadd>
    68ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    68d0:	4683      	mov	fp, r0
    68d2:	2b00      	cmp	r3, #0
    68d4:	d000      	beq.n	68d8 <_dtoa_r+0x96c>
    68d6:	e2ca      	b.n	6e6e <_dtoa_r+0xf02>
    68d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    68da:	2b00      	cmp	r3, #0
    68dc:	dc00      	bgt.n	68e0 <_dtoa_r+0x974>
    68de:	e2d8      	b.n	6e92 <_dtoa_r+0xf26>
    68e0:	9307      	str	r3, [sp, #28]
    68e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    68e4:	465d      	mov	r5, fp
    68e6:	2400      	movs	r4, #0
    68e8:	9f07      	ldr	r7, [sp, #28]
    68ea:	469b      	mov	fp, r3
    68ec:	e006      	b.n	68fc <_dtoa_r+0x990>
    68ee:	0029      	movs	r1, r5
    68f0:	2300      	movs	r3, #0
    68f2:	220a      	movs	r2, #10
    68f4:	4650      	mov	r0, sl
    68f6:	f001 fb4d 	bl	7f94 <__multadd>
    68fa:	0005      	movs	r5, r0
    68fc:	4649      	mov	r1, r9
    68fe:	0028      	movs	r0, r5
    6900:	f7ff fa8a 	bl	5e18 <quorem>
    6904:	465b      	mov	r3, fp
    6906:	3030      	adds	r0, #48	; 0x30
    6908:	5518      	strb	r0, [r3, r4]
    690a:	3401      	adds	r4, #1
    690c:	42bc      	cmp	r4, r7
    690e:	dbee      	blt.n	68ee <_dtoa_r+0x982>
    6910:	46ab      	mov	fp, r5
    6912:	0006      	movs	r6, r0
    6914:	9c07      	ldr	r4, [sp, #28]
    6916:	2c00      	cmp	r4, #0
    6918:	dc00      	bgt.n	691c <_dtoa_r+0x9b0>
    691a:	e237      	b.n	6d8c <_dtoa_r+0xe20>
    691c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    691e:	2700      	movs	r7, #0
    6920:	469c      	mov	ip, r3
    6922:	4464      	add	r4, ip
    6924:	4659      	mov	r1, fp
    6926:	2201      	movs	r2, #1
    6928:	4650      	mov	r0, sl
    692a:	f001 fcd5 	bl	82d8 <__lshift>
    692e:	4649      	mov	r1, r9
    6930:	4683      	mov	fp, r0
    6932:	f001 fd31 	bl	8398 <__mcmp>
    6936:	2800      	cmp	r0, #0
    6938:	dc00      	bgt.n	693c <_dtoa_r+0x9d0>
    693a:	e144      	b.n	6bc6 <_dtoa_r+0xc5a>
    693c:	1e65      	subs	r5, r4, #1
    693e:	782b      	ldrb	r3, [r5, #0]
    6940:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6942:	e006      	b.n	6952 <_dtoa_r+0x9e6>
    6944:	4295      	cmp	r5, r2
    6946:	d100      	bne.n	694a <_dtoa_r+0x9de>
    6948:	e0b1      	b.n	6aae <_dtoa_r+0xb42>
    694a:	3c02      	subs	r4, #2
    694c:	7823      	ldrb	r3, [r4, #0]
    694e:	002c      	movs	r4, r5
    6950:	3d01      	subs	r5, #1
    6952:	2b39      	cmp	r3, #57	; 0x39
    6954:	d0f6      	beq.n	6944 <_dtoa_r+0x9d8>
    6956:	3301      	adds	r3, #1
    6958:	702b      	strb	r3, [r5, #0]
    695a:	4649      	mov	r1, r9
    695c:	4650      	mov	r0, sl
    695e:	f001 fb0f 	bl	7f80 <_Bfree>
    6962:	4643      	mov	r3, r8
    6964:	2b00      	cmp	r3, #0
    6966:	d100      	bne.n	696a <_dtoa_r+0x9fe>
    6968:	e52f      	b.n	63ca <_dtoa_r+0x45e>
    696a:	2f00      	cmp	r7, #0
    696c:	d005      	beq.n	697a <_dtoa_r+0xa0e>
    696e:	4547      	cmp	r7, r8
    6970:	d003      	beq.n	697a <_dtoa_r+0xa0e>
    6972:	0039      	movs	r1, r7
    6974:	4650      	mov	r0, sl
    6976:	f001 fb03 	bl	7f80 <_Bfree>
    697a:	4641      	mov	r1, r8
    697c:	4650      	mov	r0, sl
    697e:	f001 faff 	bl	7f80 <_Bfree>
    6982:	e522      	b.n	63ca <_dtoa_r+0x45e>
    6984:	0013      	movs	r3, r2
    6986:	e675      	b.n	6674 <_dtoa_r+0x708>
    6988:	2e00      	cmp	r6, #0
    698a:	d000      	beq.n	698e <_dtoa_r+0xa22>
    698c:	e6ab      	b.n	66e6 <_dtoa_r+0x77a>
    698e:	033b      	lsls	r3, r7, #12
    6990:	2400      	movs	r4, #0
    6992:	2b00      	cmp	r3, #0
    6994:	d000      	beq.n	6998 <_dtoa_r+0xa2c>
    6996:	e6bf      	b.n	6718 <_dtoa_r+0x7ac>
    6998:	4bba      	ldr	r3, [pc, #744]	; (6c84 <_dtoa_r+0xd18>)
    699a:	423b      	tst	r3, r7
    699c:	d100      	bne.n	69a0 <_dtoa_r+0xa34>
    699e:	e6bb      	b.n	6718 <_dtoa_r+0x7ac>
    69a0:	9b06      	ldr	r3, [sp, #24]
    69a2:	3401      	adds	r4, #1
    69a4:	3301      	adds	r3, #1
    69a6:	9306      	str	r3, [sp, #24]
    69a8:	9b04      	ldr	r3, [sp, #16]
    69aa:	3301      	adds	r3, #1
    69ac:	9304      	str	r3, [sp, #16]
    69ae:	e6b3      	b.n	6718 <_dtoa_r+0x7ac>
    69b0:	2301      	movs	r3, #1
    69b2:	930b      	str	r3, [sp, #44]	; 0x2c
    69b4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    69b6:	2b00      	cmp	r3, #0
    69b8:	dc00      	bgt.n	69bc <_dtoa_r+0xa50>
    69ba:	e0d1      	b.n	6b60 <_dtoa_r+0xbf4>
    69bc:	001d      	movs	r5, r3
    69be:	4698      	mov	r8, r3
    69c0:	930e      	str	r3, [sp, #56]	; 0x38
    69c2:	9307      	str	r3, [sp, #28]
    69c4:	f7ff fbc8 	bl	6158 <_dtoa_r+0x1ec>
    69c8:	9b07      	ldr	r3, [sp, #28]
    69ca:	2b00      	cmp	r3, #0
    69cc:	dd00      	ble.n	69d0 <_dtoa_r+0xa64>
    69ce:	e553      	b.n	6478 <_dtoa_r+0x50c>
    69d0:	d000      	beq.n	69d4 <_dtoa_r+0xa68>
    69d2:	e0ad      	b.n	6b30 <_dtoa_r+0xbc4>
    69d4:	9804      	ldr	r0, [sp, #16]
    69d6:	9905      	ldr	r1, [sp, #20]
    69d8:	2200      	movs	r2, #0
    69da:	4bab      	ldr	r3, [pc, #684]	; (6c88 <_dtoa_r+0xd1c>)
    69dc:	f7fc fc74 	bl	32c8 <__aeabi_dmul>
    69e0:	003b      	movs	r3, r7
    69e2:	0032      	movs	r2, r6
    69e4:	f7fd fae8 	bl	3fb8 <__aeabi_dcmpge>
    69e8:	2300      	movs	r3, #0
    69ea:	4699      	mov	r9, r3
    69ec:	4698      	mov	r8, r3
    69ee:	2800      	cmp	r0, #0
    69f0:	d055      	beq.n	6a9e <_dtoa_r+0xb32>
    69f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    69f4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    69f6:	43db      	mvns	r3, r3
    69f8:	9303      	str	r3, [sp, #12]
    69fa:	4649      	mov	r1, r9
    69fc:	4650      	mov	r0, sl
    69fe:	f001 fabf 	bl	7f80 <_Bfree>
    6a02:	4643      	mov	r3, r8
    6a04:	2b00      	cmp	r3, #0
    6a06:	d100      	bne.n	6a0a <_dtoa_r+0xa9e>
    6a08:	e4df      	b.n	63ca <_dtoa_r+0x45e>
    6a0a:	e7b6      	b.n	697a <_dtoa_r+0xa0e>
    6a0c:	464a      	mov	r2, r9
    6a0e:	4659      	mov	r1, fp
    6a10:	4650      	mov	r0, sl
    6a12:	f001 fc01 	bl	8218 <__pow5mult>
    6a16:	4683      	mov	fp, r0
    6a18:	e653      	b.n	66c2 <_dtoa_r+0x756>
    6a1a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6a1c:	2a00      	cmp	r2, #0
    6a1e:	d100      	bne.n	6a22 <_dtoa_r+0xab6>
    6a20:	e1b6      	b.n	6d90 <_dtoa_r+0xe24>
    6a22:	4a9a      	ldr	r2, [pc, #616]	; (6c8c <_dtoa_r+0xd20>)
    6a24:	464c      	mov	r4, r9
    6a26:	4694      	mov	ip, r2
    6a28:	9a06      	ldr	r2, [sp, #24]
    6a2a:	4463      	add	r3, ip
    6a2c:	9208      	str	r2, [sp, #32]
    6a2e:	e5d5      	b.n	65dc <_dtoa_r+0x670>
    6a30:	2e00      	cmp	r6, #0
    6a32:	d000      	beq.n	6a36 <_dtoa_r+0xaca>
    6a34:	e670      	b.n	6718 <_dtoa_r+0x7ac>
    6a36:	e7aa      	b.n	698e <_dtoa_r+0xa22>
    6a38:	f001 faac 	bl	7f94 <__multadd>
    6a3c:	46a2      	mov	sl, r4
    6a3e:	0005      	movs	r5, r0
    6a40:	4680      	mov	r8, r0
    6a42:	e6c7      	b.n	67d4 <_dtoa_r+0x868>
    6a44:	2301      	movs	r3, #1
    6a46:	469b      	mov	fp, r3
    6a48:	e6e2      	b.n	6810 <_dtoa_r+0x8a4>
    6a4a:	2300      	movs	r3, #0
    6a4c:	930b      	str	r3, [sp, #44]	; 0x2c
    6a4e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6a50:	2b02      	cmp	r3, #2
    6a52:	d0af      	beq.n	69b4 <_dtoa_r+0xa48>
    6a54:	2400      	movs	r4, #0
    6a56:	4653      	mov	r3, sl
    6a58:	0021      	movs	r1, r4
    6a5a:	645c      	str	r4, [r3, #68]	; 0x44
    6a5c:	4650      	mov	r0, sl
    6a5e:	f001 fa67 	bl	7f30 <_Balloc>
    6a62:	4653      	mov	r3, sl
    6a64:	6418      	str	r0, [r3, #64]	; 0x40
    6a66:	2301      	movs	r3, #1
    6a68:	425b      	negs	r3, r3
    6a6a:	9307      	str	r3, [sp, #28]
    6a6c:	930e      	str	r3, [sp, #56]	; 0x38
    6a6e:	3302      	adds	r3, #2
    6a70:	900a      	str	r0, [sp, #40]	; 0x28
    6a72:	9423      	str	r4, [sp, #140]	; 0x8c
    6a74:	930b      	str	r3, [sp, #44]	; 0x2c
    6a76:	e4ec      	b.n	6452 <_dtoa_r+0x4e6>
    6a78:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6a7a:	2b02      	cmp	r3, #2
    6a7c:	dc00      	bgt.n	6a80 <_dtoa_r+0xb14>
    6a7e:	e685      	b.n	678c <_dtoa_r+0x820>
    6a80:	9b07      	ldr	r3, [sp, #28]
    6a82:	2b00      	cmp	r3, #0
    6a84:	d1b5      	bne.n	69f2 <_dtoa_r+0xa86>
    6a86:	4649      	mov	r1, r9
    6a88:	2205      	movs	r2, #5
    6a8a:	4650      	mov	r0, sl
    6a8c:	f001 fa82 	bl	7f94 <__multadd>
    6a90:	4681      	mov	r9, r0
    6a92:	0001      	movs	r1, r0
    6a94:	4658      	mov	r0, fp
    6a96:	f001 fc7f 	bl	8398 <__mcmp>
    6a9a:	2800      	cmp	r0, #0
    6a9c:	dda9      	ble.n	69f2 <_dtoa_r+0xa86>
    6a9e:	2331      	movs	r3, #49	; 0x31
    6aa0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6aa2:	7013      	strb	r3, [r2, #0]
    6aa4:	9b03      	ldr	r3, [sp, #12]
    6aa6:	1c54      	adds	r4, r2, #1
    6aa8:	3301      	adds	r3, #1
    6aaa:	9303      	str	r3, [sp, #12]
    6aac:	e7a5      	b.n	69fa <_dtoa_r+0xa8e>
    6aae:	9b03      	ldr	r3, [sp, #12]
    6ab0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6ab2:	3301      	adds	r3, #1
    6ab4:	9303      	str	r3, [sp, #12]
    6ab6:	2331      	movs	r3, #49	; 0x31
    6ab8:	7013      	strb	r3, [r2, #0]
    6aba:	e74e      	b.n	695a <_dtoa_r+0x9ee>
    6abc:	2300      	movs	r3, #0
    6abe:	930b      	str	r3, [sp, #44]	; 0x2c
    6ac0:	f7ff fb3d 	bl	613e <_dtoa_r+0x1d2>
    6ac4:	9b06      	ldr	r3, [sp, #24]
    6ac6:	465c      	mov	r4, fp
    6ac8:	469b      	mov	fp, r3
    6aca:	9b07      	ldr	r3, [sp, #28]
    6acc:	469a      	mov	sl, r3
    6ace:	e47c      	b.n	63ca <_dtoa_r+0x45e>
    6ad0:	4640      	mov	r0, r8
    6ad2:	f7fd f9c3 	bl	3e5c <__aeabi_i2d>
    6ad6:	0032      	movs	r2, r6
    6ad8:	003b      	movs	r3, r7
    6ada:	f7fc fbf5 	bl	32c8 <__aeabi_dmul>
    6ade:	2200      	movs	r2, #0
    6ae0:	4b6b      	ldr	r3, [pc, #428]	; (6c90 <_dtoa_r+0xd24>)
    6ae2:	f002 fb77 	bl	91d4 <__aeabi_dadd>
    6ae6:	4a6b      	ldr	r2, [pc, #428]	; (6c94 <_dtoa_r+0xd28>)
    6ae8:	000b      	movs	r3, r1
    6aea:	4694      	mov	ip, r2
    6aec:	4463      	add	r3, ip
    6aee:	9008      	str	r0, [sp, #32]
    6af0:	9109      	str	r1, [sp, #36]	; 0x24
    6af2:	9309      	str	r3, [sp, #36]	; 0x24
    6af4:	2200      	movs	r2, #0
    6af6:	4b64      	ldr	r3, [pc, #400]	; (6c88 <_dtoa_r+0xd1c>)
    6af8:	0030      	movs	r0, r6
    6afa:	0039      	movs	r1, r7
    6afc:	f7fc fe64 	bl	37c8 <__aeabi_dsub>
    6b00:	9e08      	ldr	r6, [sp, #32]
    6b02:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6b04:	0032      	movs	r2, r6
    6b06:	003b      	movs	r3, r7
    6b08:	0004      	movs	r4, r0
    6b0a:	000d      	movs	r5, r1
    6b0c:	f7fd fa4a 	bl	3fa4 <__aeabi_dcmpgt>
    6b10:	2800      	cmp	r0, #0
    6b12:	d000      	beq.n	6b16 <_dtoa_r+0xbaa>
    6b14:	e0b2      	b.n	6c7c <_dtoa_r+0xd10>
    6b16:	2080      	movs	r0, #128	; 0x80
    6b18:	0600      	lsls	r0, r0, #24
    6b1a:	4684      	mov	ip, r0
    6b1c:	0039      	movs	r1, r7
    6b1e:	4461      	add	r1, ip
    6b20:	000b      	movs	r3, r1
    6b22:	0032      	movs	r2, r6
    6b24:	0020      	movs	r0, r4
    6b26:	0029      	movs	r1, r5
    6b28:	f7fd fa28 	bl	3f7c <__aeabi_dcmplt>
    6b2c:	2800      	cmp	r0, #0
    6b2e:	d057      	beq.n	6be0 <_dtoa_r+0xc74>
    6b30:	2300      	movs	r3, #0
    6b32:	4699      	mov	r9, r3
    6b34:	4698      	mov	r8, r3
    6b36:	e75c      	b.n	69f2 <_dtoa_r+0xa86>
    6b38:	980a      	ldr	r0, [sp, #40]	; 0x28
    6b3a:	f7ff fa4c 	bl	5fd6 <_dtoa_r+0x6a>
    6b3e:	1ae2      	subs	r2, r4, r3
    6b40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6b42:	46a1      	mov	r9, r4
    6b44:	469c      	mov	ip, r3
    6b46:	4494      	add	ip, r2
    6b48:	4663      	mov	r3, ip
    6b4a:	2400      	movs	r4, #0
    6b4c:	930d      	str	r3, [sp, #52]	; 0x34
    6b4e:	e53e      	b.n	65ce <_dtoa_r+0x662>
    6b50:	9a10      	ldr	r2, [sp, #64]	; 0x40
    6b52:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6b54:	9208      	str	r2, [sp, #32]
    6b56:	9309      	str	r3, [sp, #36]	; 0x24
    6b58:	2302      	movs	r3, #2
    6b5a:	4698      	mov	r8, r3
    6b5c:	f7ff fb3a 	bl	61d4 <_dtoa_r+0x268>
    6b60:	2300      	movs	r3, #0
    6b62:	4652      	mov	r2, sl
    6b64:	2100      	movs	r1, #0
    6b66:	6453      	str	r3, [r2, #68]	; 0x44
    6b68:	4650      	mov	r0, sl
    6b6a:	f001 f9e1 	bl	7f30 <_Balloc>
    6b6e:	4653      	mov	r3, sl
    6b70:	6418      	str	r0, [r3, #64]	; 0x40
    6b72:	2301      	movs	r3, #1
    6b74:	900a      	str	r0, [sp, #40]	; 0x28
    6b76:	9307      	str	r3, [sp, #28]
    6b78:	9323      	str	r3, [sp, #140]	; 0x8c
    6b7a:	930e      	str	r3, [sp, #56]	; 0x38
    6b7c:	f7ff fb07 	bl	618e <_dtoa_r+0x222>
    6b80:	4643      	mov	r3, r8
    6b82:	930c      	str	r3, [sp, #48]	; 0x30
    6b84:	465b      	mov	r3, fp
    6b86:	9a06      	ldr	r2, [sp, #24]
    6b88:	46a8      	mov	r8, r5
    6b8a:	46b3      	mov	fp, r6
    6b8c:	4655      	mov	r5, sl
    6b8e:	9e04      	ldr	r6, [sp, #16]
    6b90:	4691      	mov	r9, r2
    6b92:	46ba      	mov	sl, r7
    6b94:	2b00      	cmp	r3, #0
    6b96:	dd10      	ble.n	6bba <_dtoa_r+0xc4e>
    6b98:	4659      	mov	r1, fp
    6b9a:	2201      	movs	r2, #1
    6b9c:	0038      	movs	r0, r7
    6b9e:	f001 fb9b 	bl	82d8 <__lshift>
    6ba2:	4649      	mov	r1, r9
    6ba4:	4683      	mov	fp, r0
    6ba6:	f001 fbf7 	bl	8398 <__mcmp>
    6baa:	2800      	cmp	r0, #0
    6bac:	dc00      	bgt.n	6bb0 <_dtoa_r+0xc44>
    6bae:	e157      	b.n	6e60 <_dtoa_r+0xef4>
    6bb0:	2e39      	cmp	r6, #57	; 0x39
    6bb2:	d100      	bne.n	6bb6 <_dtoa_r+0xc4a>
    6bb4:	e122      	b.n	6dfc <_dtoa_r+0xe90>
    6bb6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    6bb8:	3631      	adds	r6, #49	; 0x31
    6bba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6bbc:	4647      	mov	r7, r8
    6bbe:	1c6c      	adds	r4, r5, #1
    6bc0:	702e      	strb	r6, [r5, #0]
    6bc2:	4698      	mov	r8, r3
    6bc4:	e6c9      	b.n	695a <_dtoa_r+0x9ee>
    6bc6:	2800      	cmp	r0, #0
    6bc8:	d103      	bne.n	6bd2 <_dtoa_r+0xc66>
    6bca:	07f3      	lsls	r3, r6, #31
    6bcc:	d501      	bpl.n	6bd2 <_dtoa_r+0xc66>
    6bce:	e6b5      	b.n	693c <_dtoa_r+0x9d0>
    6bd0:	001c      	movs	r4, r3
    6bd2:	1e63      	subs	r3, r4, #1
    6bd4:	781a      	ldrb	r2, [r3, #0]
    6bd6:	2a30      	cmp	r2, #48	; 0x30
    6bd8:	d0fa      	beq.n	6bd0 <_dtoa_r+0xc64>
    6bda:	e6be      	b.n	695a <_dtoa_r+0x9ee>
    6bdc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6bde:	4699      	mov	r9, r3
    6be0:	9e10      	ldr	r6, [sp, #64]	; 0x40
    6be2:	9f11      	ldr	r7, [sp, #68]	; 0x44
    6be4:	e435      	b.n	6452 <_dtoa_r+0x4e6>
    6be6:	2501      	movs	r5, #1
    6be8:	f7ff fab4 	bl	6154 <_dtoa_r+0x1e8>
    6bec:	9b03      	ldr	r3, [sp, #12]
    6bee:	2b00      	cmp	r3, #0
    6bf0:	d100      	bne.n	6bf4 <_dtoa_r+0xc88>
    6bf2:	e0d4      	b.n	6d9e <_dtoa_r+0xe32>
    6bf4:	9810      	ldr	r0, [sp, #64]	; 0x40
    6bf6:	9911      	ldr	r1, [sp, #68]	; 0x44
    6bf8:	425c      	negs	r4, r3
    6bfa:	230f      	movs	r3, #15
    6bfc:	4a26      	ldr	r2, [pc, #152]	; (6c98 <_dtoa_r+0xd2c>)
    6bfe:	4023      	ands	r3, r4
    6c00:	00db      	lsls	r3, r3, #3
    6c02:	18d3      	adds	r3, r2, r3
    6c04:	681a      	ldr	r2, [r3, #0]
    6c06:	685b      	ldr	r3, [r3, #4]
    6c08:	f7fc fb5e 	bl	32c8 <__aeabi_dmul>
    6c0c:	1124      	asrs	r4, r4, #4
    6c0e:	0006      	movs	r6, r0
    6c10:	000f      	movs	r7, r1
    6c12:	2c00      	cmp	r4, #0
    6c14:	d100      	bne.n	6c18 <_dtoa_r+0xcac>
    6c16:	e149      	b.n	6eac <_dtoa_r+0xf40>
    6c18:	2302      	movs	r3, #2
    6c1a:	4698      	mov	r8, r3
    6c1c:	4d1f      	ldr	r5, [pc, #124]	; (6c9c <_dtoa_r+0xd30>)
    6c1e:	2301      	movs	r3, #1
    6c20:	4223      	tst	r3, r4
    6c22:	d009      	beq.n	6c38 <_dtoa_r+0xccc>
    6c24:	469c      	mov	ip, r3
    6c26:	682a      	ldr	r2, [r5, #0]
    6c28:	686b      	ldr	r3, [r5, #4]
    6c2a:	0030      	movs	r0, r6
    6c2c:	0039      	movs	r1, r7
    6c2e:	44e0      	add	r8, ip
    6c30:	f7fc fb4a 	bl	32c8 <__aeabi_dmul>
    6c34:	0006      	movs	r6, r0
    6c36:	000f      	movs	r7, r1
    6c38:	1064      	asrs	r4, r4, #1
    6c3a:	3508      	adds	r5, #8
    6c3c:	2c00      	cmp	r4, #0
    6c3e:	d1ee      	bne.n	6c1e <_dtoa_r+0xcb2>
    6c40:	f7ff fae4 	bl	620c <_dtoa_r+0x2a0>
    6c44:	9b03      	ldr	r3, [sp, #12]
    6c46:	2730      	movs	r7, #48	; 0x30
    6c48:	3301      	adds	r3, #1
    6c4a:	9303      	str	r3, [sp, #12]
    6c4c:	2330      	movs	r3, #48	; 0x30
    6c4e:	702b      	strb	r3, [r5, #0]
    6c50:	e4ac      	b.n	65ac <_dtoa_r+0x640>
    6c52:	6859      	ldr	r1, [r3, #4]
    6c54:	4650      	mov	r0, sl
    6c56:	f001 f96b 	bl	7f30 <_Balloc>
    6c5a:	4643      	mov	r3, r8
    6c5c:	4641      	mov	r1, r8
    6c5e:	0004      	movs	r4, r0
    6c60:	691b      	ldr	r3, [r3, #16]
    6c62:	310c      	adds	r1, #12
    6c64:	1c9a      	adds	r2, r3, #2
    6c66:	0092      	lsls	r2, r2, #2
    6c68:	300c      	adds	r0, #12
    6c6a:	f7fd fafd 	bl	4268 <memcpy>
    6c6e:	2201      	movs	r2, #1
    6c70:	0021      	movs	r1, r4
    6c72:	4650      	mov	r0, sl
    6c74:	f001 fb30 	bl	82d8 <__lshift>
    6c78:	900c      	str	r0, [sp, #48]	; 0x30
    6c7a:	e599      	b.n	67b0 <_dtoa_r+0x844>
    6c7c:	2300      	movs	r3, #0
    6c7e:	4699      	mov	r9, r3
    6c80:	4698      	mov	r8, r3
    6c82:	e70c      	b.n	6a9e <_dtoa_r+0xb32>
    6c84:	7ff00000 	.word	0x7ff00000
    6c88:	40140000 	.word	0x40140000
    6c8c:	00000433 	.word	0x00000433
    6c90:	401c0000 	.word	0x401c0000
    6c94:	fcc00000 	.word	0xfcc00000
    6c98:	00009e80 	.word	0x00009e80
    6c9c:	00009e58 	.word	0x00009e58
    6ca0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6ca2:	498f      	ldr	r1, [pc, #572]	; (6ee0 <_dtoa_r+0xf74>)
    6ca4:	3b01      	subs	r3, #1
    6ca6:	00db      	lsls	r3, r3, #3
    6ca8:	18c9      	adds	r1, r1, r3
    6caa:	6808      	ldr	r0, [r1, #0]
    6cac:	6849      	ldr	r1, [r1, #4]
    6cae:	9a08      	ldr	r2, [sp, #32]
    6cb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6cb2:	f7fc fb09 	bl	32c8 <__aeabi_dmul>
    6cb6:	9014      	str	r0, [sp, #80]	; 0x50
    6cb8:	9115      	str	r1, [sp, #84]	; 0x54
    6cba:	0039      	movs	r1, r7
    6cbc:	0030      	movs	r0, r6
    6cbe:	f7fd f899 	bl	3df4 <__aeabi_d2iz>
    6cc2:	0005      	movs	r5, r0
    6cc4:	f7fd f8ca 	bl	3e5c <__aeabi_i2d>
    6cc8:	0002      	movs	r2, r0
    6cca:	000b      	movs	r3, r1
    6ccc:	0030      	movs	r0, r6
    6cce:	0039      	movs	r1, r7
    6cd0:	f7fc fd7a 	bl	37c8 <__aeabi_dsub>
    6cd4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6cd6:	9008      	str	r0, [sp, #32]
    6cd8:	9109      	str	r1, [sp, #36]	; 0x24
    6cda:	990a      	ldr	r1, [sp, #40]	; 0x28
    6cdc:	001a      	movs	r2, r3
    6cde:	468c      	mov	ip, r1
    6ce0:	3530      	adds	r5, #48	; 0x30
    6ce2:	4462      	add	r2, ip
    6ce4:	1c4c      	adds	r4, r1, #1
    6ce6:	700d      	strb	r5, [r1, #0]
    6ce8:	4690      	mov	r8, r2
    6cea:	2b01      	cmp	r3, #1
    6cec:	d01b      	beq.n	6d26 <_dtoa_r+0xdba>
    6cee:	9808      	ldr	r0, [sp, #32]
    6cf0:	9909      	ldr	r1, [sp, #36]	; 0x24
    6cf2:	0025      	movs	r5, r4
    6cf4:	2200      	movs	r2, #0
    6cf6:	4b7b      	ldr	r3, [pc, #492]	; (6ee4 <_dtoa_r+0xf78>)
    6cf8:	f7fc fae6 	bl	32c8 <__aeabi_dmul>
    6cfc:	000f      	movs	r7, r1
    6cfe:	0006      	movs	r6, r0
    6d00:	f7fd f878 	bl	3df4 <__aeabi_d2iz>
    6d04:	0004      	movs	r4, r0
    6d06:	f7fd f8a9 	bl	3e5c <__aeabi_i2d>
    6d0a:	3430      	adds	r4, #48	; 0x30
    6d0c:	0002      	movs	r2, r0
    6d0e:	000b      	movs	r3, r1
    6d10:	0030      	movs	r0, r6
    6d12:	0039      	movs	r1, r7
    6d14:	f7fc fd58 	bl	37c8 <__aeabi_dsub>
    6d18:	702c      	strb	r4, [r5, #0]
    6d1a:	3501      	adds	r5, #1
    6d1c:	45a8      	cmp	r8, r5
    6d1e:	d1e9      	bne.n	6cf4 <_dtoa_r+0xd88>
    6d20:	4644      	mov	r4, r8
    6d22:	9008      	str	r0, [sp, #32]
    6d24:	9109      	str	r1, [sp, #36]	; 0x24
    6d26:	9814      	ldr	r0, [sp, #80]	; 0x50
    6d28:	9915      	ldr	r1, [sp, #84]	; 0x54
    6d2a:	2200      	movs	r2, #0
    6d2c:	4b6e      	ldr	r3, [pc, #440]	; (6ee8 <_dtoa_r+0xf7c>)
    6d2e:	f002 fa51 	bl	91d4 <__aeabi_dadd>
    6d32:	9a08      	ldr	r2, [sp, #32]
    6d34:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6d36:	f7fd f921 	bl	3f7c <__aeabi_dcmplt>
    6d3a:	2800      	cmp	r0, #0
    6d3c:	d067      	beq.n	6e0e <_dtoa_r+0xea2>
    6d3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6d40:	1e65      	subs	r5, r4, #1
    6d42:	9303      	str	r3, [sp, #12]
    6d44:	782f      	ldrb	r7, [r5, #0]
    6d46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6d48:	e42e      	b.n	65a8 <_dtoa_r+0x63c>
    6d4a:	4643      	mov	r3, r8
    6d4c:	46b3      	mov	fp, r6
    6d4e:	930c      	str	r3, [sp, #48]	; 0x30
    6d50:	9e04      	ldr	r6, [sp, #16]
    6d52:	9b06      	ldr	r3, [sp, #24]
    6d54:	46a8      	mov	r8, r5
    6d56:	4699      	mov	r9, r3
    6d58:	4655      	mov	r5, sl
    6d5a:	46ba      	mov	sl, r7
    6d5c:	2e39      	cmp	r6, #57	; 0x39
    6d5e:	d04d      	beq.n	6dfc <_dtoa_r+0xe90>
    6d60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6d62:	3601      	adds	r6, #1
    6d64:	4647      	mov	r7, r8
    6d66:	1c6c      	adds	r4, r5, #1
    6d68:	702e      	strb	r6, [r5, #0]
    6d6a:	4698      	mov	r8, r3
    6d6c:	e5f5      	b.n	695a <_dtoa_r+0x9ee>
    6d6e:	4642      	mov	r2, r8
    6d70:	9b06      	ldr	r3, [sp, #24]
    6d72:	46b3      	mov	fp, r6
    6d74:	46ba      	mov	sl, r7
    6d76:	9e04      	ldr	r6, [sp, #16]
    6d78:	4699      	mov	r9, r3
    6d7a:	002f      	movs	r7, r5
    6d7c:	4690      	mov	r8, r2
    6d7e:	e5d1      	b.n	6924 <_dtoa_r+0x9b8>
    6d80:	9b06      	ldr	r3, [sp, #24]
    6d82:	9a07      	ldr	r2, [sp, #28]
    6d84:	1a9b      	subs	r3, r3, r2
    6d86:	9308      	str	r3, [sp, #32]
    6d88:	2300      	movs	r3, #0
    6d8a:	e427      	b.n	65dc <_dtoa_r+0x670>
    6d8c:	2401      	movs	r4, #1
    6d8e:	e5c5      	b.n	691c <_dtoa_r+0x9b0>
    6d90:	2336      	movs	r3, #54	; 0x36
    6d92:	9a16      	ldr	r2, [sp, #88]	; 0x58
    6d94:	464c      	mov	r4, r9
    6d96:	1a9b      	subs	r3, r3, r2
    6d98:	9a06      	ldr	r2, [sp, #24]
    6d9a:	9208      	str	r2, [sp, #32]
    6d9c:	e41e      	b.n	65dc <_dtoa_r+0x670>
    6d9e:	2302      	movs	r3, #2
    6da0:	9e10      	ldr	r6, [sp, #64]	; 0x40
    6da2:	9f11      	ldr	r7, [sp, #68]	; 0x44
    6da4:	4698      	mov	r8, r3
    6da6:	f7ff fa31 	bl	620c <_dtoa_r+0x2a0>
    6daa:	9b07      	ldr	r3, [sp, #28]
    6dac:	2b00      	cmp	r3, #0
    6dae:	d100      	bne.n	6db2 <_dtoa_r+0xe46>
    6db0:	e68e      	b.n	6ad0 <_dtoa_r+0xb64>
    6db2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    6db4:	2c00      	cmp	r4, #0
    6db6:	dc00      	bgt.n	6dba <_dtoa_r+0xe4e>
    6db8:	e712      	b.n	6be0 <_dtoa_r+0xc74>
    6dba:	9b03      	ldr	r3, [sp, #12]
    6dbc:	2200      	movs	r2, #0
    6dbe:	3b01      	subs	r3, #1
    6dc0:	9313      	str	r3, [sp, #76]	; 0x4c
    6dc2:	0030      	movs	r0, r6
    6dc4:	4b47      	ldr	r3, [pc, #284]	; (6ee4 <_dtoa_r+0xf78>)
    6dc6:	0039      	movs	r1, r7
    6dc8:	f7fc fa7e 	bl	32c8 <__aeabi_dmul>
    6dcc:	0006      	movs	r6, r0
    6dce:	4640      	mov	r0, r8
    6dd0:	000f      	movs	r7, r1
    6dd2:	3001      	adds	r0, #1
    6dd4:	f7fd f842 	bl	3e5c <__aeabi_i2d>
    6dd8:	0032      	movs	r2, r6
    6dda:	003b      	movs	r3, r7
    6ddc:	f7fc fa74 	bl	32c8 <__aeabi_dmul>
    6de0:	2200      	movs	r2, #0
    6de2:	4b42      	ldr	r3, [pc, #264]	; (6eec <_dtoa_r+0xf80>)
    6de4:	f002 f9f6 	bl	91d4 <__aeabi_dadd>
    6de8:	4a41      	ldr	r2, [pc, #260]	; (6ef0 <_dtoa_r+0xf84>)
    6dea:	000b      	movs	r3, r1
    6dec:	4694      	mov	ip, r2
    6dee:	4463      	add	r3, ip
    6df0:	9008      	str	r0, [sp, #32]
    6df2:	9109      	str	r1, [sp, #36]	; 0x24
    6df4:	9412      	str	r4, [sp, #72]	; 0x48
    6df6:	9309      	str	r3, [sp, #36]	; 0x24
    6df8:	f7ff fa30 	bl	625c <_dtoa_r+0x2f0>
    6dfc:	2339      	movs	r3, #57	; 0x39
    6dfe:	702b      	strb	r3, [r5, #0]
    6e00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6e02:	4647      	mov	r7, r8
    6e04:	1c6c      	adds	r4, r5, #1
    6e06:	4698      	mov	r8, r3
    6e08:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6e0a:	2339      	movs	r3, #57	; 0x39
    6e0c:	e5a1      	b.n	6952 <_dtoa_r+0x9e6>
    6e0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
    6e10:	9b15      	ldr	r3, [sp, #84]	; 0x54
    6e12:	2000      	movs	r0, #0
    6e14:	4934      	ldr	r1, [pc, #208]	; (6ee8 <_dtoa_r+0xf7c>)
    6e16:	f7fc fcd7 	bl	37c8 <__aeabi_dsub>
    6e1a:	9a08      	ldr	r2, [sp, #32]
    6e1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6e1e:	f7fd f8c1 	bl	3fa4 <__aeabi_dcmpgt>
    6e22:	2800      	cmp	r0, #0
    6e24:	d101      	bne.n	6e2a <_dtoa_r+0xebe>
    6e26:	e6db      	b.n	6be0 <_dtoa_r+0xc74>
    6e28:	001c      	movs	r4, r3
    6e2a:	1e63      	subs	r3, r4, #1
    6e2c:	781a      	ldrb	r2, [r3, #0]
    6e2e:	2a30      	cmp	r2, #48	; 0x30
    6e30:	d0fa      	beq.n	6e28 <_dtoa_r+0xebc>
    6e32:	f7ff fac8 	bl	63c6 <_dtoa_r+0x45a>
    6e36:	4643      	mov	r3, r8
    6e38:	46b3      	mov	fp, r6
    6e3a:	930c      	str	r3, [sp, #48]	; 0x30
    6e3c:	9e04      	ldr	r6, [sp, #16]
    6e3e:	9b06      	ldr	r3, [sp, #24]
    6e40:	46a8      	mov	r8, r5
    6e42:	4699      	mov	r9, r3
    6e44:	4655      	mov	r5, sl
    6e46:	46ba      	mov	sl, r7
    6e48:	2e39      	cmp	r6, #57	; 0x39
    6e4a:	d0d7      	beq.n	6dfc <_dtoa_r+0xe90>
    6e4c:	2c00      	cmp	r4, #0
    6e4e:	dd00      	ble.n	6e52 <_dtoa_r+0xee6>
    6e50:	e6b1      	b.n	6bb6 <_dtoa_r+0xc4a>
    6e52:	e6b2      	b.n	6bba <_dtoa_r+0xc4e>
    6e54:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6e56:	464d      	mov	r5, r9
    6e58:	9203      	str	r2, [sp, #12]
    6e5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6e5c:	f7ff fba4 	bl	65a8 <_dtoa_r+0x63c>
    6e60:	2800      	cmp	r0, #0
    6e62:	d000      	beq.n	6e66 <_dtoa_r+0xefa>
    6e64:	e6a9      	b.n	6bba <_dtoa_r+0xc4e>
    6e66:	07f3      	lsls	r3, r6, #31
    6e68:	d400      	bmi.n	6e6c <_dtoa_r+0xf00>
    6e6a:	e6a6      	b.n	6bba <_dtoa_r+0xc4e>
    6e6c:	e6a0      	b.n	6bb0 <_dtoa_r+0xc44>
    6e6e:	2300      	movs	r3, #0
    6e70:	4641      	mov	r1, r8
    6e72:	220a      	movs	r2, #10
    6e74:	4650      	mov	r0, sl
    6e76:	f001 f88d 	bl	7f94 <__multadd>
    6e7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6e7c:	4680      	mov	r8, r0
    6e7e:	2b00      	cmp	r3, #0
    6e80:	dd01      	ble.n	6e86 <_dtoa_r+0xf1a>
    6e82:	9307      	str	r3, [sp, #28]
    6e84:	e486      	b.n	6794 <_dtoa_r+0x828>
    6e86:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6e88:	2b02      	cmp	r3, #2
    6e8a:	dc1f      	bgt.n	6ecc <_dtoa_r+0xf60>
    6e8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6e8e:	9307      	str	r3, [sp, #28]
    6e90:	e480      	b.n	6794 <_dtoa_r+0x828>
    6e92:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6e94:	2b02      	cmp	r3, #2
    6e96:	dc19      	bgt.n	6ecc <_dtoa_r+0xf60>
    6e98:	4649      	mov	r1, r9
    6e9a:	f7fe ffbd 	bl	5e18 <quorem>
    6e9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6ea0:	3030      	adds	r0, #48	; 0x30
    6ea2:	7018      	strb	r0, [r3, #0]
    6ea4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6ea6:	0006      	movs	r6, r0
    6ea8:	9307      	str	r3, [sp, #28]
    6eaa:	e533      	b.n	6914 <_dtoa_r+0x9a8>
    6eac:	2302      	movs	r3, #2
    6eae:	4698      	mov	r8, r3
    6eb0:	f7ff f9ac 	bl	620c <_dtoa_r+0x2a0>
    6eb4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6eb6:	9c14      	ldr	r4, [sp, #80]	; 0x50
    6eb8:	9303      	str	r3, [sp, #12]
    6eba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6ebc:	001d      	movs	r5, r3
    6ebe:	f7ff fb73 	bl	65a8 <_dtoa_r+0x63c>
    6ec2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6ec4:	9c14      	ldr	r4, [sp, #80]	; 0x50
    6ec6:	9303      	str	r3, [sp, #12]
    6ec8:	f7ff fa7f 	bl	63ca <_dtoa_r+0x45e>
    6ecc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6ece:	9307      	str	r3, [sp, #28]
    6ed0:	e5d6      	b.n	6a80 <_dtoa_r+0xb14>
    6ed2:	2b04      	cmp	r3, #4
    6ed4:	d100      	bne.n	6ed8 <_dtoa_r+0xf6c>
    6ed6:	e43f      	b.n	6758 <_dtoa_r+0x7ec>
    6ed8:	233c      	movs	r3, #60	; 0x3c
    6eda:	1a18      	subs	r0, r3, r0
    6edc:	e4d7      	b.n	688e <_dtoa_r+0x922>
    6ede:	46c0      	nop			; (mov r8, r8)
    6ee0:	00009e80 	.word	0x00009e80
    6ee4:	40240000 	.word	0x40240000
    6ee8:	3fe00000 	.word	0x3fe00000
    6eec:	401c0000 	.word	0x401c0000
    6ef0:	fcc00000 	.word	0xfcc00000

00006ef4 <__sflush_r>:
    6ef4:	b5f0      	push	{r4, r5, r6, r7, lr}
    6ef6:	46c6      	mov	lr, r8
    6ef8:	b500      	push	{lr}
    6efa:	230c      	movs	r3, #12
    6efc:	5eca      	ldrsh	r2, [r1, r3]
    6efe:	4680      	mov	r8, r0
    6f00:	b293      	uxth	r3, r2
    6f02:	000c      	movs	r4, r1
    6f04:	0719      	lsls	r1, r3, #28
    6f06:	d440      	bmi.n	6f8a <__sflush_r+0x96>
    6f08:	2380      	movs	r3, #128	; 0x80
    6f0a:	011b      	lsls	r3, r3, #4
    6f0c:	4313      	orrs	r3, r2
    6f0e:	6862      	ldr	r2, [r4, #4]
    6f10:	81a3      	strh	r3, [r4, #12]
    6f12:	2a00      	cmp	r2, #0
    6f14:	dc00      	bgt.n	6f18 <__sflush_r+0x24>
    6f16:	e070      	b.n	6ffa <__sflush_r+0x106>
    6f18:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    6f1a:	2e00      	cmp	r6, #0
    6f1c:	d031      	beq.n	6f82 <__sflush_r+0x8e>
    6f1e:	4642      	mov	r2, r8
    6f20:	4641      	mov	r1, r8
    6f22:	6815      	ldr	r5, [r2, #0]
    6f24:	2200      	movs	r2, #0
    6f26:	b29b      	uxth	r3, r3
    6f28:	600a      	str	r2, [r1, #0]
    6f2a:	04da      	lsls	r2, r3, #19
    6f2c:	d400      	bmi.n	6f30 <__sflush_r+0x3c>
    6f2e:	e069      	b.n	7004 <__sflush_r+0x110>
    6f30:	6d22      	ldr	r2, [r4, #80]	; 0x50
    6f32:	075b      	lsls	r3, r3, #29
    6f34:	d506      	bpl.n	6f44 <__sflush_r+0x50>
    6f36:	6863      	ldr	r3, [r4, #4]
    6f38:	1ad2      	subs	r2, r2, r3
    6f3a:	6b23      	ldr	r3, [r4, #48]	; 0x30
    6f3c:	2b00      	cmp	r3, #0
    6f3e:	d001      	beq.n	6f44 <__sflush_r+0x50>
    6f40:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    6f42:	1ad2      	subs	r2, r2, r3
    6f44:	2300      	movs	r3, #0
    6f46:	69e1      	ldr	r1, [r4, #28]
    6f48:	4640      	mov	r0, r8
    6f4a:	47b0      	blx	r6
    6f4c:	1c43      	adds	r3, r0, #1
    6f4e:	d03d      	beq.n	6fcc <__sflush_r+0xd8>
    6f50:	89a3      	ldrh	r3, [r4, #12]
    6f52:	4a3a      	ldr	r2, [pc, #232]	; (703c <__sflush_r+0x148>)
    6f54:	4013      	ands	r3, r2
    6f56:	2200      	movs	r2, #0
    6f58:	6062      	str	r2, [r4, #4]
    6f5a:	6922      	ldr	r2, [r4, #16]
    6f5c:	b21b      	sxth	r3, r3
    6f5e:	81a3      	strh	r3, [r4, #12]
    6f60:	6022      	str	r2, [r4, #0]
    6f62:	04db      	lsls	r3, r3, #19
    6f64:	d447      	bmi.n	6ff6 <__sflush_r+0x102>
    6f66:	4643      	mov	r3, r8
    6f68:	6b21      	ldr	r1, [r4, #48]	; 0x30
    6f6a:	601d      	str	r5, [r3, #0]
    6f6c:	2900      	cmp	r1, #0
    6f6e:	d008      	beq.n	6f82 <__sflush_r+0x8e>
    6f70:	0023      	movs	r3, r4
    6f72:	3340      	adds	r3, #64	; 0x40
    6f74:	4299      	cmp	r1, r3
    6f76:	d002      	beq.n	6f7e <__sflush_r+0x8a>
    6f78:	4640      	mov	r0, r8
    6f7a:	f000 f967 	bl	724c <_free_r>
    6f7e:	2300      	movs	r3, #0
    6f80:	6323      	str	r3, [r4, #48]	; 0x30
    6f82:	2000      	movs	r0, #0
    6f84:	bc04      	pop	{r2}
    6f86:	4690      	mov	r8, r2
    6f88:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6f8a:	6926      	ldr	r6, [r4, #16]
    6f8c:	2e00      	cmp	r6, #0
    6f8e:	d0f8      	beq.n	6f82 <__sflush_r+0x8e>
    6f90:	6822      	ldr	r2, [r4, #0]
    6f92:	6026      	str	r6, [r4, #0]
    6f94:	1b95      	subs	r5, r2, r6
    6f96:	2200      	movs	r2, #0
    6f98:	079b      	lsls	r3, r3, #30
    6f9a:	d100      	bne.n	6f9e <__sflush_r+0xaa>
    6f9c:	6962      	ldr	r2, [r4, #20]
    6f9e:	60a2      	str	r2, [r4, #8]
    6fa0:	2d00      	cmp	r5, #0
    6fa2:	dc04      	bgt.n	6fae <__sflush_r+0xba>
    6fa4:	e7ed      	b.n	6f82 <__sflush_r+0x8e>
    6fa6:	1836      	adds	r6, r6, r0
    6fa8:	1a2d      	subs	r5, r5, r0
    6faa:	2d00      	cmp	r5, #0
    6fac:	dde9      	ble.n	6f82 <__sflush_r+0x8e>
    6fae:	002b      	movs	r3, r5
    6fb0:	0032      	movs	r2, r6
    6fb2:	69e1      	ldr	r1, [r4, #28]
    6fb4:	4640      	mov	r0, r8
    6fb6:	6a67      	ldr	r7, [r4, #36]	; 0x24
    6fb8:	47b8      	blx	r7
    6fba:	2800      	cmp	r0, #0
    6fbc:	dcf3      	bgt.n	6fa6 <__sflush_r+0xb2>
    6fbe:	2240      	movs	r2, #64	; 0x40
    6fc0:	2001      	movs	r0, #1
    6fc2:	89a3      	ldrh	r3, [r4, #12]
    6fc4:	4240      	negs	r0, r0
    6fc6:	4313      	orrs	r3, r2
    6fc8:	81a3      	strh	r3, [r4, #12]
    6fca:	e7db      	b.n	6f84 <__sflush_r+0x90>
    6fcc:	4643      	mov	r3, r8
    6fce:	6819      	ldr	r1, [r3, #0]
    6fd0:	291d      	cmp	r1, #29
    6fd2:	d8f4      	bhi.n	6fbe <__sflush_r+0xca>
    6fd4:	4b1a      	ldr	r3, [pc, #104]	; (7040 <__sflush_r+0x14c>)
    6fd6:	2201      	movs	r2, #1
    6fd8:	40cb      	lsrs	r3, r1
    6fda:	439a      	bics	r2, r3
    6fdc:	d1ef      	bne.n	6fbe <__sflush_r+0xca>
    6fde:	89a3      	ldrh	r3, [r4, #12]
    6fe0:	4e16      	ldr	r6, [pc, #88]	; (703c <__sflush_r+0x148>)
    6fe2:	6062      	str	r2, [r4, #4]
    6fe4:	4033      	ands	r3, r6
    6fe6:	6922      	ldr	r2, [r4, #16]
    6fe8:	b21b      	sxth	r3, r3
    6fea:	81a3      	strh	r3, [r4, #12]
    6fec:	6022      	str	r2, [r4, #0]
    6fee:	04db      	lsls	r3, r3, #19
    6ff0:	d5b9      	bpl.n	6f66 <__sflush_r+0x72>
    6ff2:	2900      	cmp	r1, #0
    6ff4:	d1b7      	bne.n	6f66 <__sflush_r+0x72>
    6ff6:	6520      	str	r0, [r4, #80]	; 0x50
    6ff8:	e7b5      	b.n	6f66 <__sflush_r+0x72>
    6ffa:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    6ffc:	2a00      	cmp	r2, #0
    6ffe:	dd00      	ble.n	7002 <__sflush_r+0x10e>
    7000:	e78a      	b.n	6f18 <__sflush_r+0x24>
    7002:	e7be      	b.n	6f82 <__sflush_r+0x8e>
    7004:	2200      	movs	r2, #0
    7006:	2301      	movs	r3, #1
    7008:	69e1      	ldr	r1, [r4, #28]
    700a:	4640      	mov	r0, r8
    700c:	47b0      	blx	r6
    700e:	0002      	movs	r2, r0
    7010:	1c43      	adds	r3, r0, #1
    7012:	d002      	beq.n	701a <__sflush_r+0x126>
    7014:	89a3      	ldrh	r3, [r4, #12]
    7016:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    7018:	e78b      	b.n	6f32 <__sflush_r+0x3e>
    701a:	4643      	mov	r3, r8
    701c:	681b      	ldr	r3, [r3, #0]
    701e:	2b00      	cmp	r3, #0
    7020:	d0f8      	beq.n	7014 <__sflush_r+0x120>
    7022:	2b1d      	cmp	r3, #29
    7024:	d001      	beq.n	702a <__sflush_r+0x136>
    7026:	2b16      	cmp	r3, #22
    7028:	d103      	bne.n	7032 <__sflush_r+0x13e>
    702a:	4643      	mov	r3, r8
    702c:	2000      	movs	r0, #0
    702e:	601d      	str	r5, [r3, #0]
    7030:	e7a8      	b.n	6f84 <__sflush_r+0x90>
    7032:	2140      	movs	r1, #64	; 0x40
    7034:	89a3      	ldrh	r3, [r4, #12]
    7036:	430b      	orrs	r3, r1
    7038:	81a3      	strh	r3, [r4, #12]
    703a:	e7a3      	b.n	6f84 <__sflush_r+0x90>
    703c:	fffff7ff 	.word	0xfffff7ff
    7040:	20400001 	.word	0x20400001

00007044 <_fflush_r>:
    7044:	b570      	push	{r4, r5, r6, lr}
    7046:	0005      	movs	r5, r0
    7048:	000c      	movs	r4, r1
    704a:	2800      	cmp	r0, #0
    704c:	d002      	beq.n	7054 <_fflush_r+0x10>
    704e:	6b83      	ldr	r3, [r0, #56]	; 0x38
    7050:	2b00      	cmp	r3, #0
    7052:	d016      	beq.n	7082 <_fflush_r+0x3e>
    7054:	220c      	movs	r2, #12
    7056:	5ea3      	ldrsh	r3, [r4, r2]
    7058:	2600      	movs	r6, #0
    705a:	2b00      	cmp	r3, #0
    705c:	d00f      	beq.n	707e <_fflush_r+0x3a>
    705e:	6e62      	ldr	r2, [r4, #100]	; 0x64
    7060:	07d2      	lsls	r2, r2, #31
    7062:	d401      	bmi.n	7068 <_fflush_r+0x24>
    7064:	059b      	lsls	r3, r3, #22
    7066:	d513      	bpl.n	7090 <_fflush_r+0x4c>
    7068:	0021      	movs	r1, r4
    706a:	0028      	movs	r0, r5
    706c:	f7ff ff42 	bl	6ef4 <__sflush_r>
    7070:	6e63      	ldr	r3, [r4, #100]	; 0x64
    7072:	0006      	movs	r6, r0
    7074:	07db      	lsls	r3, r3, #31
    7076:	d402      	bmi.n	707e <_fflush_r+0x3a>
    7078:	89a3      	ldrh	r3, [r4, #12]
    707a:	059b      	lsls	r3, r3, #22
    707c:	d504      	bpl.n	7088 <_fflush_r+0x44>
    707e:	0030      	movs	r0, r6
    7080:	bd70      	pop	{r4, r5, r6, pc}
    7082:	f000 f839 	bl	70f8 <__sinit>
    7086:	e7e5      	b.n	7054 <_fflush_r+0x10>
    7088:	6da0      	ldr	r0, [r4, #88]	; 0x58
    708a:	f000 fb79 	bl	7780 <__retarget_lock_release_recursive>
    708e:	e7f6      	b.n	707e <_fflush_r+0x3a>
    7090:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7092:	f000 fb73 	bl	777c <__retarget_lock_acquire_recursive>
    7096:	e7e7      	b.n	7068 <_fflush_r+0x24>

00007098 <_cleanup_r>:
    7098:	b510      	push	{r4, lr}
    709a:	4902      	ldr	r1, [pc, #8]	; (70a4 <_cleanup_r+0xc>)
    709c:	f000 fb36 	bl	770c <_fwalk_reent>
    70a0:	bd10      	pop	{r4, pc}
    70a2:	46c0      	nop			; (mov r8, r8)
    70a4:	00008c2d 	.word	0x00008c2d

000070a8 <std.isra.0>:
    70a8:	2300      	movs	r3, #0
    70aa:	b510      	push	{r4, lr}
    70ac:	0004      	movs	r4, r0
    70ae:	6003      	str	r3, [r0, #0]
    70b0:	6043      	str	r3, [r0, #4]
    70b2:	6083      	str	r3, [r0, #8]
    70b4:	8181      	strh	r1, [r0, #12]
    70b6:	6643      	str	r3, [r0, #100]	; 0x64
    70b8:	81c2      	strh	r2, [r0, #14]
    70ba:	6103      	str	r3, [r0, #16]
    70bc:	6143      	str	r3, [r0, #20]
    70be:	6183      	str	r3, [r0, #24]
    70c0:	2208      	movs	r2, #8
    70c2:	2100      	movs	r1, #0
    70c4:	305c      	adds	r0, #92	; 0x5c
    70c6:	f7fd f911 	bl	42ec <memset>
    70ca:	0020      	movs	r0, r4
    70cc:	4b06      	ldr	r3, [pc, #24]	; (70e8 <std.isra.0+0x40>)
    70ce:	61e4      	str	r4, [r4, #28]
    70d0:	6223      	str	r3, [r4, #32]
    70d2:	4b06      	ldr	r3, [pc, #24]	; (70ec <std.isra.0+0x44>)
    70d4:	3058      	adds	r0, #88	; 0x58
    70d6:	6263      	str	r3, [r4, #36]	; 0x24
    70d8:	4b05      	ldr	r3, [pc, #20]	; (70f0 <std.isra.0+0x48>)
    70da:	62a3      	str	r3, [r4, #40]	; 0x28
    70dc:	4b05      	ldr	r3, [pc, #20]	; (70f4 <std.isra.0+0x4c>)
    70de:	62e3      	str	r3, [r4, #44]	; 0x2c
    70e0:	f000 fb48 	bl	7774 <__retarget_lock_init_recursive>
    70e4:	bd10      	pop	{r4, pc}
    70e6:	46c0      	nop			; (mov r8, r8)
    70e8:	00008961 	.word	0x00008961
    70ec:	00008989 	.word	0x00008989
    70f0:	000089c5 	.word	0x000089c5
    70f4:	000089f1 	.word	0x000089f1

000070f8 <__sinit>:
    70f8:	b570      	push	{r4, r5, r6, lr}
    70fa:	0004      	movs	r4, r0
    70fc:	4d14      	ldr	r5, [pc, #80]	; (7150 <__sinit+0x58>)
    70fe:	0028      	movs	r0, r5
    7100:	f000 fb3c 	bl	777c <__retarget_lock_acquire_recursive>
    7104:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    7106:	2b00      	cmp	r3, #0
    7108:	d11d      	bne.n	7146 <__sinit+0x4e>
    710a:	4a12      	ldr	r2, [pc, #72]	; (7154 <__sinit+0x5c>)
    710c:	2104      	movs	r1, #4
    710e:	63e2      	str	r2, [r4, #60]	; 0x3c
    7110:	22b8      	movs	r2, #184	; 0xb8
    7112:	0092      	lsls	r2, r2, #2
    7114:	50a3      	str	r3, [r4, r2]
    7116:	23b9      	movs	r3, #185	; 0xb9
    7118:	2203      	movs	r2, #3
    711a:	009b      	lsls	r3, r3, #2
    711c:	50e2      	str	r2, [r4, r3]
    711e:	3308      	adds	r3, #8
    7120:	18e2      	adds	r2, r4, r3
    7122:	3b04      	subs	r3, #4
    7124:	50e2      	str	r2, [r4, r3]
    7126:	6860      	ldr	r0, [r4, #4]
    7128:	2200      	movs	r2, #0
    712a:	f7ff ffbd 	bl	70a8 <std.isra.0>
    712e:	2201      	movs	r2, #1
    7130:	2109      	movs	r1, #9
    7132:	68a0      	ldr	r0, [r4, #8]
    7134:	f7ff ffb8 	bl	70a8 <std.isra.0>
    7138:	2202      	movs	r2, #2
    713a:	2112      	movs	r1, #18
    713c:	68e0      	ldr	r0, [r4, #12]
    713e:	f7ff ffb3 	bl	70a8 <std.isra.0>
    7142:	2301      	movs	r3, #1
    7144:	63a3      	str	r3, [r4, #56]	; 0x38
    7146:	0028      	movs	r0, r5
    7148:	f000 fb1a 	bl	7780 <__retarget_lock_release_recursive>
    714c:	bd70      	pop	{r4, r5, r6, pc}
    714e:	46c0      	nop			; (mov r8, r8)
    7150:	20001398 	.word	0x20001398
    7154:	00007099 	.word	0x00007099

00007158 <__sfp_lock_acquire>:
    7158:	b510      	push	{r4, lr}
    715a:	4802      	ldr	r0, [pc, #8]	; (7164 <__sfp_lock_acquire+0xc>)
    715c:	f000 fb0e 	bl	777c <__retarget_lock_acquire_recursive>
    7160:	bd10      	pop	{r4, pc}
    7162:	46c0      	nop			; (mov r8, r8)
    7164:	200013ac 	.word	0x200013ac

00007168 <__sfp_lock_release>:
    7168:	b510      	push	{r4, lr}
    716a:	4802      	ldr	r0, [pc, #8]	; (7174 <__sfp_lock_release+0xc>)
    716c:	f000 fb08 	bl	7780 <__retarget_lock_release_recursive>
    7170:	bd10      	pop	{r4, pc}
    7172:	46c0      	nop			; (mov r8, r8)
    7174:	200013ac 	.word	0x200013ac

00007178 <__libc_fini_array>:
    7178:	b570      	push	{r4, r5, r6, lr}
    717a:	4b09      	ldr	r3, [pc, #36]	; (71a0 <__libc_fini_array+0x28>)
    717c:	4c09      	ldr	r4, [pc, #36]	; (71a4 <__libc_fini_array+0x2c>)
    717e:	1ae4      	subs	r4, r4, r3
    7180:	10a4      	asrs	r4, r4, #2
    7182:	d009      	beq.n	7198 <__libc_fini_array+0x20>
    7184:	4a08      	ldr	r2, [pc, #32]	; (71a8 <__libc_fini_array+0x30>)
    7186:	18a5      	adds	r5, r4, r2
    7188:	00ad      	lsls	r5, r5, #2
    718a:	18ed      	adds	r5, r5, r3
    718c:	682b      	ldr	r3, [r5, #0]
    718e:	3c01      	subs	r4, #1
    7190:	4798      	blx	r3
    7192:	3d04      	subs	r5, #4
    7194:	2c00      	cmp	r4, #0
    7196:	d1f9      	bne.n	718c <__libc_fini_array+0x14>
    7198:	f002 ff70 	bl	a07c <_fini>
    719c:	bd70      	pop	{r4, r5, r6, pc}
    719e:	46c0      	nop			; (mov r8, r8)
    71a0:	0000a088 	.word	0x0000a088
    71a4:	0000a08c 	.word	0x0000a08c
    71a8:	3fffffff 	.word	0x3fffffff

000071ac <_malloc_trim_r>:
    71ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    71ae:	000c      	movs	r4, r1
    71b0:	0006      	movs	r6, r0
    71b2:	f000 fead 	bl	7f10 <__malloc_lock>
    71b6:	4f20      	ldr	r7, [pc, #128]	; (7238 <_malloc_trim_r+0x8c>)
    71b8:	68bb      	ldr	r3, [r7, #8]
    71ba:	685d      	ldr	r5, [r3, #4]
    71bc:	2303      	movs	r3, #3
    71be:	439d      	bics	r5, r3
    71c0:	4b1e      	ldr	r3, [pc, #120]	; (723c <_malloc_trim_r+0x90>)
    71c2:	1b2c      	subs	r4, r5, r4
    71c4:	469c      	mov	ip, r3
    71c6:	4464      	add	r4, ip
    71c8:	0b24      	lsrs	r4, r4, #12
    71ca:	4b1d      	ldr	r3, [pc, #116]	; (7240 <_malloc_trim_r+0x94>)
    71cc:	3c01      	subs	r4, #1
    71ce:	0324      	lsls	r4, r4, #12
    71d0:	429c      	cmp	r4, r3
    71d2:	dd07      	ble.n	71e4 <_malloc_trim_r+0x38>
    71d4:	2100      	movs	r1, #0
    71d6:	0030      	movs	r0, r6
    71d8:	f001 fbb0 	bl	893c <_sbrk_r>
    71dc:	68bb      	ldr	r3, [r7, #8]
    71de:	195b      	adds	r3, r3, r5
    71e0:	4298      	cmp	r0, r3
    71e2:	d004      	beq.n	71ee <_malloc_trim_r+0x42>
    71e4:	0030      	movs	r0, r6
    71e6:	f000 fe9b 	bl	7f20 <__malloc_unlock>
    71ea:	2000      	movs	r0, #0
    71ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    71ee:	4261      	negs	r1, r4
    71f0:	0030      	movs	r0, r6
    71f2:	f001 fba3 	bl	893c <_sbrk_r>
    71f6:	1c43      	adds	r3, r0, #1
    71f8:	d00d      	beq.n	7216 <_malloc_trim_r+0x6a>
    71fa:	2201      	movs	r2, #1
    71fc:	68bb      	ldr	r3, [r7, #8]
    71fe:	1b2d      	subs	r5, r5, r4
    7200:	4315      	orrs	r5, r2
    7202:	605d      	str	r5, [r3, #4]
    7204:	4b0f      	ldr	r3, [pc, #60]	; (7244 <_malloc_trim_r+0x98>)
    7206:	0030      	movs	r0, r6
    7208:	681a      	ldr	r2, [r3, #0]
    720a:	1b14      	subs	r4, r2, r4
    720c:	601c      	str	r4, [r3, #0]
    720e:	f000 fe87 	bl	7f20 <__malloc_unlock>
    7212:	2001      	movs	r0, #1
    7214:	e7ea      	b.n	71ec <_malloc_trim_r+0x40>
    7216:	2100      	movs	r1, #0
    7218:	0030      	movs	r0, r6
    721a:	f001 fb8f 	bl	893c <_sbrk_r>
    721e:	68ba      	ldr	r2, [r7, #8]
    7220:	1a83      	subs	r3, r0, r2
    7222:	2b0f      	cmp	r3, #15
    7224:	ddde      	ble.n	71e4 <_malloc_trim_r+0x38>
    7226:	4908      	ldr	r1, [pc, #32]	; (7248 <_malloc_trim_r+0x9c>)
    7228:	6809      	ldr	r1, [r1, #0]
    722a:	1a40      	subs	r0, r0, r1
    722c:	4905      	ldr	r1, [pc, #20]	; (7244 <_malloc_trim_r+0x98>)
    722e:	6008      	str	r0, [r1, #0]
    7230:	2101      	movs	r1, #1
    7232:	430b      	orrs	r3, r1
    7234:	6053      	str	r3, [r2, #4]
    7236:	e7d5      	b.n	71e4 <_malloc_trim_r+0x38>
    7238:	200004ac 	.word	0x200004ac
    723c:	00000fef 	.word	0x00000fef
    7240:	00000fff 	.word	0x00000fff
    7244:	20001290 	.word	0x20001290
    7248:	200008b4 	.word	0x200008b4

0000724c <_free_r>:
    724c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    724e:	0004      	movs	r4, r0
    7250:	1e0d      	subs	r5, r1, #0
    7252:	d03c      	beq.n	72ce <_free_r+0x82>
    7254:	f000 fe5c 	bl	7f10 <__malloc_lock>
    7258:	0029      	movs	r1, r5
    725a:	3908      	subs	r1, #8
    725c:	6848      	ldr	r0, [r1, #4]
    725e:	2301      	movs	r3, #1
    7260:	0005      	movs	r5, r0
    7262:	2603      	movs	r6, #3
    7264:	439d      	bics	r5, r3
    7266:	194a      	adds	r2, r1, r5
    7268:	469c      	mov	ip, r3
    726a:	4f61      	ldr	r7, [pc, #388]	; (73f0 <_free_r+0x1a4>)
    726c:	6853      	ldr	r3, [r2, #4]
    726e:	43b3      	bics	r3, r6
    7270:	68be      	ldr	r6, [r7, #8]
    7272:	42b2      	cmp	r2, r6
    7274:	d056      	beq.n	7324 <_free_r+0xd8>
    7276:	4666      	mov	r6, ip
    7278:	6053      	str	r3, [r2, #4]
    727a:	4206      	tst	r6, r0
    727c:	d10a      	bne.n	7294 <_free_r+0x48>
    727e:	003e      	movs	r6, r7
    7280:	6808      	ldr	r0, [r1, #0]
    7282:	3608      	adds	r6, #8
    7284:	1a09      	subs	r1, r1, r0
    7286:	182d      	adds	r5, r5, r0
    7288:	6888      	ldr	r0, [r1, #8]
    728a:	42b0      	cmp	r0, r6
    728c:	d065      	beq.n	735a <_free_r+0x10e>
    728e:	68ce      	ldr	r6, [r1, #12]
    7290:	60c6      	str	r6, [r0, #12]
    7292:	60b0      	str	r0, [r6, #8]
    7294:	2001      	movs	r0, #1
    7296:	18d6      	adds	r6, r2, r3
    7298:	6876      	ldr	r6, [r6, #4]
    729a:	4206      	tst	r6, r0
    729c:	d033      	beq.n	7306 <_free_r+0xba>
    729e:	4b55      	ldr	r3, [pc, #340]	; (73f4 <_free_r+0x1a8>)
    72a0:	4328      	orrs	r0, r5
    72a2:	6048      	str	r0, [r1, #4]
    72a4:	514d      	str	r5, [r1, r5]
    72a6:	429d      	cmp	r5, r3
    72a8:	d812      	bhi.n	72d0 <_free_r+0x84>
    72aa:	08ed      	lsrs	r5, r5, #3
    72ac:	3bff      	subs	r3, #255	; 0xff
    72ae:	10aa      	asrs	r2, r5, #2
    72b0:	3bff      	subs	r3, #255	; 0xff
    72b2:	4093      	lsls	r3, r2
    72b4:	687a      	ldr	r2, [r7, #4]
    72b6:	00ed      	lsls	r5, r5, #3
    72b8:	4313      	orrs	r3, r2
    72ba:	607b      	str	r3, [r7, #4]
    72bc:	19ef      	adds	r7, r5, r7
    72be:	68bb      	ldr	r3, [r7, #8]
    72c0:	60cf      	str	r7, [r1, #12]
    72c2:	608b      	str	r3, [r1, #8]
    72c4:	60b9      	str	r1, [r7, #8]
    72c6:	60d9      	str	r1, [r3, #12]
    72c8:	0020      	movs	r0, r4
    72ca:	f000 fe29 	bl	7f20 <__malloc_unlock>
    72ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    72d0:	0a68      	lsrs	r0, r5, #9
    72d2:	2804      	cmp	r0, #4
    72d4:	d850      	bhi.n	7378 <_free_r+0x12c>
    72d6:	09a8      	lsrs	r0, r5, #6
    72d8:	0002      	movs	r2, r0
    72da:	3039      	adds	r0, #57	; 0x39
    72dc:	3238      	adds	r2, #56	; 0x38
    72de:	00c0      	lsls	r0, r0, #3
    72e0:	1838      	adds	r0, r7, r0
    72e2:	3808      	subs	r0, #8
    72e4:	6883      	ldr	r3, [r0, #8]
    72e6:	2603      	movs	r6, #3
    72e8:	4298      	cmp	r0, r3
    72ea:	d04c      	beq.n	7386 <_free_r+0x13a>
    72ec:	685a      	ldr	r2, [r3, #4]
    72ee:	43b2      	bics	r2, r6
    72f0:	4295      	cmp	r5, r2
    72f2:	d230      	bcs.n	7356 <_free_r+0x10a>
    72f4:	689b      	ldr	r3, [r3, #8]
    72f6:	4298      	cmp	r0, r3
    72f8:	d1f8      	bne.n	72ec <_free_r+0xa0>
    72fa:	68c3      	ldr	r3, [r0, #12]
    72fc:	60cb      	str	r3, [r1, #12]
    72fe:	6088      	str	r0, [r1, #8]
    7300:	6099      	str	r1, [r3, #8]
    7302:	60c1      	str	r1, [r0, #12]
    7304:	e7e0      	b.n	72c8 <_free_r+0x7c>
    7306:	18ed      	adds	r5, r5, r3
    7308:	4e3b      	ldr	r6, [pc, #236]	; (73f8 <_free_r+0x1ac>)
    730a:	6893      	ldr	r3, [r2, #8]
    730c:	42b3      	cmp	r3, r6
    730e:	d042      	beq.n	7396 <_free_r+0x14a>
    7310:	68d2      	ldr	r2, [r2, #12]
    7312:	4328      	orrs	r0, r5
    7314:	60da      	str	r2, [r3, #12]
    7316:	6093      	str	r3, [r2, #8]
    7318:	4b36      	ldr	r3, [pc, #216]	; (73f4 <_free_r+0x1a8>)
    731a:	6048      	str	r0, [r1, #4]
    731c:	514d      	str	r5, [r1, r5]
    731e:	429d      	cmp	r5, r3
    7320:	d8d6      	bhi.n	72d0 <_free_r+0x84>
    7322:	e7c2      	b.n	72aa <_free_r+0x5e>
    7324:	4662      	mov	r2, ip
    7326:	18eb      	adds	r3, r5, r3
    7328:	4202      	tst	r2, r0
    732a:	d106      	bne.n	733a <_free_r+0xee>
    732c:	680a      	ldr	r2, [r1, #0]
    732e:	1a89      	subs	r1, r1, r2
    7330:	6888      	ldr	r0, [r1, #8]
    7332:	189b      	adds	r3, r3, r2
    7334:	68ca      	ldr	r2, [r1, #12]
    7336:	60c2      	str	r2, [r0, #12]
    7338:	6090      	str	r0, [r2, #8]
    733a:	2201      	movs	r2, #1
    733c:	431a      	orrs	r2, r3
    733e:	604a      	str	r2, [r1, #4]
    7340:	4a2e      	ldr	r2, [pc, #184]	; (73fc <_free_r+0x1b0>)
    7342:	60b9      	str	r1, [r7, #8]
    7344:	6812      	ldr	r2, [r2, #0]
    7346:	4293      	cmp	r3, r2
    7348:	d3be      	bcc.n	72c8 <_free_r+0x7c>
    734a:	4b2d      	ldr	r3, [pc, #180]	; (7400 <_free_r+0x1b4>)
    734c:	0020      	movs	r0, r4
    734e:	6819      	ldr	r1, [r3, #0]
    7350:	f7ff ff2c 	bl	71ac <_malloc_trim_r>
    7354:	e7b8      	b.n	72c8 <_free_r+0x7c>
    7356:	0018      	movs	r0, r3
    7358:	e7cf      	b.n	72fa <_free_r+0xae>
    735a:	4666      	mov	r6, ip
    735c:	18d0      	adds	r0, r2, r3
    735e:	6840      	ldr	r0, [r0, #4]
    7360:	4230      	tst	r0, r6
    7362:	d13f      	bne.n	73e4 <_free_r+0x198>
    7364:	6890      	ldr	r0, [r2, #8]
    7366:	195d      	adds	r5, r3, r5
    7368:	68d3      	ldr	r3, [r2, #12]
    736a:	60c3      	str	r3, [r0, #12]
    736c:	6098      	str	r0, [r3, #8]
    736e:	4663      	mov	r3, ip
    7370:	432b      	orrs	r3, r5
    7372:	604b      	str	r3, [r1, #4]
    7374:	514d      	str	r5, [r1, r5]
    7376:	e7a7      	b.n	72c8 <_free_r+0x7c>
    7378:	2814      	cmp	r0, #20
    737a:	d814      	bhi.n	73a6 <_free_r+0x15a>
    737c:	0002      	movs	r2, r0
    737e:	305c      	adds	r0, #92	; 0x5c
    7380:	325b      	adds	r2, #91	; 0x5b
    7382:	00c0      	lsls	r0, r0, #3
    7384:	e7ac      	b.n	72e0 <_free_r+0x94>
    7386:	2301      	movs	r3, #1
    7388:	1092      	asrs	r2, r2, #2
    738a:	4093      	lsls	r3, r2
    738c:	687a      	ldr	r2, [r7, #4]
    738e:	4313      	orrs	r3, r2
    7390:	607b      	str	r3, [r7, #4]
    7392:	0003      	movs	r3, r0
    7394:	e7b2      	b.n	72fc <_free_r+0xb0>
    7396:	4328      	orrs	r0, r5
    7398:	60d9      	str	r1, [r3, #12]
    739a:	6099      	str	r1, [r3, #8]
    739c:	60cb      	str	r3, [r1, #12]
    739e:	608b      	str	r3, [r1, #8]
    73a0:	6048      	str	r0, [r1, #4]
    73a2:	514d      	str	r5, [r1, r5]
    73a4:	e790      	b.n	72c8 <_free_r+0x7c>
    73a6:	2854      	cmp	r0, #84	; 0x54
    73a8:	d805      	bhi.n	73b6 <_free_r+0x16a>
    73aa:	0b28      	lsrs	r0, r5, #12
    73ac:	0002      	movs	r2, r0
    73ae:	306f      	adds	r0, #111	; 0x6f
    73b0:	326e      	adds	r2, #110	; 0x6e
    73b2:	00c0      	lsls	r0, r0, #3
    73b4:	e794      	b.n	72e0 <_free_r+0x94>
    73b6:	22aa      	movs	r2, #170	; 0xaa
    73b8:	0052      	lsls	r2, r2, #1
    73ba:	4290      	cmp	r0, r2
    73bc:	d805      	bhi.n	73ca <_free_r+0x17e>
    73be:	0be8      	lsrs	r0, r5, #15
    73c0:	0002      	movs	r2, r0
    73c2:	3078      	adds	r0, #120	; 0x78
    73c4:	3277      	adds	r2, #119	; 0x77
    73c6:	00c0      	lsls	r0, r0, #3
    73c8:	e78a      	b.n	72e0 <_free_r+0x94>
    73ca:	4a0e      	ldr	r2, [pc, #56]	; (7404 <_free_r+0x1b8>)
    73cc:	4290      	cmp	r0, r2
    73ce:	d805      	bhi.n	73dc <_free_r+0x190>
    73d0:	0ca8      	lsrs	r0, r5, #18
    73d2:	0002      	movs	r2, r0
    73d4:	307d      	adds	r0, #125	; 0x7d
    73d6:	327c      	adds	r2, #124	; 0x7c
    73d8:	00c0      	lsls	r0, r0, #3
    73da:	e781      	b.n	72e0 <_free_r+0x94>
    73dc:	20fe      	movs	r0, #254	; 0xfe
    73de:	227e      	movs	r2, #126	; 0x7e
    73e0:	0080      	lsls	r0, r0, #2
    73e2:	e77d      	b.n	72e0 <_free_r+0x94>
    73e4:	4663      	mov	r3, ip
    73e6:	432b      	orrs	r3, r5
    73e8:	604b      	str	r3, [r1, #4]
    73ea:	6015      	str	r5, [r2, #0]
    73ec:	e76c      	b.n	72c8 <_free_r+0x7c>
    73ee:	46c0      	nop			; (mov r8, r8)
    73f0:	200004ac 	.word	0x200004ac
    73f4:	000001ff 	.word	0x000001ff
    73f8:	200004b4 	.word	0x200004b4
    73fc:	200008b8 	.word	0x200008b8
    7400:	200012c0 	.word	0x200012c0
    7404:	00000554 	.word	0x00000554

00007408 <__sfvwrite_r>:
    7408:	b5f0      	push	{r4, r5, r6, r7, lr}
    740a:	464e      	mov	r6, r9
    740c:	46de      	mov	lr, fp
    740e:	4657      	mov	r7, sl
    7410:	4645      	mov	r5, r8
    7412:	b5e0      	push	{r5, r6, r7, lr}
    7414:	6893      	ldr	r3, [r2, #8]
    7416:	b083      	sub	sp, #12
    7418:	9000      	str	r0, [sp, #0]
    741a:	000c      	movs	r4, r1
    741c:	0016      	movs	r6, r2
    741e:	2b00      	cmp	r3, #0
    7420:	d025      	beq.n	746e <__sfvwrite_r+0x66>
    7422:	898b      	ldrh	r3, [r1, #12]
    7424:	071a      	lsls	r2, r3, #28
    7426:	d52a      	bpl.n	747e <__sfvwrite_r+0x76>
    7428:	690a      	ldr	r2, [r1, #16]
    742a:	2a00      	cmp	r2, #0
    742c:	d027      	beq.n	747e <__sfvwrite_r+0x76>
    742e:	6832      	ldr	r2, [r6, #0]
    7430:	4693      	mov	fp, r2
    7432:	079a      	lsls	r2, r3, #30
    7434:	d52f      	bpl.n	7496 <__sfvwrite_r+0x8e>
    7436:	4bb2      	ldr	r3, [pc, #712]	; (7700 <__sfvwrite_r+0x2f8>)
    7438:	2700      	movs	r7, #0
    743a:	2500      	movs	r5, #0
    743c:	4698      	mov	r8, r3
    743e:	46b1      	mov	r9, r6
    7440:	2d00      	cmp	r5, #0
    7442:	d100      	bne.n	7446 <__sfvwrite_r+0x3e>
    7444:	e072      	b.n	752c <__sfvwrite_r+0x124>
    7446:	002b      	movs	r3, r5
    7448:	4545      	cmp	r5, r8
    744a:	d900      	bls.n	744e <__sfvwrite_r+0x46>
    744c:	4bac      	ldr	r3, [pc, #688]	; (7700 <__sfvwrite_r+0x2f8>)
    744e:	003a      	movs	r2, r7
    7450:	69e1      	ldr	r1, [r4, #28]
    7452:	9800      	ldr	r0, [sp, #0]
    7454:	6a66      	ldr	r6, [r4, #36]	; 0x24
    7456:	47b0      	blx	r6
    7458:	2800      	cmp	r0, #0
    745a:	dc00      	bgt.n	745e <__sfvwrite_r+0x56>
    745c:	e073      	b.n	7546 <__sfvwrite_r+0x13e>
    745e:	464b      	mov	r3, r9
    7460:	689b      	ldr	r3, [r3, #8]
    7462:	183f      	adds	r7, r7, r0
    7464:	1a2d      	subs	r5, r5, r0
    7466:	1a18      	subs	r0, r3, r0
    7468:	464b      	mov	r3, r9
    746a:	6098      	str	r0, [r3, #8]
    746c:	d1e8      	bne.n	7440 <__sfvwrite_r+0x38>
    746e:	2000      	movs	r0, #0
    7470:	b003      	add	sp, #12
    7472:	bc3c      	pop	{r2, r3, r4, r5}
    7474:	4690      	mov	r8, r2
    7476:	4699      	mov	r9, r3
    7478:	46a2      	mov	sl, r4
    747a:	46ab      	mov	fp, r5
    747c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    747e:	0021      	movs	r1, r4
    7480:	9800      	ldr	r0, [sp, #0]
    7482:	f7fe fc4b 	bl	5d1c <__swsetup_r>
    7486:	2800      	cmp	r0, #0
    7488:	d000      	beq.n	748c <__sfvwrite_r+0x84>
    748a:	e130      	b.n	76ee <__sfvwrite_r+0x2e6>
    748c:	6832      	ldr	r2, [r6, #0]
    748e:	89a3      	ldrh	r3, [r4, #12]
    7490:	4693      	mov	fp, r2
    7492:	079a      	lsls	r2, r3, #30
    7494:	d4cf      	bmi.n	7436 <__sfvwrite_r+0x2e>
    7496:	07da      	lsls	r2, r3, #31
    7498:	d55d      	bpl.n	7556 <__sfvwrite_r+0x14e>
    749a:	2300      	movs	r3, #0
    749c:	2000      	movs	r0, #0
    749e:	469a      	mov	sl, r3
    74a0:	2700      	movs	r7, #0
    74a2:	001d      	movs	r5, r3
    74a4:	46b1      	mov	r9, r6
    74a6:	e029      	b.n	74fc <__sfvwrite_r+0xf4>
    74a8:	2800      	cmp	r0, #0
    74aa:	d033      	beq.n	7514 <__sfvwrite_r+0x10c>
    74ac:	46a8      	mov	r8, r5
    74ae:	42bd      	cmp	r5, r7
    74b0:	d900      	bls.n	74b4 <__sfvwrite_r+0xac>
    74b2:	46b8      	mov	r8, r7
    74b4:	6820      	ldr	r0, [r4, #0]
    74b6:	6922      	ldr	r2, [r4, #16]
    74b8:	4646      	mov	r6, r8
    74ba:	6963      	ldr	r3, [r4, #20]
    74bc:	4290      	cmp	r0, r2
    74be:	d907      	bls.n	74d0 <__sfvwrite_r+0xc8>
    74c0:	68a2      	ldr	r2, [r4, #8]
    74c2:	4694      	mov	ip, r2
    74c4:	449c      	add	ip, r3
    74c6:	4662      	mov	r2, ip
    74c8:	9201      	str	r2, [sp, #4]
    74ca:	45e0      	cmp	r8, ip
    74cc:	dd00      	ble.n	74d0 <__sfvwrite_r+0xc8>
    74ce:	e0e9      	b.n	76a4 <__sfvwrite_r+0x29c>
    74d0:	4598      	cmp	r8, r3
    74d2:	da00      	bge.n	74d6 <__sfvwrite_r+0xce>
    74d4:	e08f      	b.n	75f6 <__sfvwrite_r+0x1ee>
    74d6:	6a66      	ldr	r6, [r4, #36]	; 0x24
    74d8:	4652      	mov	r2, sl
    74da:	69e1      	ldr	r1, [r4, #28]
    74dc:	9800      	ldr	r0, [sp, #0]
    74de:	47b0      	blx	r6
    74e0:	1e06      	subs	r6, r0, #0
    74e2:	dd30      	ble.n	7546 <__sfvwrite_r+0x13e>
    74e4:	1bad      	subs	r5, r5, r6
    74e6:	2001      	movs	r0, #1
    74e8:	2d00      	cmp	r5, #0
    74ea:	d026      	beq.n	753a <__sfvwrite_r+0x132>
    74ec:	464b      	mov	r3, r9
    74ee:	689b      	ldr	r3, [r3, #8]
    74f0:	44b2      	add	sl, r6
    74f2:	1bbf      	subs	r7, r7, r6
    74f4:	1b9e      	subs	r6, r3, r6
    74f6:	464b      	mov	r3, r9
    74f8:	609e      	str	r6, [r3, #8]
    74fa:	d0b8      	beq.n	746e <__sfvwrite_r+0x66>
    74fc:	2f00      	cmp	r7, #0
    74fe:	d1d3      	bne.n	74a8 <__sfvwrite_r+0xa0>
    7500:	465b      	mov	r3, fp
    7502:	681b      	ldr	r3, [r3, #0]
    7504:	469a      	mov	sl, r3
    7506:	465b      	mov	r3, fp
    7508:	685f      	ldr	r7, [r3, #4]
    750a:	2308      	movs	r3, #8
    750c:	469c      	mov	ip, r3
    750e:	44e3      	add	fp, ip
    7510:	2f00      	cmp	r7, #0
    7512:	d0f5      	beq.n	7500 <__sfvwrite_r+0xf8>
    7514:	003a      	movs	r2, r7
    7516:	210a      	movs	r1, #10
    7518:	4650      	mov	r0, sl
    751a:	f000 fc69 	bl	7df0 <memchr>
    751e:	2800      	cmp	r0, #0
    7520:	d100      	bne.n	7524 <__sfvwrite_r+0x11c>
    7522:	e0e2      	b.n	76ea <__sfvwrite_r+0x2e2>
    7524:	4653      	mov	r3, sl
    7526:	3001      	adds	r0, #1
    7528:	1ac5      	subs	r5, r0, r3
    752a:	e7bf      	b.n	74ac <__sfvwrite_r+0xa4>
    752c:	465b      	mov	r3, fp
    752e:	681f      	ldr	r7, [r3, #0]
    7530:	685d      	ldr	r5, [r3, #4]
    7532:	2308      	movs	r3, #8
    7534:	469c      	mov	ip, r3
    7536:	44e3      	add	fp, ip
    7538:	e782      	b.n	7440 <__sfvwrite_r+0x38>
    753a:	0021      	movs	r1, r4
    753c:	9800      	ldr	r0, [sp, #0]
    753e:	f7ff fd81 	bl	7044 <_fflush_r>
    7542:	2800      	cmp	r0, #0
    7544:	d0d2      	beq.n	74ec <__sfvwrite_r+0xe4>
    7546:	220c      	movs	r2, #12
    7548:	5ea3      	ldrsh	r3, [r4, r2]
    754a:	2240      	movs	r2, #64	; 0x40
    754c:	2001      	movs	r0, #1
    754e:	4313      	orrs	r3, r2
    7550:	81a3      	strh	r3, [r4, #12]
    7552:	4240      	negs	r0, r0
    7554:	e78c      	b.n	7470 <__sfvwrite_r+0x68>
    7556:	2200      	movs	r2, #0
    7558:	4691      	mov	r9, r2
    755a:	464d      	mov	r5, r9
    755c:	2d00      	cmp	r5, #0
    755e:	d023      	beq.n	75a8 <__sfvwrite_r+0x1a0>
    7560:	68a2      	ldr	r2, [r4, #8]
    7562:	4690      	mov	r8, r2
    7564:	2280      	movs	r2, #128	; 0x80
    7566:	0092      	lsls	r2, r2, #2
    7568:	4213      	tst	r3, r2
    756a:	d026      	beq.n	75ba <__sfvwrite_r+0x1b2>
    756c:	46c2      	mov	sl, r8
    756e:	4545      	cmp	r5, r8
    7570:	d34d      	bcc.n	760e <__sfvwrite_r+0x206>
    7572:	2290      	movs	r2, #144	; 0x90
    7574:	00d2      	lsls	r2, r2, #3
    7576:	4213      	tst	r3, r2
    7578:	d14e      	bne.n	7618 <__sfvwrite_r+0x210>
    757a:	002f      	movs	r7, r5
    757c:	6820      	ldr	r0, [r4, #0]
    757e:	4652      	mov	r2, sl
    7580:	4649      	mov	r1, r9
    7582:	f000 fc75 	bl	7e70 <memmove>
    7586:	4642      	mov	r2, r8
    7588:	68a3      	ldr	r3, [r4, #8]
    758a:	1a98      	subs	r0, r3, r2
    758c:	6823      	ldr	r3, [r4, #0]
    758e:	60a0      	str	r0, [r4, #8]
    7590:	4453      	add	r3, sl
    7592:	6023      	str	r3, [r4, #0]
    7594:	68b3      	ldr	r3, [r6, #8]
    7596:	44b9      	add	r9, r7
    7598:	1bed      	subs	r5, r5, r7
    759a:	1bdf      	subs	r7, r3, r7
    759c:	60b7      	str	r7, [r6, #8]
    759e:	d100      	bne.n	75a2 <__sfvwrite_r+0x19a>
    75a0:	e765      	b.n	746e <__sfvwrite_r+0x66>
    75a2:	89a3      	ldrh	r3, [r4, #12]
    75a4:	2d00      	cmp	r5, #0
    75a6:	d1db      	bne.n	7560 <__sfvwrite_r+0x158>
    75a8:	465a      	mov	r2, fp
    75aa:	6812      	ldr	r2, [r2, #0]
    75ac:	4691      	mov	r9, r2
    75ae:	465a      	mov	r2, fp
    75b0:	6855      	ldr	r5, [r2, #4]
    75b2:	2208      	movs	r2, #8
    75b4:	4694      	mov	ip, r2
    75b6:	44e3      	add	fp, ip
    75b8:	e7d0      	b.n	755c <__sfvwrite_r+0x154>
    75ba:	6820      	ldr	r0, [r4, #0]
    75bc:	6923      	ldr	r3, [r4, #16]
    75be:	4298      	cmp	r0, r3
    75c0:	d802      	bhi.n	75c8 <__sfvwrite_r+0x1c0>
    75c2:	6967      	ldr	r7, [r4, #20]
    75c4:	42bd      	cmp	r5, r7
    75c6:	d259      	bcs.n	767c <__sfvwrite_r+0x274>
    75c8:	4647      	mov	r7, r8
    75ca:	42af      	cmp	r7, r5
    75cc:	d900      	bls.n	75d0 <__sfvwrite_r+0x1c8>
    75ce:	002f      	movs	r7, r5
    75d0:	003a      	movs	r2, r7
    75d2:	4649      	mov	r1, r9
    75d4:	f000 fc4c 	bl	7e70 <memmove>
    75d8:	68a3      	ldr	r3, [r4, #8]
    75da:	6822      	ldr	r2, [r4, #0]
    75dc:	1bdb      	subs	r3, r3, r7
    75de:	19d2      	adds	r2, r2, r7
    75e0:	60a3      	str	r3, [r4, #8]
    75e2:	6022      	str	r2, [r4, #0]
    75e4:	2b00      	cmp	r3, #0
    75e6:	d1d5      	bne.n	7594 <__sfvwrite_r+0x18c>
    75e8:	0021      	movs	r1, r4
    75ea:	9800      	ldr	r0, [sp, #0]
    75ec:	f7ff fd2a 	bl	7044 <_fflush_r>
    75f0:	2800      	cmp	r0, #0
    75f2:	d0cf      	beq.n	7594 <__sfvwrite_r+0x18c>
    75f4:	e7a7      	b.n	7546 <__sfvwrite_r+0x13e>
    75f6:	4642      	mov	r2, r8
    75f8:	4651      	mov	r1, sl
    75fa:	f000 fc39 	bl	7e70 <memmove>
    75fe:	4642      	mov	r2, r8
    7600:	68a3      	ldr	r3, [r4, #8]
    7602:	1a9b      	subs	r3, r3, r2
    7604:	60a3      	str	r3, [r4, #8]
    7606:	6823      	ldr	r3, [r4, #0]
    7608:	4443      	add	r3, r8
    760a:	6023      	str	r3, [r4, #0]
    760c:	e76a      	b.n	74e4 <__sfvwrite_r+0xdc>
    760e:	46a8      	mov	r8, r5
    7610:	6820      	ldr	r0, [r4, #0]
    7612:	002f      	movs	r7, r5
    7614:	46aa      	mov	sl, r5
    7616:	e7b2      	b.n	757e <__sfvwrite_r+0x176>
    7618:	6921      	ldr	r1, [r4, #16]
    761a:	6822      	ldr	r2, [r4, #0]
    761c:	1a52      	subs	r2, r2, r1
    761e:	4692      	mov	sl, r2
    7620:	6962      	ldr	r2, [r4, #20]
    7622:	0057      	lsls	r7, r2, #1
    7624:	18bf      	adds	r7, r7, r2
    7626:	0ffa      	lsrs	r2, r7, #31
    7628:	19d7      	adds	r7, r2, r7
    762a:	4652      	mov	r2, sl
    762c:	1c50      	adds	r0, r2, #1
    762e:	107f      	asrs	r7, r7, #1
    7630:	1940      	adds	r0, r0, r5
    7632:	003a      	movs	r2, r7
    7634:	42b8      	cmp	r0, r7
    7636:	d901      	bls.n	763c <__sfvwrite_r+0x234>
    7638:	0007      	movs	r7, r0
    763a:	0002      	movs	r2, r0
    763c:	055b      	lsls	r3, r3, #21
    763e:	d542      	bpl.n	76c6 <__sfvwrite_r+0x2be>
    7640:	0011      	movs	r1, r2
    7642:	9800      	ldr	r0, [sp, #0]
    7644:	f000 f920 	bl	7888 <_malloc_r>
    7648:	4680      	mov	r8, r0
    764a:	1e03      	subs	r3, r0, #0
    764c:	d052      	beq.n	76f4 <__sfvwrite_r+0x2ec>
    764e:	4652      	mov	r2, sl
    7650:	6921      	ldr	r1, [r4, #16]
    7652:	f7fc fe09 	bl	4268 <memcpy>
    7656:	89a3      	ldrh	r3, [r4, #12]
    7658:	4a2a      	ldr	r2, [pc, #168]	; (7704 <__sfvwrite_r+0x2fc>)
    765a:	4013      	ands	r3, r2
    765c:	2280      	movs	r2, #128	; 0x80
    765e:	4313      	orrs	r3, r2
    7660:	81a3      	strh	r3, [r4, #12]
    7662:	4643      	mov	r3, r8
    7664:	4640      	mov	r0, r8
    7666:	6123      	str	r3, [r4, #16]
    7668:	4653      	mov	r3, sl
    766a:	4450      	add	r0, sl
    766c:	6167      	str	r7, [r4, #20]
    766e:	1aff      	subs	r7, r7, r3
    7670:	60a7      	str	r7, [r4, #8]
    7672:	6020      	str	r0, [r4, #0]
    7674:	46a8      	mov	r8, r5
    7676:	002f      	movs	r7, r5
    7678:	46aa      	mov	sl, r5
    767a:	e780      	b.n	757e <__sfvwrite_r+0x176>
    767c:	4b22      	ldr	r3, [pc, #136]	; (7708 <__sfvwrite_r+0x300>)
    767e:	0028      	movs	r0, r5
    7680:	429d      	cmp	r5, r3
    7682:	d900      	bls.n	7686 <__sfvwrite_r+0x27e>
    7684:	0018      	movs	r0, r3
    7686:	0039      	movs	r1, r7
    7688:	f001 fcba 	bl	9000 <__divsi3>
    768c:	003b      	movs	r3, r7
    768e:	464a      	mov	r2, r9
    7690:	4343      	muls	r3, r0
    7692:	69e1      	ldr	r1, [r4, #28]
    7694:	9800      	ldr	r0, [sp, #0]
    7696:	6a67      	ldr	r7, [r4, #36]	; 0x24
    7698:	47b8      	blx	r7
    769a:	2800      	cmp	r0, #0
    769c:	dc00      	bgt.n	76a0 <__sfvwrite_r+0x298>
    769e:	e752      	b.n	7546 <__sfvwrite_r+0x13e>
    76a0:	0007      	movs	r7, r0
    76a2:	e777      	b.n	7594 <__sfvwrite_r+0x18c>
    76a4:	4666      	mov	r6, ip
    76a6:	4651      	mov	r1, sl
    76a8:	f000 fbe2 	bl	7e70 <memmove>
    76ac:	46b4      	mov	ip, r6
    76ae:	6823      	ldr	r3, [r4, #0]
    76b0:	0021      	movs	r1, r4
    76b2:	4463      	add	r3, ip
    76b4:	6023      	str	r3, [r4, #0]
    76b6:	9800      	ldr	r0, [sp, #0]
    76b8:	f7ff fcc4 	bl	7044 <_fflush_r>
    76bc:	2800      	cmp	r0, #0
    76be:	d000      	beq.n	76c2 <__sfvwrite_r+0x2ba>
    76c0:	e741      	b.n	7546 <__sfvwrite_r+0x13e>
    76c2:	9e01      	ldr	r6, [sp, #4]
    76c4:	e70e      	b.n	74e4 <__sfvwrite_r+0xdc>
    76c6:	9800      	ldr	r0, [sp, #0]
    76c8:	f000 ff7a 	bl	85c0 <_realloc_r>
    76cc:	4680      	mov	r8, r0
    76ce:	2800      	cmp	r0, #0
    76d0:	d1c7      	bne.n	7662 <__sfvwrite_r+0x25a>
    76d2:	9d00      	ldr	r5, [sp, #0]
    76d4:	6921      	ldr	r1, [r4, #16]
    76d6:	0028      	movs	r0, r5
    76d8:	f7ff fdb8 	bl	724c <_free_r>
    76dc:	2280      	movs	r2, #128	; 0x80
    76de:	89a3      	ldrh	r3, [r4, #12]
    76e0:	4393      	bics	r3, r2
    76e2:	3a74      	subs	r2, #116	; 0x74
    76e4:	b21b      	sxth	r3, r3
    76e6:	602a      	str	r2, [r5, #0]
    76e8:	e72f      	b.n	754a <__sfvwrite_r+0x142>
    76ea:	1c7d      	adds	r5, r7, #1
    76ec:	e6de      	b.n	74ac <__sfvwrite_r+0xa4>
    76ee:	2001      	movs	r0, #1
    76f0:	4240      	negs	r0, r0
    76f2:	e6bd      	b.n	7470 <__sfvwrite_r+0x68>
    76f4:	9a00      	ldr	r2, [sp, #0]
    76f6:	330c      	adds	r3, #12
    76f8:	6013      	str	r3, [r2, #0]
    76fa:	220c      	movs	r2, #12
    76fc:	5ea3      	ldrsh	r3, [r4, r2]
    76fe:	e724      	b.n	754a <__sfvwrite_r+0x142>
    7700:	7ffffc00 	.word	0x7ffffc00
    7704:	fffffb7f 	.word	0xfffffb7f
    7708:	7fffffff 	.word	0x7fffffff

0000770c <_fwalk_reent>:
    770c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    770e:	4647      	mov	r7, r8
    7710:	46ce      	mov	lr, r9
    7712:	b580      	push	{r7, lr}
    7714:	27b8      	movs	r7, #184	; 0xb8
    7716:	4680      	mov	r8, r0
    7718:	00bf      	lsls	r7, r7, #2
    771a:	4447      	add	r7, r8
    771c:	4689      	mov	r9, r1
    771e:	2600      	movs	r6, #0
    7720:	2f00      	cmp	r7, #0
    7722:	d014      	beq.n	774e <_fwalk_reent+0x42>
    7724:	687b      	ldr	r3, [r7, #4]
    7726:	68bc      	ldr	r4, [r7, #8]
    7728:	1e5d      	subs	r5, r3, #1
    772a:	d40d      	bmi.n	7748 <_fwalk_reent+0x3c>
    772c:	89a3      	ldrh	r3, [r4, #12]
    772e:	2b01      	cmp	r3, #1
    7730:	d907      	bls.n	7742 <_fwalk_reent+0x36>
    7732:	220e      	movs	r2, #14
    7734:	5ea3      	ldrsh	r3, [r4, r2]
    7736:	3301      	adds	r3, #1
    7738:	d003      	beq.n	7742 <_fwalk_reent+0x36>
    773a:	0021      	movs	r1, r4
    773c:	4640      	mov	r0, r8
    773e:	47c8      	blx	r9
    7740:	4306      	orrs	r6, r0
    7742:	3468      	adds	r4, #104	; 0x68
    7744:	3d01      	subs	r5, #1
    7746:	d2f1      	bcs.n	772c <_fwalk_reent+0x20>
    7748:	683f      	ldr	r7, [r7, #0]
    774a:	2f00      	cmp	r7, #0
    774c:	d1ea      	bne.n	7724 <_fwalk_reent+0x18>
    774e:	0030      	movs	r0, r6
    7750:	bc0c      	pop	{r2, r3}
    7752:	4690      	mov	r8, r2
    7754:	4699      	mov	r9, r3
    7756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00007758 <_localeconv_r>:
    7758:	4b04      	ldr	r3, [pc, #16]	; (776c <_localeconv_r+0x14>)
    775a:	681b      	ldr	r3, [r3, #0]
    775c:	6b58      	ldr	r0, [r3, #52]	; 0x34
    775e:	2800      	cmp	r0, #0
    7760:	d001      	beq.n	7766 <_localeconv_r+0xe>
    7762:	30f0      	adds	r0, #240	; 0xf0
    7764:	4770      	bx	lr
    7766:	4802      	ldr	r0, [pc, #8]	; (7770 <_localeconv_r+0x18>)
    7768:	e7fb      	b.n	7762 <_localeconv_r+0xa>
    776a:	46c0      	nop			; (mov r8, r8)
    776c:	2000007c 	.word	0x2000007c
    7770:	200008bc 	.word	0x200008bc

00007774 <__retarget_lock_init_recursive>:
    7774:	4770      	bx	lr
    7776:	46c0      	nop			; (mov r8, r8)

00007778 <__retarget_lock_close_recursive>:
    7778:	4770      	bx	lr
    777a:	46c0      	nop			; (mov r8, r8)

0000777c <__retarget_lock_acquire_recursive>:
    777c:	4770      	bx	lr
    777e:	46c0      	nop			; (mov r8, r8)

00007780 <__retarget_lock_release_recursive>:
    7780:	4770      	bx	lr
    7782:	46c0      	nop			; (mov r8, r8)

00007784 <__swhatbuf_r>:
    7784:	b570      	push	{r4, r5, r6, lr}
    7786:	000c      	movs	r4, r1
    7788:	001e      	movs	r6, r3
    778a:	230e      	movs	r3, #14
    778c:	5ec9      	ldrsh	r1, [r1, r3]
    778e:	b090      	sub	sp, #64	; 0x40
    7790:	0015      	movs	r5, r2
    7792:	2900      	cmp	r1, #0
    7794:	db15      	blt.n	77c2 <__swhatbuf_r+0x3e>
    7796:	aa01      	add	r2, sp, #4
    7798:	f001 fb28 	bl	8dec <_fstat_r>
    779c:	2800      	cmp	r0, #0
    779e:	db10      	blt.n	77c2 <__swhatbuf_r+0x3e>
    77a0:	22f0      	movs	r2, #240	; 0xf0
    77a2:	9b02      	ldr	r3, [sp, #8]
    77a4:	0212      	lsls	r2, r2, #8
    77a6:	4013      	ands	r3, r2
    77a8:	4a0d      	ldr	r2, [pc, #52]	; (77e0 <__swhatbuf_r+0x5c>)
    77aa:	2080      	movs	r0, #128	; 0x80
    77ac:	4694      	mov	ip, r2
    77ae:	4463      	add	r3, ip
    77b0:	425a      	negs	r2, r3
    77b2:	4153      	adcs	r3, r2
    77b4:	6033      	str	r3, [r6, #0]
    77b6:	2380      	movs	r3, #128	; 0x80
    77b8:	00db      	lsls	r3, r3, #3
    77ba:	602b      	str	r3, [r5, #0]
    77bc:	0100      	lsls	r0, r0, #4
    77be:	b010      	add	sp, #64	; 0x40
    77c0:	bd70      	pop	{r4, r5, r6, pc}
    77c2:	2300      	movs	r3, #0
    77c4:	6033      	str	r3, [r6, #0]
    77c6:	89a3      	ldrh	r3, [r4, #12]
    77c8:	061b      	lsls	r3, r3, #24
    77ca:	d503      	bpl.n	77d4 <__swhatbuf_r+0x50>
    77cc:	2340      	movs	r3, #64	; 0x40
    77ce:	2000      	movs	r0, #0
    77d0:	602b      	str	r3, [r5, #0]
    77d2:	e7f4      	b.n	77be <__swhatbuf_r+0x3a>
    77d4:	2380      	movs	r3, #128	; 0x80
    77d6:	00db      	lsls	r3, r3, #3
    77d8:	602b      	str	r3, [r5, #0]
    77da:	2000      	movs	r0, #0
    77dc:	e7ef      	b.n	77be <__swhatbuf_r+0x3a>
    77de:	46c0      	nop			; (mov r8, r8)
    77e0:	ffffe000 	.word	0xffffe000

000077e4 <__smakebuf_r>:
    77e4:	b570      	push	{r4, r5, r6, lr}
    77e6:	898b      	ldrh	r3, [r1, #12]
    77e8:	b082      	sub	sp, #8
    77ea:	0006      	movs	r6, r0
    77ec:	000c      	movs	r4, r1
    77ee:	079b      	lsls	r3, r3, #30
    77f0:	d507      	bpl.n	7802 <__smakebuf_r+0x1e>
    77f2:	0023      	movs	r3, r4
    77f4:	3343      	adds	r3, #67	; 0x43
    77f6:	6023      	str	r3, [r4, #0]
    77f8:	6123      	str	r3, [r4, #16]
    77fa:	2301      	movs	r3, #1
    77fc:	6163      	str	r3, [r4, #20]
    77fe:	b002      	add	sp, #8
    7800:	bd70      	pop	{r4, r5, r6, pc}
    7802:	ab01      	add	r3, sp, #4
    7804:	466a      	mov	r2, sp
    7806:	f7ff ffbd 	bl	7784 <__swhatbuf_r>
    780a:	9900      	ldr	r1, [sp, #0]
    780c:	0005      	movs	r5, r0
    780e:	0030      	movs	r0, r6
    7810:	f000 f83a 	bl	7888 <_malloc_r>
    7814:	2800      	cmp	r0, #0
    7816:	d01e      	beq.n	7856 <__smakebuf_r+0x72>
    7818:	2280      	movs	r2, #128	; 0x80
    781a:	4b15      	ldr	r3, [pc, #84]	; (7870 <__smakebuf_r+0x8c>)
    781c:	63f3      	str	r3, [r6, #60]	; 0x3c
    781e:	89a3      	ldrh	r3, [r4, #12]
    7820:	6020      	str	r0, [r4, #0]
    7822:	4313      	orrs	r3, r2
    7824:	9a00      	ldr	r2, [sp, #0]
    7826:	b21b      	sxth	r3, r3
    7828:	6162      	str	r2, [r4, #20]
    782a:	9a01      	ldr	r2, [sp, #4]
    782c:	81a3      	strh	r3, [r4, #12]
    782e:	6120      	str	r0, [r4, #16]
    7830:	2a00      	cmp	r2, #0
    7832:	d102      	bne.n	783a <__smakebuf_r+0x56>
    7834:	432b      	orrs	r3, r5
    7836:	81a3      	strh	r3, [r4, #12]
    7838:	e7e1      	b.n	77fe <__smakebuf_r+0x1a>
    783a:	230e      	movs	r3, #14
    783c:	5ee1      	ldrsh	r1, [r4, r3]
    783e:	0030      	movs	r0, r6
    7840:	f001 fae8 	bl	8e14 <_isatty_r>
    7844:	2800      	cmp	r0, #0
    7846:	d010      	beq.n	786a <__smakebuf_r+0x86>
    7848:	2203      	movs	r2, #3
    784a:	89a3      	ldrh	r3, [r4, #12]
    784c:	4393      	bics	r3, r2
    784e:	2201      	movs	r2, #1
    7850:	4313      	orrs	r3, r2
    7852:	b21b      	sxth	r3, r3
    7854:	e7ee      	b.n	7834 <__smakebuf_r+0x50>
    7856:	220c      	movs	r2, #12
    7858:	5ea3      	ldrsh	r3, [r4, r2]
    785a:	059a      	lsls	r2, r3, #22
    785c:	d4cf      	bmi.n	77fe <__smakebuf_r+0x1a>
    785e:	2203      	movs	r2, #3
    7860:	4393      	bics	r3, r2
    7862:	2202      	movs	r2, #2
    7864:	4313      	orrs	r3, r2
    7866:	81a3      	strh	r3, [r4, #12]
    7868:	e7c3      	b.n	77f2 <__smakebuf_r+0xe>
    786a:	220c      	movs	r2, #12
    786c:	5ea3      	ldrsh	r3, [r4, r2]
    786e:	e7e1      	b.n	7834 <__smakebuf_r+0x50>
    7870:	00007099 	.word	0x00007099

00007874 <malloc>:
    7874:	b510      	push	{r4, lr}
    7876:	4b03      	ldr	r3, [pc, #12]	; (7884 <malloc+0x10>)
    7878:	0001      	movs	r1, r0
    787a:	6818      	ldr	r0, [r3, #0]
    787c:	f000 f804 	bl	7888 <_malloc_r>
    7880:	bd10      	pop	{r4, pc}
    7882:	46c0      	nop			; (mov r8, r8)
    7884:	2000007c 	.word	0x2000007c

00007888 <_malloc_r>:
    7888:	b5f0      	push	{r4, r5, r6, r7, lr}
    788a:	4657      	mov	r7, sl
    788c:	4645      	mov	r5, r8
    788e:	46de      	mov	lr, fp
    7890:	464e      	mov	r6, r9
    7892:	b5e0      	push	{r5, r6, r7, lr}
    7894:	000d      	movs	r5, r1
    7896:	350b      	adds	r5, #11
    7898:	b083      	sub	sp, #12
    789a:	0007      	movs	r7, r0
    789c:	2d16      	cmp	r5, #22
    789e:	d800      	bhi.n	78a2 <_malloc_r+0x1a>
    78a0:	e09f      	b.n	79e2 <_malloc_r+0x15a>
    78a2:	2307      	movs	r3, #7
    78a4:	439d      	bics	r5, r3
    78a6:	d500      	bpl.n	78aa <_malloc_r+0x22>
    78a8:	e0c4      	b.n	7a34 <_malloc_r+0x1ac>
    78aa:	42a9      	cmp	r1, r5
    78ac:	d900      	bls.n	78b0 <_malloc_r+0x28>
    78ae:	e0c1      	b.n	7a34 <_malloc_r+0x1ac>
    78b0:	f000 fb2e 	bl	7f10 <__malloc_lock>
    78b4:	23f8      	movs	r3, #248	; 0xf8
    78b6:	33ff      	adds	r3, #255	; 0xff
    78b8:	429d      	cmp	r5, r3
    78ba:	d800      	bhi.n	78be <_malloc_r+0x36>
    78bc:	e28f      	b.n	7dde <_malloc_r+0x556>
    78be:	0a68      	lsrs	r0, r5, #9
    78c0:	d100      	bne.n	78c4 <_malloc_r+0x3c>
    78c2:	e0bb      	b.n	7a3c <_malloc_r+0x1b4>
    78c4:	2804      	cmp	r0, #4
    78c6:	d900      	bls.n	78ca <_malloc_r+0x42>
    78c8:	e162      	b.n	7b90 <_malloc_r+0x308>
    78ca:	2338      	movs	r3, #56	; 0x38
    78cc:	4698      	mov	r8, r3
    78ce:	09a8      	lsrs	r0, r5, #6
    78d0:	4480      	add	r8, r0
    78d2:	3039      	adds	r0, #57	; 0x39
    78d4:	00c1      	lsls	r1, r0, #3
    78d6:	4ed2      	ldr	r6, [pc, #840]	; (7c20 <_malloc_r+0x398>)
    78d8:	1871      	adds	r1, r6, r1
    78da:	3908      	subs	r1, #8
    78dc:	68cc      	ldr	r4, [r1, #12]
    78de:	42a1      	cmp	r1, r4
    78e0:	d019      	beq.n	7916 <_malloc_r+0x8e>
    78e2:	2303      	movs	r3, #3
    78e4:	6862      	ldr	r2, [r4, #4]
    78e6:	439a      	bics	r2, r3
    78e8:	0013      	movs	r3, r2
    78ea:	1b52      	subs	r2, r2, r5
    78ec:	2a0f      	cmp	r2, #15
    78ee:	dd00      	ble.n	78f2 <_malloc_r+0x6a>
    78f0:	e0aa      	b.n	7a48 <_malloc_r+0x1c0>
    78f2:	2a00      	cmp	r2, #0
    78f4:	db00      	blt.n	78f8 <_malloc_r+0x70>
    78f6:	e088      	b.n	7a0a <_malloc_r+0x182>
    78f8:	2303      	movs	r3, #3
    78fa:	469c      	mov	ip, r3
    78fc:	e008      	b.n	7910 <_malloc_r+0x88>
    78fe:	4662      	mov	r2, ip
    7900:	6863      	ldr	r3, [r4, #4]
    7902:	4393      	bics	r3, r2
    7904:	1b5a      	subs	r2, r3, r5
    7906:	2a0f      	cmp	r2, #15
    7908:	dd00      	ble.n	790c <_malloc_r+0x84>
    790a:	e09d      	b.n	7a48 <_malloc_r+0x1c0>
    790c:	2a00      	cmp	r2, #0
    790e:	da7c      	bge.n	7a0a <_malloc_r+0x182>
    7910:	68e4      	ldr	r4, [r4, #12]
    7912:	42a1      	cmp	r1, r4
    7914:	d1f3      	bne.n	78fe <_malloc_r+0x76>
    7916:	0032      	movs	r2, r6
    7918:	6934      	ldr	r4, [r6, #16]
    791a:	3208      	adds	r2, #8
    791c:	4294      	cmp	r4, r2
    791e:	d100      	bne.n	7922 <_malloc_r+0x9a>
    7920:	e190      	b.n	7c44 <_malloc_r+0x3bc>
    7922:	2303      	movs	r3, #3
    7924:	6861      	ldr	r1, [r4, #4]
    7926:	4399      	bics	r1, r3
    7928:	4689      	mov	r9, r1
    792a:	1b49      	subs	r1, r1, r5
    792c:	290f      	cmp	r1, #15
    792e:	dd00      	ble.n	7932 <_malloc_r+0xaa>
    7930:	e162      	b.n	7bf8 <_malloc_r+0x370>
    7932:	6172      	str	r2, [r6, #20]
    7934:	6132      	str	r2, [r6, #16]
    7936:	2900      	cmp	r1, #0
    7938:	db00      	blt.n	793c <_malloc_r+0xb4>
    793a:	e087      	b.n	7a4c <_malloc_r+0x1c4>
    793c:	4ab9      	ldr	r2, [pc, #740]	; (7c24 <_malloc_r+0x39c>)
    793e:	464b      	mov	r3, r9
    7940:	4591      	cmp	r9, r2
    7942:	d900      	bls.n	7946 <_malloc_r+0xbe>
    7944:	e130      	b.n	7ba8 <_malloc_r+0x320>
    7946:	08db      	lsrs	r3, r3, #3
    7948:	3aff      	subs	r2, #255	; 0xff
    794a:	1099      	asrs	r1, r3, #2
    794c:	3aff      	subs	r2, #255	; 0xff
    794e:	408a      	lsls	r2, r1
    7950:	00db      	lsls	r3, r3, #3
    7952:	6871      	ldr	r1, [r6, #4]
    7954:	199b      	adds	r3, r3, r6
    7956:	430a      	orrs	r2, r1
    7958:	6899      	ldr	r1, [r3, #8]
    795a:	6072      	str	r2, [r6, #4]
    795c:	60e3      	str	r3, [r4, #12]
    795e:	60a1      	str	r1, [r4, #8]
    7960:	609c      	str	r4, [r3, #8]
    7962:	0013      	movs	r3, r2
    7964:	60cc      	str	r4, [r1, #12]
    7966:	2101      	movs	r1, #1
    7968:	1082      	asrs	r2, r0, #2
    796a:	4091      	lsls	r1, r2
    796c:	4299      	cmp	r1, r3
    796e:	d86f      	bhi.n	7a50 <_malloc_r+0x1c8>
    7970:	420b      	tst	r3, r1
    7972:	d105      	bne.n	7980 <_malloc_r+0xf8>
    7974:	2203      	movs	r2, #3
    7976:	4390      	bics	r0, r2
    7978:	0049      	lsls	r1, r1, #1
    797a:	3004      	adds	r0, #4
    797c:	420b      	tst	r3, r1
    797e:	d0fb      	beq.n	7978 <_malloc_r+0xf0>
    7980:	2303      	movs	r3, #3
    7982:	4698      	mov	r8, r3
    7984:	00c3      	lsls	r3, r0, #3
    7986:	4699      	mov	r9, r3
    7988:	44b1      	add	r9, r6
    798a:	46cc      	mov	ip, r9
    798c:	4682      	mov	sl, r0
    798e:	4663      	mov	r3, ip
    7990:	68dc      	ldr	r4, [r3, #12]
    7992:	45a4      	cmp	ip, r4
    7994:	d107      	bne.n	79a6 <_malloc_r+0x11e>
    7996:	e157      	b.n	7c48 <_malloc_r+0x3c0>
    7998:	2a00      	cmp	r2, #0
    799a:	db00      	blt.n	799e <_malloc_r+0x116>
    799c:	e166      	b.n	7c6c <_malloc_r+0x3e4>
    799e:	68e4      	ldr	r4, [r4, #12]
    79a0:	45a4      	cmp	ip, r4
    79a2:	d100      	bne.n	79a6 <_malloc_r+0x11e>
    79a4:	e150      	b.n	7c48 <_malloc_r+0x3c0>
    79a6:	4642      	mov	r2, r8
    79a8:	6863      	ldr	r3, [r4, #4]
    79aa:	4393      	bics	r3, r2
    79ac:	1b5a      	subs	r2, r3, r5
    79ae:	2a0f      	cmp	r2, #15
    79b0:	ddf2      	ble.n	7998 <_malloc_r+0x110>
    79b2:	2001      	movs	r0, #1
    79b4:	4680      	mov	r8, r0
    79b6:	1961      	adds	r1, r4, r5
    79b8:	4305      	orrs	r5, r0
    79ba:	6065      	str	r5, [r4, #4]
    79bc:	68a0      	ldr	r0, [r4, #8]
    79be:	68e5      	ldr	r5, [r4, #12]
    79c0:	3608      	adds	r6, #8
    79c2:	60c5      	str	r5, [r0, #12]
    79c4:	60a8      	str	r0, [r5, #8]
    79c6:	4640      	mov	r0, r8
    79c8:	60f1      	str	r1, [r6, #12]
    79ca:	60b1      	str	r1, [r6, #8]
    79cc:	4310      	orrs	r0, r2
    79ce:	6048      	str	r0, [r1, #4]
    79d0:	60ce      	str	r6, [r1, #12]
    79d2:	608e      	str	r6, [r1, #8]
    79d4:	0038      	movs	r0, r7
    79d6:	50e2      	str	r2, [r4, r3]
    79d8:	f000 faa2 	bl	7f20 <__malloc_unlock>
    79dc:	0020      	movs	r0, r4
    79de:	3008      	adds	r0, #8
    79e0:	e021      	b.n	7a26 <_malloc_r+0x19e>
    79e2:	2910      	cmp	r1, #16
    79e4:	d826      	bhi.n	7a34 <_malloc_r+0x1ac>
    79e6:	0038      	movs	r0, r7
    79e8:	f000 fa92 	bl	7f10 <__malloc_lock>
    79ec:	2510      	movs	r5, #16
    79ee:	2318      	movs	r3, #24
    79f0:	2002      	movs	r0, #2
    79f2:	4e8b      	ldr	r6, [pc, #556]	; (7c20 <_malloc_r+0x398>)
    79f4:	18f3      	adds	r3, r6, r3
    79f6:	001a      	movs	r2, r3
    79f8:	685c      	ldr	r4, [r3, #4]
    79fa:	3a08      	subs	r2, #8
    79fc:	4294      	cmp	r4, r2
    79fe:	d100      	bne.n	7a02 <_malloc_r+0x17a>
    7a00:	e12e      	b.n	7c60 <_malloc_r+0x3d8>
    7a02:	2303      	movs	r3, #3
    7a04:	6862      	ldr	r2, [r4, #4]
    7a06:	439a      	bics	r2, r3
    7a08:	0013      	movs	r3, r2
    7a0a:	68e2      	ldr	r2, [r4, #12]
    7a0c:	68a1      	ldr	r1, [r4, #8]
    7a0e:	60ca      	str	r2, [r1, #12]
    7a10:	6091      	str	r1, [r2, #8]
    7a12:	2201      	movs	r2, #1
    7a14:	18e3      	adds	r3, r4, r3
    7a16:	6859      	ldr	r1, [r3, #4]
    7a18:	0038      	movs	r0, r7
    7a1a:	430a      	orrs	r2, r1
    7a1c:	605a      	str	r2, [r3, #4]
    7a1e:	f000 fa7f 	bl	7f20 <__malloc_unlock>
    7a22:	0020      	movs	r0, r4
    7a24:	3008      	adds	r0, #8
    7a26:	b003      	add	sp, #12
    7a28:	bc3c      	pop	{r2, r3, r4, r5}
    7a2a:	4690      	mov	r8, r2
    7a2c:	4699      	mov	r9, r3
    7a2e:	46a2      	mov	sl, r4
    7a30:	46ab      	mov	fp, r5
    7a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7a34:	230c      	movs	r3, #12
    7a36:	2000      	movs	r0, #0
    7a38:	603b      	str	r3, [r7, #0]
    7a3a:	e7f4      	b.n	7a26 <_malloc_r+0x19e>
    7a3c:	2180      	movs	r1, #128	; 0x80
    7a3e:	233f      	movs	r3, #63	; 0x3f
    7a40:	2040      	movs	r0, #64	; 0x40
    7a42:	0089      	lsls	r1, r1, #2
    7a44:	4698      	mov	r8, r3
    7a46:	e746      	b.n	78d6 <_malloc_r+0x4e>
    7a48:	4640      	mov	r0, r8
    7a4a:	e764      	b.n	7916 <_malloc_r+0x8e>
    7a4c:	464b      	mov	r3, r9
    7a4e:	e7e0      	b.n	7a12 <_malloc_r+0x18a>
    7a50:	2303      	movs	r3, #3
    7a52:	68b4      	ldr	r4, [r6, #8]
    7a54:	6862      	ldr	r2, [r4, #4]
    7a56:	439a      	bics	r2, r3
    7a58:	4690      	mov	r8, r2
    7a5a:	42aa      	cmp	r2, r5
    7a5c:	d303      	bcc.n	7a66 <_malloc_r+0x1de>
    7a5e:	1b53      	subs	r3, r2, r5
    7a60:	2b0f      	cmp	r3, #15
    7a62:	dd00      	ble.n	7a66 <_malloc_r+0x1de>
    7a64:	e086      	b.n	7b74 <_malloc_r+0x2ec>
    7a66:	0023      	movs	r3, r4
    7a68:	4443      	add	r3, r8
    7a6a:	4a6f      	ldr	r2, [pc, #444]	; (7c28 <_malloc_r+0x3a0>)
    7a6c:	9301      	str	r3, [sp, #4]
    7a6e:	4b6f      	ldr	r3, [pc, #444]	; (7c2c <_malloc_r+0x3a4>)
    7a70:	4693      	mov	fp, r2
    7a72:	681b      	ldr	r3, [r3, #0]
    7a74:	6812      	ldr	r2, [r2, #0]
    7a76:	18eb      	adds	r3, r5, r3
    7a78:	3201      	adds	r2, #1
    7a7a:	d100      	bne.n	7a7e <_malloc_r+0x1f6>
    7a7c:	e168      	b.n	7d50 <_malloc_r+0x4c8>
    7a7e:	4a6c      	ldr	r2, [pc, #432]	; (7c30 <_malloc_r+0x3a8>)
    7a80:	4694      	mov	ip, r2
    7a82:	4463      	add	r3, ip
    7a84:	0b1b      	lsrs	r3, r3, #12
    7a86:	031b      	lsls	r3, r3, #12
    7a88:	9300      	str	r3, [sp, #0]
    7a8a:	9900      	ldr	r1, [sp, #0]
    7a8c:	0038      	movs	r0, r7
    7a8e:	f000 ff55 	bl	893c <_sbrk_r>
    7a92:	0003      	movs	r3, r0
    7a94:	4681      	mov	r9, r0
    7a96:	3301      	adds	r3, #1
    7a98:	d061      	beq.n	7b5e <_malloc_r+0x2d6>
    7a9a:	9b01      	ldr	r3, [sp, #4]
    7a9c:	4283      	cmp	r3, r0
    7a9e:	d900      	bls.n	7aa2 <_malloc_r+0x21a>
    7aa0:	e0ff      	b.n	7ca2 <_malloc_r+0x41a>
    7aa2:	4b64      	ldr	r3, [pc, #400]	; (7c34 <_malloc_r+0x3ac>)
    7aa4:	9a00      	ldr	r2, [sp, #0]
    7aa6:	469a      	mov	sl, r3
    7aa8:	681b      	ldr	r3, [r3, #0]
    7aaa:	469c      	mov	ip, r3
    7aac:	4653      	mov	r3, sl
    7aae:	4462      	add	r2, ip
    7ab0:	601a      	str	r2, [r3, #0]
    7ab2:	9b01      	ldr	r3, [sp, #4]
    7ab4:	0011      	movs	r1, r2
    7ab6:	4283      	cmp	r3, r0
    7ab8:	d100      	bne.n	7abc <_malloc_r+0x234>
    7aba:	e155      	b.n	7d68 <_malloc_r+0x4e0>
    7abc:	465b      	mov	r3, fp
    7abe:	681b      	ldr	r3, [r3, #0]
    7ac0:	3301      	adds	r3, #1
    7ac2:	d100      	bne.n	7ac6 <_malloc_r+0x23e>
    7ac4:	e16c      	b.n	7da0 <_malloc_r+0x518>
    7ac6:	464b      	mov	r3, r9
    7ac8:	9a01      	ldr	r2, [sp, #4]
    7aca:	1a9b      	subs	r3, r3, r2
    7acc:	1859      	adds	r1, r3, r1
    7ace:	4653      	mov	r3, sl
    7ad0:	6019      	str	r1, [r3, #0]
    7ad2:	2307      	movs	r3, #7
    7ad4:	464a      	mov	r2, r9
    7ad6:	4013      	ands	r3, r2
    7ad8:	d100      	bne.n	7adc <_malloc_r+0x254>
    7ada:	e124      	b.n	7d26 <_malloc_r+0x49e>
    7adc:	2108      	movs	r1, #8
    7ade:	4689      	mov	r9, r1
    7ae0:	4955      	ldr	r1, [pc, #340]	; (7c38 <_malloc_r+0x3b0>)
    7ae2:	1ad2      	subs	r2, r2, r3
    7ae4:	4491      	add	r9, r2
    7ae6:	1acb      	subs	r3, r1, r3
    7ae8:	9a00      	ldr	r2, [sp, #0]
    7aea:	0038      	movs	r0, r7
    7aec:	444a      	add	r2, r9
    7aee:	0511      	lsls	r1, r2, #20
    7af0:	0d09      	lsrs	r1, r1, #20
    7af2:	1a5b      	subs	r3, r3, r1
    7af4:	0019      	movs	r1, r3
    7af6:	469b      	mov	fp, r3
    7af8:	f000 ff20 	bl	893c <_sbrk_r>
    7afc:	1c43      	adds	r3, r0, #1
    7afe:	d100      	bne.n	7b02 <_malloc_r+0x27a>
    7b00:	e142      	b.n	7d88 <_malloc_r+0x500>
    7b02:	464b      	mov	r3, r9
    7b04:	1ac0      	subs	r0, r0, r3
    7b06:	2301      	movs	r3, #1
    7b08:	4458      	add	r0, fp
    7b0a:	4318      	orrs	r0, r3
    7b0c:	4653      	mov	r3, sl
    7b0e:	681b      	ldr	r3, [r3, #0]
    7b10:	445b      	add	r3, fp
    7b12:	0019      	movs	r1, r3
    7b14:	4653      	mov	r3, sl
    7b16:	6019      	str	r1, [r3, #0]
    7b18:	464b      	mov	r3, r9
    7b1a:	60b3      	str	r3, [r6, #8]
    7b1c:	6058      	str	r0, [r3, #4]
    7b1e:	42b4      	cmp	r4, r6
    7b20:	d013      	beq.n	7b4a <_malloc_r+0x2c2>
    7b22:	4643      	mov	r3, r8
    7b24:	2b0f      	cmp	r3, #15
    7b26:	d800      	bhi.n	7b2a <_malloc_r+0x2a2>
    7b28:	e0e8      	b.n	7cfc <_malloc_r+0x474>
    7b2a:	4643      	mov	r3, r8
    7b2c:	2207      	movs	r2, #7
    7b2e:	6860      	ldr	r0, [r4, #4]
    7b30:	3b0c      	subs	r3, #12
    7b32:	4393      	bics	r3, r2
    7b34:	3a06      	subs	r2, #6
    7b36:	4002      	ands	r2, r0
    7b38:	2005      	movs	r0, #5
    7b3a:	431a      	orrs	r2, r3
    7b3c:	6062      	str	r2, [r4, #4]
    7b3e:	18e2      	adds	r2, r4, r3
    7b40:	6050      	str	r0, [r2, #4]
    7b42:	6090      	str	r0, [r2, #8]
    7b44:	2b0f      	cmp	r3, #15
    7b46:	d900      	bls.n	7b4a <_malloc_r+0x2c2>
    7b48:	e122      	b.n	7d90 <_malloc_r+0x508>
    7b4a:	4b3c      	ldr	r3, [pc, #240]	; (7c3c <_malloc_r+0x3b4>)
    7b4c:	681a      	ldr	r2, [r3, #0]
    7b4e:	4291      	cmp	r1, r2
    7b50:	d900      	bls.n	7b54 <_malloc_r+0x2cc>
    7b52:	6019      	str	r1, [r3, #0]
    7b54:	4b3a      	ldr	r3, [pc, #232]	; (7c40 <_malloc_r+0x3b8>)
    7b56:	681a      	ldr	r2, [r3, #0]
    7b58:	4291      	cmp	r1, r2
    7b5a:	d900      	bls.n	7b5e <_malloc_r+0x2d6>
    7b5c:	6019      	str	r1, [r3, #0]
    7b5e:	2303      	movs	r3, #3
    7b60:	68b4      	ldr	r4, [r6, #8]
    7b62:	6862      	ldr	r2, [r4, #4]
    7b64:	439a      	bics	r2, r3
    7b66:	1b53      	subs	r3, r2, r5
    7b68:	4295      	cmp	r5, r2
    7b6a:	d900      	bls.n	7b6e <_malloc_r+0x2e6>
    7b6c:	e0c9      	b.n	7d02 <_malloc_r+0x47a>
    7b6e:	2b0f      	cmp	r3, #15
    7b70:	dc00      	bgt.n	7b74 <_malloc_r+0x2ec>
    7b72:	e0c6      	b.n	7d02 <_malloc_r+0x47a>
    7b74:	2201      	movs	r2, #1
    7b76:	0029      	movs	r1, r5
    7b78:	4313      	orrs	r3, r2
    7b7a:	4311      	orrs	r1, r2
    7b7c:	1965      	adds	r5, r4, r5
    7b7e:	6061      	str	r1, [r4, #4]
    7b80:	0038      	movs	r0, r7
    7b82:	60b5      	str	r5, [r6, #8]
    7b84:	606b      	str	r3, [r5, #4]
    7b86:	f000 f9cb 	bl	7f20 <__malloc_unlock>
    7b8a:	0020      	movs	r0, r4
    7b8c:	3008      	adds	r0, #8
    7b8e:	e74a      	b.n	7a26 <_malloc_r+0x19e>
    7b90:	2814      	cmp	r0, #20
    7b92:	d97a      	bls.n	7c8a <_malloc_r+0x402>
    7b94:	2854      	cmp	r0, #84	; 0x54
    7b96:	d900      	bls.n	7b9a <_malloc_r+0x312>
    7b98:	e0ba      	b.n	7d10 <_malloc_r+0x488>
    7b9a:	236e      	movs	r3, #110	; 0x6e
    7b9c:	4698      	mov	r8, r3
    7b9e:	0b28      	lsrs	r0, r5, #12
    7ba0:	4480      	add	r8, r0
    7ba2:	306f      	adds	r0, #111	; 0x6f
    7ba4:	00c1      	lsls	r1, r0, #3
    7ba6:	e696      	b.n	78d6 <_malloc_r+0x4e>
    7ba8:	0a5a      	lsrs	r2, r3, #9
    7baa:	2a04      	cmp	r2, #4
    7bac:	d973      	bls.n	7c96 <_malloc_r+0x40e>
    7bae:	2a14      	cmp	r2, #20
    7bb0:	d900      	bls.n	7bb4 <_malloc_r+0x32c>
    7bb2:	e0d0      	b.n	7d56 <_malloc_r+0x4ce>
    7bb4:	0011      	movs	r1, r2
    7bb6:	325c      	adds	r2, #92	; 0x5c
    7bb8:	315b      	adds	r1, #91	; 0x5b
    7bba:	00d2      	lsls	r2, r2, #3
    7bbc:	2308      	movs	r3, #8
    7bbe:	425b      	negs	r3, r3
    7bc0:	469c      	mov	ip, r3
    7bc2:	18b2      	adds	r2, r6, r2
    7bc4:	4494      	add	ip, r2
    7bc6:	4663      	mov	r3, ip
    7bc8:	689a      	ldr	r2, [r3, #8]
    7bca:	2303      	movs	r3, #3
    7bcc:	4698      	mov	r8, r3
    7bce:	4594      	cmp	ip, r2
    7bd0:	d100      	bne.n	7bd4 <_malloc_r+0x34c>
    7bd2:	e0ab      	b.n	7d2c <_malloc_r+0x4a4>
    7bd4:	4643      	mov	r3, r8
    7bd6:	6851      	ldr	r1, [r2, #4]
    7bd8:	4399      	bics	r1, r3
    7bda:	4589      	cmp	r9, r1
    7bdc:	d300      	bcc.n	7be0 <_malloc_r+0x358>
    7bde:	e095      	b.n	7d0c <_malloc_r+0x484>
    7be0:	6892      	ldr	r2, [r2, #8]
    7be2:	4594      	cmp	ip, r2
    7be4:	d1f6      	bne.n	7bd4 <_malloc_r+0x34c>
    7be6:	4663      	mov	r3, ip
    7be8:	68da      	ldr	r2, [r3, #12]
    7bea:	6873      	ldr	r3, [r6, #4]
    7bec:	4661      	mov	r1, ip
    7bee:	60e2      	str	r2, [r4, #12]
    7bf0:	60a1      	str	r1, [r4, #8]
    7bf2:	6094      	str	r4, [r2, #8]
    7bf4:	60cc      	str	r4, [r1, #12]
    7bf6:	e6b6      	b.n	7966 <_malloc_r+0xde>
    7bf8:	2301      	movs	r3, #1
    7bfa:	1960      	adds	r0, r4, r5
    7bfc:	431d      	orrs	r5, r3
    7bfe:	6065      	str	r5, [r4, #4]
    7c00:	6170      	str	r0, [r6, #20]
    7c02:	6130      	str	r0, [r6, #16]
    7c04:	60c2      	str	r2, [r0, #12]
    7c06:	6082      	str	r2, [r0, #8]
    7c08:	001a      	movs	r2, r3
    7c0a:	464b      	mov	r3, r9
    7c0c:	430a      	orrs	r2, r1
    7c0e:	6042      	str	r2, [r0, #4]
    7c10:	0038      	movs	r0, r7
    7c12:	50e1      	str	r1, [r4, r3]
    7c14:	f000 f984 	bl	7f20 <__malloc_unlock>
    7c18:	0020      	movs	r0, r4
    7c1a:	3008      	adds	r0, #8
    7c1c:	e703      	b.n	7a26 <_malloc_r+0x19e>
    7c1e:	46c0      	nop			; (mov r8, r8)
    7c20:	200004ac 	.word	0x200004ac
    7c24:	000001ff 	.word	0x000001ff
    7c28:	200008b4 	.word	0x200008b4
    7c2c:	200012c0 	.word	0x200012c0
    7c30:	0000100f 	.word	0x0000100f
    7c34:	20001290 	.word	0x20001290
    7c38:	00001008 	.word	0x00001008
    7c3c:	200012b8 	.word	0x200012b8
    7c40:	200012bc 	.word	0x200012bc
    7c44:	6873      	ldr	r3, [r6, #4]
    7c46:	e68e      	b.n	7966 <_malloc_r+0xde>
    7c48:	2308      	movs	r3, #8
    7c4a:	469b      	mov	fp, r3
    7c4c:	3b07      	subs	r3, #7
    7c4e:	44dc      	add	ip, fp
    7c50:	469b      	mov	fp, r3
    7c52:	44da      	add	sl, fp
    7c54:	4643      	mov	r3, r8
    7c56:	4652      	mov	r2, sl
    7c58:	4213      	tst	r3, r2
    7c5a:	d000      	beq.n	7c5e <_malloc_r+0x3d6>
    7c5c:	e697      	b.n	798e <_malloc_r+0x106>
    7c5e:	e037      	b.n	7cd0 <_malloc_r+0x448>
    7c60:	68dc      	ldr	r4, [r3, #12]
    7c62:	3002      	adds	r0, #2
    7c64:	42a3      	cmp	r3, r4
    7c66:	d100      	bne.n	7c6a <_malloc_r+0x3e2>
    7c68:	e655      	b.n	7916 <_malloc_r+0x8e>
    7c6a:	e6ca      	b.n	7a02 <_malloc_r+0x17a>
    7c6c:	2201      	movs	r2, #1
    7c6e:	18e3      	adds	r3, r4, r3
    7c70:	6859      	ldr	r1, [r3, #4]
    7c72:	0038      	movs	r0, r7
    7c74:	430a      	orrs	r2, r1
    7c76:	605a      	str	r2, [r3, #4]
    7c78:	68e3      	ldr	r3, [r4, #12]
    7c7a:	68a2      	ldr	r2, [r4, #8]
    7c7c:	60d3      	str	r3, [r2, #12]
    7c7e:	609a      	str	r2, [r3, #8]
    7c80:	f000 f94e 	bl	7f20 <__malloc_unlock>
    7c84:	0020      	movs	r0, r4
    7c86:	3008      	adds	r0, #8
    7c88:	e6cd      	b.n	7a26 <_malloc_r+0x19e>
    7c8a:	235b      	movs	r3, #91	; 0x5b
    7c8c:	4698      	mov	r8, r3
    7c8e:	4480      	add	r8, r0
    7c90:	305c      	adds	r0, #92	; 0x5c
    7c92:	00c1      	lsls	r1, r0, #3
    7c94:	e61f      	b.n	78d6 <_malloc_r+0x4e>
    7c96:	099a      	lsrs	r2, r3, #6
    7c98:	0011      	movs	r1, r2
    7c9a:	3239      	adds	r2, #57	; 0x39
    7c9c:	3138      	adds	r1, #56	; 0x38
    7c9e:	00d2      	lsls	r2, r2, #3
    7ca0:	e78c      	b.n	7bbc <_malloc_r+0x334>
    7ca2:	42b4      	cmp	r4, r6
    7ca4:	d000      	beq.n	7ca8 <_malloc_r+0x420>
    7ca6:	e75a      	b.n	7b5e <_malloc_r+0x2d6>
    7ca8:	4b4f      	ldr	r3, [pc, #316]	; (7de8 <_malloc_r+0x560>)
    7caa:	9a00      	ldr	r2, [sp, #0]
    7cac:	469a      	mov	sl, r3
    7cae:	681b      	ldr	r3, [r3, #0]
    7cb0:	469c      	mov	ip, r3
    7cb2:	4653      	mov	r3, sl
    7cb4:	4462      	add	r2, ip
    7cb6:	0011      	movs	r1, r2
    7cb8:	601a      	str	r2, [r3, #0]
    7cba:	e6ff      	b.n	7abc <_malloc_r+0x234>
    7cbc:	2308      	movs	r3, #8
    7cbe:	425b      	negs	r3, r3
    7cc0:	469c      	mov	ip, r3
    7cc2:	44e1      	add	r9, ip
    7cc4:	464b      	mov	r3, r9
    7cc6:	689b      	ldr	r3, [r3, #8]
    7cc8:	3801      	subs	r0, #1
    7cca:	4599      	cmp	r9, r3
    7ccc:	d000      	beq.n	7cd0 <_malloc_r+0x448>
    7cce:	e084      	b.n	7dda <_malloc_r+0x552>
    7cd0:	4643      	mov	r3, r8
    7cd2:	4203      	tst	r3, r0
    7cd4:	d1f2      	bne.n	7cbc <_malloc_r+0x434>
    7cd6:	6873      	ldr	r3, [r6, #4]
    7cd8:	438b      	bics	r3, r1
    7cda:	6073      	str	r3, [r6, #4]
    7cdc:	0049      	lsls	r1, r1, #1
    7cde:	4299      	cmp	r1, r3
    7ce0:	d900      	bls.n	7ce4 <_malloc_r+0x45c>
    7ce2:	e6b5      	b.n	7a50 <_malloc_r+0x1c8>
    7ce4:	2900      	cmp	r1, #0
    7ce6:	d100      	bne.n	7cea <_malloc_r+0x462>
    7ce8:	e6b2      	b.n	7a50 <_malloc_r+0x1c8>
    7cea:	4650      	mov	r0, sl
    7cec:	420b      	tst	r3, r1
    7cee:	d000      	beq.n	7cf2 <_malloc_r+0x46a>
    7cf0:	e648      	b.n	7984 <_malloc_r+0xfc>
    7cf2:	0049      	lsls	r1, r1, #1
    7cf4:	3004      	adds	r0, #4
    7cf6:	420b      	tst	r3, r1
    7cf8:	d0fb      	beq.n	7cf2 <_malloc_r+0x46a>
    7cfa:	e643      	b.n	7984 <_malloc_r+0xfc>
    7cfc:	2301      	movs	r3, #1
    7cfe:	464a      	mov	r2, r9
    7d00:	6053      	str	r3, [r2, #4]
    7d02:	0038      	movs	r0, r7
    7d04:	f000 f90c 	bl	7f20 <__malloc_unlock>
    7d08:	2000      	movs	r0, #0
    7d0a:	e68c      	b.n	7a26 <_malloc_r+0x19e>
    7d0c:	4694      	mov	ip, r2
    7d0e:	e76a      	b.n	7be6 <_malloc_r+0x35e>
    7d10:	23aa      	movs	r3, #170	; 0xaa
    7d12:	005b      	lsls	r3, r3, #1
    7d14:	4298      	cmp	r0, r3
    7d16:	d811      	bhi.n	7d3c <_malloc_r+0x4b4>
    7d18:	3bdd      	subs	r3, #221	; 0xdd
    7d1a:	4698      	mov	r8, r3
    7d1c:	0be8      	lsrs	r0, r5, #15
    7d1e:	4480      	add	r8, r0
    7d20:	3078      	adds	r0, #120	; 0x78
    7d22:	00c1      	lsls	r1, r0, #3
    7d24:	e5d7      	b.n	78d6 <_malloc_r+0x4e>
    7d26:	2380      	movs	r3, #128	; 0x80
    7d28:	015b      	lsls	r3, r3, #5
    7d2a:	e6dd      	b.n	7ae8 <_malloc_r+0x260>
    7d2c:	1089      	asrs	r1, r1, #2
    7d2e:	3b02      	subs	r3, #2
    7d30:	408b      	lsls	r3, r1
    7d32:	6872      	ldr	r2, [r6, #4]
    7d34:	4313      	orrs	r3, r2
    7d36:	6073      	str	r3, [r6, #4]
    7d38:	4662      	mov	r2, ip
    7d3a:	e757      	b.n	7bec <_malloc_r+0x364>
    7d3c:	4b2b      	ldr	r3, [pc, #172]	; (7dec <_malloc_r+0x564>)
    7d3e:	4298      	cmp	r0, r3
    7d40:	d81c      	bhi.n	7d7c <_malloc_r+0x4f4>
    7d42:	237c      	movs	r3, #124	; 0x7c
    7d44:	4698      	mov	r8, r3
    7d46:	0ca8      	lsrs	r0, r5, #18
    7d48:	4480      	add	r8, r0
    7d4a:	307d      	adds	r0, #125	; 0x7d
    7d4c:	00c1      	lsls	r1, r0, #3
    7d4e:	e5c2      	b.n	78d6 <_malloc_r+0x4e>
    7d50:	3310      	adds	r3, #16
    7d52:	9300      	str	r3, [sp, #0]
    7d54:	e699      	b.n	7a8a <_malloc_r+0x202>
    7d56:	2a54      	cmp	r2, #84	; 0x54
    7d58:	d826      	bhi.n	7da8 <_malloc_r+0x520>
    7d5a:	464b      	mov	r3, r9
    7d5c:	0b1a      	lsrs	r2, r3, #12
    7d5e:	0011      	movs	r1, r2
    7d60:	326f      	adds	r2, #111	; 0x6f
    7d62:	316e      	adds	r1, #110	; 0x6e
    7d64:	00d2      	lsls	r2, r2, #3
    7d66:	e729      	b.n	7bbc <_malloc_r+0x334>
    7d68:	051b      	lsls	r3, r3, #20
    7d6a:	d000      	beq.n	7d6e <_malloc_r+0x4e6>
    7d6c:	e6a6      	b.n	7abc <_malloc_r+0x234>
    7d6e:	2001      	movs	r0, #1
    7d70:	9b00      	ldr	r3, [sp, #0]
    7d72:	68b2      	ldr	r2, [r6, #8]
    7d74:	4443      	add	r3, r8
    7d76:	4303      	orrs	r3, r0
    7d78:	6053      	str	r3, [r2, #4]
    7d7a:	e6e6      	b.n	7b4a <_malloc_r+0x2c2>
    7d7c:	21fe      	movs	r1, #254	; 0xfe
    7d7e:	237e      	movs	r3, #126	; 0x7e
    7d80:	207f      	movs	r0, #127	; 0x7f
    7d82:	0089      	lsls	r1, r1, #2
    7d84:	4698      	mov	r8, r3
    7d86:	e5a6      	b.n	78d6 <_malloc_r+0x4e>
    7d88:	2300      	movs	r3, #0
    7d8a:	2001      	movs	r0, #1
    7d8c:	469b      	mov	fp, r3
    7d8e:	e6bd      	b.n	7b0c <_malloc_r+0x284>
    7d90:	0021      	movs	r1, r4
    7d92:	0038      	movs	r0, r7
    7d94:	3108      	adds	r1, #8
    7d96:	f7ff fa59 	bl	724c <_free_r>
    7d9a:	4653      	mov	r3, sl
    7d9c:	6819      	ldr	r1, [r3, #0]
    7d9e:	e6d4      	b.n	7b4a <_malloc_r+0x2c2>
    7da0:	465b      	mov	r3, fp
    7da2:	464a      	mov	r2, r9
    7da4:	601a      	str	r2, [r3, #0]
    7da6:	e694      	b.n	7ad2 <_malloc_r+0x24a>
    7da8:	21aa      	movs	r1, #170	; 0xaa
    7daa:	0049      	lsls	r1, r1, #1
    7dac:	428a      	cmp	r2, r1
    7dae:	d806      	bhi.n	7dbe <_malloc_r+0x536>
    7db0:	464b      	mov	r3, r9
    7db2:	0bda      	lsrs	r2, r3, #15
    7db4:	0011      	movs	r1, r2
    7db6:	3278      	adds	r2, #120	; 0x78
    7db8:	3177      	adds	r1, #119	; 0x77
    7dba:	00d2      	lsls	r2, r2, #3
    7dbc:	e6fe      	b.n	7bbc <_malloc_r+0x334>
    7dbe:	490b      	ldr	r1, [pc, #44]	; (7dec <_malloc_r+0x564>)
    7dc0:	428a      	cmp	r2, r1
    7dc2:	d806      	bhi.n	7dd2 <_malloc_r+0x54a>
    7dc4:	464b      	mov	r3, r9
    7dc6:	0c9a      	lsrs	r2, r3, #18
    7dc8:	0011      	movs	r1, r2
    7dca:	327d      	adds	r2, #125	; 0x7d
    7dcc:	317c      	adds	r1, #124	; 0x7c
    7dce:	00d2      	lsls	r2, r2, #3
    7dd0:	e6f4      	b.n	7bbc <_malloc_r+0x334>
    7dd2:	22fe      	movs	r2, #254	; 0xfe
    7dd4:	217e      	movs	r1, #126	; 0x7e
    7dd6:	0092      	lsls	r2, r2, #2
    7dd8:	e6f0      	b.n	7bbc <_malloc_r+0x334>
    7dda:	6873      	ldr	r3, [r6, #4]
    7ddc:	e77e      	b.n	7cdc <_malloc_r+0x454>
    7dde:	002b      	movs	r3, r5
    7de0:	08e8      	lsrs	r0, r5, #3
    7de2:	3308      	adds	r3, #8
    7de4:	e605      	b.n	79f2 <_malloc_r+0x16a>
    7de6:	46c0      	nop			; (mov r8, r8)
    7de8:	20001290 	.word	0x20001290
    7dec:	00000554 	.word	0x00000554

00007df0 <memchr>:
    7df0:	b570      	push	{r4, r5, r6, lr}
    7df2:	b2cd      	uxtb	r5, r1
    7df4:	0783      	lsls	r3, r0, #30
    7df6:	d034      	beq.n	7e62 <memchr+0x72>
    7df8:	1e54      	subs	r4, r2, #1
    7dfa:	2a00      	cmp	r2, #0
    7dfc:	d01b      	beq.n	7e36 <memchr+0x46>
    7dfe:	7803      	ldrb	r3, [r0, #0]
    7e00:	42ab      	cmp	r3, r5
    7e02:	d019      	beq.n	7e38 <memchr+0x48>
    7e04:	2203      	movs	r2, #3
    7e06:	e004      	b.n	7e12 <memchr+0x22>
    7e08:	3c01      	subs	r4, #1
    7e0a:	d314      	bcc.n	7e36 <memchr+0x46>
    7e0c:	7803      	ldrb	r3, [r0, #0]
    7e0e:	42ab      	cmp	r3, r5
    7e10:	d012      	beq.n	7e38 <memchr+0x48>
    7e12:	3001      	adds	r0, #1
    7e14:	4210      	tst	r0, r2
    7e16:	d1f7      	bne.n	7e08 <memchr+0x18>
    7e18:	2c03      	cmp	r4, #3
    7e1a:	d80e      	bhi.n	7e3a <memchr+0x4a>
    7e1c:	2c00      	cmp	r4, #0
    7e1e:	d00a      	beq.n	7e36 <memchr+0x46>
    7e20:	7803      	ldrb	r3, [r0, #0]
    7e22:	42ab      	cmp	r3, r5
    7e24:	d008      	beq.n	7e38 <memchr+0x48>
    7e26:	1904      	adds	r4, r0, r4
    7e28:	e002      	b.n	7e30 <memchr+0x40>
    7e2a:	7803      	ldrb	r3, [r0, #0]
    7e2c:	42ab      	cmp	r3, r5
    7e2e:	d003      	beq.n	7e38 <memchr+0x48>
    7e30:	3001      	adds	r0, #1
    7e32:	4284      	cmp	r4, r0
    7e34:	d1f9      	bne.n	7e2a <memchr+0x3a>
    7e36:	2000      	movs	r0, #0
    7e38:	bd70      	pop	{r4, r5, r6, pc}
    7e3a:	22ff      	movs	r2, #255	; 0xff
    7e3c:	060b      	lsls	r3, r1, #24
    7e3e:	0c1b      	lsrs	r3, r3, #16
    7e40:	4011      	ands	r1, r2
    7e42:	4319      	orrs	r1, r3
    7e44:	040b      	lsls	r3, r1, #16
    7e46:	4e08      	ldr	r6, [pc, #32]	; (7e68 <memchr+0x78>)
    7e48:	4319      	orrs	r1, r3
    7e4a:	6803      	ldr	r3, [r0, #0]
    7e4c:	4a07      	ldr	r2, [pc, #28]	; (7e6c <memchr+0x7c>)
    7e4e:	404b      	eors	r3, r1
    7e50:	189a      	adds	r2, r3, r2
    7e52:	439a      	bics	r2, r3
    7e54:	4232      	tst	r2, r6
    7e56:	d1e3      	bne.n	7e20 <memchr+0x30>
    7e58:	3c04      	subs	r4, #4
    7e5a:	3004      	adds	r0, #4
    7e5c:	2c03      	cmp	r4, #3
    7e5e:	d8f4      	bhi.n	7e4a <memchr+0x5a>
    7e60:	e7dc      	b.n	7e1c <memchr+0x2c>
    7e62:	0014      	movs	r4, r2
    7e64:	e7d8      	b.n	7e18 <memchr+0x28>
    7e66:	46c0      	nop			; (mov r8, r8)
    7e68:	80808080 	.word	0x80808080
    7e6c:	fefefeff 	.word	0xfefefeff

00007e70 <memmove>:
    7e70:	b5f0      	push	{r4, r5, r6, r7, lr}
    7e72:	4288      	cmp	r0, r1
    7e74:	d90a      	bls.n	7e8c <memmove+0x1c>
    7e76:	188b      	adds	r3, r1, r2
    7e78:	4298      	cmp	r0, r3
    7e7a:	d207      	bcs.n	7e8c <memmove+0x1c>
    7e7c:	1e53      	subs	r3, r2, #1
    7e7e:	2a00      	cmp	r2, #0
    7e80:	d003      	beq.n	7e8a <memmove+0x1a>
    7e82:	5cca      	ldrb	r2, [r1, r3]
    7e84:	54c2      	strb	r2, [r0, r3]
    7e86:	3b01      	subs	r3, #1
    7e88:	d2fb      	bcs.n	7e82 <memmove+0x12>
    7e8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7e8c:	0005      	movs	r5, r0
    7e8e:	2a0f      	cmp	r2, #15
    7e90:	d808      	bhi.n	7ea4 <memmove+0x34>
    7e92:	2a00      	cmp	r2, #0
    7e94:	d0f9      	beq.n	7e8a <memmove+0x1a>
    7e96:	2300      	movs	r3, #0
    7e98:	5ccc      	ldrb	r4, [r1, r3]
    7e9a:	54ec      	strb	r4, [r5, r3]
    7e9c:	3301      	adds	r3, #1
    7e9e:	4293      	cmp	r3, r2
    7ea0:	d1fa      	bne.n	7e98 <memmove+0x28>
    7ea2:	e7f2      	b.n	7e8a <memmove+0x1a>
    7ea4:	000b      	movs	r3, r1
    7ea6:	4303      	orrs	r3, r0
    7ea8:	079b      	lsls	r3, r3, #30
    7eaa:	d12d      	bne.n	7f08 <memmove+0x98>
    7eac:	0015      	movs	r5, r2
    7eae:	000c      	movs	r4, r1
    7eb0:	0003      	movs	r3, r0
    7eb2:	3d10      	subs	r5, #16
    7eb4:	092f      	lsrs	r7, r5, #4
    7eb6:	3701      	adds	r7, #1
    7eb8:	013f      	lsls	r7, r7, #4
    7eba:	19c7      	adds	r7, r0, r7
    7ebc:	6826      	ldr	r6, [r4, #0]
    7ebe:	601e      	str	r6, [r3, #0]
    7ec0:	6866      	ldr	r6, [r4, #4]
    7ec2:	605e      	str	r6, [r3, #4]
    7ec4:	68a6      	ldr	r6, [r4, #8]
    7ec6:	609e      	str	r6, [r3, #8]
    7ec8:	68e6      	ldr	r6, [r4, #12]
    7eca:	3410      	adds	r4, #16
    7ecc:	60de      	str	r6, [r3, #12]
    7ece:	3310      	adds	r3, #16
    7ed0:	429f      	cmp	r7, r3
    7ed2:	d1f3      	bne.n	7ebc <memmove+0x4c>
    7ed4:	240f      	movs	r4, #15
    7ed6:	43a5      	bics	r5, r4
    7ed8:	3510      	adds	r5, #16
    7eda:	1949      	adds	r1, r1, r5
    7edc:	4014      	ands	r4, r2
    7ede:	1945      	adds	r5, r0, r5
    7ee0:	2c03      	cmp	r4, #3
    7ee2:	d913      	bls.n	7f0c <memmove+0x9c>
    7ee4:	2300      	movs	r3, #0
    7ee6:	1f27      	subs	r7, r4, #4
    7ee8:	08be      	lsrs	r6, r7, #2
    7eea:	3601      	adds	r6, #1
    7eec:	00b6      	lsls	r6, r6, #2
    7eee:	58cc      	ldr	r4, [r1, r3]
    7ef0:	50ec      	str	r4, [r5, r3]
    7ef2:	3304      	adds	r3, #4
    7ef4:	42b3      	cmp	r3, r6
    7ef6:	d1fa      	bne.n	7eee <memmove+0x7e>
    7ef8:	2603      	movs	r6, #3
    7efa:	43b7      	bics	r7, r6
    7efc:	1d3c      	adds	r4, r7, #4
    7efe:	1909      	adds	r1, r1, r4
    7f00:	192d      	adds	r5, r5, r4
    7f02:	4032      	ands	r2, r6
    7f04:	d1c7      	bne.n	7e96 <memmove+0x26>
    7f06:	e7c0      	b.n	7e8a <memmove+0x1a>
    7f08:	0005      	movs	r5, r0
    7f0a:	e7c4      	b.n	7e96 <memmove+0x26>
    7f0c:	0022      	movs	r2, r4
    7f0e:	e7c0      	b.n	7e92 <memmove+0x22>

00007f10 <__malloc_lock>:
    7f10:	b510      	push	{r4, lr}
    7f12:	4802      	ldr	r0, [pc, #8]	; (7f1c <__malloc_lock+0xc>)
    7f14:	f7ff fc32 	bl	777c <__retarget_lock_acquire_recursive>
    7f18:	bd10      	pop	{r4, pc}
    7f1a:	46c0      	nop			; (mov r8, r8)
    7f1c:	2000139c 	.word	0x2000139c

00007f20 <__malloc_unlock>:
    7f20:	b510      	push	{r4, lr}
    7f22:	4802      	ldr	r0, [pc, #8]	; (7f2c <__malloc_unlock+0xc>)
    7f24:	f7ff fc2c 	bl	7780 <__retarget_lock_release_recursive>
    7f28:	bd10      	pop	{r4, pc}
    7f2a:	46c0      	nop			; (mov r8, r8)
    7f2c:	2000139c 	.word	0x2000139c

00007f30 <_Balloc>:
    7f30:	b570      	push	{r4, r5, r6, lr}
    7f32:	0004      	movs	r4, r0
    7f34:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    7f36:	000d      	movs	r5, r1
    7f38:	2800      	cmp	r0, #0
    7f3a:	d00a      	beq.n	7f52 <_Balloc+0x22>
    7f3c:	00ab      	lsls	r3, r5, #2
    7f3e:	18c3      	adds	r3, r0, r3
    7f40:	6818      	ldr	r0, [r3, #0]
    7f42:	2800      	cmp	r0, #0
    7f44:	d00f      	beq.n	7f66 <_Balloc+0x36>
    7f46:	6802      	ldr	r2, [r0, #0]
    7f48:	601a      	str	r2, [r3, #0]
    7f4a:	2300      	movs	r3, #0
    7f4c:	6103      	str	r3, [r0, #16]
    7f4e:	60c3      	str	r3, [r0, #12]
    7f50:	bd70      	pop	{r4, r5, r6, pc}
    7f52:	2221      	movs	r2, #33	; 0x21
    7f54:	2104      	movs	r1, #4
    7f56:	0020      	movs	r0, r4
    7f58:	f000 fe2a 	bl	8bb0 <_calloc_r>
    7f5c:	64e0      	str	r0, [r4, #76]	; 0x4c
    7f5e:	2800      	cmp	r0, #0
    7f60:	d1ec      	bne.n	7f3c <_Balloc+0xc>
    7f62:	2000      	movs	r0, #0
    7f64:	e7f4      	b.n	7f50 <_Balloc+0x20>
    7f66:	2601      	movs	r6, #1
    7f68:	40ae      	lsls	r6, r5
    7f6a:	1d72      	adds	r2, r6, #5
    7f6c:	0092      	lsls	r2, r2, #2
    7f6e:	2101      	movs	r1, #1
    7f70:	0020      	movs	r0, r4
    7f72:	f000 fe1d 	bl	8bb0 <_calloc_r>
    7f76:	2800      	cmp	r0, #0
    7f78:	d0f3      	beq.n	7f62 <_Balloc+0x32>
    7f7a:	6045      	str	r5, [r0, #4]
    7f7c:	6086      	str	r6, [r0, #8]
    7f7e:	e7e4      	b.n	7f4a <_Balloc+0x1a>

00007f80 <_Bfree>:
    7f80:	2900      	cmp	r1, #0
    7f82:	d006      	beq.n	7f92 <_Bfree+0x12>
    7f84:	684b      	ldr	r3, [r1, #4]
    7f86:	009a      	lsls	r2, r3, #2
    7f88:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    7f8a:	189b      	adds	r3, r3, r2
    7f8c:	681a      	ldr	r2, [r3, #0]
    7f8e:	600a      	str	r2, [r1, #0]
    7f90:	6019      	str	r1, [r3, #0]
    7f92:	4770      	bx	lr

00007f94 <__multadd>:
    7f94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7f96:	46ce      	mov	lr, r9
    7f98:	4647      	mov	r7, r8
    7f9a:	4681      	mov	r9, r0
    7f9c:	0008      	movs	r0, r1
    7f9e:	b580      	push	{r7, lr}
    7fa0:	000d      	movs	r5, r1
    7fa2:	690c      	ldr	r4, [r1, #16]
    7fa4:	001f      	movs	r7, r3
    7fa6:	2100      	movs	r1, #0
    7fa8:	3014      	adds	r0, #20
    7faa:	6803      	ldr	r3, [r0, #0]
    7fac:	3101      	adds	r1, #1
    7fae:	041e      	lsls	r6, r3, #16
    7fb0:	0c36      	lsrs	r6, r6, #16
    7fb2:	4356      	muls	r6, r2
    7fb4:	0c1b      	lsrs	r3, r3, #16
    7fb6:	4353      	muls	r3, r2
    7fb8:	19f6      	adds	r6, r6, r7
    7fba:	0c37      	lsrs	r7, r6, #16
    7fbc:	19db      	adds	r3, r3, r7
    7fbe:	0436      	lsls	r6, r6, #16
    7fc0:	0c1f      	lsrs	r7, r3, #16
    7fc2:	0c36      	lsrs	r6, r6, #16
    7fc4:	041b      	lsls	r3, r3, #16
    7fc6:	199b      	adds	r3, r3, r6
    7fc8:	c008      	stmia	r0!, {r3}
    7fca:	428c      	cmp	r4, r1
    7fcc:	dced      	bgt.n	7faa <__multadd+0x16>
    7fce:	2f00      	cmp	r7, #0
    7fd0:	d008      	beq.n	7fe4 <__multadd+0x50>
    7fd2:	68ab      	ldr	r3, [r5, #8]
    7fd4:	429c      	cmp	r4, r3
    7fd6:	da0a      	bge.n	7fee <__multadd+0x5a>
    7fd8:	1d23      	adds	r3, r4, #4
    7fda:	009b      	lsls	r3, r3, #2
    7fdc:	18eb      	adds	r3, r5, r3
    7fde:	3401      	adds	r4, #1
    7fe0:	605f      	str	r7, [r3, #4]
    7fe2:	612c      	str	r4, [r5, #16]
    7fe4:	0028      	movs	r0, r5
    7fe6:	bc0c      	pop	{r2, r3}
    7fe8:	4690      	mov	r8, r2
    7fea:	4699      	mov	r9, r3
    7fec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7fee:	686b      	ldr	r3, [r5, #4]
    7ff0:	4648      	mov	r0, r9
    7ff2:	1c59      	adds	r1, r3, #1
    7ff4:	f7ff ff9c 	bl	7f30 <_Balloc>
    7ff8:	0029      	movs	r1, r5
    7ffa:	692b      	ldr	r3, [r5, #16]
    7ffc:	4680      	mov	r8, r0
    7ffe:	1c9a      	adds	r2, r3, #2
    8000:	0092      	lsls	r2, r2, #2
    8002:	310c      	adds	r1, #12
    8004:	300c      	adds	r0, #12
    8006:	f7fc f92f 	bl	4268 <memcpy>
    800a:	686b      	ldr	r3, [r5, #4]
    800c:	009a      	lsls	r2, r3, #2
    800e:	464b      	mov	r3, r9
    8010:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    8012:	189b      	adds	r3, r3, r2
    8014:	681a      	ldr	r2, [r3, #0]
    8016:	602a      	str	r2, [r5, #0]
    8018:	601d      	str	r5, [r3, #0]
    801a:	4645      	mov	r5, r8
    801c:	e7dc      	b.n	7fd8 <__multadd+0x44>
    801e:	46c0      	nop			; (mov r8, r8)

00008020 <__hi0bits>:
    8020:	0003      	movs	r3, r0
    8022:	0c02      	lsrs	r2, r0, #16
    8024:	2000      	movs	r0, #0
    8026:	2a00      	cmp	r2, #0
    8028:	d101      	bne.n	802e <__hi0bits+0xe>
    802a:	041b      	lsls	r3, r3, #16
    802c:	3010      	adds	r0, #16
    802e:	0e1a      	lsrs	r2, r3, #24
    8030:	d101      	bne.n	8036 <__hi0bits+0x16>
    8032:	3008      	adds	r0, #8
    8034:	021b      	lsls	r3, r3, #8
    8036:	0f1a      	lsrs	r2, r3, #28
    8038:	d101      	bne.n	803e <__hi0bits+0x1e>
    803a:	3004      	adds	r0, #4
    803c:	011b      	lsls	r3, r3, #4
    803e:	0f9a      	lsrs	r2, r3, #30
    8040:	d101      	bne.n	8046 <__hi0bits+0x26>
    8042:	3002      	adds	r0, #2
    8044:	009b      	lsls	r3, r3, #2
    8046:	2b00      	cmp	r3, #0
    8048:	db03      	blt.n	8052 <__hi0bits+0x32>
    804a:	3001      	adds	r0, #1
    804c:	005b      	lsls	r3, r3, #1
    804e:	d400      	bmi.n	8052 <__hi0bits+0x32>
    8050:	2020      	movs	r0, #32
    8052:	4770      	bx	lr

00008054 <__lo0bits>:
    8054:	6803      	ldr	r3, [r0, #0]
    8056:	075a      	lsls	r2, r3, #29
    8058:	d009      	beq.n	806e <__lo0bits+0x1a>
    805a:	2200      	movs	r2, #0
    805c:	07d9      	lsls	r1, r3, #31
    805e:	d404      	bmi.n	806a <__lo0bits+0x16>
    8060:	079a      	lsls	r2, r3, #30
    8062:	d420      	bmi.n	80a6 <__lo0bits+0x52>
    8064:	2202      	movs	r2, #2
    8066:	089b      	lsrs	r3, r3, #2
    8068:	6003      	str	r3, [r0, #0]
    806a:	0010      	movs	r0, r2
    806c:	4770      	bx	lr
    806e:	0419      	lsls	r1, r3, #16
    8070:	2200      	movs	r2, #0
    8072:	2900      	cmp	r1, #0
    8074:	d101      	bne.n	807a <__lo0bits+0x26>
    8076:	0c1b      	lsrs	r3, r3, #16
    8078:	3210      	adds	r2, #16
    807a:	21ff      	movs	r1, #255	; 0xff
    807c:	4219      	tst	r1, r3
    807e:	d101      	bne.n	8084 <__lo0bits+0x30>
    8080:	3208      	adds	r2, #8
    8082:	0a1b      	lsrs	r3, r3, #8
    8084:	0719      	lsls	r1, r3, #28
    8086:	d101      	bne.n	808c <__lo0bits+0x38>
    8088:	3204      	adds	r2, #4
    808a:	091b      	lsrs	r3, r3, #4
    808c:	0799      	lsls	r1, r3, #30
    808e:	d101      	bne.n	8094 <__lo0bits+0x40>
    8090:	3202      	adds	r2, #2
    8092:	089b      	lsrs	r3, r3, #2
    8094:	07d9      	lsls	r1, r3, #31
    8096:	d404      	bmi.n	80a2 <__lo0bits+0x4e>
    8098:	085b      	lsrs	r3, r3, #1
    809a:	d101      	bne.n	80a0 <__lo0bits+0x4c>
    809c:	2220      	movs	r2, #32
    809e:	e7e4      	b.n	806a <__lo0bits+0x16>
    80a0:	3201      	adds	r2, #1
    80a2:	6003      	str	r3, [r0, #0]
    80a4:	e7e1      	b.n	806a <__lo0bits+0x16>
    80a6:	085b      	lsrs	r3, r3, #1
    80a8:	6003      	str	r3, [r0, #0]
    80aa:	2201      	movs	r2, #1
    80ac:	e7dd      	b.n	806a <__lo0bits+0x16>
    80ae:	46c0      	nop			; (mov r8, r8)

000080b0 <__i2b>:
    80b0:	b510      	push	{r4, lr}
    80b2:	000c      	movs	r4, r1
    80b4:	2101      	movs	r1, #1
    80b6:	f7ff ff3b 	bl	7f30 <_Balloc>
    80ba:	2301      	movs	r3, #1
    80bc:	6144      	str	r4, [r0, #20]
    80be:	6103      	str	r3, [r0, #16]
    80c0:	bd10      	pop	{r4, pc}
    80c2:	46c0      	nop			; (mov r8, r8)

000080c4 <__multiply>:
    80c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    80c6:	4657      	mov	r7, sl
    80c8:	464e      	mov	r6, r9
    80ca:	4645      	mov	r5, r8
    80cc:	46de      	mov	lr, fp
    80ce:	b5e0      	push	{r5, r6, r7, lr}
    80d0:	6914      	ldr	r4, [r2, #16]
    80d2:	690e      	ldr	r6, [r1, #16]
    80d4:	b085      	sub	sp, #20
    80d6:	000f      	movs	r7, r1
    80d8:	0015      	movs	r5, r2
    80da:	42a6      	cmp	r6, r4
    80dc:	da04      	bge.n	80e8 <__multiply+0x24>
    80de:	0033      	movs	r3, r6
    80e0:	0017      	movs	r7, r2
    80e2:	0026      	movs	r6, r4
    80e4:	000d      	movs	r5, r1
    80e6:	001c      	movs	r4, r3
    80e8:	1933      	adds	r3, r6, r4
    80ea:	4698      	mov	r8, r3
    80ec:	68bb      	ldr	r3, [r7, #8]
    80ee:	6879      	ldr	r1, [r7, #4]
    80f0:	4598      	cmp	r8, r3
    80f2:	dd00      	ble.n	80f6 <__multiply+0x32>
    80f4:	3101      	adds	r1, #1
    80f6:	f7ff ff1b 	bl	7f30 <_Balloc>
    80fa:	2214      	movs	r2, #20
    80fc:	0003      	movs	r3, r0
    80fe:	4694      	mov	ip, r2
    8100:	4463      	add	r3, ip
    8102:	469b      	mov	fp, r3
    8104:	4643      	mov	r3, r8
    8106:	009b      	lsls	r3, r3, #2
    8108:	445b      	add	r3, fp
    810a:	0019      	movs	r1, r3
    810c:	9302      	str	r3, [sp, #8]
    810e:	9003      	str	r0, [sp, #12]
    8110:	465b      	mov	r3, fp
    8112:	2200      	movs	r2, #0
    8114:	458b      	cmp	fp, r1
    8116:	d203      	bcs.n	8120 <__multiply+0x5c>
    8118:	9902      	ldr	r1, [sp, #8]
    811a:	c304      	stmia	r3!, {r2}
    811c:	4299      	cmp	r1, r3
    811e:	d8fc      	bhi.n	811a <__multiply+0x56>
    8120:	2314      	movs	r3, #20
    8122:	00a4      	lsls	r4, r4, #2
    8124:	469a      	mov	sl, r3
    8126:	3714      	adds	r7, #20
    8128:	0023      	movs	r3, r4
    812a:	46bc      	mov	ip, r7
    812c:	44aa      	add	sl, r5
    812e:	00b6      	lsls	r6, r6, #2
    8130:	4453      	add	r3, sl
    8132:	9700      	str	r7, [sp, #0]
    8134:	44b4      	add	ip, r6
    8136:	9301      	str	r3, [sp, #4]
    8138:	459a      	cmp	sl, r3
    813a:	d24f      	bcs.n	81dc <__multiply+0x118>
    813c:	4653      	mov	r3, sl
    813e:	681b      	ldr	r3, [r3, #0]
    8140:	041e      	lsls	r6, r3, #16
    8142:	0c36      	lsrs	r6, r6, #16
    8144:	d020      	beq.n	8188 <__multiply+0xc4>
    8146:	465c      	mov	r4, fp
    8148:	2700      	movs	r7, #0
    814a:	9d00      	ldr	r5, [sp, #0]
    814c:	0021      	movs	r1, r4
    814e:	cc08      	ldmia	r4!, {r3}
    8150:	cd04      	ldmia	r5!, {r2}
    8152:	4699      	mov	r9, r3
    8154:	4648      	mov	r0, r9
    8156:	0413      	lsls	r3, r2, #16
    8158:	0c1b      	lsrs	r3, r3, #16
    815a:	4373      	muls	r3, r6
    815c:	0400      	lsls	r0, r0, #16
    815e:	0c00      	lsrs	r0, r0, #16
    8160:	181b      	adds	r3, r3, r0
    8162:	19d8      	adds	r0, r3, r7
    8164:	0c13      	lsrs	r3, r2, #16
    8166:	464a      	mov	r2, r9
    8168:	4373      	muls	r3, r6
    816a:	0c12      	lsrs	r2, r2, #16
    816c:	189b      	adds	r3, r3, r2
    816e:	0c02      	lsrs	r2, r0, #16
    8170:	189b      	adds	r3, r3, r2
    8172:	0402      	lsls	r2, r0, #16
    8174:	0c1f      	lsrs	r7, r3, #16
    8176:	0c12      	lsrs	r2, r2, #16
    8178:	041b      	lsls	r3, r3, #16
    817a:	4313      	orrs	r3, r2
    817c:	600b      	str	r3, [r1, #0]
    817e:	45ac      	cmp	ip, r5
    8180:	d8e4      	bhi.n	814c <__multiply+0x88>
    8182:	4653      	mov	r3, sl
    8184:	6027      	str	r7, [r4, #0]
    8186:	681b      	ldr	r3, [r3, #0]
    8188:	0c1e      	lsrs	r6, r3, #16
    818a:	d020      	beq.n	81ce <__multiply+0x10a>
    818c:	465b      	mov	r3, fp
    818e:	2100      	movs	r1, #0
    8190:	681b      	ldr	r3, [r3, #0]
    8192:	465c      	mov	r4, fp
    8194:	0018      	movs	r0, r3
    8196:	000f      	movs	r7, r1
    8198:	4662      	mov	r2, ip
    819a:	9d00      	ldr	r5, [sp, #0]
    819c:	8829      	ldrh	r1, [r5, #0]
    819e:	0c00      	lsrs	r0, r0, #16
    81a0:	4371      	muls	r1, r6
    81a2:	1809      	adds	r1, r1, r0
    81a4:	19c9      	adds	r1, r1, r7
    81a6:	041b      	lsls	r3, r3, #16
    81a8:	0408      	lsls	r0, r1, #16
    81aa:	0c1b      	lsrs	r3, r3, #16
    81ac:	4303      	orrs	r3, r0
    81ae:	6023      	str	r3, [r4, #0]
    81b0:	cd08      	ldmia	r5!, {r3}
    81b2:	6860      	ldr	r0, [r4, #4]
    81b4:	0c1b      	lsrs	r3, r3, #16
    81b6:	4373      	muls	r3, r6
    81b8:	0407      	lsls	r7, r0, #16
    81ba:	0c3f      	lsrs	r7, r7, #16
    81bc:	19db      	adds	r3, r3, r7
    81be:	0c09      	lsrs	r1, r1, #16
    81c0:	185b      	adds	r3, r3, r1
    81c2:	0c1f      	lsrs	r7, r3, #16
    81c4:	3404      	adds	r4, #4
    81c6:	42aa      	cmp	r2, r5
    81c8:	d8e8      	bhi.n	819c <__multiply+0xd8>
    81ca:	4694      	mov	ip, r2
    81cc:	6023      	str	r3, [r4, #0]
    81ce:	2304      	movs	r3, #4
    81d0:	4699      	mov	r9, r3
    81d2:	9b01      	ldr	r3, [sp, #4]
    81d4:	44ca      	add	sl, r9
    81d6:	44cb      	add	fp, r9
    81d8:	4553      	cmp	r3, sl
    81da:	d8af      	bhi.n	813c <__multiply+0x78>
    81dc:	4643      	mov	r3, r8
    81de:	2b00      	cmp	r3, #0
    81e0:	dd0e      	ble.n	8200 <__multiply+0x13c>
    81e2:	9b02      	ldr	r3, [sp, #8]
    81e4:	3b04      	subs	r3, #4
    81e6:	681a      	ldr	r2, [r3, #0]
    81e8:	2a00      	cmp	r2, #0
    81ea:	d109      	bne.n	8200 <__multiply+0x13c>
    81ec:	4642      	mov	r2, r8
    81ee:	e003      	b.n	81f8 <__multiply+0x134>
    81f0:	3b04      	subs	r3, #4
    81f2:	6819      	ldr	r1, [r3, #0]
    81f4:	2900      	cmp	r1, #0
    81f6:	d102      	bne.n	81fe <__multiply+0x13a>
    81f8:	3a01      	subs	r2, #1
    81fa:	2a00      	cmp	r2, #0
    81fc:	d1f8      	bne.n	81f0 <__multiply+0x12c>
    81fe:	4690      	mov	r8, r2
    8200:	9b03      	ldr	r3, [sp, #12]
    8202:	4642      	mov	r2, r8
    8204:	0018      	movs	r0, r3
    8206:	611a      	str	r2, [r3, #16]
    8208:	b005      	add	sp, #20
    820a:	bc3c      	pop	{r2, r3, r4, r5}
    820c:	4690      	mov	r8, r2
    820e:	4699      	mov	r9, r3
    8210:	46a2      	mov	sl, r4
    8212:	46ab      	mov	fp, r5
    8214:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8216:	46c0      	nop			; (mov r8, r8)

00008218 <__pow5mult>:
    8218:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    821a:	4647      	mov	r7, r8
    821c:	46ce      	mov	lr, r9
    821e:	2303      	movs	r3, #3
    8220:	b580      	push	{r7, lr}
    8222:	4680      	mov	r8, r0
    8224:	000f      	movs	r7, r1
    8226:	0014      	movs	r4, r2
    8228:	4013      	ands	r3, r2
    822a:	d13a      	bne.n	82a2 <__pow5mult+0x8a>
    822c:	10a4      	asrs	r4, r4, #2
    822e:	003e      	movs	r6, r7
    8230:	2c00      	cmp	r4, #0
    8232:	d025      	beq.n	8280 <__pow5mult+0x68>
    8234:	4643      	mov	r3, r8
    8236:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    8238:	2d00      	cmp	r5, #0
    823a:	d03b      	beq.n	82b4 <__pow5mult+0x9c>
    823c:	003e      	movs	r6, r7
    823e:	2300      	movs	r3, #0
    8240:	2701      	movs	r7, #1
    8242:	4699      	mov	r9, r3
    8244:	4227      	tst	r7, r4
    8246:	d107      	bne.n	8258 <__pow5mult+0x40>
    8248:	1064      	asrs	r4, r4, #1
    824a:	d019      	beq.n	8280 <__pow5mult+0x68>
    824c:	6828      	ldr	r0, [r5, #0]
    824e:	2800      	cmp	r0, #0
    8250:	d01b      	beq.n	828a <__pow5mult+0x72>
    8252:	0005      	movs	r5, r0
    8254:	4227      	tst	r7, r4
    8256:	d0f7      	beq.n	8248 <__pow5mult+0x30>
    8258:	002a      	movs	r2, r5
    825a:	0031      	movs	r1, r6
    825c:	4640      	mov	r0, r8
    825e:	f7ff ff31 	bl	80c4 <__multiply>
    8262:	2e00      	cmp	r6, #0
    8264:	d01b      	beq.n	829e <__pow5mult+0x86>
    8266:	4642      	mov	r2, r8
    8268:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    826a:	6873      	ldr	r3, [r6, #4]
    826c:	4694      	mov	ip, r2
    826e:	009b      	lsls	r3, r3, #2
    8270:	4463      	add	r3, ip
    8272:	681a      	ldr	r2, [r3, #0]
    8274:	1064      	asrs	r4, r4, #1
    8276:	6032      	str	r2, [r6, #0]
    8278:	601e      	str	r6, [r3, #0]
    827a:	0006      	movs	r6, r0
    827c:	2c00      	cmp	r4, #0
    827e:	d1e5      	bne.n	824c <__pow5mult+0x34>
    8280:	0030      	movs	r0, r6
    8282:	bc0c      	pop	{r2, r3}
    8284:	4690      	mov	r8, r2
    8286:	4699      	mov	r9, r3
    8288:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    828a:	002a      	movs	r2, r5
    828c:	0029      	movs	r1, r5
    828e:	4640      	mov	r0, r8
    8290:	f7ff ff18 	bl	80c4 <__multiply>
    8294:	464b      	mov	r3, r9
    8296:	6028      	str	r0, [r5, #0]
    8298:	6003      	str	r3, [r0, #0]
    829a:	0005      	movs	r5, r0
    829c:	e7da      	b.n	8254 <__pow5mult+0x3c>
    829e:	0006      	movs	r6, r0
    82a0:	e7d2      	b.n	8248 <__pow5mult+0x30>
    82a2:	4a0b      	ldr	r2, [pc, #44]	; (82d0 <__pow5mult+0xb8>)
    82a4:	3b01      	subs	r3, #1
    82a6:	009b      	lsls	r3, r3, #2
    82a8:	589a      	ldr	r2, [r3, r2]
    82aa:	2300      	movs	r3, #0
    82ac:	f7ff fe72 	bl	7f94 <__multadd>
    82b0:	0007      	movs	r7, r0
    82b2:	e7bb      	b.n	822c <__pow5mult+0x14>
    82b4:	2101      	movs	r1, #1
    82b6:	4640      	mov	r0, r8
    82b8:	f7ff fe3a 	bl	7f30 <_Balloc>
    82bc:	4b05      	ldr	r3, [pc, #20]	; (82d4 <__pow5mult+0xbc>)
    82be:	0005      	movs	r5, r0
    82c0:	6143      	str	r3, [r0, #20]
    82c2:	2301      	movs	r3, #1
    82c4:	6103      	str	r3, [r0, #16]
    82c6:	4643      	mov	r3, r8
    82c8:	6498      	str	r0, [r3, #72]	; 0x48
    82ca:	2300      	movs	r3, #0
    82cc:	6003      	str	r3, [r0, #0]
    82ce:	e7b5      	b.n	823c <__pow5mult+0x24>
    82d0:	00009f48 	.word	0x00009f48
    82d4:	00000271 	.word	0x00000271

000082d8 <__lshift>:
    82d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    82da:	464e      	mov	r6, r9
    82dc:	4645      	mov	r5, r8
    82de:	46de      	mov	lr, fp
    82e0:	4657      	mov	r7, sl
    82e2:	b5e0      	push	{r5, r6, r7, lr}
    82e4:	000e      	movs	r6, r1
    82e6:	6933      	ldr	r3, [r6, #16]
    82e8:	1154      	asrs	r4, r2, #5
    82ea:	4698      	mov	r8, r3
    82ec:	44a0      	add	r8, r4
    82ee:	4643      	mov	r3, r8
    82f0:	1c5d      	adds	r5, r3, #1
    82f2:	68b3      	ldr	r3, [r6, #8]
    82f4:	4683      	mov	fp, r0
    82f6:	4691      	mov	r9, r2
    82f8:	6849      	ldr	r1, [r1, #4]
    82fa:	429d      	cmp	r5, r3
    82fc:	dd03      	ble.n	8306 <__lshift+0x2e>
    82fe:	3101      	adds	r1, #1
    8300:	005b      	lsls	r3, r3, #1
    8302:	429d      	cmp	r5, r3
    8304:	dcfb      	bgt.n	82fe <__lshift+0x26>
    8306:	4658      	mov	r0, fp
    8308:	f7ff fe12 	bl	7f30 <_Balloc>
    830c:	0003      	movs	r3, r0
    830e:	4684      	mov	ip, r0
    8310:	3314      	adds	r3, #20
    8312:	2c00      	cmp	r4, #0
    8314:	dd06      	ble.n	8324 <__lshift+0x4c>
    8316:	2100      	movs	r1, #0
    8318:	00a4      	lsls	r4, r4, #2
    831a:	001a      	movs	r2, r3
    831c:	191b      	adds	r3, r3, r4
    831e:	c202      	stmia	r2!, {r1}
    8320:	4293      	cmp	r3, r2
    8322:	d1fc      	bne.n	831e <__lshift+0x46>
    8324:	6932      	ldr	r2, [r6, #16]
    8326:	4648      	mov	r0, r9
    8328:	0097      	lsls	r7, r2, #2
    832a:	0031      	movs	r1, r6
    832c:	221f      	movs	r2, #31
    832e:	3114      	adds	r1, #20
    8330:	4010      	ands	r0, r2
    8332:	19cf      	adds	r7, r1, r7
    8334:	4681      	mov	r9, r0
    8336:	2800      	cmp	r0, #0
    8338:	d025      	beq.n	8386 <__lshift+0xae>
    833a:	2220      	movs	r2, #32
    833c:	1a12      	subs	r2, r2, r0
    833e:	4692      	mov	sl, r2
    8340:	2200      	movs	r2, #0
    8342:	4648      	mov	r0, r9
    8344:	680c      	ldr	r4, [r1, #0]
    8346:	4084      	lsls	r4, r0
    8348:	4650      	mov	r0, sl
    834a:	4314      	orrs	r4, r2
    834c:	601c      	str	r4, [r3, #0]
    834e:	c904      	ldmia	r1!, {r2}
    8350:	3304      	adds	r3, #4
    8352:	40c2      	lsrs	r2, r0
    8354:	428f      	cmp	r7, r1
    8356:	d8f4      	bhi.n	8342 <__lshift+0x6a>
    8358:	601a      	str	r2, [r3, #0]
    835a:	2a00      	cmp	r2, #0
    835c:	d001      	beq.n	8362 <__lshift+0x8a>
    835e:	4645      	mov	r5, r8
    8360:	3502      	adds	r5, #2
    8362:	4663      	mov	r3, ip
    8364:	3d01      	subs	r5, #1
    8366:	611d      	str	r5, [r3, #16]
    8368:	6873      	ldr	r3, [r6, #4]
    836a:	4660      	mov	r0, ip
    836c:	009a      	lsls	r2, r3, #2
    836e:	465b      	mov	r3, fp
    8370:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    8372:	189b      	adds	r3, r3, r2
    8374:	681a      	ldr	r2, [r3, #0]
    8376:	6032      	str	r2, [r6, #0]
    8378:	601e      	str	r6, [r3, #0]
    837a:	bc3c      	pop	{r2, r3, r4, r5}
    837c:	4690      	mov	r8, r2
    837e:	4699      	mov	r9, r3
    8380:	46a2      	mov	sl, r4
    8382:	46ab      	mov	fp, r5
    8384:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8386:	c904      	ldmia	r1!, {r2}
    8388:	c304      	stmia	r3!, {r2}
    838a:	428f      	cmp	r7, r1
    838c:	d9e9      	bls.n	8362 <__lshift+0x8a>
    838e:	c904      	ldmia	r1!, {r2}
    8390:	c304      	stmia	r3!, {r2}
    8392:	428f      	cmp	r7, r1
    8394:	d8f7      	bhi.n	8386 <__lshift+0xae>
    8396:	e7e4      	b.n	8362 <__lshift+0x8a>

00008398 <__mcmp>:
    8398:	690a      	ldr	r2, [r1, #16]
    839a:	6903      	ldr	r3, [r0, #16]
    839c:	b530      	push	{r4, r5, lr}
    839e:	0005      	movs	r5, r0
    83a0:	1a98      	subs	r0, r3, r2
    83a2:	d111      	bne.n	83c8 <__mcmp+0x30>
    83a4:	0092      	lsls	r2, r2, #2
    83a6:	3514      	adds	r5, #20
    83a8:	3114      	adds	r1, #20
    83aa:	18ab      	adds	r3, r5, r2
    83ac:	1889      	adds	r1, r1, r2
    83ae:	e001      	b.n	83b4 <__mcmp+0x1c>
    83b0:	429d      	cmp	r5, r3
    83b2:	d209      	bcs.n	83c8 <__mcmp+0x30>
    83b4:	3b04      	subs	r3, #4
    83b6:	3904      	subs	r1, #4
    83b8:	681c      	ldr	r4, [r3, #0]
    83ba:	680a      	ldr	r2, [r1, #0]
    83bc:	4294      	cmp	r4, r2
    83be:	d0f7      	beq.n	83b0 <__mcmp+0x18>
    83c0:	4294      	cmp	r4, r2
    83c2:	4180      	sbcs	r0, r0
    83c4:	2201      	movs	r2, #1
    83c6:	4310      	orrs	r0, r2
    83c8:	bd30      	pop	{r4, r5, pc}
    83ca:	46c0      	nop			; (mov r8, r8)

000083cc <__mdiff>:
    83cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    83ce:	4645      	mov	r5, r8
    83d0:	46de      	mov	lr, fp
    83d2:	4657      	mov	r7, sl
    83d4:	464e      	mov	r6, r9
    83d6:	0014      	movs	r4, r2
    83d8:	690b      	ldr	r3, [r1, #16]
    83da:	6912      	ldr	r2, [r2, #16]
    83dc:	b5e0      	push	{r5, r6, r7, lr}
    83de:	4688      	mov	r8, r1
    83e0:	1a9d      	subs	r5, r3, r2
    83e2:	d11a      	bne.n	841a <__mdiff+0x4e>
    83e4:	000f      	movs	r7, r1
    83e6:	2114      	movs	r1, #20
    83e8:	468c      	mov	ip, r1
    83ea:	0092      	lsls	r2, r2, #2
    83ec:	3714      	adds	r7, #20
    83ee:	44a4      	add	ip, r4
    83f0:	18bb      	adds	r3, r7, r2
    83f2:	4462      	add	r2, ip
    83f4:	e002      	b.n	83fc <__mdiff+0x30>
    83f6:	429f      	cmp	r7, r3
    83f8:	d300      	bcc.n	83fc <__mdiff+0x30>
    83fa:	e070      	b.n	84de <__mdiff+0x112>
    83fc:	3b04      	subs	r3, #4
    83fe:	3a04      	subs	r2, #4
    8400:	681e      	ldr	r6, [r3, #0]
    8402:	6811      	ldr	r1, [r2, #0]
    8404:	428e      	cmp	r6, r1
    8406:	d0f6      	beq.n	83f6 <__mdiff+0x2a>
    8408:	d300      	bcc.n	840c <__mdiff+0x40>
    840a:	e071      	b.n	84f0 <__mdiff+0x124>
    840c:	4643      	mov	r3, r8
    840e:	003e      	movs	r6, r7
    8410:	46a0      	mov	r8, r4
    8412:	4667      	mov	r7, ip
    8414:	001c      	movs	r4, r3
    8416:	2501      	movs	r5, #1
    8418:	e006      	b.n	8428 <__mdiff+0x5c>
    841a:	2d00      	cmp	r5, #0
    841c:	db6a      	blt.n	84f4 <__mdiff+0x128>
    841e:	4647      	mov	r7, r8
    8420:	0026      	movs	r6, r4
    8422:	2500      	movs	r5, #0
    8424:	3714      	adds	r7, #20
    8426:	3614      	adds	r6, #20
    8428:	4643      	mov	r3, r8
    842a:	6859      	ldr	r1, [r3, #4]
    842c:	f7ff fd80 	bl	7f30 <_Balloc>
    8430:	4643      	mov	r3, r8
    8432:	4681      	mov	r9, r0
    8434:	60c5      	str	r5, [r0, #12]
    8436:	6918      	ldr	r0, [r3, #16]
    8438:	464d      	mov	r5, r9
    843a:	0083      	lsls	r3, r0, #2
    843c:	469c      	mov	ip, r3
    843e:	6923      	ldr	r3, [r4, #16]
    8440:	44bc      	add	ip, r7
    8442:	009b      	lsls	r3, r3, #2
    8444:	4698      	mov	r8, r3
    8446:	2300      	movs	r3, #0
    8448:	44b0      	add	r8, r6
    844a:	3514      	adds	r5, #20
    844c:	469a      	mov	sl, r3
    844e:	e000      	b.n	8452 <__mdiff+0x86>
    8450:	0027      	movs	r7, r4
    8452:	ce04      	ldmia	r6!, {r2}
    8454:	003c      	movs	r4, r7
    8456:	4693      	mov	fp, r2
    8458:	4659      	mov	r1, fp
    845a:	cc08      	ldmia	r4!, {r3}
    845c:	0409      	lsls	r1, r1, #16
    845e:	041a      	lsls	r2, r3, #16
    8460:	0c12      	lsrs	r2, r2, #16
    8462:	4452      	add	r2, sl
    8464:	0c09      	lsrs	r1, r1, #16
    8466:	1a52      	subs	r2, r2, r1
    8468:	0c19      	lsrs	r1, r3, #16
    846a:	465b      	mov	r3, fp
    846c:	0c1b      	lsrs	r3, r3, #16
    846e:	1acb      	subs	r3, r1, r3
    8470:	1411      	asrs	r1, r2, #16
    8472:	185b      	adds	r3, r3, r1
    8474:	0412      	lsls	r2, r2, #16
    8476:	1419      	asrs	r1, r3, #16
    8478:	0c12      	lsrs	r2, r2, #16
    847a:	041b      	lsls	r3, r3, #16
    847c:	468a      	mov	sl, r1
    847e:	4313      	orrs	r3, r2
    8480:	1d29      	adds	r1, r5, #4
    8482:	602b      	str	r3, [r5, #0]
    8484:	000d      	movs	r5, r1
    8486:	45b0      	cmp	r8, r6
    8488:	d8e2      	bhi.n	8450 <__mdiff+0x84>
    848a:	45a4      	cmp	ip, r4
    848c:	d916      	bls.n	84bc <__mdiff+0xf0>
    848e:	cc08      	ldmia	r4!, {r3}
    8490:	041a      	lsls	r2, r3, #16
    8492:	0c12      	lsrs	r2, r2, #16
    8494:	4452      	add	r2, sl
    8496:	1416      	asrs	r6, r2, #16
    8498:	0c1b      	lsrs	r3, r3, #16
    849a:	199b      	adds	r3, r3, r6
    849c:	0412      	lsls	r2, r2, #16
    849e:	141e      	asrs	r6, r3, #16
    84a0:	0c12      	lsrs	r2, r2, #16
    84a2:	041b      	lsls	r3, r3, #16
    84a4:	4313      	orrs	r3, r2
    84a6:	46b2      	mov	sl, r6
    84a8:	c508      	stmia	r5!, {r3}
    84aa:	45a4      	cmp	ip, r4
    84ac:	d8ef      	bhi.n	848e <__mdiff+0xc2>
    84ae:	4662      	mov	r2, ip
    84b0:	2403      	movs	r4, #3
    84b2:	1bd2      	subs	r2, r2, r7
    84b4:	3a05      	subs	r2, #5
    84b6:	43a2      	bics	r2, r4
    84b8:	3204      	adds	r2, #4
    84ba:	1889      	adds	r1, r1, r2
    84bc:	3904      	subs	r1, #4
    84be:	2b00      	cmp	r3, #0
    84c0:	d104      	bne.n	84cc <__mdiff+0x100>
    84c2:	3904      	subs	r1, #4
    84c4:	680b      	ldr	r3, [r1, #0]
    84c6:	3801      	subs	r0, #1
    84c8:	2b00      	cmp	r3, #0
    84ca:	d0fa      	beq.n	84c2 <__mdiff+0xf6>
    84cc:	464b      	mov	r3, r9
    84ce:	6118      	str	r0, [r3, #16]
    84d0:	4648      	mov	r0, r9
    84d2:	bc3c      	pop	{r2, r3, r4, r5}
    84d4:	4690      	mov	r8, r2
    84d6:	4699      	mov	r9, r3
    84d8:	46a2      	mov	sl, r4
    84da:	46ab      	mov	fp, r5
    84dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    84de:	2100      	movs	r1, #0
    84e0:	f7ff fd26 	bl	7f30 <_Balloc>
    84e4:	2301      	movs	r3, #1
    84e6:	6103      	str	r3, [r0, #16]
    84e8:	2300      	movs	r3, #0
    84ea:	4681      	mov	r9, r0
    84ec:	6143      	str	r3, [r0, #20]
    84ee:	e7ef      	b.n	84d0 <__mdiff+0x104>
    84f0:	4666      	mov	r6, ip
    84f2:	e799      	b.n	8428 <__mdiff+0x5c>
    84f4:	0027      	movs	r7, r4
    84f6:	000e      	movs	r6, r1
    84f8:	46a0      	mov	r8, r4
    84fa:	3714      	adds	r7, #20
    84fc:	3614      	adds	r6, #20
    84fe:	000c      	movs	r4, r1
    8500:	2501      	movs	r5, #1
    8502:	e791      	b.n	8428 <__mdiff+0x5c>

00008504 <__d2b>:
    8504:	b5f0      	push	{r4, r5, r6, r7, lr}
    8506:	2101      	movs	r1, #1
    8508:	001c      	movs	r4, r3
    850a:	b083      	sub	sp, #12
    850c:	9e08      	ldr	r6, [sp, #32]
    850e:	0015      	movs	r5, r2
    8510:	f7ff fd0e 	bl	7f30 <_Balloc>
    8514:	0323      	lsls	r3, r4, #12
    8516:	0064      	lsls	r4, r4, #1
    8518:	0007      	movs	r7, r0
    851a:	0b1b      	lsrs	r3, r3, #12
    851c:	0d64      	lsrs	r4, r4, #21
    851e:	d002      	beq.n	8526 <__d2b+0x22>
    8520:	2280      	movs	r2, #128	; 0x80
    8522:	0352      	lsls	r2, r2, #13
    8524:	4313      	orrs	r3, r2
    8526:	9301      	str	r3, [sp, #4]
    8528:	2d00      	cmp	r5, #0
    852a:	d019      	beq.n	8560 <__d2b+0x5c>
    852c:	4668      	mov	r0, sp
    852e:	9500      	str	r5, [sp, #0]
    8530:	f7ff fd90 	bl	8054 <__lo0bits>
    8534:	2800      	cmp	r0, #0
    8536:	d130      	bne.n	859a <__d2b+0x96>
    8538:	9b00      	ldr	r3, [sp, #0]
    853a:	617b      	str	r3, [r7, #20]
    853c:	9b01      	ldr	r3, [sp, #4]
    853e:	61bb      	str	r3, [r7, #24]
    8540:	1e5a      	subs	r2, r3, #1
    8542:	4193      	sbcs	r3, r2
    8544:	1c5d      	adds	r5, r3, #1
    8546:	613d      	str	r5, [r7, #16]
    8548:	2c00      	cmp	r4, #0
    854a:	d014      	beq.n	8576 <__d2b+0x72>
    854c:	4b19      	ldr	r3, [pc, #100]	; (85b4 <__d2b+0xb0>)
    854e:	469c      	mov	ip, r3
    8550:	2335      	movs	r3, #53	; 0x35
    8552:	4464      	add	r4, ip
    8554:	1824      	adds	r4, r4, r0
    8556:	1a18      	subs	r0, r3, r0
    8558:	9b09      	ldr	r3, [sp, #36]	; 0x24
    855a:	6034      	str	r4, [r6, #0]
    855c:	6018      	str	r0, [r3, #0]
    855e:	e019      	b.n	8594 <__d2b+0x90>
    8560:	a801      	add	r0, sp, #4
    8562:	f7ff fd77 	bl	8054 <__lo0bits>
    8566:	9b01      	ldr	r3, [sp, #4]
    8568:	3020      	adds	r0, #32
    856a:	617b      	str	r3, [r7, #20]
    856c:	2301      	movs	r3, #1
    856e:	2501      	movs	r5, #1
    8570:	613b      	str	r3, [r7, #16]
    8572:	2c00      	cmp	r4, #0
    8574:	d1ea      	bne.n	854c <__d2b+0x48>
    8576:	4b10      	ldr	r3, [pc, #64]	; (85b8 <__d2b+0xb4>)
    8578:	469c      	mov	ip, r3
    857a:	4b10      	ldr	r3, [pc, #64]	; (85bc <__d2b+0xb8>)
    857c:	4460      	add	r0, ip
    857e:	18eb      	adds	r3, r5, r3
    8580:	009b      	lsls	r3, r3, #2
    8582:	18fb      	adds	r3, r7, r3
    8584:	6030      	str	r0, [r6, #0]
    8586:	6958      	ldr	r0, [r3, #20]
    8588:	f7ff fd4a 	bl	8020 <__hi0bits>
    858c:	016b      	lsls	r3, r5, #5
    858e:	1a18      	subs	r0, r3, r0
    8590:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8592:	6018      	str	r0, [r3, #0]
    8594:	0038      	movs	r0, r7
    8596:	b003      	add	sp, #12
    8598:	bdf0      	pop	{r4, r5, r6, r7, pc}
    859a:	9b01      	ldr	r3, [sp, #4]
    859c:	2220      	movs	r2, #32
    859e:	0019      	movs	r1, r3
    85a0:	1a12      	subs	r2, r2, r0
    85a2:	4091      	lsls	r1, r2
    85a4:	000a      	movs	r2, r1
    85a6:	40c3      	lsrs	r3, r0
    85a8:	9900      	ldr	r1, [sp, #0]
    85aa:	9301      	str	r3, [sp, #4]
    85ac:	430a      	orrs	r2, r1
    85ae:	617a      	str	r2, [r7, #20]
    85b0:	e7c5      	b.n	853e <__d2b+0x3a>
    85b2:	46c0      	nop			; (mov r8, r8)
    85b4:	fffffbcd 	.word	0xfffffbcd
    85b8:	fffffbce 	.word	0xfffffbce
    85bc:	3fffffff 	.word	0x3fffffff

000085c0 <_realloc_r>:
    85c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    85c2:	464e      	mov	r6, r9
    85c4:	4645      	mov	r5, r8
    85c6:	46de      	mov	lr, fp
    85c8:	4657      	mov	r7, sl
    85ca:	b5e0      	push	{r5, r6, r7, lr}
    85cc:	b085      	sub	sp, #20
    85ce:	9001      	str	r0, [sp, #4]
    85d0:	000e      	movs	r6, r1
    85d2:	0015      	movs	r5, r2
    85d4:	2900      	cmp	r1, #0
    85d6:	d100      	bne.n	85da <_realloc_r+0x1a>
    85d8:	e09e      	b.n	8718 <_realloc_r+0x158>
    85da:	0037      	movs	r7, r6
    85dc:	9801      	ldr	r0, [sp, #4]
    85de:	3f08      	subs	r7, #8
    85e0:	f7ff fc96 	bl	7f10 <__malloc_lock>
    85e4:	687a      	ldr	r2, [r7, #4]
    85e6:	2303      	movs	r3, #3
    85e8:	0014      	movs	r4, r2
    85ea:	439c      	bics	r4, r3
    85ec:	002b      	movs	r3, r5
    85ee:	330b      	adds	r3, #11
    85f0:	46b9      	mov	r9, r7
    85f2:	2b16      	cmp	r3, #22
    85f4:	d847      	bhi.n	8686 <_realloc_r+0xc6>
    85f6:	2110      	movs	r1, #16
    85f8:	2310      	movs	r3, #16
    85fa:	4688      	mov	r8, r1
    85fc:	4545      	cmp	r5, r8
    85fe:	d846      	bhi.n	868e <_realloc_r+0xce>
    8600:	429c      	cmp	r4, r3
    8602:	da49      	bge.n	8698 <_realloc_r+0xd8>
    8604:	49cc      	ldr	r1, [pc, #816]	; (8938 <_realloc_r+0x378>)
    8606:	1938      	adds	r0, r7, r4
    8608:	468b      	mov	fp, r1
    860a:	6889      	ldr	r1, [r1, #8]
    860c:	9002      	str	r0, [sp, #8]
    860e:	4288      	cmp	r0, r1
    8610:	d100      	bne.n	8614 <_realloc_r+0x54>
    8612:	e0c2      	b.n	879a <_realloc_r+0x1da>
    8614:	2101      	movs	r1, #1
    8616:	468a      	mov	sl, r1
    8618:	6840      	ldr	r0, [r0, #4]
    861a:	0001      	movs	r1, r0
    861c:	9003      	str	r0, [sp, #12]
    861e:	4650      	mov	r0, sl
    8620:	4381      	bics	r1, r0
    8622:	468c      	mov	ip, r1
    8624:	9902      	ldr	r1, [sp, #8]
    8626:	468b      	mov	fp, r1
    8628:	44dc      	add	ip, fp
    862a:	4661      	mov	r1, ip
    862c:	6849      	ldr	r1, [r1, #4]
    862e:	4201      	tst	r1, r0
    8630:	d04d      	beq.n	86ce <_realloc_r+0x10e>
    8632:	4210      	tst	r0, r2
    8634:	d100      	bne.n	8638 <_realloc_r+0x78>
    8636:	e0a2      	b.n	877e <_realloc_r+0x1be>
    8638:	0029      	movs	r1, r5
    863a:	9801      	ldr	r0, [sp, #4]
    863c:	f7ff f924 	bl	7888 <_malloc_r>
    8640:	1e05      	subs	r5, r0, #0
    8642:	d039      	beq.n	86b8 <_realloc_r+0xf8>
    8644:	2301      	movs	r3, #1
    8646:	0002      	movs	r2, r0
    8648:	6879      	ldr	r1, [r7, #4]
    864a:	3a08      	subs	r2, #8
    864c:	4399      	bics	r1, r3
    864e:	187f      	adds	r7, r7, r1
    8650:	42ba      	cmp	r2, r7
    8652:	d100      	bne.n	8656 <_realloc_r+0x96>
    8654:	e12e      	b.n	88b4 <_realloc_r+0x2f4>
    8656:	1f22      	subs	r2, r4, #4
    8658:	2a24      	cmp	r2, #36	; 0x24
    865a:	d900      	bls.n	865e <_realloc_r+0x9e>
    865c:	e114      	b.n	8888 <_realloc_r+0x2c8>
    865e:	2a13      	cmp	r2, #19
    8660:	d900      	bls.n	8664 <_realloc_r+0xa4>
    8662:	e0e8      	b.n	8836 <_realloc_r+0x276>
    8664:	0003      	movs	r3, r0
    8666:	0032      	movs	r2, r6
    8668:	6811      	ldr	r1, [r2, #0]
    866a:	6019      	str	r1, [r3, #0]
    866c:	6851      	ldr	r1, [r2, #4]
    866e:	6059      	str	r1, [r3, #4]
    8670:	6892      	ldr	r2, [r2, #8]
    8672:	609a      	str	r2, [r3, #8]
    8674:	9c01      	ldr	r4, [sp, #4]
    8676:	0031      	movs	r1, r6
    8678:	0020      	movs	r0, r4
    867a:	f7fe fde7 	bl	724c <_free_r>
    867e:	0020      	movs	r0, r4
    8680:	f7ff fc4e 	bl	7f20 <__malloc_unlock>
    8684:	e01b      	b.n	86be <_realloc_r+0xfe>
    8686:	2107      	movs	r1, #7
    8688:	438b      	bics	r3, r1
    868a:	4698      	mov	r8, r3
    868c:	d5b6      	bpl.n	85fc <_realloc_r+0x3c>
    868e:	230c      	movs	r3, #12
    8690:	9a01      	ldr	r2, [sp, #4]
    8692:	2500      	movs	r5, #0
    8694:	6013      	str	r3, [r2, #0]
    8696:	e012      	b.n	86be <_realloc_r+0xfe>
    8698:	0035      	movs	r5, r6
    869a:	4643      	mov	r3, r8
    869c:	1ae3      	subs	r3, r4, r3
    869e:	2b0f      	cmp	r3, #15
    86a0:	d825      	bhi.n	86ee <_realloc_r+0x12e>
    86a2:	464b      	mov	r3, r9
    86a4:	2201      	movs	r2, #1
    86a6:	4649      	mov	r1, r9
    86a8:	685b      	ldr	r3, [r3, #4]
    86aa:	4013      	ands	r3, r2
    86ac:	4323      	orrs	r3, r4
    86ae:	604b      	str	r3, [r1, #4]
    86b0:	444c      	add	r4, r9
    86b2:	6863      	ldr	r3, [r4, #4]
    86b4:	431a      	orrs	r2, r3
    86b6:	6062      	str	r2, [r4, #4]
    86b8:	9801      	ldr	r0, [sp, #4]
    86ba:	f7ff fc31 	bl	7f20 <__malloc_unlock>
    86be:	0028      	movs	r0, r5
    86c0:	b005      	add	sp, #20
    86c2:	bc3c      	pop	{r2, r3, r4, r5}
    86c4:	4690      	mov	r8, r2
    86c6:	4699      	mov	r9, r3
    86c8:	46a2      	mov	sl, r4
    86ca:	46ab      	mov	fp, r5
    86cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    86ce:	2103      	movs	r1, #3
    86d0:	9803      	ldr	r0, [sp, #12]
    86d2:	468c      	mov	ip, r1
    86d4:	4388      	bics	r0, r1
    86d6:	1821      	adds	r1, r4, r0
    86d8:	468b      	mov	fp, r1
    86da:	4299      	cmp	r1, r3
    86dc:	db21      	blt.n	8722 <_realloc_r+0x162>
    86de:	9a02      	ldr	r2, [sp, #8]
    86e0:	0035      	movs	r5, r6
    86e2:	68d3      	ldr	r3, [r2, #12]
    86e4:	6892      	ldr	r2, [r2, #8]
    86e6:	465c      	mov	r4, fp
    86e8:	60d3      	str	r3, [r2, #12]
    86ea:	609a      	str	r2, [r3, #8]
    86ec:	e7d5      	b.n	869a <_realloc_r+0xda>
    86ee:	464a      	mov	r2, r9
    86f0:	2001      	movs	r0, #1
    86f2:	4646      	mov	r6, r8
    86f4:	6852      	ldr	r2, [r2, #4]
    86f6:	4649      	mov	r1, r9
    86f8:	4002      	ands	r2, r0
    86fa:	4332      	orrs	r2, r6
    86fc:	464e      	mov	r6, r9
    86fe:	4441      	add	r1, r8
    8700:	4303      	orrs	r3, r0
    8702:	6072      	str	r2, [r6, #4]
    8704:	444c      	add	r4, r9
    8706:	604b      	str	r3, [r1, #4]
    8708:	6863      	ldr	r3, [r4, #4]
    870a:	3108      	adds	r1, #8
    870c:	4318      	orrs	r0, r3
    870e:	6060      	str	r0, [r4, #4]
    8710:	9801      	ldr	r0, [sp, #4]
    8712:	f7fe fd9b 	bl	724c <_free_r>
    8716:	e7cf      	b.n	86b8 <_realloc_r+0xf8>
    8718:	0011      	movs	r1, r2
    871a:	f7ff f8b5 	bl	7888 <_malloc_r>
    871e:	0005      	movs	r5, r0
    8720:	e7cd      	b.n	86be <_realloc_r+0xfe>
    8722:	4651      	mov	r1, sl
    8724:	4211      	tst	r1, r2
    8726:	d000      	beq.n	872a <_realloc_r+0x16a>
    8728:	e786      	b.n	8638 <_realloc_r+0x78>
    872a:	4661      	mov	r1, ip
    872c:	683a      	ldr	r2, [r7, #0]
    872e:	1aba      	subs	r2, r7, r2
    8730:	4692      	mov	sl, r2
    8732:	6852      	ldr	r2, [r2, #4]
    8734:	438a      	bics	r2, r1
    8736:	1880      	adds	r0, r0, r2
    8738:	4683      	mov	fp, r0
    873a:	44a3      	add	fp, r4
    873c:	459b      	cmp	fp, r3
    873e:	db26      	blt.n	878e <_realloc_r+0x1ce>
    8740:	9a02      	ldr	r2, [sp, #8]
    8742:	68d3      	ldr	r3, [r2, #12]
    8744:	6892      	ldr	r2, [r2, #8]
    8746:	60d3      	str	r3, [r2, #12]
    8748:	609a      	str	r2, [r3, #8]
    874a:	4653      	mov	r3, sl
    874c:	4652      	mov	r2, sl
    874e:	4655      	mov	r5, sl
    8750:	6892      	ldr	r2, [r2, #8]
    8752:	68db      	ldr	r3, [r3, #12]
    8754:	3508      	adds	r5, #8
    8756:	60d3      	str	r3, [r2, #12]
    8758:	609a      	str	r2, [r3, #8]
    875a:	1f22      	subs	r2, r4, #4
    875c:	2a24      	cmp	r2, #36	; 0x24
    875e:	d900      	bls.n	8762 <_realloc_r+0x1a2>
    8760:	e096      	b.n	8890 <_realloc_r+0x2d0>
    8762:	2a13      	cmp	r2, #19
    8764:	d972      	bls.n	884c <_realloc_r+0x28c>
    8766:	4653      	mov	r3, sl
    8768:	6831      	ldr	r1, [r6, #0]
    876a:	6099      	str	r1, [r3, #8]
    876c:	6871      	ldr	r1, [r6, #4]
    876e:	60d9      	str	r1, [r3, #12]
    8770:	2a1b      	cmp	r2, #27
    8772:	d900      	bls.n	8776 <_realloc_r+0x1b6>
    8774:	e0a4      	b.n	88c0 <_realloc_r+0x300>
    8776:	0032      	movs	r2, r6
    8778:	3310      	adds	r3, #16
    877a:	3208      	adds	r2, #8
    877c:	e068      	b.n	8850 <_realloc_r+0x290>
    877e:	683a      	ldr	r2, [r7, #0]
    8780:	1aba      	subs	r2, r7, r2
    8782:	4692      	mov	sl, r2
    8784:	4651      	mov	r1, sl
    8786:	2203      	movs	r2, #3
    8788:	6849      	ldr	r1, [r1, #4]
    878a:	4391      	bics	r1, r2
    878c:	000a      	movs	r2, r1
    878e:	4693      	mov	fp, r2
    8790:	44a3      	add	fp, r4
    8792:	459b      	cmp	fp, r3
    8794:	da00      	bge.n	8798 <_realloc_r+0x1d8>
    8796:	e74f      	b.n	8638 <_realloc_r+0x78>
    8798:	e7d7      	b.n	874a <_realloc_r+0x18a>
    879a:	2003      	movs	r0, #3
    879c:	9902      	ldr	r1, [sp, #8]
    879e:	4684      	mov	ip, r0
    87a0:	6849      	ldr	r1, [r1, #4]
    87a2:	4381      	bics	r1, r0
    87a4:	4640      	mov	r0, r8
    87a6:	1909      	adds	r1, r1, r4
    87a8:	3010      	adds	r0, #16
    87aa:	9002      	str	r0, [sp, #8]
    87ac:	4281      	cmp	r1, r0
    87ae:	da58      	bge.n	8862 <_realloc_r+0x2a2>
    87b0:	07d2      	lsls	r2, r2, #31
    87b2:	d500      	bpl.n	87b6 <_realloc_r+0x1f6>
    87b4:	e740      	b.n	8638 <_realloc_r+0x78>
    87b6:	4660      	mov	r0, ip
    87b8:	683a      	ldr	r2, [r7, #0]
    87ba:	1aba      	subs	r2, r7, r2
    87bc:	4692      	mov	sl, r2
    87be:	6852      	ldr	r2, [r2, #4]
    87c0:	4382      	bics	r2, r0
    87c2:	9802      	ldr	r0, [sp, #8]
    87c4:	1851      	adds	r1, r2, r1
    87c6:	9103      	str	r1, [sp, #12]
    87c8:	4288      	cmp	r0, r1
    87ca:	dce0      	bgt.n	878e <_realloc_r+0x1ce>
    87cc:	4653      	mov	r3, sl
    87ce:	4652      	mov	r2, sl
    87d0:	4655      	mov	r5, sl
    87d2:	6892      	ldr	r2, [r2, #8]
    87d4:	68db      	ldr	r3, [r3, #12]
    87d6:	3508      	adds	r5, #8
    87d8:	60d3      	str	r3, [r2, #12]
    87da:	609a      	str	r2, [r3, #8]
    87dc:	1f22      	subs	r2, r4, #4
    87de:	2a24      	cmp	r2, #36	; 0x24
    87e0:	d900      	bls.n	87e4 <_realloc_r+0x224>
    87e2:	e08e      	b.n	8902 <_realloc_r+0x342>
    87e4:	2a13      	cmp	r2, #19
    87e6:	d800      	bhi.n	87ea <_realloc_r+0x22a>
    87e8:	e088      	b.n	88fc <_realloc_r+0x33c>
    87ea:	4653      	mov	r3, sl
    87ec:	6831      	ldr	r1, [r6, #0]
    87ee:	6099      	str	r1, [r3, #8]
    87f0:	6871      	ldr	r1, [r6, #4]
    87f2:	60d9      	str	r1, [r3, #12]
    87f4:	2a1b      	cmp	r2, #27
    87f6:	d900      	bls.n	87fa <_realloc_r+0x23a>
    87f8:	e088      	b.n	890c <_realloc_r+0x34c>
    87fa:	0032      	movs	r2, r6
    87fc:	3310      	adds	r3, #16
    87fe:	3208      	adds	r2, #8
    8800:	6811      	ldr	r1, [r2, #0]
    8802:	6019      	str	r1, [r3, #0]
    8804:	6851      	ldr	r1, [r2, #4]
    8806:	6059      	str	r1, [r3, #4]
    8808:	6892      	ldr	r2, [r2, #8]
    880a:	609a      	str	r2, [r3, #8]
    880c:	4651      	mov	r1, sl
    880e:	465b      	mov	r3, fp
    8810:	4642      	mov	r2, r8
    8812:	4441      	add	r1, r8
    8814:	6099      	str	r1, [r3, #8]
    8816:	9b03      	ldr	r3, [sp, #12]
    8818:	9801      	ldr	r0, [sp, #4]
    881a:	1a9a      	subs	r2, r3, r2
    881c:	2301      	movs	r3, #1
    881e:	431a      	orrs	r2, r3
    8820:	604a      	str	r2, [r1, #4]
    8822:	4652      	mov	r2, sl
    8824:	6852      	ldr	r2, [r2, #4]
    8826:	4013      	ands	r3, r2
    8828:	4642      	mov	r2, r8
    882a:	4313      	orrs	r3, r2
    882c:	4652      	mov	r2, sl
    882e:	6053      	str	r3, [r2, #4]
    8830:	f7ff fb76 	bl	7f20 <__malloc_unlock>
    8834:	e743      	b.n	86be <_realloc_r+0xfe>
    8836:	6833      	ldr	r3, [r6, #0]
    8838:	6003      	str	r3, [r0, #0]
    883a:	6873      	ldr	r3, [r6, #4]
    883c:	6043      	str	r3, [r0, #4]
    883e:	2a1b      	cmp	r2, #27
    8840:	d82d      	bhi.n	889e <_realloc_r+0x2de>
    8842:	0003      	movs	r3, r0
    8844:	0032      	movs	r2, r6
    8846:	3308      	adds	r3, #8
    8848:	3208      	adds	r2, #8
    884a:	e70d      	b.n	8668 <_realloc_r+0xa8>
    884c:	002b      	movs	r3, r5
    884e:	0032      	movs	r2, r6
    8850:	6811      	ldr	r1, [r2, #0]
    8852:	465c      	mov	r4, fp
    8854:	6019      	str	r1, [r3, #0]
    8856:	6851      	ldr	r1, [r2, #4]
    8858:	46d1      	mov	r9, sl
    885a:	6059      	str	r1, [r3, #4]
    885c:	6892      	ldr	r2, [r2, #8]
    885e:	609a      	str	r2, [r3, #8]
    8860:	e71b      	b.n	869a <_realloc_r+0xda>
    8862:	4643      	mov	r3, r8
    8864:	18fa      	adds	r2, r7, r3
    8866:	465b      	mov	r3, fp
    8868:	609a      	str	r2, [r3, #8]
    886a:	4643      	mov	r3, r8
    886c:	1ac9      	subs	r1, r1, r3
    886e:	2301      	movs	r3, #1
    8870:	4319      	orrs	r1, r3
    8872:	6051      	str	r1, [r2, #4]
    8874:	687a      	ldr	r2, [r7, #4]
    8876:	9801      	ldr	r0, [sp, #4]
    8878:	4013      	ands	r3, r2
    887a:	4642      	mov	r2, r8
    887c:	4313      	orrs	r3, r2
    887e:	607b      	str	r3, [r7, #4]
    8880:	f7ff fb4e 	bl	7f20 <__malloc_unlock>
    8884:	0035      	movs	r5, r6
    8886:	e71a      	b.n	86be <_realloc_r+0xfe>
    8888:	0031      	movs	r1, r6
    888a:	f7ff faf1 	bl	7e70 <memmove>
    888e:	e6f1      	b.n	8674 <_realloc_r+0xb4>
    8890:	0031      	movs	r1, r6
    8892:	0028      	movs	r0, r5
    8894:	f7ff faec 	bl	7e70 <memmove>
    8898:	465c      	mov	r4, fp
    889a:	46d1      	mov	r9, sl
    889c:	e6fd      	b.n	869a <_realloc_r+0xda>
    889e:	68b3      	ldr	r3, [r6, #8]
    88a0:	6083      	str	r3, [r0, #8]
    88a2:	68f3      	ldr	r3, [r6, #12]
    88a4:	60c3      	str	r3, [r0, #12]
    88a6:	2a24      	cmp	r2, #36	; 0x24
    88a8:	d015      	beq.n	88d6 <_realloc_r+0x316>
    88aa:	0003      	movs	r3, r0
    88ac:	0032      	movs	r2, r6
    88ae:	3310      	adds	r3, #16
    88b0:	3210      	adds	r2, #16
    88b2:	e6d9      	b.n	8668 <_realloc_r+0xa8>
    88b4:	6853      	ldr	r3, [r2, #4]
    88b6:	2203      	movs	r2, #3
    88b8:	4393      	bics	r3, r2
    88ba:	18e4      	adds	r4, r4, r3
    88bc:	0035      	movs	r5, r6
    88be:	e6ec      	b.n	869a <_realloc_r+0xda>
    88c0:	4653      	mov	r3, sl
    88c2:	68b1      	ldr	r1, [r6, #8]
    88c4:	6119      	str	r1, [r3, #16]
    88c6:	68f1      	ldr	r1, [r6, #12]
    88c8:	6159      	str	r1, [r3, #20]
    88ca:	2a24      	cmp	r2, #36	; 0x24
    88cc:	d00c      	beq.n	88e8 <_realloc_r+0x328>
    88ce:	0032      	movs	r2, r6
    88d0:	3318      	adds	r3, #24
    88d2:	3210      	adds	r2, #16
    88d4:	e7bc      	b.n	8850 <_realloc_r+0x290>
    88d6:	6933      	ldr	r3, [r6, #16]
    88d8:	0032      	movs	r2, r6
    88da:	6103      	str	r3, [r0, #16]
    88dc:	0003      	movs	r3, r0
    88de:	6971      	ldr	r1, [r6, #20]
    88e0:	3318      	adds	r3, #24
    88e2:	3218      	adds	r2, #24
    88e4:	6141      	str	r1, [r0, #20]
    88e6:	e6bf      	b.n	8668 <_realloc_r+0xa8>
    88e8:	4653      	mov	r3, sl
    88ea:	6932      	ldr	r2, [r6, #16]
    88ec:	4651      	mov	r1, sl
    88ee:	619a      	str	r2, [r3, #24]
    88f0:	0032      	movs	r2, r6
    88f2:	6970      	ldr	r0, [r6, #20]
    88f4:	3320      	adds	r3, #32
    88f6:	3218      	adds	r2, #24
    88f8:	61c8      	str	r0, [r1, #28]
    88fa:	e7a9      	b.n	8850 <_realloc_r+0x290>
    88fc:	002b      	movs	r3, r5
    88fe:	0032      	movs	r2, r6
    8900:	e77e      	b.n	8800 <_realloc_r+0x240>
    8902:	0031      	movs	r1, r6
    8904:	0028      	movs	r0, r5
    8906:	f7ff fab3 	bl	7e70 <memmove>
    890a:	e77f      	b.n	880c <_realloc_r+0x24c>
    890c:	4653      	mov	r3, sl
    890e:	68b1      	ldr	r1, [r6, #8]
    8910:	6119      	str	r1, [r3, #16]
    8912:	68f1      	ldr	r1, [r6, #12]
    8914:	6159      	str	r1, [r3, #20]
    8916:	2a24      	cmp	r2, #36	; 0x24
    8918:	d003      	beq.n	8922 <_realloc_r+0x362>
    891a:	0032      	movs	r2, r6
    891c:	3318      	adds	r3, #24
    891e:	3210      	adds	r2, #16
    8920:	e76e      	b.n	8800 <_realloc_r+0x240>
    8922:	4653      	mov	r3, sl
    8924:	6932      	ldr	r2, [r6, #16]
    8926:	4651      	mov	r1, sl
    8928:	619a      	str	r2, [r3, #24]
    892a:	0032      	movs	r2, r6
    892c:	6970      	ldr	r0, [r6, #20]
    892e:	3320      	adds	r3, #32
    8930:	3218      	adds	r2, #24
    8932:	61c8      	str	r0, [r1, #28]
    8934:	e764      	b.n	8800 <_realloc_r+0x240>
    8936:	46c0      	nop			; (mov r8, r8)
    8938:	200004ac 	.word	0x200004ac

0000893c <_sbrk_r>:
    893c:	2300      	movs	r3, #0
    893e:	b570      	push	{r4, r5, r6, lr}
    8940:	4c06      	ldr	r4, [pc, #24]	; (895c <_sbrk_r+0x20>)
    8942:	0005      	movs	r5, r0
    8944:	0008      	movs	r0, r1
    8946:	6023      	str	r3, [r4, #0]
    8948:	f7f8 fb90 	bl	106c <_sbrk>
    894c:	1c43      	adds	r3, r0, #1
    894e:	d000      	beq.n	8952 <_sbrk_r+0x16>
    8950:	bd70      	pop	{r4, r5, r6, pc}
    8952:	6823      	ldr	r3, [r4, #0]
    8954:	2b00      	cmp	r3, #0
    8956:	d0fb      	beq.n	8950 <_sbrk_r+0x14>
    8958:	602b      	str	r3, [r5, #0]
    895a:	e7f9      	b.n	8950 <_sbrk_r+0x14>
    895c:	200013b0 	.word	0x200013b0

00008960 <__sread>:
    8960:	b570      	push	{r4, r5, r6, lr}
    8962:	000c      	movs	r4, r1
    8964:	250e      	movs	r5, #14
    8966:	5f49      	ldrsh	r1, [r1, r5]
    8968:	f000 faa0 	bl	8eac <_read_r>
    896c:	2800      	cmp	r0, #0
    896e:	db03      	blt.n	8978 <__sread+0x18>
    8970:	6d23      	ldr	r3, [r4, #80]	; 0x50
    8972:	181b      	adds	r3, r3, r0
    8974:	6523      	str	r3, [r4, #80]	; 0x50
    8976:	bd70      	pop	{r4, r5, r6, pc}
    8978:	89a3      	ldrh	r3, [r4, #12]
    897a:	4a02      	ldr	r2, [pc, #8]	; (8984 <__sread+0x24>)
    897c:	4013      	ands	r3, r2
    897e:	81a3      	strh	r3, [r4, #12]
    8980:	e7f9      	b.n	8976 <__sread+0x16>
    8982:	46c0      	nop			; (mov r8, r8)
    8984:	ffffefff 	.word	0xffffefff

00008988 <__swrite>:
    8988:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    898a:	0016      	movs	r6, r2
    898c:	001f      	movs	r7, r3
    898e:	220c      	movs	r2, #12
    8990:	5e8b      	ldrsh	r3, [r1, r2]
    8992:	0005      	movs	r5, r0
    8994:	000c      	movs	r4, r1
    8996:	05da      	lsls	r2, r3, #23
    8998:	d507      	bpl.n	89aa <__swrite+0x22>
    899a:	230e      	movs	r3, #14
    899c:	5ec9      	ldrsh	r1, [r1, r3]
    899e:	2200      	movs	r2, #0
    89a0:	2302      	movs	r3, #2
    89a2:	f000 fa59 	bl	8e58 <_lseek_r>
    89a6:	220c      	movs	r2, #12
    89a8:	5ea3      	ldrsh	r3, [r4, r2]
    89aa:	4a05      	ldr	r2, [pc, #20]	; (89c0 <__swrite+0x38>)
    89ac:	0028      	movs	r0, r5
    89ae:	4013      	ands	r3, r2
    89b0:	81a3      	strh	r3, [r4, #12]
    89b2:	0032      	movs	r2, r6
    89b4:	230e      	movs	r3, #14
    89b6:	5ee1      	ldrsh	r1, [r4, r3]
    89b8:	003b      	movs	r3, r7
    89ba:	f000 f86b 	bl	8a94 <_write_r>
    89be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    89c0:	ffffefff 	.word	0xffffefff

000089c4 <__sseek>:
    89c4:	b570      	push	{r4, r5, r6, lr}
    89c6:	000c      	movs	r4, r1
    89c8:	250e      	movs	r5, #14
    89ca:	5f49      	ldrsh	r1, [r1, r5]
    89cc:	f000 fa44 	bl	8e58 <_lseek_r>
    89d0:	1c43      	adds	r3, r0, #1
    89d2:	d006      	beq.n	89e2 <__sseek+0x1e>
    89d4:	2380      	movs	r3, #128	; 0x80
    89d6:	89a2      	ldrh	r2, [r4, #12]
    89d8:	015b      	lsls	r3, r3, #5
    89da:	4313      	orrs	r3, r2
    89dc:	81a3      	strh	r3, [r4, #12]
    89de:	6520      	str	r0, [r4, #80]	; 0x50
    89e0:	bd70      	pop	{r4, r5, r6, pc}
    89e2:	89a3      	ldrh	r3, [r4, #12]
    89e4:	4a01      	ldr	r2, [pc, #4]	; (89ec <__sseek+0x28>)
    89e6:	4013      	ands	r3, r2
    89e8:	81a3      	strh	r3, [r4, #12]
    89ea:	e7f9      	b.n	89e0 <__sseek+0x1c>
    89ec:	ffffefff 	.word	0xffffefff

000089f0 <__sclose>:
    89f0:	b510      	push	{r4, lr}
    89f2:	230e      	movs	r3, #14
    89f4:	5ec9      	ldrsh	r1, [r1, r3]
    89f6:	f000 f907 	bl	8c08 <_close_r>
    89fa:	bd10      	pop	{r4, pc}

000089fc <__sprint_r.part.0>:
    89fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    89fe:	464e      	mov	r6, r9
    8a00:	4645      	mov	r5, r8
    8a02:	46de      	mov	lr, fp
    8a04:	4657      	mov	r7, sl
    8a06:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    8a08:	b5e0      	push	{r5, r6, r7, lr}
    8a0a:	4680      	mov	r8, r0
    8a0c:	000e      	movs	r6, r1
    8a0e:	4691      	mov	r9, r2
    8a10:	049b      	lsls	r3, r3, #18
    8a12:	d531      	bpl.n	8a78 <__sprint_r.part.0+0x7c>
    8a14:	6813      	ldr	r3, [r2, #0]
    8a16:	469a      	mov	sl, r3
    8a18:	6893      	ldr	r3, [r2, #8]
    8a1a:	2b00      	cmp	r3, #0
    8a1c:	d02a      	beq.n	8a74 <__sprint_r.part.0+0x78>
    8a1e:	4652      	mov	r2, sl
    8a20:	6852      	ldr	r2, [r2, #4]
    8a22:	2500      	movs	r5, #0
    8a24:	4693      	mov	fp, r2
    8a26:	0897      	lsrs	r7, r2, #2
    8a28:	4652      	mov	r2, sl
    8a2a:	6814      	ldr	r4, [r2, #0]
    8a2c:	d104      	bne.n	8a38 <__sprint_r.part.0+0x3c>
    8a2e:	e016      	b.n	8a5e <__sprint_r.part.0+0x62>
    8a30:	3501      	adds	r5, #1
    8a32:	3404      	adds	r4, #4
    8a34:	42af      	cmp	r7, r5
    8a36:	d010      	beq.n	8a5a <__sprint_r.part.0+0x5e>
    8a38:	0032      	movs	r2, r6
    8a3a:	6821      	ldr	r1, [r4, #0]
    8a3c:	4640      	mov	r0, r8
    8a3e:	f000 f9a7 	bl	8d90 <_fputwc_r>
    8a42:	1c43      	adds	r3, r0, #1
    8a44:	d1f4      	bne.n	8a30 <__sprint_r.part.0+0x34>
    8a46:	464a      	mov	r2, r9
    8a48:	2300      	movs	r3, #0
    8a4a:	6093      	str	r3, [r2, #8]
    8a4c:	6053      	str	r3, [r2, #4]
    8a4e:	bc3c      	pop	{r2, r3, r4, r5}
    8a50:	4690      	mov	r8, r2
    8a52:	4699      	mov	r9, r3
    8a54:	46a2      	mov	sl, r4
    8a56:	46ab      	mov	fp, r5
    8a58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8a5a:	464b      	mov	r3, r9
    8a5c:	689b      	ldr	r3, [r3, #8]
    8a5e:	465a      	mov	r2, fp
    8a60:	2103      	movs	r1, #3
    8a62:	438a      	bics	r2, r1
    8a64:	1a9b      	subs	r3, r3, r2
    8a66:	464a      	mov	r2, r9
    8a68:	6093      	str	r3, [r2, #8]
    8a6a:	2208      	movs	r2, #8
    8a6c:	4694      	mov	ip, r2
    8a6e:	44e2      	add	sl, ip
    8a70:	2b00      	cmp	r3, #0
    8a72:	d1d4      	bne.n	8a1e <__sprint_r.part.0+0x22>
    8a74:	2000      	movs	r0, #0
    8a76:	e7e6      	b.n	8a46 <__sprint_r.part.0+0x4a>
    8a78:	f7fe fcc6 	bl	7408 <__sfvwrite_r>
    8a7c:	e7e3      	b.n	8a46 <__sprint_r.part.0+0x4a>
    8a7e:	46c0      	nop			; (mov r8, r8)

00008a80 <__sprint_r>:
    8a80:	6893      	ldr	r3, [r2, #8]
    8a82:	b510      	push	{r4, lr}
    8a84:	2b00      	cmp	r3, #0
    8a86:	d002      	beq.n	8a8e <__sprint_r+0xe>
    8a88:	f7ff ffb8 	bl	89fc <__sprint_r.part.0>
    8a8c:	bd10      	pop	{r4, pc}
    8a8e:	6053      	str	r3, [r2, #4]
    8a90:	2000      	movs	r0, #0
    8a92:	e7fb      	b.n	8a8c <__sprint_r+0xc>

00008a94 <_write_r>:
    8a94:	b570      	push	{r4, r5, r6, lr}
    8a96:	0005      	movs	r5, r0
    8a98:	0008      	movs	r0, r1
    8a9a:	0011      	movs	r1, r2
    8a9c:	2200      	movs	r2, #0
    8a9e:	4c06      	ldr	r4, [pc, #24]	; (8ab8 <_write_r+0x24>)
    8aa0:	6022      	str	r2, [r4, #0]
    8aa2:	001a      	movs	r2, r3
    8aa4:	f7f9 fcb6 	bl	2414 <_write>
    8aa8:	1c43      	adds	r3, r0, #1
    8aaa:	d000      	beq.n	8aae <_write_r+0x1a>
    8aac:	bd70      	pop	{r4, r5, r6, pc}
    8aae:	6823      	ldr	r3, [r4, #0]
    8ab0:	2b00      	cmp	r3, #0
    8ab2:	d0fb      	beq.n	8aac <_write_r+0x18>
    8ab4:	602b      	str	r3, [r5, #0]
    8ab6:	e7f9      	b.n	8aac <_write_r+0x18>
    8ab8:	200013b0 	.word	0x200013b0

00008abc <__register_exitproc>:
    8abc:	b5f0      	push	{r4, r5, r6, r7, lr}
    8abe:	464e      	mov	r6, r9
    8ac0:	4645      	mov	r5, r8
    8ac2:	46de      	mov	lr, fp
    8ac4:	4657      	mov	r7, sl
    8ac6:	b5e0      	push	{r5, r6, r7, lr}
    8ac8:	4d36      	ldr	r5, [pc, #216]	; (8ba4 <__register_exitproc+0xe8>)
    8aca:	b083      	sub	sp, #12
    8acc:	0006      	movs	r6, r0
    8ace:	6828      	ldr	r0, [r5, #0]
    8ad0:	4698      	mov	r8, r3
    8ad2:	000f      	movs	r7, r1
    8ad4:	4691      	mov	r9, r2
    8ad6:	f7fe fe51 	bl	777c <__retarget_lock_acquire_recursive>
    8ada:	4b33      	ldr	r3, [pc, #204]	; (8ba8 <__register_exitproc+0xec>)
    8adc:	681c      	ldr	r4, [r3, #0]
    8ade:	23a4      	movs	r3, #164	; 0xa4
    8ae0:	005b      	lsls	r3, r3, #1
    8ae2:	58e0      	ldr	r0, [r4, r3]
    8ae4:	2800      	cmp	r0, #0
    8ae6:	d052      	beq.n	8b8e <__register_exitproc+0xd2>
    8ae8:	6843      	ldr	r3, [r0, #4]
    8aea:	2b1f      	cmp	r3, #31
    8aec:	dc13      	bgt.n	8b16 <__register_exitproc+0x5a>
    8aee:	1c5a      	adds	r2, r3, #1
    8af0:	9201      	str	r2, [sp, #4]
    8af2:	2e00      	cmp	r6, #0
    8af4:	d128      	bne.n	8b48 <__register_exitproc+0x8c>
    8af6:	9a01      	ldr	r2, [sp, #4]
    8af8:	3302      	adds	r3, #2
    8afa:	009b      	lsls	r3, r3, #2
    8afc:	6042      	str	r2, [r0, #4]
    8afe:	501f      	str	r7, [r3, r0]
    8b00:	6828      	ldr	r0, [r5, #0]
    8b02:	f7fe fe3d 	bl	7780 <__retarget_lock_release_recursive>
    8b06:	2000      	movs	r0, #0
    8b08:	b003      	add	sp, #12
    8b0a:	bc3c      	pop	{r2, r3, r4, r5}
    8b0c:	4690      	mov	r8, r2
    8b0e:	4699      	mov	r9, r3
    8b10:	46a2      	mov	sl, r4
    8b12:	46ab      	mov	fp, r5
    8b14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8b16:	4b25      	ldr	r3, [pc, #148]	; (8bac <__register_exitproc+0xf0>)
    8b18:	2b00      	cmp	r3, #0
    8b1a:	d03d      	beq.n	8b98 <__register_exitproc+0xdc>
    8b1c:	20c8      	movs	r0, #200	; 0xc8
    8b1e:	0040      	lsls	r0, r0, #1
    8b20:	f7fe fea8 	bl	7874 <malloc>
    8b24:	2800      	cmp	r0, #0
    8b26:	d037      	beq.n	8b98 <__register_exitproc+0xdc>
    8b28:	22a4      	movs	r2, #164	; 0xa4
    8b2a:	2300      	movs	r3, #0
    8b2c:	0052      	lsls	r2, r2, #1
    8b2e:	58a1      	ldr	r1, [r4, r2]
    8b30:	6043      	str	r3, [r0, #4]
    8b32:	6001      	str	r1, [r0, #0]
    8b34:	50a0      	str	r0, [r4, r2]
    8b36:	3240      	adds	r2, #64	; 0x40
    8b38:	5083      	str	r3, [r0, r2]
    8b3a:	3204      	adds	r2, #4
    8b3c:	5083      	str	r3, [r0, r2]
    8b3e:	3301      	adds	r3, #1
    8b40:	9301      	str	r3, [sp, #4]
    8b42:	2300      	movs	r3, #0
    8b44:	2e00      	cmp	r6, #0
    8b46:	d0d6      	beq.n	8af6 <__register_exitproc+0x3a>
    8b48:	009a      	lsls	r2, r3, #2
    8b4a:	4692      	mov	sl, r2
    8b4c:	4482      	add	sl, r0
    8b4e:	464a      	mov	r2, r9
    8b50:	2188      	movs	r1, #136	; 0x88
    8b52:	4654      	mov	r4, sl
    8b54:	5062      	str	r2, [r4, r1]
    8b56:	22c4      	movs	r2, #196	; 0xc4
    8b58:	0052      	lsls	r2, r2, #1
    8b5a:	4691      	mov	r9, r2
    8b5c:	4481      	add	r9, r0
    8b5e:	464a      	mov	r2, r9
    8b60:	3987      	subs	r1, #135	; 0x87
    8b62:	4099      	lsls	r1, r3
    8b64:	6812      	ldr	r2, [r2, #0]
    8b66:	468b      	mov	fp, r1
    8b68:	430a      	orrs	r2, r1
    8b6a:	4694      	mov	ip, r2
    8b6c:	464a      	mov	r2, r9
    8b6e:	4661      	mov	r1, ip
    8b70:	6011      	str	r1, [r2, #0]
    8b72:	2284      	movs	r2, #132	; 0x84
    8b74:	4641      	mov	r1, r8
    8b76:	0052      	lsls	r2, r2, #1
    8b78:	50a1      	str	r1, [r4, r2]
    8b7a:	2e02      	cmp	r6, #2
    8b7c:	d1bb      	bne.n	8af6 <__register_exitproc+0x3a>
    8b7e:	0002      	movs	r2, r0
    8b80:	465c      	mov	r4, fp
    8b82:	328d      	adds	r2, #141	; 0x8d
    8b84:	32ff      	adds	r2, #255	; 0xff
    8b86:	6811      	ldr	r1, [r2, #0]
    8b88:	430c      	orrs	r4, r1
    8b8a:	6014      	str	r4, [r2, #0]
    8b8c:	e7b3      	b.n	8af6 <__register_exitproc+0x3a>
    8b8e:	0020      	movs	r0, r4
    8b90:	304d      	adds	r0, #77	; 0x4d
    8b92:	30ff      	adds	r0, #255	; 0xff
    8b94:	50e0      	str	r0, [r4, r3]
    8b96:	e7a7      	b.n	8ae8 <__register_exitproc+0x2c>
    8b98:	6828      	ldr	r0, [r5, #0]
    8b9a:	f7fe fdf1 	bl	7780 <__retarget_lock_release_recursive>
    8b9e:	2001      	movs	r0, #1
    8ba0:	4240      	negs	r0, r0
    8ba2:	e7b1      	b.n	8b08 <__register_exitproc+0x4c>
    8ba4:	200004a8 	.word	0x200004a8
    8ba8:	00009c7c 	.word	0x00009c7c
    8bac:	00007875 	.word	0x00007875

00008bb0 <_calloc_r>:
    8bb0:	b510      	push	{r4, lr}
    8bb2:	4351      	muls	r1, r2
    8bb4:	f7fe fe68 	bl	7888 <_malloc_r>
    8bb8:	1e04      	subs	r4, r0, #0
    8bba:	d01c      	beq.n	8bf6 <_calloc_r+0x46>
    8bbc:	0003      	movs	r3, r0
    8bbe:	3b08      	subs	r3, #8
    8bc0:	685a      	ldr	r2, [r3, #4]
    8bc2:	2303      	movs	r3, #3
    8bc4:	439a      	bics	r2, r3
    8bc6:	3a04      	subs	r2, #4
    8bc8:	2a24      	cmp	r2, #36	; 0x24
    8bca:	d816      	bhi.n	8bfa <_calloc_r+0x4a>
    8bcc:	0003      	movs	r3, r0
    8bce:	2a13      	cmp	r2, #19
    8bd0:	d90d      	bls.n	8bee <_calloc_r+0x3e>
    8bd2:	2100      	movs	r1, #0
    8bd4:	3308      	adds	r3, #8
    8bd6:	6001      	str	r1, [r0, #0]
    8bd8:	6041      	str	r1, [r0, #4]
    8bda:	2a1b      	cmp	r2, #27
    8bdc:	d907      	bls.n	8bee <_calloc_r+0x3e>
    8bde:	6081      	str	r1, [r0, #8]
    8be0:	60c1      	str	r1, [r0, #12]
    8be2:	2a24      	cmp	r2, #36	; 0x24
    8be4:	d10d      	bne.n	8c02 <_calloc_r+0x52>
    8be6:	0003      	movs	r3, r0
    8be8:	6101      	str	r1, [r0, #16]
    8bea:	3318      	adds	r3, #24
    8bec:	6141      	str	r1, [r0, #20]
    8bee:	2200      	movs	r2, #0
    8bf0:	601a      	str	r2, [r3, #0]
    8bf2:	605a      	str	r2, [r3, #4]
    8bf4:	609a      	str	r2, [r3, #8]
    8bf6:	0020      	movs	r0, r4
    8bf8:	bd10      	pop	{r4, pc}
    8bfa:	2100      	movs	r1, #0
    8bfc:	f7fb fb76 	bl	42ec <memset>
    8c00:	e7f9      	b.n	8bf6 <_calloc_r+0x46>
    8c02:	0003      	movs	r3, r0
    8c04:	3310      	adds	r3, #16
    8c06:	e7f2      	b.n	8bee <_calloc_r+0x3e>

00008c08 <_close_r>:
    8c08:	2300      	movs	r3, #0
    8c0a:	b570      	push	{r4, r5, r6, lr}
    8c0c:	4c06      	ldr	r4, [pc, #24]	; (8c28 <_close_r+0x20>)
    8c0e:	0005      	movs	r5, r0
    8c10:	0008      	movs	r0, r1
    8c12:	6023      	str	r3, [r4, #0]
    8c14:	f7f8 fa3c 	bl	1090 <_close>
    8c18:	1c43      	adds	r3, r0, #1
    8c1a:	d000      	beq.n	8c1e <_close_r+0x16>
    8c1c:	bd70      	pop	{r4, r5, r6, pc}
    8c1e:	6823      	ldr	r3, [r4, #0]
    8c20:	2b00      	cmp	r3, #0
    8c22:	d0fb      	beq.n	8c1c <_close_r+0x14>
    8c24:	602b      	str	r3, [r5, #0]
    8c26:	e7f9      	b.n	8c1c <_close_r+0x14>
    8c28:	200013b0 	.word	0x200013b0

00008c2c <_fclose_r>:
    8c2c:	b570      	push	{r4, r5, r6, lr}
    8c2e:	0005      	movs	r5, r0
    8c30:	1e0c      	subs	r4, r1, #0
    8c32:	d040      	beq.n	8cb6 <_fclose_r+0x8a>
    8c34:	2800      	cmp	r0, #0
    8c36:	d002      	beq.n	8c3e <_fclose_r+0x12>
    8c38:	6b83      	ldr	r3, [r0, #56]	; 0x38
    8c3a:	2b00      	cmp	r3, #0
    8c3c:	d03e      	beq.n	8cbc <_fclose_r+0x90>
    8c3e:	2601      	movs	r6, #1
    8c40:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8c42:	4233      	tst	r3, r6
    8c44:	d133      	bne.n	8cae <_fclose_r+0x82>
    8c46:	89a3      	ldrh	r3, [r4, #12]
    8c48:	059b      	lsls	r3, r3, #22
    8c4a:	d543      	bpl.n	8cd4 <_fclose_r+0xa8>
    8c4c:	0021      	movs	r1, r4
    8c4e:	0028      	movs	r0, r5
    8c50:	f7fe f950 	bl	6ef4 <__sflush_r>
    8c54:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    8c56:	0006      	movs	r6, r0
    8c58:	2b00      	cmp	r3, #0
    8c5a:	d004      	beq.n	8c66 <_fclose_r+0x3a>
    8c5c:	69e1      	ldr	r1, [r4, #28]
    8c5e:	0028      	movs	r0, r5
    8c60:	4798      	blx	r3
    8c62:	2800      	cmp	r0, #0
    8c64:	db44      	blt.n	8cf0 <_fclose_r+0xc4>
    8c66:	89a3      	ldrh	r3, [r4, #12]
    8c68:	061b      	lsls	r3, r3, #24
    8c6a:	d42a      	bmi.n	8cc2 <_fclose_r+0x96>
    8c6c:	6b21      	ldr	r1, [r4, #48]	; 0x30
    8c6e:	2900      	cmp	r1, #0
    8c70:	d008      	beq.n	8c84 <_fclose_r+0x58>
    8c72:	0023      	movs	r3, r4
    8c74:	3340      	adds	r3, #64	; 0x40
    8c76:	4299      	cmp	r1, r3
    8c78:	d002      	beq.n	8c80 <_fclose_r+0x54>
    8c7a:	0028      	movs	r0, r5
    8c7c:	f7fe fae6 	bl	724c <_free_r>
    8c80:	2300      	movs	r3, #0
    8c82:	6323      	str	r3, [r4, #48]	; 0x30
    8c84:	6c61      	ldr	r1, [r4, #68]	; 0x44
    8c86:	2900      	cmp	r1, #0
    8c88:	d004      	beq.n	8c94 <_fclose_r+0x68>
    8c8a:	0028      	movs	r0, r5
    8c8c:	f7fe fade 	bl	724c <_free_r>
    8c90:	2300      	movs	r3, #0
    8c92:	6463      	str	r3, [r4, #68]	; 0x44
    8c94:	f7fe fa60 	bl	7158 <__sfp_lock_acquire>
    8c98:	2300      	movs	r3, #0
    8c9a:	81a3      	strh	r3, [r4, #12]
    8c9c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8c9e:	07db      	lsls	r3, r3, #31
    8ca0:	d514      	bpl.n	8ccc <_fclose_r+0xa0>
    8ca2:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8ca4:	f7fe fd68 	bl	7778 <__retarget_lock_close_recursive>
    8ca8:	f7fe fa5e 	bl	7168 <__sfp_lock_release>
    8cac:	e004      	b.n	8cb8 <_fclose_r+0x8c>
    8cae:	220c      	movs	r2, #12
    8cb0:	5ea3      	ldrsh	r3, [r4, r2]
    8cb2:	2b00      	cmp	r3, #0
    8cb4:	d1ca      	bne.n	8c4c <_fclose_r+0x20>
    8cb6:	2600      	movs	r6, #0
    8cb8:	0030      	movs	r0, r6
    8cba:	bd70      	pop	{r4, r5, r6, pc}
    8cbc:	f7fe fa1c 	bl	70f8 <__sinit>
    8cc0:	e7bd      	b.n	8c3e <_fclose_r+0x12>
    8cc2:	6921      	ldr	r1, [r4, #16]
    8cc4:	0028      	movs	r0, r5
    8cc6:	f7fe fac1 	bl	724c <_free_r>
    8cca:	e7cf      	b.n	8c6c <_fclose_r+0x40>
    8ccc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8cce:	f7fe fd57 	bl	7780 <__retarget_lock_release_recursive>
    8cd2:	e7e6      	b.n	8ca2 <_fclose_r+0x76>
    8cd4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8cd6:	f7fe fd51 	bl	777c <__retarget_lock_acquire_recursive>
    8cda:	220c      	movs	r2, #12
    8cdc:	5ea3      	ldrsh	r3, [r4, r2]
    8cde:	2b00      	cmp	r3, #0
    8ce0:	d1b4      	bne.n	8c4c <_fclose_r+0x20>
    8ce2:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8ce4:	401e      	ands	r6, r3
    8ce6:	d1e6      	bne.n	8cb6 <_fclose_r+0x8a>
    8ce8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8cea:	f7fe fd49 	bl	7780 <__retarget_lock_release_recursive>
    8cee:	e7e3      	b.n	8cb8 <_fclose_r+0x8c>
    8cf0:	2601      	movs	r6, #1
    8cf2:	4276      	negs	r6, r6
    8cf4:	e7b7      	b.n	8c66 <_fclose_r+0x3a>
    8cf6:	46c0      	nop			; (mov r8, r8)

00008cf8 <__fputwc>:
    8cf8:	b5f0      	push	{r4, r5, r6, r7, lr}
    8cfa:	46ce      	mov	lr, r9
    8cfc:	4647      	mov	r7, r8
    8cfe:	b580      	push	{r7, lr}
    8d00:	b085      	sub	sp, #20
    8d02:	4680      	mov	r8, r0
    8d04:	4689      	mov	r9, r1
    8d06:	0014      	movs	r4, r2
    8d08:	f000 f896 	bl	8e38 <__locale_mb_cur_max>
    8d0c:	2801      	cmp	r0, #1
    8d0e:	d031      	beq.n	8d74 <__fputwc+0x7c>
    8d10:	0023      	movs	r3, r4
    8d12:	af03      	add	r7, sp, #12
    8d14:	335c      	adds	r3, #92	; 0x5c
    8d16:	464a      	mov	r2, r9
    8d18:	0039      	movs	r1, r7
    8d1a:	4640      	mov	r0, r8
    8d1c:	f000 f938 	bl	8f90 <_wcrtomb_r>
    8d20:	0006      	movs	r6, r0
    8d22:	1c43      	adds	r3, r0, #1
    8d24:	d021      	beq.n	8d6a <__fputwc+0x72>
    8d26:	2800      	cmp	r0, #0
    8d28:	d030      	beq.n	8d8c <__fputwc+0x94>
    8d2a:	7839      	ldrb	r1, [r7, #0]
    8d2c:	2500      	movs	r5, #0
    8d2e:	e007      	b.n	8d40 <__fputwc+0x48>
    8d30:	6823      	ldr	r3, [r4, #0]
    8d32:	1c5a      	adds	r2, r3, #1
    8d34:	6022      	str	r2, [r4, #0]
    8d36:	7019      	strb	r1, [r3, #0]
    8d38:	3501      	adds	r5, #1
    8d3a:	42b5      	cmp	r5, r6
    8d3c:	d226      	bcs.n	8d8c <__fputwc+0x94>
    8d3e:	5d79      	ldrb	r1, [r7, r5]
    8d40:	68a3      	ldr	r3, [r4, #8]
    8d42:	3b01      	subs	r3, #1
    8d44:	60a3      	str	r3, [r4, #8]
    8d46:	2b00      	cmp	r3, #0
    8d48:	daf2      	bge.n	8d30 <__fputwc+0x38>
    8d4a:	69a2      	ldr	r2, [r4, #24]
    8d4c:	4293      	cmp	r3, r2
    8d4e:	db01      	blt.n	8d54 <__fputwc+0x5c>
    8d50:	290a      	cmp	r1, #10
    8d52:	d1ed      	bne.n	8d30 <__fputwc+0x38>
    8d54:	0022      	movs	r2, r4
    8d56:	4640      	mov	r0, r8
    8d58:	f000 f8bc 	bl	8ed4 <__swbuf_r>
    8d5c:	1c43      	adds	r3, r0, #1
    8d5e:	d1eb      	bne.n	8d38 <__fputwc+0x40>
    8d60:	b005      	add	sp, #20
    8d62:	bc0c      	pop	{r2, r3}
    8d64:	4690      	mov	r8, r2
    8d66:	4699      	mov	r9, r3
    8d68:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8d6a:	2240      	movs	r2, #64	; 0x40
    8d6c:	89a3      	ldrh	r3, [r4, #12]
    8d6e:	4313      	orrs	r3, r2
    8d70:	81a3      	strh	r3, [r4, #12]
    8d72:	e7f5      	b.n	8d60 <__fputwc+0x68>
    8d74:	464b      	mov	r3, r9
    8d76:	3b01      	subs	r3, #1
    8d78:	2bfe      	cmp	r3, #254	; 0xfe
    8d7a:	d8c9      	bhi.n	8d10 <__fputwc+0x18>
    8d7c:	466a      	mov	r2, sp
    8d7e:	464b      	mov	r3, r9
    8d80:	71d3      	strb	r3, [r2, #7]
    8d82:	79d1      	ldrb	r1, [r2, #7]
    8d84:	af03      	add	r7, sp, #12
    8d86:	7039      	strb	r1, [r7, #0]
    8d88:	2601      	movs	r6, #1
    8d8a:	e7cf      	b.n	8d2c <__fputwc+0x34>
    8d8c:	4648      	mov	r0, r9
    8d8e:	e7e7      	b.n	8d60 <__fputwc+0x68>

00008d90 <_fputwc_r>:
    8d90:	6e53      	ldr	r3, [r2, #100]	; 0x64
    8d92:	b570      	push	{r4, r5, r6, lr}
    8d94:	0005      	movs	r5, r0
    8d96:	000e      	movs	r6, r1
    8d98:	0014      	movs	r4, r2
    8d9a:	07db      	lsls	r3, r3, #31
    8d9c:	d41e      	bmi.n	8ddc <_fputwc_r+0x4c>
    8d9e:	230c      	movs	r3, #12
    8da0:	5ed2      	ldrsh	r2, [r2, r3]
    8da2:	b291      	uxth	r1, r2
    8da4:	058b      	lsls	r3, r1, #22
    8da6:	d516      	bpl.n	8dd6 <_fputwc_r+0x46>
    8da8:	2380      	movs	r3, #128	; 0x80
    8daa:	019b      	lsls	r3, r3, #6
    8dac:	4219      	tst	r1, r3
    8dae:	d104      	bne.n	8dba <_fputwc_r+0x2a>
    8db0:	431a      	orrs	r2, r3
    8db2:	81a2      	strh	r2, [r4, #12]
    8db4:	6e62      	ldr	r2, [r4, #100]	; 0x64
    8db6:	4313      	orrs	r3, r2
    8db8:	6663      	str	r3, [r4, #100]	; 0x64
    8dba:	0028      	movs	r0, r5
    8dbc:	0022      	movs	r2, r4
    8dbe:	0031      	movs	r1, r6
    8dc0:	f7ff ff9a 	bl	8cf8 <__fputwc>
    8dc4:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8dc6:	0005      	movs	r5, r0
    8dc8:	07db      	lsls	r3, r3, #31
    8dca:	d402      	bmi.n	8dd2 <_fputwc_r+0x42>
    8dcc:	89a3      	ldrh	r3, [r4, #12]
    8dce:	059b      	lsls	r3, r3, #22
    8dd0:	d508      	bpl.n	8de4 <_fputwc_r+0x54>
    8dd2:	0028      	movs	r0, r5
    8dd4:	bd70      	pop	{r4, r5, r6, pc}
    8dd6:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8dd8:	f7fe fcd0 	bl	777c <__retarget_lock_acquire_recursive>
    8ddc:	230c      	movs	r3, #12
    8dde:	5ee2      	ldrsh	r2, [r4, r3]
    8de0:	b291      	uxth	r1, r2
    8de2:	e7e1      	b.n	8da8 <_fputwc_r+0x18>
    8de4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8de6:	f7fe fccb 	bl	7780 <__retarget_lock_release_recursive>
    8dea:	e7f2      	b.n	8dd2 <_fputwc_r+0x42>

00008dec <_fstat_r>:
    8dec:	2300      	movs	r3, #0
    8dee:	b570      	push	{r4, r5, r6, lr}
    8df0:	4c07      	ldr	r4, [pc, #28]	; (8e10 <_fstat_r+0x24>)
    8df2:	0005      	movs	r5, r0
    8df4:	0008      	movs	r0, r1
    8df6:	0011      	movs	r1, r2
    8df8:	6023      	str	r3, [r4, #0]
    8dfa:	f7f8 f94c 	bl	1096 <_fstat>
    8dfe:	1c43      	adds	r3, r0, #1
    8e00:	d000      	beq.n	8e04 <_fstat_r+0x18>
    8e02:	bd70      	pop	{r4, r5, r6, pc}
    8e04:	6823      	ldr	r3, [r4, #0]
    8e06:	2b00      	cmp	r3, #0
    8e08:	d0fb      	beq.n	8e02 <_fstat_r+0x16>
    8e0a:	602b      	str	r3, [r5, #0]
    8e0c:	e7f9      	b.n	8e02 <_fstat_r+0x16>
    8e0e:	46c0      	nop			; (mov r8, r8)
    8e10:	200013b0 	.word	0x200013b0

00008e14 <_isatty_r>:
    8e14:	2300      	movs	r3, #0
    8e16:	b570      	push	{r4, r5, r6, lr}
    8e18:	4c06      	ldr	r4, [pc, #24]	; (8e34 <_isatty_r+0x20>)
    8e1a:	0005      	movs	r5, r0
    8e1c:	0008      	movs	r0, r1
    8e1e:	6023      	str	r3, [r4, #0]
    8e20:	f7f8 f93e 	bl	10a0 <_isatty>
    8e24:	1c43      	adds	r3, r0, #1
    8e26:	d000      	beq.n	8e2a <_isatty_r+0x16>
    8e28:	bd70      	pop	{r4, r5, r6, pc}
    8e2a:	6823      	ldr	r3, [r4, #0]
    8e2c:	2b00      	cmp	r3, #0
    8e2e:	d0fb      	beq.n	8e28 <_isatty_r+0x14>
    8e30:	602b      	str	r3, [r5, #0]
    8e32:	e7f9      	b.n	8e28 <_isatty_r+0x14>
    8e34:	200013b0 	.word	0x200013b0

00008e38 <__locale_mb_cur_max>:
    8e38:	4b05      	ldr	r3, [pc, #20]	; (8e50 <__locale_mb_cur_max+0x18>)
    8e3a:	681b      	ldr	r3, [r3, #0]
    8e3c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    8e3e:	2b00      	cmp	r3, #0
    8e40:	d003      	beq.n	8e4a <__locale_mb_cur_max+0x12>
    8e42:	2294      	movs	r2, #148	; 0x94
    8e44:	0052      	lsls	r2, r2, #1
    8e46:	5c98      	ldrb	r0, [r3, r2]
    8e48:	4770      	bx	lr
    8e4a:	4b02      	ldr	r3, [pc, #8]	; (8e54 <__locale_mb_cur_max+0x1c>)
    8e4c:	e7f9      	b.n	8e42 <__locale_mb_cur_max+0xa>
    8e4e:	46c0      	nop			; (mov r8, r8)
    8e50:	2000007c 	.word	0x2000007c
    8e54:	200008bc 	.word	0x200008bc

00008e58 <_lseek_r>:
    8e58:	b570      	push	{r4, r5, r6, lr}
    8e5a:	0005      	movs	r5, r0
    8e5c:	0008      	movs	r0, r1
    8e5e:	0011      	movs	r1, r2
    8e60:	2200      	movs	r2, #0
    8e62:	4c06      	ldr	r4, [pc, #24]	; (8e7c <_lseek_r+0x24>)
    8e64:	6022      	str	r2, [r4, #0]
    8e66:	001a      	movs	r2, r3
    8e68:	f7f8 f91c 	bl	10a4 <_lseek>
    8e6c:	1c43      	adds	r3, r0, #1
    8e6e:	d000      	beq.n	8e72 <_lseek_r+0x1a>
    8e70:	bd70      	pop	{r4, r5, r6, pc}
    8e72:	6823      	ldr	r3, [r4, #0]
    8e74:	2b00      	cmp	r3, #0
    8e76:	d0fb      	beq.n	8e70 <_lseek_r+0x18>
    8e78:	602b      	str	r3, [r5, #0]
    8e7a:	e7f9      	b.n	8e70 <_lseek_r+0x18>
    8e7c:	200013b0 	.word	0x200013b0

00008e80 <__ascii_mbtowc>:
    8e80:	b082      	sub	sp, #8
    8e82:	2900      	cmp	r1, #0
    8e84:	d00a      	beq.n	8e9c <__ascii_mbtowc+0x1c>
    8e86:	2a00      	cmp	r2, #0
    8e88:	d00b      	beq.n	8ea2 <__ascii_mbtowc+0x22>
    8e8a:	2b00      	cmp	r3, #0
    8e8c:	d00b      	beq.n	8ea6 <__ascii_mbtowc+0x26>
    8e8e:	7813      	ldrb	r3, [r2, #0]
    8e90:	600b      	str	r3, [r1, #0]
    8e92:	7810      	ldrb	r0, [r2, #0]
    8e94:	1e43      	subs	r3, r0, #1
    8e96:	4198      	sbcs	r0, r3
    8e98:	b002      	add	sp, #8
    8e9a:	4770      	bx	lr
    8e9c:	a901      	add	r1, sp, #4
    8e9e:	2a00      	cmp	r2, #0
    8ea0:	d1f3      	bne.n	8e8a <__ascii_mbtowc+0xa>
    8ea2:	2000      	movs	r0, #0
    8ea4:	e7f8      	b.n	8e98 <__ascii_mbtowc+0x18>
    8ea6:	2002      	movs	r0, #2
    8ea8:	4240      	negs	r0, r0
    8eaa:	e7f5      	b.n	8e98 <__ascii_mbtowc+0x18>

00008eac <_read_r>:
    8eac:	b570      	push	{r4, r5, r6, lr}
    8eae:	0005      	movs	r5, r0
    8eb0:	0008      	movs	r0, r1
    8eb2:	0011      	movs	r1, r2
    8eb4:	2200      	movs	r2, #0
    8eb6:	4c06      	ldr	r4, [pc, #24]	; (8ed0 <_read_r+0x24>)
    8eb8:	6022      	str	r2, [r4, #0]
    8eba:	001a      	movs	r2, r3
    8ebc:	f7f9 fa96 	bl	23ec <_read>
    8ec0:	1c43      	adds	r3, r0, #1
    8ec2:	d000      	beq.n	8ec6 <_read_r+0x1a>
    8ec4:	bd70      	pop	{r4, r5, r6, pc}
    8ec6:	6823      	ldr	r3, [r4, #0]
    8ec8:	2b00      	cmp	r3, #0
    8eca:	d0fb      	beq.n	8ec4 <_read_r+0x18>
    8ecc:	602b      	str	r3, [r5, #0]
    8ece:	e7f9      	b.n	8ec4 <_read_r+0x18>
    8ed0:	200013b0 	.word	0x200013b0

00008ed4 <__swbuf_r>:
    8ed4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8ed6:	0006      	movs	r6, r0
    8ed8:	000d      	movs	r5, r1
    8eda:	0014      	movs	r4, r2
    8edc:	2800      	cmp	r0, #0
    8ede:	d002      	beq.n	8ee6 <__swbuf_r+0x12>
    8ee0:	6b83      	ldr	r3, [r0, #56]	; 0x38
    8ee2:	2b00      	cmp	r3, #0
    8ee4:	d04e      	beq.n	8f84 <__swbuf_r+0xb0>
    8ee6:	69a3      	ldr	r3, [r4, #24]
    8ee8:	60a3      	str	r3, [r4, #8]
    8eea:	230c      	movs	r3, #12
    8eec:	5ee0      	ldrsh	r0, [r4, r3]
    8eee:	b281      	uxth	r1, r0
    8ef0:	070b      	lsls	r3, r1, #28
    8ef2:	d53c      	bpl.n	8f6e <__swbuf_r+0x9a>
    8ef4:	6923      	ldr	r3, [r4, #16]
    8ef6:	2b00      	cmp	r3, #0
    8ef8:	d039      	beq.n	8f6e <__swbuf_r+0x9a>
    8efa:	22ff      	movs	r2, #255	; 0xff
    8efc:	b2ef      	uxtb	r7, r5
    8efe:	4015      	ands	r5, r2
    8f00:	2280      	movs	r2, #128	; 0x80
    8f02:	0192      	lsls	r2, r2, #6
    8f04:	4211      	tst	r1, r2
    8f06:	d015      	beq.n	8f34 <__swbuf_r+0x60>
    8f08:	6822      	ldr	r2, [r4, #0]
    8f0a:	6961      	ldr	r1, [r4, #20]
    8f0c:	1ad3      	subs	r3, r2, r3
    8f0e:	428b      	cmp	r3, r1
    8f10:	da1b      	bge.n	8f4a <__swbuf_r+0x76>
    8f12:	3301      	adds	r3, #1
    8f14:	68a1      	ldr	r1, [r4, #8]
    8f16:	3901      	subs	r1, #1
    8f18:	60a1      	str	r1, [r4, #8]
    8f1a:	1c51      	adds	r1, r2, #1
    8f1c:	6021      	str	r1, [r4, #0]
    8f1e:	7017      	strb	r7, [r2, #0]
    8f20:	6962      	ldr	r2, [r4, #20]
    8f22:	429a      	cmp	r2, r3
    8f24:	d01a      	beq.n	8f5c <__swbuf_r+0x88>
    8f26:	89a3      	ldrh	r3, [r4, #12]
    8f28:	07db      	lsls	r3, r3, #31
    8f2a:	d501      	bpl.n	8f30 <__swbuf_r+0x5c>
    8f2c:	2d0a      	cmp	r5, #10
    8f2e:	d015      	beq.n	8f5c <__swbuf_r+0x88>
    8f30:	0028      	movs	r0, r5
    8f32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8f34:	4302      	orrs	r2, r0
    8f36:	6e61      	ldr	r1, [r4, #100]	; 0x64
    8f38:	81a2      	strh	r2, [r4, #12]
    8f3a:	4a14      	ldr	r2, [pc, #80]	; (8f8c <__swbuf_r+0xb8>)
    8f3c:	400a      	ands	r2, r1
    8f3e:	6662      	str	r2, [r4, #100]	; 0x64
    8f40:	6961      	ldr	r1, [r4, #20]
    8f42:	6822      	ldr	r2, [r4, #0]
    8f44:	1ad3      	subs	r3, r2, r3
    8f46:	428b      	cmp	r3, r1
    8f48:	dbe3      	blt.n	8f12 <__swbuf_r+0x3e>
    8f4a:	0021      	movs	r1, r4
    8f4c:	0030      	movs	r0, r6
    8f4e:	f7fe f879 	bl	7044 <_fflush_r>
    8f52:	2800      	cmp	r0, #0
    8f54:	d108      	bne.n	8f68 <__swbuf_r+0x94>
    8f56:	6822      	ldr	r2, [r4, #0]
    8f58:	2301      	movs	r3, #1
    8f5a:	e7db      	b.n	8f14 <__swbuf_r+0x40>
    8f5c:	0021      	movs	r1, r4
    8f5e:	0030      	movs	r0, r6
    8f60:	f7fe f870 	bl	7044 <_fflush_r>
    8f64:	2800      	cmp	r0, #0
    8f66:	d0e3      	beq.n	8f30 <__swbuf_r+0x5c>
    8f68:	2501      	movs	r5, #1
    8f6a:	426d      	negs	r5, r5
    8f6c:	e7e0      	b.n	8f30 <__swbuf_r+0x5c>
    8f6e:	0021      	movs	r1, r4
    8f70:	0030      	movs	r0, r6
    8f72:	f7fc fed3 	bl	5d1c <__swsetup_r>
    8f76:	2800      	cmp	r0, #0
    8f78:	d1f6      	bne.n	8f68 <__swbuf_r+0x94>
    8f7a:	230c      	movs	r3, #12
    8f7c:	5ee0      	ldrsh	r0, [r4, r3]
    8f7e:	6923      	ldr	r3, [r4, #16]
    8f80:	b281      	uxth	r1, r0
    8f82:	e7ba      	b.n	8efa <__swbuf_r+0x26>
    8f84:	f7fe f8b8 	bl	70f8 <__sinit>
    8f88:	e7ad      	b.n	8ee6 <__swbuf_r+0x12>
    8f8a:	46c0      	nop			; (mov r8, r8)
    8f8c:	ffffdfff 	.word	0xffffdfff

00008f90 <_wcrtomb_r>:
    8f90:	b570      	push	{r4, r5, r6, lr}
    8f92:	001d      	movs	r5, r3
    8f94:	4b11      	ldr	r3, [pc, #68]	; (8fdc <_wcrtomb_r+0x4c>)
    8f96:	b084      	sub	sp, #16
    8f98:	681b      	ldr	r3, [r3, #0]
    8f9a:	0004      	movs	r4, r0
    8f9c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    8f9e:	2900      	cmp	r1, #0
    8fa0:	d00e      	beq.n	8fc0 <_wcrtomb_r+0x30>
    8fa2:	2b00      	cmp	r3, #0
    8fa4:	d016      	beq.n	8fd4 <_wcrtomb_r+0x44>
    8fa6:	20e0      	movs	r0, #224	; 0xe0
    8fa8:	581e      	ldr	r6, [r3, r0]
    8faa:	002b      	movs	r3, r5
    8fac:	0020      	movs	r0, r4
    8fae:	47b0      	blx	r6
    8fb0:	1c43      	adds	r3, r0, #1
    8fb2:	d103      	bne.n	8fbc <_wcrtomb_r+0x2c>
    8fb4:	2300      	movs	r3, #0
    8fb6:	602b      	str	r3, [r5, #0]
    8fb8:	338a      	adds	r3, #138	; 0x8a
    8fba:	6023      	str	r3, [r4, #0]
    8fbc:	b004      	add	sp, #16
    8fbe:	bd70      	pop	{r4, r5, r6, pc}
    8fc0:	2b00      	cmp	r3, #0
    8fc2:	d009      	beq.n	8fd8 <_wcrtomb_r+0x48>
    8fc4:	22e0      	movs	r2, #224	; 0xe0
    8fc6:	a901      	add	r1, sp, #4
    8fc8:	589e      	ldr	r6, [r3, r2]
    8fca:	0020      	movs	r0, r4
    8fcc:	002b      	movs	r3, r5
    8fce:	2200      	movs	r2, #0
    8fd0:	47b0      	blx	r6
    8fd2:	e7ed      	b.n	8fb0 <_wcrtomb_r+0x20>
    8fd4:	4b02      	ldr	r3, [pc, #8]	; (8fe0 <_wcrtomb_r+0x50>)
    8fd6:	e7e6      	b.n	8fa6 <_wcrtomb_r+0x16>
    8fd8:	4b01      	ldr	r3, [pc, #4]	; (8fe0 <_wcrtomb_r+0x50>)
    8fda:	e7f3      	b.n	8fc4 <_wcrtomb_r+0x34>
    8fdc:	2000007c 	.word	0x2000007c
    8fe0:	200008bc 	.word	0x200008bc

00008fe4 <__ascii_wctomb>:
    8fe4:	2900      	cmp	r1, #0
    8fe6:	d004      	beq.n	8ff2 <__ascii_wctomb+0xe>
    8fe8:	2aff      	cmp	r2, #255	; 0xff
    8fea:	d804      	bhi.n	8ff6 <__ascii_wctomb+0x12>
    8fec:	2001      	movs	r0, #1
    8fee:	700a      	strb	r2, [r1, #0]
    8ff0:	4770      	bx	lr
    8ff2:	2000      	movs	r0, #0
    8ff4:	e7fc      	b.n	8ff0 <__ascii_wctomb+0xc>
    8ff6:	238a      	movs	r3, #138	; 0x8a
    8ff8:	6003      	str	r3, [r0, #0]
    8ffa:	2001      	movs	r0, #1
    8ffc:	4240      	negs	r0, r0
    8ffe:	e7f7      	b.n	8ff0 <__ascii_wctomb+0xc>

00009000 <__divsi3>:
    9000:	4603      	mov	r3, r0
    9002:	430b      	orrs	r3, r1
    9004:	d47f      	bmi.n	9106 <__divsi3+0x106>
    9006:	2200      	movs	r2, #0
    9008:	0843      	lsrs	r3, r0, #1
    900a:	428b      	cmp	r3, r1
    900c:	d374      	bcc.n	90f8 <__divsi3+0xf8>
    900e:	0903      	lsrs	r3, r0, #4
    9010:	428b      	cmp	r3, r1
    9012:	d35f      	bcc.n	90d4 <__divsi3+0xd4>
    9014:	0a03      	lsrs	r3, r0, #8
    9016:	428b      	cmp	r3, r1
    9018:	d344      	bcc.n	90a4 <__divsi3+0xa4>
    901a:	0b03      	lsrs	r3, r0, #12
    901c:	428b      	cmp	r3, r1
    901e:	d328      	bcc.n	9072 <__divsi3+0x72>
    9020:	0c03      	lsrs	r3, r0, #16
    9022:	428b      	cmp	r3, r1
    9024:	d30d      	bcc.n	9042 <__divsi3+0x42>
    9026:	22ff      	movs	r2, #255	; 0xff
    9028:	0209      	lsls	r1, r1, #8
    902a:	ba12      	rev	r2, r2
    902c:	0c03      	lsrs	r3, r0, #16
    902e:	428b      	cmp	r3, r1
    9030:	d302      	bcc.n	9038 <__divsi3+0x38>
    9032:	1212      	asrs	r2, r2, #8
    9034:	0209      	lsls	r1, r1, #8
    9036:	d065      	beq.n	9104 <__divsi3+0x104>
    9038:	0b03      	lsrs	r3, r0, #12
    903a:	428b      	cmp	r3, r1
    903c:	d319      	bcc.n	9072 <__divsi3+0x72>
    903e:	e000      	b.n	9042 <__divsi3+0x42>
    9040:	0a09      	lsrs	r1, r1, #8
    9042:	0bc3      	lsrs	r3, r0, #15
    9044:	428b      	cmp	r3, r1
    9046:	d301      	bcc.n	904c <__divsi3+0x4c>
    9048:	03cb      	lsls	r3, r1, #15
    904a:	1ac0      	subs	r0, r0, r3
    904c:	4152      	adcs	r2, r2
    904e:	0b83      	lsrs	r3, r0, #14
    9050:	428b      	cmp	r3, r1
    9052:	d301      	bcc.n	9058 <__divsi3+0x58>
    9054:	038b      	lsls	r3, r1, #14
    9056:	1ac0      	subs	r0, r0, r3
    9058:	4152      	adcs	r2, r2
    905a:	0b43      	lsrs	r3, r0, #13
    905c:	428b      	cmp	r3, r1
    905e:	d301      	bcc.n	9064 <__divsi3+0x64>
    9060:	034b      	lsls	r3, r1, #13
    9062:	1ac0      	subs	r0, r0, r3
    9064:	4152      	adcs	r2, r2
    9066:	0b03      	lsrs	r3, r0, #12
    9068:	428b      	cmp	r3, r1
    906a:	d301      	bcc.n	9070 <__divsi3+0x70>
    906c:	030b      	lsls	r3, r1, #12
    906e:	1ac0      	subs	r0, r0, r3
    9070:	4152      	adcs	r2, r2
    9072:	0ac3      	lsrs	r3, r0, #11
    9074:	428b      	cmp	r3, r1
    9076:	d301      	bcc.n	907c <__divsi3+0x7c>
    9078:	02cb      	lsls	r3, r1, #11
    907a:	1ac0      	subs	r0, r0, r3
    907c:	4152      	adcs	r2, r2
    907e:	0a83      	lsrs	r3, r0, #10
    9080:	428b      	cmp	r3, r1
    9082:	d301      	bcc.n	9088 <__divsi3+0x88>
    9084:	028b      	lsls	r3, r1, #10
    9086:	1ac0      	subs	r0, r0, r3
    9088:	4152      	adcs	r2, r2
    908a:	0a43      	lsrs	r3, r0, #9
    908c:	428b      	cmp	r3, r1
    908e:	d301      	bcc.n	9094 <__divsi3+0x94>
    9090:	024b      	lsls	r3, r1, #9
    9092:	1ac0      	subs	r0, r0, r3
    9094:	4152      	adcs	r2, r2
    9096:	0a03      	lsrs	r3, r0, #8
    9098:	428b      	cmp	r3, r1
    909a:	d301      	bcc.n	90a0 <__divsi3+0xa0>
    909c:	020b      	lsls	r3, r1, #8
    909e:	1ac0      	subs	r0, r0, r3
    90a0:	4152      	adcs	r2, r2
    90a2:	d2cd      	bcs.n	9040 <__divsi3+0x40>
    90a4:	09c3      	lsrs	r3, r0, #7
    90a6:	428b      	cmp	r3, r1
    90a8:	d301      	bcc.n	90ae <__divsi3+0xae>
    90aa:	01cb      	lsls	r3, r1, #7
    90ac:	1ac0      	subs	r0, r0, r3
    90ae:	4152      	adcs	r2, r2
    90b0:	0983      	lsrs	r3, r0, #6
    90b2:	428b      	cmp	r3, r1
    90b4:	d301      	bcc.n	90ba <__divsi3+0xba>
    90b6:	018b      	lsls	r3, r1, #6
    90b8:	1ac0      	subs	r0, r0, r3
    90ba:	4152      	adcs	r2, r2
    90bc:	0943      	lsrs	r3, r0, #5
    90be:	428b      	cmp	r3, r1
    90c0:	d301      	bcc.n	90c6 <__divsi3+0xc6>
    90c2:	014b      	lsls	r3, r1, #5
    90c4:	1ac0      	subs	r0, r0, r3
    90c6:	4152      	adcs	r2, r2
    90c8:	0903      	lsrs	r3, r0, #4
    90ca:	428b      	cmp	r3, r1
    90cc:	d301      	bcc.n	90d2 <__divsi3+0xd2>
    90ce:	010b      	lsls	r3, r1, #4
    90d0:	1ac0      	subs	r0, r0, r3
    90d2:	4152      	adcs	r2, r2
    90d4:	08c3      	lsrs	r3, r0, #3
    90d6:	428b      	cmp	r3, r1
    90d8:	d301      	bcc.n	90de <__divsi3+0xde>
    90da:	00cb      	lsls	r3, r1, #3
    90dc:	1ac0      	subs	r0, r0, r3
    90de:	4152      	adcs	r2, r2
    90e0:	0883      	lsrs	r3, r0, #2
    90e2:	428b      	cmp	r3, r1
    90e4:	d301      	bcc.n	90ea <__divsi3+0xea>
    90e6:	008b      	lsls	r3, r1, #2
    90e8:	1ac0      	subs	r0, r0, r3
    90ea:	4152      	adcs	r2, r2
    90ec:	0843      	lsrs	r3, r0, #1
    90ee:	428b      	cmp	r3, r1
    90f0:	d301      	bcc.n	90f6 <__divsi3+0xf6>
    90f2:	004b      	lsls	r3, r1, #1
    90f4:	1ac0      	subs	r0, r0, r3
    90f6:	4152      	adcs	r2, r2
    90f8:	1a41      	subs	r1, r0, r1
    90fa:	d200      	bcs.n	90fe <__divsi3+0xfe>
    90fc:	4601      	mov	r1, r0
    90fe:	4152      	adcs	r2, r2
    9100:	4610      	mov	r0, r2
    9102:	4770      	bx	lr
    9104:	e05d      	b.n	91c2 <__divsi3+0x1c2>
    9106:	0fca      	lsrs	r2, r1, #31
    9108:	d000      	beq.n	910c <__divsi3+0x10c>
    910a:	4249      	negs	r1, r1
    910c:	1003      	asrs	r3, r0, #32
    910e:	d300      	bcc.n	9112 <__divsi3+0x112>
    9110:	4240      	negs	r0, r0
    9112:	4053      	eors	r3, r2
    9114:	2200      	movs	r2, #0
    9116:	469c      	mov	ip, r3
    9118:	0903      	lsrs	r3, r0, #4
    911a:	428b      	cmp	r3, r1
    911c:	d32d      	bcc.n	917a <__divsi3+0x17a>
    911e:	0a03      	lsrs	r3, r0, #8
    9120:	428b      	cmp	r3, r1
    9122:	d312      	bcc.n	914a <__divsi3+0x14a>
    9124:	22fc      	movs	r2, #252	; 0xfc
    9126:	0189      	lsls	r1, r1, #6
    9128:	ba12      	rev	r2, r2
    912a:	0a03      	lsrs	r3, r0, #8
    912c:	428b      	cmp	r3, r1
    912e:	d30c      	bcc.n	914a <__divsi3+0x14a>
    9130:	0189      	lsls	r1, r1, #6
    9132:	1192      	asrs	r2, r2, #6
    9134:	428b      	cmp	r3, r1
    9136:	d308      	bcc.n	914a <__divsi3+0x14a>
    9138:	0189      	lsls	r1, r1, #6
    913a:	1192      	asrs	r2, r2, #6
    913c:	428b      	cmp	r3, r1
    913e:	d304      	bcc.n	914a <__divsi3+0x14a>
    9140:	0189      	lsls	r1, r1, #6
    9142:	d03a      	beq.n	91ba <__divsi3+0x1ba>
    9144:	1192      	asrs	r2, r2, #6
    9146:	e000      	b.n	914a <__divsi3+0x14a>
    9148:	0989      	lsrs	r1, r1, #6
    914a:	09c3      	lsrs	r3, r0, #7
    914c:	428b      	cmp	r3, r1
    914e:	d301      	bcc.n	9154 <__divsi3+0x154>
    9150:	01cb      	lsls	r3, r1, #7
    9152:	1ac0      	subs	r0, r0, r3
    9154:	4152      	adcs	r2, r2
    9156:	0983      	lsrs	r3, r0, #6
    9158:	428b      	cmp	r3, r1
    915a:	d301      	bcc.n	9160 <__divsi3+0x160>
    915c:	018b      	lsls	r3, r1, #6
    915e:	1ac0      	subs	r0, r0, r3
    9160:	4152      	adcs	r2, r2
    9162:	0943      	lsrs	r3, r0, #5
    9164:	428b      	cmp	r3, r1
    9166:	d301      	bcc.n	916c <__divsi3+0x16c>
    9168:	014b      	lsls	r3, r1, #5
    916a:	1ac0      	subs	r0, r0, r3
    916c:	4152      	adcs	r2, r2
    916e:	0903      	lsrs	r3, r0, #4
    9170:	428b      	cmp	r3, r1
    9172:	d301      	bcc.n	9178 <__divsi3+0x178>
    9174:	010b      	lsls	r3, r1, #4
    9176:	1ac0      	subs	r0, r0, r3
    9178:	4152      	adcs	r2, r2
    917a:	08c3      	lsrs	r3, r0, #3
    917c:	428b      	cmp	r3, r1
    917e:	d301      	bcc.n	9184 <__divsi3+0x184>
    9180:	00cb      	lsls	r3, r1, #3
    9182:	1ac0      	subs	r0, r0, r3
    9184:	4152      	adcs	r2, r2
    9186:	0883      	lsrs	r3, r0, #2
    9188:	428b      	cmp	r3, r1
    918a:	d301      	bcc.n	9190 <__divsi3+0x190>
    918c:	008b      	lsls	r3, r1, #2
    918e:	1ac0      	subs	r0, r0, r3
    9190:	4152      	adcs	r2, r2
    9192:	d2d9      	bcs.n	9148 <__divsi3+0x148>
    9194:	0843      	lsrs	r3, r0, #1
    9196:	428b      	cmp	r3, r1
    9198:	d301      	bcc.n	919e <__divsi3+0x19e>
    919a:	004b      	lsls	r3, r1, #1
    919c:	1ac0      	subs	r0, r0, r3
    919e:	4152      	adcs	r2, r2
    91a0:	1a41      	subs	r1, r0, r1
    91a2:	d200      	bcs.n	91a6 <__divsi3+0x1a6>
    91a4:	4601      	mov	r1, r0
    91a6:	4663      	mov	r3, ip
    91a8:	4152      	adcs	r2, r2
    91aa:	105b      	asrs	r3, r3, #1
    91ac:	4610      	mov	r0, r2
    91ae:	d301      	bcc.n	91b4 <__divsi3+0x1b4>
    91b0:	4240      	negs	r0, r0
    91b2:	2b00      	cmp	r3, #0
    91b4:	d500      	bpl.n	91b8 <__divsi3+0x1b8>
    91b6:	4249      	negs	r1, r1
    91b8:	4770      	bx	lr
    91ba:	4663      	mov	r3, ip
    91bc:	105b      	asrs	r3, r3, #1
    91be:	d300      	bcc.n	91c2 <__divsi3+0x1c2>
    91c0:	4240      	negs	r0, r0
    91c2:	b501      	push	{r0, lr}
    91c4:	2000      	movs	r0, #0
    91c6:	f7f9 fc69 	bl	2a9c <__aeabi_idiv0>
    91ca:	bd02      	pop	{r1, pc}

000091cc <__aeabi_idivmod>:
    91cc:	2900      	cmp	r1, #0
    91ce:	d0f8      	beq.n	91c2 <__divsi3+0x1c2>
    91d0:	e716      	b.n	9000 <__divsi3>
    91d2:	4770      	bx	lr

000091d4 <__aeabi_dadd>:
    91d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    91d6:	4645      	mov	r5, r8
    91d8:	46de      	mov	lr, fp
    91da:	4657      	mov	r7, sl
    91dc:	464e      	mov	r6, r9
    91de:	030c      	lsls	r4, r1, #12
    91e0:	b5e0      	push	{r5, r6, r7, lr}
    91e2:	004e      	lsls	r6, r1, #1
    91e4:	0fc9      	lsrs	r1, r1, #31
    91e6:	4688      	mov	r8, r1
    91e8:	000d      	movs	r5, r1
    91ea:	0a61      	lsrs	r1, r4, #9
    91ec:	0f44      	lsrs	r4, r0, #29
    91ee:	430c      	orrs	r4, r1
    91f0:	00c7      	lsls	r7, r0, #3
    91f2:	0319      	lsls	r1, r3, #12
    91f4:	0058      	lsls	r0, r3, #1
    91f6:	0fdb      	lsrs	r3, r3, #31
    91f8:	469b      	mov	fp, r3
    91fa:	0a4b      	lsrs	r3, r1, #9
    91fc:	0f51      	lsrs	r1, r2, #29
    91fe:	430b      	orrs	r3, r1
    9200:	0d76      	lsrs	r6, r6, #21
    9202:	0d40      	lsrs	r0, r0, #21
    9204:	0019      	movs	r1, r3
    9206:	00d2      	lsls	r2, r2, #3
    9208:	45d8      	cmp	r8, fp
    920a:	d100      	bne.n	920e <__aeabi_dadd+0x3a>
    920c:	e0ae      	b.n	936c <__aeabi_dadd+0x198>
    920e:	1a35      	subs	r5, r6, r0
    9210:	2d00      	cmp	r5, #0
    9212:	dc00      	bgt.n	9216 <__aeabi_dadd+0x42>
    9214:	e0f6      	b.n	9404 <__aeabi_dadd+0x230>
    9216:	2800      	cmp	r0, #0
    9218:	d10f      	bne.n	923a <__aeabi_dadd+0x66>
    921a:	4313      	orrs	r3, r2
    921c:	d100      	bne.n	9220 <__aeabi_dadd+0x4c>
    921e:	e0db      	b.n	93d8 <__aeabi_dadd+0x204>
    9220:	1e6b      	subs	r3, r5, #1
    9222:	2b00      	cmp	r3, #0
    9224:	d000      	beq.n	9228 <__aeabi_dadd+0x54>
    9226:	e137      	b.n	9498 <__aeabi_dadd+0x2c4>
    9228:	1aba      	subs	r2, r7, r2
    922a:	4297      	cmp	r7, r2
    922c:	41bf      	sbcs	r7, r7
    922e:	1a64      	subs	r4, r4, r1
    9230:	427f      	negs	r7, r7
    9232:	1be4      	subs	r4, r4, r7
    9234:	2601      	movs	r6, #1
    9236:	0017      	movs	r7, r2
    9238:	e024      	b.n	9284 <__aeabi_dadd+0xb0>
    923a:	4bc6      	ldr	r3, [pc, #792]	; (9554 <__aeabi_dadd+0x380>)
    923c:	429e      	cmp	r6, r3
    923e:	d04d      	beq.n	92dc <__aeabi_dadd+0x108>
    9240:	2380      	movs	r3, #128	; 0x80
    9242:	041b      	lsls	r3, r3, #16
    9244:	4319      	orrs	r1, r3
    9246:	2d38      	cmp	r5, #56	; 0x38
    9248:	dd00      	ble.n	924c <__aeabi_dadd+0x78>
    924a:	e107      	b.n	945c <__aeabi_dadd+0x288>
    924c:	2d1f      	cmp	r5, #31
    924e:	dd00      	ble.n	9252 <__aeabi_dadd+0x7e>
    9250:	e138      	b.n	94c4 <__aeabi_dadd+0x2f0>
    9252:	2020      	movs	r0, #32
    9254:	1b43      	subs	r3, r0, r5
    9256:	469a      	mov	sl, r3
    9258:	000b      	movs	r3, r1
    925a:	4650      	mov	r0, sl
    925c:	4083      	lsls	r3, r0
    925e:	4699      	mov	r9, r3
    9260:	0013      	movs	r3, r2
    9262:	4648      	mov	r0, r9
    9264:	40eb      	lsrs	r3, r5
    9266:	4318      	orrs	r0, r3
    9268:	0003      	movs	r3, r0
    926a:	4650      	mov	r0, sl
    926c:	4082      	lsls	r2, r0
    926e:	1e50      	subs	r0, r2, #1
    9270:	4182      	sbcs	r2, r0
    9272:	40e9      	lsrs	r1, r5
    9274:	431a      	orrs	r2, r3
    9276:	1aba      	subs	r2, r7, r2
    9278:	1a61      	subs	r1, r4, r1
    927a:	4297      	cmp	r7, r2
    927c:	41a4      	sbcs	r4, r4
    927e:	0017      	movs	r7, r2
    9280:	4264      	negs	r4, r4
    9282:	1b0c      	subs	r4, r1, r4
    9284:	0223      	lsls	r3, r4, #8
    9286:	d562      	bpl.n	934e <__aeabi_dadd+0x17a>
    9288:	0264      	lsls	r4, r4, #9
    928a:	0a65      	lsrs	r5, r4, #9
    928c:	2d00      	cmp	r5, #0
    928e:	d100      	bne.n	9292 <__aeabi_dadd+0xbe>
    9290:	e0df      	b.n	9452 <__aeabi_dadd+0x27e>
    9292:	0028      	movs	r0, r5
    9294:	f7fa fe9a 	bl	3fcc <__clzsi2>
    9298:	0003      	movs	r3, r0
    929a:	3b08      	subs	r3, #8
    929c:	2b1f      	cmp	r3, #31
    929e:	dd00      	ble.n	92a2 <__aeabi_dadd+0xce>
    92a0:	e0d2      	b.n	9448 <__aeabi_dadd+0x274>
    92a2:	2220      	movs	r2, #32
    92a4:	003c      	movs	r4, r7
    92a6:	1ad2      	subs	r2, r2, r3
    92a8:	409d      	lsls	r5, r3
    92aa:	40d4      	lsrs	r4, r2
    92ac:	409f      	lsls	r7, r3
    92ae:	4325      	orrs	r5, r4
    92b0:	429e      	cmp	r6, r3
    92b2:	dd00      	ble.n	92b6 <__aeabi_dadd+0xe2>
    92b4:	e0c4      	b.n	9440 <__aeabi_dadd+0x26c>
    92b6:	1b9e      	subs	r6, r3, r6
    92b8:	1c73      	adds	r3, r6, #1
    92ba:	2b1f      	cmp	r3, #31
    92bc:	dd00      	ble.n	92c0 <__aeabi_dadd+0xec>
    92be:	e0f1      	b.n	94a4 <__aeabi_dadd+0x2d0>
    92c0:	2220      	movs	r2, #32
    92c2:	0038      	movs	r0, r7
    92c4:	0029      	movs	r1, r5
    92c6:	1ad2      	subs	r2, r2, r3
    92c8:	40d8      	lsrs	r0, r3
    92ca:	4091      	lsls	r1, r2
    92cc:	4097      	lsls	r7, r2
    92ce:	002c      	movs	r4, r5
    92d0:	4301      	orrs	r1, r0
    92d2:	1e78      	subs	r0, r7, #1
    92d4:	4187      	sbcs	r7, r0
    92d6:	40dc      	lsrs	r4, r3
    92d8:	2600      	movs	r6, #0
    92da:	430f      	orrs	r7, r1
    92dc:	077b      	lsls	r3, r7, #29
    92de:	d009      	beq.n	92f4 <__aeabi_dadd+0x120>
    92e0:	230f      	movs	r3, #15
    92e2:	403b      	ands	r3, r7
    92e4:	2b04      	cmp	r3, #4
    92e6:	d005      	beq.n	92f4 <__aeabi_dadd+0x120>
    92e8:	1d3b      	adds	r3, r7, #4
    92ea:	42bb      	cmp	r3, r7
    92ec:	41bf      	sbcs	r7, r7
    92ee:	427f      	negs	r7, r7
    92f0:	19e4      	adds	r4, r4, r7
    92f2:	001f      	movs	r7, r3
    92f4:	0223      	lsls	r3, r4, #8
    92f6:	d52c      	bpl.n	9352 <__aeabi_dadd+0x17e>
    92f8:	4b96      	ldr	r3, [pc, #600]	; (9554 <__aeabi_dadd+0x380>)
    92fa:	3601      	adds	r6, #1
    92fc:	429e      	cmp	r6, r3
    92fe:	d100      	bne.n	9302 <__aeabi_dadd+0x12e>
    9300:	e09a      	b.n	9438 <__aeabi_dadd+0x264>
    9302:	4645      	mov	r5, r8
    9304:	4b94      	ldr	r3, [pc, #592]	; (9558 <__aeabi_dadd+0x384>)
    9306:	08ff      	lsrs	r7, r7, #3
    9308:	401c      	ands	r4, r3
    930a:	0760      	lsls	r0, r4, #29
    930c:	0576      	lsls	r6, r6, #21
    930e:	0264      	lsls	r4, r4, #9
    9310:	4307      	orrs	r7, r0
    9312:	0b24      	lsrs	r4, r4, #12
    9314:	0d76      	lsrs	r6, r6, #21
    9316:	2100      	movs	r1, #0
    9318:	0324      	lsls	r4, r4, #12
    931a:	0b23      	lsrs	r3, r4, #12
    931c:	0d0c      	lsrs	r4, r1, #20
    931e:	4a8f      	ldr	r2, [pc, #572]	; (955c <__aeabi_dadd+0x388>)
    9320:	0524      	lsls	r4, r4, #20
    9322:	431c      	orrs	r4, r3
    9324:	4014      	ands	r4, r2
    9326:	0533      	lsls	r3, r6, #20
    9328:	4323      	orrs	r3, r4
    932a:	005b      	lsls	r3, r3, #1
    932c:	07ed      	lsls	r5, r5, #31
    932e:	085b      	lsrs	r3, r3, #1
    9330:	432b      	orrs	r3, r5
    9332:	0038      	movs	r0, r7
    9334:	0019      	movs	r1, r3
    9336:	bc3c      	pop	{r2, r3, r4, r5}
    9338:	4690      	mov	r8, r2
    933a:	4699      	mov	r9, r3
    933c:	46a2      	mov	sl, r4
    933e:	46ab      	mov	fp, r5
    9340:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9342:	4664      	mov	r4, ip
    9344:	4304      	orrs	r4, r0
    9346:	d100      	bne.n	934a <__aeabi_dadd+0x176>
    9348:	e211      	b.n	976e <__aeabi_dadd+0x59a>
    934a:	0004      	movs	r4, r0
    934c:	4667      	mov	r7, ip
    934e:	077b      	lsls	r3, r7, #29
    9350:	d1c6      	bne.n	92e0 <__aeabi_dadd+0x10c>
    9352:	4645      	mov	r5, r8
    9354:	0760      	lsls	r0, r4, #29
    9356:	08ff      	lsrs	r7, r7, #3
    9358:	4307      	orrs	r7, r0
    935a:	08e4      	lsrs	r4, r4, #3
    935c:	4b7d      	ldr	r3, [pc, #500]	; (9554 <__aeabi_dadd+0x380>)
    935e:	429e      	cmp	r6, r3
    9360:	d030      	beq.n	93c4 <__aeabi_dadd+0x1f0>
    9362:	0324      	lsls	r4, r4, #12
    9364:	0576      	lsls	r6, r6, #21
    9366:	0b24      	lsrs	r4, r4, #12
    9368:	0d76      	lsrs	r6, r6, #21
    936a:	e7d4      	b.n	9316 <__aeabi_dadd+0x142>
    936c:	1a33      	subs	r3, r6, r0
    936e:	469a      	mov	sl, r3
    9370:	2b00      	cmp	r3, #0
    9372:	dd78      	ble.n	9466 <__aeabi_dadd+0x292>
    9374:	2800      	cmp	r0, #0
    9376:	d031      	beq.n	93dc <__aeabi_dadd+0x208>
    9378:	4876      	ldr	r0, [pc, #472]	; (9554 <__aeabi_dadd+0x380>)
    937a:	4286      	cmp	r6, r0
    937c:	d0ae      	beq.n	92dc <__aeabi_dadd+0x108>
    937e:	2080      	movs	r0, #128	; 0x80
    9380:	0400      	lsls	r0, r0, #16
    9382:	4301      	orrs	r1, r0
    9384:	4653      	mov	r3, sl
    9386:	2b38      	cmp	r3, #56	; 0x38
    9388:	dc00      	bgt.n	938c <__aeabi_dadd+0x1b8>
    938a:	e0e9      	b.n	9560 <__aeabi_dadd+0x38c>
    938c:	430a      	orrs	r2, r1
    938e:	1e51      	subs	r1, r2, #1
    9390:	418a      	sbcs	r2, r1
    9392:	2100      	movs	r1, #0
    9394:	19d2      	adds	r2, r2, r7
    9396:	42ba      	cmp	r2, r7
    9398:	41bf      	sbcs	r7, r7
    939a:	1909      	adds	r1, r1, r4
    939c:	427c      	negs	r4, r7
    939e:	0017      	movs	r7, r2
    93a0:	190c      	adds	r4, r1, r4
    93a2:	0223      	lsls	r3, r4, #8
    93a4:	d5d3      	bpl.n	934e <__aeabi_dadd+0x17a>
    93a6:	4b6b      	ldr	r3, [pc, #428]	; (9554 <__aeabi_dadd+0x380>)
    93a8:	3601      	adds	r6, #1
    93aa:	429e      	cmp	r6, r3
    93ac:	d100      	bne.n	93b0 <__aeabi_dadd+0x1dc>
    93ae:	e13a      	b.n	9626 <__aeabi_dadd+0x452>
    93b0:	2001      	movs	r0, #1
    93b2:	4b69      	ldr	r3, [pc, #420]	; (9558 <__aeabi_dadd+0x384>)
    93b4:	401c      	ands	r4, r3
    93b6:	087b      	lsrs	r3, r7, #1
    93b8:	4007      	ands	r7, r0
    93ba:	431f      	orrs	r7, r3
    93bc:	07e0      	lsls	r0, r4, #31
    93be:	4307      	orrs	r7, r0
    93c0:	0864      	lsrs	r4, r4, #1
    93c2:	e78b      	b.n	92dc <__aeabi_dadd+0x108>
    93c4:	0023      	movs	r3, r4
    93c6:	433b      	orrs	r3, r7
    93c8:	d100      	bne.n	93cc <__aeabi_dadd+0x1f8>
    93ca:	e1cb      	b.n	9764 <__aeabi_dadd+0x590>
    93cc:	2280      	movs	r2, #128	; 0x80
    93ce:	0312      	lsls	r2, r2, #12
    93d0:	4314      	orrs	r4, r2
    93d2:	0324      	lsls	r4, r4, #12
    93d4:	0b24      	lsrs	r4, r4, #12
    93d6:	e79e      	b.n	9316 <__aeabi_dadd+0x142>
    93d8:	002e      	movs	r6, r5
    93da:	e77f      	b.n	92dc <__aeabi_dadd+0x108>
    93dc:	0008      	movs	r0, r1
    93de:	4310      	orrs	r0, r2
    93e0:	d100      	bne.n	93e4 <__aeabi_dadd+0x210>
    93e2:	e0b4      	b.n	954e <__aeabi_dadd+0x37a>
    93e4:	1e58      	subs	r0, r3, #1
    93e6:	2800      	cmp	r0, #0
    93e8:	d000      	beq.n	93ec <__aeabi_dadd+0x218>
    93ea:	e0de      	b.n	95aa <__aeabi_dadd+0x3d6>
    93ec:	18ba      	adds	r2, r7, r2
    93ee:	42ba      	cmp	r2, r7
    93f0:	419b      	sbcs	r3, r3
    93f2:	1864      	adds	r4, r4, r1
    93f4:	425b      	negs	r3, r3
    93f6:	18e4      	adds	r4, r4, r3
    93f8:	0017      	movs	r7, r2
    93fa:	2601      	movs	r6, #1
    93fc:	0223      	lsls	r3, r4, #8
    93fe:	d5a6      	bpl.n	934e <__aeabi_dadd+0x17a>
    9400:	2602      	movs	r6, #2
    9402:	e7d5      	b.n	93b0 <__aeabi_dadd+0x1dc>
    9404:	2d00      	cmp	r5, #0
    9406:	d16e      	bne.n	94e6 <__aeabi_dadd+0x312>
    9408:	1c70      	adds	r0, r6, #1
    940a:	0540      	lsls	r0, r0, #21
    940c:	0d40      	lsrs	r0, r0, #21
    940e:	2801      	cmp	r0, #1
    9410:	dc00      	bgt.n	9414 <__aeabi_dadd+0x240>
    9412:	e0f9      	b.n	9608 <__aeabi_dadd+0x434>
    9414:	1ab8      	subs	r0, r7, r2
    9416:	4684      	mov	ip, r0
    9418:	4287      	cmp	r7, r0
    941a:	4180      	sbcs	r0, r0
    941c:	1ae5      	subs	r5, r4, r3
    941e:	4240      	negs	r0, r0
    9420:	1a2d      	subs	r5, r5, r0
    9422:	0228      	lsls	r0, r5, #8
    9424:	d400      	bmi.n	9428 <__aeabi_dadd+0x254>
    9426:	e089      	b.n	953c <__aeabi_dadd+0x368>
    9428:	1bd7      	subs	r7, r2, r7
    942a:	42ba      	cmp	r2, r7
    942c:	4192      	sbcs	r2, r2
    942e:	1b1c      	subs	r4, r3, r4
    9430:	4252      	negs	r2, r2
    9432:	1aa5      	subs	r5, r4, r2
    9434:	46d8      	mov	r8, fp
    9436:	e729      	b.n	928c <__aeabi_dadd+0xb8>
    9438:	4645      	mov	r5, r8
    943a:	2400      	movs	r4, #0
    943c:	2700      	movs	r7, #0
    943e:	e76a      	b.n	9316 <__aeabi_dadd+0x142>
    9440:	4c45      	ldr	r4, [pc, #276]	; (9558 <__aeabi_dadd+0x384>)
    9442:	1af6      	subs	r6, r6, r3
    9444:	402c      	ands	r4, r5
    9446:	e749      	b.n	92dc <__aeabi_dadd+0x108>
    9448:	003d      	movs	r5, r7
    944a:	3828      	subs	r0, #40	; 0x28
    944c:	4085      	lsls	r5, r0
    944e:	2700      	movs	r7, #0
    9450:	e72e      	b.n	92b0 <__aeabi_dadd+0xdc>
    9452:	0038      	movs	r0, r7
    9454:	f7fa fdba 	bl	3fcc <__clzsi2>
    9458:	3020      	adds	r0, #32
    945a:	e71d      	b.n	9298 <__aeabi_dadd+0xc4>
    945c:	430a      	orrs	r2, r1
    945e:	1e51      	subs	r1, r2, #1
    9460:	418a      	sbcs	r2, r1
    9462:	2100      	movs	r1, #0
    9464:	e707      	b.n	9276 <__aeabi_dadd+0xa2>
    9466:	2b00      	cmp	r3, #0
    9468:	d000      	beq.n	946c <__aeabi_dadd+0x298>
    946a:	e0f3      	b.n	9654 <__aeabi_dadd+0x480>
    946c:	1c70      	adds	r0, r6, #1
    946e:	0543      	lsls	r3, r0, #21
    9470:	0d5b      	lsrs	r3, r3, #21
    9472:	2b01      	cmp	r3, #1
    9474:	dc00      	bgt.n	9478 <__aeabi_dadd+0x2a4>
    9476:	e0ad      	b.n	95d4 <__aeabi_dadd+0x400>
    9478:	4b36      	ldr	r3, [pc, #216]	; (9554 <__aeabi_dadd+0x380>)
    947a:	4298      	cmp	r0, r3
    947c:	d100      	bne.n	9480 <__aeabi_dadd+0x2ac>
    947e:	e0d1      	b.n	9624 <__aeabi_dadd+0x450>
    9480:	18ba      	adds	r2, r7, r2
    9482:	42ba      	cmp	r2, r7
    9484:	41bf      	sbcs	r7, r7
    9486:	1864      	adds	r4, r4, r1
    9488:	427f      	negs	r7, r7
    948a:	19e4      	adds	r4, r4, r7
    948c:	07e7      	lsls	r7, r4, #31
    948e:	0852      	lsrs	r2, r2, #1
    9490:	4317      	orrs	r7, r2
    9492:	0864      	lsrs	r4, r4, #1
    9494:	0006      	movs	r6, r0
    9496:	e721      	b.n	92dc <__aeabi_dadd+0x108>
    9498:	482e      	ldr	r0, [pc, #184]	; (9554 <__aeabi_dadd+0x380>)
    949a:	4285      	cmp	r5, r0
    949c:	d100      	bne.n	94a0 <__aeabi_dadd+0x2cc>
    949e:	e093      	b.n	95c8 <__aeabi_dadd+0x3f4>
    94a0:	001d      	movs	r5, r3
    94a2:	e6d0      	b.n	9246 <__aeabi_dadd+0x72>
    94a4:	0029      	movs	r1, r5
    94a6:	3e1f      	subs	r6, #31
    94a8:	40f1      	lsrs	r1, r6
    94aa:	2b20      	cmp	r3, #32
    94ac:	d100      	bne.n	94b0 <__aeabi_dadd+0x2dc>
    94ae:	e08d      	b.n	95cc <__aeabi_dadd+0x3f8>
    94b0:	2240      	movs	r2, #64	; 0x40
    94b2:	1ad3      	subs	r3, r2, r3
    94b4:	409d      	lsls	r5, r3
    94b6:	432f      	orrs	r7, r5
    94b8:	1e7d      	subs	r5, r7, #1
    94ba:	41af      	sbcs	r7, r5
    94bc:	2400      	movs	r4, #0
    94be:	430f      	orrs	r7, r1
    94c0:	2600      	movs	r6, #0
    94c2:	e744      	b.n	934e <__aeabi_dadd+0x17a>
    94c4:	002b      	movs	r3, r5
    94c6:	0008      	movs	r0, r1
    94c8:	3b20      	subs	r3, #32
    94ca:	40d8      	lsrs	r0, r3
    94cc:	0003      	movs	r3, r0
    94ce:	2d20      	cmp	r5, #32
    94d0:	d100      	bne.n	94d4 <__aeabi_dadd+0x300>
    94d2:	e07d      	b.n	95d0 <__aeabi_dadd+0x3fc>
    94d4:	2040      	movs	r0, #64	; 0x40
    94d6:	1b45      	subs	r5, r0, r5
    94d8:	40a9      	lsls	r1, r5
    94da:	430a      	orrs	r2, r1
    94dc:	1e51      	subs	r1, r2, #1
    94de:	418a      	sbcs	r2, r1
    94e0:	2100      	movs	r1, #0
    94e2:	431a      	orrs	r2, r3
    94e4:	e6c7      	b.n	9276 <__aeabi_dadd+0xa2>
    94e6:	2e00      	cmp	r6, #0
    94e8:	d050      	beq.n	958c <__aeabi_dadd+0x3b8>
    94ea:	4e1a      	ldr	r6, [pc, #104]	; (9554 <__aeabi_dadd+0x380>)
    94ec:	42b0      	cmp	r0, r6
    94ee:	d057      	beq.n	95a0 <__aeabi_dadd+0x3cc>
    94f0:	2680      	movs	r6, #128	; 0x80
    94f2:	426b      	negs	r3, r5
    94f4:	4699      	mov	r9, r3
    94f6:	0436      	lsls	r6, r6, #16
    94f8:	4334      	orrs	r4, r6
    94fa:	464b      	mov	r3, r9
    94fc:	2b38      	cmp	r3, #56	; 0x38
    94fe:	dd00      	ble.n	9502 <__aeabi_dadd+0x32e>
    9500:	e0d6      	b.n	96b0 <__aeabi_dadd+0x4dc>
    9502:	2b1f      	cmp	r3, #31
    9504:	dd00      	ble.n	9508 <__aeabi_dadd+0x334>
    9506:	e135      	b.n	9774 <__aeabi_dadd+0x5a0>
    9508:	2620      	movs	r6, #32
    950a:	1af5      	subs	r5, r6, r3
    950c:	0026      	movs	r6, r4
    950e:	40ae      	lsls	r6, r5
    9510:	46b2      	mov	sl, r6
    9512:	003e      	movs	r6, r7
    9514:	40de      	lsrs	r6, r3
    9516:	46ac      	mov	ip, r5
    9518:	0035      	movs	r5, r6
    951a:	4656      	mov	r6, sl
    951c:	432e      	orrs	r6, r5
    951e:	4665      	mov	r5, ip
    9520:	40af      	lsls	r7, r5
    9522:	1e7d      	subs	r5, r7, #1
    9524:	41af      	sbcs	r7, r5
    9526:	40dc      	lsrs	r4, r3
    9528:	4337      	orrs	r7, r6
    952a:	1bd7      	subs	r7, r2, r7
    952c:	42ba      	cmp	r2, r7
    952e:	4192      	sbcs	r2, r2
    9530:	1b0c      	subs	r4, r1, r4
    9532:	4252      	negs	r2, r2
    9534:	1aa4      	subs	r4, r4, r2
    9536:	0006      	movs	r6, r0
    9538:	46d8      	mov	r8, fp
    953a:	e6a3      	b.n	9284 <__aeabi_dadd+0xb0>
    953c:	4664      	mov	r4, ip
    953e:	4667      	mov	r7, ip
    9540:	432c      	orrs	r4, r5
    9542:	d000      	beq.n	9546 <__aeabi_dadd+0x372>
    9544:	e6a2      	b.n	928c <__aeabi_dadd+0xb8>
    9546:	2500      	movs	r5, #0
    9548:	2600      	movs	r6, #0
    954a:	2700      	movs	r7, #0
    954c:	e706      	b.n	935c <__aeabi_dadd+0x188>
    954e:	001e      	movs	r6, r3
    9550:	e6c4      	b.n	92dc <__aeabi_dadd+0x108>
    9552:	46c0      	nop			; (mov r8, r8)
    9554:	000007ff 	.word	0x000007ff
    9558:	ff7fffff 	.word	0xff7fffff
    955c:	800fffff 	.word	0x800fffff
    9560:	2b1f      	cmp	r3, #31
    9562:	dc63      	bgt.n	962c <__aeabi_dadd+0x458>
    9564:	2020      	movs	r0, #32
    9566:	1ac3      	subs	r3, r0, r3
    9568:	0008      	movs	r0, r1
    956a:	4098      	lsls	r0, r3
    956c:	469c      	mov	ip, r3
    956e:	4683      	mov	fp, r0
    9570:	4653      	mov	r3, sl
    9572:	0010      	movs	r0, r2
    9574:	40d8      	lsrs	r0, r3
    9576:	0003      	movs	r3, r0
    9578:	4658      	mov	r0, fp
    957a:	4318      	orrs	r0, r3
    957c:	4663      	mov	r3, ip
    957e:	409a      	lsls	r2, r3
    9580:	1e53      	subs	r3, r2, #1
    9582:	419a      	sbcs	r2, r3
    9584:	4653      	mov	r3, sl
    9586:	4302      	orrs	r2, r0
    9588:	40d9      	lsrs	r1, r3
    958a:	e703      	b.n	9394 <__aeabi_dadd+0x1c0>
    958c:	0026      	movs	r6, r4
    958e:	433e      	orrs	r6, r7
    9590:	d006      	beq.n	95a0 <__aeabi_dadd+0x3cc>
    9592:	43eb      	mvns	r3, r5
    9594:	4699      	mov	r9, r3
    9596:	2b00      	cmp	r3, #0
    9598:	d0c7      	beq.n	952a <__aeabi_dadd+0x356>
    959a:	4e94      	ldr	r6, [pc, #592]	; (97ec <__aeabi_dadd+0x618>)
    959c:	42b0      	cmp	r0, r6
    959e:	d1ac      	bne.n	94fa <__aeabi_dadd+0x326>
    95a0:	000c      	movs	r4, r1
    95a2:	0017      	movs	r7, r2
    95a4:	0006      	movs	r6, r0
    95a6:	46d8      	mov	r8, fp
    95a8:	e698      	b.n	92dc <__aeabi_dadd+0x108>
    95aa:	4b90      	ldr	r3, [pc, #576]	; (97ec <__aeabi_dadd+0x618>)
    95ac:	459a      	cmp	sl, r3
    95ae:	d00b      	beq.n	95c8 <__aeabi_dadd+0x3f4>
    95b0:	4682      	mov	sl, r0
    95b2:	e6e7      	b.n	9384 <__aeabi_dadd+0x1b0>
    95b4:	2800      	cmp	r0, #0
    95b6:	d000      	beq.n	95ba <__aeabi_dadd+0x3e6>
    95b8:	e09e      	b.n	96f8 <__aeabi_dadd+0x524>
    95ba:	0018      	movs	r0, r3
    95bc:	4310      	orrs	r0, r2
    95be:	d100      	bne.n	95c2 <__aeabi_dadd+0x3ee>
    95c0:	e0e9      	b.n	9796 <__aeabi_dadd+0x5c2>
    95c2:	001c      	movs	r4, r3
    95c4:	0017      	movs	r7, r2
    95c6:	46d8      	mov	r8, fp
    95c8:	4e88      	ldr	r6, [pc, #544]	; (97ec <__aeabi_dadd+0x618>)
    95ca:	e687      	b.n	92dc <__aeabi_dadd+0x108>
    95cc:	2500      	movs	r5, #0
    95ce:	e772      	b.n	94b6 <__aeabi_dadd+0x2e2>
    95d0:	2100      	movs	r1, #0
    95d2:	e782      	b.n	94da <__aeabi_dadd+0x306>
    95d4:	0023      	movs	r3, r4
    95d6:	433b      	orrs	r3, r7
    95d8:	2e00      	cmp	r6, #0
    95da:	d000      	beq.n	95de <__aeabi_dadd+0x40a>
    95dc:	e0ab      	b.n	9736 <__aeabi_dadd+0x562>
    95de:	2b00      	cmp	r3, #0
    95e0:	d100      	bne.n	95e4 <__aeabi_dadd+0x410>
    95e2:	e0e7      	b.n	97b4 <__aeabi_dadd+0x5e0>
    95e4:	000b      	movs	r3, r1
    95e6:	4313      	orrs	r3, r2
    95e8:	d100      	bne.n	95ec <__aeabi_dadd+0x418>
    95ea:	e677      	b.n	92dc <__aeabi_dadd+0x108>
    95ec:	18ba      	adds	r2, r7, r2
    95ee:	42ba      	cmp	r2, r7
    95f0:	41bf      	sbcs	r7, r7
    95f2:	1864      	adds	r4, r4, r1
    95f4:	427f      	negs	r7, r7
    95f6:	19e4      	adds	r4, r4, r7
    95f8:	0223      	lsls	r3, r4, #8
    95fa:	d400      	bmi.n	95fe <__aeabi_dadd+0x42a>
    95fc:	e0f2      	b.n	97e4 <__aeabi_dadd+0x610>
    95fe:	4b7c      	ldr	r3, [pc, #496]	; (97f0 <__aeabi_dadd+0x61c>)
    9600:	0017      	movs	r7, r2
    9602:	401c      	ands	r4, r3
    9604:	0006      	movs	r6, r0
    9606:	e669      	b.n	92dc <__aeabi_dadd+0x108>
    9608:	0020      	movs	r0, r4
    960a:	4338      	orrs	r0, r7
    960c:	2e00      	cmp	r6, #0
    960e:	d1d1      	bne.n	95b4 <__aeabi_dadd+0x3e0>
    9610:	2800      	cmp	r0, #0
    9612:	d15b      	bne.n	96cc <__aeabi_dadd+0x4f8>
    9614:	001c      	movs	r4, r3
    9616:	4314      	orrs	r4, r2
    9618:	d100      	bne.n	961c <__aeabi_dadd+0x448>
    961a:	e0a8      	b.n	976e <__aeabi_dadd+0x59a>
    961c:	001c      	movs	r4, r3
    961e:	0017      	movs	r7, r2
    9620:	46d8      	mov	r8, fp
    9622:	e65b      	b.n	92dc <__aeabi_dadd+0x108>
    9624:	0006      	movs	r6, r0
    9626:	2400      	movs	r4, #0
    9628:	2700      	movs	r7, #0
    962a:	e697      	b.n	935c <__aeabi_dadd+0x188>
    962c:	4650      	mov	r0, sl
    962e:	000b      	movs	r3, r1
    9630:	3820      	subs	r0, #32
    9632:	40c3      	lsrs	r3, r0
    9634:	4699      	mov	r9, r3
    9636:	4653      	mov	r3, sl
    9638:	2b20      	cmp	r3, #32
    963a:	d100      	bne.n	963e <__aeabi_dadd+0x46a>
    963c:	e095      	b.n	976a <__aeabi_dadd+0x596>
    963e:	2340      	movs	r3, #64	; 0x40
    9640:	4650      	mov	r0, sl
    9642:	1a1b      	subs	r3, r3, r0
    9644:	4099      	lsls	r1, r3
    9646:	430a      	orrs	r2, r1
    9648:	1e51      	subs	r1, r2, #1
    964a:	418a      	sbcs	r2, r1
    964c:	464b      	mov	r3, r9
    964e:	2100      	movs	r1, #0
    9650:	431a      	orrs	r2, r3
    9652:	e69f      	b.n	9394 <__aeabi_dadd+0x1c0>
    9654:	2e00      	cmp	r6, #0
    9656:	d130      	bne.n	96ba <__aeabi_dadd+0x4e6>
    9658:	0026      	movs	r6, r4
    965a:	433e      	orrs	r6, r7
    965c:	d067      	beq.n	972e <__aeabi_dadd+0x55a>
    965e:	43db      	mvns	r3, r3
    9660:	469a      	mov	sl, r3
    9662:	2b00      	cmp	r3, #0
    9664:	d01c      	beq.n	96a0 <__aeabi_dadd+0x4cc>
    9666:	4e61      	ldr	r6, [pc, #388]	; (97ec <__aeabi_dadd+0x618>)
    9668:	42b0      	cmp	r0, r6
    966a:	d060      	beq.n	972e <__aeabi_dadd+0x55a>
    966c:	4653      	mov	r3, sl
    966e:	2b38      	cmp	r3, #56	; 0x38
    9670:	dd00      	ble.n	9674 <__aeabi_dadd+0x4a0>
    9672:	e096      	b.n	97a2 <__aeabi_dadd+0x5ce>
    9674:	2b1f      	cmp	r3, #31
    9676:	dd00      	ble.n	967a <__aeabi_dadd+0x4a6>
    9678:	e09f      	b.n	97ba <__aeabi_dadd+0x5e6>
    967a:	2620      	movs	r6, #32
    967c:	1af3      	subs	r3, r6, r3
    967e:	0026      	movs	r6, r4
    9680:	409e      	lsls	r6, r3
    9682:	469c      	mov	ip, r3
    9684:	46b3      	mov	fp, r6
    9686:	4653      	mov	r3, sl
    9688:	003e      	movs	r6, r7
    968a:	40de      	lsrs	r6, r3
    968c:	0033      	movs	r3, r6
    968e:	465e      	mov	r6, fp
    9690:	431e      	orrs	r6, r3
    9692:	4663      	mov	r3, ip
    9694:	409f      	lsls	r7, r3
    9696:	1e7b      	subs	r3, r7, #1
    9698:	419f      	sbcs	r7, r3
    969a:	4653      	mov	r3, sl
    969c:	40dc      	lsrs	r4, r3
    969e:	4337      	orrs	r7, r6
    96a0:	18bf      	adds	r7, r7, r2
    96a2:	4297      	cmp	r7, r2
    96a4:	4192      	sbcs	r2, r2
    96a6:	1864      	adds	r4, r4, r1
    96a8:	4252      	negs	r2, r2
    96aa:	18a4      	adds	r4, r4, r2
    96ac:	0006      	movs	r6, r0
    96ae:	e678      	b.n	93a2 <__aeabi_dadd+0x1ce>
    96b0:	4327      	orrs	r7, r4
    96b2:	1e7c      	subs	r4, r7, #1
    96b4:	41a7      	sbcs	r7, r4
    96b6:	2400      	movs	r4, #0
    96b8:	e737      	b.n	952a <__aeabi_dadd+0x356>
    96ba:	4e4c      	ldr	r6, [pc, #304]	; (97ec <__aeabi_dadd+0x618>)
    96bc:	42b0      	cmp	r0, r6
    96be:	d036      	beq.n	972e <__aeabi_dadd+0x55a>
    96c0:	2680      	movs	r6, #128	; 0x80
    96c2:	425b      	negs	r3, r3
    96c4:	0436      	lsls	r6, r6, #16
    96c6:	469a      	mov	sl, r3
    96c8:	4334      	orrs	r4, r6
    96ca:	e7cf      	b.n	966c <__aeabi_dadd+0x498>
    96cc:	0018      	movs	r0, r3
    96ce:	4310      	orrs	r0, r2
    96d0:	d100      	bne.n	96d4 <__aeabi_dadd+0x500>
    96d2:	e603      	b.n	92dc <__aeabi_dadd+0x108>
    96d4:	1ab8      	subs	r0, r7, r2
    96d6:	4684      	mov	ip, r0
    96d8:	4567      	cmp	r7, ip
    96da:	41ad      	sbcs	r5, r5
    96dc:	1ae0      	subs	r0, r4, r3
    96de:	426d      	negs	r5, r5
    96e0:	1b40      	subs	r0, r0, r5
    96e2:	0205      	lsls	r5, r0, #8
    96e4:	d400      	bmi.n	96e8 <__aeabi_dadd+0x514>
    96e6:	e62c      	b.n	9342 <__aeabi_dadd+0x16e>
    96e8:	1bd7      	subs	r7, r2, r7
    96ea:	42ba      	cmp	r2, r7
    96ec:	4192      	sbcs	r2, r2
    96ee:	1b1c      	subs	r4, r3, r4
    96f0:	4252      	negs	r2, r2
    96f2:	1aa4      	subs	r4, r4, r2
    96f4:	46d8      	mov	r8, fp
    96f6:	e5f1      	b.n	92dc <__aeabi_dadd+0x108>
    96f8:	0018      	movs	r0, r3
    96fa:	4310      	orrs	r0, r2
    96fc:	d100      	bne.n	9700 <__aeabi_dadd+0x52c>
    96fe:	e763      	b.n	95c8 <__aeabi_dadd+0x3f4>
    9700:	08f8      	lsrs	r0, r7, #3
    9702:	0767      	lsls	r7, r4, #29
    9704:	4307      	orrs	r7, r0
    9706:	2080      	movs	r0, #128	; 0x80
    9708:	08e4      	lsrs	r4, r4, #3
    970a:	0300      	lsls	r0, r0, #12
    970c:	4204      	tst	r4, r0
    970e:	d008      	beq.n	9722 <__aeabi_dadd+0x54e>
    9710:	08dd      	lsrs	r5, r3, #3
    9712:	4205      	tst	r5, r0
    9714:	d105      	bne.n	9722 <__aeabi_dadd+0x54e>
    9716:	08d2      	lsrs	r2, r2, #3
    9718:	0759      	lsls	r1, r3, #29
    971a:	4311      	orrs	r1, r2
    971c:	000f      	movs	r7, r1
    971e:	002c      	movs	r4, r5
    9720:	46d8      	mov	r8, fp
    9722:	0f7b      	lsrs	r3, r7, #29
    9724:	00e4      	lsls	r4, r4, #3
    9726:	431c      	orrs	r4, r3
    9728:	00ff      	lsls	r7, r7, #3
    972a:	4e30      	ldr	r6, [pc, #192]	; (97ec <__aeabi_dadd+0x618>)
    972c:	e5d6      	b.n	92dc <__aeabi_dadd+0x108>
    972e:	000c      	movs	r4, r1
    9730:	0017      	movs	r7, r2
    9732:	0006      	movs	r6, r0
    9734:	e5d2      	b.n	92dc <__aeabi_dadd+0x108>
    9736:	2b00      	cmp	r3, #0
    9738:	d038      	beq.n	97ac <__aeabi_dadd+0x5d8>
    973a:	000b      	movs	r3, r1
    973c:	4313      	orrs	r3, r2
    973e:	d100      	bne.n	9742 <__aeabi_dadd+0x56e>
    9740:	e742      	b.n	95c8 <__aeabi_dadd+0x3f4>
    9742:	08f8      	lsrs	r0, r7, #3
    9744:	0767      	lsls	r7, r4, #29
    9746:	4307      	orrs	r7, r0
    9748:	2080      	movs	r0, #128	; 0x80
    974a:	08e4      	lsrs	r4, r4, #3
    974c:	0300      	lsls	r0, r0, #12
    974e:	4204      	tst	r4, r0
    9750:	d0e7      	beq.n	9722 <__aeabi_dadd+0x54e>
    9752:	08cb      	lsrs	r3, r1, #3
    9754:	4203      	tst	r3, r0
    9756:	d1e4      	bne.n	9722 <__aeabi_dadd+0x54e>
    9758:	08d2      	lsrs	r2, r2, #3
    975a:	0749      	lsls	r1, r1, #29
    975c:	4311      	orrs	r1, r2
    975e:	000f      	movs	r7, r1
    9760:	001c      	movs	r4, r3
    9762:	e7de      	b.n	9722 <__aeabi_dadd+0x54e>
    9764:	2700      	movs	r7, #0
    9766:	2400      	movs	r4, #0
    9768:	e5d5      	b.n	9316 <__aeabi_dadd+0x142>
    976a:	2100      	movs	r1, #0
    976c:	e76b      	b.n	9646 <__aeabi_dadd+0x472>
    976e:	2500      	movs	r5, #0
    9770:	2700      	movs	r7, #0
    9772:	e5f3      	b.n	935c <__aeabi_dadd+0x188>
    9774:	464e      	mov	r6, r9
    9776:	0025      	movs	r5, r4
    9778:	3e20      	subs	r6, #32
    977a:	40f5      	lsrs	r5, r6
    977c:	464b      	mov	r3, r9
    977e:	002e      	movs	r6, r5
    9780:	2b20      	cmp	r3, #32
    9782:	d02d      	beq.n	97e0 <__aeabi_dadd+0x60c>
    9784:	2540      	movs	r5, #64	; 0x40
    9786:	1aed      	subs	r5, r5, r3
    9788:	40ac      	lsls	r4, r5
    978a:	4327      	orrs	r7, r4
    978c:	1e7c      	subs	r4, r7, #1
    978e:	41a7      	sbcs	r7, r4
    9790:	2400      	movs	r4, #0
    9792:	4337      	orrs	r7, r6
    9794:	e6c9      	b.n	952a <__aeabi_dadd+0x356>
    9796:	2480      	movs	r4, #128	; 0x80
    9798:	2500      	movs	r5, #0
    979a:	0324      	lsls	r4, r4, #12
    979c:	4e13      	ldr	r6, [pc, #76]	; (97ec <__aeabi_dadd+0x618>)
    979e:	2700      	movs	r7, #0
    97a0:	e5dc      	b.n	935c <__aeabi_dadd+0x188>
    97a2:	4327      	orrs	r7, r4
    97a4:	1e7c      	subs	r4, r7, #1
    97a6:	41a7      	sbcs	r7, r4
    97a8:	2400      	movs	r4, #0
    97aa:	e779      	b.n	96a0 <__aeabi_dadd+0x4cc>
    97ac:	000c      	movs	r4, r1
    97ae:	0017      	movs	r7, r2
    97b0:	4e0e      	ldr	r6, [pc, #56]	; (97ec <__aeabi_dadd+0x618>)
    97b2:	e593      	b.n	92dc <__aeabi_dadd+0x108>
    97b4:	000c      	movs	r4, r1
    97b6:	0017      	movs	r7, r2
    97b8:	e590      	b.n	92dc <__aeabi_dadd+0x108>
    97ba:	4656      	mov	r6, sl
    97bc:	0023      	movs	r3, r4
    97be:	3e20      	subs	r6, #32
    97c0:	40f3      	lsrs	r3, r6
    97c2:	4699      	mov	r9, r3
    97c4:	4653      	mov	r3, sl
    97c6:	2b20      	cmp	r3, #32
    97c8:	d00e      	beq.n	97e8 <__aeabi_dadd+0x614>
    97ca:	2340      	movs	r3, #64	; 0x40
    97cc:	4656      	mov	r6, sl
    97ce:	1b9b      	subs	r3, r3, r6
    97d0:	409c      	lsls	r4, r3
    97d2:	4327      	orrs	r7, r4
    97d4:	1e7c      	subs	r4, r7, #1
    97d6:	41a7      	sbcs	r7, r4
    97d8:	464b      	mov	r3, r9
    97da:	2400      	movs	r4, #0
    97dc:	431f      	orrs	r7, r3
    97de:	e75f      	b.n	96a0 <__aeabi_dadd+0x4cc>
    97e0:	2400      	movs	r4, #0
    97e2:	e7d2      	b.n	978a <__aeabi_dadd+0x5b6>
    97e4:	0017      	movs	r7, r2
    97e6:	e5b2      	b.n	934e <__aeabi_dadd+0x17a>
    97e8:	2400      	movs	r4, #0
    97ea:	e7f2      	b.n	97d2 <__aeabi_dadd+0x5fe>
    97ec:	000007ff 	.word	0x000007ff
    97f0:	ff7fffff 	.word	0xff7fffff

000097f4 <__aeabi_dcmpun>:
    97f4:	b570      	push	{r4, r5, r6, lr}
    97f6:	4e0e      	ldr	r6, [pc, #56]	; (9830 <__aeabi_dcmpun+0x3c>)
    97f8:	030d      	lsls	r5, r1, #12
    97fa:	031c      	lsls	r4, r3, #12
    97fc:	0049      	lsls	r1, r1, #1
    97fe:	005b      	lsls	r3, r3, #1
    9800:	0b2d      	lsrs	r5, r5, #12
    9802:	0d49      	lsrs	r1, r1, #21
    9804:	0b24      	lsrs	r4, r4, #12
    9806:	0d5b      	lsrs	r3, r3, #21
    9808:	42b1      	cmp	r1, r6
    980a:	d004      	beq.n	9816 <__aeabi_dcmpun+0x22>
    980c:	4908      	ldr	r1, [pc, #32]	; (9830 <__aeabi_dcmpun+0x3c>)
    980e:	2000      	movs	r0, #0
    9810:	428b      	cmp	r3, r1
    9812:	d008      	beq.n	9826 <__aeabi_dcmpun+0x32>
    9814:	bd70      	pop	{r4, r5, r6, pc}
    9816:	4305      	orrs	r5, r0
    9818:	2001      	movs	r0, #1
    981a:	2d00      	cmp	r5, #0
    981c:	d1fa      	bne.n	9814 <__aeabi_dcmpun+0x20>
    981e:	4904      	ldr	r1, [pc, #16]	; (9830 <__aeabi_dcmpun+0x3c>)
    9820:	2000      	movs	r0, #0
    9822:	428b      	cmp	r3, r1
    9824:	d1f6      	bne.n	9814 <__aeabi_dcmpun+0x20>
    9826:	4314      	orrs	r4, r2
    9828:	0020      	movs	r0, r4
    982a:	1e44      	subs	r4, r0, #1
    982c:	41a0      	sbcs	r0, r4
    982e:	e7f1      	b.n	9814 <__aeabi_dcmpun+0x20>
    9830:	000007ff 	.word	0x000007ff
    9834:	682f2e2e 	.word	0x682f2e2e
    9838:	732f6c61 	.word	0x732f6c61
    983c:	682f6372 	.word	0x682f6372
    9840:	695f6c61 	.word	0x695f6c61
    9844:	6d5f6332 	.word	0x6d5f6332
    9848:	6e79735f 	.word	0x6e79735f
    984c:	00632e63 	.word	0x00632e63
    9850:	682f2e2e 	.word	0x682f2e2e
    9854:	732f6c61 	.word	0x732f6c61
    9858:	682f6372 	.word	0x682f6372
    985c:	695f6c61 	.word	0x695f6c61
    9860:	00632e6f 	.word	0x00632e6f
    9864:	682f2e2e 	.word	0x682f2e2e
    9868:	732f6c61 	.word	0x732f6c61
    986c:	682f6372 	.word	0x682f6372
    9870:	735f6c61 	.word	0x735f6c61
    9874:	5f64636c 	.word	0x5f64636c
    9878:	636e7973 	.word	0x636e7973
    987c:	0000632e 	.word	0x0000632e
    9880:	682f2e2e 	.word	0x682f2e2e
    9884:	732f6c61 	.word	0x732f6c61
    9888:	682f6372 	.word	0x682f6372
    988c:	745f6c61 	.word	0x745f6c61
    9890:	72656d69 	.word	0x72656d69
    9894:	0000632e 	.word	0x0000632e
    9898:	682f2e2e 	.word	0x682f2e2e
    989c:	732f6c61 	.word	0x732f6c61
    98a0:	682f6372 	.word	0x682f6372
    98a4:	755f6c61 	.word	0x755f6c61
    98a8:	74726173 	.word	0x74726173
    98ac:	6e79735f 	.word	0x6e79735f
    98b0:	00632e63 	.word	0x00632e63
    98b4:	682f2e2e 	.word	0x682f2e2e
    98b8:	752f6c61 	.word	0x752f6c61
    98bc:	736c6974 	.word	0x736c6974
    98c0:	6372732f 	.word	0x6372732f
    98c4:	6974752f 	.word	0x6974752f
    98c8:	6c5f736c 	.word	0x6c5f736c
    98cc:	2e747369 	.word	0x2e747369
    98d0:	00000063 	.word	0x00000063
    98d4:	682f2e2e 	.word	0x682f2e2e
    98d8:	722f6c70 	.word	0x722f6c70
    98dc:	682f6374 	.word	0x682f6374
    98e0:	725f6c70 	.word	0x725f6c70
    98e4:	632e6374 	.word	0x632e6374
    98e8:	00000000 	.word	0x00000000

000098ec <_i2cms>:
    98ec:	00000001 00200014 00000100 00000049     ...... .....I...
    98fc:	00d70000 00f42400 682f2e2e 732f6c70     .....$..../hpl/s
    990c:	6f637265 70682f6d 65735f6c 6d6f6372     ercom/hpl_sercom
    991c:	0000632e                                .c..

00009920 <cm_setting>:
    9920:	07000100 07000400 07000500 07000600     ................
    9930:	07000700 0e010801 0e010a01 0e010c01     ................
    9940:	0e010e01 0e011001 0e011201 0e011401     ................
    9950:	0e011601 07000100 07000100 07000100     ................
    9960:	07000100 07000100 07000100 07000100     ................
    9970:	07000100 07000100 07000100 07000100     ................
    9980:	07000100 07000100 07000100 07000100     ................
    9990:	07000100 07000100 07000100 07000100     ................
    99a0:	07000100 07000100 07000100 07000100     ................
    99b0:	07000100 07000100 07000100 07000100     ................
    99c0:	07000100 07000100 07000100 07000100     ................

000099d0 <cm7_lut>:
    99d0:	00000000 00007730 00002431 00005d32     ....0w..1$..2]..
    99e0:	00006d33 00002e34 00006b35 00007b36     3m..4...5k..6{..
    99f0:	00002537 00007f38 00002f39 00003f61     7%..8...9/..a?..
    9a00:	00007a62 00005363 00007c64 00005b65     bz..cS..d|..e[..
    9a10:	00001b66                                f...

00009a14 <cm14_lut>:
    9a14:	003a1730 00080231 0028c532 0028c333     0.:.1...2.(.3.(.
    9a24:	0018c234 0030c335 0030c736 00280237     4...5.0.6.0.7.(.
    9a34:	0038c738 0038c339 0038c661 0029a362     8.8.9.8.a.8.b.).
    9a44:	00300563 00292364 0030c565 0030c466     c.0.d#).e.0.f.0.
    9a54:	00308767 0018c668 0018c669 0008076a     g.0.h...i...j...
    9a64:	00124c6b 0010056c 001e066d 001c0e6e     kL..l...m...n...
    9a74:	0038076f 0038c470 00380f71 0038cc72     o.8.p.8.q.8.r.8.
    9a84:	00304973 00212074 00180775 00121476     sI0.t !.u...v...
    9a94:	00181e77 00061878 0018c379 0022117a     w...x...y...z.".
    9aa4:	0000c02d 0001e02b 0002102f 0000c13d     -...+.../...=...
    9ab4:	0009e323 0006182a 00000827 00041029     #...*...'...)...
    9ac4:	00020828 00284f40 0031e324 00121225     (...@O(.$.1.%...
    9ad4:	0004085c 0000015f 00000000 00000002     \..._...........
    9ae4:	00000003 00010002 00010003 00040002     ................
    9af4:	00040003 00050002 00050003 00343332     ............234.
    9b04:	64636261 68676665 00000000 6c786461     abcdefgh....adxl
    9b14:	5f353433 5f766564 74696e69 3d202928     345_dev_init() =
    9b24:	6425203e 0000000a 6c786461 5f353433     > %d....adxl345_
    9b34:	74696e69 3d202928 6425203e 0000000a     init() => %d....
    9b44:	6c786461 5f353433 706f7473 3d202928     adxl345_stop() =
    9b54:	6425203e 0000000a 6c786461 5f353433     > %d....adxl345_
    9b64:	5f746573 725f7762 5f657461 28676572     set_bw_rate_reg(
    9b74:	3e3d2029 0a642520 00000000 6c786461     ) => %d.....adxl
    9b84:	5f353433 5f746573 6f666966 6c74635f     345_set_fifo_ctl
    9b94:	6765725f 3d202928 6425203e 0000000a     _reg() => %d....
    9ba4:	6c786461 5f353433 72617473 20292874     adxl345_start() 
    9bb4:	25203e3d 00000a64 25206425 20646c35     => %d...%d %5ld 
    9bc4:	20643325 0a646c25 00070000                       %3d %ld...

00009bce <multipliers_tau_calc>:
    9bce:	00130007 00900035                       ....5...

00009bd6 <gain_setting_int_cap>:
    9bd6:	050b1c3f 0a0b0103                                ?.....

00009bdc <PTC_XY_PINS>:
    9bdc:	08090a0b 43424645 25240302 29282726     ....EFBC..$%&'()
    9bec:	17161514 1f1e1b5c 07060504 13121110     ....\...........
    9bfc:	00002e58 00002e3a 00002df4 00002d12     X...:....-...-..
    9c0c:	00002df4 00002e2c 00002df4 00002d12     .-..,....-...-..
    9c1c:	00002e3a 00002e3a 00002e2c 00002d12     :...:...,....-..
    9c2c:	00002d0a 00002d0a 00002d0a 00003070     .-...-...-..p0..
    9c3c:	000034b8 00003378 00003378 00003374     .4..x3..x3..t3..
    9c4c:	00003490 00003490 00003482 00003374     .4...4...4..t3..
    9c5c:	00003490 00003482 00003490 00003374     .4...4...4..t3..
    9c6c:	00003498 00003498 00003498 0000369c     .4...4...4...6..

00009c7c <_global_impure_ptr>:
    9c7c:	20000080 00004bda 00004cae 00004cae     ... .K...L...L..
    9c8c:	00004bc6 00004cae 00004cae 00004cae     .K...L...L...L..
    9c9c:	00004cae 00004cae 00004cae 00004c80     .L...L...L...L..
    9cac:	00004792 00004cae 00004788 0000479c     .G...L...G...G..
    9cbc:	00004cae 00004bd0 0000495c 0000495c     .L...K..\I..\I..
    9ccc:	0000495c 0000495c 0000495c 0000495c     \I..\I..\I..\I..
    9cdc:	0000495c 0000495c 0000495c 00004cae     \I..\I..\I...L..
    9cec:	00004cae 00004cae 00004cae 00004cae     .L...L...L...L..
    9cfc:	00004cae 00004cae 00004cae 00004cae     .L...L...L...L..
    9d0c:	00004cae 00004c96 00004bea 00004cae     .L...L...K...L..
    9d1c:	00004bea 00004cae 00004cae 00004cae     .K...L...L...L..
    9d2c:	00004cae 00004b50 00004cae 00004cae     .L..PK...L...L..
    9d3c:	00004b5a 00004cae 00004cae 00004cae     ZK...L...L...L..
    9d4c:	00004cae 00004cae 00004b88 00004cae     .L...L...K...L..
    9d5c:	00004cae 00004bb6 00004cae 00004cae     .L...K...L...L..
    9d6c:	00004cae 00004cae 00004cae 00004cae     .L...L...L...L..
    9d7c:	00004cae 00004cae 00004cae 00004cae     .L...L...L...L..
    9d8c:	0000499c 000049d2 00004bea 00004bea     .I...I...K...K..
    9d9c:	00004bea 00004a7a 000049d2 00004cae     .K..zJ...I...L..
    9dac:	00004cae 00004a84 00004cae 00004a96     .L...J...L...J..
    9dbc:	00004caa 00004ac4 00004aee 00004cae     .L...J...J...L..
    9dcc:	00004af8 00004cae 00004ca6 00004cae     .J...L...L...L..
    9ddc:	00004cae 000047ea 00464e49 00666e69     .L...G..INF.inf.
    9dec:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
    9dfc:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    9e0c:	37363534 62613938 66656463 00000000     456789abcdef....
    9e1c:	6c756e28 0000296c 00000030              (null)..0...

00009e28 <blanks.7238>:
    9e28:	20202020 20202020 20202020 20202020                     

00009e38 <zeroes.7239>:
    9e38:	30303030 30303030 30303030 30303030     0000000000000000
    9e48:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

00009e58 <__mprec_bigtens>:
    9e58:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    9e68:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    9e78:	7f73bf3c 75154fdd                       <.s..O.u

00009e80 <__mprec_tens>:
    9e80:	00000000 3ff00000 00000000 40240000     .......?......$@
    9e90:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    9ea0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    9eb0:	00000000 412e8480 00000000 416312d0     .......A......cA
    9ec0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    9ed0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    9ee0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    9ef0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    9f00:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    9f10:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    9f20:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    9f30:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    9f40:	79d99db4 44ea7843                       ...yCx.D

00009f48 <p05.6055>:
    9f48:	00000005 00000019 0000007d 00000043     ........}...C...
    9f58:	49534f50 00000058 0000002e              POSIX.......

00009f64 <_ctype_>:
    9f64:	20202000 20202020 28282020 20282828     .         ((((( 
    9f74:	20202020 20202020 20202020 20202020                     
    9f84:	10108820 10101010 10101010 10101010      ...............
    9f94:	04040410 04040404 10040404 10101010     ................
    9fa4:	41411010 41414141 01010101 01010101     ..AAAAAA........
    9fb4:	01010101 01010101 01010101 10101010     ................
    9fc4:	42421010 42424242 02020202 02020202     ..BBBBBB........
    9fd4:	02020202 02020202 02020202 10101010     ................
    9fe4:	00000020 00000000 00000000 00000000      ...............
	...

0000a068 <_init>:
    a068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a06a:	46c0      	nop			; (mov r8, r8)
    a06c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a06e:	bc08      	pop	{r3}
    a070:	469e      	mov	lr, r3
    a072:	4770      	bx	lr

0000a074 <__init_array_start>:
    a074:	00005df1 	.word	0x00005df1

0000a078 <__frame_dummy_init_array_entry>:
    a078:	000000d1                                ....

0000a07c <_fini>:
    a07c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a07e:	46c0      	nop			; (mov r8, r8)
    a080:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a082:	bc08      	pop	{r3}
    a084:	469e      	mov	lr, r3
    a086:	4770      	bx	lr

0000a088 <__fini_array_start>:
    a088:	000000a9 	.word	0x000000a9
