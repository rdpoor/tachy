
Tachy.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000a4c4  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000a4c4  0000a4c4  0001a4c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a28  20000000  0000a4cc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          0000018c  20000a28  0000aef4  00020a28  2**2
                  ALLOC
  4 .stack        00002004  20000bb4  0000b080  00020a28  2**0
                  ALLOC
  5 .ARM.attributes 0000002d  00000000  00000000  00020a28  2**0
                  CONTENTS, READONLY
  6 .comment      000000c7  00000000  00000000  00020a55  2**0
                  CONTENTS, READONLY
  7 .debug_info   0002b7a3  00000000  00000000  00020b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003e16  00000000  00000000  0004c2bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00011840  00000000  00000000  000500d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000dd0  00000000  00000000  00061915  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000012b8  00000000  00000000  000626e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000211cc  00000000  00000000  0006399d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00016216  00000000  00000000  00084b69  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0009de6e  00000000  00000000  0009ad7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00003634  00000000  00000000  00138bf0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b8 2b 00 20 51 03 00 00 4d 03 00 00 4d 03 00 00     .+. Q...M...M...
	...
      2c:	4d 03 00 00 00 00 00 00 00 00 00 00 4d 03 00 00     M...........M...
      3c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 91 12 00 00     M...M...M.......
      4c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 4d 03 00 00     M...M...M...M...
      5c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 4d 03 00 00     M...M...M...M...
      6c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 4d 03 00 00     M...M...M...M...
      7c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 4d 03 00 00     M...M...M...M...
      8c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 39 23 00 00     M...M...M...9#..
      9c:	4d 03 00 00 4d 03 00 00 4d 03 00 00                 M...M...M...

000000a8 <__do_global_dtors_aux>:
      a8:	b510      	push	{r4, lr}
      aa:	4c06      	ldr	r4, [pc, #24]	; (c4 <__do_global_dtors_aux+0x1c>)
      ac:	7823      	ldrb	r3, [r4, #0]
      ae:	2b00      	cmp	r3, #0
      b0:	d107      	bne.n	c2 <__do_global_dtors_aux+0x1a>
      b2:	4b05      	ldr	r3, [pc, #20]	; (c8 <__do_global_dtors_aux+0x20>)
      b4:	2b00      	cmp	r3, #0
      b6:	d002      	beq.n	be <__do_global_dtors_aux+0x16>
      b8:	4804      	ldr	r0, [pc, #16]	; (cc <__do_global_dtors_aux+0x24>)
      ba:	e000      	b.n	be <__do_global_dtors_aux+0x16>
      bc:	bf00      	nop
      be:	2301      	movs	r3, #1
      c0:	7023      	strb	r3, [r4, #0]
      c2:	bd10      	pop	{r4, pc}
      c4:	20000a28 	.word	0x20000a28
      c8:	00000000 	.word	0x00000000
      cc:	0000a4cc 	.word	0x0000a4cc

000000d0 <frame_dummy>:
      d0:	4b08      	ldr	r3, [pc, #32]	; (f4 <frame_dummy+0x24>)
      d2:	b510      	push	{r4, lr}
      d4:	2b00      	cmp	r3, #0
      d6:	d003      	beq.n	e0 <frame_dummy+0x10>
      d8:	4907      	ldr	r1, [pc, #28]	; (f8 <frame_dummy+0x28>)
      da:	4808      	ldr	r0, [pc, #32]	; (fc <frame_dummy+0x2c>)
      dc:	e000      	b.n	e0 <frame_dummy+0x10>
      de:	bf00      	nop
      e0:	4807      	ldr	r0, [pc, #28]	; (100 <frame_dummy+0x30>)
      e2:	6803      	ldr	r3, [r0, #0]
      e4:	2b00      	cmp	r3, #0
      e6:	d100      	bne.n	ea <frame_dummy+0x1a>
      e8:	bd10      	pop	{r4, pc}
      ea:	4b06      	ldr	r3, [pc, #24]	; (104 <frame_dummy+0x34>)
      ec:	2b00      	cmp	r3, #0
      ee:	d0fb      	beq.n	e8 <frame_dummy+0x18>
      f0:	4798      	blx	r3
      f2:	e7f9      	b.n	e8 <frame_dummy+0x18>
      f4:	00000000 	.word	0x00000000
      f8:	20000a2c 	.word	0x20000a2c
      fc:	0000a4cc 	.word	0x0000a4cc
     100:	0000a4cc 	.word	0x0000a4cc
     104:	00000000 	.word	0x00000000

00000108 <adxl345_get_devid_reg>:
}

// ==========================================
// low-level register access

adxl345_err_t adxl345_get_devid_reg(adxl345_t *adxl345, uint8_t *val) {
     108:	b510      	push	{r4, lr}
     10a:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_DEVID, val);
     10c:	6800      	ldr	r0, [r0, #0]
     10e:	2100      	movs	r1, #0
     110:	4b01      	ldr	r3, [pc, #4]	; (118 <adxl345_get_devid_reg+0x10>)
     112:	4798      	blx	r3
}
     114:	bd10      	pop	{r4, pc}
     116:	46c0      	nop			; (mov r8, r8)
     118:	000002d1 	.word	0x000002d1

0000011c <adxl345_init>:
adxl345_err_t adxl345_init(adxl345_t *adxl345, adxl345_dev_t * dev) {
     11c:	b500      	push	{lr}
     11e:	b083      	sub	sp, #12
  adxl345->dev = dev;
     120:	6001      	str	r1, [r0, #0]
  if ((err = adxl345_get_devid_reg(adxl345, &reg)) != ADXL345_ERR_NONE) {
     122:	466b      	mov	r3, sp
     124:	1dd9      	adds	r1, r3, #7
     126:	4b06      	ldr	r3, [pc, #24]	; (140 <adxl345_init+0x24>)
     128:	4798      	blx	r3
     12a:	2800      	cmp	r0, #0
     12c:	d105      	bne.n	13a <adxl345_init+0x1e>
  } else if (reg != ADXL345_DEVICE_ID) {
     12e:	466b      	mov	r3, sp
     130:	3307      	adds	r3, #7
     132:	781b      	ldrb	r3, [r3, #0]
     134:	2be5      	cmp	r3, #229	; 0xe5
     136:	d000      	beq.n	13a <adxl345_init+0x1e>
    return ADXL354_ERR_INIT;
     138:	3004      	adds	r0, #4
}
     13a:	b003      	add	sp, #12
     13c:	bd00      	pop	{pc}
     13e:	46c0      	nop			; (mov r8, r8)
     140:	00000109 	.word	0x00000109

00000144 <adxl345_set_bw_rate_reg>:

adxl345_err_t adxl345_get_bw_rate_reg(adxl345_t *adxl345, adxl345_bw_rate_reg *val) {
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_BW_RATE, val);
}

adxl345_err_t adxl345_set_bw_rate_reg(adxl345_t *adxl345, adxl345_bw_rate_reg val) {
     144:	b510      	push	{r4, lr}
     146:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_BW_RATE, val);
     148:	6800      	ldr	r0, [r0, #0]
     14a:	212c      	movs	r1, #44	; 0x2c
     14c:	4b01      	ldr	r3, [pc, #4]	; (154 <adxl345_set_bw_rate_reg+0x10>)
     14e:	4798      	blx	r3
}
     150:	bd10      	pop	{r4, pc}
     152:	46c0      	nop			; (mov r8, r8)
     154:	000002e9 	.word	0x000002e9

00000158 <adxl345_get_power_ctl_reg>:

adxl345_err_t adxl345_get_power_ctl_reg(adxl345_t *adxl345, adxl345_power_ctl_reg *val) {
     158:	b510      	push	{r4, lr}
     15a:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_POWER_CTL, val);
     15c:	6800      	ldr	r0, [r0, #0]
     15e:	212d      	movs	r1, #45	; 0x2d
     160:	4b01      	ldr	r3, [pc, #4]	; (168 <adxl345_get_power_ctl_reg+0x10>)
     162:	4798      	blx	r3
}
     164:	bd10      	pop	{r4, pc}
     166:	46c0      	nop			; (mov r8, r8)
     168:	000002d1 	.word	0x000002d1

0000016c <adxl345_set_power_ctl_reg>:

adxl345_err_t adxl345_set_power_ctl_reg(adxl345_t *adxl345, adxl345_power_ctl_reg val) {
     16c:	b510      	push	{r4, lr}
     16e:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_POWER_CTL, val);
     170:	6800      	ldr	r0, [r0, #0]
     172:	212d      	movs	r1, #45	; 0x2d
     174:	4b01      	ldr	r3, [pc, #4]	; (17c <adxl345_set_power_ctl_reg+0x10>)
     176:	4798      	blx	r3
}
     178:	bd10      	pop	{r4, pc}
     17a:	46c0      	nop			; (mov r8, r8)
     17c:	000002e9 	.word	0x000002e9

00000180 <adxl345_get_data_regs>:

adxl345_err_t adxl345_set_data_format_reg(adxl345_t *adxl345, adxl345_data_format_reg val) {
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_DATA_FORMAT, val);
}

adxl345_err_t adxl345_get_data_regs(adxl345_t *adxl345, adxl345_data_regs_t *dst) {
     180:	b510      	push	{r4, lr}
     182:	000a      	movs	r2, r1
  return adxl345_dev_read_regs(adxl345->dev, ADXL345_REG_DATAX0, (uint8_t *)dst, sizeof(adxl345_data_regs_t));
     184:	6800      	ldr	r0, [r0, #0]
     186:	2306      	movs	r3, #6
     188:	2132      	movs	r1, #50	; 0x32
     18a:	4c01      	ldr	r4, [pc, #4]	; (190 <adxl345_get_data_regs+0x10>)
     18c:	47a0      	blx	r4
}
     18e:	bd10      	pop	{r4, pc}
     190:	0000031d 	.word	0x0000031d

00000194 <adxl345_set_fifo_ctl_reg>:

adxl345_err_t adxl345_get_fifo_ctl_reg(adxl345_t *adxl345, adxl345_fifo_mode_reg *val) {
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_FIFO_CTL, val);
}

adxl345_err_t adxl345_set_fifo_ctl_reg(adxl345_t *adxl345, adxl345_fifo_mode_reg val) {
     194:	b510      	push	{r4, lr}
     196:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_FIFO_CTL, val);
     198:	6800      	ldr	r0, [r0, #0]
     19a:	2138      	movs	r1, #56	; 0x38
     19c:	4b01      	ldr	r3, [pc, #4]	; (1a4 <adxl345_set_fifo_ctl_reg+0x10>)
     19e:	4798      	blx	r3
}
     1a0:	bd10      	pop	{r4, pc}
     1a2:	46c0      	nop			; (mov r8, r8)
     1a4:	000002e9 	.word	0x000002e9

000001a8 <adxl345_get_fifo_status_reg>:

adxl345_err_t adxl345_get_fifo_status_reg(adxl345_t *adxl345, adxl345_fifo_status_reg *val) {
     1a8:	b510      	push	{r4, lr}
     1aa:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_FIFO_STATUS, val);
     1ac:	6800      	ldr	r0, [r0, #0]
     1ae:	2139      	movs	r1, #57	; 0x39
     1b0:	4b01      	ldr	r3, [pc, #4]	; (1b8 <adxl345_get_fifo_status_reg+0x10>)
     1b2:	4798      	blx	r3
}
     1b4:	bd10      	pop	{r4, pc}
     1b6:	46c0      	nop			; (mov r8, r8)
     1b8:	000002d1 	.word	0x000002d1

000001bc <adxl345_start>:
// ==========================================
// higher level functions.  In the functions below,
// _g stands for gravity and _s stands for seconds.

/** @brief Enter measurement mode: start measuring */
adxl345_err_t adxl345_start(adxl345_t *adxl345) {
     1bc:	b510      	push	{r4, lr}
     1be:	b082      	sub	sp, #8
     1c0:	0004      	movs	r4, r0
  uint8_t reg;
  adxl345_err_t err;

  err = adxl345_get_power_ctl_reg(adxl345, &reg);
     1c2:	466b      	mov	r3, sp
     1c4:	1dd9      	adds	r1, r3, #7
     1c6:	4b07      	ldr	r3, [pc, #28]	; (1e4 <adxl345_start+0x28>)
     1c8:	4798      	blx	r3
  if (err != ADXL345_ERR_NONE) return err;
     1ca:	2800      	cmp	r0, #0
     1cc:	d001      	beq.n	1d2 <adxl345_start+0x16>

  err = adxl345_set_power_ctl_reg(adxl345, reg | ADXL345_MEASURE);
  return err;
}
     1ce:	b002      	add	sp, #8
     1d0:	bd10      	pop	{r4, pc}
  err = adxl345_set_power_ctl_reg(adxl345, reg | ADXL345_MEASURE);
     1d2:	466b      	mov	r3, sp
     1d4:	79d9      	ldrb	r1, [r3, #7]
     1d6:	2308      	movs	r3, #8
     1d8:	4319      	orrs	r1, r3
     1da:	0020      	movs	r0, r4
     1dc:	4b02      	ldr	r3, [pc, #8]	; (1e8 <adxl345_start+0x2c>)
     1de:	4798      	blx	r3
  return err;
     1e0:	e7f5      	b.n	1ce <adxl345_start+0x12>
     1e2:	46c0      	nop			; (mov r8, r8)
     1e4:	00000159 	.word	0x00000159
     1e8:	0000016d 	.word	0x0000016d

000001ec <adxl345_stop>:

/** @brief Enter standby mode: stop measuring */
adxl345_err_t adxl345_stop(adxl345_t *adxl345) {
     1ec:	b510      	push	{r4, lr}
     1ee:	b082      	sub	sp, #8
     1f0:	0004      	movs	r4, r0
  uint8_t reg;
  adxl345_err_t err;

  err = adxl345_get_power_ctl_reg(adxl345, &reg);
     1f2:	466b      	mov	r3, sp
     1f4:	1dd9      	adds	r1, r3, #7
     1f6:	4b07      	ldr	r3, [pc, #28]	; (214 <adxl345_stop+0x28>)
     1f8:	4798      	blx	r3
  if (err != ADXL345_ERR_NONE) return err;
     1fa:	2800      	cmp	r0, #0
     1fc:	d001      	beq.n	202 <adxl345_stop+0x16>

  err = adxl345_set_power_ctl_reg(adxl345, reg & ~ADXL345_MEASURE);
  return err;
}
     1fe:	b002      	add	sp, #8
     200:	bd10      	pop	{r4, pc}
  err = adxl345_set_power_ctl_reg(adxl345, reg & ~ADXL345_MEASURE);
     202:	466b      	mov	r3, sp
     204:	79d9      	ldrb	r1, [r3, #7]
     206:	2308      	movs	r3, #8
     208:	4399      	bics	r1, r3
     20a:	0020      	movs	r0, r4
     20c:	4b02      	ldr	r3, [pc, #8]	; (218 <adxl345_stop+0x2c>)
     20e:	4798      	blx	r3
  return err;
     210:	e7f5      	b.n	1fe <adxl345_stop+0x12>
     212:	46c0      	nop			; (mov r8, r8)
     214:	00000159 	.word	0x00000159
     218:	0000016d 	.word	0x0000016d

0000021c <adxl345_get_sample>:

adxl345_err_t adxl345_sample_is_available(adxl345_t *adxl345, bool *val);

/** @brief Read an x, y, z sample frame.
 */
adxl345_err_t adxl345_get_sample(adxl345_t *adxl345, adxl345_sample_t *sample) {
     21c:	b5f0      	push	{r4, r5, r6, r7, lr}
     21e:	46c6      	mov	lr, r8
     220:	b500      	push	{lr}
     222:	b082      	sub	sp, #8
     224:	000d      	movs	r5, r1
  adxl345_data_regs_t regs;
  adxl345_err_t err;

  err = adxl345_get_data_regs(adxl345, &regs);
     226:	4669      	mov	r1, sp
     228:	4b19      	ldr	r3, [pc, #100]	; (290 <adxl345_get_sample+0x74>)
     22a:	4798      	blx	r3
     22c:	1e04      	subs	r4, r0, #0
  if (err != ADXL345_ERR_NONE) return err;
     22e:	d12a      	bne.n	286 <adxl345_get_sample+0x6a>

  // Using default values:
  //   x1:x0 is a 16 bit signed value with 10 bits of resolution.
  //   Full scale is 2^9 = 512 corresponding to 2g
  //   This can change with sensitivity settings, packing mode, etc.
  sample->x = (int16_t)((regs.x1 << 8) | regs.x0) * ADXL345_2G_SCALE;
     230:	466b      	mov	r3, sp
     232:	785b      	ldrb	r3, [r3, #1]
     234:	021b      	lsls	r3, r3, #8
     236:	466a      	mov	r2, sp
     238:	7810      	ldrb	r0, [r2, #0]
     23a:	4318      	orrs	r0, r3
     23c:	b200      	sxth	r0, r0
     23e:	4b15      	ldr	r3, [pc, #84]	; (294 <adxl345_get_sample+0x78>)
     240:	4698      	mov	r8, r3
     242:	4798      	blx	r3
     244:	4f14      	ldr	r7, [pc, #80]	; (298 <adxl345_get_sample+0x7c>)
     246:	2200      	movs	r2, #0
     248:	4b14      	ldr	r3, [pc, #80]	; (29c <adxl345_get_sample+0x80>)
     24a:	47b8      	blx	r7
     24c:	4e14      	ldr	r6, [pc, #80]	; (2a0 <adxl345_get_sample+0x84>)
     24e:	47b0      	blx	r6
     250:	6028      	str	r0, [r5, #0]
  sample->y = (int16_t)((regs.y1 << 8) | regs.y0) * ADXL345_2G_SCALE;
     252:	466b      	mov	r3, sp
     254:	78db      	ldrb	r3, [r3, #3]
     256:	021b      	lsls	r3, r3, #8
     258:	466a      	mov	r2, sp
     25a:	7890      	ldrb	r0, [r2, #2]
     25c:	4318      	orrs	r0, r3
     25e:	b200      	sxth	r0, r0
     260:	47c0      	blx	r8
     262:	2200      	movs	r2, #0
     264:	4b0d      	ldr	r3, [pc, #52]	; (29c <adxl345_get_sample+0x80>)
     266:	47b8      	blx	r7
     268:	47b0      	blx	r6
     26a:	6068      	str	r0, [r5, #4]
  sample->z = (int16_t)((regs.z1 << 8) | regs.z0) * ADXL345_2G_SCALE;
     26c:	466b      	mov	r3, sp
     26e:	795b      	ldrb	r3, [r3, #5]
     270:	021b      	lsls	r3, r3, #8
     272:	466a      	mov	r2, sp
     274:	7910      	ldrb	r0, [r2, #4]
     276:	4318      	orrs	r0, r3
     278:	b200      	sxth	r0, r0
     27a:	47c0      	blx	r8
     27c:	2200      	movs	r2, #0
     27e:	4b07      	ldr	r3, [pc, #28]	; (29c <adxl345_get_sample+0x80>)
     280:	47b8      	blx	r7
     282:	47b0      	blx	r6
     284:	60a8      	str	r0, [r5, #8]

  return ADXL345_ERR_NONE;
}
     286:	0020      	movs	r0, r4
     288:	b002      	add	sp, #8
     28a:	bc04      	pop	{r2}
     28c:	4690      	mov	r8, r2
     28e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     290:	00000181 	.word	0x00000181
     294:	000040e1 	.word	0x000040e1
     298:	0000354d 	.word	0x0000354d
     29c:	3f700000 	.word	0x3f700000
     2a0:	00004279 	.word	0x00004279

000002a4 <adxl345_dev_init>:
// public code

adxl345_err_t adxl345_dev_init(adxl345_dev_t *dev,
                               struct i2c_m_sync_desc *const i2c_descriptor,
                               int16_t slave_addr,
                               int32_t addr_len) {
     2a4:	b570      	push	{r4, r5, r6, lr}
     2a6:	000c      	movs	r4, r1
     2a8:	0015      	movs	r5, r2
     2aa:	001e      	movs	r6, r3
  dev->i2c_descriptor = i2c_descriptor;
     2ac:	6001      	str	r1, [r0, #0]
  dev->slave_addr = slave_addr;
     2ae:	8082      	strh	r2, [r0, #4]
  dev->addr_len = addr_len;
     2b0:	6083      	str	r3, [r0, #8]

  i2c_m_sync_enable(i2c_descriptor);
     2b2:	0008      	movs	r0, r1
     2b4:	4b04      	ldr	r3, [pc, #16]	; (2c8 <adxl345_dev_init+0x24>)
     2b6:	4798      	blx	r3
  i2c_m_sync_set_slaveaddr(i2c_descriptor, slave_addr, addr_len);
     2b8:	0032      	movs	r2, r6
     2ba:	0029      	movs	r1, r5
     2bc:	0020      	movs	r0, r4
     2be:	4b03      	ldr	r3, [pc, #12]	; (2cc <adxl345_dev_init+0x28>)
     2c0:	4798      	blx	r3

  return ADXL345_ERR_NONE;
}
     2c2:	2000      	movs	r0, #0
     2c4:	bd70      	pop	{r4, r5, r6, pc}
     2c6:	46c0      	nop			; (mov r8, r8)
     2c8:	000009e1 	.word	0x000009e1
     2cc:	000009ed 	.word	0x000009ed

000002d0 <adxl345_dev_read_reg>:
 * @param reg_addr Address of register to be read
 * @param dst Pointer to destination buffer.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_read_reg(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t *dst) {
     2d0:	b510      	push	{r4, lr}
  int32_t err = i2c_m_sync_cmd_read(dev->i2c_descriptor, reg_addr, dst, 1);
     2d2:	6800      	ldr	r0, [r0, #0]
     2d4:	2301      	movs	r3, #1
     2d6:	4c03      	ldr	r4, [pc, #12]	; (2e4 <adxl345_dev_read_reg+0x14>)
     2d8:	47a0      	blx	r4
  if (err < 0) {
    return ADXL345_ERR_WRITE;
     2da:	2303      	movs	r3, #3
  }
  return ADXL345_ERR_NONE;
     2dc:	17c0      	asrs	r0, r0, #31
     2de:	4003      	ands	r3, r0
}
     2e0:	0018      	movs	r0, r3
     2e2:	bd10      	pop	{r4, pc}
     2e4:	00000a01 	.word	0x00000a01

000002e8 <adxl345_dev_write_reg>:
 * @param reg_addr Address of register to be written.
 * @param val Value to be written.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_write_reg(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t val) {
     2e8:	b500      	push	{lr}
     2ea:	b085      	sub	sp, #20
  uint8_t buf[2];
  buf[0] = reg_addr;
     2ec:	ab03      	add	r3, sp, #12
     2ee:	7019      	strb	r1, [r3, #0]
  buf[1] = val;
     2f0:	705a      	strb	r2, [r3, #1]

  struct _i2c_m_msg msg;
  int32_t ret;
  msg.addr = dev->slave_addr;
     2f2:	8882      	ldrh	r2, [r0, #4]
     2f4:	4669      	mov	r1, sp
     2f6:	800a      	strh	r2, [r1, #0]
  msg.len = sizeof(buf);
     2f8:	2202      	movs	r2, #2
     2fa:	9201      	str	r2, [sp, #4]
  msg.flags = I2C_M_STOP;
     2fc:	4a05      	ldr	r2, [pc, #20]	; (314 <adxl345_dev_write_reg+0x2c>)
     2fe:	804a      	strh	r2, [r1, #2]
  msg.buffer = buf;
     300:	9302      	str	r3, [sp, #8]

  ret = i2c_m_sync_transfer(dev->i2c_descriptor, &msg);
     302:	6800      	ldr	r0, [r0, #0]
     304:	4b04      	ldr	r3, [pc, #16]	; (318 <adxl345_dev_write_reg+0x30>)
     306:	4798      	blx	r3
  if (ret < 0) {
    return ADXL345_ERR_WRITE;
     308:	2303      	movs	r3, #3
  }
  return ADXL345_ERR_NONE;
     30a:	17c0      	asrs	r0, r0, #31
     30c:	4003      	ands	r3, r0
}
     30e:	0018      	movs	r0, r3
     310:	b005      	add	sp, #20
     312:	bd00      	pop	{pc}
     314:	ffff8000 	.word	0xffff8000
     318:	00000a49 	.word	0x00000a49

0000031c <adxl345_dev_read_regs>:
 * @param dst Pointer to destination buffer.  Must have capacity of n_bytes.
 * @param n_bytes Number of registers to be read.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_read_regs(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t *dst, uint8_t n_bytes) {
     31c:	b510      	push	{r4, lr}
  int32_t err = i2c_m_sync_cmd_read(dev->i2c_descriptor, reg_addr, dst, n_bytes);
     31e:	6800      	ldr	r0, [r0, #0]
     320:	4c02      	ldr	r4, [pc, #8]	; (32c <adxl345_dev_read_regs+0x10>)
     322:	47a0      	blx	r4
  if (err < 0) {
    return ADXL345_ERR_READ;
  }
  return ADXL345_ERR_NONE;
     324:	0fc0      	lsrs	r0, r0, #31
     326:	0040      	lsls	r0, r0, #1
}
     328:	bd10      	pop	{r4, pc}
     32a:	46c0      	nop			; (mov r8, r8)
     32c:	00000a01 	.word	0x00000a01

00000330 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     330:	b510      	push	{r4, lr}
	system_init();
     332:	4b03      	ldr	r3, [pc, #12]	; (340 <atmel_start_init+0x10>)
     334:	4798      	blx	r3
	stdio_redirect_init();
     336:	4b03      	ldr	r3, [pc, #12]	; (344 <atmel_start_init+0x14>)
     338:	4798      	blx	r3

	touch_init();
     33a:	4b03      	ldr	r3, [pc, #12]	; (348 <atmel_start_init+0x18>)
     33c:	4798      	blx	r3
}
     33e:	bd10      	pop	{r4, pc}
     340:	000008bd 	.word	0x000008bd
     344:	00002411 	.word	0x00002411
     348:	000022c9 	.word	0x000022c9

0000034c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     34c:	e7fe      	b.n	34c <Dummy_Handler>
	...

00000350 <Reset_Handler>:
{
     350:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     352:	4a17      	ldr	r2, [pc, #92]	; (3b0 <Reset_Handler+0x60>)
     354:	4b17      	ldr	r3, [pc, #92]	; (3b4 <Reset_Handler+0x64>)
     356:	429a      	cmp	r2, r3
     358:	d011      	beq.n	37e <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     35a:	001a      	movs	r2, r3
     35c:	4b16      	ldr	r3, [pc, #88]	; (3b8 <Reset_Handler+0x68>)
     35e:	429a      	cmp	r2, r3
     360:	d20d      	bcs.n	37e <Reset_Handler+0x2e>
     362:	4a16      	ldr	r2, [pc, #88]	; (3bc <Reset_Handler+0x6c>)
     364:	3303      	adds	r3, #3
     366:	1a9b      	subs	r3, r3, r2
     368:	089b      	lsrs	r3, r3, #2
     36a:	3301      	adds	r3, #1
     36c:	009b      	lsls	r3, r3, #2
     36e:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     370:	4810      	ldr	r0, [pc, #64]	; (3b4 <Reset_Handler+0x64>)
     372:	490f      	ldr	r1, [pc, #60]	; (3b0 <Reset_Handler+0x60>)
     374:	588c      	ldr	r4, [r1, r2]
     376:	5084      	str	r4, [r0, r2]
     378:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     37a:	429a      	cmp	r2, r3
     37c:	d1fa      	bne.n	374 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     37e:	4a10      	ldr	r2, [pc, #64]	; (3c0 <Reset_Handler+0x70>)
     380:	4b10      	ldr	r3, [pc, #64]	; (3c4 <Reset_Handler+0x74>)
     382:	429a      	cmp	r2, r3
     384:	d20a      	bcs.n	39c <Reset_Handler+0x4c>
     386:	43d3      	mvns	r3, r2
     388:	490e      	ldr	r1, [pc, #56]	; (3c4 <Reset_Handler+0x74>)
     38a:	185b      	adds	r3, r3, r1
     38c:	2103      	movs	r1, #3
     38e:	438b      	bics	r3, r1
     390:	3304      	adds	r3, #4
     392:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     394:	2100      	movs	r1, #0
     396:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     398:	4293      	cmp	r3, r2
     39a:	d1fc      	bne.n	396 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     39c:	4a0a      	ldr	r2, [pc, #40]	; (3c8 <Reset_Handler+0x78>)
     39e:	21ff      	movs	r1, #255	; 0xff
     3a0:	4b0a      	ldr	r3, [pc, #40]	; (3cc <Reset_Handler+0x7c>)
     3a2:	438b      	bics	r3, r1
     3a4:	6093      	str	r3, [r2, #8]
        __libc_init_array();
     3a6:	4b0a      	ldr	r3, [pc, #40]	; (3d0 <Reset_Handler+0x80>)
     3a8:	4798      	blx	r3
        main();
     3aa:	4b0a      	ldr	r3, [pc, #40]	; (3d4 <Reset_Handler+0x84>)
     3ac:	4798      	blx	r3
     3ae:	e7fe      	b.n	3ae <Reset_Handler+0x5e>
     3b0:	0000a4cc 	.word	0x0000a4cc
     3b4:	20000000 	.word	0x20000000
     3b8:	20000a28 	.word	0x20000a28
     3bc:	20000004 	.word	0x20000004
     3c0:	20000a28 	.word	0x20000a28
     3c4:	20000bb4 	.word	0x20000bb4
     3c8:	e000ed00 	.word	0xe000ed00
     3cc:	00000000 	.word	0x00000000
     3d0:	0000465d 	.word	0x0000465d
     3d4:	00002091 	.word	0x00002091

000003d8 <EDBG_0_PORT_init>:
	hri_mclk_set_APBAMASK_RTC_bit(MCLK);
	timer_init(&Timer, RTC, _rtc_get_timer());
}

void EDBG_0_PORT_init(void)
{
     3d8:	b530      	push	{r4, r5, lr}
static inline void hri_port_write_PINCFG_PMUXEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index,
                                                    bool value)
{
	uint8_t tmp;
	PORT_CRITICAL_SECTION_ENTER();
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     3da:	4b11      	ldr	r3, [pc, #68]	; (420 <EDBG_0_PORT_init+0x48>)
     3dc:	22ac      	movs	r2, #172	; 0xac
     3de:	0052      	lsls	r2, r2, #1
     3e0:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     3e2:	2501      	movs	r5, #1
     3e4:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     3e6:	2401      	movs	r4, #1
     3e8:	4321      	orrs	r1, r4
     3ea:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     3ec:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     3ee:	209e      	movs	r0, #158	; 0x9e
     3f0:	0040      	lsls	r0, r0, #1
     3f2:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     3f4:	3a4a      	subs	r2, #74	; 0x4a
     3f6:	3aff      	subs	r2, #255	; 0xff
     3f8:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     3fa:	3a0d      	subs	r2, #13
     3fc:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     3fe:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     400:	215a      	movs	r1, #90	; 0x5a
     402:	31ff      	adds	r1, #255	; 0xff
     404:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     406:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     408:	4322      	orrs	r2, r4
     40a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     40c:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     40e:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     410:	394b      	subs	r1, #75	; 0x4b
     412:	39ff      	subs	r1, #255	; 0xff
     414:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     416:	3111      	adds	r1, #17
     418:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     41a:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(PC24, PINMUX_PC24C_SERCOM0_PAD2);

	gpio_set_pin_function(PC25, PINMUX_PC25C_SERCOM0_PAD3);
}
     41c:	bd30      	pop	{r4, r5, pc}
     41e:	46c0      	nop			; (mov r8, r8)
     420:	41006000 	.word	0x41006000

00000424 <EDBG_0_CLOCK_init>:
}

static inline void hri_gclk_write_PCHCTRL_reg(const void *const hw, uint8_t index, hri_gclk_pchctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->PCHCTRL[index].reg = data;
     424:	4b06      	ldr	r3, [pc, #24]	; (440 <EDBG_0_CLOCK_init+0x1c>)
     426:	2140      	movs	r1, #64	; 0x40
     428:	22c0      	movs	r2, #192	; 0xc0
     42a:	5099      	str	r1, [r3, r2]
     42c:	3103      	adds	r1, #3
     42e:	3a04      	subs	r2, #4
     430:	5099      	str	r1, [r3, r2]
}

static inline void hri_mclk_set_APBCMASK_SERCOM0_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM0;
     432:	4a04      	ldr	r2, [pc, #16]	; (444 <EDBG_0_CLOCK_init+0x20>)
     434:	69d3      	ldr	r3, [r2, #28]
     436:	3941      	subs	r1, #65	; 0x41
     438:	430b      	orrs	r3, r1
     43a:	61d3      	str	r3, [r2, #28]
void EDBG_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM0_GCLK_ID_CORE, CONF_GCLK_SERCOM0_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM0_GCLK_ID_SLOW, CONF_GCLK_SERCOM0_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM0_bit(MCLK);
}
     43c:	4770      	bx	lr
     43e:	46c0      	nop			; (mov r8, r8)
     440:	40001c00 	.word	0x40001c00
     444:	40000800 	.word	0x40000800

00000448 <EDBG_0_init>:

void EDBG_0_init(void)
{
     448:	b510      	push	{r4, lr}
	EDBG_0_CLOCK_init();
     44a:	4b05      	ldr	r3, [pc, #20]	; (460 <EDBG_0_init+0x18>)
     44c:	4798      	blx	r3
	usart_sync_init(&EDBG_0, SERCOM0, (void *)NULL);
     44e:	2200      	movs	r2, #0
     450:	4904      	ldr	r1, [pc, #16]	; (464 <EDBG_0_init+0x1c>)
     452:	4805      	ldr	r0, [pc, #20]	; (468 <EDBG_0_init+0x20>)
     454:	4b05      	ldr	r3, [pc, #20]	; (46c <EDBG_0_init+0x24>)
     456:	4798      	blx	r3
	EDBG_0_PORT_init();
     458:	4b05      	ldr	r3, [pc, #20]	; (470 <EDBG_0_init+0x28>)
     45a:	4798      	blx	r3
}
     45c:	bd10      	pop	{r4, pc}
     45e:	46c0      	nop			; (mov r8, r8)
     460:	00000425 	.word	0x00000425
     464:	42000400 	.word	0x42000400
     468:	20000ae4 	.word	0x20000ae4
     46c:	00000f75 	.word	0x00000f75
     470:	000003d9 	.word	0x000003d9

00000474 <ADXL345_0_PORT_init>:

void ADXL345_0_PORT_init(void)
{
     474:	b5f0      	push	{r4, r5, r6, r7, lr}
     476:	46ce      	mov	lr, r9
     478:	4647      	mov	r7, r8
     47a:	b580      	push	{r7, lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     47c:	25c0      	movs	r5, #192	; 0xc0
     47e:	05ed      	lsls	r5, r5, #23
     480:	2484      	movs	r4, #132	; 0x84
     482:	2180      	movs	r1, #128	; 0x80
     484:	05c9      	lsls	r1, r1, #23
     486:	5129      	str	r1, [r5, r4]
}

static inline void hri_port_set_PINCFG_PULLEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
     488:	4b1a      	ldr	r3, [pc, #104]	; (4f4 <ADXL345_0_PORT_init+0x80>)
     48a:	20de      	movs	r0, #222	; 0xde
     48c:	5c1a      	ldrb	r2, [r3, r0]
     48e:	2604      	movs	r6, #4
     490:	46b4      	mov	ip, r6
     492:	4666      	mov	r6, ip
     494:	4332      	orrs	r2, r6
     496:	b2d2      	uxtb	r2, r2
     498:	541a      	strb	r2, [r3, r0]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     49a:	2298      	movs	r2, #152	; 0x98
     49c:	4691      	mov	r9, r2
     49e:	50a9      	str	r1, [r5, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4a0:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4a2:	2701      	movs	r7, #1
     4a4:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     4a6:	2601      	movs	r6, #1
     4a8:	4331      	orrs	r1, r6
     4aa:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4ac:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     4ae:	381f      	subs	r0, #31
     4b0:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     4b2:	3a89      	subs	r2, #137	; 0x89
     4b4:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     4b6:	3a0d      	subs	r2, #13
     4b8:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     4ba:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     4bc:	2280      	movs	r2, #128	; 0x80
     4be:	0612      	lsls	r2, r2, #24
     4c0:	4690      	mov	r8, r2
     4c2:	512a      	str	r2, [r5, r4]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
     4c4:	345b      	adds	r4, #91	; 0x5b
     4c6:	5d19      	ldrb	r1, [r3, r4]
     4c8:	4662      	mov	r2, ip
     4ca:	4311      	orrs	r1, r2
     4cc:	b2c9      	uxtb	r1, r1
     4ce:	5519      	strb	r1, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     4d0:	4642      	mov	r2, r8
     4d2:	4649      	mov	r1, r9
     4d4:	506a      	str	r2, [r5, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4d6:	5d1a      	ldrb	r2, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4d8:	43ba      	bics	r2, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     4da:	4332      	orrs	r2, r6
     4dc:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4de:	551a      	strb	r2, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     4e0:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     4e2:	3989      	subs	r1, #137	; 0x89
     4e4:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     4e6:	3111      	adds	r1, #17
     4e8:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     4ea:	541a      	strb	r2, [r3, r0]
	                       // <GPIO_PULL_UP"> Pull-up
	                       // <GPIO_PULL_DOWN"> Pull-down
	                       GPIO_PULL_UP);

	gpio_set_pin_function(PB31, PINMUX_PB31C_SERCOM1_PAD1);
}
     4ec:	bc0c      	pop	{r2, r3}
     4ee:	4690      	mov	r8, r2
     4f0:	4699      	mov	r9, r3
     4f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     4f4:	41006000 	.word	0x41006000

000004f8 <ADXL345_0_CLOCK_init>:
     4f8:	4b06      	ldr	r3, [pc, #24]	; (514 <ADXL345_0_CLOCK_init+0x1c>)
     4fa:	2140      	movs	r1, #64	; 0x40
     4fc:	22c4      	movs	r2, #196	; 0xc4
     4fe:	5099      	str	r1, [r3, r2]
     500:	3101      	adds	r1, #1
     502:	3a08      	subs	r2, #8
     504:	5099      	str	r1, [r3, r2]
}

static inline void hri_mclk_set_APBCMASK_SERCOM1_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM1;
     506:	4a04      	ldr	r2, [pc, #16]	; (518 <ADXL345_0_CLOCK_init+0x20>)
     508:	69d3      	ldr	r3, [r2, #28]
     50a:	393d      	subs	r1, #61	; 0x3d
     50c:	430b      	orrs	r3, r1
     50e:	61d3      	str	r3, [r2, #28]
void ADXL345_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM1_GCLK_ID_CORE, CONF_GCLK_SERCOM1_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM1_GCLK_ID_SLOW, CONF_GCLK_SERCOM1_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM1_bit(MCLK);
}
     510:	4770      	bx	lr
     512:	46c0      	nop			; (mov r8, r8)
     514:	40001c00 	.word	0x40001c00
     518:	40000800 	.word	0x40000800

0000051c <ADXL345_0_init>:

void ADXL345_0_init(void)
{
     51c:	b510      	push	{r4, lr}
	ADXL345_0_CLOCK_init();
     51e:	4b04      	ldr	r3, [pc, #16]	; (530 <ADXL345_0_init+0x14>)
     520:	4798      	blx	r3
	i2c_m_sync_init(&ADXL345_0, SERCOM1);
     522:	4904      	ldr	r1, [pc, #16]	; (534 <ADXL345_0_init+0x18>)
     524:	4804      	ldr	r0, [pc, #16]	; (538 <ADXL345_0_init+0x1c>)
     526:	4b05      	ldr	r3, [pc, #20]	; (53c <ADXL345_0_init+0x20>)
     528:	4798      	blx	r3
	ADXL345_0_PORT_init();
     52a:	4b05      	ldr	r3, [pc, #20]	; (540 <ADXL345_0_init+0x24>)
     52c:	4798      	blx	r3
}
     52e:	bd10      	pop	{r4, pc}
     530:	000004f9 	.word	0x000004f9
     534:	42000800 	.word	0x42000800
     538:	20000af0 	.word	0x20000af0
     53c:	000009a1 	.word	0x000009a1
     540:	00000475 	.word	0x00000475

00000544 <SEGMENT_LCD_0_PORT_init>:

void SEGMENT_LCD_0_PORT_init(void)
{
     544:	b5f0      	push	{r4, r5, r6, r7, lr}
     546:	46c6      	mov	lr, r8
     548:	b500      	push	{lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     54a:	4bd0      	ldr	r3, [pc, #832]	; (88c <SEGMENT_LCD_0_PORT_init+0x348>)
     54c:	2446      	movs	r4, #70	; 0x46
     54e:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     550:	2101      	movs	r1, #1
     552:	4388      	bics	r0, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     554:	2201      	movs	r2, #1
     556:	4310      	orrs	r0, r2
     558:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     55a:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     55c:	2733      	movs	r7, #51	; 0x33
     55e:	5dd8      	ldrb	r0, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     560:	3c37      	subs	r4, #55	; 0x37
     562:	46a0      	mov	r8, r4
     564:	43a0      	bics	r0, r4
	tmp |= PORT_PMUX_PMUXE(data);
     566:	4310      	orrs	r0, r2
     568:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     56a:	55d8      	strb	r0, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     56c:	3438      	adds	r4, #56	; 0x38
     56e:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     570:	4388      	bics	r0, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     572:	4310      	orrs	r0, r2
     574:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     576:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     578:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     57a:	3c38      	subs	r4, #56	; 0x38
     57c:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     57e:	2010      	movs	r0, #16
     580:	4306      	orrs	r6, r0
     582:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     584:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     586:	2746      	movs	r7, #70	; 0x46
     588:	37ff      	adds	r7, #255	; 0xff
     58a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     58c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     58e:	4316      	orrs	r6, r2
     590:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     592:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     594:	3f13      	subs	r7, #19
     596:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     598:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     59a:	4306      	orrs	r6, r0
     59c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     59e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5a0:	3714      	adds	r7, #20
     5a2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5a4:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5a6:	4316      	orrs	r6, r2
     5a8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5aa:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5ac:	2734      	movs	r7, #52	; 0x34
     5ae:	37ff      	adds	r7, #255	; 0xff
     5b0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     5b2:	4645      	mov	r5, r8
     5b4:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     5b6:	4316      	orrs	r6, r2
     5b8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5ba:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5bc:	2648      	movs	r6, #72	; 0x48
     5be:	36ff      	adds	r6, #255	; 0xff
     5c0:	46b4      	mov	ip, r6
     5c2:	5d9e      	ldrb	r6, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5c4:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5c6:	4316      	orrs	r6, r2
     5c8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5ca:	4665      	mov	r5, ip
     5cc:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5ce:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     5d0:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     5d2:	4306      	orrs	r6, r0
     5d4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5d6:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5d8:	3feb      	subs	r7, #235	; 0xeb
     5da:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5dc:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5de:	4316      	orrs	r6, r2
     5e0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5e2:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5e4:	3f14      	subs	r7, #20
     5e6:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     5e8:	4645      	mov	r5, r8
     5ea:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     5ec:	4316      	orrs	r6, r2
     5ee:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5f0:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5f2:	353a      	adds	r5, #58	; 0x3a
     5f4:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5f6:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5f8:	4316      	orrs	r6, r2
     5fa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5fc:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5fe:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     600:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     602:	4306      	orrs	r6, r0
     604:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     606:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     608:	3716      	adds	r7, #22
     60a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     60c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     60e:	4316      	orrs	r6, r2
     610:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     612:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     614:	3f15      	subs	r7, #21
     616:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     618:	4645      	mov	r5, r8
     61a:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     61c:	4316      	orrs	r6, r2
     61e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     620:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     622:	353c      	adds	r5, #60	; 0x3c
     624:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     626:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     628:	4316      	orrs	r6, r2
     62a:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     62c:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     62e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     630:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     632:	4306      	orrs	r6, r0
     634:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     636:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     638:	3714      	adds	r7, #20
     63a:	37ff      	adds	r7, #255	; 0xff
     63c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     63e:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     640:	4316      	orrs	r6, r2
     642:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     644:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     646:	3f14      	subs	r7, #20
     648:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     64a:	4645      	mov	r5, r8
     64c:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     64e:	4316      	orrs	r6, r2
     650:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     652:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     654:	254a      	movs	r5, #74	; 0x4a
     656:	35ff      	adds	r5, #255	; 0xff
     658:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     65a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     65c:	4316      	orrs	r6, r2
     65e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     660:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     662:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     664:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     666:	4306      	orrs	r6, r0
     668:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     66a:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     66c:	3716      	adds	r7, #22
     66e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     670:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     672:	4316      	orrs	r6, r2
     674:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     676:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     678:	2736      	movs	r7, #54	; 0x36
     67a:	37ff      	adds	r7, #255	; 0xff
     67c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     67e:	4645      	mov	r5, r8
     680:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     682:	4316      	orrs	r6, r2
     684:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     686:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     688:	254c      	movs	r5, #76	; 0x4c
     68a:	35ff      	adds	r5, #255	; 0xff
     68c:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     68e:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     690:	4316      	orrs	r6, r2
     692:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     694:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     696:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     698:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     69a:	4306      	orrs	r6, r0
     69c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     69e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6a0:	3717      	adds	r7, #23
     6a2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6a4:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6a6:	4316      	orrs	r6, r2
     6a8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6aa:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6ac:	3f16      	subs	r7, #22
     6ae:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     6b0:	4645      	mov	r5, r8
     6b2:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     6b4:	4316      	orrs	r6, r2
     6b6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6b8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6ba:	254e      	movs	r5, #78	; 0x4e
     6bc:	35ff      	adds	r5, #255	; 0xff
     6be:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6c0:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6c2:	4316      	orrs	r6, r2
     6c4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6c6:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6c8:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6ca:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     6cc:	4306      	orrs	r6, r0
     6ce:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6d0:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6d2:	3f6b      	subs	r7, #107	; 0x6b
     6d4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6d6:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6d8:	4316      	orrs	r6, r2
     6da:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6dc:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6de:	3f16      	subs	r7, #22
     6e0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6e2:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     6e4:	4306      	orrs	r6, r0
     6e6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6e8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6ea:	3717      	adds	r7, #23
     6ec:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6ee:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6f0:	4316      	orrs	r6, r2
     6f2:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6f4:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6f6:	3f16      	subs	r7, #22
     6f8:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     6fa:	4645      	mov	r5, r8
     6fc:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     6fe:	4316      	orrs	r6, r2
     700:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     702:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     704:	35be      	adds	r5, #190	; 0xbe
     706:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     708:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     70a:	4316      	orrs	r6, r2
     70c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     70e:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     710:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     712:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     714:	4306      	orrs	r6, r0
     716:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     718:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     71a:	3718      	adds	r7, #24
     71c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     71e:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     720:	4316      	orrs	r6, r2
     722:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     724:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     726:	3f17      	subs	r7, #23
     728:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     72a:	4645      	mov	r5, r8
     72c:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     72e:	4316      	orrs	r6, r2
     730:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     732:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     734:	35c0      	adds	r5, #192	; 0xc0
     736:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     738:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     73a:	4316      	orrs	r6, r2
     73c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     73e:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     740:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     742:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     744:	4306      	orrs	r6, r0
     746:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     748:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     74a:	3797      	adds	r7, #151	; 0x97
     74c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     74e:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     750:	4316      	orrs	r6, r2
     752:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     754:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     756:	2738      	movs	r7, #56	; 0x38
     758:	37ff      	adds	r7, #255	; 0xff
     75a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     75c:	4645      	mov	r5, r8
     75e:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     760:	4316      	orrs	r6, r2
     762:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     764:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     766:	2550      	movs	r5, #80	; 0x50
     768:	35ff      	adds	r5, #255	; 0xff
     76a:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     76c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     76e:	4316      	orrs	r6, r2
     770:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     772:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     774:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     776:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     778:	4306      	orrs	r6, r0
     77a:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     77c:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     77e:	3fe9      	subs	r7, #233	; 0xe9
     780:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     782:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     784:	4316      	orrs	r6, r2
     786:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     788:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     78a:	3f17      	subs	r7, #23
     78c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     78e:	4645      	mov	r5, r8
     790:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     792:	4316      	orrs	r6, r2
     794:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     796:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     798:	3540      	adds	r5, #64	; 0x40
     79a:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     79c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     79e:	4316      	orrs	r6, r2
     7a0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7a2:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7a4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     7a6:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     7a8:	4306      	orrs	r6, r0
     7aa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7ac:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7ae:	371a      	adds	r7, #26
     7b0:	37ff      	adds	r7, #255	; 0xff
     7b2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7b4:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7b6:	4316      	orrs	r6, r2
     7b8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7ba:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7bc:	3f18      	subs	r7, #24
     7be:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     7c0:	4645      	mov	r5, r8
     7c2:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     7c4:	4316      	orrs	r6, r2
     7c6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7c8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7ca:	2552      	movs	r5, #82	; 0x52
     7cc:	35ff      	adds	r5, #255	; 0xff
     7ce:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7d0:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7d2:	4316      	orrs	r6, r2
     7d4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7d6:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7d8:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     7da:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     7dc:	4306      	orrs	r6, r0
     7de:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7e0:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7e2:	371a      	adds	r7, #26
     7e4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7e6:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7e8:	4316      	orrs	r6, r2
     7ea:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7ec:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7ee:	273a      	movs	r7, #58	; 0x3a
     7f0:	37ff      	adds	r7, #255	; 0xff
     7f2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     7f4:	4645      	mov	r5, r8
     7f6:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     7f8:	4316      	orrs	r6, r2
     7fa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7fc:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7fe:	2554      	movs	r5, #84	; 0x54
     800:	35ff      	adds	r5, #255	; 0xff
     802:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     804:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     806:	4316      	orrs	r6, r2
     808:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     80a:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     80c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     80e:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     810:	4306      	orrs	r6, r0
     812:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     814:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     816:	371b      	adds	r7, #27
     818:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     81a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     81c:	4316      	orrs	r6, r2
     81e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     820:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     822:	269d      	movs	r6, #157	; 0x9d
     824:	0076      	lsls	r6, r6, #1
     826:	5d9f      	ldrb	r7, [r3, r6]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     828:	4645      	mov	r5, r8
     82a:	43af      	bics	r7, r5
     82c:	003d      	movs	r5, r7
	tmp |= PORT_PMUX_PMUXE(data);
     82e:	4315      	orrs	r5, r2
     830:	b2ed      	uxtb	r5, r5
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     832:	559d      	strb	r5, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     834:	2756      	movs	r7, #86	; 0x56
     836:	37ff      	adds	r7, #255	; 0xff
     838:	5ddd      	ldrb	r5, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     83a:	438d      	bics	r5, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     83c:	432a      	orrs	r2, r5
     83e:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     840:	55da      	strb	r2, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     842:	5d9a      	ldrb	r2, [r3, r6]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     844:	4014      	ands	r4, r2
	tmp |= PORT_PMUX_PMUXO(data);
     846:	4320      	orrs	r0, r4
     848:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     84a:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     84c:	22d0      	movs	r2, #208	; 0xd0
     84e:	5c9b      	ldrb	r3, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     850:	438b      	bics	r3, r1
     852:	0019      	movs	r1, r3
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     854:	2401      	movs	r4, #1
     856:	4321      	orrs	r1, r4
     858:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     85a:	4b0c      	ldr	r3, [pc, #48]	; (88c <SEGMENT_LCD_0_PORT_init+0x348>)
     85c:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     85e:	20b8      	movs	r0, #184	; 0xb8
     860:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     862:	3ac1      	subs	r2, #193	; 0xc1
     864:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     866:	4321      	orrs	r1, r4
     868:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     86a:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     86c:	21d1      	movs	r1, #209	; 0xd1
     86e:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     870:	2501      	movs	r5, #1
     872:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     874:	4322      	orrs	r2, r4
     876:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     878:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     87a:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     87c:	39c2      	subs	r1, #194	; 0xc2
     87e:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     880:	3101      	adds	r1, #1
     882:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     884:	541a      	strb	r2, [r3, r0]
	gpio_set_pin_function(PC21, PINMUX_PC21B_SLCD_LP41);

	gpio_set_pin_function(PB16, PINMUX_PB16B_SLCD_LP42);

	gpio_set_pin_function(PB17, PINMUX_PB17B_SLCD_LP43);
}
     886:	bc04      	pop	{r2}
     888:	4690      	mov	r8, r2
     88a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     88c:	41006000 	.word	0x41006000

00000890 <SEGMENT_LCD_0_init>:
 * \brief SLCD initialization function
 *
 * Enables SLCD peripheral, clocks and initializes SLCD driver
 */
void SEGMENT_LCD_0_init(void)
{
     890:	b510      	push	{r4, lr}
}

static inline void hri_mclk_set_APBCMASK_SLCD_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SLCD;
     892:	4906      	ldr	r1, [pc, #24]	; (8ac <SEGMENT_LCD_0_init+0x1c>)
     894:	69ca      	ldr	r2, [r1, #28]
     896:	2380      	movs	r3, #128	; 0x80
     898:	021b      	lsls	r3, r3, #8
     89a:	4313      	orrs	r3, r2
     89c:	61cb      	str	r3, [r1, #28]
	hri_mclk_set_APBCMASK_SLCD_bit(SLCD);
	slcd_sync_init(&SEGMENT_LCD_0, SLCD);
     89e:	4804      	ldr	r0, [pc, #16]	; (8b0 <SEGMENT_LCD_0_init+0x20>)
     8a0:	4b04      	ldr	r3, [pc, #16]	; (8b4 <SEGMENT_LCD_0_init+0x24>)
     8a2:	4798      	blx	r3
	SEGMENT_LCD_0_PORT_init();
     8a4:	4b04      	ldr	r3, [pc, #16]	; (8b8 <SEGMENT_LCD_0_init+0x28>)
     8a6:	4798      	blx	r3
}
     8a8:	bd10      	pop	{r4, pc}
     8aa:	46c0      	nop			; (mov r8, r8)
     8ac:	42003c00 	.word	0x42003c00
     8b0:	20000ae0 	.word	0x20000ae0
     8b4:	00000abd 	.word	0x00000abd
     8b8:	00000545 	.word	0x00000545

000008bc <system_init>:
	hri_gclk_write_PCHCTRL_reg(GCLK, PTC_GCLK_ID, CONF_GCLK_PTC_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_PTC_bit(MCLK);
}

void system_init(void)
{
     8bc:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     8be:	4b0f      	ldr	r3, [pc, #60]	; (8fc <system_init+0x40>)
     8c0:	4798      	blx	r3
	((Mclk *)hw)->APBAMASK.reg |= MCLK_APBAMASK_RTC;
     8c2:	4c0f      	ldr	r4, [pc, #60]	; (900 <system_init+0x44>)
     8c4:	6962      	ldr	r2, [r4, #20]
     8c6:	2380      	movs	r3, #128	; 0x80
     8c8:	009b      	lsls	r3, r3, #2
     8ca:	4313      	orrs	r3, r2
     8cc:	6163      	str	r3, [r4, #20]
	timer_init(&Timer, RTC, _rtc_get_timer());
     8ce:	4b0d      	ldr	r3, [pc, #52]	; (904 <system_init+0x48>)
     8d0:	4798      	blx	r3
     8d2:	0002      	movs	r2, r0
     8d4:	490c      	ldr	r1, [pc, #48]	; (908 <system_init+0x4c>)
     8d6:	480d      	ldr	r0, [pc, #52]	; (90c <system_init+0x50>)
     8d8:	4b0d      	ldr	r3, [pc, #52]	; (910 <system_init+0x54>)
     8da:	4798      	blx	r3
	init_mcu();

	Timer_init();

	EDBG_0_init();
     8dc:	4b0d      	ldr	r3, [pc, #52]	; (914 <system_init+0x58>)
     8de:	4798      	blx	r3

	ADXL345_0_init();
     8e0:	4b0d      	ldr	r3, [pc, #52]	; (918 <system_init+0x5c>)
     8e2:	4798      	blx	r3
	SEGMENT_LCD_0_init();
     8e4:	4b0d      	ldr	r3, [pc, #52]	; (91c <system_init+0x60>)
     8e6:	4798      	blx	r3
     8e8:	2141      	movs	r1, #65	; 0x41
     8ea:	23ec      	movs	r3, #236	; 0xec
     8ec:	4a0c      	ldr	r2, [pc, #48]	; (920 <system_init+0x64>)
     8ee:	50d1      	str	r1, [r2, r3]
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_PTC;
     8f0:	69e2      	ldr	r2, [r4, #28]
     8f2:	2380      	movs	r3, #128	; 0x80
     8f4:	01db      	lsls	r3, r3, #7
     8f6:	4313      	orrs	r3, r2
     8f8:	61e3      	str	r3, [r4, #28]

	PTC_clock_init();
}
     8fa:	bd10      	pop	{r4, pc}
     8fc:	00001099 	.word	0x00001099
     900:	40000800 	.word	0x40000800
     904:	0000128b 	.word	0x0000128b
     908:	40002400 	.word	0x40002400
     90c:	20000ac4 	.word	0x20000ac4
     910:	00000d65 	.word	0x00000d65
     914:	00000449 	.word	0x00000449
     918:	0000051d 	.word	0x0000051d
     91c:	00000891 	.word	0x00000891
     920:	40001c00 	.word	0x40001c00

00000924 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     924:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     928:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     92a:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     92c:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     930:	4770      	bx	lr

00000932 <atomic_leave_critical>:
     932:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     936:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     938:	f383 8810 	msr	PRIMASK, r3
}
     93c:	4770      	bx	lr
	...

00000940 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     940:	b510      	push	{r4, lr}
     942:	b084      	sub	sp, #16
     944:	0014      	movs	r4, r2
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     946:	ab01      	add	r3, sp, #4
     948:	3814      	subs	r0, #20
     94a:	8b82      	ldrh	r2, [r0, #28]
     94c:	801a      	strh	r2, [r3, #0]
	msg.len    = n;
     94e:	9402      	str	r4, [sp, #8]
	msg.flags  = I2C_M_STOP;
     950:	4a05      	ldr	r2, [pc, #20]	; (968 <i2c_m_sync_write+0x28>)
     952:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     954:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     956:	0019      	movs	r1, r3
     958:	4b04      	ldr	r3, [pc, #16]	; (96c <i2c_m_sync_write+0x2c>)
     95a:	4798      	blx	r3

	if (ret) {
     95c:	2800      	cmp	r0, #0
     95e:	d100      	bne.n	962 <i2c_m_sync_write+0x22>
		return ret;
	}

	return n;
     960:	0020      	movs	r0, r4
}
     962:	b004      	add	sp, #16
     964:	bd10      	pop	{r4, pc}
     966:	46c0      	nop			; (mov r8, r8)
     968:	ffff8000 	.word	0xffff8000
     96c:	00001589 	.word	0x00001589

00000970 <i2c_m_sync_read>:
{
     970:	b510      	push	{r4, lr}
     972:	b084      	sub	sp, #16
     974:	0014      	movs	r4, r2
	msg.addr   = i2c->slave_addr;
     976:	ab01      	add	r3, sp, #4
     978:	3814      	subs	r0, #20
     97a:	8b82      	ldrh	r2, [r0, #28]
     97c:	801a      	strh	r2, [r3, #0]
	msg.len    = n;
     97e:	9402      	str	r4, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     980:	4a05      	ldr	r2, [pc, #20]	; (998 <i2c_m_sync_read+0x28>)
     982:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     984:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     986:	0019      	movs	r1, r3
     988:	4b04      	ldr	r3, [pc, #16]	; (99c <i2c_m_sync_read+0x2c>)
     98a:	4798      	blx	r3
	if (ret) {
     98c:	2800      	cmp	r0, #0
     98e:	d100      	bne.n	992 <i2c_m_sync_read+0x22>
	return n;
     990:	0020      	movs	r0, r4
}
     992:	b004      	add	sp, #16
     994:	bd10      	pop	{r4, pc}
     996:	46c0      	nop			; (mov r8, r8)
     998:	ffff8001 	.word	0xffff8001
     99c:	00001589 	.word	0x00001589

000009a0 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     9a0:	b570      	push	{r4, r5, r6, lr}
     9a2:	0004      	movs	r4, r0
     9a4:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     9a6:	1e43      	subs	r3, r0, #1
     9a8:	4198      	sbcs	r0, r3
     9aa:	b2c0      	uxtb	r0, r0
     9ac:	225e      	movs	r2, #94	; 0x5e
     9ae:	4907      	ldr	r1, [pc, #28]	; (9cc <i2c_m_sync_init+0x2c>)
     9b0:	4b07      	ldr	r3, [pc, #28]	; (9d0 <i2c_m_sync_init+0x30>)
     9b2:	4798      	blx	r3

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     9b4:	0029      	movs	r1, r5
     9b6:	0020      	movs	r0, r4
     9b8:	4b06      	ldr	r3, [pc, #24]	; (9d4 <i2c_m_sync_init+0x34>)
     9ba:	4798      	blx	r3
	if (init_status) {
     9bc:	2800      	cmp	r0, #0
     9be:	d103      	bne.n	9c8 <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     9c0:	4b05      	ldr	r3, [pc, #20]	; (9d8 <i2c_m_sync_init+0x38>)
     9c2:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     9c4:	4b05      	ldr	r3, [pc, #20]	; (9dc <i2c_m_sync_init+0x3c>)
     9c6:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     9c8:	bd70      	pop	{r4, r5, r6, pc}
     9ca:	46c0      	nop			; (mov r8, r8)
     9cc:	00009c70 	.word	0x00009c70
     9d0:	00000fed 	.word	0x00000fed
     9d4:	000014d5 	.word	0x000014d5
     9d8:	00000971 	.word	0x00000971
     9dc:	00000941 	.word	0x00000941

000009e0 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     9e0:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     9e2:	4b01      	ldr	r3, [pc, #4]	; (9e8 <i2c_m_sync_enable+0x8>)
     9e4:	4798      	blx	r3
}
     9e6:	bd10      	pop	{r4, pc}
     9e8:	00001505 	.word	0x00001505

000009ec <i2c_m_sync_set_slaveaddr>:
/**
 * \brief Sync version of i2c set slave address
 */
int32_t i2c_m_sync_set_slaveaddr(struct i2c_m_sync_desc *i2c, int16_t addr, int32_t addr_len)
{
	return i2c->slave_addr = (addr & 0x3ff) | (addr_len & I2C_M_TEN);
     9ec:	0589      	lsls	r1, r1, #22
     9ee:	0d89      	lsrs	r1, r1, #22
     9f0:	2380      	movs	r3, #128	; 0x80
     9f2:	00db      	lsls	r3, r3, #3
     9f4:	401a      	ands	r2, r3
     9f6:	430a      	orrs	r2, r1
     9f8:	8382      	strh	r2, [r0, #28]
}
     9fa:	0010      	movs	r0, r2
     9fc:	4770      	bx	lr
	...

00000a00 <i2c_m_sync_cmd_read>:

/**
 * \brief Sync version of i2c read command
 */
int32_t i2c_m_sync_cmd_read(struct i2c_m_sync_desc *i2c, uint8_t reg, uint8_t *buffer, uint8_t length)
{
     a00:	b570      	push	{r4, r5, r6, lr}
     a02:	b086      	sub	sp, #24
     a04:	0004      	movs	r4, r0
     a06:	0016      	movs	r6, r2
     a08:	001d      	movs	r5, r3
     a0a:	466b      	mov	r3, sp
     a0c:	71d9      	strb	r1, [r3, #7]
     a0e:	3307      	adds	r3, #7
	struct _i2c_m_msg msg;
	int32_t           ret;

	msg.addr   = i2c->slave_addr;
     a10:	a903      	add	r1, sp, #12
     a12:	8b82      	ldrh	r2, [r0, #28]
     a14:	800a      	strh	r2, [r1, #0]
	msg.len    = 1;
     a16:	2201      	movs	r2, #1
     a18:	604a      	str	r2, [r1, #4]
	msg.flags  = 0;
     a1a:	2200      	movs	r2, #0
     a1c:	804a      	strh	r2, [r1, #2]
	msg.buffer = &reg;
     a1e:	608b      	str	r3, [r1, #8]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     a20:	4b07      	ldr	r3, [pc, #28]	; (a40 <i2c_m_sync_cmd_read+0x40>)
     a22:	4798      	blx	r3

	if (ret != 0) {
     a24:	2800      	cmp	r0, #0
     a26:	d001      	beq.n	a2c <i2c_m_sync_cmd_read+0x2c>
		/* error occurred */
		return ret;
	}

	return ERR_NONE;
}
     a28:	b006      	add	sp, #24
     a2a:	bd70      	pop	{r4, r5, r6, pc}
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     a2c:	a903      	add	r1, sp, #12
     a2e:	4b05      	ldr	r3, [pc, #20]	; (a44 <i2c_m_sync_cmd_read+0x44>)
     a30:	804b      	strh	r3, [r1, #2]
	msg.buffer = buffer;
     a32:	608e      	str	r6, [r1, #8]
	msg.len    = length;
     a34:	604d      	str	r5, [r1, #4]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     a36:	0020      	movs	r0, r4
     a38:	4b01      	ldr	r3, [pc, #4]	; (a40 <i2c_m_sync_cmd_read+0x40>)
     a3a:	4798      	blx	r3
     a3c:	e7f4      	b.n	a28 <i2c_m_sync_cmd_read+0x28>
     a3e:	46c0      	nop			; (mov r8, r8)
     a40:	00001589 	.word	0x00001589
     a44:	ffff8001 	.word	0xffff8001

00000a48 <i2c_m_sync_transfer>:

/**
 * \brief Sync version of i2c transfer command
 */
int32_t i2c_m_sync_transfer(struct i2c_m_sync_desc *const i2c, struct _i2c_m_msg *msg)
{
     a48:	b510      	push	{r4, lr}
	return _i2c_m_sync_transfer(&i2c->device, msg);
     a4a:	4b01      	ldr	r3, [pc, #4]	; (a50 <i2c_m_sync_transfer+0x8>)
     a4c:	4798      	blx	r3
}
     a4e:	bd10      	pop	{r4, pc}
     a50:	00001589 	.word	0x00001589

00000a54 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     a54:	b570      	push	{r4, r5, r6, lr}
     a56:	0006      	movs	r6, r0
     a58:	000c      	movs	r4, r1
     a5a:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     a5c:	2800      	cmp	r0, #0
     a5e:	d00d      	beq.n	a7c <io_write+0x28>
     a60:	0008      	movs	r0, r1
     a62:	1e43      	subs	r3, r0, #1
     a64:	4198      	sbcs	r0, r3
     a66:	b2c0      	uxtb	r0, r0
     a68:	2234      	movs	r2, #52	; 0x34
     a6a:	4905      	ldr	r1, [pc, #20]	; (a80 <io_write+0x2c>)
     a6c:	4b05      	ldr	r3, [pc, #20]	; (a84 <io_write+0x30>)
     a6e:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     a70:	6833      	ldr	r3, [r6, #0]
     a72:	002a      	movs	r2, r5
     a74:	0021      	movs	r1, r4
     a76:	0030      	movs	r0, r6
     a78:	4798      	blx	r3
}
     a7a:	bd70      	pop	{r4, r5, r6, pc}
     a7c:	2000      	movs	r0, #0
     a7e:	e7f3      	b.n	a68 <io_write+0x14>
     a80:	00009c8c 	.word	0x00009c8c
     a84:	00000fed 	.word	0x00000fed

00000a88 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     a88:	b570      	push	{r4, r5, r6, lr}
     a8a:	0006      	movs	r6, r0
     a8c:	000c      	movs	r4, r1
     a8e:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     a90:	2800      	cmp	r0, #0
     a92:	d00d      	beq.n	ab0 <io_read+0x28>
     a94:	0008      	movs	r0, r1
     a96:	1e43      	subs	r3, r0, #1
     a98:	4198      	sbcs	r0, r3
     a9a:	b2c0      	uxtb	r0, r0
     a9c:	223d      	movs	r2, #61	; 0x3d
     a9e:	4905      	ldr	r1, [pc, #20]	; (ab4 <io_read+0x2c>)
     aa0:	4b05      	ldr	r3, [pc, #20]	; (ab8 <io_read+0x30>)
     aa2:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     aa4:	6873      	ldr	r3, [r6, #4]
     aa6:	002a      	movs	r2, r5
     aa8:	0021      	movs	r1, r4
     aaa:	0030      	movs	r0, r6
     aac:	4798      	blx	r3
}
     aae:	bd70      	pop	{r4, r5, r6, pc}
     ab0:	2000      	movs	r0, #0
     ab2:	e7f3      	b.n	a9c <io_read+0x14>
     ab4:	00009c8c 	.word	0x00009c8c
     ab8:	00000fed 	.word	0x00000fed

00000abc <slcd_sync_init>:

/**
 * \brief              Initialize SLCD Descriptor
 */
int32_t slcd_sync_init(struct slcd_sync_descriptor *const descr, void *const hw)
{
     abc:	b570      	push	{r4, r5, r6, lr}
     abe:	0004      	movs	r4, r0
     ac0:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     ac2:	2800      	cmp	r0, #0
     ac4:	d00c      	beq.n	ae0 <slcd_sync_init+0x24>
     ac6:	0008      	movs	r0, r1
     ac8:	1e43      	subs	r3, r0, #1
     aca:	4198      	sbcs	r0, r3
     acc:	b2c0      	uxtb	r0, r0
     ace:	222b      	movs	r2, #43	; 0x2b
     ad0:	4904      	ldr	r1, [pc, #16]	; (ae4 <slcd_sync_init+0x28>)
     ad2:	4b05      	ldr	r3, [pc, #20]	; (ae8 <slcd_sync_init+0x2c>)
     ad4:	4798      	blx	r3
	return _slcd_sync_init(&descr->dev, hw);
     ad6:	0029      	movs	r1, r5
     ad8:	0020      	movs	r0, r4
     ada:	4b04      	ldr	r3, [pc, #16]	; (aec <slcd_sync_init+0x30>)
     adc:	4798      	blx	r3
}
     ade:	bd70      	pop	{r4, r5, r6, pc}
     ae0:	2000      	movs	r0, #0
     ae2:	e7f4      	b.n	ace <slcd_sync_init+0x12>
     ae4:	00009ca0 	.word	0x00009ca0
     ae8:	00000fed 	.word	0x00000fed
     aec:	00001b35 	.word	0x00001b35

00000af0 <slcd_sync_enable>:
/**
 * \brief              Enable SLCD driver
 *
 */
int32_t slcd_sync_enable(struct slcd_sync_descriptor *const descr)
{
     af0:	b510      	push	{r4, lr}
     af2:	0004      	movs	r4, r0
	ASSERT(descr);
     af4:	1e43      	subs	r3, r0, #1
     af6:	4198      	sbcs	r0, r3
     af8:	b2c0      	uxtb	r0, r0
     afa:	223e      	movs	r2, #62	; 0x3e
     afc:	4903      	ldr	r1, [pc, #12]	; (b0c <slcd_sync_enable+0x1c>)
     afe:	4b04      	ldr	r3, [pc, #16]	; (b10 <slcd_sync_enable+0x20>)
     b00:	4798      	blx	r3
	return _slcd_sync_enable(&descr->dev);
     b02:	0020      	movs	r0, r4
     b04:	4b03      	ldr	r3, [pc, #12]	; (b14 <slcd_sync_enable+0x24>)
     b06:	4798      	blx	r3
}
     b08:	bd10      	pop	{r4, pc}
     b0a:	46c0      	nop			; (mov r8, r8)
     b0c:	00009ca0 	.word	0x00009ca0
     b10:	00000fed 	.word	0x00000fed
     b14:	00001bd9 	.word	0x00001bd9

00000b18 <slcd_sync_seg_on>:
}
/**
 * \brief              Turn on a Segment
 */
int32_t slcd_sync_seg_on(struct slcd_sync_descriptor *const descr, uint32_t seg)
{
     b18:	b570      	push	{r4, r5, r6, lr}
     b1a:	0004      	movs	r4, r0
     b1c:	000d      	movs	r5, r1
	ASSERT(descr);
     b1e:	1e43      	subs	r3, r0, #1
     b20:	4198      	sbcs	r0, r3
     b22:	b2c0      	uxtb	r0, r0
     b24:	224f      	movs	r2, #79	; 0x4f
     b26:	4904      	ldr	r1, [pc, #16]	; (b38 <slcd_sync_seg_on+0x20>)
     b28:	4b04      	ldr	r3, [pc, #16]	; (b3c <slcd_sync_seg_on+0x24>)
     b2a:	4798      	blx	r3
	return _slcd_sync_seg_on(&descr->dev, seg);
     b2c:	0029      	movs	r1, r5
     b2e:	0020      	movs	r0, r4
     b30:	4b03      	ldr	r3, [pc, #12]	; (b40 <slcd_sync_seg_on+0x28>)
     b32:	4798      	blx	r3
}
     b34:	bd70      	pop	{r4, r5, r6, pc}
     b36:	46c0      	nop			; (mov r8, r8)
     b38:	00009ca0 	.word	0x00009ca0
     b3c:	00000fed 	.word	0x00000fed
     b40:	00001bf1 	.word	0x00001bf1

00000b44 <slcd_sync_seg_blink>:
}
/**
 * \brief              Blink a Segment
 */
int32_t slcd_sync_seg_blink(struct slcd_sync_descriptor *const descr, uint32_t seg, const uint32_t period)
{
     b44:	b570      	push	{r4, r5, r6, lr}
     b46:	0004      	movs	r4, r0
     b48:	000e      	movs	r6, r1
     b4a:	0015      	movs	r5, r2
	ASSERT(descr && period);
     b4c:	2800      	cmp	r0, #0
     b4e:	d00d      	beq.n	b6c <slcd_sync_seg_blink+0x28>
     b50:	0010      	movs	r0, r2
     b52:	1e43      	subs	r3, r0, #1
     b54:	4198      	sbcs	r0, r3
     b56:	b2c0      	uxtb	r0, r0
     b58:	225f      	movs	r2, #95	; 0x5f
     b5a:	4905      	ldr	r1, [pc, #20]	; (b70 <slcd_sync_seg_blink+0x2c>)
     b5c:	4b05      	ldr	r3, [pc, #20]	; (b74 <slcd_sync_seg_blink+0x30>)
     b5e:	4798      	blx	r3
	return _slcd_sync_seg_blink(&descr->dev, seg, period);
     b60:	002a      	movs	r2, r5
     b62:	0031      	movs	r1, r6
     b64:	0020      	movs	r0, r4
     b66:	4b04      	ldr	r3, [pc, #16]	; (b78 <slcd_sync_seg_blink+0x34>)
     b68:	4798      	blx	r3
}
     b6a:	bd70      	pop	{r4, r5, r6, pc}
     b6c:	2000      	movs	r0, #0
     b6e:	e7f3      	b.n	b58 <slcd_sync_seg_blink+0x14>
     b70:	00009ca0 	.word	0x00009ca0
     b74:	00000fed 	.word	0x00000fed
     b78:	00001c09 	.word	0x00001c09

00000b7c <slcd_sync_write_char>:

/**
 * \brief              Displays a character
 */
int32_t slcd_sync_write_char(struct slcd_sync_descriptor *const descr, const uint8_t character, uint32_t index)
{
     b7c:	b570      	push	{r4, r5, r6, lr}
     b7e:	0004      	movs	r4, r0
     b80:	000d      	movs	r5, r1
     b82:	0016      	movs	r6, r2
	ASSERT(descr);
     b84:	1e43      	subs	r3, r0, #1
     b86:	4198      	sbcs	r0, r3
     b88:	b2c0      	uxtb	r0, r0
     b8a:	2268      	movs	r2, #104	; 0x68
     b8c:	4904      	ldr	r1, [pc, #16]	; (ba0 <slcd_sync_write_char+0x24>)
     b8e:	4b05      	ldr	r3, [pc, #20]	; (ba4 <slcd_sync_write_char+0x28>)
     b90:	4798      	blx	r3
	return _slcd_sync_write_char(&descr->dev, character, index);
     b92:	0032      	movs	r2, r6
     b94:	0029      	movs	r1, r5
     b96:	0020      	movs	r0, r4
     b98:	4b03      	ldr	r3, [pc, #12]	; (ba8 <slcd_sync_write_char+0x2c>)
     b9a:	4798      	blx	r3
}
     b9c:	bd70      	pop	{r4, r5, r6, pc}
     b9e:	46c0      	nop			; (mov r8, r8)
     ba0:	00009ca0 	.word	0x00009ca0
     ba4:	00000fed 	.word	0x00000fed
     ba8:	00001d49 	.word	0x00001d49

00000bac <slcd_sync_write_string>:
/**
 * \brief              Displays character string string
 */
int32_t slcd_sync_write_string(struct slcd_sync_descriptor *const descr, uint8_t *const str, uint32_t len,
                               uint32_t index)
{
     bac:	b5f0      	push	{r4, r5, r6, r7, lr}
     bae:	46ce      	mov	lr, r9
     bb0:	b500      	push	{lr}
     bb2:	b082      	sub	sp, #8
     bb4:	9001      	str	r0, [sp, #4]
     bb6:	000f      	movs	r7, r1
     bb8:	0016      	movs	r6, r2
     bba:	001d      	movs	r5, r3
	uint32_t i;
	ASSERT(descr && len);
     bbc:	2800      	cmp	r0, #0
     bbe:	d008      	beq.n	bd2 <slcd_sync_write_string+0x26>
     bc0:	2a00      	cmp	r2, #0
     bc2:	d115      	bne.n	bf0 <slcd_sync_write_string+0x44>
     bc4:	2273      	movs	r2, #115	; 0x73
     bc6:	4913      	ldr	r1, [pc, #76]	; (c14 <slcd_sync_write_string+0x68>)
     bc8:	2000      	movs	r0, #0
     bca:	4b13      	ldr	r3, [pc, #76]	; (c18 <slcd_sync_write_string+0x6c>)
     bcc:	4798      	blx	r3
	for (i = 0; i < len; i++) {
		if (_slcd_sync_write_char(&descr->dev, *(str + i), index + i) != ERR_NONE) {
			return ERR_INVALID_ARG;
		}
	}
	return ERR_NONE;
     bce:	2000      	movs	r0, #0
     bd0:	e00a      	b.n	be8 <slcd_sync_write_string+0x3c>
	ASSERT(descr && len);
     bd2:	2273      	movs	r2, #115	; 0x73
     bd4:	490f      	ldr	r1, [pc, #60]	; (c14 <slcd_sync_write_string+0x68>)
     bd6:	2000      	movs	r0, #0
     bd8:	4b0f      	ldr	r3, [pc, #60]	; (c18 <slcd_sync_write_string+0x6c>)
     bda:	4798      	blx	r3
	return ERR_NONE;
     bdc:	2000      	movs	r0, #0
	for (i = 0; i < len; i++) {
     bde:	2e00      	cmp	r6, #0
     be0:	d10b      	bne.n	bfa <slcd_sync_write_string+0x4e>
     be2:	e001      	b.n	be8 <slcd_sync_write_string+0x3c>
			return ERR_INVALID_ARG;
     be4:	200d      	movs	r0, #13
     be6:	4240      	negs	r0, r0
}
     be8:	b002      	add	sp, #8
     bea:	bc04      	pop	{r2}
     bec:	4691      	mov	r9, r2
     bee:	bdf0      	pop	{r4, r5, r6, r7, pc}
	ASSERT(descr && len);
     bf0:	2273      	movs	r2, #115	; 0x73
     bf2:	4908      	ldr	r1, [pc, #32]	; (c14 <slcd_sync_write_string+0x68>)
     bf4:	2001      	movs	r0, #1
     bf6:	4b08      	ldr	r3, [pc, #32]	; (c18 <slcd_sync_write_string+0x6c>)
     bf8:	4798      	blx	r3
{
     bfa:	2400      	movs	r4, #0
		if (_slcd_sync_write_char(&descr->dev, *(str + i), index + i) != ERR_NONE) {
     bfc:	4b07      	ldr	r3, [pc, #28]	; (c1c <slcd_sync_write_string+0x70>)
     bfe:	4699      	mov	r9, r3
     c00:	192a      	adds	r2, r5, r4
     c02:	5d39      	ldrb	r1, [r7, r4]
     c04:	9801      	ldr	r0, [sp, #4]
     c06:	47c8      	blx	r9
     c08:	2800      	cmp	r0, #0
     c0a:	d1eb      	bne.n	be4 <slcd_sync_write_string+0x38>
	for (i = 0; i < len; i++) {
     c0c:	3401      	adds	r4, #1
     c0e:	42a6      	cmp	r6, r4
     c10:	d8f6      	bhi.n	c00 <slcd_sync_write_string+0x54>
     c12:	e7e9      	b.n	be8 <slcd_sync_write_string+0x3c>
     c14:	00009ca0 	.word	0x00009ca0
     c18:	00000fed 	.word	0x00000fed
     c1c:	00001d49 	.word	0x00001d49

00000c20 <slcd_sync_start_animation>:
/**
 * \brief               Start animation play by a segment array
 */
int32_t slcd_sync_start_animation(struct slcd_sync_descriptor *const descr, const uint32_t segs[], uint32_t len,
                                  const uint32_t period)
{
     c20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c22:	0004      	movs	r4, r0
     c24:	000d      	movs	r5, r1
     c26:	0016      	movs	r6, r2
     c28:	001f      	movs	r7, r3
	ASSERT(descr && segs && len && period);
     c2a:	2800      	cmp	r0, #0
     c2c:	d012      	beq.n	c54 <slcd_sync_start_animation+0x34>
     c2e:	2900      	cmp	r1, #0
     c30:	d012      	beq.n	c58 <slcd_sync_start_animation+0x38>
     c32:	2000      	movs	r0, #0
     c34:	2a00      	cmp	r2, #0
     c36:	d002      	beq.n	c3e <slcd_sync_start_animation+0x1e>
     c38:	0018      	movs	r0, r3
     c3a:	1e43      	subs	r3, r0, #1
     c3c:	4198      	sbcs	r0, r3
     c3e:	2282      	movs	r2, #130	; 0x82
     c40:	4906      	ldr	r1, [pc, #24]	; (c5c <slcd_sync_start_animation+0x3c>)
     c42:	4b07      	ldr	r3, [pc, #28]	; (c60 <slcd_sync_start_animation+0x40>)
     c44:	4798      	blx	r3
	return _slcd_sync_start_animation(&descr->dev, segs, len, period);
     c46:	003b      	movs	r3, r7
     c48:	0032      	movs	r2, r6
     c4a:	0029      	movs	r1, r5
     c4c:	0020      	movs	r0, r4
     c4e:	4c05      	ldr	r4, [pc, #20]	; (c64 <slcd_sync_start_animation+0x44>)
     c50:	47a0      	blx	r4
}
     c52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && segs && len && period);
     c54:	2000      	movs	r0, #0
     c56:	e7f2      	b.n	c3e <slcd_sync_start_animation+0x1e>
     c58:	2000      	movs	r0, #0
     c5a:	e7f0      	b.n	c3e <slcd_sync_start_animation+0x1e>
     c5c:	00009ca0 	.word	0x00009ca0
     c60:	00000fed 	.word	0x00000fed
     c64:	00001ecd 	.word	0x00001ecd

00000c68 <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
     c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c6a:	46ce      	mov	lr, r9
     c6c:	4647      	mov	r7, r8
     c6e:	b580      	push	{r7, lr}
     c70:	4681      	mov	r9, r0
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
     c72:	6803      	ldr	r3, [r0, #0]
     c74:	469c      	mov	ip, r3
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
     c76:	2b00      	cmp	r3, #0
     c78:	d005      	beq.n	c86 <timer_add_timer_task+0x1e>
		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
		}
		if (time_left >= new_task->interval)
     c7a:	688e      	ldr	r6, [r1, #8]
     c7c:	001c      	movs	r4, r3
     c7e:	2500      	movs	r5, #0
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     c80:	2701      	movs	r7, #1
     c82:	1abf      	subs	r7, r7, r2
     c84:	e00d      	b.n	ca2 <timer_add_timer_task+0x3a>
		list_insert_as_head(list, new_task);
     c86:	4b12      	ldr	r3, [pc, #72]	; (cd0 <timer_add_timer_task+0x68>)
     c88:	4798      	blx	r3
		return;
     c8a:	e018      	b.n	cbe <timer_add_timer_task+0x56>
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     c8c:	18fb      	adds	r3, r7, r3
     c8e:	68a0      	ldr	r0, [r4, #8]
     c90:	4680      	mov	r8, r0
     c92:	4443      	add	r3, r8
		if (time_left >= new_task->interval)
     c94:	42b3      	cmp	r3, r6
     c96:	d20c      	bcs.n	cb2 <timer_add_timer_task+0x4a>
 * \return A pointer to the next list element or NULL if there is not next
 * element
 */
static inline void *list_get_next_element(const void *const element)
{
	return element ? ((struct list_element *)element)->next : NULL;
     c98:	6823      	ldr	r3, [r4, #0]
     c9a:	0025      	movs	r5, r4
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
     c9c:	2b00      	cmp	r3, #0
     c9e:	d00b      	beq.n	cb8 <timer_add_timer_task+0x50>
     ca0:	001c      	movs	r4, r3
		if (it->time_label <= time) {
     ca2:	6863      	ldr	r3, [r4, #4]
     ca4:	4293      	cmp	r3, r2
     ca6:	d8f1      	bhi.n	c8c <timer_add_timer_task+0x24>
			time_left = it->interval - (time - it->time_label);
     ca8:	68a0      	ldr	r0, [r4, #8]
     caa:	4680      	mov	r8, r0
     cac:	4443      	add	r3, r8
     cae:	1a9b      	subs	r3, r3, r2
     cb0:	e7f0      	b.n	c94 <timer_add_timer_task+0x2c>
			break;
		prev = it;
	}

	if (it == head) {
     cb2:	45a4      	cmp	ip, r4
     cb4:	d007      	beq.n	cc6 <timer_add_timer_task+0x5e>
     cb6:	002c      	movs	r4, r5
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
     cb8:	0020      	movs	r0, r4
     cba:	4b06      	ldr	r3, [pc, #24]	; (cd4 <timer_add_timer_task+0x6c>)
     cbc:	4798      	blx	r3
	}
}
     cbe:	bc0c      	pop	{r2, r3}
     cc0:	4690      	mov	r8, r2
     cc2:	4699      	mov	r9, r3
     cc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
     cc6:	4648      	mov	r0, r9
     cc8:	4b01      	ldr	r3, [pc, #4]	; (cd0 <timer_add_timer_task+0x68>)
     cca:	4798      	blx	r3
     ccc:	e7f7      	b.n	cbe <timer_add_timer_task+0x56>
     cce:	46c0      	nop			; (mov r8, r8)
     cd0:	00001019 	.word	0x00001019
     cd4:	00001045 	.word	0x00001045

00000cd8 <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
     cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
     cda:	46c6      	mov	lr, r8
     cdc:	b500      	push	{lr}
     cde:	b082      	sub	sp, #8
     ce0:	0007      	movs	r7, r0
	return (void *)list->head;
     ce2:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
     ce4:	6903      	ldr	r3, [r0, #16]
     ce6:	3301      	adds	r3, #1
     ce8:	4698      	mov	r8, r3
     cea:	6103      	str	r3, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
     cec:	7e03      	ldrb	r3, [r0, #24]
     cee:	07db      	lsls	r3, r3, #31
     cf0:	d411      	bmi.n	d16 <timer_process_counted+0x3e>
     cf2:	7e03      	ldrb	r3, [r0, #24]
     cf4:	079b      	lsls	r3, r3, #30
     cf6:	d40e      	bmi.n	d16 <timer_process_counted+0x3e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
		return;
	}

	while (it && ((time - it->time_label) >= it->interval)) {
     cf8:	2c00      	cmp	r4, #0
     cfa:	d010      	beq.n	d1e <timer_process_counted+0x46>
     cfc:	4643      	mov	r3, r8
     cfe:	6862      	ldr	r2, [r4, #4]
     d00:	1a9b      	subs	r3, r3, r2
     d02:	68a2      	ldr	r2, [r4, #8]
     d04:	4293      	cmp	r3, r2
     d06:	d30a      	bcc.n	d1e <timer_process_counted+0x46>
		struct timer_task *tmp = it;

		list_remove_head(&timer->tasks);
     d08:	2314      	movs	r3, #20
     d0a:	469c      	mov	ip, r3
     d0c:	4484      	add	ip, r0
     d0e:	4663      	mov	r3, ip
     d10:	9301      	str	r3, [sp, #4]
     d12:	4e12      	ldr	r6, [pc, #72]	; (d5c <timer_process_counted+0x84>)
     d14:	e014      	b.n	d40 <timer_process_counted+0x68>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
     d16:	7e3b      	ldrb	r3, [r7, #24]
     d18:	2202      	movs	r2, #2
     d1a:	4313      	orrs	r3, r2
     d1c:	763b      	strb	r3, [r7, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
     d1e:	b002      	add	sp, #8
     d20:	bc04      	pop	{r2}
     d22:	4690      	mov	r8, r2
     d24:	bdf0      	pop	{r4, r5, r6, r7, pc}
     d26:	697d      	ldr	r5, [r7, #20]
		tmp->cb(tmp);
     d28:	68e3      	ldr	r3, [r4, #12]
     d2a:	0020      	movs	r0, r4
     d2c:	4798      	blx	r3
	while (it && ((time - it->time_label) >= it->interval)) {
     d2e:	2d00      	cmp	r5, #0
     d30:	d0f5      	beq.n	d1e <timer_process_counted+0x46>
		it = (struct timer_task *)list_get_head(&timer->tasks);
     d32:	002c      	movs	r4, r5
	while (it && ((time - it->time_label) >= it->interval)) {
     d34:	4643      	mov	r3, r8
     d36:	686a      	ldr	r2, [r5, #4]
     d38:	1a9b      	subs	r3, r3, r2
     d3a:	68aa      	ldr	r2, [r5, #8]
     d3c:	4293      	cmp	r3, r2
     d3e:	d3ee      	bcc.n	d1e <timer_process_counted+0x46>
		list_remove_head(&timer->tasks);
     d40:	9801      	ldr	r0, [sp, #4]
     d42:	47b0      	blx	r6
		if (TIMER_TASK_REPEAT == tmp->mode) {
     d44:	7c23      	ldrb	r3, [r4, #16]
     d46:	2b01      	cmp	r3, #1
     d48:	d1ed      	bne.n	d26 <timer_process_counted+0x4e>
			tmp->time_label = time;
     d4a:	4643      	mov	r3, r8
     d4c:	6063      	str	r3, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
     d4e:	4642      	mov	r2, r8
     d50:	0021      	movs	r1, r4
     d52:	9801      	ldr	r0, [sp, #4]
     d54:	4b02      	ldr	r3, [pc, #8]	; (d60 <timer_process_counted+0x88>)
     d56:	4798      	blx	r3
     d58:	e7e5      	b.n	d26 <timer_process_counted+0x4e>
     d5a:	46c0      	nop			; (mov r8, r8)
     d5c:	0000104d 	.word	0x0000104d
     d60:	00000c69 	.word	0x00000c69

00000d64 <timer_init>:
{
     d64:	b570      	push	{r4, r5, r6, lr}
     d66:	0005      	movs	r5, r0
     d68:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     d6a:	2800      	cmp	r0, #0
     d6c:	d011      	beq.n	d92 <timer_init+0x2e>
     d6e:	0008      	movs	r0, r1
     d70:	1e43      	subs	r3, r0, #1
     d72:	4198      	sbcs	r0, r3
     d74:	b2c0      	uxtb	r0, r0
     d76:	223b      	movs	r2, #59	; 0x3b
     d78:	4907      	ldr	r1, [pc, #28]	; (d98 <timer_init+0x34>)
     d7a:	4b08      	ldr	r3, [pc, #32]	; (d9c <timer_init+0x38>)
     d7c:	4798      	blx	r3
	_timer_init(&descr->device, hw);
     d7e:	0021      	movs	r1, r4
     d80:	0028      	movs	r0, r5
     d82:	4b07      	ldr	r3, [pc, #28]	; (da0 <timer_init+0x3c>)
     d84:	4798      	blx	r3
	descr->time                           = 0;
     d86:	2300      	movs	r3, #0
     d88:	612b      	str	r3, [r5, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
     d8a:	4b06      	ldr	r3, [pc, #24]	; (da4 <timer_init+0x40>)
     d8c:	602b      	str	r3, [r5, #0]
}
     d8e:	2000      	movs	r0, #0
     d90:	bd70      	pop	{r4, r5, r6, pc}
     d92:	2000      	movs	r0, #0
     d94:	e7ef      	b.n	d76 <timer_init+0x12>
     d96:	46c0      	nop			; (mov r8, r8)
     d98:	00009cbc 	.word	0x00009cbc
     d9c:	00000fed 	.word	0x00000fed
     da0:	000011a9 	.word	0x000011a9
     da4:	00000cd9 	.word	0x00000cd9

00000da8 <timer_start>:
{
     da8:	b510      	push	{r4, lr}
     daa:	0004      	movs	r4, r0
	ASSERT(descr);
     dac:	1e43      	subs	r3, r0, #1
     dae:	4198      	sbcs	r0, r3
     db0:	b2c0      	uxtb	r0, r0
     db2:	2253      	movs	r2, #83	; 0x53
     db4:	4907      	ldr	r1, [pc, #28]	; (dd4 <timer_start+0x2c>)
     db6:	4b08      	ldr	r3, [pc, #32]	; (dd8 <timer_start+0x30>)
     db8:	4798      	blx	r3
	if (_timer_is_started(&descr->device)) {
     dba:	0020      	movs	r0, r4
     dbc:	4b07      	ldr	r3, [pc, #28]	; (ddc <timer_start+0x34>)
     dbe:	4798      	blx	r3
     dc0:	2800      	cmp	r0, #0
     dc2:	d104      	bne.n	dce <timer_start+0x26>
	_timer_start(&descr->device);
     dc4:	0020      	movs	r0, r4
     dc6:	4b06      	ldr	r3, [pc, #24]	; (de0 <timer_start+0x38>)
     dc8:	4798      	blx	r3
	return ERR_NONE;
     dca:	2000      	movs	r0, #0
}
     dcc:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     dce:	2011      	movs	r0, #17
     dd0:	4240      	negs	r0, r0
     dd2:	e7fb      	b.n	dcc <timer_start+0x24>
     dd4:	00009cbc 	.word	0x00009cbc
     dd8:	00000fed 	.word	0x00000fed
     ddc:	00001271 	.word	0x00001271
     de0:	00001215 	.word	0x00001215

00000de4 <timer_add_task>:
{
     de4:	b570      	push	{r4, r5, r6, lr}
     de6:	b082      	sub	sp, #8
     de8:	0004      	movs	r4, r0
     dea:	000d      	movs	r5, r1
	ASSERT(descr && task);
     dec:	2800      	cmp	r0, #0
     dee:	d024      	beq.n	e3a <timer_add_task+0x56>
     df0:	0008      	movs	r0, r1
     df2:	1e43      	subs	r3, r0, #1
     df4:	4198      	sbcs	r0, r3
     df6:	b2c0      	uxtb	r0, r0
     df8:	227a      	movs	r2, #122	; 0x7a
     dfa:	491e      	ldr	r1, [pc, #120]	; (e74 <timer_add_task+0x90>)
     dfc:	4b1e      	ldr	r3, [pc, #120]	; (e78 <timer_add_task+0x94>)
     dfe:	4798      	blx	r3
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     e00:	7e23      	ldrb	r3, [r4, #24]
     e02:	2201      	movs	r2, #1
     e04:	4313      	orrs	r3, r2
     e06:	7623      	strb	r3, [r4, #24]
	if (is_list_element(&descr->tasks, task)) {
     e08:	0026      	movs	r6, r4
     e0a:	3614      	adds	r6, #20
     e0c:	0029      	movs	r1, r5
     e0e:	0030      	movs	r0, r6
     e10:	4b1a      	ldr	r3, [pc, #104]	; (e7c <timer_add_task+0x98>)
     e12:	4798      	blx	r3
     e14:	2800      	cmp	r0, #0
     e16:	d112      	bne.n	e3e <timer_add_task+0x5a>
	task->time_label = descr->time;
     e18:	6923      	ldr	r3, [r4, #16]
     e1a:	606b      	str	r3, [r5, #4]
	timer_add_timer_task(&descr->tasks, task, descr->time);
     e1c:	6922      	ldr	r2, [r4, #16]
     e1e:	0029      	movs	r1, r5
     e20:	0030      	movs	r0, r6
     e22:	4b17      	ldr	r3, [pc, #92]	; (e80 <timer_add_task+0x9c>)
     e24:	4798      	blx	r3
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     e26:	7e23      	ldrb	r3, [r4, #24]
     e28:	2201      	movs	r2, #1
     e2a:	4393      	bics	r3, r2
     e2c:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     e2e:	7e23      	ldrb	r3, [r4, #24]
	return ERR_NONE;
     e30:	2000      	movs	r0, #0
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     e32:	079b      	lsls	r3, r3, #30
     e34:	d40f      	bmi.n	e56 <timer_add_task+0x72>
}
     e36:	b002      	add	sp, #8
     e38:	bd70      	pop	{r4, r5, r6, pc}
     e3a:	2000      	movs	r0, #0
     e3c:	e7dc      	b.n	df8 <timer_add_task+0x14>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     e3e:	7e23      	ldrb	r3, [r4, #24]
     e40:	2201      	movs	r2, #1
     e42:	4393      	bics	r3, r2
     e44:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     e46:	327e      	adds	r2, #126	; 0x7e
     e48:	490a      	ldr	r1, [pc, #40]	; (e74 <timer_add_task+0x90>)
     e4a:	2000      	movs	r0, #0
     e4c:	4b0a      	ldr	r3, [pc, #40]	; (e78 <timer_add_task+0x94>)
     e4e:	4798      	blx	r3
		return ERR_ALREADY_INITIALIZED;
     e50:	2012      	movs	r0, #18
     e52:	4240      	negs	r0, r0
     e54:	e7ef      	b.n	e36 <timer_add_task+0x52>
		CRITICAL_SECTION_ENTER()
     e56:	a801      	add	r0, sp, #4
     e58:	4b0a      	ldr	r3, [pc, #40]	; (e84 <timer_add_task+0xa0>)
     e5a:	4798      	blx	r3
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     e5c:	7e23      	ldrb	r3, [r4, #24]
     e5e:	2202      	movs	r2, #2
     e60:	4393      	bics	r3, r2
     e62:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     e64:	0020      	movs	r0, r4
     e66:	4b08      	ldr	r3, [pc, #32]	; (e88 <timer_add_task+0xa4>)
     e68:	4798      	blx	r3
		CRITICAL_SECTION_LEAVE()
     e6a:	a801      	add	r0, sp, #4
     e6c:	4b07      	ldr	r3, [pc, #28]	; (e8c <timer_add_task+0xa8>)
     e6e:	4798      	blx	r3
	return ERR_NONE;
     e70:	2000      	movs	r0, #0
     e72:	e7e0      	b.n	e36 <timer_add_task+0x52>
     e74:	00009cbc 	.word	0x00009cbc
     e78:	00000fed 	.word	0x00000fed
     e7c:	00000ff5 	.word	0x00000ff5
     e80:	00000c69 	.word	0x00000c69
     e84:	00000925 	.word	0x00000925
     e88:	00001289 	.word	0x00001289
     e8c:	00000933 	.word	0x00000933

00000e90 <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     e92:	46ce      	mov	lr, r9
     e94:	4647      	mov	r7, r8
     e96:	b580      	push	{r7, lr}
     e98:	0004      	movs	r4, r0
     e9a:	000f      	movs	r7, r1
     e9c:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     e9e:	2800      	cmp	r0, #0
     ea0:	d026      	beq.n	ef0 <usart_sync_write+0x60>
     ea2:	2900      	cmp	r1, #0
     ea4:	d026      	beq.n	ef4 <usart_sync_write+0x64>
     ea6:	0010      	movs	r0, r2
     ea8:	1e43      	subs	r3, r0, #1
     eaa:	4198      	sbcs	r0, r3
     eac:	22f1      	movs	r2, #241	; 0xf1
     eae:	4912      	ldr	r1, [pc, #72]	; (ef8 <usart_sync_write+0x68>)
     eb0:	4b12      	ldr	r3, [pc, #72]	; (efc <usart_sync_write+0x6c>)
     eb2:	4798      	blx	r3
	while (!_usart_sync_is_ready_to_send(&descr->device))
     eb4:	3408      	adds	r4, #8
     eb6:	4d12      	ldr	r5, [pc, #72]	; (f00 <usart_sync_write+0x70>)
     eb8:	0020      	movs	r0, r4
     eba:	47a8      	blx	r5
     ebc:	2800      	cmp	r0, #0
     ebe:	d0fb      	beq.n	eb8 <usart_sync_write+0x28>
     ec0:	2600      	movs	r6, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
     ec2:	4b10      	ldr	r3, [pc, #64]	; (f04 <usart_sync_write+0x74>)
     ec4:	4699      	mov	r9, r3
		while (!_usart_sync_is_ready_to_send(&descr->device))
     ec6:	4d0e      	ldr	r5, [pc, #56]	; (f00 <usart_sync_write+0x70>)
		_usart_sync_write_byte(&descr->device, buf[offset]);
     ec8:	5db9      	ldrb	r1, [r7, r6]
     eca:	0020      	movs	r0, r4
     ecc:	47c8      	blx	r9
		while (!_usart_sync_is_ready_to_send(&descr->device))
     ece:	0020      	movs	r0, r4
     ed0:	47a8      	blx	r5
     ed2:	2800      	cmp	r0, #0
     ed4:	d0fb      	beq.n	ece <usart_sync_write+0x3e>
			;
	} while (++offset < length);
     ed6:	3601      	adds	r6, #1
     ed8:	4546      	cmp	r6, r8
     eda:	d3f5      	bcc.n	ec8 <usart_sync_write+0x38>
	while (!_usart_sync_is_transmit_done(&descr->device))
     edc:	4d0a      	ldr	r5, [pc, #40]	; (f08 <usart_sync_write+0x78>)
     ede:	0020      	movs	r0, r4
     ee0:	47a8      	blx	r5
     ee2:	2800      	cmp	r0, #0
     ee4:	d0fb      	beq.n	ede <usart_sync_write+0x4e>
		;
	return (int32_t)offset;
}
     ee6:	0030      	movs	r0, r6
     ee8:	bc0c      	pop	{r2, r3}
     eea:	4690      	mov	r8, r2
     eec:	4699      	mov	r9, r3
     eee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     ef0:	2000      	movs	r0, #0
     ef2:	e7db      	b.n	eac <usart_sync_write+0x1c>
     ef4:	2000      	movs	r0, #0
     ef6:	e7d9      	b.n	eac <usart_sync_write+0x1c>
     ef8:	00009cd4 	.word	0x00009cd4
     efc:	00000fed 	.word	0x00000fed
     f00:	000014b5 	.word	0x000014b5
     f04:	000014a5 	.word	0x000014a5
     f08:	000014bf 	.word	0x000014bf

00000f0c <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     f0e:	46ce      	mov	lr, r9
     f10:	4647      	mov	r7, r8
     f12:	b580      	push	{r7, lr}
     f14:	0004      	movs	r4, r0
     f16:	000f      	movs	r7, r1
     f18:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     f1a:	2800      	cmp	r0, #0
     f1c:	d01d      	beq.n	f5a <usart_sync_read+0x4e>
     f1e:	2900      	cmp	r1, #0
     f20:	d01d      	beq.n	f5e <usart_sync_read+0x52>
     f22:	0010      	movs	r0, r2
     f24:	1e43      	subs	r3, r0, #1
     f26:	4198      	sbcs	r0, r3
     f28:	2286      	movs	r2, #134	; 0x86
     f2a:	0052      	lsls	r2, r2, #1
     f2c:	490d      	ldr	r1, [pc, #52]	; (f64 <usart_sync_read+0x58>)
     f2e:	4b0e      	ldr	r3, [pc, #56]	; (f68 <usart_sync_read+0x5c>)
     f30:	4798      	blx	r3
	uint32_t                      offset = 0;
     f32:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
     f34:	3408      	adds	r4, #8
     f36:	4d0d      	ldr	r5, [pc, #52]	; (f6c <usart_sync_read+0x60>)
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
     f38:	4b0d      	ldr	r3, [pc, #52]	; (f70 <usart_sync_read+0x64>)
     f3a:	4699      	mov	r9, r3
		while (!_usart_sync_is_byte_received(&descr->device))
     f3c:	0020      	movs	r0, r4
     f3e:	47a8      	blx	r5
     f40:	2800      	cmp	r0, #0
     f42:	d0fb      	beq.n	f3c <usart_sync_read+0x30>
		buf[offset] = _usart_sync_read_byte(&descr->device);
     f44:	0020      	movs	r0, r4
     f46:	47c8      	blx	r9
     f48:	55b8      	strb	r0, [r7, r6]
	} while (++offset < length);
     f4a:	3601      	adds	r6, #1
     f4c:	4546      	cmp	r6, r8
     f4e:	d3f5      	bcc.n	f3c <usart_sync_read+0x30>

	return (int32_t)offset;
}
     f50:	0030      	movs	r0, r6
     f52:	bc0c      	pop	{r2, r3}
     f54:	4690      	mov	r8, r2
     f56:	4699      	mov	r9, r3
     f58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     f5a:	2000      	movs	r0, #0
     f5c:	e7e4      	b.n	f28 <usart_sync_read+0x1c>
     f5e:	2000      	movs	r0, #0
     f60:	e7e2      	b.n	f28 <usart_sync_read+0x1c>
     f62:	46c0      	nop			; (mov r8, r8)
     f64:	00009cd4 	.word	0x00009cd4
     f68:	00000fed 	.word	0x00000fed
     f6c:	000014c9 	.word	0x000014c9
     f70:	000014ad 	.word	0x000014ad

00000f74 <usart_sync_init>:
{
     f74:	b570      	push	{r4, r5, r6, lr}
     f76:	0005      	movs	r5, r0
     f78:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     f7a:	2800      	cmp	r0, #0
     f7c:	d013      	beq.n	fa6 <usart_sync_init+0x32>
     f7e:	0008      	movs	r0, r1
     f80:	1e43      	subs	r3, r0, #1
     f82:	4198      	sbcs	r0, r3
     f84:	b2c0      	uxtb	r0, r0
     f86:	2234      	movs	r2, #52	; 0x34
     f88:	4908      	ldr	r1, [pc, #32]	; (fac <usart_sync_init+0x38>)
     f8a:	4b09      	ldr	r3, [pc, #36]	; (fb0 <usart_sync_init+0x3c>)
     f8c:	4798      	blx	r3
	init_status = _usart_sync_init(&descr->device, hw);
     f8e:	0028      	movs	r0, r5
     f90:	3008      	adds	r0, #8
     f92:	0021      	movs	r1, r4
     f94:	4b07      	ldr	r3, [pc, #28]	; (fb4 <usart_sync_init+0x40>)
     f96:	4798      	blx	r3
	if (init_status) {
     f98:	2800      	cmp	r0, #0
     f9a:	d103      	bne.n	fa4 <usart_sync_init+0x30>
	descr->io.read  = usart_sync_read;
     f9c:	4b06      	ldr	r3, [pc, #24]	; (fb8 <usart_sync_init+0x44>)
     f9e:	606b      	str	r3, [r5, #4]
	descr->io.write = usart_sync_write;
     fa0:	4b06      	ldr	r3, [pc, #24]	; (fbc <usart_sync_init+0x48>)
     fa2:	602b      	str	r3, [r5, #0]
}
     fa4:	bd70      	pop	{r4, r5, r6, pc}
     fa6:	2000      	movs	r0, #0
     fa8:	e7ed      	b.n	f86 <usart_sync_init+0x12>
     faa:	46c0      	nop			; (mov r8, r8)
     fac:	00009cd4 	.word	0x00009cd4
     fb0:	00000fed 	.word	0x00000fed
     fb4:	00001465 	.word	0x00001465
     fb8:	00000f0d 	.word	0x00000f0d
     fbc:	00000e91 	.word	0x00000e91

00000fc0 <usart_sync_enable>:
{
     fc0:	b510      	push	{r4, lr}
     fc2:	0004      	movs	r4, r0
	ASSERT(descr);
     fc4:	1e43      	subs	r3, r0, #1
     fc6:	4198      	sbcs	r0, r3
     fc8:	b2c0      	uxtb	r0, r0
     fca:	2253      	movs	r2, #83	; 0x53
     fcc:	4904      	ldr	r1, [pc, #16]	; (fe0 <usart_sync_enable+0x20>)
     fce:	4b05      	ldr	r3, [pc, #20]	; (fe4 <usart_sync_enable+0x24>)
     fd0:	4798      	blx	r3
	_usart_sync_enable(&descr->device);
     fd2:	0020      	movs	r0, r4
     fd4:	3008      	adds	r0, #8
     fd6:	4b04      	ldr	r3, [pc, #16]	; (fe8 <usart_sync_enable+0x28>)
     fd8:	4798      	blx	r3
}
     fda:	2000      	movs	r0, #0
     fdc:	bd10      	pop	{r4, pc}
     fde:	46c0      	nop			; (mov r8, r8)
     fe0:	00009cd4 	.word	0x00009cd4
     fe4:	00000fed 	.word	0x00000fed
     fe8:	00001491 	.word	0x00001491

00000fec <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     fec:	2800      	cmp	r0, #0
     fee:	d100      	bne.n	ff2 <assert+0x6>
		__asm("BKPT #0");
     ff0:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     ff2:	4770      	bx	lr

00000ff4 <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
     ff4:	6803      	ldr	r3, [r0, #0]
     ff6:	2b00      	cmp	r3, #0
     ff8:	d00a      	beq.n	1010 <is_list_element+0x1c>
		if (it == element) {
     ffa:	428b      	cmp	r3, r1
     ffc:	d00a      	beq.n	1014 <is_list_element+0x20>
	for (it = list->head; it; it = it->next) {
     ffe:	681b      	ldr	r3, [r3, #0]
    1000:	2b00      	cmp	r3, #0
    1002:	d003      	beq.n	100c <is_list_element+0x18>
		if (it == element) {
    1004:	4299      	cmp	r1, r3
    1006:	d1fa      	bne.n	ffe <is_list_element+0xa>
			return true;
    1008:	2001      	movs	r0, #1
    100a:	e000      	b.n	100e <is_list_element+0x1a>
		}
	}

	return false;
    100c:	2000      	movs	r0, #0
}
    100e:	4770      	bx	lr
	return false;
    1010:	2000      	movs	r0, #0
    1012:	e7fc      	b.n	100e <is_list_element+0x1a>
			return true;
    1014:	2001      	movs	r0, #1
    1016:	e7fa      	b.n	100e <is_list_element+0x1a>

00001018 <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
    1018:	b570      	push	{r4, r5, r6, lr}
    101a:	0004      	movs	r4, r0
    101c:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
    101e:	4b06      	ldr	r3, [pc, #24]	; (1038 <list_insert_as_head+0x20>)
    1020:	4798      	blx	r3
    1022:	2301      	movs	r3, #1
    1024:	4058      	eors	r0, r3
    1026:	b2c0      	uxtb	r0, r0
    1028:	2239      	movs	r2, #57	; 0x39
    102a:	4904      	ldr	r1, [pc, #16]	; (103c <list_insert_as_head+0x24>)
    102c:	4b04      	ldr	r3, [pc, #16]	; (1040 <list_insert_as_head+0x28>)
    102e:	4798      	blx	r3

	((struct list_element *)element)->next = list->head;
    1030:	6823      	ldr	r3, [r4, #0]
    1032:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
    1034:	6025      	str	r5, [r4, #0]
}
    1036:	bd70      	pop	{r4, r5, r6, pc}
    1038:	00000ff5 	.word	0x00000ff5
    103c:	00009cf0 	.word	0x00009cf0
    1040:	00000fed 	.word	0x00000fed

00001044 <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
    1044:	6803      	ldr	r3, [r0, #0]
    1046:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
    1048:	6001      	str	r1, [r0, #0]
}
    104a:	4770      	bx	lr

0000104c <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
    104c:	6803      	ldr	r3, [r0, #0]
    104e:	2b00      	cmp	r3, #0
    1050:	d001      	beq.n	1056 <list_remove_head+0xa>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
    1052:	681a      	ldr	r2, [r3, #0]
    1054:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
	}

	return NULL;
}
    1056:	0018      	movs	r0, r3
    1058:	4770      	bx	lr
	...

0000105c <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
    105c:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
    105e:	4a06      	ldr	r2, [pc, #24]	; (1078 <_sbrk+0x1c>)
    1060:	6812      	ldr	r2, [r2, #0]
    1062:	2a00      	cmp	r2, #0
    1064:	d004      	beq.n	1070 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1066:	4a04      	ldr	r2, [pc, #16]	; (1078 <_sbrk+0x1c>)
    1068:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    106a:	18c3      	adds	r3, r0, r3
    106c:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
    106e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    1070:	4902      	ldr	r1, [pc, #8]	; (107c <_sbrk+0x20>)
    1072:	4a01      	ldr	r2, [pc, #4]	; (1078 <_sbrk+0x1c>)
    1074:	6011      	str	r1, [r2, #0]
    1076:	e7f6      	b.n	1066 <_sbrk+0xa>
    1078:	20000a44 	.word	0x20000a44
    107c:	20002bb8 	.word	0x20002bb8

00001080 <_close>:
 */
extern int _close(int file)
{
	(void)file;
	return -1;
}
    1080:	2001      	movs	r0, #1
    1082:	4240      	negs	r0, r0
    1084:	4770      	bx	lr

00001086 <_fstat>:
 * \brief Replacement of C library of _fstat
 */
extern int _fstat(int file, struct stat *st)
{
	(void)file;
	st->st_mode = S_IFCHR;
    1086:	2380      	movs	r3, #128	; 0x80
    1088:	019b      	lsls	r3, r3, #6
    108a:	604b      	str	r3, [r1, #4]

	return 0;
}
    108c:	2000      	movs	r0, #0
    108e:	4770      	bx	lr

00001090 <_isatty>:
 */
extern int _isatty(int file)
{
	(void)file;
	return 1;
}
    1090:	2001      	movs	r0, #1
    1092:	4770      	bx	lr

00001094 <_lseek>:
 */
extern int _lseek(int file, int ptr, int dir)
{
	(void)file, (void)ptr, (void)dir;
	return 0;
}
    1094:	2000      	movs	r0, #0
    1096:	4770      	bx	lr

00001098 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    1098:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    109a:	4a0a      	ldr	r2, [pc, #40]	; (10c4 <_init_chip+0x2c>)
    109c:	6853      	ldr	r3, [r2, #4]
    109e:	2104      	movs	r1, #4
    10a0:	430b      	orrs	r3, r1
    10a2:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_set_performance_level(2);
    10a4:	2002      	movs	r0, #2
    10a6:	4b08      	ldr	r3, [pc, #32]	; (10c8 <_init_chip+0x30>)
    10a8:	4798      	blx	r3

	_osc32kctrl_init_sources();
    10aa:	4b08      	ldr	r3, [pc, #32]	; (10cc <_init_chip+0x34>)
    10ac:	4798      	blx	r3
	_oscctrl_init_sources();
    10ae:	4b08      	ldr	r3, [pc, #32]	; (10d0 <_init_chip+0x38>)
    10b0:	4798      	blx	r3
	_mclk_init();
    10b2:	4b08      	ldr	r3, [pc, #32]	; (10d4 <_init_chip+0x3c>)
    10b4:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_oscctrl_init_referenced_generators();
    10b6:	4b08      	ldr	r3, [pc, #32]	; (10d8 <_init_chip+0x40>)
    10b8:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    10ba:	201f      	movs	r0, #31
    10bc:	4b07      	ldr	r3, [pc, #28]	; (10dc <_init_chip+0x44>)
    10be:	4798      	blx	r3
#endif

#if (CONF_PORT_EVCTRL_PORT_0 | CONF_PORT_EVCTRL_PORT_1 | CONF_PORT_EVCTRL_PORT_2 | CONF_PORT_EVCTRL_PORT_3)
	_port_event_init();
#endif
}
    10c0:	bd10      	pop	{r4, pc}
    10c2:	46c0      	nop			; (mov r8, r8)
    10c4:	41004000 	.word	0x41004000
    10c8:	0000117d 	.word	0x0000117d
    10cc:	00001129 	.word	0x00001129
    10d0:	00001141 	.word	0x00001141
    10d4:	00001119 	.word	0x00001119
    10d8:	00001179 	.word	0x00001179
    10dc:	000010e1 	.word	0x000010e1

000010e0 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    10e0:	07c3      	lsls	r3, r0, #31
    10e2:	d507      	bpl.n	10f4 <_gclk_init_generators_by_fref+0x14>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    10e4:	4a09      	ldr	r2, [pc, #36]	; (110c <_gclk_init_generators_by_fref+0x2c>)
    10e6:	4b0a      	ldr	r3, [pc, #40]	; (1110 <_gclk_init_generators_by_fref+0x30>)
    10e8:	621a      	str	r2, [r3, #32]
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    10ea:	0019      	movs	r1, r3
    10ec:	227d      	movs	r2, #125	; 0x7d
    10ee:	684b      	ldr	r3, [r1, #4]
    10f0:	421a      	tst	r2, r3
    10f2:	d1fc      	bne.n	10ee <_gclk_init_generators_by_fref+0xe>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SOURCE);
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
    10f4:	0783      	lsls	r3, r0, #30
    10f6:	d507      	bpl.n	1108 <_gclk_init_generators_by_fref+0x28>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    10f8:	4a06      	ldr	r2, [pc, #24]	; (1114 <_gclk_init_generators_by_fref+0x34>)
    10fa:	4b05      	ldr	r3, [pc, #20]	; (1110 <_gclk_init_generators_by_fref+0x30>)
    10fc:	625a      	str	r2, [r3, #36]	; 0x24
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    10fe:	0019      	movs	r1, r3
    1100:	227d      	movs	r2, #125	; 0x7d
    1102:	684b      	ldr	r3, [r1, #4]
    1104:	421a      	tst	r2, r3
    1106:	d1fc      	bne.n	1102 <_gclk_init_generators_by_fref+0x22>
		        | (CONF_GCLK_GEN_4_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_4_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_4_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_4_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_4_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_4_SOURCE);
	}
#endif
}
    1108:	4770      	bx	lr
    110a:	46c0      	nop			; (mov r8, r8)
    110c:	00010105 	.word	0x00010105
    1110:	40001c00 	.word	0x40001c00
    1114:	00040105 	.word	0x00040105

00001118 <_mclk_init>:
	((Mclk *)hw)->BUPDIV.reg = data;
    1118:	4b02      	ldr	r3, [pc, #8]	; (1124 <_mclk_init+0xc>)
    111a:	2208      	movs	r2, #8
    111c:	719a      	strb	r2, [r3, #6]
	((Mclk *)hw)->CPUDIV.reg = data;
    111e:	3a07      	subs	r2, #7
    1120:	711a      	strb	r2, [r3, #4]
void _mclk_init(void)
{
	void *hw = (void *)MCLK;
	hri_mclk_write_BUPDIV_reg(hw, MCLK_BUPDIV_BUPDIV(CONF_MCLK_BUPDIV));
	hri_mclk_write_CPUDIV_reg(hw, MCLK_CPUDIV_CPUDIV(CONF_MCLK_CPUDIV));
}
    1122:	4770      	bx	lr
    1124:	40000800 	.word	0x40000800

00001128 <_osc32kctrl_init_sources>:
}

static inline hri_osc32kctrl_osculp32k_reg_t hri_osc32kctrl_read_OSCULP32K_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Osc32kctrl *)hw)->OSCULP32K.reg;
    1128:	4b04      	ldr	r3, [pc, #16]	; (113c <_osc32kctrl_init_sources+0x14>)
    112a:	69da      	ldr	r2, [r3, #28]
	calib = hri_osc32kctrl_read_OSCULP32K_CALIB_bf(hw);
	hri_osc32kctrl_write_OSCULP32K_reg(hw,
#if CONF_OSC32K_CALIB_ENABLE == 1
	                                   OSC32KCTRL_OSCULP32K_CALIB(CONF_OSC32K_CALIB)
#else
	                                   OSC32KCTRL_OSCULP32K_CALIB(calib)
    112c:	21f8      	movs	r1, #248	; 0xf8
    112e:	0149      	lsls	r1, r1, #5
    1130:	400a      	ands	r2, r1
}

static inline void hri_osc32kctrl_write_OSCULP32K_reg(const void *const hw, hri_osc32kctrl_osculp32k_reg_t data)
{
	OSC32KCTRL_CRITICAL_SECTION_ENTER();
	((Osc32kctrl *)hw)->OSCULP32K.reg = data;
    1132:	61da      	str	r2, [r3, #28]
	((Osc32kctrl *)hw)->RTCCTRL.reg = data;
    1134:	2201      	movs	r2, #1
    1136:	741a      	strb	r2, [r3, #16]
#endif
#endif

	hri_osc32kctrl_write_RTCCTRL_reg(hw, OSC32KCTRL_RTCCTRL_RTCSEL(CONF_RTCCTRL));
	(void)calib;
}
    1138:	4770      	bx	lr
    113a:	46c0      	nop			; (mov r8, r8)
    113c:	40001400 	.word	0x40001400

00001140 <_oscctrl_init_sources>:
}

static inline void hri_oscctrl_write_OSC16MCTRL_reg(const void *const hw, hri_oscctrl_osc16mctrl_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC16MCTRL.reg = data;
    1140:	228e      	movs	r2, #142	; 0x8e
    1142:	4b0c      	ldr	r3, [pc, #48]	; (1174 <_oscctrl_init_sources+0x34>)
    1144:	751a      	strb	r2, [r3, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
    1146:	0018      	movs	r0, r3
    1148:	2138      	movs	r1, #56	; 0x38
    114a:	3a8c      	subs	r2, #140	; 0x8c
    114c:	5c43      	ldrb	r3, [r0, r1]
    114e:	4213      	tst	r3, r2
    1150:	d1fc      	bne.n	114c <_oscctrl_init_sources+0xc>
	return (((Oscctrl *)hw)->STATUS.reg & OSCCTRL_STATUS_OSC16MRDY) >> OSCCTRL_STATUS_OSC16MRDY_Pos;
    1152:	4908      	ldr	r1, [pc, #32]	; (1174 <_oscctrl_init_sources+0x34>)
#endif
#endif

#if CONF_OSC16M_CONFIG == 1
#if CONF_OSC16M_ENABLE == 1
	while (!hri_oscctrl_get_STATUS_OSC16MRDY_bit(hw))
    1154:	2210      	movs	r2, #16
    1156:	68cb      	ldr	r3, [r1, #12]
    1158:	421a      	tst	r2, r3
    115a:	d0fc      	beq.n	1156 <_oscctrl_init_sources+0x16>
	((Oscctrl *)hw)->OSC16MCTRL.reg |= OSCCTRL_OSC16MCTRL_ONDEMAND;
    115c:	4a05      	ldr	r2, [pc, #20]	; (1174 <_oscctrl_init_sources+0x34>)
    115e:	7d13      	ldrb	r3, [r2, #20]
    1160:	2180      	movs	r1, #128	; 0x80
    1162:	430b      	orrs	r3, r1
    1164:	7513      	strb	r3, [r2, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
    1166:	0010      	movs	r0, r2
    1168:	3948      	subs	r1, #72	; 0x48
    116a:	220e      	movs	r2, #14
    116c:	5c43      	ldrb	r3, [r0, r1]
    116e:	4213      	tst	r3, r2
    1170:	d1fc      	bne.n	116c <_oscctrl_init_sources+0x2c>
#if CONF_OSC16M_ONDEMAND == 1
	hri_oscctrl_set_OSC16MCTRL_ONDEMAND_bit(hw);
#endif
#endif
	(void)hw;
}
    1172:	4770      	bx	lr
    1174:	40001000 	.word	0x40001000

00001178 <_oscctrl_init_referenced_generators>:
#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_read_SYNCBUSY_reg(GCLK))
		;
#endif
	(void)hw, (void)tmp;
}
    1178:	4770      	bx	lr
	...

0000117c <_set_performance_level>:
}

static inline hri_pm_plcfg_reg_t hri_pm_get_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t mask)
{
	uint8_t tmp;
	tmp = ((Pm *)hw)->PLCFG.reg;
    117c:	4b09      	ldr	r3, [pc, #36]	; (11a4 <_set_performance_level+0x28>)
    117e:	789b      	ldrb	r3, [r3, #2]
/**
 * \brief Set performance level
 */
void _set_performance_level(const uint8_t level)
{
	if (hri_pm_get_PLCFG_PLSEL_bf(PM, PM_PLCFG_PLSEL_Msk) != level) {
    1180:	2203      	movs	r2, #3
    1182:	4013      	ands	r3, r2
    1184:	4298      	cmp	r0, r3
    1186:	d00b      	beq.n	11a0 <_set_performance_level+0x24>
	((Pm *)hw)->INTFLAG.reg = mask;
    1188:	4a06      	ldr	r2, [pc, #24]	; (11a4 <_set_performance_level+0x28>)
    118a:	23ff      	movs	r3, #255	; 0xff
    118c:	7193      	strb	r3, [r2, #6]

static inline void hri_pm_write_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t data)
{
	uint8_t tmp;
	PM_CRITICAL_SECTION_ENTER();
	tmp = ((Pm *)hw)->PLCFG.reg;
    118e:	7893      	ldrb	r3, [r2, #2]
	tmp &= ~PM_PLCFG_PLSEL_Msk;
    1190:	2103      	movs	r1, #3
    1192:	438b      	bics	r3, r1
	tmp |= PM_PLCFG_PLSEL(data);
    1194:	4008      	ands	r0, r1
    1196:	4318      	orrs	r0, r3
	((Pm *)hw)->PLCFG.reg = tmp;
    1198:	7090      	strb	r0, [r2, #2]
	return ((Pm *)hw)->INTFLAG.reg;
    119a:	7993      	ldrb	r3, [r2, #6]
		hri_pm_clear_INTFLAG_reg(PM, 0xFF);
		hri_pm_write_PLCFG_PLSEL_bf(PM, level);
		while (!hri_pm_read_INTFLAG_reg(PM))
    119c:	2b00      	cmp	r3, #0
    119e:	d0fc      	beq.n	119a <_set_performance_level+0x1e>
			;
	}
}
    11a0:	4770      	bx	lr
    11a2:	46c0      	nop			; (mov r8, r8)
    11a4:	40000400 	.word	0x40000400

000011a8 <_timer_init>:

/**
 * \brief Initialize Timer
 */
int32_t _timer_init(struct _timer_device *const dev, void *const hw)
{
    11a8:	b570      	push	{r4, r5, r6, lr}
    11aa:	0005      	movs	r5, r0
    11ac:	000c      	movs	r4, r1
	ASSERT(dev);
    11ae:	1e43      	subs	r3, r0, #1
    11b0:	4198      	sbcs	r0, r3
    11b2:	b2c0      	uxtb	r0, r0
    11b4:	2230      	movs	r2, #48	; 0x30
    11b6:	4912      	ldr	r1, [pc, #72]	; (1200 <_timer_init+0x58>)
    11b8:	4b12      	ldr	r3, [pc, #72]	; (1204 <_timer_init+0x5c>)
    11ba:	4798      	blx	r3

	dev->hw = hw;
    11bc:	60ec      	str	r4, [r5, #12]
}

static inline void hri_rtcmode0_write_CTRLA_reg(const void *const hw, hri_rtcmode0_ctrla_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.CTRLA.reg = data;
    11be:	2301      	movs	r3, #1
    11c0:	8023      	strh	r3, [r4, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    11c2:	4a11      	ldr	r2, [pc, #68]	; (1208 <_timer_init+0x60>)
    11c4:	6923      	ldr	r3, [r4, #16]
    11c6:	4213      	tst	r3, r2
    11c8:	d1fc      	bne.n	11c4 <_timer_init+0x1c>

	hri_rtcmode0_write_CTRLA_reg(dev->hw, RTC_MODE0_CTRLA_SWRST);
	hri_rtcmode0_wait_for_sync(dev->hw, RTC_MODE0_SYNCBUSY_SWRST);
    11ca:	68eb      	ldr	r3, [r5, #12]
    11cc:	2101      	movs	r1, #1
    11ce:	691a      	ldr	r2, [r3, #16]
    11d0:	4211      	tst	r1, r2
    11d2:	d1fc      	bne.n	11ce <_timer_init+0x26>
	((Rtc *)hw)->MODE0.CTRLA.reg = data;
    11d4:	4a0d      	ldr	r2, [pc, #52]	; (120c <_timer_init+0x64>)
    11d6:	801a      	strh	r2, [r3, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    11d8:	490b      	ldr	r1, [pc, #44]	; (1208 <_timer_init+0x60>)
    11da:	691a      	ldr	r2, [r3, #16]
    11dc:	420a      	tst	r2, r1
    11de:	d1fc      	bne.n	11da <_timer_init+0x32>
	        | (CONF_RTC_COMPE0 << RTC_MODE0_EVCTRL_CMPEO_Pos) | (CONF_RTC_OVFEO << RTC_MODE0_EVCTRL_OVFEO_Pos));
#endif

	hri_rtcmode0_write_CTRLA_reg(
	    dev->hw, RTC_MODE0_CTRLA_PRESCALER(CONF_RTC_PRESCALER) | RTC_MODE0_CTRLA_COUNTSYNC | RTC_MODE0_CTRLA_MATCHCLR);
	hri_rtcmode0_write_COMP_reg(dev->hw, 0, CONF_RTC_COMP_VAL);
    11e0:	68ea      	ldr	r2, [r5, #12]
}

static inline void hri_rtcmode0_write_COMP_reg(const void *const hw, uint8_t index, hri_rtcmode0_comp_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.COMP[index].reg = data;
    11e2:	2320      	movs	r3, #32
    11e4:	6213      	str	r3, [r2, #32]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    11e6:	2120      	movs	r1, #32
    11e8:	6913      	ldr	r3, [r2, #16]
    11ea:	4219      	tst	r1, r3
    11ec:	d1fc      	bne.n	11e8 <_timer_init+0x40>
	((Rtc *)hw)->MODE0.INTENSET.reg = RTC_MODE0_INTENSET_CMP0;
    11ee:	2380      	movs	r3, #128	; 0x80
    11f0:	005b      	lsls	r3, r3, #1
    11f2:	68ea      	ldr	r2, [r5, #12]
    11f4:	8153      	strh	r3, [r2, #10]
	hri_rtcmode0_set_INTEN_CMP0_bit(dev->hw);

	_rtc_dev = dev;
    11f6:	4b06      	ldr	r3, [pc, #24]	; (1210 <_timer_init+0x68>)
    11f8:	601d      	str	r5, [r3, #0]

	return ERR_NONE;
}
    11fa:	2000      	movs	r0, #0
    11fc:	bd70      	pop	{r4, r5, r6, pc}
    11fe:	46c0      	nop			; (mov r8, r8)
    1200:	00009d10 	.word	0x00009d10
    1204:	00000fed 	.word	0x00000fed
    1208:	00008003 	.word	0x00008003
    120c:	ffff8080 	.word	0xffff8080
    1210:	20000a48 	.word	0x20000a48

00001214 <_timer_start>:

/**
 * \brief Start hardware timer
 */
void _timer_start(struct _timer_device *const dev)
{
    1214:	b510      	push	{r4, lr}
    1216:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->hw);
    1218:	d01f      	beq.n	125a <_timer_start+0x46>
    121a:	68c0      	ldr	r0, [r0, #12]
    121c:	1e43      	subs	r3, r0, #1
    121e:	4198      	sbcs	r0, r3
    1220:	b2c0      	uxtb	r0, r0
    1222:	225c      	movs	r2, #92	; 0x5c
    1224:	490e      	ldr	r1, [pc, #56]	; (1260 <_timer_start+0x4c>)
    1226:	4b0f      	ldr	r3, [pc, #60]	; (1264 <_timer_start+0x50>)
    1228:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    122a:	2204      	movs	r2, #4
    122c:	4b0e      	ldr	r3, [pc, #56]	; (1268 <_timer_start+0x54>)
    122e:	601a      	str	r2, [r3, #0]

	NVIC_EnableIRQ(RTC_IRQn);
	hri_rtcmode0_write_COUNT_reg(dev->hw, 0);
    1230:	68e2      	ldr	r2, [r4, #12]
	((Rtc *)hw)->MODE0.COUNT.reg = data;
    1232:	2300      	movs	r3, #0
    1234:	6193      	str	r3, [r2, #24]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    1236:	2108      	movs	r1, #8
    1238:	6913      	ldr	r3, [r2, #16]
    123a:	4219      	tst	r1, r3
    123c:	d1fc      	bne.n	1238 <_timer_start+0x24>
	hri_rtcmode0_wait_for_sync(dev->hw, RTC_MODE0_SYNCBUSY_COUNT);
    123e:	68e3      	ldr	r3, [r4, #12]
    1240:	2108      	movs	r1, #8
    1242:	691a      	ldr	r2, [r3, #16]
    1244:	4211      	tst	r1, r2
    1246:	d1fc      	bne.n	1242 <_timer_start+0x2e>
	((Rtc *)hw)->MODE0.CTRLA.reg |= RTC_MODE0_CTRLA_ENABLE;
    1248:	881a      	ldrh	r2, [r3, #0]
    124a:	2102      	movs	r1, #2
    124c:	430a      	orrs	r2, r1
    124e:	801a      	strh	r2, [r3, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    1250:	4906      	ldr	r1, [pc, #24]	; (126c <_timer_start+0x58>)
    1252:	691a      	ldr	r2, [r3, #16]
    1254:	420a      	tst	r2, r1
    1256:	d1fc      	bne.n	1252 <_timer_start+0x3e>
	hri_rtcmode0_set_CTRLA_ENABLE_bit(dev->hw);
}
    1258:	bd10      	pop	{r4, pc}
    125a:	2000      	movs	r0, #0
    125c:	e7e1      	b.n	1222 <_timer_start+0xe>
    125e:	46c0      	nop			; (mov r8, r8)
    1260:	00009d10 	.word	0x00009d10
    1264:	00000fed 	.word	0x00000fed
    1268:	e000e100 	.word	0xe000e100
    126c:	00008003 	.word	0x00008003

00001270 <_timer_is_started>:
/**
 * \brief Check if timer is running
 */
bool _timer_is_started(const struct _timer_device *const dev)
{
	return hri_rtcmode0_get_CTRLA_ENABLE_bit(dev->hw);
    1270:	68c2      	ldr	r2, [r0, #12]
    1272:	4904      	ldr	r1, [pc, #16]	; (1284 <_timer_is_started+0x14>)
    1274:	6913      	ldr	r3, [r2, #16]
    1276:	420b      	tst	r3, r1
    1278:	d1fc      	bne.n	1274 <_timer_is_started+0x4>
	tmp = ((Rtc *)hw)->MODE0.CTRLA.reg;
    127a:	8810      	ldrh	r0, [r2, #0]
	return (bool)tmp;
    127c:	0780      	lsls	r0, r0, #30
    127e:	0fc0      	lsrs	r0, r0, #31
}
    1280:	4770      	bx	lr
    1282:	46c0      	nop			; (mov r8, r8)
    1284:	00008003 	.word	0x00008003

00001288 <_timer_set_irq>:
 * \brief Set timer IRQ
 */
void _timer_set_irq(struct _timer_device *const dev)
{
	(void)dev;
}
    1288:	4770      	bx	lr

0000128a <_rtc_get_timer>:
 * \brief Retrieve timer helper functions
 */
struct _timer_hpl_interface *_rtc_get_timer(void)
{
	return NULL;
}
    128a:	2000      	movs	r0, #0
    128c:	4770      	bx	lr
	...

00001290 <RTC_Handler>:

/**
 * \brief Rtc interrupt handler
 */
void RTC_Handler(void)
{
    1290:	b510      	push	{r4, lr}
	_rtc_timer_interrupt_handler(_rtc_dev);
    1292:	4b08      	ldr	r3, [pc, #32]	; (12b4 <RTC_Handler+0x24>)
    1294:	681c      	ldr	r4, [r3, #0]
	return ((Rtc *)hw)->MODE0.INTFLAG.reg;
    1296:	68e3      	ldr	r3, [r4, #12]
    1298:	899b      	ldrh	r3, [r3, #12]
	if (flag & RTC_MODE0_INTFLAG_CMP0) {
    129a:	05db      	lsls	r3, r3, #23
    129c:	d508      	bpl.n	12b0 <RTC_Handler+0x20>
		if (dev->timer_cb.period_expired) {
    129e:	6823      	ldr	r3, [r4, #0]
    12a0:	2b00      	cmp	r3, #0
    12a2:	d001      	beq.n	12a8 <RTC_Handler+0x18>
			dev->timer_cb.period_expired(dev);
    12a4:	0020      	movs	r0, r4
    12a6:	4798      	blx	r3
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
    12a8:	68e3      	ldr	r3, [r4, #12]
	((Rtc *)hw)->MODE0.INTFLAG.reg = RTC_MODE0_INTFLAG_CMP0;
    12aa:	2280      	movs	r2, #128	; 0x80
    12ac:	0052      	lsls	r2, r2, #1
    12ae:	819a      	strh	r2, [r3, #12]
}
    12b0:	bd10      	pop	{r4, pc}
    12b2:	46c0      	nop			; (mov r8, r8)
    12b4:	20000a48 	.word	0x20000a48

000012b8 <_get_i2cm_index>:
 * \param[in] hw The pointer to hardware instance

 * \return The ordinal number of the given sercom hardware instance
 */
static int8_t _get_i2cm_index(const void *const hw)
{
    12b8:	b510      	push	{r4, lr}
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    12ba:	4b09      	ldr	r3, [pc, #36]	; (12e0 <_get_i2cm_index+0x28>)
    12bc:	469c      	mov	ip, r3
    12be:	4460      	add	r0, ip
    12c0:	0a80      	lsrs	r0, r0, #10
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
	uint8_t i;

	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
		if (_i2cms[i].number == sercom_offset) {
    12c2:	b2c0      	uxtb	r0, r0
    12c4:	2801      	cmp	r0, #1
    12c6:	d008      	beq.n	12da <_get_i2cm_index+0x22>
			return i;
		}
	}

	ASSERT(false);
    12c8:	22e6      	movs	r2, #230	; 0xe6
    12ca:	0092      	lsls	r2, r2, #2
    12cc:	4905      	ldr	r1, [pc, #20]	; (12e4 <_get_i2cm_index+0x2c>)
    12ce:	2000      	movs	r0, #0
    12d0:	4b05      	ldr	r3, [pc, #20]	; (12e8 <_get_i2cm_index+0x30>)
    12d2:	4798      	blx	r3
	return -1;
    12d4:	2001      	movs	r0, #1
    12d6:	4240      	negs	r0, r0
}
    12d8:	bd10      	pop	{r4, pc}
			return i;
    12da:	2000      	movs	r0, #0
    12dc:	e7fc      	b.n	12d8 <_get_i2cm_index+0x20>
    12de:	46c0      	nop			; (mov r8, r8)
    12e0:	bdfffc00 	.word	0xbdfffc00
    12e4:	00009d40 	.word	0x00009d40
    12e8:	00000fed 	.word	0x00000fed

000012ec <_i2c_m_sync_init_impl>:
	}
	return ERR_NONE;
}

static int32_t _i2c_m_sync_init_impl(struct _i2c_m_service *const service, void *const hw)
{
    12ec:	b570      	push	{r4, r5, r6, lr}
    12ee:	0005      	movs	r5, r0
    12f0:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
    12f2:	0008      	movs	r0, r1
    12f4:	4b31      	ldr	r3, [pc, #196]	; (13bc <_i2c_m_sync_init_impl+0xd0>)
    12f6:	4798      	blx	r3
    12f8:	b2c0      	uxtb	r0, r0
	};
}

static inline bool hri_sercomi2cm_is_syncing(const void *const hw, hri_sercomi2cm_syncbusy_reg_t reg)
{
	return ((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg;
    12fa:	69e3      	ldr	r3, [r4, #28]

	if (!hri_sercomi2cm_is_syncing(hw, SERCOM_I2CM_SYNCBUSY_SWRST)) {
    12fc:	07db      	lsls	r3, r3, #31
    12fe:	d421      	bmi.n	1344 <_i2c_m_sync_init_impl+0x58>
		uint32_t mode = _i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_MODE_Msk;
    1300:	0043      	lsls	r3, r0, #1
    1302:	181b      	adds	r3, r3, r0
    1304:	00db      	lsls	r3, r3, #3
    1306:	4a2e      	ldr	r2, [pc, #184]	; (13c0 <_i2c_m_sync_init_impl+0xd4>)
    1308:	18d3      	adds	r3, r2, r3
    130a:	6859      	ldr	r1, [r3, #4]
    130c:	231c      	movs	r3, #28
    130e:	4019      	ands	r1, r3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1310:	2203      	movs	r2, #3
    1312:	69e3      	ldr	r3, [r4, #28]
    1314:	421a      	tst	r2, r3
    1316:	d1fc      	bne.n	1312 <_i2c_m_sync_init_impl+0x26>
static inline hri_sercomi2cm_ctrla_reg_t hri_sercomi2cm_get_CTRLA_reg(const void *const          hw,
                                                                      hri_sercomi2cm_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SWRST | SERCOM_I2CM_SYNCBUSY_ENABLE);
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1318:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
    131a:	079b      	lsls	r3, r3, #30
    131c:	d50b      	bpl.n	1336 <_i2c_m_sync_init_impl+0x4a>
	((Sercom *)hw)->I2CM.CTRLA.reg &= ~SERCOM_I2CM_CTRLA_ENABLE;
    131e:	6823      	ldr	r3, [r4, #0]
    1320:	2202      	movs	r2, #2
    1322:	4393      	bics	r3, r2
    1324:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1326:	3201      	adds	r2, #1
    1328:	69e3      	ldr	r3, [r4, #28]
    132a:	421a      	tst	r2, r3
    132c:	d1fc      	bne.n	1328 <_i2c_m_sync_init_impl+0x3c>
    132e:	2202      	movs	r2, #2
    1330:	69e3      	ldr	r3, [r4, #28]
    1332:	421a      	tst	r2, r3
    1334:	d1fc      	bne.n	1330 <_i2c_m_sync_init_impl+0x44>
			hri_sercomi2cm_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_ENABLE);
		}
		hri_sercomi2cm_write_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_SWRST | mode);
    1336:	2301      	movs	r3, #1
    1338:	430b      	orrs	r3, r1
}

static inline void hri_sercomi2cm_write_CTRLA_reg(const void *const hw, hri_sercomi2cm_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    133a:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    133c:	2203      	movs	r2, #3
    133e:	69e3      	ldr	r3, [r4, #28]
    1340:	421a      	tst	r2, r3
    1342:	d1fc      	bne.n	133e <_i2c_m_sync_init_impl+0x52>
    1344:	2201      	movs	r2, #1
    1346:	69e3      	ldr	r3, [r4, #28]
    1348:	421a      	tst	r2, r3
    134a:	d1fc      	bne.n	1346 <_i2c_m_sync_init_impl+0x5a>
	}
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SWRST);

	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a);
    134c:	0043      	lsls	r3, r0, #1
    134e:	181b      	adds	r3, r3, r0
    1350:	00db      	lsls	r3, r3, #3
    1352:	4a1b      	ldr	r2, [pc, #108]	; (13c0 <_i2c_m_sync_init_impl+0xd4>)
    1354:	18d3      	adds	r3, r2, r3
    1356:	6859      	ldr	r1, [r3, #4]
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    1358:	6021      	str	r1, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    135a:	2203      	movs	r2, #3
    135c:	69e3      	ldr	r3, [r4, #28]
    135e:	421a      	tst	r2, r3
    1360:	d1fc      	bne.n	135c <_i2c_m_sync_init_impl+0x70>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
    1362:	0043      	lsls	r3, r0, #1
    1364:	181b      	adds	r3, r3, r0
    1366:	00db      	lsls	r3, r3, #3
    1368:	4a15      	ldr	r2, [pc, #84]	; (13c0 <_i2c_m_sync_init_impl+0xd4>)
    136a:	18d3      	adds	r3, r2, r3
    136c:	689b      	ldr	r3, [r3, #8]
}

static inline void hri_sercomi2cm_write_CTRLB_reg(const void *const hw, hri_sercomi2cm_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
    136e:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1370:	2204      	movs	r2, #4
    1372:	69e3      	ldr	r3, [r4, #28]
    1374:	421a      	tst	r2, r3
    1376:	d1fc      	bne.n	1372 <_i2c_m_sync_init_impl+0x86>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
    1378:	0043      	lsls	r3, r0, #1
    137a:	181b      	adds	r3, r3, r0
    137c:	00db      	lsls	r3, r3, #3
    137e:	4a10      	ldr	r2, [pc, #64]	; (13c0 <_i2c_m_sync_init_impl+0xd4>)
    1380:	18d3      	adds	r3, r2, r3
    1382:	68db      	ldr	r3, [r3, #12]
}

static inline void hri_sercomi2cm_write_BAUD_reg(const void *const hw, hri_sercomi2cm_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.BAUD.reg = data;
    1384:	60e3      	str	r3, [r4, #12]

	service->mode = (_i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_SPEED_Msk) >> SERCOM_I2CM_CTRLA_SPEED_Pos;
    1386:	0189      	lsls	r1, r1, #6
    1388:	0f89      	lsrs	r1, r1, #30
    138a:	81a9      	strh	r1, [r5, #12]

static inline void hri_sercomi2cm_write_ADDR_HS_bit(const void *const hw, bool value)
{
	uint32_t tmp;
	SERCOM_CRITICAL_SECTION_ENTER();
	tmp = ((Sercom *)hw)->I2CM.ADDR.reg;
    138c:	6a63      	ldr	r3, [r4, #36]	; 0x24
	tmp &= ~SERCOM_I2CM_ADDR_HS;
    138e:	4e0d      	ldr	r6, [pc, #52]	; (13c4 <_i2c_m_sync_init_impl+0xd8>)
    1390:	401e      	ands	r6, r3
	hri_sercomi2cm_write_ADDR_HS_bit(hw, service->mode < I2C_HS ? 0 : 1);
    1392:	2301      	movs	r3, #1
    1394:	428b      	cmp	r3, r1
    1396:	419b      	sbcs	r3, r3
    1398:	425b      	negs	r3, r3
	tmp |= value << SERCOM_I2CM_ADDR_HS_Pos;
    139a:	039b      	lsls	r3, r3, #14
    139c:	4333      	orrs	r3, r6
	((Sercom *)hw)->I2CM.ADDR.reg = tmp;
    139e:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    13a0:	2204      	movs	r2, #4
    13a2:	69e3      	ldr	r3, [r4, #28]
    13a4:	421a      	tst	r2, r3
    13a6:	d1fc      	bne.n	13a2 <_i2c_m_sync_init_impl+0xb6>

	service->trise = _i2cms[i].trise;
    13a8:	0043      	lsls	r3, r0, #1
    13aa:	1818      	adds	r0, r3, r0
    13ac:	00c0      	lsls	r0, r0, #3
    13ae:	4b04      	ldr	r3, [pc, #16]	; (13c0 <_i2c_m_sync_init_impl+0xd4>)
    13b0:	1818      	adds	r0, r3, r0
    13b2:	8a43      	ldrh	r3, [r0, #18]
    13b4:	81eb      	strh	r3, [r5, #14]

	return ERR_NONE;
}
    13b6:	2000      	movs	r0, #0
    13b8:	bd70      	pop	{r4, r5, r6, pc}
    13ba:	46c0      	nop			; (mov r8, r8)
    13bc:	000012b9 	.word	0x000012b9
    13c0:	00009d28 	.word	0x00009d28
    13c4:	ffffbfff 	.word	0xffffbfff

000013c8 <_usart_init>:
{
    13c8:	b510      	push	{r4, lr}
    13ca:	0004      	movs	r4, r0
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    13cc:	4b1f      	ldr	r3, [pc, #124]	; (144c <_usart_init+0x84>)
    13ce:	18c3      	adds	r3, r0, r3
    13d0:	0a9b      	lsrs	r3, r3, #10
		if (_usarts[i].number == sercom_offset) {
    13d2:	b2db      	uxtb	r3, r3
    13d4:	2b00      	cmp	r3, #0
    13d6:	d004      	beq.n	13e2 <_usart_init+0x1a>
	ASSERT(false);
    13d8:	4a1d      	ldr	r2, [pc, #116]	; (1450 <_usart_init+0x88>)
    13da:	491e      	ldr	r1, [pc, #120]	; (1454 <_usart_init+0x8c>)
    13dc:	2000      	movs	r0, #0
    13de:	4b1e      	ldr	r3, [pc, #120]	; (1458 <_usart_init+0x90>)
    13e0:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
    13e2:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
    13e4:	07db      	lsls	r3, r3, #31
    13e6:	d418      	bmi.n	141a <_usart_init+0x52>
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    13e8:	2203      	movs	r2, #3
    13ea:	69e3      	ldr	r3, [r4, #28]
    13ec:	421a      	tst	r2, r3
    13ee:	d1fc      	bne.n	13ea <_usart_init+0x22>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    13f0:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    13f2:	079b      	lsls	r3, r3, #30
    13f4:	d50b      	bpl.n	140e <_usart_init+0x46>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    13f6:	6823      	ldr	r3, [r4, #0]
    13f8:	2202      	movs	r2, #2
    13fa:	4393      	bics	r3, r2
    13fc:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    13fe:	3201      	adds	r2, #1
    1400:	69e3      	ldr	r3, [r4, #28]
    1402:	421a      	tst	r2, r3
    1404:	d1fc      	bne.n	1400 <_usart_init+0x38>
    1406:	2202      	movs	r2, #2
    1408:	69e3      	ldr	r3, [r4, #28]
    140a:	421a      	tst	r2, r3
    140c:	d1fc      	bne.n	1408 <_usart_init+0x40>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    140e:	2305      	movs	r3, #5
    1410:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1412:	2203      	movs	r2, #3
    1414:	69e3      	ldr	r3, [r4, #28]
    1416:	421a      	tst	r2, r3
    1418:	d1fc      	bne.n	1414 <_usart_init+0x4c>
    141a:	2201      	movs	r2, #1
    141c:	69e3      	ldr	r3, [r4, #28]
    141e:	421a      	tst	r2, r3
    1420:	d1fc      	bne.n	141c <_usart_init+0x54>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    1422:	4b0e      	ldr	r3, [pc, #56]	; (145c <_usart_init+0x94>)
    1424:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1426:	2203      	movs	r2, #3
    1428:	69e3      	ldr	r3, [r4, #28]
    142a:	421a      	tst	r2, r3
    142c:	d1fc      	bne.n	1428 <_usart_init+0x60>
	((Sercom *)hw)->USART.CTRLB.reg = data;
    142e:	23c0      	movs	r3, #192	; 0xc0
    1430:	029b      	lsls	r3, r3, #10
    1432:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1434:	2207      	movs	r2, #7
    1436:	69e3      	ldr	r3, [r4, #28]
    1438:	421a      	tst	r2, r3
    143a:	d1fc      	bne.n	1436 <_usart_init+0x6e>
	((Sercom *)hw)->USART.BAUD.reg = data;
    143c:	4b08      	ldr	r3, [pc, #32]	; (1460 <_usart_init+0x98>)
    143e:	81a3      	strh	r3, [r4, #12]
	((Sercom *)hw)->USART.RXPL.reg = data;
    1440:	2300      	movs	r3, #0
    1442:	73a3      	strb	r3, [r4, #14]
}

static inline void hri_sercomusart_write_DBGCTRL_reg(const void *const hw, hri_sercomusart_dbgctrl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    1444:	2230      	movs	r2, #48	; 0x30
    1446:	54a3      	strb	r3, [r4, r2]
}
    1448:	2000      	movs	r0, #0
    144a:	bd10      	pop	{r4, pc}
    144c:	bdfffc00 	.word	0xbdfffc00
    1450:	0000023a 	.word	0x0000023a
    1454:	00009d40 	.word	0x00009d40
    1458:	00000fed 	.word	0x00000fed
    145c:	40310004 	.word	0x40310004
    1460:	ffffe282 	.word	0xffffe282

00001464 <_usart_sync_init>:
{
    1464:	b570      	push	{r4, r5, r6, lr}
    1466:	0005      	movs	r5, r0
    1468:	000c      	movs	r4, r1
	ASSERT(device);
    146a:	1e43      	subs	r3, r0, #1
    146c:	4198      	sbcs	r0, r3
    146e:	b2c0      	uxtb	r0, r0
    1470:	22b4      	movs	r2, #180	; 0xb4
    1472:	4904      	ldr	r1, [pc, #16]	; (1484 <_usart_sync_init+0x20>)
    1474:	4b04      	ldr	r3, [pc, #16]	; (1488 <_usart_sync_init+0x24>)
    1476:	4798      	blx	r3
	device->hw = hw;
    1478:	602c      	str	r4, [r5, #0]
	return _usart_init(hw);
    147a:	0020      	movs	r0, r4
    147c:	4b03      	ldr	r3, [pc, #12]	; (148c <_usart_sync_init+0x28>)
    147e:	4798      	blx	r3
}
    1480:	bd70      	pop	{r4, r5, r6, pc}
    1482:	46c0      	nop			; (mov r8, r8)
    1484:	00009d40 	.word	0x00009d40
    1488:	00000fed 	.word	0x00000fed
    148c:	000013c9 	.word	0x000013c9

00001490 <_usart_sync_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    1490:	6802      	ldr	r2, [r0, #0]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1492:	6813      	ldr	r3, [r2, #0]
    1494:	2102      	movs	r1, #2
    1496:	430b      	orrs	r3, r1
    1498:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    149a:	3101      	adds	r1, #1
    149c:	69d3      	ldr	r3, [r2, #28]
    149e:	4219      	tst	r1, r3
    14a0:	d1fc      	bne.n	149c <_usart_sync_enable+0xc>
}
    14a2:	4770      	bx	lr

000014a4 <_usart_sync_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    14a4:	6803      	ldr	r3, [r0, #0]
    14a6:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    14a8:	8519      	strh	r1, [r3, #40]	; 0x28
}
    14aa:	4770      	bx	lr

000014ac <_usart_sync_read_byte>:
	return hri_sercomusart_read_DATA_reg(device->hw);
    14ac:	6803      	ldr	r3, [r0, #0]
	return ((Sercom *)hw)->USART.DATA.reg;
    14ae:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    14b0:	b2c0      	uxtb	r0, r0
}
    14b2:	4770      	bx	lr

000014b4 <_usart_sync_is_ready_to_send>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
    14b4:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    14b6:	7e18      	ldrb	r0, [r3, #24]
    14b8:	2301      	movs	r3, #1
    14ba:	4018      	ands	r0, r3
}
    14bc:	4770      	bx	lr

000014be <_usart_sync_is_transmit_done>:
	return hri_sercomusart_get_interrupt_TXC_bit(device->hw);
    14be:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    14c0:	7e18      	ldrb	r0, [r3, #24]
    14c2:	0780      	lsls	r0, r0, #30
    14c4:	0fc0      	lsrs	r0, r0, #31
}
    14c6:	4770      	bx	lr

000014c8 <_usart_sync_is_byte_received>:
	return hri_sercomusart_get_interrupt_RXC_bit(device->hw);
    14c8:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    14ca:	7e18      	ldrb	r0, [r3, #24]
    14cc:	0740      	lsls	r0, r0, #29
    14ce:	0fc0      	lsrs	r0, r0, #31
}
    14d0:	4770      	bx	lr
	...

000014d4 <_i2c_m_sync_init>:
{
    14d4:	b570      	push	{r4, r5, r6, lr}
    14d6:	0004      	movs	r4, r0
    14d8:	000d      	movs	r5, r1
	ASSERT(i2c_dev);
    14da:	1e43      	subs	r3, r0, #1
    14dc:	4198      	sbcs	r0, r3
    14de:	b2c0      	uxtb	r0, r0
    14e0:	4a04      	ldr	r2, [pc, #16]	; (14f4 <_i2c_m_sync_init+0x20>)
    14e2:	4905      	ldr	r1, [pc, #20]	; (14f8 <_i2c_m_sync_init+0x24>)
    14e4:	4b05      	ldr	r3, [pc, #20]	; (14fc <_i2c_m_sync_init+0x28>)
    14e6:	4798      	blx	r3
	i2c_dev->hw = hw;
    14e8:	6125      	str	r5, [r4, #16]
	return _i2c_m_sync_init_impl(&i2c_dev->service, hw);
    14ea:	0029      	movs	r1, r5
    14ec:	0020      	movs	r0, r4
    14ee:	4b04      	ldr	r3, [pc, #16]	; (1500 <_i2c_m_sync_init+0x2c>)
    14f0:	4798      	blx	r3
}
    14f2:	bd70      	pop	{r4, r5, r6, pc}
    14f4:	00000507 	.word	0x00000507
    14f8:	00009d40 	.word	0x00009d40
    14fc:	00000fed 	.word	0x00000fed
    1500:	000012ed 	.word	0x000012ed

00001504 <_i2c_m_sync_enable>:
{
    1504:	b570      	push	{r4, r5, r6, lr}
    1506:	0004      	movs	r4, r0
	ASSERT(i2c_dev);
    1508:	4d1a      	ldr	r5, [pc, #104]	; (1574 <_i2c_m_sync_enable+0x70>)
    150a:	1e43      	subs	r3, r0, #1
    150c:	4198      	sbcs	r0, r3
    150e:	b2c0      	uxtb	r0, r0
    1510:	4a19      	ldr	r2, [pc, #100]	; (1578 <_i2c_m_sync_enable+0x74>)
    1512:	0029      	movs	r1, r5
    1514:	4e19      	ldr	r6, [pc, #100]	; (157c <_i2c_m_sync_enable+0x78>)
    1516:	47b0      	blx	r6
	return _i2c_m_enable_implementation(i2c_dev->hw);
    1518:	6924      	ldr	r4, [r4, #16]
	ASSERT(hw);
    151a:	0020      	movs	r0, r4
    151c:	1e43      	subs	r3, r0, #1
    151e:	4198      	sbcs	r0, r3
    1520:	b2c0      	uxtb	r0, r0
    1522:	4a17      	ldr	r2, [pc, #92]	; (1580 <_i2c_m_sync_enable+0x7c>)
    1524:	0029      	movs	r1, r5
    1526:	47b0      	blx	r6
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    1528:	6823      	ldr	r3, [r4, #0]
    152a:	2202      	movs	r2, #2
    152c:	4313      	orrs	r3, r2
    152e:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1530:	3201      	adds	r2, #1
    1532:	69e3      	ldr	r3, [r4, #28]
    1534:	421a      	tst	r2, r3
    1536:	d1fc      	bne.n	1532 <_i2c_m_sync_enable+0x2e>
    1538:	2504      	movs	r5, #4
    153a:	2204      	movs	r2, #4
}

static inline hri_sercomi2cm_status_reg_t hri_sercomi2cm_read_STATUS_BUSSTATE_bf(const void *const hw)
{
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SYSOP);
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    153c:	2003      	movs	r0, #3
}

static inline void hri_sercomi2cm_clear_STATUS_reg(const void *const hw, hri_sercomi2cm_status_reg_t mask)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.STATUS.reg = mask;
    153e:	2610      	movs	r6, #16
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1540:	4910      	ldr	r1, [pc, #64]	; (1584 <_i2c_m_sync_enable+0x80>)
    1542:	69e3      	ldr	r3, [r4, #28]
    1544:	421a      	tst	r2, r3
    1546:	d1fc      	bne.n	1542 <_i2c_m_sync_enable+0x3e>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    1548:	8b63      	ldrh	r3, [r4, #26]
    154a:	091b      	lsrs	r3, r3, #4
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
    154c:	4003      	ands	r3, r0
    154e:	2b01      	cmp	r3, #1
    1550:	d00a      	beq.n	1568 <_i2c_m_sync_enable+0x64>
    1552:	3901      	subs	r1, #1
		if (timeout <= 0) {
    1554:	2900      	cmp	r1, #0
    1556:	d1f4      	bne.n	1542 <_i2c_m_sync_enable+0x3e>
    1558:	3d01      	subs	r5, #1
			if (--timeout_attempt)
    155a:	2d00      	cmp	r5, #0
    155c:	d006      	beq.n	156c <_i2c_m_sync_enable+0x68>
	((Sercom *)hw)->I2CM.STATUS.reg = mask;
    155e:	8366      	strh	r6, [r4, #26]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1560:	69e3      	ldr	r3, [r4, #28]
    1562:	421a      	tst	r2, r3
    1564:	d1fc      	bne.n	1560 <_i2c_m_sync_enable+0x5c>
    1566:	e7eb      	b.n	1540 <_i2c_m_sync_enable+0x3c>
	return ERR_NONE;
    1568:	2000      	movs	r0, #0
}
    156a:	bd70      	pop	{r4, r5, r6, pc}
				return I2C_ERR_BUSY;
    156c:	2006      	movs	r0, #6
    156e:	4240      	negs	r0, r0
	return _i2c_m_enable_implementation(i2c_dev->hw);
    1570:	e7fb      	b.n	156a <_i2c_m_sync_enable+0x66>
    1572:	46c0      	nop			; (mov r8, r8)
    1574:	00009d40 	.word	0x00009d40
    1578:	00000524 	.word	0x00000524
    157c:	00000fed 	.word	0x00000fed
    1580:	000005f4 	.word	0x000005f4
    1584:	0000ffff 	.word	0x0000ffff

00001588 <_i2c_m_sync_transfer>:
{
    1588:	b5f0      	push	{r4, r5, r6, r7, lr}
    158a:	46de      	mov	lr, fp
    158c:	4657      	mov	r7, sl
    158e:	464e      	mov	r6, r9
    1590:	4645      	mov	r5, r8
    1592:	b5e0      	push	{r5, r6, r7, lr}
    1594:	b083      	sub	sp, #12
    1596:	0005      	movs	r5, r0
    1598:	4688      	mov	r8, r1
	void *   hw = i2c_dev->hw;
    159a:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    159c:	0006      	movs	r6, r0
    159e:	1e73      	subs	r3, r6, #1
    15a0:	419e      	sbcs	r6, r3
    15a2:	b2f3      	uxtb	r3, r6
    15a4:	9301      	str	r3, [sp, #4]
    15a6:	4fb4      	ldr	r7, [pc, #720]	; (1878 <_i2c_m_sync_transfer+0x2f0>)
    15a8:	4ab4      	ldr	r2, [pc, #720]	; (187c <_i2c_m_sync_transfer+0x2f4>)
    15aa:	0039      	movs	r1, r7
    15ac:	0018      	movs	r0, r3
    15ae:	4eb4      	ldr	r6, [pc, #720]	; (1880 <_i2c_m_sync_transfer+0x2f8>)
    15b0:	47b0      	blx	r6
	ASSERT(i2c_dev->hw);
    15b2:	6928      	ldr	r0, [r5, #16]
    15b4:	1e43      	subs	r3, r0, #1
    15b6:	4198      	sbcs	r0, r3
    15b8:	b2c0      	uxtb	r0, r0
    15ba:	22b8      	movs	r2, #184	; 0xb8
    15bc:	00d2      	lsls	r2, r2, #3
    15be:	0039      	movs	r1, r7
    15c0:	47b0      	blx	r6
	ASSERT(msg);
    15c2:	4640      	mov	r0, r8
    15c4:	1e43      	subs	r3, r0, #1
    15c6:	4198      	sbcs	r0, r3
    15c8:	b2c0      	uxtb	r0, r0
    15ca:	4aae      	ldr	r2, [pc, #696]	; (1884 <_i2c_m_sync_transfer+0x2fc>)
    15cc:	0039      	movs	r1, r7
    15ce:	47b0      	blx	r6
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    15d0:	886b      	ldrh	r3, [r5, #2]
    15d2:	05db      	lsls	r3, r3, #23
    15d4:	d500      	bpl.n	15d8 <_i2c_m_sync_transfer+0x50>
    15d6:	e224      	b.n	1a22 <_i2c_m_sync_transfer+0x49a>
	msg->flags |= I2C_M_BUSY;
    15d8:	4643      	mov	r3, r8
    15da:	885a      	ldrh	r2, [r3, #2]
    15dc:	2380      	movs	r3, #128	; 0x80
    15de:	005b      	lsls	r3, r3, #1
    15e0:	431a      	orrs	r2, r3
    15e2:	4641      	mov	r1, r8
    15e4:	804a      	strh	r2, [r1, #2]
	i2c_dev->service.msg = *msg;
    15e6:	002a      	movs	r2, r5
    15e8:	c9c1      	ldmia	r1!, {r0, r6, r7}
    15ea:	c2c1      	stmia	r2!, {r0, r6, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
    15ec:	6862      	ldr	r2, [r4, #4]
    15ee:	4313      	orrs	r3, r2
    15f0:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    15f2:	2204      	movs	r2, #4
    15f4:	69e3      	ldr	r3, [r4, #28]
    15f6:	421a      	tst	r2, r3
    15f8:	d1fc      	bne.n	15f4 <_i2c_m_sync_transfer+0x6c>
	void *             hw    = i2c_dev->hw;
    15fa:	692f      	ldr	r7, [r5, #16]
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    15fc:	683b      	ldr	r3, [r7, #0]
    15fe:	4699      	mov	r9, r3
	ASSERT(i2c_dev);
    1600:	4aa1      	ldr	r2, [pc, #644]	; (1888 <_i2c_m_sync_transfer+0x300>)
    1602:	499d      	ldr	r1, [pc, #628]	; (1878 <_i2c_m_sync_transfer+0x2f0>)
    1604:	9801      	ldr	r0, [sp, #4]
    1606:	4b9e      	ldr	r3, [pc, #632]	; (1880 <_i2c_m_sync_transfer+0x2f8>)
    1608:	4798      	blx	r3
	if (msg->len == 1 && sclsm) {
    160a:	686b      	ldr	r3, [r5, #4]
    160c:	2b01      	cmp	r3, #1
    160e:	d05a      	beq.n	16c6 <_i2c_m_sync_transfer+0x13e>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    1610:	687b      	ldr	r3, [r7, #4]
    1612:	4a9e      	ldr	r2, [pc, #632]	; (188c <_i2c_m_sync_transfer+0x304>)
    1614:	4013      	ands	r3, r2
    1616:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1618:	2204      	movs	r2, #4
    161a:	69fb      	ldr	r3, [r7, #28]
    161c:	421a      	tst	r2, r3
    161e:	d1fc      	bne.n	161a <_i2c_m_sync_transfer+0x92>
	if (msg->addr & I2C_M_TEN) {
    1620:	882b      	ldrh	r3, [r5, #0]
    1622:	055a      	lsls	r2, r3, #21
    1624:	d55c      	bpl.n	16e0 <_i2c_m_sync_transfer+0x158>
		if (msg->flags & I2C_M_RD) {
    1626:	886a      	ldrh	r2, [r5, #2]
    1628:	07d2      	lsls	r2, r2, #31
    162a:	d504      	bpl.n	1636 <_i2c_m_sync_transfer+0xae>
			msg->flags |= I2C_M_TEN;
    162c:	886a      	ldrh	r2, [r5, #2]
    162e:	2180      	movs	r1, #128	; 0x80
    1630:	00c9      	lsls	r1, r1, #3
    1632:	430a      	orrs	r2, r1
    1634:	806a      	strh	r2, [r5, #2]
		                              ((msg->addr & TEN_ADDR_MASK) << 1) | SERCOM_I2CM_ADDR_TENBITEN
    1636:	005b      	lsls	r3, r3, #1
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    1638:	4995      	ldr	r1, [pc, #596]	; (1890 <_i2c_m_sync_transfer+0x308>)
    163a:	4019      	ands	r1, r3
    163c:	2204      	movs	r2, #4
    163e:	69fb      	ldr	r3, [r7, #28]
    1640:	421a      	tst	r2, r3
    1642:	d1fc      	bne.n	163e <_i2c_m_sync_transfer+0xb6>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    1644:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1646:	2280      	movs	r2, #128	; 0x80
    1648:	01d2      	lsls	r2, r2, #7
    164a:	401a      	ands	r2, r3
		hri_sercomi2cm_write_ADDR_reg(hw,
    164c:	2380      	movs	r3, #128	; 0x80
    164e:	021b      	lsls	r3, r3, #8
    1650:	4313      	orrs	r3, r2
    1652:	4319      	orrs	r1, r3
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1654:	6279      	str	r1, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1656:	2204      	movs	r2, #4
    1658:	69fb      	ldr	r3, [r7, #28]
    165a:	421a      	tst	r2, r3
    165c:	d1fc      	bne.n	1658 <_i2c_m_sync_transfer+0xd0>
	void *   hw      = i2c_dev->hw;
    165e:	6929      	ldr	r1, [r5, #16]
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    1660:	7e0b      	ldrb	r3, [r1, #24]
    1662:	b2db      	uxtb	r3, r3
    1664:	4a8b      	ldr	r2, [pc, #556]	; (1894 <_i2c_m_sync_transfer+0x30c>)
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    1666:	2003      	movs	r0, #3
    1668:	4218      	tst	r0, r3
    166a:	d104      	bne.n	1676 <_i2c_m_sync_transfer+0xee>
    166c:	7e0b      	ldrb	r3, [r1, #24]
    166e:	b2db      	uxtb	r3, r3
    1670:	3a01      	subs	r2, #1
		if (timeout-- == 0) {
    1672:	2a00      	cmp	r2, #0
    1674:	d1f8      	bne.n	1668 <_i2c_m_sync_transfer+0xe0>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1676:	683e      	ldr	r6, [r7, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1678:	2104      	movs	r1, #4
    167a:	69fa      	ldr	r2, [r7, #28]
    167c:	4211      	tst	r1, r2
    167e:	d1fc      	bne.n	167a <_i2c_m_sync_transfer+0xf2>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    1680:	8b7a      	ldrh	r2, [r7, #26]
    1682:	b292      	uxth	r2, r2
	if (flags & MB_FLAG) {
    1684:	07d9      	lsls	r1, r3, #31
    1686:	d400      	bmi.n	168a <_i2c_m_sync_transfer+0x102>
    1688:	e0a0      	b.n	17cc <_i2c_m_sync_transfer+0x244>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    168a:	0793      	lsls	r3, r2, #30
    168c:	d53e      	bpl.n	170c <_i2c_m_sync_transfer+0x184>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    168e:	2301      	movs	r3, #1
    1690:	763b      	strb	r3, [r7, #24]
			msg->flags |= I2C_M_FAIL;
    1692:	886b      	ldrh	r3, [r5, #2]
    1694:	2180      	movs	r1, #128	; 0x80
    1696:	0149      	lsls	r1, r1, #5
    1698:	430b      	orrs	r3, r1
    169a:	806b      	strh	r3, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    169c:	886b      	ldrh	r3, [r5, #2]
    169e:	497e      	ldr	r1, [pc, #504]	; (1898 <_i2c_m_sync_transfer+0x310>)
    16a0:	400b      	ands	r3, r1
    16a2:	806b      	strh	r3, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    16a4:	2001      	movs	r0, #1
    16a6:	0003      	movs	r3, r0
    16a8:	4013      	ands	r3, r2
			return I2C_ERR_BAD_ADDRESS;
    16aa:	4258      	negs	r0, r3
    16ac:	4158      	adcs	r0, r3
    16ae:	3805      	subs	r0, #5
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    16b0:	886b      	ldrh	r3, [r5, #2]
    16b2:	4a79      	ldr	r2, [pc, #484]	; (1898 <_i2c_m_sync_transfer+0x310>)
    16b4:	4013      	ands	r3, r2
    16b6:	806b      	strh	r3, [r5, #2]
}
    16b8:	b003      	add	sp, #12
    16ba:	bc3c      	pop	{r2, r3, r4, r5}
    16bc:	4690      	mov	r8, r2
    16be:	4699      	mov	r9, r3
    16c0:	46a2      	mov	sl, r4
    16c2:	46ab      	mov	fp, r5
    16c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (msg->len == 1 && sclsm) {
    16c6:	464b      	mov	r3, r9
    16c8:	011b      	lsls	r3, r3, #4
    16ca:	d5a1      	bpl.n	1610 <_i2c_m_sync_transfer+0x88>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    16cc:	687a      	ldr	r2, [r7, #4]
    16ce:	2380      	movs	r3, #128	; 0x80
    16d0:	02db      	lsls	r3, r3, #11
    16d2:	4313      	orrs	r3, r2
    16d4:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    16d6:	2204      	movs	r2, #4
    16d8:	69fb      	ldr	r3, [r7, #28]
    16da:	421a      	tst	r2, r3
    16dc:	d1fc      	bne.n	16d8 <_i2c_m_sync_transfer+0x150>
    16de:	e79f      	b.n	1620 <_i2c_m_sync_transfer+0x98>
		                              ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0)
    16e0:	886a      	ldrh	r2, [r5, #2]
    16e2:	005b      	lsls	r3, r3, #1
    16e4:	21ff      	movs	r1, #255	; 0xff
    16e6:	400b      	ands	r3, r1
    16e8:	39fe      	subs	r1, #254	; 0xfe
    16ea:	4011      	ands	r1, r2
    16ec:	4319      	orrs	r1, r3
    16ee:	2204      	movs	r2, #4
    16f0:	69fb      	ldr	r3, [r7, #28]
    16f2:	421a      	tst	r2, r3
    16f4:	d1fc      	bne.n	16f0 <_i2c_m_sync_transfer+0x168>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    16f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    16f8:	2280      	movs	r2, #128	; 0x80
    16fa:	01d2      	lsls	r2, r2, #7
    16fc:	4013      	ands	r3, r2
		hri_sercomi2cm_write_ADDR_reg(hw,
    16fe:	430b      	orrs	r3, r1
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1700:	627b      	str	r3, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1702:	2204      	movs	r2, #4
    1704:	69fb      	ldr	r3, [r7, #28]
    1706:	421a      	tst	r2, r3
    1708:	d1fc      	bne.n	1704 <_i2c_m_sync_transfer+0x17c>
    170a:	e7a8      	b.n	165e <_i2c_m_sync_transfer+0xd6>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    170c:	0753      	lsls	r3, r2, #29
    170e:	d41b      	bmi.n	1748 <_i2c_m_sync_transfer+0x1c0>
			if (msg->flags & I2C_M_TEN) {
    1710:	886b      	ldrh	r3, [r5, #2]
    1712:	055b      	lsls	r3, r3, #21
    1714:	d535      	bpl.n	1782 <_i2c_m_sync_transfer+0x1fa>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
    1716:	882b      	ldrh	r3, [r5, #0]
    1718:	09db      	lsrs	r3, r3, #7
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    171a:	2106      	movs	r1, #6
    171c:	4019      	ands	r1, r3
    171e:	2204      	movs	r2, #4
    1720:	69fb      	ldr	r3, [r7, #28]
    1722:	421a      	tst	r2, r3
    1724:	d1fc      	bne.n	1720 <_i2c_m_sync_transfer+0x198>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    1726:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1728:	2280      	movs	r2, #128	; 0x80
    172a:	01d2      	lsls	r2, r2, #7
    172c:	4013      	ands	r3, r2
				hri_sercomi2cm_write_ADDR_reg(hw,
    172e:	22f1      	movs	r2, #241	; 0xf1
    1730:	4313      	orrs	r3, r2
    1732:	430b      	orrs	r3, r1
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1734:	627b      	str	r3, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1736:	3aed      	subs	r2, #237	; 0xed
    1738:	69fb      	ldr	r3, [r7, #28]
    173a:	421a      	tst	r2, r3
    173c:	d1fc      	bne.n	1738 <_i2c_m_sync_transfer+0x1b0>
				msg->flags &= ~I2C_M_TEN;
    173e:	886b      	ldrh	r3, [r5, #2]
    1740:	4a56      	ldr	r2, [pc, #344]	; (189c <_i2c_m_sync_transfer+0x314>)
    1742:	4013      	ands	r3, r2
    1744:	806b      	strh	r3, [r5, #2]
    1746:	e066      	b.n	1816 <_i2c_m_sync_transfer+0x28e>
				if (msg->len > 0) {
    1748:	686b      	ldr	r3, [r5, #4]
    174a:	2b00      	cmp	r3, #0
    174c:	dd04      	ble.n	1758 <_i2c_m_sync_transfer+0x1d0>
					msg->flags |= I2C_M_FAIL;
    174e:	886b      	ldrh	r3, [r5, #2]
    1750:	2280      	movs	r2, #128	; 0x80
    1752:	0152      	lsls	r2, r2, #5
    1754:	4313      	orrs	r3, r2
    1756:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    1758:	886b      	ldrh	r3, [r5, #2]
    175a:	b21b      	sxth	r3, r3
    175c:	2b00      	cmp	r3, #0
    175e:	db06      	blt.n	176e <_i2c_m_sync_transfer+0x1e6>
				msg->flags &= ~I2C_M_BUSY;
    1760:	886b      	ldrh	r3, [r5, #2]
    1762:	4a4d      	ldr	r2, [pc, #308]	; (1898 <_i2c_m_sync_transfer+0x310>)
    1764:	4013      	ands	r3, r2
    1766:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    1768:	2002      	movs	r0, #2
    176a:	4240      	negs	r0, r0
    176c:	e7a0      	b.n	16b0 <_i2c_m_sync_transfer+0x128>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    176e:	687a      	ldr	r2, [r7, #4]
    1770:	23c0      	movs	r3, #192	; 0xc0
    1772:	029b      	lsls	r3, r3, #10
    1774:	4313      	orrs	r3, r2
    1776:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1778:	2304      	movs	r3, #4
    177a:	69fa      	ldr	r2, [r7, #28]
    177c:	4213      	tst	r3, r2
    177e:	d1fc      	bne.n	177a <_i2c_m_sync_transfer+0x1f2>
    1780:	e7ee      	b.n	1760 <_i2c_m_sync_transfer+0x1d8>
			if (msg->len == 0) {
    1782:	686b      	ldr	r3, [r5, #4]
    1784:	2b00      	cmp	r3, #0
    1786:	d112      	bne.n	17ae <_i2c_m_sync_transfer+0x226>
				if (msg->flags & I2C_M_STOP) {
    1788:	886b      	ldrh	r3, [r5, #2]
    178a:	b21b      	sxth	r3, r3
    178c:	2b00      	cmp	r3, #0
    178e:	db04      	blt.n	179a <_i2c_m_sync_transfer+0x212>
				msg->flags &= ~I2C_M_BUSY;
    1790:	886b      	ldrh	r3, [r5, #2]
    1792:	4a41      	ldr	r2, [pc, #260]	; (1898 <_i2c_m_sync_transfer+0x310>)
    1794:	4013      	ands	r3, r2
    1796:	806b      	strh	r3, [r5, #2]
    1798:	e03d      	b.n	1816 <_i2c_m_sync_transfer+0x28e>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    179a:	687a      	ldr	r2, [r7, #4]
    179c:	23c0      	movs	r3, #192	; 0xc0
    179e:	029b      	lsls	r3, r3, #10
    17a0:	4313      	orrs	r3, r2
    17a2:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    17a4:	2204      	movs	r2, #4
    17a6:	69fb      	ldr	r3, [r7, #28]
    17a8:	421a      	tst	r2, r3
    17aa:	d1fc      	bne.n	17a6 <_i2c_m_sync_transfer+0x21e>
    17ac:	e7f0      	b.n	1790 <_i2c_m_sync_transfer+0x208>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    17ae:	68ab      	ldr	r3, [r5, #8]
    17b0:	781a      	ldrb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    17b2:	2328      	movs	r3, #40	; 0x28
    17b4:	54fa      	strb	r2, [r7, r3]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    17b6:	2204      	movs	r2, #4
    17b8:	69fb      	ldr	r3, [r7, #28]
    17ba:	421a      	tst	r2, r3
    17bc:	d1fc      	bne.n	17b8 <_i2c_m_sync_transfer+0x230>
				msg->buffer++;
    17be:	68ab      	ldr	r3, [r5, #8]
    17c0:	3301      	adds	r3, #1
    17c2:	60ab      	str	r3, [r5, #8]
				msg->len--;
    17c4:	686b      	ldr	r3, [r5, #4]
    17c6:	3b01      	subs	r3, #1
    17c8:	606b      	str	r3, [r5, #4]
    17ca:	e024      	b.n	1816 <_i2c_m_sync_transfer+0x28e>
	} else if (flags & SB_FLAG) {
    17cc:	079b      	lsls	r3, r3, #30
    17ce:	d522      	bpl.n	1816 <_i2c_m_sync_transfer+0x28e>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    17d0:	686b      	ldr	r3, [r5, #4]
    17d2:	2b00      	cmp	r3, #0
    17d4:	d040      	beq.n	1858 <_i2c_m_sync_transfer+0x2d0>
    17d6:	0752      	lsls	r2, r2, #29
    17d8:	d43e      	bmi.n	1858 <_i2c_m_sync_transfer+0x2d0>
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
    17da:	0136      	lsls	r6, r6, #4
    17dc:	0ff6      	lsrs	r6, r6, #31
			msg->len--;
    17de:	3b01      	subs	r3, #1
    17e0:	606b      	str	r3, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    17e2:	2b00      	cmp	r3, #0
    17e4:	d000      	beq.n	17e8 <_i2c_m_sync_transfer+0x260>
    17e6:	e11f      	b.n	1a28 <_i2c_m_sync_transfer+0x4a0>
    17e8:	2e00      	cmp	r6, #0
    17ea:	d100      	bne.n	17ee <_i2c_m_sync_transfer+0x266>
    17ec:	e122      	b.n	1a34 <_i2c_m_sync_transfer+0x4ac>
				if (msg->flags & I2C_M_STOP) {
    17ee:	886b      	ldrh	r3, [r5, #2]
    17f0:	b21b      	sxth	r3, r3
    17f2:	2b00      	cmp	r3, #0
    17f4:	db1d      	blt.n	1832 <_i2c_m_sync_transfer+0x2aa>
				msg->flags &= ~I2C_M_BUSY;
    17f6:	886b      	ldrh	r3, [r5, #2]
    17f8:	4a27      	ldr	r2, [pc, #156]	; (1898 <_i2c_m_sync_transfer+0x310>)
    17fa:	4013      	ands	r3, r2
    17fc:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    17fe:	68a9      	ldr	r1, [r5, #8]
    1800:	1c4b      	adds	r3, r1, #1
    1802:	60ab      	str	r3, [r5, #8]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1804:	2204      	movs	r2, #4
    1806:	69fb      	ldr	r3, [r7, #28]
    1808:	421a      	tst	r2, r3
    180a:	d1fc      	bne.n	1806 <_i2c_m_sync_transfer+0x27e>
	return ((Sercom *)hw)->I2CM.DATA.reg;
    180c:	2328      	movs	r3, #40	; 0x28
    180e:	5cfb      	ldrb	r3, [r7, r3]
    1810:	700b      	strb	r3, [r1, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1812:	2302      	movs	r3, #2
    1814:	763b      	strb	r3, [r7, #24]
			return I2C_NACK;
    1816:	2600      	movs	r6, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    1818:	2380      	movs	r3, #128	; 0x80
    181a:	005b      	lsls	r3, r3, #1
    181c:	469a      	mov	sl, r3
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    181e:	2103      	movs	r1, #3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1820:	2204      	movs	r2, #4
	if (flags & MB_FLAG) {
    1822:	3bff      	subs	r3, #255	; 0xff
    1824:	469c      	mov	ip, r3
	} else if (flags & SB_FLAG) {
    1826:	3301      	adds	r3, #1
    1828:	4699      	mov	r9, r3
	return ((Sercom *)hw)->I2CM.DATA.reg;
    182a:	3326      	adds	r3, #38	; 0x26
    182c:	469b      	mov	fp, r3
    182e:	9601      	str	r6, [sp, #4]
    1830:	e0c2      	b.n	19b8 <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    1832:	687b      	ldr	r3, [r7, #4]
    1834:	4a18      	ldr	r2, [pc, #96]	; (1898 <_i2c_m_sync_transfer+0x310>)
    1836:	4013      	ands	r3, r2
    1838:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    183a:	3206      	adds	r2, #6
    183c:	32ff      	adds	r2, #255	; 0xff
    183e:	69fb      	ldr	r3, [r7, #28]
    1840:	421a      	tst	r2, r3
    1842:	d1fc      	bne.n	183e <_i2c_m_sync_transfer+0x2b6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1844:	687a      	ldr	r2, [r7, #4]
    1846:	23c0      	movs	r3, #192	; 0xc0
    1848:	029b      	lsls	r3, r3, #10
    184a:	4313      	orrs	r3, r2
    184c:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    184e:	2204      	movs	r2, #4
    1850:	69fb      	ldr	r3, [r7, #28]
    1852:	421a      	tst	r2, r3
    1854:	d1fc      	bne.n	1850 <_i2c_m_sync_transfer+0x2c8>
    1856:	e7ce      	b.n	17f6 <_i2c_m_sync_transfer+0x26e>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1858:	2302      	movs	r3, #2
    185a:	763b      	strb	r3, [r7, #24]
			return I2C_NACK;
    185c:	2002      	movs	r0, #2
    185e:	4240      	negs	r0, r0
    1860:	e726      	b.n	16b0 <_i2c_m_sync_transfer+0x128>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1862:	6862      	ldr	r2, [r4, #4]
    1864:	23c0      	movs	r3, #192	; 0xc0
    1866:	029b      	lsls	r3, r3, #10
    1868:	4313      	orrs	r3, r2
    186a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    186c:	2204      	movs	r2, #4
    186e:	69e3      	ldr	r3, [r4, #28]
    1870:	421a      	tst	r2, r3
    1872:	d1fc      	bne.n	186e <_i2c_m_sync_transfer+0x2e6>
    1874:	e0b5      	b.n	19e2 <_i2c_m_sync_transfer+0x45a>
    1876:	46c0      	nop			; (mov r8, r8)
    1878:	00009d40 	.word	0x00009d40
    187c:	000005bf 	.word	0x000005bf
    1880:	00000fed 	.word	0x00000fed
    1884:	000005c1 	.word	0x000005c1
    1888:	00000594 	.word	0x00000594
    188c:	fffbffff 	.word	0xfffbffff
    1890:	000007fe 	.word	0x000007fe
    1894:	0000ffff 	.word	0x0000ffff
    1898:	fffffeff 	.word	0xfffffeff
    189c:	fffffbff 	.word	0xfffffbff
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    18a0:	4202      	tst	r2, r0
    18a2:	d11b      	bne.n	18dc <_i2c_m_sync_transfer+0x354>
			if (msg->flags & I2C_M_TEN) {
    18a4:	886b      	ldrh	r3, [r5, #2]
    18a6:	055b      	lsls	r3, r3, #21
    18a8:	d535      	bpl.n	1916 <_i2c_m_sync_transfer+0x38e>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
    18aa:	882b      	ldrh	r3, [r5, #0]
    18ac:	09db      	lsrs	r3, r3, #7
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    18ae:	2006      	movs	r0, #6
    18b0:	4018      	ands	r0, r3
    18b2:	69e3      	ldr	r3, [r4, #28]
    18b4:	421a      	tst	r2, r3
    18b6:	d1fc      	bne.n	18b2 <_i2c_m_sync_transfer+0x32a>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    18b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
    18ba:	2680      	movs	r6, #128	; 0x80
    18bc:	01f6      	lsls	r6, r6, #7
    18be:	4033      	ands	r3, r6
				hri_sercomi2cm_write_ADDR_reg(hw,
    18c0:	26f1      	movs	r6, #241	; 0xf1
    18c2:	4333      	orrs	r3, r6
    18c4:	4303      	orrs	r3, r0
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    18c6:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    18c8:	69e3      	ldr	r3, [r4, #28]
    18ca:	421a      	tst	r2, r3
    18cc:	d1fc      	bne.n	18c8 <_i2c_m_sync_transfer+0x340>
				msg->flags &= ~I2C_M_TEN;
    18ce:	886b      	ldrh	r3, [r5, #2]
    18d0:	4878      	ldr	r0, [pc, #480]	; (1ab4 <_i2c_m_sync_transfer+0x52c>)
    18d2:	4003      	ands	r3, r0
    18d4:	806b      	strh	r3, [r5, #2]
				return I2C_OK;
    18d6:	2300      	movs	r3, #0
    18d8:	9301      	str	r3, [sp, #4]
    18da:	e06d      	b.n	19b8 <_i2c_m_sync_transfer+0x430>
				if (msg->len > 0) {
    18dc:	686b      	ldr	r3, [r5, #4]
    18de:	2b00      	cmp	r3, #0
    18e0:	dd04      	ble.n	18ec <_i2c_m_sync_transfer+0x364>
					msg->flags |= I2C_M_FAIL;
    18e2:	886b      	ldrh	r3, [r5, #2]
    18e4:	2080      	movs	r0, #128	; 0x80
    18e6:	0140      	lsls	r0, r0, #5
    18e8:	4303      	orrs	r3, r0
    18ea:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    18ec:	886b      	ldrh	r3, [r5, #2]
    18ee:	b21b      	sxth	r3, r3
    18f0:	2b00      	cmp	r3, #0
    18f2:	db07      	blt.n	1904 <_i2c_m_sync_transfer+0x37c>
				msg->flags &= ~I2C_M_BUSY;
    18f4:	886b      	ldrh	r3, [r5, #2]
    18f6:	4870      	ldr	r0, [pc, #448]	; (1ab8 <_i2c_m_sync_transfer+0x530>)
    18f8:	4003      	ands	r3, r0
    18fa:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    18fc:	2302      	movs	r3, #2
    18fe:	425b      	negs	r3, r3
    1900:	9301      	str	r3, [sp, #4]
    1902:	e059      	b.n	19b8 <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1904:	6860      	ldr	r0, [r4, #4]
    1906:	23c0      	movs	r3, #192	; 0xc0
    1908:	029b      	lsls	r3, r3, #10
    190a:	4303      	orrs	r3, r0
    190c:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    190e:	69e3      	ldr	r3, [r4, #28]
    1910:	421a      	tst	r2, r3
    1912:	d1fc      	bne.n	190e <_i2c_m_sync_transfer+0x386>
    1914:	e7ee      	b.n	18f4 <_i2c_m_sync_transfer+0x36c>
			if (msg->len == 0) {
    1916:	686b      	ldr	r3, [r5, #4]
    1918:	2b00      	cmp	r3, #0
    191a:	d113      	bne.n	1944 <_i2c_m_sync_transfer+0x3bc>
				if (msg->flags & I2C_M_STOP) {
    191c:	886b      	ldrh	r3, [r5, #2]
    191e:	b21b      	sxth	r3, r3
    1920:	2b00      	cmp	r3, #0
    1922:	db06      	blt.n	1932 <_i2c_m_sync_transfer+0x3aa>
				msg->flags &= ~I2C_M_BUSY;
    1924:	886b      	ldrh	r3, [r5, #2]
    1926:	4864      	ldr	r0, [pc, #400]	; (1ab8 <_i2c_m_sync_transfer+0x530>)
    1928:	4003      	ands	r3, r0
    192a:	806b      	strh	r3, [r5, #2]
			return I2C_OK;
    192c:	2300      	movs	r3, #0
    192e:	9301      	str	r3, [sp, #4]
    1930:	e042      	b.n	19b8 <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1932:	6860      	ldr	r0, [r4, #4]
    1934:	23c0      	movs	r3, #192	; 0xc0
    1936:	029b      	lsls	r3, r3, #10
    1938:	4303      	orrs	r3, r0
    193a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    193c:	69e3      	ldr	r3, [r4, #28]
    193e:	421a      	tst	r2, r3
    1940:	d1fc      	bne.n	193c <_i2c_m_sync_transfer+0x3b4>
    1942:	e7ef      	b.n	1924 <_i2c_m_sync_transfer+0x39c>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    1944:	68ab      	ldr	r3, [r5, #8]
    1946:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    1948:	4658      	mov	r0, fp
    194a:	5423      	strb	r3, [r4, r0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    194c:	69e3      	ldr	r3, [r4, #28]
    194e:	421a      	tst	r2, r3
    1950:	d1fc      	bne.n	194c <_i2c_m_sync_transfer+0x3c4>
				msg->buffer++;
    1952:	68ab      	ldr	r3, [r5, #8]
    1954:	3301      	adds	r3, #1
    1956:	60ab      	str	r3, [r5, #8]
				msg->len--;
    1958:	686b      	ldr	r3, [r5, #4]
    195a:	3b01      	subs	r3, #1
    195c:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    195e:	2300      	movs	r3, #0
    1960:	9301      	str	r3, [sp, #4]
    1962:	e029      	b.n	19b8 <_i2c_m_sync_transfer+0x430>
	return I2C_OK;
    1964:	2600      	movs	r6, #0
    1966:	9601      	str	r6, [sp, #4]
	} else if (flags & SB_FLAG) {
    1968:	464e      	mov	r6, r9
    196a:	421e      	tst	r6, r3
    196c:	d024      	beq.n	19b8 <_i2c_m_sync_transfer+0x430>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    196e:	686b      	ldr	r3, [r5, #4]
    1970:	2b00      	cmp	r3, #0
    1972:	d04d      	beq.n	1a10 <_i2c_m_sync_transfer+0x488>
    1974:	4202      	tst	r2, r0
    1976:	d14b      	bne.n	1a10 <_i2c_m_sync_transfer+0x488>
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
    1978:	0eff      	lsrs	r7, r7, #27
    197a:	4660      	mov	r0, ip
    197c:	4007      	ands	r7, r0
			msg->len--;
    197e:	3b01      	subs	r3, #1
    1980:	606b      	str	r3, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1982:	2b00      	cmp	r3, #0
    1984:	d000      	beq.n	1988 <_i2c_m_sync_transfer+0x400>
    1986:	e082      	b.n	1a8e <_i2c_m_sync_transfer+0x506>
    1988:	2f00      	cmp	r7, #0
    198a:	d100      	bne.n	198e <_i2c_m_sync_transfer+0x406>
    198c:	e085      	b.n	1a9a <_i2c_m_sync_transfer+0x512>
				if (msg->flags & I2C_M_STOP) {
    198e:	886b      	ldrh	r3, [r5, #2]
    1990:	b21b      	sxth	r3, r3
    1992:	2b00      	cmp	r3, #0
    1994:	db2c      	blt.n	19f0 <_i2c_m_sync_transfer+0x468>
				msg->flags &= ~I2C_M_BUSY;
    1996:	886b      	ldrh	r3, [r5, #2]
    1998:	4847      	ldr	r0, [pc, #284]	; (1ab8 <_i2c_m_sync_transfer+0x530>)
    199a:	4003      	ands	r3, r0
    199c:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    199e:	68a8      	ldr	r0, [r5, #8]
    19a0:	1c43      	adds	r3, r0, #1
    19a2:	60ab      	str	r3, [r5, #8]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    19a4:	69e3      	ldr	r3, [r4, #28]
    19a6:	421a      	tst	r2, r3
    19a8:	d1fc      	bne.n	19a4 <_i2c_m_sync_transfer+0x41c>
	return ((Sercom *)hw)->I2CM.DATA.reg;
    19aa:	465b      	mov	r3, fp
    19ac:	5ce3      	ldrb	r3, [r4, r3]
    19ae:	7003      	strb	r3, [r0, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    19b0:	464b      	mov	r3, r9
    19b2:	7623      	strb	r3, [r4, #24]
	return I2C_OK;
    19b4:	2300      	movs	r3, #0
    19b6:	9301      	str	r3, [sp, #4]
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    19b8:	886b      	ldrh	r3, [r5, #2]
    19ba:	4650      	mov	r0, sl
    19bc:	4203      	tst	r3, r0
    19be:	d02d      	beq.n	1a1c <_i2c_m_sync_transfer+0x494>
	void *   hw      = i2c_dev->hw;
    19c0:	692e      	ldr	r6, [r5, #16]
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    19c2:	7e33      	ldrb	r3, [r6, #24]
    19c4:	b2db      	uxtb	r3, r3
    19c6:	483d      	ldr	r0, [pc, #244]	; (1abc <_i2c_m_sync_transfer+0x534>)
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    19c8:	4219      	tst	r1, r3
    19ca:	d141      	bne.n	1a50 <_i2c_m_sync_transfer+0x4c8>
    19cc:	7e33      	ldrb	r3, [r6, #24]
    19ce:	b2db      	uxtb	r3, r3
    19d0:	3801      	subs	r0, #1
		if (timeout-- == 0) {
    19d2:	2800      	cmp	r0, #0
    19d4:	d1f8      	bne.n	19c8 <_i2c_m_sync_transfer+0x440>
			if (msg->flags & I2C_M_STOP) {
    19d6:	4643      	mov	r3, r8
    19d8:	885b      	ldrh	r3, [r3, #2]
    19da:	b21b      	sxth	r3, r3
    19dc:	2b00      	cmp	r3, #0
    19de:	da00      	bge.n	19e2 <_i2c_m_sync_transfer+0x45a>
    19e0:	e73f      	b.n	1862 <_i2c_m_sync_transfer+0x2da>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    19e2:	886b      	ldrh	r3, [r5, #2]
    19e4:	4a34      	ldr	r2, [pc, #208]	; (1ab8 <_i2c_m_sync_transfer+0x530>)
    19e6:	4013      	ands	r3, r2
    19e8:	806b      	strh	r3, [r5, #2]
			return I2C_ERR_BUS;
    19ea:	2005      	movs	r0, #5
    19ec:	4240      	negs	r0, r0
			return ret;
    19ee:	e663      	b.n	16b8 <_i2c_m_sync_transfer+0x130>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    19f0:	6863      	ldr	r3, [r4, #4]
    19f2:	4831      	ldr	r0, [pc, #196]	; (1ab8 <_i2c_m_sync_transfer+0x530>)
    19f4:	4003      	ands	r3, r0
    19f6:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    19f8:	69e3      	ldr	r3, [r4, #28]
    19fa:	421a      	tst	r2, r3
    19fc:	d1fc      	bne.n	19f8 <_i2c_m_sync_transfer+0x470>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    19fe:	6860      	ldr	r0, [r4, #4]
    1a00:	23c0      	movs	r3, #192	; 0xc0
    1a02:	029b      	lsls	r3, r3, #10
    1a04:	4303      	orrs	r3, r0
    1a06:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a08:	69e3      	ldr	r3, [r4, #28]
    1a0a:	421a      	tst	r2, r3
    1a0c:	d1fc      	bne.n	1a08 <_i2c_m_sync_transfer+0x480>
    1a0e:	e7c2      	b.n	1996 <_i2c_m_sync_transfer+0x40e>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1a10:	464b      	mov	r3, r9
    1a12:	7623      	strb	r3, [r4, #24]
			return I2C_NACK;
    1a14:	2302      	movs	r3, #2
    1a16:	425b      	negs	r3, r3
    1a18:	9301      	str	r3, [sp, #4]
    1a1a:	e7cd      	b.n	19b8 <_i2c_m_sync_transfer+0x430>
    1a1c:	9e01      	ldr	r6, [sp, #4]
    1a1e:	0030      	movs	r0, r6
    1a20:	e64a      	b.n	16b8 <_i2c_m_sync_transfer+0x130>
		return I2C_ERR_BUSY;
    1a22:	2006      	movs	r0, #6
    1a24:	4240      	negs	r0, r0
    1a26:	e647      	b.n	16b8 <_i2c_m_sync_transfer+0x130>
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1a28:	2b01      	cmp	r3, #1
    1a2a:	d000      	beq.n	1a2e <_i2c_m_sync_transfer+0x4a6>
    1a2c:	e6e7      	b.n	17fe <_i2c_m_sync_transfer+0x276>
    1a2e:	2e00      	cmp	r6, #0
    1a30:	d100      	bne.n	1a34 <_i2c_m_sync_transfer+0x4ac>
    1a32:	e6e4      	b.n	17fe <_i2c_m_sync_transfer+0x276>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1a34:	687a      	ldr	r2, [r7, #4]
    1a36:	2380      	movs	r3, #128	; 0x80
    1a38:	02db      	lsls	r3, r3, #11
    1a3a:	4313      	orrs	r3, r2
    1a3c:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a3e:	2204      	movs	r2, #4
    1a40:	69fb      	ldr	r3, [r7, #28]
    1a42:	421a      	tst	r2, r3
    1a44:	d1fc      	bne.n	1a40 <_i2c_m_sync_transfer+0x4b8>
			if (msg->len == 0) {
    1a46:	686b      	ldr	r3, [r5, #4]
    1a48:	2b00      	cmp	r3, #0
    1a4a:	d100      	bne.n	1a4e <_i2c_m_sync_transfer+0x4c6>
    1a4c:	e6cf      	b.n	17ee <_i2c_m_sync_transfer+0x266>
    1a4e:	e6d6      	b.n	17fe <_i2c_m_sync_transfer+0x276>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1a50:	6827      	ldr	r7, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a52:	69e0      	ldr	r0, [r4, #28]
    1a54:	4202      	tst	r2, r0
    1a56:	d1fc      	bne.n	1a52 <_i2c_m_sync_transfer+0x4ca>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    1a58:	8b60      	ldrh	r0, [r4, #26]
    1a5a:	b280      	uxth	r0, r0
	if (flags & MB_FLAG) {
    1a5c:	4666      	mov	r6, ip
    1a5e:	421e      	tst	r6, r3
    1a60:	d100      	bne.n	1a64 <_i2c_m_sync_transfer+0x4dc>
    1a62:	e77f      	b.n	1964 <_i2c_m_sync_transfer+0x3dc>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    1a64:	464b      	mov	r3, r9
    1a66:	4203      	tst	r3, r0
    1a68:	d100      	bne.n	1a6c <_i2c_m_sync_transfer+0x4e4>
    1a6a:	e719      	b.n	18a0 <_i2c_m_sync_transfer+0x318>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    1a6c:	7626      	strb	r6, [r4, #24]
			msg->flags |= I2C_M_FAIL;
    1a6e:	886b      	ldrh	r3, [r5, #2]
    1a70:	2680      	movs	r6, #128	; 0x80
    1a72:	0176      	lsls	r6, r6, #5
    1a74:	4333      	orrs	r3, r6
    1a76:	806b      	strh	r3, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    1a78:	886b      	ldrh	r3, [r5, #2]
    1a7a:	4e0f      	ldr	r6, [pc, #60]	; (1ab8 <_i2c_m_sync_transfer+0x530>)
    1a7c:	4033      	ands	r3, r6
    1a7e:	806b      	strh	r3, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    1a80:	4663      	mov	r3, ip
    1a82:	4018      	ands	r0, r3
			return I2C_ERR_BAD_ADDRESS;
    1a84:	4246      	negs	r6, r0
    1a86:	4146      	adcs	r6, r0
    1a88:	1f73      	subs	r3, r6, #5
    1a8a:	9301      	str	r3, [sp, #4]
    1a8c:	e794      	b.n	19b8 <_i2c_m_sync_transfer+0x430>
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1a8e:	2b01      	cmp	r3, #1
    1a90:	d000      	beq.n	1a94 <_i2c_m_sync_transfer+0x50c>
    1a92:	e784      	b.n	199e <_i2c_m_sync_transfer+0x416>
    1a94:	2f00      	cmp	r7, #0
    1a96:	d100      	bne.n	1a9a <_i2c_m_sync_transfer+0x512>
    1a98:	e781      	b.n	199e <_i2c_m_sync_transfer+0x416>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1a9a:	6860      	ldr	r0, [r4, #4]
    1a9c:	2380      	movs	r3, #128	; 0x80
    1a9e:	02db      	lsls	r3, r3, #11
    1aa0:	4303      	orrs	r3, r0
    1aa2:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1aa4:	69e3      	ldr	r3, [r4, #28]
    1aa6:	421a      	tst	r2, r3
    1aa8:	d1fc      	bne.n	1aa4 <_i2c_m_sync_transfer+0x51c>
			if (msg->len == 0) {
    1aaa:	686b      	ldr	r3, [r5, #4]
    1aac:	2b00      	cmp	r3, #0
    1aae:	d100      	bne.n	1ab2 <_i2c_m_sync_transfer+0x52a>
    1ab0:	e76d      	b.n	198e <_i2c_m_sync_transfer+0x406>
    1ab2:	e774      	b.n	199e <_i2c_m_sync_transfer+0x416>
    1ab4:	fffffbff 	.word	0xfffffbff
    1ab8:	fffffeff 	.word	0xfffffeff
    1abc:	0000ffff 	.word	0x0000ffff

00001ac0 <_slcd_sync_set_segment>:
	return ERR_NONE;
}

static int32_t _slcd_sync_set_segment(struct _slcd_sync_device *dev, const uint32_t com, const uint32_t seg,
                                      const bool on)
{
    1ac0:	b510      	push	{r4, lr}
	if ((SLCD_COMNUM(seg) >= CONF_SLCD_COM_NUM) || (SLCD_SEGNUM(seg) >= CONF_SLCD_SEG_NUM)) {
    1ac2:	0214      	lsls	r4, r2, #8
    1ac4:	0e24      	lsrs	r4, r4, #24
    1ac6:	2c04      	cmp	r4, #4
    1ac8:	d82d      	bhi.n	1b26 <_slcd_sync_set_segment+0x66>
    1aca:	24ff      	movs	r4, #255	; 0xff
    1acc:	4014      	ands	r4, r2
    1ace:	2c17      	cmp	r4, #23
    1ad0:	d82c      	bhi.n	1b2c <_slcd_sync_set_segment+0x6c>
		return ERR_INVALID_ARG;
	}
	/* Use register instead hri interface to optimization code */
	if (on) {
    1ad2:	2b00      	cmp	r3, #0
    1ad4:	d012      	beq.n	1afc <_slcd_sync_set_segment+0x3c>
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
    1ad6:	0954      	lsrs	r4, r2, #5
    1ad8:	6803      	ldr	r3, [r0, #0]
    1ada:	3324      	adds	r3, #36	; 0x24
    1adc:	0049      	lsls	r1, r1, #1
    1ade:	1909      	adds	r1, r1, r4
    1ae0:	0089      	lsls	r1, r1, #2
		    |= (seg < 32) ? (1 << seg) : (1 << (seg >> 5));
    1ae2:	1859      	adds	r1, r3, r1
    1ae4:	6808      	ldr	r0, [r1, #0]
    1ae6:	2a1f      	cmp	r2, #31
    1ae8:	d805      	bhi.n	1af6 <_slcd_sync_set_segment+0x36>
    1aea:	2301      	movs	r3, #1
    1aec:	4093      	lsls	r3, r2
    1aee:	4303      	orrs	r3, r0
    1af0:	600b      	str	r3, [r1, #0]
	} else {
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
	}

	return ERR_NONE;
    1af2:	2000      	movs	r0, #0
}
    1af4:	bd10      	pop	{r4, pc}
		    |= (seg < 32) ? (1 << seg) : (1 << (seg >> 5));
    1af6:	2301      	movs	r3, #1
    1af8:	40a3      	lsls	r3, r4
    1afa:	e7f8      	b.n	1aee <_slcd_sync_set_segment+0x2e>
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
    1afc:	0954      	lsrs	r4, r2, #5
    1afe:	6803      	ldr	r3, [r0, #0]
    1b00:	3324      	adds	r3, #36	; 0x24
    1b02:	0049      	lsls	r1, r1, #1
    1b04:	1909      	adds	r1, r1, r4
    1b06:	0089      	lsls	r1, r1, #2
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
    1b08:	1859      	adds	r1, r3, r1
    1b0a:	6808      	ldr	r0, [r1, #0]
    1b0c:	2a1f      	cmp	r2, #31
    1b0e:	d806      	bhi.n	1b1e <_slcd_sync_set_segment+0x5e>
    1b10:	2301      	movs	r3, #1
    1b12:	4093      	lsls	r3, r2
    1b14:	43db      	mvns	r3, r3
    1b16:	4003      	ands	r3, r0
    1b18:	600b      	str	r3, [r1, #0]
	return ERR_NONE;
    1b1a:	2000      	movs	r0, #0
    1b1c:	e7ea      	b.n	1af4 <_slcd_sync_set_segment+0x34>
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
    1b1e:	2201      	movs	r2, #1
    1b20:	40a2      	lsls	r2, r4
    1b22:	43d3      	mvns	r3, r2
    1b24:	e7f7      	b.n	1b16 <_slcd_sync_set_segment+0x56>
		return ERR_INVALID_ARG;
    1b26:	200d      	movs	r0, #13
    1b28:	4240      	negs	r0, r0
    1b2a:	e7e3      	b.n	1af4 <_slcd_sync_set_segment+0x34>
    1b2c:	200d      	movs	r0, #13
    1b2e:	4240      	negs	r0, r0
    1b30:	e7e0      	b.n	1af4 <_slcd_sync_set_segment+0x34>
	...

00001b34 <_slcd_sync_init>:
	};
}

static inline bool hri_slcd_is_syncing(const void *const hw, hri_slcd_syncbusy_reg_t reg)
{
	return ((Slcd *)hw)->SYNCBUSY.reg & reg;
    1b34:	694b      	ldr	r3, [r1, #20]
	if (!hri_slcd_is_syncing(hw, SLCD_SYNCBUSY_SWRST)) {
    1b36:	07db      	lsls	r3, r3, #31
    1b38:	d418      	bmi.n	1b6c <_slcd_sync_init+0x38>
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b3a:	2203      	movs	r2, #3
    1b3c:	694b      	ldr	r3, [r1, #20]
    1b3e:	421a      	tst	r2, r3
    1b40:	d1fc      	bne.n	1b3c <_slcd_sync_init+0x8>

static inline bool hri_slcd_get_CTRLA_ENABLE_bit(const void *const hw)
{
	uint32_t tmp;
	hri_slcd_wait_for_sync(hw, SLCD_SYNCBUSY_SWRST | SLCD_SYNCBUSY_ENABLE);
	tmp = ((Slcd *)hw)->CTRLA.reg;
    1b42:	680b      	ldr	r3, [r1, #0]
		if (hri_slcd_get_CTRLA_ENABLE_bit(hw)) {
    1b44:	079b      	lsls	r3, r3, #30
    1b46:	d50b      	bpl.n	1b60 <_slcd_sync_init+0x2c>
}

static inline void hri_slcd_clear_CTRLA_ENABLE_bit(const void *const hw)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1b48:	680b      	ldr	r3, [r1, #0]
    1b4a:	2202      	movs	r2, #2
    1b4c:	4393      	bics	r3, r2
    1b4e:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b50:	3201      	adds	r2, #1
    1b52:	694b      	ldr	r3, [r1, #20]
    1b54:	421a      	tst	r2, r3
    1b56:	d1fc      	bne.n	1b52 <_slcd_sync_init+0x1e>
    1b58:	2202      	movs	r2, #2
    1b5a:	694b      	ldr	r3, [r1, #20]
    1b5c:	421a      	tst	r2, r3
    1b5e:	d1fc      	bne.n	1b5a <_slcd_sync_init+0x26>
}

static inline void hri_slcd_write_CTRLA_reg(const void *const hw, hri_slcd_ctrla_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLA.reg = data;
    1b60:	2301      	movs	r3, #1
    1b62:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b64:	2203      	movs	r2, #3
    1b66:	694b      	ldr	r3, [r1, #20]
    1b68:	421a      	tst	r2, r3
    1b6a:	d1fc      	bne.n	1b66 <_slcd_sync_init+0x32>
    1b6c:	2201      	movs	r2, #1
    1b6e:	694b      	ldr	r3, [r1, #20]
    1b70:	421a      	tst	r2, r3
    1b72:	d1fc      	bne.n	1b6e <_slcd_sync_init+0x3a>
	dev->hw = hw;
    1b74:	6001      	str	r1, [r0, #0]
	((Slcd *)hw)->CTRLA.reg = data;
    1b76:	4b16      	ldr	r3, [pc, #88]	; (1bd0 <_slcd_sync_init+0x9c>)
    1b78:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b7a:	2203      	movs	r2, #3
    1b7c:	694b      	ldr	r3, [r1, #20]
    1b7e:	421a      	tst	r2, r3
    1b80:	d1fc      	bne.n	1b7c <_slcd_sync_init+0x48>
}

static inline void hri_slcd_write_CTRLB_reg(const void *const hw, hri_slcd_ctrlb_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLB.reg = data;
    1b82:	2381      	movs	r3, #129	; 0x81
    1b84:	808b      	strh	r3, [r1, #4]
}

static inline void hri_slcd_write_CTRLC_reg(const void *const hw, hri_slcd_ctrlc_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLC.reg = data;
    1b86:	3b01      	subs	r3, #1
    1b88:	80cb      	strh	r3, [r1, #6]
}

static inline void hri_slcd_write_CTRLD_reg(const void *const hw, hri_slcd_ctrld_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLD.reg = data;
    1b8a:	720b      	strb	r3, [r1, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b8c:	2207      	movs	r2, #7
    1b8e:	694b      	ldr	r3, [r1, #20]
    1b90:	421a      	tst	r2, r3
    1b92:	d1fc      	bne.n	1b8e <_slcd_sync_init+0x5a>
}

static inline void hri_slcd_write_LPENL_reg(const void *const hw, hri_slcd_lpenl_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->LPENL.reg = data;
    1b94:	4b0f      	ldr	r3, [pc, #60]	; (1bd4 <_slcd_sync_init+0xa0>)
    1b96:	61cb      	str	r3, [r1, #28]
}

static inline void hri_slcd_write_LPENH_reg(const void *const hw, hri_slcd_lpenh_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->LPENH.reg = data;
    1b98:	23ff      	movs	r3, #255	; 0xff
    1b9a:	011b      	lsls	r3, r3, #4
    1b9c:	620b      	str	r3, [r1, #32]
}

static inline void hri_slcd_write_SDATAL0_reg(const void *const hw, hri_slcd_sdatal0_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL0.reg = data;
    1b9e:	2300      	movs	r3, #0
    1ba0:	624b      	str	r3, [r1, #36]	; 0x24
}

static inline void hri_slcd_write_SDATAH0_reg(const void *const hw, hri_slcd_sdatah0_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH0.reg = data;
    1ba2:	628b      	str	r3, [r1, #40]	; 0x28
}

static inline void hri_slcd_write_SDATAL1_reg(const void *const hw, hri_slcd_sdatal1_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL1.reg = data;
    1ba4:	62cb      	str	r3, [r1, #44]	; 0x2c
}

static inline void hri_slcd_write_SDATAH1_reg(const void *const hw, hri_slcd_sdatah1_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH1.reg = data;
    1ba6:	630b      	str	r3, [r1, #48]	; 0x30
}

static inline void hri_slcd_write_SDATAL2_reg(const void *const hw, hri_slcd_sdatal2_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL2.reg = data;
    1ba8:	634b      	str	r3, [r1, #52]	; 0x34
}

static inline void hri_slcd_write_SDATAH2_reg(const void *const hw, hri_slcd_sdatah2_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH2.reg = data;
    1baa:	638b      	str	r3, [r1, #56]	; 0x38
}

static inline void hri_slcd_write_SDATAL3_reg(const void *const hw, hri_slcd_sdatal3_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL3.reg = data;
    1bac:	63cb      	str	r3, [r1, #60]	; 0x3c
}

static inline void hri_slcd_write_SDATAH3_reg(const void *const hw, hri_slcd_sdatah3_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH3.reg = data;
    1bae:	640b      	str	r3, [r1, #64]	; 0x40
}

static inline void hri_slcd_write_SDATAL4_reg(const void *const hw, hri_slcd_sdatal4_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL4.reg = data;
    1bb0:	644b      	str	r3, [r1, #68]	; 0x44
}

static inline void hri_slcd_write_SDATAH4_reg(const void *const hw, hri_slcd_sdatah4_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH4.reg = data;
    1bb2:	648b      	str	r3, [r1, #72]	; 0x48
}

static inline void hri_slcd_write_SDATAL5_reg(const void *const hw, hri_slcd_sdatal5_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL5.reg = data;
    1bb4:	64cb      	str	r3, [r1, #76]	; 0x4c
}

static inline void hri_slcd_write_SDATAH5_reg(const void *const hw, hri_slcd_sdatah5_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH5.reg = data;
    1bb6:	650b      	str	r3, [r1, #80]	; 0x50
}

static inline void hri_slcd_write_SDATAL6_reg(const void *const hw, hri_slcd_sdatal6_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL6.reg = data;
    1bb8:	654b      	str	r3, [r1, #84]	; 0x54
}

static inline void hri_slcd_write_SDATAH6_reg(const void *const hw, hri_slcd_sdatah6_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH6.reg = data;
    1bba:	658b      	str	r3, [r1, #88]	; 0x58
}

static inline void hri_slcd_write_SDATAL7_reg(const void *const hw, hri_slcd_sdatal7_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL7.reg = data;
    1bbc:	65cb      	str	r3, [r1, #92]	; 0x5c
}

static inline void hri_slcd_write_SDATAH7_reg(const void *const hw, hri_slcd_sdatah7_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH7.reg = data;
    1bbe:	660b      	str	r3, [r1, #96]	; 0x60
	hri_slcd_set_BCFG_MODE_bit(dev->hw);
    1bc0:	6802      	ldr	r2, [r0, #0]
}

static inline void hri_slcd_set_BCFG_MODE_bit(const void *const hw)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_MODE;
    1bc2:	6e93      	ldr	r3, [r2, #104]	; 0x68
    1bc4:	2101      	movs	r1, #1
    1bc6:	430b      	orrs	r3, r1
    1bc8:	6693      	str	r3, [r2, #104]	; 0x68
}
    1bca:	2000      	movs	r0, #0
    1bcc:	4770      	bx	lr
    1bce:	46c0      	nop			; (mov r8, r8)
    1bd0:	00033014 	.word	0x00033014
    1bd4:	cfffffc0 	.word	0xcfffffc0

00001bd8 <_slcd_sync_enable>:
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1bd8:	6802      	ldr	r2, [r0, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1bda:	6813      	ldr	r3, [r2, #0]
    1bdc:	2102      	movs	r1, #2
    1bde:	430b      	orrs	r3, r1
    1be0:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1be2:	3101      	adds	r1, #1
    1be4:	6953      	ldr	r3, [r2, #20]
    1be6:	4219      	tst	r1, r3
    1be8:	d1fc      	bne.n	1be4 <_slcd_sync_enable+0xc>
}
    1bea:	2000      	movs	r0, #0
    1bec:	4770      	bx	lr
	...

00001bf0 <_slcd_sync_seg_on>:
{
    1bf0:	b510      	push	{r4, lr}
	return _slcd_sync_set_segment(dev, SLCD_COMNUM(seg), SLCD_SEGNUM(seg), true);
    1bf2:	23ff      	movs	r3, #255	; 0xff
    1bf4:	001a      	movs	r2, r3
    1bf6:	400a      	ands	r2, r1
    1bf8:	0c09      	lsrs	r1, r1, #16
    1bfa:	4019      	ands	r1, r3
    1bfc:	3bfe      	subs	r3, #254	; 0xfe
    1bfe:	4c01      	ldr	r4, [pc, #4]	; (1c04 <_slcd_sync_seg_on+0x14>)
    1c00:	47a0      	blx	r4
}
    1c02:	bd10      	pop	{r4, pc}
    1c04:	00001ac1 	.word	0x00001ac1

00001c08 <_slcd_sync_seg_blink>:
{
    1c08:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c0a:	46c6      	mov	lr, r8
    1c0c:	b500      	push	{lr}
    1c0e:	0004      	movs	r4, r0
	if ((SLCD_COMNUM(seg) >= CONF_SLCD_COM_NUM) || (SLCD_SEGNUM(seg) >= CONF_SLCD_SEG_NUM)) {
    1c10:	020d      	lsls	r5, r1, #8
    1c12:	0e2d      	lsrs	r5, r5, #24
    1c14:	2d04      	cmp	r5, #4
    1c16:	d900      	bls.n	1c1a <_slcd_sync_seg_blink+0x12>
    1c18:	e087      	b.n	1d2a <_slcd_sync_seg_blink+0x122>
    1c1a:	26ff      	movs	r6, #255	; 0xff
    1c1c:	400e      	ands	r6, r1
	if (SLCD_SEGNUM(seg) >= 2) {
    1c1e:	2e01      	cmp	r6, #1
    1c20:	d900      	bls.n	1c24 <_slcd_sync_seg_blink+0x1c>
    1c22:	e085      	b.n	1d30 <_slcd_sync_seg_blink+0x128>
	if (period > SLCD_FC_MAX_MS || period < SLCD_FC_MIN_MS) {
    1c24:	4945      	ldr	r1, [pc, #276]	; (1d3c <_slcd_sync_seg_blink+0x134>)
    1c26:	0013      	movs	r3, r2
    1c28:	3b0f      	subs	r3, #15
    1c2a:	428b      	cmp	r3, r1
    1c2c:	d900      	bls.n	1c30 <_slcd_sync_seg_blink+0x28>
    1c2e:	e082      	b.n	1d36 <_slcd_sync_seg_blink+0x12e>
	hri_slcd_clear_CTRLD_FC0EN_bit(dev->hw);
    1c30:	6801      	ldr	r1, [r0, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_FC0EN;
    1c32:	7a0b      	ldrb	r3, [r1, #8]
    1c34:	2010      	movs	r0, #16
    1c36:	4383      	bics	r3, r0
    1c38:	720b      	strb	r3, [r1, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c3a:	2707      	movs	r7, #7
    1c3c:	694b      	ldr	r3, [r1, #20]
    1c3e:	421f      	tst	r7, r3
    1c40:	d1fc      	bne.n	1c3c <_slcd_sync_seg_blink+0x34>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_CTRLD);
    1c42:	6827      	ldr	r7, [r4, #0]
    1c44:	2104      	movs	r1, #4
    1c46:	697b      	ldr	r3, [r7, #20]
    1c48:	4219      	tst	r1, r3
    1c4a:	d1fc      	bne.n	1c46 <_slcd_sync_seg_blink+0x3e>
	if (period <= SLCD_FC_BYPASS_MAX_MS) {
    1c4c:	23f0      	movs	r3, #240	; 0xf0
    1c4e:	005b      	lsls	r3, r3, #1
    1c50:	429a      	cmp	r2, r3
    1c52:	d853      	bhi.n	1cfc <_slcd_sync_seg_blink+0xf4>
	((Slcd *)hw)->FC0.reg |= mask;
    1c54:	7e38      	ldrb	r0, [r7, #24]
    1c56:	b2c3      	uxtb	r3, r0
    1c58:	4698      	mov	r8, r3
		hri_slcd_set_FC0_reg(dev->hw, SLCD_FC0_PB | ((period / (1000 / SLCD_FRAME_FREQUENCY)) - 1));
    1c5a:	210f      	movs	r1, #15
    1c5c:	0010      	movs	r0, r2
    1c5e:	4b38      	ldr	r3, [pc, #224]	; (1d40 <_slcd_sync_seg_blink+0x138>)
    1c60:	4798      	blx	r3
    1c62:	1e43      	subs	r3, r0, #1
    1c64:	2080      	movs	r0, #128	; 0x80
    1c66:	4240      	negs	r0, r0
    1c68:	4642      	mov	r2, r8
    1c6a:	4310      	orrs	r0, r2
    1c6c:	4303      	orrs	r3, r0
    1c6e:	b2db      	uxtb	r3, r3
    1c70:	763b      	strb	r3, [r7, #24]
	hri_slcd_set_CTRLD_FC0EN_bit(dev->hw);
    1c72:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_FC0EN;
    1c74:	7a13      	ldrb	r3, [r2, #8]
    1c76:	2110      	movs	r1, #16
    1c78:	430b      	orrs	r3, r1
    1c7a:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c7c:	3909      	subs	r1, #9
    1c7e:	6953      	ldr	r3, [r2, #20]
    1c80:	4219      	tst	r1, r3
    1c82:	d1fc      	bne.n	1c7e <_slcd_sync_seg_blink+0x76>
	_slcd_sync_set_segment(dev, SLCD_COMNUM(seg), SLCD_SEGNUM(seg), true);
    1c84:	2301      	movs	r3, #1
    1c86:	0032      	movs	r2, r6
    1c88:	0029      	movs	r1, r5
    1c8a:	0020      	movs	r0, r4
    1c8c:	4f2d      	ldr	r7, [pc, #180]	; (1d44 <_slcd_sync_seg_blink+0x13c>)
    1c8e:	47b8      	blx	r7
	hri_slcd_clear_CTRLD_BLINK_bit(dev->hw);
    1c90:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_BLINK;
    1c92:	7a13      	ldrb	r3, [r2, #8]
    1c94:	2102      	movs	r1, #2
    1c96:	438b      	bics	r3, r1
    1c98:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c9a:	3105      	adds	r1, #5
    1c9c:	6953      	ldr	r3, [r2, #20]
    1c9e:	4219      	tst	r1, r3
    1ca0:	d1fc      	bne.n	1c9c <_slcd_sync_seg_blink+0x94>
	hri_slcd_clear_CTRLA_ENABLE_bit(dev->hw);
    1ca2:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1ca4:	6813      	ldr	r3, [r2, #0]
    1ca6:	2102      	movs	r1, #2
    1ca8:	438b      	bics	r3, r1
    1caa:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cac:	3101      	adds	r1, #1
    1cae:	6953      	ldr	r3, [r2, #20]
    1cb0:	4219      	tst	r1, r3
    1cb2:	d1fc      	bne.n	1cae <_slcd_sync_seg_blink+0xa6>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_ENABLE);
    1cb4:	6822      	ldr	r2, [r4, #0]
    1cb6:	2102      	movs	r1, #2
    1cb8:	6953      	ldr	r3, [r2, #20]
    1cba:	4219      	tst	r1, r3
    1cbc:	d1fc      	bne.n	1cb8 <_slcd_sync_seg_blink+0xb0>
	if (SLCD_SEGNUM(seg) == 0) {
    1cbe:	2e00      	cmp	r6, #0
    1cc0:	d129      	bne.n	1d16 <_slcd_sync_seg_blink+0x10e>
}

static inline void hri_slcd_set_BCFG_BSS0_bf(const void *const hw, hri_slcd_bcfg_reg_t mask)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_BSS0(mask);
    1cc2:	6e91      	ldr	r1, [r2, #104]	; 0x68
		hri_slcd_set_BCFG_BSS0_bf(dev->hw, 1 << SLCD_COMNUM(seg));
    1cc4:	2380      	movs	r3, #128	; 0x80
    1cc6:	045b      	lsls	r3, r3, #17
    1cc8:	40ab      	lsls	r3, r5
    1cca:	0c1b      	lsrs	r3, r3, #16
    1ccc:	430b      	orrs	r3, r1
    1cce:	6693      	str	r3, [r2, #104]	; 0x68
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1cd0:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1cd2:	6813      	ldr	r3, [r2, #0]
    1cd4:	2102      	movs	r1, #2
    1cd6:	430b      	orrs	r3, r1
    1cd8:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cda:	3101      	adds	r1, #1
    1cdc:	6953      	ldr	r3, [r2, #20]
    1cde:	4219      	tst	r1, r3
    1ce0:	d1fc      	bne.n	1cdc <_slcd_sync_seg_blink+0xd4>
	hri_slcd_set_CTRLD_BLINK_bit(dev->hw);
    1ce2:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_BLINK;
    1ce4:	7a13      	ldrb	r3, [r2, #8]
    1ce6:	2102      	movs	r1, #2
    1ce8:	430b      	orrs	r3, r1
    1cea:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cec:	3105      	adds	r1, #5
    1cee:	6953      	ldr	r3, [r2, #20]
    1cf0:	4219      	tst	r1, r3
    1cf2:	d1fc      	bne.n	1cee <_slcd_sync_seg_blink+0xe6>
	return ERR_NONE;
    1cf4:	2000      	movs	r0, #0
}
    1cf6:	bc04      	pop	{r2}
    1cf8:	4690      	mov	r8, r2
    1cfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((Slcd *)hw)->FC0.reg |= mask;
    1cfc:	7e3b      	ldrb	r3, [r7, #24]
    1cfe:	b2db      	uxtb	r3, r3
    1d00:	4698      	mov	r8, r3
		hri_slcd_set_FC0_reg(dev->hw, (((period / (1000 / SLCD_FRAME_FREQUENCY)) / 8 - 1)));
    1d02:	2178      	movs	r1, #120	; 0x78
    1d04:	0010      	movs	r0, r2
    1d06:	4b0e      	ldr	r3, [pc, #56]	; (1d40 <_slcd_sync_seg_blink+0x138>)
    1d08:	4798      	blx	r3
    1d0a:	3801      	subs	r0, #1
    1d0c:	4643      	mov	r3, r8
    1d0e:	4318      	orrs	r0, r3
    1d10:	b2c0      	uxtb	r0, r0
    1d12:	7638      	strb	r0, [r7, #24]
    1d14:	e7ad      	b.n	1c72 <_slcd_sync_seg_blink+0x6a>
}

static inline void hri_slcd_set_BCFG_BSS1_bf(const void *const hw, hri_slcd_bcfg_reg_t mask)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_BSS1(mask);
    1d16:	6e91      	ldr	r1, [r2, #104]	; 0x68
		hri_slcd_set_BCFG_BSS1_bf(dev->hw, 1 << SLCD_COMNUM(seg));
    1d18:	2380      	movs	r3, #128	; 0x80
    1d1a:	025b      	lsls	r3, r3, #9
    1d1c:	40ab      	lsls	r3, r5
    1d1e:	20ff      	movs	r0, #255	; 0xff
    1d20:	0400      	lsls	r0, r0, #16
    1d22:	4003      	ands	r3, r0
    1d24:	430b      	orrs	r3, r1
    1d26:	6693      	str	r3, [r2, #104]	; 0x68
    1d28:	e7d2      	b.n	1cd0 <_slcd_sync_seg_blink+0xc8>
		return ERR_INVALID_ARG;
    1d2a:	200d      	movs	r0, #13
    1d2c:	4240      	negs	r0, r0
    1d2e:	e7e2      	b.n	1cf6 <_slcd_sync_seg_blink+0xee>
		return ERR_INVALID_ARG;
    1d30:	200d      	movs	r0, #13
    1d32:	4240      	negs	r0, r0
    1d34:	e7df      	b.n	1cf6 <_slcd_sync_seg_blink+0xee>
		return ERR_INVALID_ARG;
    1d36:	200d      	movs	r0, #13
    1d38:	4240      	negs	r0, r0
    1d3a:	e7dc      	b.n	1cf6 <_slcd_sync_seg_blink+0xee>
    1d3c:	00000ef1 	.word	0x00000ef1
    1d40:	000028e9 	.word	0x000028e9
    1d44:	00001ac1 	.word	0x00001ac1

00001d48 <_slcd_sync_write_char>:
{
    1d48:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d4a:	46d6      	mov	lr, sl
    1d4c:	464f      	mov	r7, r9
    1d4e:	4646      	mov	r6, r8
    1d50:	b5c0      	push	{r6, r7, lr}
	if (cm_setting[index].size == 7) {
    1d52:	0094      	lsls	r4, r2, #2
    1d54:	4b3c      	ldr	r3, [pc, #240]	; (1e48 <_slcd_sync_write_char+0x100>)
    1d56:	191b      	adds	r3, r3, r4
    1d58:	78dd      	ldrb	r5, [r3, #3]
    1d5a:	2d07      	cmp	r5, #7
    1d5c:	d004      	beq.n	1d68 <_slcd_sync_write_char+0x20>
	} else if (cm_setting[index].size == 14) {
    1d5e:	2d0e      	cmp	r5, #14
    1d60:	d01a      	beq.n	1d98 <_slcd_sync_write_char+0x50>
		return ERR_INVALID_ARG;
    1d62:	200d      	movs	r0, #13
    1d64:	4240      	negs	r0, r0
    1d66:	e060      	b.n	1e2a <_slcd_sync_write_char+0xe2>
			if (cm7_lut[i].character == character) {
    1d68:	2900      	cmp	r1, #0
    1d6a:	d00d      	beq.n	1d88 <_slcd_sync_write_char+0x40>
    1d6c:	2301      	movs	r3, #1
    1d6e:	4f37      	ldr	r7, [pc, #220]	; (1e4c <_slcd_sync_write_char+0x104>)
    1d70:	2630      	movs	r6, #48	; 0x30
    1d72:	009c      	lsls	r4, r3, #2
    1d74:	193c      	adds	r4, r7, r4
    1d76:	5da4      	ldrb	r4, [r4, r6]
    1d78:	428c      	cmp	r4, r1
    1d7a:	d006      	beq.n	1d8a <_slcd_sync_write_char+0x42>
		for (i = 0; i<sizeof(cm7_lut)>> 2; i++) {
    1d7c:	3301      	adds	r3, #1
    1d7e:	2b11      	cmp	r3, #17
    1d80:	d1f7      	bne.n	1d72 <_slcd_sync_write_char+0x2a>
		return ERR_INVALID_ARG;
    1d82:	200d      	movs	r0, #13
    1d84:	4240      	negs	r0, r0
    1d86:	e050      	b.n	1e2a <_slcd_sync_write_char+0xe2>
			if (cm7_lut[i].character == character) {
    1d88:	2300      	movs	r3, #0
				data = cm7_lut[i].mapping;
    1d8a:	009b      	lsls	r3, r3, #2
    1d8c:	492f      	ldr	r1, [pc, #188]	; (1e4c <_slcd_sync_write_char+0x104>)
    1d8e:	18cb      	adds	r3, r1, r3
    1d90:	6b1c      	ldr	r4, [r3, #48]	; 0x30
    1d92:	0a23      	lsrs	r3, r4, #8
    1d94:	469c      	mov	ip, r3
				break;
    1d96:	e016      	b.n	1dc6 <_slcd_sync_write_char+0x7e>
			if (cm14_lut[i].character == character) {
    1d98:	2930      	cmp	r1, #48	; 0x30
    1d9a:	d00d      	beq.n	1db8 <_slcd_sync_write_char+0x70>
    1d9c:	2301      	movs	r3, #1
    1d9e:	4f2b      	ldr	r7, [pc, #172]	; (1e4c <_slcd_sync_write_char+0x104>)
    1da0:	2674      	movs	r6, #116	; 0x74
    1da2:	009c      	lsls	r4, r3, #2
    1da4:	193c      	adds	r4, r7, r4
    1da6:	5da4      	ldrb	r4, [r4, r6]
    1da8:	428c      	cmp	r4, r1
    1daa:	d006      	beq.n	1dba <_slcd_sync_write_char+0x72>
		for (i = 0; i<sizeof(cm14_lut)>> 2; i++) {
    1dac:	3301      	adds	r3, #1
    1dae:	2b33      	cmp	r3, #51	; 0x33
    1db0:	d1f7      	bne.n	1da2 <_slcd_sync_write_char+0x5a>
		return ERR_INVALID_ARG;
    1db2:	200d      	movs	r0, #13
    1db4:	4240      	negs	r0, r0
    1db6:	e038      	b.n	1e2a <_slcd_sync_write_char+0xe2>
			if (cm14_lut[i].character == character) {
    1db8:	2300      	movs	r3, #0
				data = cm14_lut[i].mapping;
    1dba:	009b      	lsls	r3, r3, #2
    1dbc:	4923      	ldr	r1, [pc, #140]	; (1e4c <_slcd_sync_write_char+0x104>)
    1dbe:	18cb      	adds	r3, r1, r3
    1dc0:	6f5c      	ldr	r4, [r3, #116]	; 0x74
    1dc2:	0a23      	lsrs	r3, r4, #8
    1dc4:	469c      	mov	ip, r3

static inline void hri_slcd_write_CMCFG_NSEG_bf(const void *const hw, hri_slcd_cmcfg_reg_t data)
{
	uint8_t tmp;
	SLCD_CRITICAL_SECTION_ENTER();
	tmp = ((Slcd *)hw)->CMCFG.reg;
    1dc6:	2470      	movs	r4, #112	; 0x70
    1dc8:	6803      	ldr	r3, [r0, #0]
    1dca:	5d1b      	ldrb	r3, [r3, r4]
	tmp &= ~SLCD_CMCFG_NSEG_Msk;
    1dcc:	2607      	movs	r6, #7
    1dce:	43b3      	bics	r3, r6
	hri_slcd_write_CMCFG_NSEG_bf(dev->hw, cm_setting[index].nseg);
    1dd0:	491d      	ldr	r1, [pc, #116]	; (1e48 <_slcd_sync_write_char+0x100>)
    1dd2:	468a      	mov	sl, r1
    1dd4:	0092      	lsls	r2, r2, #2
    1dd6:	188f      	adds	r7, r1, r2
	tmp |= SLCD_CMCFG_NSEG(data);
    1dd8:	78be      	ldrb	r6, [r7, #2]
    1dda:	46b1      	mov	r9, r6
    1ddc:	2607      	movs	r6, #7
    1dde:	4649      	mov	r1, r9
    1de0:	400e      	ands	r6, r1
    1de2:	4333      	orrs	r3, r6
	((Slcd *)hw)->CMCFG.reg = tmp;
    1de4:	6801      	ldr	r1, [r0, #0]
    1de6:	550b      	strb	r3, [r1, r4]
	hri_slcd_write_CMINDEX_CINDEX_bf(dev->hw, cm_setting[index].com_index);
    1de8:	6804      	ldr	r4, [r0, #0]

static inline void hri_slcd_write_CMINDEX_CINDEX_bf(const void *const hw, hri_slcd_cmindex_reg_t data)
{
	uint16_t tmp;
	SLCD_CRITICAL_SECTION_ENTER();
	tmp = ((Slcd *)hw)->CMINDEX.reg;
    1dea:	2684      	movs	r6, #132	; 0x84
    1dec:	5ba3      	ldrh	r3, [r4, r6]
	tmp &= ~SLCD_CMINDEX_CINDEX_Msk;
    1dee:	4918      	ldr	r1, [pc, #96]	; (1e50 <_slcd_sync_write_char+0x108>)
    1df0:	400b      	ands	r3, r1
    1df2:	4651      	mov	r1, sl
    1df4:	5c52      	ldrb	r2, [r2, r1]
	tmp |= SLCD_CMINDEX_CINDEX(data);
    1df6:	0212      	lsls	r2, r2, #8
    1df8:	21e0      	movs	r1, #224	; 0xe0
    1dfa:	00c9      	lsls	r1, r1, #3
    1dfc:	400a      	ands	r2, r1
    1dfe:	4313      	orrs	r3, r2
	((Slcd *)hw)->CMINDEX.reg = tmp;
    1e00:	53a3      	strh	r3, [r4, r6]
	hri_slcd_write_CMINDEX_SINDEX_bf(dev->hw, cm_setting[index].seg_index);
    1e02:	6802      	ldr	r2, [r0, #0]
	tmp = ((Slcd *)hw)->CMINDEX.reg;
    1e04:	5b93      	ldrh	r3, [r2, r6]
	tmp &= ~SLCD_CMINDEX_SINDEX_Msk;
    1e06:	213f      	movs	r1, #63	; 0x3f
    1e08:	438b      	bics	r3, r1
	tmp |= SLCD_CMINDEX_SINDEX(data);
    1e0a:	787f      	ldrb	r7, [r7, #1]
    1e0c:	4039      	ands	r1, r7
    1e0e:	430b      	orrs	r3, r1
	((Slcd *)hw)->CMINDEX.reg = tmp;
    1e10:	5393      	strh	r3, [r2, r6]
	if (cm_setting[index].size == 7) {
    1e12:	2d07      	cmp	r5, #7
    1e14:	d00e      	beq.n	1e34 <_slcd_sync_write_char+0xec>
	} else if (cm_setting[index].size == 14) {
    1e16:	2d0e      	cmp	r5, #14
    1e18:	d011      	beq.n	1e3e <_slcd_sync_write_char+0xf6>
	while (hri_slcd_get_STATUS_CMWRBUSY_bit(dev->hw))
    1e1a:	6802      	ldr	r2, [r0, #0]
    1e1c:	2108      	movs	r1, #8
	return (((Slcd *)hw)->STATUS.reg & SLCD_STATUS_CMWRBUSY) >> SLCD_STATUS_CMWRBUSY_Pos;
    1e1e:	7c13      	ldrb	r3, [r2, #16]
    1e20:	420b      	tst	r3, r1
    1e22:	d1fc      	bne.n	1e1e <_slcd_sync_write_char+0xd6>
}

static inline void hri_slcd_write_CMDATA_reg(const void *const hw, hri_slcd_cmdata_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CMDATA.reg = data;
    1e24:	4663      	mov	r3, ip
    1e26:	67d3      	str	r3, [r2, #124]	; 0x7c
	return ERR_NONE;
    1e28:	2000      	movs	r0, #0
}
    1e2a:	bc1c      	pop	{r2, r3, r4}
    1e2c:	4690      	mov	r8, r2
    1e2e:	4699      	mov	r9, r3
    1e30:	46a2      	mov	sl, r4
    1e32:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((Slcd *)hw)->CMDMASK.reg = data;
    1e34:	4a07      	ldr	r2, [pc, #28]	; (1e54 <_slcd_sync_write_char+0x10c>)
    1e36:	2380      	movs	r3, #128	; 0x80
    1e38:	6801      	ldr	r1, [r0, #0]
    1e3a:	50ca      	str	r2, [r1, r3]
    1e3c:	e7ed      	b.n	1e1a <_slcd_sync_write_char+0xd2>
    1e3e:	4a06      	ldr	r2, [pc, #24]	; (1e58 <_slcd_sync_write_char+0x110>)
    1e40:	2380      	movs	r3, #128	; 0x80
    1e42:	6801      	ldr	r1, [r0, #0]
    1e44:	50ca      	str	r2, [r1, r3]
    1e46:	e7e8      	b.n	1e1a <_slcd_sync_write_char+0xd2>
    1e48:	00009d5c 	.word	0x00009d5c
    1e4c:	00009ddc 	.word	0x00009ddc
    1e50:	fffff8ff 	.word	0xfffff8ff
    1e54:	00ffff80 	.word	0x00ffff80
    1e58:	00ffc000 	.word	0x00ffc000

00001e5c <_slcd_sync_set_animation_period>:
{
    1e5c:	b570      	push	{r4, r5, r6, lr}
    1e5e:	0005      	movs	r5, r0
    1e60:	0008      	movs	r0, r1
	hri_slcd_clear_CTRLD_FC1EN_bit(dev->hw);
    1e62:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_FC1EN;
    1e64:	7a13      	ldrb	r3, [r2, #8]
    1e66:	2120      	movs	r1, #32
    1e68:	438b      	bics	r3, r1
    1e6a:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1e6c:	3919      	subs	r1, #25
    1e6e:	6953      	ldr	r3, [r2, #20]
    1e70:	4219      	tst	r1, r3
    1e72:	d1fc      	bne.n	1e6e <_slcd_sync_set_animation_period+0x12>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_CTRLD);
    1e74:	682c      	ldr	r4, [r5, #0]
    1e76:	2204      	movs	r2, #4
    1e78:	6963      	ldr	r3, [r4, #20]
    1e7a:	421a      	tst	r2, r3
    1e7c:	d1fc      	bne.n	1e78 <_slcd_sync_set_animation_period+0x1c>
	if (period <= SLCD_FC_BYPASS_MAX_MS) {
    1e7e:	23f0      	movs	r3, #240	; 0xf0
    1e80:	005b      	lsls	r3, r3, #1
    1e82:	4298      	cmp	r0, r3
    1e84:	d816      	bhi.n	1eb4 <_slcd_sync_set_animation_period+0x58>
	((Slcd *)hw)->FC1.reg |= mask;
    1e86:	7e66      	ldrb	r6, [r4, #25]
    1e88:	b2f6      	uxtb	r6, r6
		hri_slcd_set_FC1_reg(dev->hw, SLCD_FC1_PB | ((period / (1000 / SLCD_FRAME_FREQUENCY)) - 1));
    1e8a:	210f      	movs	r1, #15
    1e8c:	4b0e      	ldr	r3, [pc, #56]	; (1ec8 <_slcd_sync_set_animation_period+0x6c>)
    1e8e:	4798      	blx	r3
    1e90:	3801      	subs	r0, #1
    1e92:	4306      	orrs	r6, r0
    1e94:	2380      	movs	r3, #128	; 0x80
    1e96:	425b      	negs	r3, r3
    1e98:	4333      	orrs	r3, r6
    1e9a:	b2db      	uxtb	r3, r3
    1e9c:	7663      	strb	r3, [r4, #25]
	hri_slcd_set_CTRLD_FC1EN_bit(dev->hw);
    1e9e:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_FC1EN;
    1ea0:	7a13      	ldrb	r3, [r2, #8]
    1ea2:	2120      	movs	r1, #32
    1ea4:	430b      	orrs	r3, r1
    1ea6:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1ea8:	3919      	subs	r1, #25
    1eaa:	6953      	ldr	r3, [r2, #20]
    1eac:	4219      	tst	r1, r3
    1eae:	d1fc      	bne.n	1eaa <_slcd_sync_set_animation_period+0x4e>
}
    1eb0:	2000      	movs	r0, #0
    1eb2:	bd70      	pop	{r4, r5, r6, pc}
	((Slcd *)hw)->FC1.reg |= mask;
    1eb4:	7e66      	ldrb	r6, [r4, #25]
    1eb6:	b2f6      	uxtb	r6, r6
		hri_slcd_set_FC1_reg(dev->hw, (((period / (1000 / SLCD_FRAME_FREQUENCY)) / 8 - 1)));
    1eb8:	2178      	movs	r1, #120	; 0x78
    1eba:	4b03      	ldr	r3, [pc, #12]	; (1ec8 <_slcd_sync_set_animation_period+0x6c>)
    1ebc:	4798      	blx	r3
    1ebe:	3801      	subs	r0, #1
    1ec0:	4306      	orrs	r6, r0
    1ec2:	b2f6      	uxtb	r6, r6
    1ec4:	7666      	strb	r6, [r4, #25]
    1ec6:	e7ea      	b.n	1e9e <_slcd_sync_set_animation_period+0x42>
    1ec8:	000028e9 	.word	0x000028e9

00001ecc <_slcd_sync_start_animation>:
{
    1ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1ece:	46ce      	mov	lr, r9
    1ed0:	4647      	mov	r7, r8
    1ed2:	b580      	push	{r7, lr}
    1ed4:	0005      	movs	r5, r0
    1ed6:	000e      	movs	r6, r1
    1ed8:	0014      	movs	r4, r2
	if (len > 16) {
    1eda:	2a10      	cmp	r2, #16
    1edc:	d900      	bls.n	1ee0 <_slcd_sync_start_animation+0x14>
    1ede:	e08e      	b.n	1ffe <_slcd_sync_start_animation+0x132>
	for (i = 0; i < len; i++) {
    1ee0:	2a00      	cmp	r2, #0
    1ee2:	d012      	beq.n	1f0a <_slcd_sync_start_animation+0x3e>
		if ((SLCD_SEGNUM(segs[i]) != 2 && SLCD_SEGNUM(segs[i]) != 3)) {
    1ee4:	780a      	ldrb	r2, [r1, #0]
    1ee6:	3a02      	subs	r2, #2
    1ee8:	2a01      	cmp	r2, #1
    1eea:	d900      	bls.n	1eee <_slcd_sync_start_animation+0x22>
    1eec:	e08a      	b.n	2004 <STACK_SIZE+0x4>
    1eee:	1d08      	adds	r0, r1, #4
    1ef0:	00a1      	lsls	r1, r4, #2
    1ef2:	1871      	adds	r1, r6, r1
    1ef4:	27ff      	movs	r7, #255	; 0xff
	for (i = 0; i < len; i++) {
    1ef6:	4288      	cmp	r0, r1
    1ef8:	d007      	beq.n	1f0a <_slcd_sync_start_animation+0x3e>
		if ((SLCD_SEGNUM(segs[i]) != 2 && SLCD_SEGNUM(segs[i]) != 3)) {
    1efa:	c804      	ldmia	r0!, {r2}
    1efc:	403a      	ands	r2, r7
    1efe:	3a02      	subs	r2, #2
    1f00:	2a01      	cmp	r2, #1
    1f02:	d9f8      	bls.n	1ef6 <_slcd_sync_start_animation+0x2a>
			return ERR_INVALID_ARG;
    1f04:	200d      	movs	r0, #13
    1f06:	4240      	negs	r0, r0
    1f08:	e075      	b.n	1ff6 <_slcd_sync_start_animation+0x12a>
	if (period > SLCD_FC_MAX_MS || period < SLCD_FC_MIN_MS) {
    1f0a:	4941      	ldr	r1, [pc, #260]	; (2010 <STACK_SIZE+0x10>)
    1f0c:	001a      	movs	r2, r3
    1f0e:	3a0f      	subs	r2, #15
    1f10:	428a      	cmp	r2, r1
    1f12:	d900      	bls.n	1f16 <_slcd_sync_start_animation+0x4a>
    1f14:	e079      	b.n	200a <STACK_SIZE+0xa>
	_slcd_sync_set_animation_period(dev, period);
    1f16:	0019      	movs	r1, r3
    1f18:	0028      	movs	r0, r5
    1f1a:	4b3e      	ldr	r3, [pc, #248]	; (2014 <STACK_SIZE+0x14>)
    1f1c:	4798      	blx	r3
	hri_slcd_clear_CTRLA_ENABLE_bit(dev->hw);
    1f1e:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1f20:	6813      	ldr	r3, [r2, #0]
    1f22:	2102      	movs	r1, #2
    1f24:	438b      	bics	r3, r1
    1f26:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1f28:	3101      	adds	r1, #1
    1f2a:	6953      	ldr	r3, [r2, #20]
    1f2c:	4219      	tst	r1, r3
    1f2e:	d1fc      	bne.n	1f2a <_slcd_sync_start_animation+0x5e>
	hri_slcd_clear_CTRLD_CSREN_bit(dev->hw);
    1f30:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_CSREN;
    1f32:	7a13      	ldrb	r3, [r2, #8]
    1f34:	2104      	movs	r1, #4
    1f36:	438b      	bics	r3, r1
    1f38:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1f3a:	3103      	adds	r1, #3
    1f3c:	6953      	ldr	r3, [r2, #20]
    1f3e:	4219      	tst	r1, r3
    1f40:	d1fc      	bne.n	1f3c <_slcd_sync_start_animation+0x70>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_ENABLE | SLCD_SYNCBUSY_CTRLD);
    1f42:	682a      	ldr	r2, [r5, #0]
    1f44:	2106      	movs	r1, #6
    1f46:	6953      	ldr	r3, [r2, #20]
    1f48:	4219      	tst	r1, r3
    1f4a:	d1fc      	bne.n	1f46 <_slcd_sync_start_animation+0x7a>
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_FCS(mask);
    1f4c:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
    1f4e:	2102      	movs	r1, #2
    1f50:	430b      	orrs	r3, r1
    1f52:	66d3      	str	r3, [r2, #108]	; 0x6c
	hri_slcd_write_CSRCFG_DATA_bf(dev->hw, 0);
    1f54:	682a      	ldr	r2, [r5, #0]
	tmp = ((Slcd *)hw)->CSRCFG.reg;
    1f56:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
	tmp &= ~SLCD_CSRCFG_DATA_Msk;
    1f58:	492f      	ldr	r1, [pc, #188]	; (2018 <STACK_SIZE+0x18>)
    1f5a:	400b      	ands	r3, r1
	((Slcd *)hw)->CSRCFG.reg = tmp;
    1f5c:	66d3      	str	r3, [r2, #108]	; 0x6c
	for (i = 0; i < len; i++) {
    1f5e:	2c00      	cmp	r4, #0
    1f60:	d029      	beq.n	1fb6 <_slcd_sync_start_animation+0xea>
    1f62:	0030      	movs	r0, r6
    1f64:	00a4      	lsls	r4, r4, #2
    1f66:	1931      	adds	r1, r6, r4
    1f68:	2400      	movs	r4, #0
		hri_slcd_set_CSRCFG_DATA_bf(dev->hw, (1 << ((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2))));
    1f6a:	26ff      	movs	r6, #255	; 0xff
    1f6c:	2301      	movs	r3, #1
    1f6e:	469c      	mov	ip, r3
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_DATA(mask);
    1f70:	4b2a      	ldr	r3, [pc, #168]	; (201c <STACK_SIZE+0x1c>)
    1f72:	4698      	mov	r8, r3
    1f74:	e002      	b.n	1f7c <_slcd_sync_start_animation+0xb0>
    1f76:	3004      	adds	r0, #4
	for (i = 0; i < len; i++) {
    1f78:	4288      	cmp	r0, r1
    1f7a:	d01c      	beq.n	1fb6 <_slcd_sync_start_animation+0xea>
		hri_slcd_set_CSRCFG_DATA_bf(dev->hw, (1 << ((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2))));
    1f7c:	682f      	ldr	r7, [r5, #0]
    1f7e:	6802      	ldr	r2, [r0, #0]
    1f80:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    1f82:	4699      	mov	r9, r3
    1f84:	0c13      	lsrs	r3, r2, #16
    1f86:	4033      	ands	r3, r6
    1f88:	005b      	lsls	r3, r3, #1
    1f8a:	4032      	ands	r2, r6
    1f8c:	3a02      	subs	r2, #2
    1f8e:	189a      	adds	r2, r3, r2
    1f90:	4663      	mov	r3, ip
    1f92:	4093      	lsls	r3, r2
    1f94:	021b      	lsls	r3, r3, #8
    1f96:	4642      	mov	r2, r8
    1f98:	4013      	ands	r3, r2
    1f9a:	464a      	mov	r2, r9
    1f9c:	4313      	orrs	r3, r2
    1f9e:	66fb      	str	r3, [r7, #108]	; 0x6c
		if (((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2)) > csrlen) {
    1fa0:	6802      	ldr	r2, [r0, #0]
    1fa2:	0c13      	lsrs	r3, r2, #16
    1fa4:	4033      	ands	r3, r6
    1fa6:	005b      	lsls	r3, r3, #1
    1fa8:	4032      	ands	r2, r6
    1faa:	3a02      	subs	r2, #2
    1fac:	189b      	adds	r3, r3, r2
    1fae:	429c      	cmp	r4, r3
    1fb0:	d2e1      	bcs.n	1f76 <_slcd_sync_start_animation+0xaa>
    1fb2:	001c      	movs	r4, r3
    1fb4:	e7df      	b.n	1f76 <_slcd_sync_start_animation+0xaa>
	hri_slcd_set_CSRCFG_SIZE_bf(dev->hw, csrlen + 1);
    1fb6:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_SIZE(mask);
    1fb8:	6ed1      	ldr	r1, [r2, #108]	; 0x6c
    1fba:	3401      	adds	r4, #1
    1fbc:	0124      	lsls	r4, r4, #4
    1fbe:	23ff      	movs	r3, #255	; 0xff
    1fc0:	401c      	ands	r4, r3
    1fc2:	430c      	orrs	r4, r1
    1fc4:	66d4      	str	r4, [r2, #108]	; 0x6c
	hri_slcd_set_BCFG_MODE_bit(dev->hw);
    1fc6:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_MODE;
    1fc8:	6e93      	ldr	r3, [r2, #104]	; 0x68
    1fca:	2101      	movs	r1, #1
    1fcc:	430b      	orrs	r3, r1
    1fce:	6693      	str	r3, [r2, #104]	; 0x68
	hri_slcd_set_CTRLD_CSREN_bit(dev->hw);
    1fd0:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_CSREN;
    1fd2:	7a13      	ldrb	r3, [r2, #8]
    1fd4:	3103      	adds	r1, #3
    1fd6:	430b      	orrs	r3, r1
    1fd8:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1fda:	3103      	adds	r1, #3
    1fdc:	6953      	ldr	r3, [r2, #20]
    1fde:	4219      	tst	r1, r3
    1fe0:	d1fc      	bne.n	1fdc <_slcd_sync_start_animation+0x110>
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1fe2:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1fe4:	6813      	ldr	r3, [r2, #0]
    1fe6:	2102      	movs	r1, #2
    1fe8:	430b      	orrs	r3, r1
    1fea:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1fec:	3101      	adds	r1, #1
    1fee:	6953      	ldr	r3, [r2, #20]
    1ff0:	4219      	tst	r1, r3
    1ff2:	d1fc      	bne.n	1fee <_slcd_sync_start_animation+0x122>
	return ERR_NONE;
    1ff4:	2000      	movs	r0, #0
}
    1ff6:	bc0c      	pop	{r2, r3}
    1ff8:	4690      	mov	r8, r2
    1ffa:	4699      	mov	r9, r3
    1ffc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return ERR_INVALID_ARG;
    1ffe:	200d      	movs	r0, #13
    2000:	4240      	negs	r0, r0
    2002:	e7f8      	b.n	1ff6 <_slcd_sync_start_animation+0x12a>
			return ERR_INVALID_ARG;
    2004:	200d      	movs	r0, #13
    2006:	4240      	negs	r0, r0
    2008:	e7f5      	b.n	1ff6 <_slcd_sync_start_animation+0x12a>
		return ERR_INVALID_ARG;
    200a:	200d      	movs	r0, #13
    200c:	4240      	negs	r0, r0
    200e:	e7f2      	b.n	1ff6 <_slcd_sync_start_animation+0x12a>
    2010:	00000ef1 	.word	0x00000ef1
    2014:	00001e5d 	.word	0x00001e5d
    2018:	ff0000ff 	.word	0xff0000ff
    201c:	00ffff00 	.word	0x00ffff00

00002020 <process_sample>:
  for (int i = 0; i < available; i++) {
    process_sample(adxl345);
  }
}

void process_sample(adxl345_t *adxl345) {
    2020:	b510      	push	{r4, lr}
    2022:	b084      	sub	sp, #16
  adxl345_sample_t sample;
  // adxl345_err_t err;

  adxl345_get_sample(adxl345, &sample);
    2024:	a901      	add	r1, sp, #4
    2026:	4b06      	ldr	r3, [pc, #24]	; (2040 <process_sample+0x20>)
    2028:	4798      	blx	r3
  s_samples_read += 1;
    202a:	4c06      	ldr	r4, [pc, #24]	; (2044 <process_sample+0x24>)
    202c:	6823      	ldr	r3, [r4, #0]
    202e:	3301      	adds	r3, #1
    2030:	6023      	str	r3, [r4, #0]
  s_total_x += sample.x;
    2032:	6861      	ldr	r1, [r4, #4]
    2034:	9801      	ldr	r0, [sp, #4]
    2036:	4b04      	ldr	r3, [pc, #16]	; (2048 <process_sample+0x28>)
    2038:	4798      	blx	r3
    203a:	6060      	str	r0, [r4, #4]
}
    203c:	b004      	add	sp, #16
    203e:	bd10      	pop	{r4, pc}
    2040:	0000021d 	.word	0x0000021d
    2044:	20000a4c 	.word	0x20000a4c
    2048:	00002bc1 	.word	0x00002bc1

0000204c <process_samples>:
void process_samples(adxl345_t *adxl345) {
    204c:	b5f0      	push	{r4, r5, r6, r7, lr}
    204e:	b083      	sub	sp, #12
    2050:	0006      	movs	r6, r0
  adxl345_get_fifo_status_reg(adxl345, &reg);
    2052:	466b      	mov	r3, sp
    2054:	1ddc      	adds	r4, r3, #7
    2056:	0021      	movs	r1, r4
    2058:	4b0a      	ldr	r3, [pc, #40]	; (2084 <process_samples+0x38>)
    205a:	4798      	blx	r3
  available = reg & 0x1f;
    205c:	7823      	ldrb	r3, [r4, #0]
    205e:	251f      	movs	r5, #31
    2060:	401d      	ands	r5, r3
  if (available > s_high_water) s_high_water = available;
    2062:	4b09      	ldr	r3, [pc, #36]	; (2088 <process_samples+0x3c>)
    2064:	7a1b      	ldrb	r3, [r3, #8]
    2066:	42ab      	cmp	r3, r5
    2068:	d201      	bcs.n	206e <process_samples+0x22>
    206a:	4b07      	ldr	r3, [pc, #28]	; (2088 <process_samples+0x3c>)
    206c:	721d      	strb	r5, [r3, #8]
  for (int i = 0; i < available; i++) {
    206e:	2d00      	cmp	r5, #0
    2070:	dd06      	ble.n	2080 <process_samples+0x34>
    2072:	2400      	movs	r4, #0
    process_sample(adxl345);
    2074:	4f05      	ldr	r7, [pc, #20]	; (208c <process_samples+0x40>)
    2076:	0030      	movs	r0, r6
    2078:	47b8      	blx	r7
  for (int i = 0; i < available; i++) {
    207a:	3401      	adds	r4, #1
    207c:	42ac      	cmp	r4, r5
    207e:	dbfa      	blt.n	2076 <process_samples+0x2a>
}
    2080:	b003      	add	sp, #12
    2082:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2084:	000001a9 	.word	0x000001a9
    2088:	20000a4c 	.word	0x20000a4c
    208c:	00002021 	.word	0x00002021

00002090 <main>:
int main(void) {
    2090:	b5f0      	push	{r4, r5, r6, r7, lr}
    2092:	b08f      	sub	sp, #60	; 0x3c
  atmel_start_init();
    2094:	4b58      	ldr	r3, [pc, #352]	; (21f8 <main+0x168>)
    2096:	4798      	blx	r3
  slcd_sync_enable(&SEGMENT_LCD_0);
    2098:	4c58      	ldr	r4, [pc, #352]	; (21fc <main+0x16c>)
    209a:	0020      	movs	r0, r4
    209c:	4b58      	ldr	r3, [pc, #352]	; (2200 <main+0x170>)
    209e:	4798      	blx	r3
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N0);
    20a0:	21c0      	movs	r1, #192	; 0xc0
    20a2:	0289      	lsls	r1, r1, #10
    20a4:	0020      	movs	r0, r4
    20a6:	4d57      	ldr	r5, [pc, #348]	; (2204 <main+0x174>)
    20a8:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N1);
    20aa:	2180      	movs	r1, #128	; 0x80
    20ac:	02c9      	lsls	r1, r1, #11
    20ae:	0020      	movs	r0, r4
    20b0:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N2);
    20b2:	21a0      	movs	r1, #160	; 0xa0
    20b4:	02c9      	lsls	r1, r1, #11
    20b6:	0020      	movs	r0, r4
    20b8:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N3);
    20ba:	21c0      	movs	r1, #192	; 0xc0
    20bc:	02c9      	lsls	r1, r1, #11
    20be:	0020      	movs	r0, r4
    20c0:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N4);
    20c2:	21e0      	movs	r1, #224	; 0xe0
    20c4:	02c9      	lsls	r1, r1, #11
    20c6:	0020      	movs	r0, r4
    20c8:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S0);
    20ca:	2115      	movs	r1, #21
    20cc:	0020      	movs	r0, r4
    20ce:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S1);
    20d0:	2114      	movs	r1, #20
    20d2:	0020      	movs	r0, r4
    20d4:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S2);
    20d6:	2113      	movs	r1, #19
    20d8:	0020      	movs	r0, r4
    20da:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S3);
    20dc:	2116      	movs	r1, #22
    20de:	0020      	movs	r0, r4
    20e0:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S4);
    20e2:	210e      	movs	r1, #14
    20e4:	0020      	movs	r0, r4
    20e6:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S5);
    20e8:	210d      	movs	r1, #13
    20ea:	0020      	movs	r0, r4
    20ec:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S6);
    20ee:	210f      	movs	r1, #15
    20f0:	0020      	movs	r0, r4
    20f2:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S7);
    20f4:	2117      	movs	r1, #23
    20f6:	0020      	movs	r0, r4
    20f8:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D01);
    20fa:	2110      	movs	r1, #16
    20fc:	0020      	movs	r0, r4
    20fe:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D02);
    2100:	2111      	movs	r1, #17
    2102:	0020      	movs	r0, r4
    2104:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D03);
    2106:	2112      	movs	r1, #18
    2108:	0020      	movs	r0, r4
    210a:	47a8      	blx	r5
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B0, 1000);
    210c:	25fa      	movs	r5, #250	; 0xfa
    210e:	00ad      	lsls	r5, r5, #2
    2110:	002a      	movs	r2, r5
    2112:	2180      	movs	r1, #128	; 0x80
    2114:	0249      	lsls	r1, r1, #9
    2116:	0020      	movs	r0, r4
    2118:	4e3b      	ldr	r6, [pc, #236]	; (2208 <main+0x178>)
    211a:	47b0      	blx	r6
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B1, 1000);
    211c:	002a      	movs	r2, r5
    211e:	2180      	movs	r1, #128	; 0x80
    2120:	0289      	lsls	r1, r1, #10
    2122:	0020      	movs	r0, r4
    2124:	47b0      	blx	r6
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B2, 1000);
    2126:	002a      	movs	r2, r5
    2128:	2100      	movs	r1, #0
    212a:	0020      	movs	r0, r4
    212c:	47b0      	blx	r6
  uint32_t segs[8] = {TSLCD_SEG_W0,  TSLCD_SEG_W1,  TSLCD_SEG_W2,
    212e:	a902      	add	r1, sp, #8
    2130:	4b36      	ldr	r3, [pc, #216]	; (220c <main+0x17c>)
    2132:	000a      	movs	r2, r1
    2134:	cbc1      	ldmia	r3!, {r0, r6, r7}
    2136:	c2c1      	stmia	r2!, {r0, r6, r7}
    2138:	cbc1      	ldmia	r3!, {r0, r6, r7}
    213a:	c2c1      	stmia	r2!, {r0, r6, r7}
    213c:	cb41      	ldmia	r3!, {r0, r6}
    213e:	c241      	stmia	r2!, {r0, r6}
  slcd_sync_start_animation(&SEGMENT_LCD_0, segs, 8, 1000);
    2140:	002b      	movs	r3, r5
    2142:	2208      	movs	r2, #8
    2144:	0020      	movs	r0, r4
    2146:	4d32      	ldr	r5, [pc, #200]	; (2210 <main+0x180>)
    2148:	47a8      	blx	r5
  slcd_sync_write_char(&SEGMENT_LCD_0, '0', 0);
    214a:	2200      	movs	r2, #0
    214c:	2130      	movs	r1, #48	; 0x30
    214e:	0020      	movs	r0, r4
    2150:	4d30      	ldr	r5, [pc, #192]	; (2214 <main+0x184>)
    2152:	47a8      	blx	r5
  slcd_sync_write_char(&SEGMENT_LCD_0, '1', 1);
    2154:	2201      	movs	r2, #1
    2156:	2131      	movs	r1, #49	; 0x31
    2158:	0020      	movs	r0, r4
    215a:	47a8      	blx	r5
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"234", 3, 2);
    215c:	2302      	movs	r3, #2
    215e:	2203      	movs	r2, #3
    2160:	492d      	ldr	r1, [pc, #180]	; (2218 <main+0x188>)
    2162:	0020      	movs	r0, r4
    2164:	4d2d      	ldr	r5, [pc, #180]	; (221c <main+0x18c>)
    2166:	47a8      	blx	r5
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"abcdefgh", 8, 5);
    2168:	2305      	movs	r3, #5
    216a:	2208      	movs	r2, #8
    216c:	492c      	ldr	r1, [pc, #176]	; (2220 <main+0x190>)
    216e:	0020      	movs	r0, r4
    2170:	47a8      	blx	r5
  err = adxl345_dev_init(&adxl345_dev, &ADXL345_0, ADXL345_I2C_PRIMARY_ADDRESS,
    2172:	2380      	movs	r3, #128	; 0x80
    2174:	011b      	lsls	r3, r3, #4
    2176:	2253      	movs	r2, #83	; 0x53
    2178:	492a      	ldr	r1, [pc, #168]	; (2224 <main+0x194>)
    217a:	a80a      	add	r0, sp, #40	; 0x28
    217c:	4c2a      	ldr	r4, [pc, #168]	; (2228 <main+0x198>)
    217e:	47a0      	blx	r4
    2180:	0001      	movs	r1, r0
  printf("adxl345_dev_init() => %d\n", err);
    2182:	482a      	ldr	r0, [pc, #168]	; (222c <main+0x19c>)
    2184:	4c2a      	ldr	r4, [pc, #168]	; (2230 <main+0x1a0>)
    2186:	47a0      	blx	r4
  err = adxl345_init(&adxl345, &adxl345_dev);
    2188:	a90a      	add	r1, sp, #40	; 0x28
    218a:	a80d      	add	r0, sp, #52	; 0x34
    218c:	4b29      	ldr	r3, [pc, #164]	; (2234 <main+0x1a4>)
    218e:	4798      	blx	r3
    2190:	0001      	movs	r1, r0
  printf("adxl345_init() => %d\n", err);
    2192:	4829      	ldr	r0, [pc, #164]	; (2238 <main+0x1a8>)
    2194:	47a0      	blx	r4
  err = adxl345_stop(&adxl345);
    2196:	a80d      	add	r0, sp, #52	; 0x34
    2198:	4b28      	ldr	r3, [pc, #160]	; (223c <main+0x1ac>)
    219a:	4798      	blx	r3
    219c:	0001      	movs	r1, r0
  printf("adxl345_stop() => %d\n", err);
    219e:	4828      	ldr	r0, [pc, #160]	; (2240 <main+0x1b0>)
    21a0:	47a0      	blx	r4
  err = adxl345_set_bw_rate_reg(&adxl345, ADXL345_RATE_400);
    21a2:	210c      	movs	r1, #12
    21a4:	a80d      	add	r0, sp, #52	; 0x34
    21a6:	4b27      	ldr	r3, [pc, #156]	; (2244 <main+0x1b4>)
    21a8:	4798      	blx	r3
    21aa:	0001      	movs	r1, r0
  printf("adxl345_set_bw_rate_reg() => %d\n", err);
    21ac:	4826      	ldr	r0, [pc, #152]	; (2248 <main+0x1b8>)
    21ae:	47a0      	blx	r4
  err = adxl345_set_fifo_ctl_reg(&adxl345, ADXL345_FIFO_MODE_ENABLE | 1);
    21b0:	2141      	movs	r1, #65	; 0x41
    21b2:	a80d      	add	r0, sp, #52	; 0x34
    21b4:	4b25      	ldr	r3, [pc, #148]	; (224c <main+0x1bc>)
    21b6:	4798      	blx	r3
    21b8:	0001      	movs	r1, r0
  printf("adxl345_set_fifo_ctl_reg() => %d\n", err);
    21ba:	4825      	ldr	r0, [pc, #148]	; (2250 <main+0x1c0>)
    21bc:	47a0      	blx	r4
  err = adxl345_start(&adxl345);
    21be:	a80d      	add	r0, sp, #52	; 0x34
    21c0:	4b24      	ldr	r3, [pc, #144]	; (2254 <main+0x1c4>)
    21c2:	4798      	blx	r3
    21c4:	0001      	movs	r1, r0
  printf("adxl345_start() => %d\n", err);
    21c6:	4824      	ldr	r0, [pc, #144]	; (2258 <main+0x1c8>)
    21c8:	47a0      	blx	r4
  s_high_water = 0;
    21ca:	4b24      	ldr	r3, [pc, #144]	; (225c <main+0x1cc>)
    21cc:	2200      	movs	r2, #0
    21ce:	721a      	strb	r2, [r3, #8]
  s_samples_read = 0;
    21d0:	601a      	str	r2, [r3, #0]
  s_total_x = 0.0;
    21d2:	2200      	movs	r2, #0
    21d4:	605a      	str	r2, [r3, #4]
    process_samples(&adxl345);
    21d6:	4e22      	ldr	r6, [pc, #136]	; (2260 <main+0x1d0>)
    printf("%d %5ld %f\n", s_high_water, s_samples_read, s_total_x);
    21d8:	001c      	movs	r4, r3
    process_samples(&adxl345);
    21da:	a80d      	add	r0, sp, #52	; 0x34
    21dc:	47b0      	blx	r6
    printf("%d %5ld %f\n", s_high_water, s_samples_read, s_total_x);
    21de:	6827      	ldr	r7, [r4, #0]
    21e0:	7a25      	ldrb	r5, [r4, #8]
    21e2:	6860      	ldr	r0, [r4, #4]
    21e4:	4b1f      	ldr	r3, [pc, #124]	; (2264 <main+0x1d4>)
    21e6:	4798      	blx	r3
    21e8:	9000      	str	r0, [sp, #0]
    21ea:	9101      	str	r1, [sp, #4]
    21ec:	003a      	movs	r2, r7
    21ee:	0029      	movs	r1, r5
    21f0:	481d      	ldr	r0, [pc, #116]	; (2268 <main+0x1d8>)
    21f2:	4b0f      	ldr	r3, [pc, #60]	; (2230 <main+0x1a0>)
    21f4:	4798      	blx	r3
    21f6:	e7f0      	b.n	21da <main+0x14a>
    21f8:	00000331 	.word	0x00000331
    21fc:	20000ae0 	.word	0x20000ae0
    2200:	00000af1 	.word	0x00000af1
    2204:	00000b19 	.word	0x00000b19
    2208:	00000b45 	.word	0x00000b45
    220c:	00009f1c 	.word	0x00009f1c
    2210:	00000c21 	.word	0x00000c21
    2214:	00000b7d 	.word	0x00000b7d
    2218:	00009f3c 	.word	0x00009f3c
    221c:	00000bad 	.word	0x00000bad
    2220:	00009f40 	.word	0x00009f40
    2224:	20000af0 	.word	0x20000af0
    2228:	000002a5 	.word	0x000002a5
    222c:	00009f4c 	.word	0x00009f4c
    2230:	000047bd 	.word	0x000047bd
    2234:	0000011d 	.word	0x0000011d
    2238:	00009f68 	.word	0x00009f68
    223c:	000001ed 	.word	0x000001ed
    2240:	00009f80 	.word	0x00009f80
    2244:	00000145 	.word	0x00000145
    2248:	00009f98 	.word	0x00009f98
    224c:	00000195 	.word	0x00000195
    2250:	00009fbc 	.word	0x00009fbc
    2254:	000001bd 	.word	0x000001bd
    2258:	00009fe0 	.word	0x00009fe0
    225c:	20000a4c 	.word	0x20000a4c
    2260:	0000204d 	.word	0x0000204d
    2264:	000041d5 	.word	0x000041d5
    2268:	00009ff8 	.word	0x00009ff8

0000226c <touch_timer_handler>:
Input  : none
Output : none
Notes  :
============================================================================*/
void touch_timer_handler(void)
{
    226c:	b510      	push	{r4, lr}
	/* Count complete - Measure touch sensors */
	time_to_measure_touch_flag = 1u;
    226e:	2201      	movs	r2, #1
    2270:	4b02      	ldr	r3, [pc, #8]	; (227c <touch_timer_handler+0x10>)
    2272:	705a      	strb	r2, [r3, #1]
	qtm_update_qtlib_timer(DEF_TOUCH_MEASUREMENT_PERIOD_MS);
    2274:	2014      	movs	r0, #20
    2276:	4b02      	ldr	r3, [pc, #8]	; (2280 <touch_timer_handler+0x14>)
    2278:	4798      	blx	r3
}
    227a:	bd10      	pop	{r4, pc}
    227c:	20000a58 	.word	0x20000a58
    2280:	00002431 	.word	0x00002431

00002284 <Timer_task_cb>:

void Timer_task_cb(const struct timer_task *const timer_task)
{
    2284:	b510      	push	{r4, lr}
	touch_timer_handler();
    2286:	4b01      	ldr	r3, [pc, #4]	; (228c <Timer_task_cb+0x8>)
    2288:	4798      	blx	r3
}
    228a:	bd10      	pop	{r4, pc}
    228c:	0000226d 	.word	0x0000226d

00002290 <touch_timer_config>:

void touch_timer_config(void)
{
    2290:	b510      	push	{r4, lr}
	static struct timer_task Timer_task;
#if (KRONO_GESTURE_ENABLE == 1u)
	Timer_task.interval = 1;
#else
	Timer_task.interval = DEF_TOUCH_MEASUREMENT_PERIOD_MS;
    2292:	4908      	ldr	r1, [pc, #32]	; (22b4 <touch_timer_config+0x24>)
    2294:	2314      	movs	r3, #20
    2296:	60cb      	str	r3, [r1, #12]
#endif
	Timer_task.cb   = Timer_task_cb;
    2298:	4b07      	ldr	r3, [pc, #28]	; (22b8 <touch_timer_config+0x28>)
    229a:	610b      	str	r3, [r1, #16]
	Timer_task.mode = TIMER_TASK_REPEAT;
    229c:	2301      	movs	r3, #1
    229e:	750b      	strb	r3, [r1, #20]

	timer_add_task(&Timer, &Timer_task);
    22a0:	3104      	adds	r1, #4
    22a2:	4c06      	ldr	r4, [pc, #24]	; (22bc <touch_timer_config+0x2c>)
    22a4:	0020      	movs	r0, r4
    22a6:	4b06      	ldr	r3, [pc, #24]	; (22c0 <touch_timer_config+0x30>)
    22a8:	4798      	blx	r3
	timer_start(&Timer);
    22aa:	0020      	movs	r0, r4
    22ac:	4b05      	ldr	r3, [pc, #20]	; (22c4 <touch_timer_config+0x34>)
    22ae:	4798      	blx	r3
}
    22b0:	bd10      	pop	{r4, pc}
    22b2:	46c0      	nop			; (mov r8, r8)
    22b4:	20000a58 	.word	0x20000a58
    22b8:	00002285 	.word	0x00002285
    22bc:	20000ac4 	.word	0x20000ac4
    22c0:	00000de5 	.word	0x00000de5
    22c4:	00000da9 	.word	0x00000da9

000022c8 <touch_init>:
{
    22c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	touch_timer_config();
    22ca:	4b12      	ldr	r3, [pc, #72]	; (2314 <touch_init+0x4c>)
    22cc:	4798      	blx	r3
	qtm_ptc_init_acquisition_module(&qtlib_acq_set1);
    22ce:	4812      	ldr	r0, [pc, #72]	; (2318 <touch_init+0x50>)
    22d0:	4b12      	ldr	r3, [pc, #72]	; (231c <touch_init+0x54>)
    22d2:	4798      	blx	r3
	qtm_ptc_qtlib_assign_signal_memory(&touch_acq_signals_raw[0]);
    22d4:	4812      	ldr	r0, [pc, #72]	; (2320 <touch_init+0x58>)
    22d6:	4b13      	ldr	r3, [pc, #76]	; (2324 <touch_init+0x5c>)
    22d8:	4798      	blx	r3
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++)
    22da:	2400      	movs	r4, #0
		qtm_enable_sensor_node(&qtlib_acq_set1, sensor_nodes);
    22dc:	4d0e      	ldr	r5, [pc, #56]	; (2318 <touch_init+0x50>)
    22de:	4f12      	ldr	r7, [pc, #72]	; (2328 <touch_init+0x60>)
		qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_nodes);
    22e0:	4e12      	ldr	r6, [pc, #72]	; (232c <touch_init+0x64>)
		qtm_enable_sensor_node(&qtlib_acq_set1, sensor_nodes);
    22e2:	0021      	movs	r1, r4
    22e4:	0028      	movs	r0, r5
    22e6:	47b8      	blx	r7
		qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_nodes);
    22e8:	0021      	movs	r1, r4
    22ea:	0028      	movs	r0, r5
    22ec:	47b0      	blx	r6
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++)
    22ee:	3401      	adds	r4, #1
    22f0:	b2a4      	uxth	r4, r4
    22f2:	2c05      	cmp	r4, #5
    22f4:	d1f5      	bne.n	22e2 <touch_init+0x1a>
    22f6:	4d0e      	ldr	r5, [pc, #56]	; (2330 <touch_init+0x68>)
    22f8:	2400      	movs	r4, #0
		qtm_init_sensor_key(&qtlib_key_set1, sensor_nodes, &ptc_qtlib_node_stat1[sensor_nodes]);
    22fa:	4e07      	ldr	r6, [pc, #28]	; (2318 <touch_init+0x50>)
    22fc:	360c      	adds	r6, #12
    22fe:	4f0d      	ldr	r7, [pc, #52]	; (2334 <touch_init+0x6c>)
    2300:	b2e1      	uxtb	r1, r4
    2302:	002a      	movs	r2, r5
    2304:	0030      	movs	r0, r6
    2306:	47b8      	blx	r7
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++) {
    2308:	3401      	adds	r4, #1
    230a:	b2a4      	uxth	r4, r4
    230c:	3506      	adds	r5, #6
    230e:	2c05      	cmp	r4, #5
    2310:	d1f6      	bne.n	2300 <touch_init+0x38>
}
    2312:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2314:	00002291 	.word	0x00002291
    2318:	20000000 	.word	0x20000000
    231c:	000026c1 	.word	0x000026c1
    2320:	20000b38 	.word	0x20000b38
    2324:	00002789 	.word	0x00002789
    2328:	0000279d 	.word	0x0000279d
    232c:	000027bd 	.word	0x000027bd
    2330:	20000b18 	.word	0x20000b18
    2334:	00002441 	.word	0x00002441

00002338 <PTC_Handler>:
Input  : none
Output : none
Notes  : none
============================================================================*/
void PTC_Handler(void)
{
    2338:	b510      	push	{r4, lr}
	qtm_ptc_clear_interrupt();
    233a:	4b02      	ldr	r3, [pc, #8]	; (2344 <PTC_Handler+0xc>)
    233c:	4798      	blx	r3
	qtm_saml22_ptc_handler_eoc();
    233e:	4b02      	ldr	r3, [pc, #8]	; (2348 <PTC_Handler+0x10>)
    2340:	4798      	blx	r3
}
    2342:	bd10      	pop	{r4, pc}
    2344:	0000280d 	.word	0x0000280d
    2348:	00002831 	.word	0x00002831

0000234c <_read>:
#include <stdio.h>

int __attribute__((weak)) _read(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _read(int file, char *ptr, int len)
{
    234c:	b510      	push	{r4, lr}
    234e:	000b      	movs	r3, r1
	int n = 0;

	if (file != 0) {
    2350:	2800      	cmp	r0, #0
    2352:	d109      	bne.n	2368 <_read+0x1c>
		return -1;
	}

	n = stdio_io_read((uint8_t *)ptr, len);
    2354:	0011      	movs	r1, r2
    2356:	0018      	movs	r0, r3
    2358:	4b05      	ldr	r3, [pc, #20]	; (2370 <_read+0x24>)
    235a:	4798      	blx	r3
    235c:	2800      	cmp	r0, #0
    235e:	db00      	blt.n	2362 <_read+0x16>
	if (n < 0) {
		return -1;
	}

	return n;
}
    2360:	bd10      	pop	{r4, pc}
    2362:	2001      	movs	r0, #1
    2364:	4240      	negs	r0, r0
    2366:	e7fb      	b.n	2360 <_read+0x14>
		return -1;
    2368:	2001      	movs	r0, #1
    236a:	4240      	negs	r0, r0
    236c:	e7f8      	b.n	2360 <_read+0x14>
    236e:	46c0      	nop			; (mov r8, r8)
    2370:	000023c9 	.word	0x000023c9

00002374 <_write>:
#include <stdio.h>

int __attribute__((weak)) _write(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _write(int file, char *ptr, int len)
{
    2374:	b510      	push	{r4, lr}
    2376:	000b      	movs	r3, r1
	int n = 0;

	if ((file != 1) && (file != 2) && (file != 3)) {
    2378:	3801      	subs	r0, #1
    237a:	2802      	cmp	r0, #2
    237c:	d809      	bhi.n	2392 <_write+0x1e>
		return -1;
	}

	n = stdio_io_write((const uint8_t *)ptr, len);
    237e:	0011      	movs	r1, r2
    2380:	0018      	movs	r0, r3
    2382:	4b05      	ldr	r3, [pc, #20]	; (2398 <_write+0x24>)
    2384:	4798      	blx	r3
    2386:	2800      	cmp	r0, #0
    2388:	db00      	blt.n	238c <_write+0x18>
	if (n < 0) {
		return -1;
	}

	return n;
}
    238a:	bd10      	pop	{r4, pc}
    238c:	2001      	movs	r0, #1
    238e:	4240      	negs	r0, r0
    2390:	e7fb      	b.n	238a <_write+0x16>
		return -1;
    2392:	2001      	movs	r0, #1
    2394:	4240      	negs	r0, r0
    2396:	e7f8      	b.n	238a <_write+0x16>
    2398:	000023ed 	.word	0x000023ed

0000239c <stdio_io_init>:

/** IO descriptor for STDIO access. */
static struct io_descriptor *stdio_io = NULL;

void stdio_io_init(struct io_descriptor *io)
{
    239c:	b570      	push	{r4, r5, r6, lr}
    239e:	0006      	movs	r6, r0
#if defined(__GNUC__)
	/* Specify that stdout and stdin should not be buffered. */
	setbuf(stdout, NULL);
    23a0:	4d06      	ldr	r5, [pc, #24]	; (23bc <stdio_io_init+0x20>)
    23a2:	682b      	ldr	r3, [r5, #0]
    23a4:	6898      	ldr	r0, [r3, #8]
    23a6:	2100      	movs	r1, #0
    23a8:	4c05      	ldr	r4, [pc, #20]	; (23c0 <stdio_io_init+0x24>)
    23aa:	47a0      	blx	r4
	setbuf(stdin, NULL);
    23ac:	682b      	ldr	r3, [r5, #0]
    23ae:	6858      	ldr	r0, [r3, #4]
    23b0:	2100      	movs	r1, #0
    23b2:	47a0      	blx	r4
	 * and AVR GCC library:
	 * - printf() emits one character at a time.
	 * - getchar() requests only 1 byte to exit.
	 */
#endif
	stdio_io = io;
    23b4:	4b03      	ldr	r3, [pc, #12]	; (23c4 <stdio_io_init+0x28>)
    23b6:	601e      	str	r6, [r3, #0]
}
    23b8:	bd70      	pop	{r4, r5, r6, pc}
    23ba:	46c0      	nop			; (mov r8, r8)
    23bc:	2000007c 	.word	0x2000007c
    23c0:	000047e1 	.word	0x000047e1
    23c4:	20000a70 	.word	0x20000a70

000023c8 <stdio_io_read>:
{
	stdio_io = io;
}

int32_t stdio_io_read(uint8_t *buf, const int32_t len)
{
    23c8:	b510      	push	{r4, lr}
    23ca:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    23cc:	4b05      	ldr	r3, [pc, #20]	; (23e4 <stdio_io_read+0x1c>)
    23ce:	6818      	ldr	r0, [r3, #0]
    23d0:	2800      	cmp	r0, #0
    23d2:	d004      	beq.n	23de <stdio_io_read+0x16>
		return 0;
	}
	return io_read(stdio_io, buf, len);
    23d4:	b28a      	uxth	r2, r1
    23d6:	0021      	movs	r1, r4
    23d8:	4b03      	ldr	r3, [pc, #12]	; (23e8 <stdio_io_read+0x20>)
    23da:	4798      	blx	r3
}
    23dc:	bd10      	pop	{r4, pc}
		return 0;
    23de:	2000      	movs	r0, #0
    23e0:	e7fc      	b.n	23dc <stdio_io_read+0x14>
    23e2:	46c0      	nop			; (mov r8, r8)
    23e4:	20000a70 	.word	0x20000a70
    23e8:	00000a89 	.word	0x00000a89

000023ec <stdio_io_write>:

int32_t stdio_io_write(const uint8_t *buf, const int32_t len)
{
    23ec:	b510      	push	{r4, lr}
    23ee:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    23f0:	4b05      	ldr	r3, [pc, #20]	; (2408 <stdio_io_write+0x1c>)
    23f2:	6818      	ldr	r0, [r3, #0]
    23f4:	2800      	cmp	r0, #0
    23f6:	d004      	beq.n	2402 <stdio_io_write+0x16>
		return 0;
	}
	return io_write(stdio_io, buf, len);
    23f8:	b28a      	uxth	r2, r1
    23fa:	0021      	movs	r1, r4
    23fc:	4b03      	ldr	r3, [pc, #12]	; (240c <stdio_io_write+0x20>)
    23fe:	4798      	blx	r3
}
    2400:	bd10      	pop	{r4, pc}
		return 0;
    2402:	2000      	movs	r0, #0
    2404:	e7fc      	b.n	2400 <stdio_io_write+0x14>
    2406:	46c0      	nop			; (mov r8, r8)
    2408:	20000a70 	.word	0x20000a70
    240c:	00000a55 	.word	0x00000a55

00002410 <stdio_redirect_init>:
	/* Print welcome message */
	printf("\r\nHello ATMEL World!\r\n");
}

void stdio_redirect_init(void)
{
    2410:	b510      	push	{r4, lr}

	usart_sync_enable(&EDBG_0);
    2412:	4c04      	ldr	r4, [pc, #16]	; (2424 <stdio_redirect_init+0x14>)
    2414:	0020      	movs	r0, r4
    2416:	4b04      	ldr	r3, [pc, #16]	; (2428 <stdio_redirect_init+0x18>)
    2418:	4798      	blx	r3
	stdio_io_init(&EDBG_0.io);
    241a:	0020      	movs	r0, r4
    241c:	4b03      	ldr	r3, [pc, #12]	; (242c <stdio_redirect_init+0x1c>)
    241e:	4798      	blx	r3
}
    2420:	bd10      	pop	{r4, pc}
    2422:	46c0      	nop			; (mov r8, r8)
    2424:	20000ae4 	.word	0x20000ae4
    2428:	00000fc1 	.word	0x00000fc1
    242c:	0000239d 	.word	0x0000239d

00002430 <qtm_update_qtlib_timer>:
    2430:	4a02      	ldr	r2, [pc, #8]	; (243c <qtm_update_qtlib_timer+0xc>)
    2432:	8813      	ldrh	r3, [r2, #0]
    2434:	18c0      	adds	r0, r0, r3
    2436:	8010      	strh	r0, [r2, #0]
    2438:	4770      	bx	lr
    243a:	46c0      	nop			; (mov r8, r8)
    243c:	20000a74 	.word	0x20000a74

00002440 <qtm_init_sensor_key>:
    2440:	b510      	push	{r4, lr}
    2442:	230b      	movs	r3, #11
    2444:	2800      	cmp	r0, #0
    2446:	d00b      	beq.n	2460 <qtm_init_sensor_key+0x20>
    2448:	2a00      	cmp	r2, #0
    244a:	d009      	beq.n	2460 <qtm_init_sensor_key+0x20>
    244c:	3301      	adds	r3, #1
    244e:	000c      	movs	r4, r1
    2450:	435c      	muls	r4, r3
    2452:	6881      	ldr	r1, [r0, #8]
    2454:	3b0b      	subs	r3, #11
    2456:	550b      	strb	r3, [r1, r4]
    2458:	6883      	ldr	r3, [r0, #8]
    245a:	1919      	adds	r1, r3, r4
    245c:	2300      	movs	r3, #0
    245e:	604a      	str	r2, [r1, #4]
    2460:	0018      	movs	r0, r3
    2462:	bc10      	pop	{r4}
    2464:	bc02      	pop	{r1}
    2466:	4708      	bx	r1

00002468 <pin_mode_analog>:
    2468:	b530      	push	{r4, r5, lr}
    246a:	2401      	movs	r4, #1
    246c:	084b      	lsrs	r3, r1, #1
    246e:	01c0      	lsls	r0, r0, #7
    2470:	4a0b      	ldr	r2, [pc, #44]	; (24a0 <pin_mode_analog+0x38>)
    2472:	181b      	adds	r3, r3, r0
    2474:	189b      	adds	r3, r3, r2
    2476:	4221      	tst	r1, r4
    2478:	d004      	beq.n	2484 <pin_mode_analog+0x1c>
    247a:	220f      	movs	r2, #15
    247c:	781c      	ldrb	r4, [r3, #0]
    247e:	4022      	ands	r2, r4
    2480:	2410      	movs	r4, #16
    2482:	e002      	b.n	248a <pin_mode_analog+0x22>
    2484:	250f      	movs	r5, #15
    2486:	781a      	ldrb	r2, [r3, #0]
    2488:	43aa      	bics	r2, r5
    248a:	4322      	orrs	r2, r4
    248c:	701a      	strb	r2, [r3, #0]
    248e:	2201      	movs	r2, #1
    2490:	4b04      	ldr	r3, [pc, #16]	; (24a4 <pin_mode_analog+0x3c>)
    2492:	1808      	adds	r0, r1, r0
    2494:	18c0      	adds	r0, r0, r3
    2496:	7803      	ldrb	r3, [r0, #0]
    2498:	4313      	orrs	r3, r2
    249a:	7003      	strb	r3, [r0, #0]
    249c:	bd30      	pop	{r4, r5, pc}
    249e:	46c0      	nop			; (mov r8, r8)
    24a0:	41006030 	.word	0x41006030
    24a4:	41006040 	.word	0x41006040

000024a8 <sync_config>:
    24a8:	4a02      	ldr	r2, [pc, #8]	; (24b4 <sync_config+0xc>)
    24aa:	8993      	ldrh	r3, [r2, #12]
    24ac:	2b00      	cmp	r3, #0
    24ae:	d1fc      	bne.n	24aa <sync_config+0x2>
    24b0:	4770      	bx	lr
    24b2:	46c0      	nop			; (mov r8, r8)
    24b4:	42003800 	.word	0x42003800

000024b8 <select_next_channel_to_measure>:
    24b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    24ba:	2406      	movs	r4, #6
    24bc:	2501      	movs	r5, #1
    24be:	490c      	ldr	r1, [pc, #48]	; (24f0 <select_next_channel_to_measure+0x38>)
    24c0:	4a0c      	ldr	r2, [pc, #48]	; (24f4 <select_next_channel_to_measure+0x3c>)
    24c2:	6809      	ldr	r1, [r1, #0]
    24c4:	8813      	ldrh	r3, [r2, #0]
    24c6:	6808      	ldr	r0, [r1, #0]
    24c8:	8800      	ldrh	r0, [r0, #0]
    24ca:	4283      	cmp	r3, r0
    24cc:	d20b      	bcs.n	24e6 <select_next_channel_to_measure+0x2e>
    24ce:	0026      	movs	r6, r4
    24d0:	435e      	muls	r6, r3
    24d2:	688f      	ldr	r7, [r1, #8]
    24d4:	5df6      	ldrb	r6, [r6, r7]
    24d6:	422e      	tst	r6, r5
    24d8:	d102      	bne.n	24e0 <select_next_channel_to_measure+0x28>
    24da:	3301      	adds	r3, #1
    24dc:	b29b      	uxth	r3, r3
    24de:	e7f4      	b.n	24ca <select_next_channel_to_measure+0x12>
    24e0:	8013      	strh	r3, [r2, #0]
    24e2:	2000      	movs	r0, #0
    24e4:	e002      	b.n	24ec <select_next_channel_to_measure+0x34>
    24e6:	2300      	movs	r3, #0
    24e8:	2001      	movs	r0, #1
    24ea:	8013      	strh	r3, [r2, #0]
    24ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    24ee:	46c0      	nop			; (mov r8, r8)
    24f0:	20000b84 	.word	0x20000b84
    24f4:	20000a78 	.word	0x20000a78

000024f8 <qtm_measure_node>:
    24f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    24fa:	4f67      	ldr	r7, [pc, #412]	; (2698 <qtm_measure_node+0x1a0>)
    24fc:	b089      	sub	sp, #36	; 0x24
    24fe:	9003      	str	r0, [sp, #12]
    2500:	47b8      	blx	r7
    2502:	2202      	movs	r2, #2
    2504:	250c      	movs	r5, #12
    2506:	4c65      	ldr	r4, [pc, #404]	; (269c <qtm_measure_node+0x1a4>)
    2508:	8823      	ldrh	r3, [r4, #0]
    250a:	4393      	bics	r3, r2
    250c:	8023      	strh	r3, [r4, #0]
    250e:	47b8      	blx	r7
    2510:	9b03      	ldr	r3, [sp, #12]
    2512:	4e63      	ldr	r6, [pc, #396]	; (26a0 <qtm_measure_node+0x1a8>)
    2514:	435d      	muls	r5, r3
    2516:	6833      	ldr	r3, [r6, #0]
    2518:	6c61      	ldr	r1, [r4, #68]	; 0x44
    251a:	685b      	ldr	r3, [r3, #4]
    251c:	195b      	adds	r3, r3, r5
    251e:	685b      	ldr	r3, [r3, #4]
    2520:	021b      	lsls	r3, r3, #8
    2522:	0a1a      	lsrs	r2, r3, #8
    2524:	0e0b      	lsrs	r3, r1, #24
    2526:	061b      	lsls	r3, r3, #24
    2528:	4313      	orrs	r3, r2
    252a:	6463      	str	r3, [r4, #68]	; 0x44
    252c:	47b8      	blx	r7
    252e:	6833      	ldr	r3, [r6, #0]
    2530:	685b      	ldr	r3, [r3, #4]
    2532:	595b      	ldr	r3, [r3, r5]
    2534:	63e3      	str	r3, [r4, #60]	; 0x3c
    2536:	47b8      	blx	r7
    2538:	2306      	movs	r3, #6
    253a:	9a03      	ldr	r2, [sp, #12]
    253c:	6831      	ldr	r1, [r6, #0]
    253e:	4353      	muls	r3, r2
    2540:	688a      	ldr	r2, [r1, #8]
    2542:	18d2      	adds	r2, r2, r3
    2544:	8892      	ldrh	r2, [r2, #4]
    2546:	64a2      	str	r2, [r4, #72]	; 0x48
    2548:	9703      	str	r7, [sp, #12]
    254a:	2702      	movs	r7, #2
    254c:	688a      	ldr	r2, [r1, #8]
    254e:	18d2      	adds	r2, r2, r3
    2550:	7810      	ldrb	r0, [r2, #0]
    2552:	4238      	tst	r0, r7
    2554:	d001      	beq.n	255a <qtm_measure_node+0x62>
    2556:	2005      	movs	r0, #5
    2558:	7010      	strb	r0, [r2, #0]
    255a:	688a      	ldr	r2, [r1, #8]
    255c:	5cd7      	ldrb	r7, [r2, r3]
    255e:	9b03      	ldr	r3, [sp, #12]
    2560:	06ff      	lsls	r7, r7, #27
    2562:	0f7f      	lsrs	r7, r7, #29
    2564:	4798      	blx	r3
    2566:	2f00      	cmp	r7, #0
    2568:	d10a      	bne.n	2580 <qtm_measure_node+0x88>
    256a:	6833      	ldr	r3, [r6, #0]
    256c:	494d      	ldr	r1, [pc, #308]	; (26a4 <qtm_measure_node+0x1ac>)
    256e:	685b      	ldr	r3, [r3, #4]
    2570:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    2572:	195b      	adds	r3, r3, r5
    2574:	7a9b      	ldrb	r3, [r3, #10]
    2576:	091b      	lsrs	r3, r3, #4
    2578:	18cb      	adds	r3, r1, r3
    257a:	7a1b      	ldrb	r3, [r3, #8]
    257c:	041b      	lsls	r3, r3, #16
    257e:	e002      	b.n	2586 <qtm_measure_node+0x8e>
    2580:	22fc      	movs	r2, #252	; 0xfc
    2582:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    2584:	0392      	lsls	r2, r2, #14
    2586:	4313      	orrs	r3, r2
    2588:	64a3      	str	r3, [r4, #72]	; 0x48
    258a:	9b03      	ldr	r3, [sp, #12]
    258c:	4798      	blx	r3
    258e:	6833      	ldr	r3, [r6, #0]
    2590:	6921      	ldr	r1, [r4, #16]
    2592:	685b      	ldr	r3, [r3, #4]
    2594:	4f41      	ldr	r7, [pc, #260]	; (269c <qtm_measure_node+0x1a4>)
    2596:	195b      	adds	r3, r3, r5
    2598:	7a5a      	ldrb	r2, [r3, #9]
    259a:	2307      	movs	r3, #7
    259c:	0912      	lsrs	r2, r2, #4
    259e:	401a      	ands	r2, r3
    25a0:	4b41      	ldr	r3, [pc, #260]	; (26a8 <qtm_measure_node+0x1b0>)
    25a2:	0512      	lsls	r2, r2, #20
    25a4:	400b      	ands	r3, r1
    25a6:	4313      	orrs	r3, r2
    25a8:	6123      	str	r3, [r4, #16]
    25aa:	9b03      	ldr	r3, [sp, #12]
    25ac:	4798      	blx	r3
    25ae:	2203      	movs	r2, #3
    25b0:	6833      	ldr	r3, [r6, #0]
    25b2:	8821      	ldrh	r1, [r4, #0]
    25b4:	685b      	ldr	r3, [r3, #4]
    25b6:	195b      	adds	r3, r3, r5
    25b8:	7a5b      	ldrb	r3, [r3, #9]
    25ba:	401a      	ands	r2, r3
    25bc:	4b3b      	ldr	r3, [pc, #236]	; (26ac <qtm_measure_node+0x1b4>)
    25be:	0212      	lsls	r2, r2, #8
    25c0:	400b      	ands	r3, r1
    25c2:	4313      	orrs	r3, r2
    25c4:	8023      	strh	r3, [r4, #0]
    25c6:	9b03      	ldr	r3, [sp, #12]
    25c8:	4798      	blx	r3
    25ca:	2107      	movs	r1, #7
    25cc:	6833      	ldr	r3, [r6, #0]
    25ce:	685b      	ldr	r3, [r3, #4]
    25d0:	195b      	adds	r3, r3, r5
    25d2:	7ada      	ldrb	r2, [r3, #11]
    25d4:	6923      	ldr	r3, [r4, #16]
    25d6:	400a      	ands	r2, r1
    25d8:	4935      	ldr	r1, [pc, #212]	; (26b0 <qtm_measure_node+0x1b8>)
    25da:	0412      	lsls	r2, r2, #16
    25dc:	400b      	ands	r3, r1
    25de:	4313      	orrs	r3, r2
    25e0:	6123      	str	r3, [r4, #16]
    25e2:	9b03      	ldr	r3, [sp, #12]
    25e4:	4798      	blx	r3
    25e6:	6833      	ldr	r3, [r6, #0]
    25e8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    25ea:	685b      	ldr	r3, [r3, #4]
    25ec:	195d      	adds	r5, r3, r5
    25ee:	7a2b      	ldrb	r3, [r5, #8]
    25f0:	2502      	movs	r5, #2
    25f2:	061a      	lsls	r2, r3, #24
    25f4:	020b      	lsls	r3, r1, #8
    25f6:	0a1b      	lsrs	r3, r3, #8
    25f8:	4313      	orrs	r3, r2
    25fa:	64a3      	str	r3, [r4, #72]	; 0x48
    25fc:	9b03      	ldr	r3, [sp, #12]
    25fe:	4798      	blx	r3
    2600:	8823      	ldrh	r3, [r4, #0]
    2602:	432b      	orrs	r3, r5
    2604:	8023      	strh	r3, [r4, #0]
    2606:	4b2b      	ldr	r3, [pc, #172]	; (26b4 <qtm_measure_node+0x1bc>)
    2608:	685e      	ldr	r6, [r3, #4]
    260a:	2e00      	cmp	r6, #0
    260c:	d03b      	beq.n	2686 <qtm_measure_node+0x18e>
    260e:	2401      	movs	r4, #1
    2610:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    2612:	0e1b      	lsrs	r3, r3, #24
    2614:	9304      	str	r3, [sp, #16]
    2616:	693b      	ldr	r3, [r7, #16]
    2618:	051b      	lsls	r3, r3, #20
    261a:	0f1b      	lsrs	r3, r3, #28
    261c:	9305      	str	r3, [sp, #20]
    261e:	883b      	ldrh	r3, [r7, #0]
    2620:	059b      	lsls	r3, r3, #22
    2622:	0f9b      	lsrs	r3, r3, #30
    2624:	9306      	str	r3, [sp, #24]
    2626:	9b03      	ldr	r3, [sp, #12]
    2628:	4798      	blx	r3
    262a:	883b      	ldrh	r3, [r7, #0]
    262c:	43ab      	bics	r3, r5
    262e:	803b      	strh	r3, [r7, #0]
    2630:	9b03      	ldr	r3, [sp, #12]
    2632:	4798      	blx	r3
    2634:	793b      	ldrb	r3, [r7, #4]
    2636:	4323      	orrs	r3, r4
    2638:	713b      	strb	r3, [r7, #4]
    263a:	9b03      	ldr	r3, [sp, #12]
    263c:	4798      	blx	r3
    263e:	793b      	ldrb	r3, [r7, #4]
    2640:	432b      	orrs	r3, r5
    2642:	713b      	strb	r3, [r7, #4]
    2644:	9b03      	ldr	r3, [sp, #12]
    2646:	4798      	blx	r3
    2648:	2108      	movs	r1, #8
    264a:	693b      	ldr	r3, [r7, #16]
    264c:	9307      	str	r3, [sp, #28]
    264e:	4b1a      	ldr	r3, [pc, #104]	; (26b8 <qtm_measure_node+0x1c0>)
    2650:	681a      	ldr	r2, [r3, #0]
    2652:	7813      	ldrb	r3, [r2, #0]
    2654:	430b      	orrs	r3, r1
    2656:	7013      	strb	r3, [r2, #0]
    2658:	9b03      	ldr	r3, [sp, #12]
    265a:	4798      	blx	r3
    265c:	693b      	ldr	r3, [r7, #16]
    265e:	4a14      	ldr	r2, [pc, #80]	; (26b0 <qtm_measure_node+0x1b8>)
    2660:	4013      	ands	r3, r2
    2662:	613b      	str	r3, [r7, #16]
    2664:	9b07      	ldr	r3, [sp, #28]
    2666:	9a06      	ldr	r2, [sp, #24]
    2668:	9905      	ldr	r1, [sp, #20]
    266a:	9804      	ldr	r0, [sp, #16]
    266c:	9300      	str	r3, [sp, #0]
    266e:	4b13      	ldr	r3, [pc, #76]	; (26bc <qtm_measure_node+0x1c4>)
    2670:	47b0      	blx	r6
    2672:	9b03      	ldr	r3, [sp, #12]
    2674:	4798      	blx	r3
    2676:	883b      	ldrh	r3, [r7, #0]
    2678:	431d      	orrs	r5, r3
    267a:	803d      	strh	r5, [r7, #0]
    267c:	9b03      	ldr	r3, [sp, #12]
    267e:	4798      	blx	r3
    2680:	7f3b      	ldrb	r3, [r7, #28]
    2682:	4323      	orrs	r3, r4
    2684:	e004      	b.n	2690 <qtm_measure_node+0x198>
    2686:	9b03      	ldr	r3, [sp, #12]
    2688:	4798      	blx	r3
    268a:	2201      	movs	r2, #1
    268c:	7f3b      	ldrb	r3, [r7, #28]
    268e:	4313      	orrs	r3, r2
    2690:	773b      	strb	r3, [r7, #28]
    2692:	b009      	add	sp, #36	; 0x24
    2694:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2696:	46c0      	nop			; (mov r8, r8)
    2698:	000024a9 	.word	0x000024a9
    269c:	42003800 	.word	0x42003800
    26a0:	20000b84 	.word	0x20000b84
    26a4:	0000a004 	.word	0x0000a004
    26a8:	ff8fffff 	.word	0xff8fffff
    26ac:	fffffcff 	.word	0xfffffcff
    26b0:	fff8ffff 	.word	0xfff8ffff
    26b4:	20000a78 	.word	0x20000a78
    26b8:	20000b80 	.word	0x20000b80
    26bc:	42003810 	.word	0x42003810

000026c0 <qtm_ptc_init_acquisition_module>:
    26c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    26c2:	0001      	movs	r1, r0
    26c4:	200b      	movs	r0, #11
    26c6:	2900      	cmp	r1, #0
    26c8:	d053      	beq.n	2772 <qtm_ptc_init_acquisition_module+0xb2>
    26ca:	680b      	ldr	r3, [r1, #0]
    26cc:	240c      	movs	r4, #12
    26ce:	8818      	ldrh	r0, [r3, #0]
    26d0:	2300      	movs	r3, #0
    26d2:	001d      	movs	r5, r3
    26d4:	001f      	movs	r7, r3
    26d6:	b29a      	uxth	r2, r3
    26d8:	4290      	cmp	r0, r2
    26da:	d909      	bls.n	26f0 <qtm_ptc_init_acquisition_module+0x30>
    26dc:	0022      	movs	r2, r4
    26de:	435a      	muls	r2, r3
    26e0:	684e      	ldr	r6, [r1, #4]
    26e2:	3301      	adds	r3, #1
    26e4:	18b2      	adds	r2, r6, r2
    26e6:	6816      	ldr	r6, [r2, #0]
    26e8:	6852      	ldr	r2, [r2, #4]
    26ea:	4337      	orrs	r7, r6
    26ec:	4315      	orrs	r5, r2
    26ee:	e7f2      	b.n	26d6 <qtm_ptc_init_acquisition_module+0x16>
    26f0:	2002      	movs	r0, #2
    26f2:	2d00      	cmp	r5, #0
    26f4:	d03d      	beq.n	2772 <qtm_ptc_init_acquisition_module+0xb2>
    26f6:	2400      	movs	r4, #0
    26f8:	2601      	movs	r6, #1
    26fa:	043b      	lsls	r3, r7, #16
    26fc:	432b      	orrs	r3, r5
    26fe:	9301      	str	r3, [sp, #4]
    2700:	9b01      	ldr	r3, [sp, #4]
    2702:	40e3      	lsrs	r3, r4
    2704:	4233      	tst	r3, r6
    2706:	d010      	beq.n	272a <qtm_ptc_init_acquisition_module+0x6a>
    2708:	4b1a      	ldr	r3, [pc, #104]	; (2774 <qtm_ptc_init_acquisition_module+0xb4>)
    270a:	4a1b      	ldr	r2, [pc, #108]	; (2778 <qtm_ptc_init_acquisition_module+0xb8>)
    270c:	330e      	adds	r3, #14
    270e:	5ce3      	ldrb	r3, [r4, r3]
    2710:	2000      	movs	r0, #0
    2712:	1e19      	subs	r1, r3, #0
    2714:	291f      	cmp	r1, #31
    2716:	d907      	bls.n	2728 <qtm_ptc_init_acquisition_module+0x68>
    2718:	3920      	subs	r1, #32
    271a:	b2c9      	uxtb	r1, r1
    271c:	2001      	movs	r0, #1
    271e:	291f      	cmp	r1, #31
    2720:	d902      	bls.n	2728 <qtm_ptc_init_acquisition_module+0x68>
    2722:	2002      	movs	r0, #2
    2724:	3b40      	subs	r3, #64	; 0x40
    2726:	b2d9      	uxtb	r1, r3
    2728:	4790      	blx	r2
    272a:	3401      	adds	r4, #1
    272c:	2c20      	cmp	r4, #32
    272e:	d1e7      	bne.n	2700 <qtm_ptc_init_acquisition_module+0x40>
    2730:	4e12      	ldr	r6, [pc, #72]	; (277c <qtm_ptc_init_acquisition_module+0xbc>)
    2732:	47b0      	blx	r6
    2734:	2300      	movs	r3, #0
    2736:	4c12      	ldr	r4, [pc, #72]	; (2780 <qtm_ptc_init_acquisition_module+0xc0>)
    2738:	8023      	strh	r3, [r4, #0]
    273a:	4b12      	ldr	r3, [pc, #72]	; (2784 <qtm_ptc_init_acquisition_module+0xc4>)
    273c:	7a1b      	ldrb	r3, [r3, #8]
    273e:	9301      	str	r3, [sp, #4]
    2740:	2b00      	cmp	r3, #0
    2742:	d10d      	bne.n	2760 <qtm_ptc_init_acquisition_module+0xa0>
    2744:	47b0      	blx	r6
    2746:	9b01      	ldr	r3, [sp, #4]
    2748:	61a3      	str	r3, [r4, #24]
    274a:	69a3      	ldr	r3, [r4, #24]
    274c:	431f      	orrs	r7, r3
    274e:	61a7      	str	r7, [r4, #24]
    2750:	47b0      	blx	r6
    2752:	69a3      	ldr	r3, [r4, #24]
    2754:	4a0b      	ldr	r2, [pc, #44]	; (2784 <qtm_ptc_init_acquisition_module+0xc4>)
    2756:	431d      	orrs	r5, r3
    2758:	2301      	movs	r3, #1
    275a:	61a5      	str	r5, [r4, #24]
    275c:	7213      	strb	r3, [r2, #8]
    275e:	e007      	b.n	2770 <qtm_ptc_init_acquisition_module+0xb0>
    2760:	47b0      	blx	r6
    2762:	69a3      	ldr	r3, [r4, #24]
    2764:	431f      	orrs	r7, r3
    2766:	61a7      	str	r7, [r4, #24]
    2768:	47b0      	blx	r6
    276a:	69a3      	ldr	r3, [r4, #24]
    276c:	431d      	orrs	r5, r3
    276e:	61a5      	str	r5, [r4, #24]
    2770:	2000      	movs	r0, #0
    2772:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    2774:	0000a004 	.word	0x0000a004
    2778:	00002469 	.word	0x00002469
    277c:	000024a9 	.word	0x000024a9
    2780:	42003800 	.word	0x42003800
    2784:	20000a78 	.word	0x20000a78

00002788 <qtm_ptc_qtlib_assign_signal_memory>:
    2788:	230b      	movs	r3, #11
    278a:	2800      	cmp	r0, #0
    278c:	d002      	beq.n	2794 <qtm_ptc_qtlib_assign_signal_memory+0xc>
    278e:	4b02      	ldr	r3, [pc, #8]	; (2798 <qtm_ptc_qtlib_assign_signal_memory+0x10>)
    2790:	6018      	str	r0, [r3, #0]
    2792:	2300      	movs	r3, #0
    2794:	0018      	movs	r0, r3
    2796:	4770      	bx	lr
    2798:	20000b88 	.word	0x20000b88

0000279c <qtm_enable_sensor_node>:
    279c:	230b      	movs	r3, #11
    279e:	2800      	cmp	r0, #0
    27a0:	d00a      	beq.n	27b8 <qtm_enable_sensor_node+0x1c>
    27a2:	6803      	ldr	r3, [r0, #0]
    27a4:	881a      	ldrh	r2, [r3, #0]
    27a6:	2302      	movs	r3, #2
    27a8:	428a      	cmp	r2, r1
    27aa:	d305      	bcc.n	27b8 <qtm_enable_sensor_node+0x1c>
    27ac:	3304      	adds	r3, #4
    27ae:	4359      	muls	r1, r3
    27b0:	6882      	ldr	r2, [r0, #8]
    27b2:	3b05      	subs	r3, #5
    27b4:	548b      	strb	r3, [r1, r2]
    27b6:	2300      	movs	r3, #0
    27b8:	0018      	movs	r0, r3
    27ba:	4770      	bx	lr

000027bc <qtm_calibrate_sensor_node>:
    27bc:	0002      	movs	r2, r0
    27be:	b510      	push	{r4, lr}
    27c0:	200b      	movs	r0, #11
    27c2:	2a00      	cmp	r2, #0
    27c4:	d01f      	beq.n	2806 <qtm_calibrate_sensor_node+0x4a>
    27c6:	6813      	ldr	r3, [r2, #0]
    27c8:	3809      	subs	r0, #9
    27ca:	881c      	ldrh	r4, [r3, #0]
    27cc:	428c      	cmp	r4, r1
    27ce:	d31a      	bcc.n	2806 <qtm_calibrate_sensor_node+0x4a>
    27d0:	789b      	ldrb	r3, [r3, #2]
    27d2:	6892      	ldr	r2, [r2, #8]
    27d4:	2b40      	cmp	r3, #64	; 0x40
    27d6:	d105      	bne.n	27e4 <qtm_calibrate_sensor_node+0x28>
    27d8:	208d      	movs	r0, #141	; 0x8d
    27da:	3b3a      	subs	r3, #58	; 0x3a
    27dc:	434b      	muls	r3, r1
    27de:	0080      	lsls	r0, r0, #2
    27e0:	18d3      	adds	r3, r2, r3
    27e2:	e007      	b.n	27f4 <qtm_calibrate_sensor_node+0x38>
    27e4:	3b80      	subs	r3, #128	; 0x80
    27e6:	b2db      	uxtb	r3, r3
    27e8:	2b01      	cmp	r3, #1
    27ea:	d805      	bhi.n	27f8 <qtm_calibrate_sensor_node+0x3c>
    27ec:	2306      	movs	r3, #6
    27ee:	434b      	muls	r3, r1
    27f0:	4805      	ldr	r0, [pc, #20]	; (2808 <qtm_calibrate_sensor_node+0x4c>)
    27f2:	18d3      	adds	r3, r2, r3
    27f4:	8098      	strh	r0, [r3, #4]
    27f6:	2000      	movs	r0, #0
    27f8:	2306      	movs	r3, #6
    27fa:	4359      	muls	r1, r3
    27fc:	1851      	adds	r1, r2, r1
    27fe:	2202      	movs	r2, #2
    2800:	780b      	ldrb	r3, [r1, #0]
    2802:	4313      	orrs	r3, r2
    2804:	700b      	strb	r3, [r1, #0]
    2806:	bd10      	pop	{r4, pc}
    2808:	00000567 	.word	0x00000567

0000280c <qtm_ptc_clear_interrupt>:
    280c:	2002      	movs	r0, #2
    280e:	4b07      	ldr	r3, [pc, #28]	; (282c <qtm_ptc_clear_interrupt+0x20>)
    2810:	7a9a      	ldrb	r2, [r3, #10]
    2812:	b2d2      	uxtb	r2, r2
    2814:	4202      	tst	r2, r0
    2816:	d002      	beq.n	281e <qtm_ptc_clear_interrupt+0x12>
    2818:	7a99      	ldrb	r1, [r3, #10]
    281a:	4301      	orrs	r1, r0
    281c:	7299      	strb	r1, [r3, #10]
    281e:	2101      	movs	r1, #1
    2820:	420a      	tst	r2, r1
    2822:	d002      	beq.n	282a <qtm_ptc_clear_interrupt+0x1e>
    2824:	7a9a      	ldrb	r2, [r3, #10]
    2826:	430a      	orrs	r2, r1
    2828:	729a      	strb	r2, [r3, #10]
    282a:	4770      	bx	lr
    282c:	42003800 	.word	0x42003800

00002830 <qtm_saml22_ptc_handler_eoc>:
    2830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2832:	4b23      	ldr	r3, [pc, #140]	; (28c0 <qtm_saml22_ptc_handler_eoc+0x90>)
    2834:	4798      	blx	r3
    2836:	2102      	movs	r1, #2
    2838:	4a22      	ldr	r2, [pc, #136]	; (28c4 <qtm_saml22_ptc_handler_eoc+0x94>)
    283a:	8813      	ldrh	r3, [r2, #0]
    283c:	438b      	bics	r3, r1
    283e:	8013      	strh	r3, [r2, #0]
    2840:	4b21      	ldr	r3, [pc, #132]	; (28c8 <qtm_saml22_ptc_handler_eoc+0x98>)
    2842:	4798      	blx	r3
    2844:	4b21      	ldr	r3, [pc, #132]	; (28cc <qtm_saml22_ptc_handler_eoc+0x9c>)
    2846:	4c22      	ldr	r4, [pc, #136]	; (28d0 <qtm_saml22_ptc_handler_eoc+0xa0>)
    2848:	4a22      	ldr	r2, [pc, #136]	; (28d4 <qtm_saml22_ptc_handler_eoc+0xa4>)
    284a:	8819      	ldrh	r1, [r3, #0]
    284c:	8818      	ldrh	r0, [r3, #0]
    284e:	8823      	ldrh	r3, [r4, #0]
    2850:	6812      	ldr	r2, [r2, #0]
    2852:	005b      	lsls	r3, r3, #1
    2854:	52d0      	strh	r0, [r2, r3]
    2856:	4b20      	ldr	r3, [pc, #128]	; (28d8 <qtm_saml22_ptc_handler_eoc+0xa8>)
    2858:	b289      	uxth	r1, r1
    285a:	781b      	ldrb	r3, [r3, #0]
    285c:	0020      	movs	r0, r4
    285e:	2b01      	cmp	r3, #1
    2860:	d002      	beq.n	2868 <qtm_saml22_ptc_handler_eoc+0x38>
    2862:	2b02      	cmp	r3, #2
    2864:	d00f      	beq.n	2886 <qtm_saml22_ptc_handler_eoc+0x56>
    2866:	e029      	b.n	28bc <qtm_saml22_ptc_handler_eoc+0x8c>
    2868:	8823      	ldrh	r3, [r4, #0]
    286a:	3301      	adds	r3, #1
    286c:	8023      	strh	r3, [r4, #0]
    286e:	4b1b      	ldr	r3, [pc, #108]	; (28dc <qtm_saml22_ptc_handler_eoc+0xac>)
    2870:	4798      	blx	r3
    2872:	2800      	cmp	r0, #0
    2874:	d105      	bne.n	2882 <qtm_saml22_ptc_handler_eoc+0x52>
    2876:	4b1a      	ldr	r3, [pc, #104]	; (28e0 <qtm_saml22_ptc_handler_eoc+0xb0>)
    2878:	8820      	ldrh	r0, [r4, #0]
    287a:	4798      	blx	r3
    287c:	2304      	movs	r3, #4
    287e:	7223      	strb	r3, [r4, #8]
    2880:	e01c      	b.n	28bc <qtm_saml22_ptc_handler_eoc+0x8c>
    2882:	68e3      	ldr	r3, [r4, #12]
    2884:	e019      	b.n	28ba <qtm_saml22_ptc_handler_eoc+0x8a>
    2886:	4b17      	ldr	r3, [pc, #92]	; (28e4 <qtm_saml22_ptc_handler_eoc+0xb4>)
    2888:	8824      	ldrh	r4, [r4, #0]
    288a:	681d      	ldr	r5, [r3, #0]
    288c:	230c      	movs	r3, #12
    288e:	4363      	muls	r3, r4
    2890:	686a      	ldr	r2, [r5, #4]
    2892:	2700      	movs	r7, #0
    2894:	18d3      	adds	r3, r2, r3
    2896:	220f      	movs	r2, #15
    2898:	7a9e      	ldrb	r6, [r3, #10]
    289a:	4016      	ands	r6, r2
    289c:	7ada      	ldrb	r2, [r3, #11]
    289e:	4296      	cmp	r6, r2
    28a0:	d201      	bcs.n	28a6 <qtm_saml22_ptc_handler_eoc+0x76>
    28a2:	1b92      	subs	r2, r2, r6
    28a4:	b2d7      	uxtb	r7, r2
    28a6:	2206      	movs	r2, #6
    28a8:	0013      	movs	r3, r2
    28aa:	40f9      	lsrs	r1, r7
    28ac:	4363      	muls	r3, r4
    28ae:	68ad      	ldr	r5, [r5, #8]
    28b0:	18eb      	adds	r3, r5, r3
    28b2:	8059      	strh	r1, [r3, #2]
    28b4:	2302      	movs	r3, #2
    28b6:	7203      	strb	r3, [r0, #8]
    28b8:	6903      	ldr	r3, [r0, #16]
    28ba:	4798      	blx	r3
    28bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    28be:	46c0      	nop			; (mov r8, r8)
    28c0:	000024a9 	.word	0x000024a9
    28c4:	42003800 	.word	0x42003800
    28c8:	0000280d 	.word	0x0000280d
    28cc:	42003858 	.word	0x42003858
    28d0:	20000a78 	.word	0x20000a78
    28d4:	20000b88 	.word	0x20000b88
    28d8:	2000007a 	.word	0x2000007a
    28dc:	000024b9 	.word	0x000024b9
    28e0:	000024f9 	.word	0x000024f9
    28e4:	20000b84 	.word	0x20000b84

000028e8 <__udivsi3>:
    28e8:	2200      	movs	r2, #0
    28ea:	0843      	lsrs	r3, r0, #1
    28ec:	428b      	cmp	r3, r1
    28ee:	d374      	bcc.n	29da <__udivsi3+0xf2>
    28f0:	0903      	lsrs	r3, r0, #4
    28f2:	428b      	cmp	r3, r1
    28f4:	d35f      	bcc.n	29b6 <__udivsi3+0xce>
    28f6:	0a03      	lsrs	r3, r0, #8
    28f8:	428b      	cmp	r3, r1
    28fa:	d344      	bcc.n	2986 <__udivsi3+0x9e>
    28fc:	0b03      	lsrs	r3, r0, #12
    28fe:	428b      	cmp	r3, r1
    2900:	d328      	bcc.n	2954 <__udivsi3+0x6c>
    2902:	0c03      	lsrs	r3, r0, #16
    2904:	428b      	cmp	r3, r1
    2906:	d30d      	bcc.n	2924 <__udivsi3+0x3c>
    2908:	22ff      	movs	r2, #255	; 0xff
    290a:	0209      	lsls	r1, r1, #8
    290c:	ba12      	rev	r2, r2
    290e:	0c03      	lsrs	r3, r0, #16
    2910:	428b      	cmp	r3, r1
    2912:	d302      	bcc.n	291a <__udivsi3+0x32>
    2914:	1212      	asrs	r2, r2, #8
    2916:	0209      	lsls	r1, r1, #8
    2918:	d065      	beq.n	29e6 <__udivsi3+0xfe>
    291a:	0b03      	lsrs	r3, r0, #12
    291c:	428b      	cmp	r3, r1
    291e:	d319      	bcc.n	2954 <__udivsi3+0x6c>
    2920:	e000      	b.n	2924 <__udivsi3+0x3c>
    2922:	0a09      	lsrs	r1, r1, #8
    2924:	0bc3      	lsrs	r3, r0, #15
    2926:	428b      	cmp	r3, r1
    2928:	d301      	bcc.n	292e <__udivsi3+0x46>
    292a:	03cb      	lsls	r3, r1, #15
    292c:	1ac0      	subs	r0, r0, r3
    292e:	4152      	adcs	r2, r2
    2930:	0b83      	lsrs	r3, r0, #14
    2932:	428b      	cmp	r3, r1
    2934:	d301      	bcc.n	293a <__udivsi3+0x52>
    2936:	038b      	lsls	r3, r1, #14
    2938:	1ac0      	subs	r0, r0, r3
    293a:	4152      	adcs	r2, r2
    293c:	0b43      	lsrs	r3, r0, #13
    293e:	428b      	cmp	r3, r1
    2940:	d301      	bcc.n	2946 <__udivsi3+0x5e>
    2942:	034b      	lsls	r3, r1, #13
    2944:	1ac0      	subs	r0, r0, r3
    2946:	4152      	adcs	r2, r2
    2948:	0b03      	lsrs	r3, r0, #12
    294a:	428b      	cmp	r3, r1
    294c:	d301      	bcc.n	2952 <__udivsi3+0x6a>
    294e:	030b      	lsls	r3, r1, #12
    2950:	1ac0      	subs	r0, r0, r3
    2952:	4152      	adcs	r2, r2
    2954:	0ac3      	lsrs	r3, r0, #11
    2956:	428b      	cmp	r3, r1
    2958:	d301      	bcc.n	295e <__udivsi3+0x76>
    295a:	02cb      	lsls	r3, r1, #11
    295c:	1ac0      	subs	r0, r0, r3
    295e:	4152      	adcs	r2, r2
    2960:	0a83      	lsrs	r3, r0, #10
    2962:	428b      	cmp	r3, r1
    2964:	d301      	bcc.n	296a <__udivsi3+0x82>
    2966:	028b      	lsls	r3, r1, #10
    2968:	1ac0      	subs	r0, r0, r3
    296a:	4152      	adcs	r2, r2
    296c:	0a43      	lsrs	r3, r0, #9
    296e:	428b      	cmp	r3, r1
    2970:	d301      	bcc.n	2976 <__udivsi3+0x8e>
    2972:	024b      	lsls	r3, r1, #9
    2974:	1ac0      	subs	r0, r0, r3
    2976:	4152      	adcs	r2, r2
    2978:	0a03      	lsrs	r3, r0, #8
    297a:	428b      	cmp	r3, r1
    297c:	d301      	bcc.n	2982 <__udivsi3+0x9a>
    297e:	020b      	lsls	r3, r1, #8
    2980:	1ac0      	subs	r0, r0, r3
    2982:	4152      	adcs	r2, r2
    2984:	d2cd      	bcs.n	2922 <__udivsi3+0x3a>
    2986:	09c3      	lsrs	r3, r0, #7
    2988:	428b      	cmp	r3, r1
    298a:	d301      	bcc.n	2990 <__udivsi3+0xa8>
    298c:	01cb      	lsls	r3, r1, #7
    298e:	1ac0      	subs	r0, r0, r3
    2990:	4152      	adcs	r2, r2
    2992:	0983      	lsrs	r3, r0, #6
    2994:	428b      	cmp	r3, r1
    2996:	d301      	bcc.n	299c <__udivsi3+0xb4>
    2998:	018b      	lsls	r3, r1, #6
    299a:	1ac0      	subs	r0, r0, r3
    299c:	4152      	adcs	r2, r2
    299e:	0943      	lsrs	r3, r0, #5
    29a0:	428b      	cmp	r3, r1
    29a2:	d301      	bcc.n	29a8 <__udivsi3+0xc0>
    29a4:	014b      	lsls	r3, r1, #5
    29a6:	1ac0      	subs	r0, r0, r3
    29a8:	4152      	adcs	r2, r2
    29aa:	0903      	lsrs	r3, r0, #4
    29ac:	428b      	cmp	r3, r1
    29ae:	d301      	bcc.n	29b4 <__udivsi3+0xcc>
    29b0:	010b      	lsls	r3, r1, #4
    29b2:	1ac0      	subs	r0, r0, r3
    29b4:	4152      	adcs	r2, r2
    29b6:	08c3      	lsrs	r3, r0, #3
    29b8:	428b      	cmp	r3, r1
    29ba:	d301      	bcc.n	29c0 <__udivsi3+0xd8>
    29bc:	00cb      	lsls	r3, r1, #3
    29be:	1ac0      	subs	r0, r0, r3
    29c0:	4152      	adcs	r2, r2
    29c2:	0883      	lsrs	r3, r0, #2
    29c4:	428b      	cmp	r3, r1
    29c6:	d301      	bcc.n	29cc <__udivsi3+0xe4>
    29c8:	008b      	lsls	r3, r1, #2
    29ca:	1ac0      	subs	r0, r0, r3
    29cc:	4152      	adcs	r2, r2
    29ce:	0843      	lsrs	r3, r0, #1
    29d0:	428b      	cmp	r3, r1
    29d2:	d301      	bcc.n	29d8 <__udivsi3+0xf0>
    29d4:	004b      	lsls	r3, r1, #1
    29d6:	1ac0      	subs	r0, r0, r3
    29d8:	4152      	adcs	r2, r2
    29da:	1a41      	subs	r1, r0, r1
    29dc:	d200      	bcs.n	29e0 <__udivsi3+0xf8>
    29de:	4601      	mov	r1, r0
    29e0:	4152      	adcs	r2, r2
    29e2:	4610      	mov	r0, r2
    29e4:	4770      	bx	lr
    29e6:	e7ff      	b.n	29e8 <__udivsi3+0x100>
    29e8:	b501      	push	{r0, lr}
    29ea:	2000      	movs	r0, #0
    29ec:	f000 f806 	bl	29fc <__aeabi_idiv0>
    29f0:	bd02      	pop	{r1, pc}
    29f2:	46c0      	nop			; (mov r8, r8)

000029f4 <__aeabi_uidivmod>:
    29f4:	2900      	cmp	r1, #0
    29f6:	d0f7      	beq.n	29e8 <__udivsi3+0x100>
    29f8:	e776      	b.n	28e8 <__udivsi3>
    29fa:	4770      	bx	lr

000029fc <__aeabi_idiv0>:
    29fc:	4770      	bx	lr
    29fe:	46c0      	nop			; (mov r8, r8)

00002a00 <__aeabi_uldivmod>:
    2a00:	2b00      	cmp	r3, #0
    2a02:	d111      	bne.n	2a28 <__aeabi_uldivmod+0x28>
    2a04:	2a00      	cmp	r2, #0
    2a06:	d10f      	bne.n	2a28 <__aeabi_uldivmod+0x28>
    2a08:	2900      	cmp	r1, #0
    2a0a:	d100      	bne.n	2a0e <__aeabi_uldivmod+0xe>
    2a0c:	2800      	cmp	r0, #0
    2a0e:	d002      	beq.n	2a16 <__aeabi_uldivmod+0x16>
    2a10:	2100      	movs	r1, #0
    2a12:	43c9      	mvns	r1, r1
    2a14:	1c08      	adds	r0, r1, #0
    2a16:	b407      	push	{r0, r1, r2}
    2a18:	4802      	ldr	r0, [pc, #8]	; (2a24 <__aeabi_uldivmod+0x24>)
    2a1a:	a102      	add	r1, pc, #8	; (adr r1, 2a24 <__aeabi_uldivmod+0x24>)
    2a1c:	1840      	adds	r0, r0, r1
    2a1e:	9002      	str	r0, [sp, #8]
    2a20:	bd03      	pop	{r0, r1, pc}
    2a22:	46c0      	nop			; (mov r8, r8)
    2a24:	ffffffd9 	.word	0xffffffd9
    2a28:	b403      	push	{r0, r1}
    2a2a:	4668      	mov	r0, sp
    2a2c:	b501      	push	{r0, lr}
    2a2e:	9802      	ldr	r0, [sp, #8]
    2a30:	f000 f806 	bl	2a40 <__udivmoddi4>
    2a34:	9b01      	ldr	r3, [sp, #4]
    2a36:	469e      	mov	lr, r3
    2a38:	b002      	add	sp, #8
    2a3a:	bc0c      	pop	{r2, r3}
    2a3c:	4770      	bx	lr
    2a3e:	46c0      	nop			; (mov r8, r8)

00002a40 <__udivmoddi4>:
    2a40:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a42:	4657      	mov	r7, sl
    2a44:	464e      	mov	r6, r9
    2a46:	4645      	mov	r5, r8
    2a48:	46de      	mov	lr, fp
    2a4a:	b5e0      	push	{r5, r6, r7, lr}
    2a4c:	0004      	movs	r4, r0
    2a4e:	b083      	sub	sp, #12
    2a50:	000d      	movs	r5, r1
    2a52:	4692      	mov	sl, r2
    2a54:	4699      	mov	r9, r3
    2a56:	428b      	cmp	r3, r1
    2a58:	d82f      	bhi.n	2aba <__udivmoddi4+0x7a>
    2a5a:	d02c      	beq.n	2ab6 <__udivmoddi4+0x76>
    2a5c:	4649      	mov	r1, r9
    2a5e:	4650      	mov	r0, sl
    2a60:	f001 fcf0 	bl	4444 <__clzdi2>
    2a64:	0029      	movs	r1, r5
    2a66:	0006      	movs	r6, r0
    2a68:	0020      	movs	r0, r4
    2a6a:	f001 fceb 	bl	4444 <__clzdi2>
    2a6e:	1a33      	subs	r3, r6, r0
    2a70:	4698      	mov	r8, r3
    2a72:	3b20      	subs	r3, #32
    2a74:	469b      	mov	fp, r3
    2a76:	d500      	bpl.n	2a7a <__udivmoddi4+0x3a>
    2a78:	e074      	b.n	2b64 <__udivmoddi4+0x124>
    2a7a:	4653      	mov	r3, sl
    2a7c:	465a      	mov	r2, fp
    2a7e:	4093      	lsls	r3, r2
    2a80:	001f      	movs	r7, r3
    2a82:	4653      	mov	r3, sl
    2a84:	4642      	mov	r2, r8
    2a86:	4093      	lsls	r3, r2
    2a88:	001e      	movs	r6, r3
    2a8a:	42af      	cmp	r7, r5
    2a8c:	d829      	bhi.n	2ae2 <__udivmoddi4+0xa2>
    2a8e:	d026      	beq.n	2ade <__udivmoddi4+0x9e>
    2a90:	465b      	mov	r3, fp
    2a92:	1ba4      	subs	r4, r4, r6
    2a94:	41bd      	sbcs	r5, r7
    2a96:	2b00      	cmp	r3, #0
    2a98:	da00      	bge.n	2a9c <__udivmoddi4+0x5c>
    2a9a:	e079      	b.n	2b90 <__udivmoddi4+0x150>
    2a9c:	2200      	movs	r2, #0
    2a9e:	2300      	movs	r3, #0
    2aa0:	9200      	str	r2, [sp, #0]
    2aa2:	9301      	str	r3, [sp, #4]
    2aa4:	2301      	movs	r3, #1
    2aa6:	465a      	mov	r2, fp
    2aa8:	4093      	lsls	r3, r2
    2aaa:	9301      	str	r3, [sp, #4]
    2aac:	2301      	movs	r3, #1
    2aae:	4642      	mov	r2, r8
    2ab0:	4093      	lsls	r3, r2
    2ab2:	9300      	str	r3, [sp, #0]
    2ab4:	e019      	b.n	2aea <__udivmoddi4+0xaa>
    2ab6:	4282      	cmp	r2, r0
    2ab8:	d9d0      	bls.n	2a5c <__udivmoddi4+0x1c>
    2aba:	2200      	movs	r2, #0
    2abc:	2300      	movs	r3, #0
    2abe:	9200      	str	r2, [sp, #0]
    2ac0:	9301      	str	r3, [sp, #4]
    2ac2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2ac4:	2b00      	cmp	r3, #0
    2ac6:	d001      	beq.n	2acc <__udivmoddi4+0x8c>
    2ac8:	601c      	str	r4, [r3, #0]
    2aca:	605d      	str	r5, [r3, #4]
    2acc:	9800      	ldr	r0, [sp, #0]
    2ace:	9901      	ldr	r1, [sp, #4]
    2ad0:	b003      	add	sp, #12
    2ad2:	bc3c      	pop	{r2, r3, r4, r5}
    2ad4:	4690      	mov	r8, r2
    2ad6:	4699      	mov	r9, r3
    2ad8:	46a2      	mov	sl, r4
    2ada:	46ab      	mov	fp, r5
    2adc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2ade:	42a3      	cmp	r3, r4
    2ae0:	d9d6      	bls.n	2a90 <__udivmoddi4+0x50>
    2ae2:	2200      	movs	r2, #0
    2ae4:	2300      	movs	r3, #0
    2ae6:	9200      	str	r2, [sp, #0]
    2ae8:	9301      	str	r3, [sp, #4]
    2aea:	4643      	mov	r3, r8
    2aec:	2b00      	cmp	r3, #0
    2aee:	d0e8      	beq.n	2ac2 <__udivmoddi4+0x82>
    2af0:	07fb      	lsls	r3, r7, #31
    2af2:	0872      	lsrs	r2, r6, #1
    2af4:	431a      	orrs	r2, r3
    2af6:	4646      	mov	r6, r8
    2af8:	087b      	lsrs	r3, r7, #1
    2afa:	e00e      	b.n	2b1a <__udivmoddi4+0xda>
    2afc:	42ab      	cmp	r3, r5
    2afe:	d101      	bne.n	2b04 <__udivmoddi4+0xc4>
    2b00:	42a2      	cmp	r2, r4
    2b02:	d80c      	bhi.n	2b1e <__udivmoddi4+0xde>
    2b04:	1aa4      	subs	r4, r4, r2
    2b06:	419d      	sbcs	r5, r3
    2b08:	2001      	movs	r0, #1
    2b0a:	1924      	adds	r4, r4, r4
    2b0c:	416d      	adcs	r5, r5
    2b0e:	2100      	movs	r1, #0
    2b10:	3e01      	subs	r6, #1
    2b12:	1824      	adds	r4, r4, r0
    2b14:	414d      	adcs	r5, r1
    2b16:	2e00      	cmp	r6, #0
    2b18:	d006      	beq.n	2b28 <__udivmoddi4+0xe8>
    2b1a:	42ab      	cmp	r3, r5
    2b1c:	d9ee      	bls.n	2afc <__udivmoddi4+0xbc>
    2b1e:	3e01      	subs	r6, #1
    2b20:	1924      	adds	r4, r4, r4
    2b22:	416d      	adcs	r5, r5
    2b24:	2e00      	cmp	r6, #0
    2b26:	d1f8      	bne.n	2b1a <__udivmoddi4+0xda>
    2b28:	465b      	mov	r3, fp
    2b2a:	9800      	ldr	r0, [sp, #0]
    2b2c:	9901      	ldr	r1, [sp, #4]
    2b2e:	1900      	adds	r0, r0, r4
    2b30:	4169      	adcs	r1, r5
    2b32:	2b00      	cmp	r3, #0
    2b34:	db22      	blt.n	2b7c <__udivmoddi4+0x13c>
    2b36:	002b      	movs	r3, r5
    2b38:	465a      	mov	r2, fp
    2b3a:	40d3      	lsrs	r3, r2
    2b3c:	002a      	movs	r2, r5
    2b3e:	4644      	mov	r4, r8
    2b40:	40e2      	lsrs	r2, r4
    2b42:	001c      	movs	r4, r3
    2b44:	465b      	mov	r3, fp
    2b46:	0015      	movs	r5, r2
    2b48:	2b00      	cmp	r3, #0
    2b4a:	db2c      	blt.n	2ba6 <__udivmoddi4+0x166>
    2b4c:	0026      	movs	r6, r4
    2b4e:	409e      	lsls	r6, r3
    2b50:	0033      	movs	r3, r6
    2b52:	0026      	movs	r6, r4
    2b54:	4647      	mov	r7, r8
    2b56:	40be      	lsls	r6, r7
    2b58:	0032      	movs	r2, r6
    2b5a:	1a80      	subs	r0, r0, r2
    2b5c:	4199      	sbcs	r1, r3
    2b5e:	9000      	str	r0, [sp, #0]
    2b60:	9101      	str	r1, [sp, #4]
    2b62:	e7ae      	b.n	2ac2 <__udivmoddi4+0x82>
    2b64:	4642      	mov	r2, r8
    2b66:	2320      	movs	r3, #32
    2b68:	1a9b      	subs	r3, r3, r2
    2b6a:	4652      	mov	r2, sl
    2b6c:	40da      	lsrs	r2, r3
    2b6e:	4641      	mov	r1, r8
    2b70:	0013      	movs	r3, r2
    2b72:	464a      	mov	r2, r9
    2b74:	408a      	lsls	r2, r1
    2b76:	0017      	movs	r7, r2
    2b78:	431f      	orrs	r7, r3
    2b7a:	e782      	b.n	2a82 <__udivmoddi4+0x42>
    2b7c:	4642      	mov	r2, r8
    2b7e:	2320      	movs	r3, #32
    2b80:	1a9b      	subs	r3, r3, r2
    2b82:	002a      	movs	r2, r5
    2b84:	4646      	mov	r6, r8
    2b86:	409a      	lsls	r2, r3
    2b88:	0023      	movs	r3, r4
    2b8a:	40f3      	lsrs	r3, r6
    2b8c:	4313      	orrs	r3, r2
    2b8e:	e7d5      	b.n	2b3c <__udivmoddi4+0xfc>
    2b90:	4642      	mov	r2, r8
    2b92:	2320      	movs	r3, #32
    2b94:	2100      	movs	r1, #0
    2b96:	1a9b      	subs	r3, r3, r2
    2b98:	2200      	movs	r2, #0
    2b9a:	9100      	str	r1, [sp, #0]
    2b9c:	9201      	str	r2, [sp, #4]
    2b9e:	2201      	movs	r2, #1
    2ba0:	40da      	lsrs	r2, r3
    2ba2:	9201      	str	r2, [sp, #4]
    2ba4:	e782      	b.n	2aac <__udivmoddi4+0x6c>
    2ba6:	4642      	mov	r2, r8
    2ba8:	2320      	movs	r3, #32
    2baa:	0026      	movs	r6, r4
    2bac:	1a9b      	subs	r3, r3, r2
    2bae:	40de      	lsrs	r6, r3
    2bb0:	002f      	movs	r7, r5
    2bb2:	46b4      	mov	ip, r6
    2bb4:	4097      	lsls	r7, r2
    2bb6:	4666      	mov	r6, ip
    2bb8:	003b      	movs	r3, r7
    2bba:	4333      	orrs	r3, r6
    2bbc:	e7c9      	b.n	2b52 <__udivmoddi4+0x112>
    2bbe:	46c0      	nop			; (mov r8, r8)

00002bc0 <__aeabi_fadd>:
    2bc0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2bc2:	46c6      	mov	lr, r8
    2bc4:	024e      	lsls	r6, r1, #9
    2bc6:	0247      	lsls	r7, r0, #9
    2bc8:	0a76      	lsrs	r6, r6, #9
    2bca:	0a7b      	lsrs	r3, r7, #9
    2bcc:	0044      	lsls	r4, r0, #1
    2bce:	0fc5      	lsrs	r5, r0, #31
    2bd0:	00f7      	lsls	r7, r6, #3
    2bd2:	0048      	lsls	r0, r1, #1
    2bd4:	4698      	mov	r8, r3
    2bd6:	b500      	push	{lr}
    2bd8:	0e24      	lsrs	r4, r4, #24
    2bda:	002a      	movs	r2, r5
    2bdc:	00db      	lsls	r3, r3, #3
    2bde:	0e00      	lsrs	r0, r0, #24
    2be0:	0fc9      	lsrs	r1, r1, #31
    2be2:	46bc      	mov	ip, r7
    2be4:	428d      	cmp	r5, r1
    2be6:	d067      	beq.n	2cb8 <__aeabi_fadd+0xf8>
    2be8:	1a22      	subs	r2, r4, r0
    2bea:	2a00      	cmp	r2, #0
    2bec:	dc00      	bgt.n	2bf0 <__aeabi_fadd+0x30>
    2bee:	e0a5      	b.n	2d3c <__aeabi_fadd+0x17c>
    2bf0:	2800      	cmp	r0, #0
    2bf2:	d13a      	bne.n	2c6a <__aeabi_fadd+0xaa>
    2bf4:	2f00      	cmp	r7, #0
    2bf6:	d100      	bne.n	2bfa <__aeabi_fadd+0x3a>
    2bf8:	e093      	b.n	2d22 <__aeabi_fadd+0x162>
    2bfa:	1e51      	subs	r1, r2, #1
    2bfc:	2900      	cmp	r1, #0
    2bfe:	d000      	beq.n	2c02 <__aeabi_fadd+0x42>
    2c00:	e0bc      	b.n	2d7c <__aeabi_fadd+0x1bc>
    2c02:	2401      	movs	r4, #1
    2c04:	1bdb      	subs	r3, r3, r7
    2c06:	015a      	lsls	r2, r3, #5
    2c08:	d546      	bpl.n	2c98 <__aeabi_fadd+0xd8>
    2c0a:	019b      	lsls	r3, r3, #6
    2c0c:	099e      	lsrs	r6, r3, #6
    2c0e:	0030      	movs	r0, r6
    2c10:	f001 fbfa 	bl	4408 <__clzsi2>
    2c14:	3805      	subs	r0, #5
    2c16:	4086      	lsls	r6, r0
    2c18:	4284      	cmp	r4, r0
    2c1a:	dd00      	ble.n	2c1e <__aeabi_fadd+0x5e>
    2c1c:	e09d      	b.n	2d5a <__aeabi_fadd+0x19a>
    2c1e:	1b04      	subs	r4, r0, r4
    2c20:	0032      	movs	r2, r6
    2c22:	2020      	movs	r0, #32
    2c24:	3401      	adds	r4, #1
    2c26:	40e2      	lsrs	r2, r4
    2c28:	1b04      	subs	r4, r0, r4
    2c2a:	40a6      	lsls	r6, r4
    2c2c:	0033      	movs	r3, r6
    2c2e:	1e5e      	subs	r6, r3, #1
    2c30:	41b3      	sbcs	r3, r6
    2c32:	2400      	movs	r4, #0
    2c34:	4313      	orrs	r3, r2
    2c36:	075a      	lsls	r2, r3, #29
    2c38:	d004      	beq.n	2c44 <__aeabi_fadd+0x84>
    2c3a:	220f      	movs	r2, #15
    2c3c:	401a      	ands	r2, r3
    2c3e:	2a04      	cmp	r2, #4
    2c40:	d000      	beq.n	2c44 <__aeabi_fadd+0x84>
    2c42:	3304      	adds	r3, #4
    2c44:	015a      	lsls	r2, r3, #5
    2c46:	d529      	bpl.n	2c9c <__aeabi_fadd+0xdc>
    2c48:	3401      	adds	r4, #1
    2c4a:	2cff      	cmp	r4, #255	; 0xff
    2c4c:	d100      	bne.n	2c50 <__aeabi_fadd+0x90>
    2c4e:	e081      	b.n	2d54 <__aeabi_fadd+0x194>
    2c50:	002a      	movs	r2, r5
    2c52:	019b      	lsls	r3, r3, #6
    2c54:	0a5b      	lsrs	r3, r3, #9
    2c56:	b2e4      	uxtb	r4, r4
    2c58:	025b      	lsls	r3, r3, #9
    2c5a:	05e4      	lsls	r4, r4, #23
    2c5c:	0a58      	lsrs	r0, r3, #9
    2c5e:	07d2      	lsls	r2, r2, #31
    2c60:	4320      	orrs	r0, r4
    2c62:	4310      	orrs	r0, r2
    2c64:	bc04      	pop	{r2}
    2c66:	4690      	mov	r8, r2
    2c68:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2c6a:	2cff      	cmp	r4, #255	; 0xff
    2c6c:	d0e3      	beq.n	2c36 <__aeabi_fadd+0x76>
    2c6e:	2180      	movs	r1, #128	; 0x80
    2c70:	0038      	movs	r0, r7
    2c72:	04c9      	lsls	r1, r1, #19
    2c74:	4308      	orrs	r0, r1
    2c76:	4684      	mov	ip, r0
    2c78:	2a1b      	cmp	r2, #27
    2c7a:	dd00      	ble.n	2c7e <__aeabi_fadd+0xbe>
    2c7c:	e082      	b.n	2d84 <__aeabi_fadd+0x1c4>
    2c7e:	2020      	movs	r0, #32
    2c80:	4661      	mov	r1, ip
    2c82:	40d1      	lsrs	r1, r2
    2c84:	1a82      	subs	r2, r0, r2
    2c86:	4660      	mov	r0, ip
    2c88:	4090      	lsls	r0, r2
    2c8a:	0002      	movs	r2, r0
    2c8c:	1e50      	subs	r0, r2, #1
    2c8e:	4182      	sbcs	r2, r0
    2c90:	430a      	orrs	r2, r1
    2c92:	1a9b      	subs	r3, r3, r2
    2c94:	015a      	lsls	r2, r3, #5
    2c96:	d4b8      	bmi.n	2c0a <__aeabi_fadd+0x4a>
    2c98:	075a      	lsls	r2, r3, #29
    2c9a:	d1ce      	bne.n	2c3a <__aeabi_fadd+0x7a>
    2c9c:	08de      	lsrs	r6, r3, #3
    2c9e:	002a      	movs	r2, r5
    2ca0:	2cff      	cmp	r4, #255	; 0xff
    2ca2:	d13a      	bne.n	2d1a <__aeabi_fadd+0x15a>
    2ca4:	2e00      	cmp	r6, #0
    2ca6:	d100      	bne.n	2caa <__aeabi_fadd+0xea>
    2ca8:	e0ae      	b.n	2e08 <__aeabi_fadd+0x248>
    2caa:	2380      	movs	r3, #128	; 0x80
    2cac:	03db      	lsls	r3, r3, #15
    2cae:	4333      	orrs	r3, r6
    2cb0:	025b      	lsls	r3, r3, #9
    2cb2:	0a5b      	lsrs	r3, r3, #9
    2cb4:	24ff      	movs	r4, #255	; 0xff
    2cb6:	e7cf      	b.n	2c58 <__aeabi_fadd+0x98>
    2cb8:	1a21      	subs	r1, r4, r0
    2cba:	2900      	cmp	r1, #0
    2cbc:	dd52      	ble.n	2d64 <__aeabi_fadd+0x1a4>
    2cbe:	2800      	cmp	r0, #0
    2cc0:	d031      	beq.n	2d26 <__aeabi_fadd+0x166>
    2cc2:	2cff      	cmp	r4, #255	; 0xff
    2cc4:	d0b7      	beq.n	2c36 <__aeabi_fadd+0x76>
    2cc6:	2080      	movs	r0, #128	; 0x80
    2cc8:	003e      	movs	r6, r7
    2cca:	04c0      	lsls	r0, r0, #19
    2ccc:	4306      	orrs	r6, r0
    2cce:	46b4      	mov	ip, r6
    2cd0:	291b      	cmp	r1, #27
    2cd2:	dd00      	ble.n	2cd6 <__aeabi_fadd+0x116>
    2cd4:	e0aa      	b.n	2e2c <__aeabi_fadd+0x26c>
    2cd6:	2620      	movs	r6, #32
    2cd8:	4660      	mov	r0, ip
    2cda:	40c8      	lsrs	r0, r1
    2cdc:	1a71      	subs	r1, r6, r1
    2cde:	4666      	mov	r6, ip
    2ce0:	408e      	lsls	r6, r1
    2ce2:	0031      	movs	r1, r6
    2ce4:	1e4e      	subs	r6, r1, #1
    2ce6:	41b1      	sbcs	r1, r6
    2ce8:	4301      	orrs	r1, r0
    2cea:	185b      	adds	r3, r3, r1
    2cec:	0159      	lsls	r1, r3, #5
    2cee:	d5d3      	bpl.n	2c98 <__aeabi_fadd+0xd8>
    2cf0:	3401      	adds	r4, #1
    2cf2:	2cff      	cmp	r4, #255	; 0xff
    2cf4:	d100      	bne.n	2cf8 <__aeabi_fadd+0x138>
    2cf6:	e087      	b.n	2e08 <__aeabi_fadd+0x248>
    2cf8:	2201      	movs	r2, #1
    2cfa:	4978      	ldr	r1, [pc, #480]	; (2edc <__aeabi_fadd+0x31c>)
    2cfc:	401a      	ands	r2, r3
    2cfe:	085b      	lsrs	r3, r3, #1
    2d00:	400b      	ands	r3, r1
    2d02:	4313      	orrs	r3, r2
    2d04:	e797      	b.n	2c36 <__aeabi_fadd+0x76>
    2d06:	2c00      	cmp	r4, #0
    2d08:	d000      	beq.n	2d0c <__aeabi_fadd+0x14c>
    2d0a:	e0a7      	b.n	2e5c <__aeabi_fadd+0x29c>
    2d0c:	2b00      	cmp	r3, #0
    2d0e:	d000      	beq.n	2d12 <__aeabi_fadd+0x152>
    2d10:	e0b6      	b.n	2e80 <__aeabi_fadd+0x2c0>
    2d12:	1e3b      	subs	r3, r7, #0
    2d14:	d162      	bne.n	2ddc <__aeabi_fadd+0x21c>
    2d16:	2600      	movs	r6, #0
    2d18:	2200      	movs	r2, #0
    2d1a:	0273      	lsls	r3, r6, #9
    2d1c:	0a5b      	lsrs	r3, r3, #9
    2d1e:	b2e4      	uxtb	r4, r4
    2d20:	e79a      	b.n	2c58 <__aeabi_fadd+0x98>
    2d22:	0014      	movs	r4, r2
    2d24:	e787      	b.n	2c36 <__aeabi_fadd+0x76>
    2d26:	2f00      	cmp	r7, #0
    2d28:	d04d      	beq.n	2dc6 <__aeabi_fadd+0x206>
    2d2a:	1e48      	subs	r0, r1, #1
    2d2c:	2800      	cmp	r0, #0
    2d2e:	d157      	bne.n	2de0 <__aeabi_fadd+0x220>
    2d30:	4463      	add	r3, ip
    2d32:	2401      	movs	r4, #1
    2d34:	015a      	lsls	r2, r3, #5
    2d36:	d5af      	bpl.n	2c98 <__aeabi_fadd+0xd8>
    2d38:	2402      	movs	r4, #2
    2d3a:	e7dd      	b.n	2cf8 <__aeabi_fadd+0x138>
    2d3c:	2a00      	cmp	r2, #0
    2d3e:	d124      	bne.n	2d8a <__aeabi_fadd+0x1ca>
    2d40:	1c62      	adds	r2, r4, #1
    2d42:	b2d2      	uxtb	r2, r2
    2d44:	2a01      	cmp	r2, #1
    2d46:	ddde      	ble.n	2d06 <__aeabi_fadd+0x146>
    2d48:	1bde      	subs	r6, r3, r7
    2d4a:	0172      	lsls	r2, r6, #5
    2d4c:	d535      	bpl.n	2dba <__aeabi_fadd+0x1fa>
    2d4e:	1afe      	subs	r6, r7, r3
    2d50:	000d      	movs	r5, r1
    2d52:	e75c      	b.n	2c0e <__aeabi_fadd+0x4e>
    2d54:	002a      	movs	r2, r5
    2d56:	2300      	movs	r3, #0
    2d58:	e77e      	b.n	2c58 <__aeabi_fadd+0x98>
    2d5a:	0033      	movs	r3, r6
    2d5c:	4a60      	ldr	r2, [pc, #384]	; (2ee0 <__aeabi_fadd+0x320>)
    2d5e:	1a24      	subs	r4, r4, r0
    2d60:	4013      	ands	r3, r2
    2d62:	e768      	b.n	2c36 <__aeabi_fadd+0x76>
    2d64:	2900      	cmp	r1, #0
    2d66:	d163      	bne.n	2e30 <__aeabi_fadd+0x270>
    2d68:	1c61      	adds	r1, r4, #1
    2d6a:	b2c8      	uxtb	r0, r1
    2d6c:	2801      	cmp	r0, #1
    2d6e:	dd4e      	ble.n	2e0e <__aeabi_fadd+0x24e>
    2d70:	29ff      	cmp	r1, #255	; 0xff
    2d72:	d049      	beq.n	2e08 <__aeabi_fadd+0x248>
    2d74:	4463      	add	r3, ip
    2d76:	085b      	lsrs	r3, r3, #1
    2d78:	000c      	movs	r4, r1
    2d7a:	e75c      	b.n	2c36 <__aeabi_fadd+0x76>
    2d7c:	2aff      	cmp	r2, #255	; 0xff
    2d7e:	d041      	beq.n	2e04 <__aeabi_fadd+0x244>
    2d80:	000a      	movs	r2, r1
    2d82:	e779      	b.n	2c78 <__aeabi_fadd+0xb8>
    2d84:	2201      	movs	r2, #1
    2d86:	1a9b      	subs	r3, r3, r2
    2d88:	e784      	b.n	2c94 <__aeabi_fadd+0xd4>
    2d8a:	2c00      	cmp	r4, #0
    2d8c:	d01d      	beq.n	2dca <__aeabi_fadd+0x20a>
    2d8e:	28ff      	cmp	r0, #255	; 0xff
    2d90:	d022      	beq.n	2dd8 <__aeabi_fadd+0x218>
    2d92:	2480      	movs	r4, #128	; 0x80
    2d94:	04e4      	lsls	r4, r4, #19
    2d96:	4252      	negs	r2, r2
    2d98:	4323      	orrs	r3, r4
    2d9a:	2a1b      	cmp	r2, #27
    2d9c:	dd00      	ble.n	2da0 <__aeabi_fadd+0x1e0>
    2d9e:	e08a      	b.n	2eb6 <__aeabi_fadd+0x2f6>
    2da0:	001c      	movs	r4, r3
    2da2:	2520      	movs	r5, #32
    2da4:	40d4      	lsrs	r4, r2
    2da6:	1aaa      	subs	r2, r5, r2
    2da8:	4093      	lsls	r3, r2
    2daa:	1e5a      	subs	r2, r3, #1
    2dac:	4193      	sbcs	r3, r2
    2dae:	4323      	orrs	r3, r4
    2db0:	4662      	mov	r2, ip
    2db2:	0004      	movs	r4, r0
    2db4:	1ad3      	subs	r3, r2, r3
    2db6:	000d      	movs	r5, r1
    2db8:	e725      	b.n	2c06 <__aeabi_fadd+0x46>
    2dba:	2e00      	cmp	r6, #0
    2dbc:	d000      	beq.n	2dc0 <__aeabi_fadd+0x200>
    2dbe:	e726      	b.n	2c0e <__aeabi_fadd+0x4e>
    2dc0:	2200      	movs	r2, #0
    2dc2:	2400      	movs	r4, #0
    2dc4:	e7a9      	b.n	2d1a <__aeabi_fadd+0x15a>
    2dc6:	000c      	movs	r4, r1
    2dc8:	e735      	b.n	2c36 <__aeabi_fadd+0x76>
    2dca:	2b00      	cmp	r3, #0
    2dcc:	d04d      	beq.n	2e6a <__aeabi_fadd+0x2aa>
    2dce:	43d2      	mvns	r2, r2
    2dd0:	2a00      	cmp	r2, #0
    2dd2:	d0ed      	beq.n	2db0 <__aeabi_fadd+0x1f0>
    2dd4:	28ff      	cmp	r0, #255	; 0xff
    2dd6:	d1e0      	bne.n	2d9a <__aeabi_fadd+0x1da>
    2dd8:	4663      	mov	r3, ip
    2dda:	24ff      	movs	r4, #255	; 0xff
    2ddc:	000d      	movs	r5, r1
    2dde:	e72a      	b.n	2c36 <__aeabi_fadd+0x76>
    2de0:	29ff      	cmp	r1, #255	; 0xff
    2de2:	d00f      	beq.n	2e04 <__aeabi_fadd+0x244>
    2de4:	0001      	movs	r1, r0
    2de6:	e773      	b.n	2cd0 <__aeabi_fadd+0x110>
    2de8:	2b00      	cmp	r3, #0
    2dea:	d061      	beq.n	2eb0 <__aeabi_fadd+0x2f0>
    2dec:	24ff      	movs	r4, #255	; 0xff
    2dee:	2f00      	cmp	r7, #0
    2df0:	d100      	bne.n	2df4 <__aeabi_fadd+0x234>
    2df2:	e720      	b.n	2c36 <__aeabi_fadd+0x76>
    2df4:	2280      	movs	r2, #128	; 0x80
    2df6:	4641      	mov	r1, r8
    2df8:	03d2      	lsls	r2, r2, #15
    2dfa:	4211      	tst	r1, r2
    2dfc:	d002      	beq.n	2e04 <__aeabi_fadd+0x244>
    2dfe:	4216      	tst	r6, r2
    2e00:	d100      	bne.n	2e04 <__aeabi_fadd+0x244>
    2e02:	003b      	movs	r3, r7
    2e04:	24ff      	movs	r4, #255	; 0xff
    2e06:	e716      	b.n	2c36 <__aeabi_fadd+0x76>
    2e08:	24ff      	movs	r4, #255	; 0xff
    2e0a:	2300      	movs	r3, #0
    2e0c:	e724      	b.n	2c58 <__aeabi_fadd+0x98>
    2e0e:	2c00      	cmp	r4, #0
    2e10:	d1ea      	bne.n	2de8 <__aeabi_fadd+0x228>
    2e12:	2b00      	cmp	r3, #0
    2e14:	d058      	beq.n	2ec8 <__aeabi_fadd+0x308>
    2e16:	2f00      	cmp	r7, #0
    2e18:	d100      	bne.n	2e1c <__aeabi_fadd+0x25c>
    2e1a:	e70c      	b.n	2c36 <__aeabi_fadd+0x76>
    2e1c:	4463      	add	r3, ip
    2e1e:	015a      	lsls	r2, r3, #5
    2e20:	d400      	bmi.n	2e24 <__aeabi_fadd+0x264>
    2e22:	e739      	b.n	2c98 <__aeabi_fadd+0xd8>
    2e24:	4a2e      	ldr	r2, [pc, #184]	; (2ee0 <__aeabi_fadd+0x320>)
    2e26:	000c      	movs	r4, r1
    2e28:	4013      	ands	r3, r2
    2e2a:	e704      	b.n	2c36 <__aeabi_fadd+0x76>
    2e2c:	2101      	movs	r1, #1
    2e2e:	e75c      	b.n	2cea <__aeabi_fadd+0x12a>
    2e30:	2c00      	cmp	r4, #0
    2e32:	d11e      	bne.n	2e72 <__aeabi_fadd+0x2b2>
    2e34:	2b00      	cmp	r3, #0
    2e36:	d040      	beq.n	2eba <__aeabi_fadd+0x2fa>
    2e38:	43c9      	mvns	r1, r1
    2e3a:	2900      	cmp	r1, #0
    2e3c:	d00b      	beq.n	2e56 <__aeabi_fadd+0x296>
    2e3e:	28ff      	cmp	r0, #255	; 0xff
    2e40:	d036      	beq.n	2eb0 <__aeabi_fadd+0x2f0>
    2e42:	291b      	cmp	r1, #27
    2e44:	dc47      	bgt.n	2ed6 <__aeabi_fadd+0x316>
    2e46:	001c      	movs	r4, r3
    2e48:	2620      	movs	r6, #32
    2e4a:	40cc      	lsrs	r4, r1
    2e4c:	1a71      	subs	r1, r6, r1
    2e4e:	408b      	lsls	r3, r1
    2e50:	1e59      	subs	r1, r3, #1
    2e52:	418b      	sbcs	r3, r1
    2e54:	4323      	orrs	r3, r4
    2e56:	4463      	add	r3, ip
    2e58:	0004      	movs	r4, r0
    2e5a:	e747      	b.n	2cec <__aeabi_fadd+0x12c>
    2e5c:	2b00      	cmp	r3, #0
    2e5e:	d118      	bne.n	2e92 <__aeabi_fadd+0x2d2>
    2e60:	1e3b      	subs	r3, r7, #0
    2e62:	d02d      	beq.n	2ec0 <__aeabi_fadd+0x300>
    2e64:	000d      	movs	r5, r1
    2e66:	24ff      	movs	r4, #255	; 0xff
    2e68:	e6e5      	b.n	2c36 <__aeabi_fadd+0x76>
    2e6a:	003b      	movs	r3, r7
    2e6c:	0004      	movs	r4, r0
    2e6e:	000d      	movs	r5, r1
    2e70:	e6e1      	b.n	2c36 <__aeabi_fadd+0x76>
    2e72:	28ff      	cmp	r0, #255	; 0xff
    2e74:	d01c      	beq.n	2eb0 <__aeabi_fadd+0x2f0>
    2e76:	2480      	movs	r4, #128	; 0x80
    2e78:	04e4      	lsls	r4, r4, #19
    2e7a:	4249      	negs	r1, r1
    2e7c:	4323      	orrs	r3, r4
    2e7e:	e7e0      	b.n	2e42 <__aeabi_fadd+0x282>
    2e80:	2f00      	cmp	r7, #0
    2e82:	d100      	bne.n	2e86 <__aeabi_fadd+0x2c6>
    2e84:	e6d7      	b.n	2c36 <__aeabi_fadd+0x76>
    2e86:	1bde      	subs	r6, r3, r7
    2e88:	0172      	lsls	r2, r6, #5
    2e8a:	d51f      	bpl.n	2ecc <__aeabi_fadd+0x30c>
    2e8c:	1afb      	subs	r3, r7, r3
    2e8e:	000d      	movs	r5, r1
    2e90:	e6d1      	b.n	2c36 <__aeabi_fadd+0x76>
    2e92:	24ff      	movs	r4, #255	; 0xff
    2e94:	2f00      	cmp	r7, #0
    2e96:	d100      	bne.n	2e9a <__aeabi_fadd+0x2da>
    2e98:	e6cd      	b.n	2c36 <__aeabi_fadd+0x76>
    2e9a:	2280      	movs	r2, #128	; 0x80
    2e9c:	4640      	mov	r0, r8
    2e9e:	03d2      	lsls	r2, r2, #15
    2ea0:	4210      	tst	r0, r2
    2ea2:	d0af      	beq.n	2e04 <__aeabi_fadd+0x244>
    2ea4:	4216      	tst	r6, r2
    2ea6:	d1ad      	bne.n	2e04 <__aeabi_fadd+0x244>
    2ea8:	003b      	movs	r3, r7
    2eaa:	000d      	movs	r5, r1
    2eac:	24ff      	movs	r4, #255	; 0xff
    2eae:	e6c2      	b.n	2c36 <__aeabi_fadd+0x76>
    2eb0:	4663      	mov	r3, ip
    2eb2:	24ff      	movs	r4, #255	; 0xff
    2eb4:	e6bf      	b.n	2c36 <__aeabi_fadd+0x76>
    2eb6:	2301      	movs	r3, #1
    2eb8:	e77a      	b.n	2db0 <__aeabi_fadd+0x1f0>
    2eba:	003b      	movs	r3, r7
    2ebc:	0004      	movs	r4, r0
    2ebe:	e6ba      	b.n	2c36 <__aeabi_fadd+0x76>
    2ec0:	2680      	movs	r6, #128	; 0x80
    2ec2:	2200      	movs	r2, #0
    2ec4:	03f6      	lsls	r6, r6, #15
    2ec6:	e6f0      	b.n	2caa <__aeabi_fadd+0xea>
    2ec8:	003b      	movs	r3, r7
    2eca:	e6b4      	b.n	2c36 <__aeabi_fadd+0x76>
    2ecc:	1e33      	subs	r3, r6, #0
    2ece:	d000      	beq.n	2ed2 <__aeabi_fadd+0x312>
    2ed0:	e6e2      	b.n	2c98 <__aeabi_fadd+0xd8>
    2ed2:	2200      	movs	r2, #0
    2ed4:	e721      	b.n	2d1a <__aeabi_fadd+0x15a>
    2ed6:	2301      	movs	r3, #1
    2ed8:	e7bd      	b.n	2e56 <__aeabi_fadd+0x296>
    2eda:	46c0      	nop			; (mov r8, r8)
    2edc:	7dffffff 	.word	0x7dffffff
    2ee0:	fbffffff 	.word	0xfbffffff

00002ee4 <__aeabi_ddiv>:
    2ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ee6:	4657      	mov	r7, sl
    2ee8:	4645      	mov	r5, r8
    2eea:	46de      	mov	lr, fp
    2eec:	464e      	mov	r6, r9
    2eee:	b5e0      	push	{r5, r6, r7, lr}
    2ef0:	004c      	lsls	r4, r1, #1
    2ef2:	030e      	lsls	r6, r1, #12
    2ef4:	b087      	sub	sp, #28
    2ef6:	4683      	mov	fp, r0
    2ef8:	4692      	mov	sl, r2
    2efa:	001d      	movs	r5, r3
    2efc:	4680      	mov	r8, r0
    2efe:	0b36      	lsrs	r6, r6, #12
    2f00:	0d64      	lsrs	r4, r4, #21
    2f02:	0fcf      	lsrs	r7, r1, #31
    2f04:	2c00      	cmp	r4, #0
    2f06:	d04f      	beq.n	2fa8 <__aeabi_ddiv+0xc4>
    2f08:	4b6f      	ldr	r3, [pc, #444]	; (30c8 <__aeabi_ddiv+0x1e4>)
    2f0a:	429c      	cmp	r4, r3
    2f0c:	d035      	beq.n	2f7a <__aeabi_ddiv+0x96>
    2f0e:	2380      	movs	r3, #128	; 0x80
    2f10:	0f42      	lsrs	r2, r0, #29
    2f12:	041b      	lsls	r3, r3, #16
    2f14:	00f6      	lsls	r6, r6, #3
    2f16:	4313      	orrs	r3, r2
    2f18:	4333      	orrs	r3, r6
    2f1a:	4699      	mov	r9, r3
    2f1c:	00c3      	lsls	r3, r0, #3
    2f1e:	4698      	mov	r8, r3
    2f20:	4b6a      	ldr	r3, [pc, #424]	; (30cc <__aeabi_ddiv+0x1e8>)
    2f22:	2600      	movs	r6, #0
    2f24:	469c      	mov	ip, r3
    2f26:	2300      	movs	r3, #0
    2f28:	4464      	add	r4, ip
    2f2a:	9303      	str	r3, [sp, #12]
    2f2c:	032b      	lsls	r3, r5, #12
    2f2e:	0b1b      	lsrs	r3, r3, #12
    2f30:	469b      	mov	fp, r3
    2f32:	006b      	lsls	r3, r5, #1
    2f34:	0fed      	lsrs	r5, r5, #31
    2f36:	4650      	mov	r0, sl
    2f38:	0d5b      	lsrs	r3, r3, #21
    2f3a:	9501      	str	r5, [sp, #4]
    2f3c:	d05e      	beq.n	2ffc <__aeabi_ddiv+0x118>
    2f3e:	4a62      	ldr	r2, [pc, #392]	; (30c8 <__aeabi_ddiv+0x1e4>)
    2f40:	4293      	cmp	r3, r2
    2f42:	d053      	beq.n	2fec <__aeabi_ddiv+0x108>
    2f44:	465a      	mov	r2, fp
    2f46:	00d1      	lsls	r1, r2, #3
    2f48:	2280      	movs	r2, #128	; 0x80
    2f4a:	0f40      	lsrs	r0, r0, #29
    2f4c:	0412      	lsls	r2, r2, #16
    2f4e:	4302      	orrs	r2, r0
    2f50:	430a      	orrs	r2, r1
    2f52:	4693      	mov	fp, r2
    2f54:	4652      	mov	r2, sl
    2f56:	00d1      	lsls	r1, r2, #3
    2f58:	4a5c      	ldr	r2, [pc, #368]	; (30cc <__aeabi_ddiv+0x1e8>)
    2f5a:	4694      	mov	ip, r2
    2f5c:	2200      	movs	r2, #0
    2f5e:	4463      	add	r3, ip
    2f60:	0038      	movs	r0, r7
    2f62:	4068      	eors	r0, r5
    2f64:	4684      	mov	ip, r0
    2f66:	9002      	str	r0, [sp, #8]
    2f68:	1ae4      	subs	r4, r4, r3
    2f6a:	4316      	orrs	r6, r2
    2f6c:	2e0f      	cmp	r6, #15
    2f6e:	d900      	bls.n	2f72 <__aeabi_ddiv+0x8e>
    2f70:	e0b4      	b.n	30dc <__aeabi_ddiv+0x1f8>
    2f72:	4b57      	ldr	r3, [pc, #348]	; (30d0 <__aeabi_ddiv+0x1ec>)
    2f74:	00b6      	lsls	r6, r6, #2
    2f76:	599b      	ldr	r3, [r3, r6]
    2f78:	469f      	mov	pc, r3
    2f7a:	0003      	movs	r3, r0
    2f7c:	4333      	orrs	r3, r6
    2f7e:	4699      	mov	r9, r3
    2f80:	d16c      	bne.n	305c <__aeabi_ddiv+0x178>
    2f82:	2300      	movs	r3, #0
    2f84:	4698      	mov	r8, r3
    2f86:	3302      	adds	r3, #2
    2f88:	2608      	movs	r6, #8
    2f8a:	9303      	str	r3, [sp, #12]
    2f8c:	e7ce      	b.n	2f2c <__aeabi_ddiv+0x48>
    2f8e:	46cb      	mov	fp, r9
    2f90:	4641      	mov	r1, r8
    2f92:	9a03      	ldr	r2, [sp, #12]
    2f94:	9701      	str	r7, [sp, #4]
    2f96:	2a02      	cmp	r2, #2
    2f98:	d165      	bne.n	3066 <__aeabi_ddiv+0x182>
    2f9a:	9b01      	ldr	r3, [sp, #4]
    2f9c:	4c4a      	ldr	r4, [pc, #296]	; (30c8 <__aeabi_ddiv+0x1e4>)
    2f9e:	469c      	mov	ip, r3
    2fa0:	2300      	movs	r3, #0
    2fa2:	2200      	movs	r2, #0
    2fa4:	4698      	mov	r8, r3
    2fa6:	e06b      	b.n	3080 <__aeabi_ddiv+0x19c>
    2fa8:	0003      	movs	r3, r0
    2faa:	4333      	orrs	r3, r6
    2fac:	4699      	mov	r9, r3
    2fae:	d04e      	beq.n	304e <__aeabi_ddiv+0x16a>
    2fb0:	2e00      	cmp	r6, #0
    2fb2:	d100      	bne.n	2fb6 <__aeabi_ddiv+0xd2>
    2fb4:	e1bc      	b.n	3330 <__aeabi_ddiv+0x44c>
    2fb6:	0030      	movs	r0, r6
    2fb8:	f001 fa26 	bl	4408 <__clzsi2>
    2fbc:	0003      	movs	r3, r0
    2fbe:	3b0b      	subs	r3, #11
    2fc0:	2b1c      	cmp	r3, #28
    2fc2:	dd00      	ble.n	2fc6 <__aeabi_ddiv+0xe2>
    2fc4:	e1ac      	b.n	3320 <__aeabi_ddiv+0x43c>
    2fc6:	221d      	movs	r2, #29
    2fc8:	1ad3      	subs	r3, r2, r3
    2fca:	465a      	mov	r2, fp
    2fcc:	0001      	movs	r1, r0
    2fce:	40da      	lsrs	r2, r3
    2fd0:	3908      	subs	r1, #8
    2fd2:	408e      	lsls	r6, r1
    2fd4:	0013      	movs	r3, r2
    2fd6:	4333      	orrs	r3, r6
    2fd8:	4699      	mov	r9, r3
    2fda:	465b      	mov	r3, fp
    2fdc:	408b      	lsls	r3, r1
    2fde:	4698      	mov	r8, r3
    2fe0:	2300      	movs	r3, #0
    2fe2:	4c3c      	ldr	r4, [pc, #240]	; (30d4 <__aeabi_ddiv+0x1f0>)
    2fe4:	2600      	movs	r6, #0
    2fe6:	1a24      	subs	r4, r4, r0
    2fe8:	9303      	str	r3, [sp, #12]
    2fea:	e79f      	b.n	2f2c <__aeabi_ddiv+0x48>
    2fec:	4651      	mov	r1, sl
    2fee:	465a      	mov	r2, fp
    2ff0:	4311      	orrs	r1, r2
    2ff2:	d129      	bne.n	3048 <__aeabi_ddiv+0x164>
    2ff4:	2200      	movs	r2, #0
    2ff6:	4693      	mov	fp, r2
    2ff8:	3202      	adds	r2, #2
    2ffa:	e7b1      	b.n	2f60 <__aeabi_ddiv+0x7c>
    2ffc:	4659      	mov	r1, fp
    2ffe:	4301      	orrs	r1, r0
    3000:	d01e      	beq.n	3040 <__aeabi_ddiv+0x15c>
    3002:	465b      	mov	r3, fp
    3004:	2b00      	cmp	r3, #0
    3006:	d100      	bne.n	300a <__aeabi_ddiv+0x126>
    3008:	e19e      	b.n	3348 <__aeabi_ddiv+0x464>
    300a:	4658      	mov	r0, fp
    300c:	f001 f9fc 	bl	4408 <__clzsi2>
    3010:	0003      	movs	r3, r0
    3012:	3b0b      	subs	r3, #11
    3014:	2b1c      	cmp	r3, #28
    3016:	dd00      	ble.n	301a <__aeabi_ddiv+0x136>
    3018:	e18f      	b.n	333a <__aeabi_ddiv+0x456>
    301a:	0002      	movs	r2, r0
    301c:	4659      	mov	r1, fp
    301e:	3a08      	subs	r2, #8
    3020:	4091      	lsls	r1, r2
    3022:	468b      	mov	fp, r1
    3024:	211d      	movs	r1, #29
    3026:	1acb      	subs	r3, r1, r3
    3028:	4651      	mov	r1, sl
    302a:	40d9      	lsrs	r1, r3
    302c:	000b      	movs	r3, r1
    302e:	4659      	mov	r1, fp
    3030:	430b      	orrs	r3, r1
    3032:	4651      	mov	r1, sl
    3034:	469b      	mov	fp, r3
    3036:	4091      	lsls	r1, r2
    3038:	4b26      	ldr	r3, [pc, #152]	; (30d4 <__aeabi_ddiv+0x1f0>)
    303a:	2200      	movs	r2, #0
    303c:	1a1b      	subs	r3, r3, r0
    303e:	e78f      	b.n	2f60 <__aeabi_ddiv+0x7c>
    3040:	2300      	movs	r3, #0
    3042:	2201      	movs	r2, #1
    3044:	469b      	mov	fp, r3
    3046:	e78b      	b.n	2f60 <__aeabi_ddiv+0x7c>
    3048:	4651      	mov	r1, sl
    304a:	2203      	movs	r2, #3
    304c:	e788      	b.n	2f60 <__aeabi_ddiv+0x7c>
    304e:	2300      	movs	r3, #0
    3050:	4698      	mov	r8, r3
    3052:	3301      	adds	r3, #1
    3054:	2604      	movs	r6, #4
    3056:	2400      	movs	r4, #0
    3058:	9303      	str	r3, [sp, #12]
    305a:	e767      	b.n	2f2c <__aeabi_ddiv+0x48>
    305c:	2303      	movs	r3, #3
    305e:	46b1      	mov	r9, r6
    3060:	9303      	str	r3, [sp, #12]
    3062:	260c      	movs	r6, #12
    3064:	e762      	b.n	2f2c <__aeabi_ddiv+0x48>
    3066:	2a03      	cmp	r2, #3
    3068:	d100      	bne.n	306c <__aeabi_ddiv+0x188>
    306a:	e25c      	b.n	3526 <__aeabi_ddiv+0x642>
    306c:	9b01      	ldr	r3, [sp, #4]
    306e:	2a01      	cmp	r2, #1
    3070:	d000      	beq.n	3074 <__aeabi_ddiv+0x190>
    3072:	e1e4      	b.n	343e <__aeabi_ddiv+0x55a>
    3074:	4013      	ands	r3, r2
    3076:	469c      	mov	ip, r3
    3078:	2300      	movs	r3, #0
    307a:	2400      	movs	r4, #0
    307c:	2200      	movs	r2, #0
    307e:	4698      	mov	r8, r3
    3080:	2100      	movs	r1, #0
    3082:	0312      	lsls	r2, r2, #12
    3084:	0b13      	lsrs	r3, r2, #12
    3086:	0d0a      	lsrs	r2, r1, #20
    3088:	0512      	lsls	r2, r2, #20
    308a:	431a      	orrs	r2, r3
    308c:	0523      	lsls	r3, r4, #20
    308e:	4c12      	ldr	r4, [pc, #72]	; (30d8 <__aeabi_ddiv+0x1f4>)
    3090:	4640      	mov	r0, r8
    3092:	4022      	ands	r2, r4
    3094:	4313      	orrs	r3, r2
    3096:	4662      	mov	r2, ip
    3098:	005b      	lsls	r3, r3, #1
    309a:	07d2      	lsls	r2, r2, #31
    309c:	085b      	lsrs	r3, r3, #1
    309e:	4313      	orrs	r3, r2
    30a0:	0019      	movs	r1, r3
    30a2:	b007      	add	sp, #28
    30a4:	bc3c      	pop	{r2, r3, r4, r5}
    30a6:	4690      	mov	r8, r2
    30a8:	4699      	mov	r9, r3
    30aa:	46a2      	mov	sl, r4
    30ac:	46ab      	mov	fp, r5
    30ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    30b0:	2300      	movs	r3, #0
    30b2:	2280      	movs	r2, #128	; 0x80
    30b4:	469c      	mov	ip, r3
    30b6:	0312      	lsls	r2, r2, #12
    30b8:	4698      	mov	r8, r3
    30ba:	4c03      	ldr	r4, [pc, #12]	; (30c8 <__aeabi_ddiv+0x1e4>)
    30bc:	e7e0      	b.n	3080 <__aeabi_ddiv+0x19c>
    30be:	2300      	movs	r3, #0
    30c0:	4c01      	ldr	r4, [pc, #4]	; (30c8 <__aeabi_ddiv+0x1e4>)
    30c2:	2200      	movs	r2, #0
    30c4:	4698      	mov	r8, r3
    30c6:	e7db      	b.n	3080 <__aeabi_ddiv+0x19c>
    30c8:	000007ff 	.word	0x000007ff
    30cc:	fffffc01 	.word	0xfffffc01
    30d0:	0000a034 	.word	0x0000a034
    30d4:	fffffc0d 	.word	0xfffffc0d
    30d8:	800fffff 	.word	0x800fffff
    30dc:	45d9      	cmp	r9, fp
    30de:	d900      	bls.n	30e2 <__aeabi_ddiv+0x1fe>
    30e0:	e139      	b.n	3356 <__aeabi_ddiv+0x472>
    30e2:	d100      	bne.n	30e6 <__aeabi_ddiv+0x202>
    30e4:	e134      	b.n	3350 <__aeabi_ddiv+0x46c>
    30e6:	2300      	movs	r3, #0
    30e8:	4646      	mov	r6, r8
    30ea:	464d      	mov	r5, r9
    30ec:	469a      	mov	sl, r3
    30ee:	3c01      	subs	r4, #1
    30f0:	465b      	mov	r3, fp
    30f2:	0e0a      	lsrs	r2, r1, #24
    30f4:	021b      	lsls	r3, r3, #8
    30f6:	431a      	orrs	r2, r3
    30f8:	020b      	lsls	r3, r1, #8
    30fa:	0c17      	lsrs	r7, r2, #16
    30fc:	9303      	str	r3, [sp, #12]
    30fe:	0413      	lsls	r3, r2, #16
    3100:	0c1b      	lsrs	r3, r3, #16
    3102:	0039      	movs	r1, r7
    3104:	0028      	movs	r0, r5
    3106:	4690      	mov	r8, r2
    3108:	9301      	str	r3, [sp, #4]
    310a:	f7ff fbed 	bl	28e8 <__udivsi3>
    310e:	0002      	movs	r2, r0
    3110:	9b01      	ldr	r3, [sp, #4]
    3112:	4683      	mov	fp, r0
    3114:	435a      	muls	r2, r3
    3116:	0028      	movs	r0, r5
    3118:	0039      	movs	r1, r7
    311a:	4691      	mov	r9, r2
    311c:	f7ff fc6a 	bl	29f4 <__aeabi_uidivmod>
    3120:	0c35      	lsrs	r5, r6, #16
    3122:	0409      	lsls	r1, r1, #16
    3124:	430d      	orrs	r5, r1
    3126:	45a9      	cmp	r9, r5
    3128:	d90d      	bls.n	3146 <__aeabi_ddiv+0x262>
    312a:	465b      	mov	r3, fp
    312c:	4445      	add	r5, r8
    312e:	3b01      	subs	r3, #1
    3130:	45a8      	cmp	r8, r5
    3132:	d900      	bls.n	3136 <__aeabi_ddiv+0x252>
    3134:	e13a      	b.n	33ac <__aeabi_ddiv+0x4c8>
    3136:	45a9      	cmp	r9, r5
    3138:	d800      	bhi.n	313c <__aeabi_ddiv+0x258>
    313a:	e137      	b.n	33ac <__aeabi_ddiv+0x4c8>
    313c:	2302      	movs	r3, #2
    313e:	425b      	negs	r3, r3
    3140:	469c      	mov	ip, r3
    3142:	4445      	add	r5, r8
    3144:	44e3      	add	fp, ip
    3146:	464b      	mov	r3, r9
    3148:	1aeb      	subs	r3, r5, r3
    314a:	0039      	movs	r1, r7
    314c:	0018      	movs	r0, r3
    314e:	9304      	str	r3, [sp, #16]
    3150:	f7ff fbca 	bl	28e8 <__udivsi3>
    3154:	9b01      	ldr	r3, [sp, #4]
    3156:	0005      	movs	r5, r0
    3158:	4343      	muls	r3, r0
    315a:	0039      	movs	r1, r7
    315c:	9804      	ldr	r0, [sp, #16]
    315e:	4699      	mov	r9, r3
    3160:	f7ff fc48 	bl	29f4 <__aeabi_uidivmod>
    3164:	0433      	lsls	r3, r6, #16
    3166:	0409      	lsls	r1, r1, #16
    3168:	0c1b      	lsrs	r3, r3, #16
    316a:	430b      	orrs	r3, r1
    316c:	4599      	cmp	r9, r3
    316e:	d909      	bls.n	3184 <__aeabi_ddiv+0x2a0>
    3170:	4443      	add	r3, r8
    3172:	1e6a      	subs	r2, r5, #1
    3174:	4598      	cmp	r8, r3
    3176:	d900      	bls.n	317a <__aeabi_ddiv+0x296>
    3178:	e11a      	b.n	33b0 <__aeabi_ddiv+0x4cc>
    317a:	4599      	cmp	r9, r3
    317c:	d800      	bhi.n	3180 <__aeabi_ddiv+0x29c>
    317e:	e117      	b.n	33b0 <__aeabi_ddiv+0x4cc>
    3180:	3d02      	subs	r5, #2
    3182:	4443      	add	r3, r8
    3184:	464a      	mov	r2, r9
    3186:	1a9b      	subs	r3, r3, r2
    3188:	465a      	mov	r2, fp
    318a:	0412      	lsls	r2, r2, #16
    318c:	432a      	orrs	r2, r5
    318e:	9903      	ldr	r1, [sp, #12]
    3190:	4693      	mov	fp, r2
    3192:	0c10      	lsrs	r0, r2, #16
    3194:	0c0a      	lsrs	r2, r1, #16
    3196:	4691      	mov	r9, r2
    3198:	0409      	lsls	r1, r1, #16
    319a:	465a      	mov	r2, fp
    319c:	0c09      	lsrs	r1, r1, #16
    319e:	464e      	mov	r6, r9
    31a0:	000d      	movs	r5, r1
    31a2:	0412      	lsls	r2, r2, #16
    31a4:	0c12      	lsrs	r2, r2, #16
    31a6:	4345      	muls	r5, r0
    31a8:	9105      	str	r1, [sp, #20]
    31aa:	4351      	muls	r1, r2
    31ac:	4372      	muls	r2, r6
    31ae:	4370      	muls	r0, r6
    31b0:	1952      	adds	r2, r2, r5
    31b2:	0c0e      	lsrs	r6, r1, #16
    31b4:	18b2      	adds	r2, r6, r2
    31b6:	4295      	cmp	r5, r2
    31b8:	d903      	bls.n	31c2 <__aeabi_ddiv+0x2de>
    31ba:	2580      	movs	r5, #128	; 0x80
    31bc:	026d      	lsls	r5, r5, #9
    31be:	46ac      	mov	ip, r5
    31c0:	4460      	add	r0, ip
    31c2:	0c15      	lsrs	r5, r2, #16
    31c4:	0409      	lsls	r1, r1, #16
    31c6:	0412      	lsls	r2, r2, #16
    31c8:	0c09      	lsrs	r1, r1, #16
    31ca:	1828      	adds	r0, r5, r0
    31cc:	1852      	adds	r2, r2, r1
    31ce:	4283      	cmp	r3, r0
    31d0:	d200      	bcs.n	31d4 <__aeabi_ddiv+0x2f0>
    31d2:	e0ce      	b.n	3372 <__aeabi_ddiv+0x48e>
    31d4:	d100      	bne.n	31d8 <__aeabi_ddiv+0x2f4>
    31d6:	e0c8      	b.n	336a <__aeabi_ddiv+0x486>
    31d8:	1a1d      	subs	r5, r3, r0
    31da:	4653      	mov	r3, sl
    31dc:	1a9e      	subs	r6, r3, r2
    31de:	45b2      	cmp	sl, r6
    31e0:	4192      	sbcs	r2, r2
    31e2:	4252      	negs	r2, r2
    31e4:	1aab      	subs	r3, r5, r2
    31e6:	469a      	mov	sl, r3
    31e8:	4598      	cmp	r8, r3
    31ea:	d100      	bne.n	31ee <__aeabi_ddiv+0x30a>
    31ec:	e117      	b.n	341e <__aeabi_ddiv+0x53a>
    31ee:	0039      	movs	r1, r7
    31f0:	0018      	movs	r0, r3
    31f2:	f7ff fb79 	bl	28e8 <__udivsi3>
    31f6:	9b01      	ldr	r3, [sp, #4]
    31f8:	0005      	movs	r5, r0
    31fa:	4343      	muls	r3, r0
    31fc:	0039      	movs	r1, r7
    31fe:	4650      	mov	r0, sl
    3200:	9304      	str	r3, [sp, #16]
    3202:	f7ff fbf7 	bl	29f4 <__aeabi_uidivmod>
    3206:	9804      	ldr	r0, [sp, #16]
    3208:	040b      	lsls	r3, r1, #16
    320a:	0c31      	lsrs	r1, r6, #16
    320c:	4319      	orrs	r1, r3
    320e:	4288      	cmp	r0, r1
    3210:	d909      	bls.n	3226 <__aeabi_ddiv+0x342>
    3212:	4441      	add	r1, r8
    3214:	1e6b      	subs	r3, r5, #1
    3216:	4588      	cmp	r8, r1
    3218:	d900      	bls.n	321c <__aeabi_ddiv+0x338>
    321a:	e107      	b.n	342c <__aeabi_ddiv+0x548>
    321c:	4288      	cmp	r0, r1
    321e:	d800      	bhi.n	3222 <__aeabi_ddiv+0x33e>
    3220:	e104      	b.n	342c <__aeabi_ddiv+0x548>
    3222:	3d02      	subs	r5, #2
    3224:	4441      	add	r1, r8
    3226:	9b04      	ldr	r3, [sp, #16]
    3228:	1acb      	subs	r3, r1, r3
    322a:	0018      	movs	r0, r3
    322c:	0039      	movs	r1, r7
    322e:	9304      	str	r3, [sp, #16]
    3230:	f7ff fb5a 	bl	28e8 <__udivsi3>
    3234:	9b01      	ldr	r3, [sp, #4]
    3236:	4682      	mov	sl, r0
    3238:	4343      	muls	r3, r0
    323a:	0039      	movs	r1, r7
    323c:	9804      	ldr	r0, [sp, #16]
    323e:	9301      	str	r3, [sp, #4]
    3240:	f7ff fbd8 	bl	29f4 <__aeabi_uidivmod>
    3244:	9801      	ldr	r0, [sp, #4]
    3246:	040b      	lsls	r3, r1, #16
    3248:	0431      	lsls	r1, r6, #16
    324a:	0c09      	lsrs	r1, r1, #16
    324c:	4319      	orrs	r1, r3
    324e:	4288      	cmp	r0, r1
    3250:	d90d      	bls.n	326e <__aeabi_ddiv+0x38a>
    3252:	4653      	mov	r3, sl
    3254:	4441      	add	r1, r8
    3256:	3b01      	subs	r3, #1
    3258:	4588      	cmp	r8, r1
    325a:	d900      	bls.n	325e <__aeabi_ddiv+0x37a>
    325c:	e0e8      	b.n	3430 <__aeabi_ddiv+0x54c>
    325e:	4288      	cmp	r0, r1
    3260:	d800      	bhi.n	3264 <__aeabi_ddiv+0x380>
    3262:	e0e5      	b.n	3430 <__aeabi_ddiv+0x54c>
    3264:	2302      	movs	r3, #2
    3266:	425b      	negs	r3, r3
    3268:	469c      	mov	ip, r3
    326a:	4441      	add	r1, r8
    326c:	44e2      	add	sl, ip
    326e:	9b01      	ldr	r3, [sp, #4]
    3270:	042d      	lsls	r5, r5, #16
    3272:	1ace      	subs	r6, r1, r3
    3274:	4651      	mov	r1, sl
    3276:	4329      	orrs	r1, r5
    3278:	9d05      	ldr	r5, [sp, #20]
    327a:	464f      	mov	r7, r9
    327c:	002a      	movs	r2, r5
    327e:	040b      	lsls	r3, r1, #16
    3280:	0c08      	lsrs	r0, r1, #16
    3282:	0c1b      	lsrs	r3, r3, #16
    3284:	435a      	muls	r2, r3
    3286:	4345      	muls	r5, r0
    3288:	437b      	muls	r3, r7
    328a:	4378      	muls	r0, r7
    328c:	195b      	adds	r3, r3, r5
    328e:	0c17      	lsrs	r7, r2, #16
    3290:	18fb      	adds	r3, r7, r3
    3292:	429d      	cmp	r5, r3
    3294:	d903      	bls.n	329e <__aeabi_ddiv+0x3ba>
    3296:	2580      	movs	r5, #128	; 0x80
    3298:	026d      	lsls	r5, r5, #9
    329a:	46ac      	mov	ip, r5
    329c:	4460      	add	r0, ip
    329e:	0c1d      	lsrs	r5, r3, #16
    32a0:	0412      	lsls	r2, r2, #16
    32a2:	041b      	lsls	r3, r3, #16
    32a4:	0c12      	lsrs	r2, r2, #16
    32a6:	1828      	adds	r0, r5, r0
    32a8:	189b      	adds	r3, r3, r2
    32aa:	4286      	cmp	r6, r0
    32ac:	d200      	bcs.n	32b0 <__aeabi_ddiv+0x3cc>
    32ae:	e093      	b.n	33d8 <__aeabi_ddiv+0x4f4>
    32b0:	d100      	bne.n	32b4 <__aeabi_ddiv+0x3d0>
    32b2:	e08e      	b.n	33d2 <__aeabi_ddiv+0x4ee>
    32b4:	2301      	movs	r3, #1
    32b6:	4319      	orrs	r1, r3
    32b8:	4ba0      	ldr	r3, [pc, #640]	; (353c <__aeabi_ddiv+0x658>)
    32ba:	18e3      	adds	r3, r4, r3
    32bc:	2b00      	cmp	r3, #0
    32be:	dc00      	bgt.n	32c2 <__aeabi_ddiv+0x3de>
    32c0:	e099      	b.n	33f6 <__aeabi_ddiv+0x512>
    32c2:	074a      	lsls	r2, r1, #29
    32c4:	d000      	beq.n	32c8 <__aeabi_ddiv+0x3e4>
    32c6:	e09e      	b.n	3406 <__aeabi_ddiv+0x522>
    32c8:	465a      	mov	r2, fp
    32ca:	01d2      	lsls	r2, r2, #7
    32cc:	d506      	bpl.n	32dc <__aeabi_ddiv+0x3f8>
    32ce:	465a      	mov	r2, fp
    32d0:	4b9b      	ldr	r3, [pc, #620]	; (3540 <__aeabi_ddiv+0x65c>)
    32d2:	401a      	ands	r2, r3
    32d4:	2380      	movs	r3, #128	; 0x80
    32d6:	4693      	mov	fp, r2
    32d8:	00db      	lsls	r3, r3, #3
    32da:	18e3      	adds	r3, r4, r3
    32dc:	4a99      	ldr	r2, [pc, #612]	; (3544 <__aeabi_ddiv+0x660>)
    32de:	4293      	cmp	r3, r2
    32e0:	dd68      	ble.n	33b4 <__aeabi_ddiv+0x4d0>
    32e2:	2301      	movs	r3, #1
    32e4:	9a02      	ldr	r2, [sp, #8]
    32e6:	4c98      	ldr	r4, [pc, #608]	; (3548 <__aeabi_ddiv+0x664>)
    32e8:	401a      	ands	r2, r3
    32ea:	2300      	movs	r3, #0
    32ec:	4694      	mov	ip, r2
    32ee:	4698      	mov	r8, r3
    32f0:	2200      	movs	r2, #0
    32f2:	e6c5      	b.n	3080 <__aeabi_ddiv+0x19c>
    32f4:	2280      	movs	r2, #128	; 0x80
    32f6:	464b      	mov	r3, r9
    32f8:	0312      	lsls	r2, r2, #12
    32fa:	4213      	tst	r3, r2
    32fc:	d00a      	beq.n	3314 <__aeabi_ddiv+0x430>
    32fe:	465b      	mov	r3, fp
    3300:	4213      	tst	r3, r2
    3302:	d106      	bne.n	3312 <__aeabi_ddiv+0x42e>
    3304:	431a      	orrs	r2, r3
    3306:	0312      	lsls	r2, r2, #12
    3308:	0b12      	lsrs	r2, r2, #12
    330a:	46ac      	mov	ip, r5
    330c:	4688      	mov	r8, r1
    330e:	4c8e      	ldr	r4, [pc, #568]	; (3548 <__aeabi_ddiv+0x664>)
    3310:	e6b6      	b.n	3080 <__aeabi_ddiv+0x19c>
    3312:	464b      	mov	r3, r9
    3314:	431a      	orrs	r2, r3
    3316:	0312      	lsls	r2, r2, #12
    3318:	0b12      	lsrs	r2, r2, #12
    331a:	46bc      	mov	ip, r7
    331c:	4c8a      	ldr	r4, [pc, #552]	; (3548 <__aeabi_ddiv+0x664>)
    331e:	e6af      	b.n	3080 <__aeabi_ddiv+0x19c>
    3320:	0003      	movs	r3, r0
    3322:	465a      	mov	r2, fp
    3324:	3b28      	subs	r3, #40	; 0x28
    3326:	409a      	lsls	r2, r3
    3328:	2300      	movs	r3, #0
    332a:	4691      	mov	r9, r2
    332c:	4698      	mov	r8, r3
    332e:	e657      	b.n	2fe0 <__aeabi_ddiv+0xfc>
    3330:	4658      	mov	r0, fp
    3332:	f001 f869 	bl	4408 <__clzsi2>
    3336:	3020      	adds	r0, #32
    3338:	e640      	b.n	2fbc <__aeabi_ddiv+0xd8>
    333a:	0003      	movs	r3, r0
    333c:	4652      	mov	r2, sl
    333e:	3b28      	subs	r3, #40	; 0x28
    3340:	409a      	lsls	r2, r3
    3342:	2100      	movs	r1, #0
    3344:	4693      	mov	fp, r2
    3346:	e677      	b.n	3038 <__aeabi_ddiv+0x154>
    3348:	f001 f85e 	bl	4408 <__clzsi2>
    334c:	3020      	adds	r0, #32
    334e:	e65f      	b.n	3010 <__aeabi_ddiv+0x12c>
    3350:	4588      	cmp	r8, r1
    3352:	d200      	bcs.n	3356 <__aeabi_ddiv+0x472>
    3354:	e6c7      	b.n	30e6 <__aeabi_ddiv+0x202>
    3356:	464b      	mov	r3, r9
    3358:	07de      	lsls	r6, r3, #31
    335a:	085d      	lsrs	r5, r3, #1
    335c:	4643      	mov	r3, r8
    335e:	085b      	lsrs	r3, r3, #1
    3360:	431e      	orrs	r6, r3
    3362:	4643      	mov	r3, r8
    3364:	07db      	lsls	r3, r3, #31
    3366:	469a      	mov	sl, r3
    3368:	e6c2      	b.n	30f0 <__aeabi_ddiv+0x20c>
    336a:	2500      	movs	r5, #0
    336c:	4592      	cmp	sl, r2
    336e:	d300      	bcc.n	3372 <__aeabi_ddiv+0x48e>
    3370:	e733      	b.n	31da <__aeabi_ddiv+0x2f6>
    3372:	9e03      	ldr	r6, [sp, #12]
    3374:	4659      	mov	r1, fp
    3376:	46b4      	mov	ip, r6
    3378:	44e2      	add	sl, ip
    337a:	45b2      	cmp	sl, r6
    337c:	41ad      	sbcs	r5, r5
    337e:	426d      	negs	r5, r5
    3380:	4445      	add	r5, r8
    3382:	18eb      	adds	r3, r5, r3
    3384:	3901      	subs	r1, #1
    3386:	4598      	cmp	r8, r3
    3388:	d207      	bcs.n	339a <__aeabi_ddiv+0x4b6>
    338a:	4298      	cmp	r0, r3
    338c:	d900      	bls.n	3390 <__aeabi_ddiv+0x4ac>
    338e:	e07f      	b.n	3490 <__aeabi_ddiv+0x5ac>
    3390:	d100      	bne.n	3394 <__aeabi_ddiv+0x4b0>
    3392:	e0bc      	b.n	350e <__aeabi_ddiv+0x62a>
    3394:	1a1d      	subs	r5, r3, r0
    3396:	468b      	mov	fp, r1
    3398:	e71f      	b.n	31da <__aeabi_ddiv+0x2f6>
    339a:	4598      	cmp	r8, r3
    339c:	d1fa      	bne.n	3394 <__aeabi_ddiv+0x4b0>
    339e:	9d03      	ldr	r5, [sp, #12]
    33a0:	4555      	cmp	r5, sl
    33a2:	d9f2      	bls.n	338a <__aeabi_ddiv+0x4a6>
    33a4:	4643      	mov	r3, r8
    33a6:	468b      	mov	fp, r1
    33a8:	1a1d      	subs	r5, r3, r0
    33aa:	e716      	b.n	31da <__aeabi_ddiv+0x2f6>
    33ac:	469b      	mov	fp, r3
    33ae:	e6ca      	b.n	3146 <__aeabi_ddiv+0x262>
    33b0:	0015      	movs	r5, r2
    33b2:	e6e7      	b.n	3184 <__aeabi_ddiv+0x2a0>
    33b4:	465a      	mov	r2, fp
    33b6:	08c9      	lsrs	r1, r1, #3
    33b8:	0752      	lsls	r2, r2, #29
    33ba:	430a      	orrs	r2, r1
    33bc:	055b      	lsls	r3, r3, #21
    33be:	4690      	mov	r8, r2
    33c0:	0d5c      	lsrs	r4, r3, #21
    33c2:	465a      	mov	r2, fp
    33c4:	2301      	movs	r3, #1
    33c6:	9902      	ldr	r1, [sp, #8]
    33c8:	0252      	lsls	r2, r2, #9
    33ca:	4019      	ands	r1, r3
    33cc:	0b12      	lsrs	r2, r2, #12
    33ce:	468c      	mov	ip, r1
    33d0:	e656      	b.n	3080 <__aeabi_ddiv+0x19c>
    33d2:	2b00      	cmp	r3, #0
    33d4:	d100      	bne.n	33d8 <__aeabi_ddiv+0x4f4>
    33d6:	e76f      	b.n	32b8 <__aeabi_ddiv+0x3d4>
    33d8:	4446      	add	r6, r8
    33da:	1e4a      	subs	r2, r1, #1
    33dc:	45b0      	cmp	r8, r6
    33de:	d929      	bls.n	3434 <__aeabi_ddiv+0x550>
    33e0:	0011      	movs	r1, r2
    33e2:	4286      	cmp	r6, r0
    33e4:	d000      	beq.n	33e8 <__aeabi_ddiv+0x504>
    33e6:	e765      	b.n	32b4 <__aeabi_ddiv+0x3d0>
    33e8:	9a03      	ldr	r2, [sp, #12]
    33ea:	4293      	cmp	r3, r2
    33ec:	d000      	beq.n	33f0 <__aeabi_ddiv+0x50c>
    33ee:	e761      	b.n	32b4 <__aeabi_ddiv+0x3d0>
    33f0:	e762      	b.n	32b8 <__aeabi_ddiv+0x3d4>
    33f2:	2101      	movs	r1, #1
    33f4:	4249      	negs	r1, r1
    33f6:	2001      	movs	r0, #1
    33f8:	1ac2      	subs	r2, r0, r3
    33fa:	2a38      	cmp	r2, #56	; 0x38
    33fc:	dd21      	ble.n	3442 <__aeabi_ddiv+0x55e>
    33fe:	9b02      	ldr	r3, [sp, #8]
    3400:	4003      	ands	r3, r0
    3402:	469c      	mov	ip, r3
    3404:	e638      	b.n	3078 <__aeabi_ddiv+0x194>
    3406:	220f      	movs	r2, #15
    3408:	400a      	ands	r2, r1
    340a:	2a04      	cmp	r2, #4
    340c:	d100      	bne.n	3410 <__aeabi_ddiv+0x52c>
    340e:	e75b      	b.n	32c8 <__aeabi_ddiv+0x3e4>
    3410:	000a      	movs	r2, r1
    3412:	1d11      	adds	r1, r2, #4
    3414:	4291      	cmp	r1, r2
    3416:	4192      	sbcs	r2, r2
    3418:	4252      	negs	r2, r2
    341a:	4493      	add	fp, r2
    341c:	e754      	b.n	32c8 <__aeabi_ddiv+0x3e4>
    341e:	4b47      	ldr	r3, [pc, #284]	; (353c <__aeabi_ddiv+0x658>)
    3420:	18e3      	adds	r3, r4, r3
    3422:	2b00      	cmp	r3, #0
    3424:	dde5      	ble.n	33f2 <__aeabi_ddiv+0x50e>
    3426:	2201      	movs	r2, #1
    3428:	4252      	negs	r2, r2
    342a:	e7f2      	b.n	3412 <__aeabi_ddiv+0x52e>
    342c:	001d      	movs	r5, r3
    342e:	e6fa      	b.n	3226 <__aeabi_ddiv+0x342>
    3430:	469a      	mov	sl, r3
    3432:	e71c      	b.n	326e <__aeabi_ddiv+0x38a>
    3434:	42b0      	cmp	r0, r6
    3436:	d839      	bhi.n	34ac <__aeabi_ddiv+0x5c8>
    3438:	d06e      	beq.n	3518 <__aeabi_ddiv+0x634>
    343a:	0011      	movs	r1, r2
    343c:	e73a      	b.n	32b4 <__aeabi_ddiv+0x3d0>
    343e:	9302      	str	r3, [sp, #8]
    3440:	e73a      	b.n	32b8 <__aeabi_ddiv+0x3d4>
    3442:	2a1f      	cmp	r2, #31
    3444:	dc3c      	bgt.n	34c0 <__aeabi_ddiv+0x5dc>
    3446:	2320      	movs	r3, #32
    3448:	1a9b      	subs	r3, r3, r2
    344a:	000c      	movs	r4, r1
    344c:	4658      	mov	r0, fp
    344e:	4099      	lsls	r1, r3
    3450:	4098      	lsls	r0, r3
    3452:	1e4b      	subs	r3, r1, #1
    3454:	4199      	sbcs	r1, r3
    3456:	465b      	mov	r3, fp
    3458:	40d4      	lsrs	r4, r2
    345a:	40d3      	lsrs	r3, r2
    345c:	4320      	orrs	r0, r4
    345e:	4308      	orrs	r0, r1
    3460:	001a      	movs	r2, r3
    3462:	0743      	lsls	r3, r0, #29
    3464:	d009      	beq.n	347a <__aeabi_ddiv+0x596>
    3466:	230f      	movs	r3, #15
    3468:	4003      	ands	r3, r0
    346a:	2b04      	cmp	r3, #4
    346c:	d005      	beq.n	347a <__aeabi_ddiv+0x596>
    346e:	0001      	movs	r1, r0
    3470:	1d08      	adds	r0, r1, #4
    3472:	4288      	cmp	r0, r1
    3474:	419b      	sbcs	r3, r3
    3476:	425b      	negs	r3, r3
    3478:	18d2      	adds	r2, r2, r3
    347a:	0213      	lsls	r3, r2, #8
    347c:	d53a      	bpl.n	34f4 <__aeabi_ddiv+0x610>
    347e:	2301      	movs	r3, #1
    3480:	9a02      	ldr	r2, [sp, #8]
    3482:	2401      	movs	r4, #1
    3484:	401a      	ands	r2, r3
    3486:	2300      	movs	r3, #0
    3488:	4694      	mov	ip, r2
    348a:	4698      	mov	r8, r3
    348c:	2200      	movs	r2, #0
    348e:	e5f7      	b.n	3080 <__aeabi_ddiv+0x19c>
    3490:	2102      	movs	r1, #2
    3492:	4249      	negs	r1, r1
    3494:	468c      	mov	ip, r1
    3496:	9d03      	ldr	r5, [sp, #12]
    3498:	44e3      	add	fp, ip
    349a:	46ac      	mov	ip, r5
    349c:	44e2      	add	sl, ip
    349e:	45aa      	cmp	sl, r5
    34a0:	41ad      	sbcs	r5, r5
    34a2:	426d      	negs	r5, r5
    34a4:	4445      	add	r5, r8
    34a6:	18ed      	adds	r5, r5, r3
    34a8:	1a2d      	subs	r5, r5, r0
    34aa:	e696      	b.n	31da <__aeabi_ddiv+0x2f6>
    34ac:	1e8a      	subs	r2, r1, #2
    34ae:	9903      	ldr	r1, [sp, #12]
    34b0:	004d      	lsls	r5, r1, #1
    34b2:	428d      	cmp	r5, r1
    34b4:	4189      	sbcs	r1, r1
    34b6:	4249      	negs	r1, r1
    34b8:	4441      	add	r1, r8
    34ba:	1876      	adds	r6, r6, r1
    34bc:	9503      	str	r5, [sp, #12]
    34be:	e78f      	b.n	33e0 <__aeabi_ddiv+0x4fc>
    34c0:	201f      	movs	r0, #31
    34c2:	4240      	negs	r0, r0
    34c4:	1ac3      	subs	r3, r0, r3
    34c6:	4658      	mov	r0, fp
    34c8:	40d8      	lsrs	r0, r3
    34ca:	0003      	movs	r3, r0
    34cc:	2a20      	cmp	r2, #32
    34ce:	d028      	beq.n	3522 <__aeabi_ddiv+0x63e>
    34d0:	2040      	movs	r0, #64	; 0x40
    34d2:	465d      	mov	r5, fp
    34d4:	1a82      	subs	r2, r0, r2
    34d6:	4095      	lsls	r5, r2
    34d8:	4329      	orrs	r1, r5
    34da:	1e4a      	subs	r2, r1, #1
    34dc:	4191      	sbcs	r1, r2
    34de:	4319      	orrs	r1, r3
    34e0:	2307      	movs	r3, #7
    34e2:	2200      	movs	r2, #0
    34e4:	400b      	ands	r3, r1
    34e6:	d009      	beq.n	34fc <__aeabi_ddiv+0x618>
    34e8:	230f      	movs	r3, #15
    34ea:	2200      	movs	r2, #0
    34ec:	400b      	ands	r3, r1
    34ee:	0008      	movs	r0, r1
    34f0:	2b04      	cmp	r3, #4
    34f2:	d1bd      	bne.n	3470 <__aeabi_ddiv+0x58c>
    34f4:	0001      	movs	r1, r0
    34f6:	0753      	lsls	r3, r2, #29
    34f8:	0252      	lsls	r2, r2, #9
    34fa:	0b12      	lsrs	r2, r2, #12
    34fc:	08c9      	lsrs	r1, r1, #3
    34fe:	4319      	orrs	r1, r3
    3500:	2301      	movs	r3, #1
    3502:	4688      	mov	r8, r1
    3504:	9902      	ldr	r1, [sp, #8]
    3506:	2400      	movs	r4, #0
    3508:	4019      	ands	r1, r3
    350a:	468c      	mov	ip, r1
    350c:	e5b8      	b.n	3080 <__aeabi_ddiv+0x19c>
    350e:	4552      	cmp	r2, sl
    3510:	d8be      	bhi.n	3490 <__aeabi_ddiv+0x5ac>
    3512:	468b      	mov	fp, r1
    3514:	2500      	movs	r5, #0
    3516:	e660      	b.n	31da <__aeabi_ddiv+0x2f6>
    3518:	9d03      	ldr	r5, [sp, #12]
    351a:	429d      	cmp	r5, r3
    351c:	d3c6      	bcc.n	34ac <__aeabi_ddiv+0x5c8>
    351e:	0011      	movs	r1, r2
    3520:	e762      	b.n	33e8 <__aeabi_ddiv+0x504>
    3522:	2500      	movs	r5, #0
    3524:	e7d8      	b.n	34d8 <__aeabi_ddiv+0x5f4>
    3526:	2280      	movs	r2, #128	; 0x80
    3528:	465b      	mov	r3, fp
    352a:	0312      	lsls	r2, r2, #12
    352c:	431a      	orrs	r2, r3
    352e:	9b01      	ldr	r3, [sp, #4]
    3530:	0312      	lsls	r2, r2, #12
    3532:	0b12      	lsrs	r2, r2, #12
    3534:	469c      	mov	ip, r3
    3536:	4688      	mov	r8, r1
    3538:	4c03      	ldr	r4, [pc, #12]	; (3548 <__aeabi_ddiv+0x664>)
    353a:	e5a1      	b.n	3080 <__aeabi_ddiv+0x19c>
    353c:	000003ff 	.word	0x000003ff
    3540:	feffffff 	.word	0xfeffffff
    3544:	000007fe 	.word	0x000007fe
    3548:	000007ff 	.word	0x000007ff

0000354c <__aeabi_dmul>:
    354c:	b5f0      	push	{r4, r5, r6, r7, lr}
    354e:	4657      	mov	r7, sl
    3550:	4645      	mov	r5, r8
    3552:	46de      	mov	lr, fp
    3554:	464e      	mov	r6, r9
    3556:	b5e0      	push	{r5, r6, r7, lr}
    3558:	030c      	lsls	r4, r1, #12
    355a:	4698      	mov	r8, r3
    355c:	004e      	lsls	r6, r1, #1
    355e:	0b23      	lsrs	r3, r4, #12
    3560:	b087      	sub	sp, #28
    3562:	0007      	movs	r7, r0
    3564:	4692      	mov	sl, r2
    3566:	469b      	mov	fp, r3
    3568:	0d76      	lsrs	r6, r6, #21
    356a:	0fcd      	lsrs	r5, r1, #31
    356c:	2e00      	cmp	r6, #0
    356e:	d06b      	beq.n	3648 <__aeabi_dmul+0xfc>
    3570:	4b6d      	ldr	r3, [pc, #436]	; (3728 <__aeabi_dmul+0x1dc>)
    3572:	429e      	cmp	r6, r3
    3574:	d035      	beq.n	35e2 <__aeabi_dmul+0x96>
    3576:	2480      	movs	r4, #128	; 0x80
    3578:	465b      	mov	r3, fp
    357a:	0f42      	lsrs	r2, r0, #29
    357c:	0424      	lsls	r4, r4, #16
    357e:	00db      	lsls	r3, r3, #3
    3580:	4314      	orrs	r4, r2
    3582:	431c      	orrs	r4, r3
    3584:	00c3      	lsls	r3, r0, #3
    3586:	4699      	mov	r9, r3
    3588:	4b68      	ldr	r3, [pc, #416]	; (372c <__aeabi_dmul+0x1e0>)
    358a:	46a3      	mov	fp, r4
    358c:	469c      	mov	ip, r3
    358e:	2300      	movs	r3, #0
    3590:	2700      	movs	r7, #0
    3592:	4466      	add	r6, ip
    3594:	9302      	str	r3, [sp, #8]
    3596:	4643      	mov	r3, r8
    3598:	031c      	lsls	r4, r3, #12
    359a:	005a      	lsls	r2, r3, #1
    359c:	0fdb      	lsrs	r3, r3, #31
    359e:	4650      	mov	r0, sl
    35a0:	0b24      	lsrs	r4, r4, #12
    35a2:	0d52      	lsrs	r2, r2, #21
    35a4:	4698      	mov	r8, r3
    35a6:	d100      	bne.n	35aa <__aeabi_dmul+0x5e>
    35a8:	e076      	b.n	3698 <__aeabi_dmul+0x14c>
    35aa:	4b5f      	ldr	r3, [pc, #380]	; (3728 <__aeabi_dmul+0x1dc>)
    35ac:	429a      	cmp	r2, r3
    35ae:	d06d      	beq.n	368c <__aeabi_dmul+0x140>
    35b0:	2380      	movs	r3, #128	; 0x80
    35b2:	0f41      	lsrs	r1, r0, #29
    35b4:	041b      	lsls	r3, r3, #16
    35b6:	430b      	orrs	r3, r1
    35b8:	495c      	ldr	r1, [pc, #368]	; (372c <__aeabi_dmul+0x1e0>)
    35ba:	00e4      	lsls	r4, r4, #3
    35bc:	468c      	mov	ip, r1
    35be:	431c      	orrs	r4, r3
    35c0:	00c3      	lsls	r3, r0, #3
    35c2:	2000      	movs	r0, #0
    35c4:	4462      	add	r2, ip
    35c6:	4641      	mov	r1, r8
    35c8:	18b6      	adds	r6, r6, r2
    35ca:	4069      	eors	r1, r5
    35cc:	1c72      	adds	r2, r6, #1
    35ce:	9101      	str	r1, [sp, #4]
    35d0:	4694      	mov	ip, r2
    35d2:	4307      	orrs	r7, r0
    35d4:	2f0f      	cmp	r7, #15
    35d6:	d900      	bls.n	35da <__aeabi_dmul+0x8e>
    35d8:	e0b0      	b.n	373c <__aeabi_dmul+0x1f0>
    35da:	4a55      	ldr	r2, [pc, #340]	; (3730 <__aeabi_dmul+0x1e4>)
    35dc:	00bf      	lsls	r7, r7, #2
    35de:	59d2      	ldr	r2, [r2, r7]
    35e0:	4697      	mov	pc, r2
    35e2:	465b      	mov	r3, fp
    35e4:	4303      	orrs	r3, r0
    35e6:	4699      	mov	r9, r3
    35e8:	d000      	beq.n	35ec <__aeabi_dmul+0xa0>
    35ea:	e087      	b.n	36fc <__aeabi_dmul+0x1b0>
    35ec:	2300      	movs	r3, #0
    35ee:	469b      	mov	fp, r3
    35f0:	3302      	adds	r3, #2
    35f2:	2708      	movs	r7, #8
    35f4:	9302      	str	r3, [sp, #8]
    35f6:	e7ce      	b.n	3596 <__aeabi_dmul+0x4a>
    35f8:	4642      	mov	r2, r8
    35fa:	9201      	str	r2, [sp, #4]
    35fc:	2802      	cmp	r0, #2
    35fe:	d067      	beq.n	36d0 <__aeabi_dmul+0x184>
    3600:	2803      	cmp	r0, #3
    3602:	d100      	bne.n	3606 <__aeabi_dmul+0xba>
    3604:	e20e      	b.n	3a24 <__aeabi_dmul+0x4d8>
    3606:	2801      	cmp	r0, #1
    3608:	d000      	beq.n	360c <__aeabi_dmul+0xc0>
    360a:	e162      	b.n	38d2 <__aeabi_dmul+0x386>
    360c:	2300      	movs	r3, #0
    360e:	2400      	movs	r4, #0
    3610:	2200      	movs	r2, #0
    3612:	4699      	mov	r9, r3
    3614:	9901      	ldr	r1, [sp, #4]
    3616:	4001      	ands	r1, r0
    3618:	b2cd      	uxtb	r5, r1
    361a:	2100      	movs	r1, #0
    361c:	0312      	lsls	r2, r2, #12
    361e:	0d0b      	lsrs	r3, r1, #20
    3620:	0b12      	lsrs	r2, r2, #12
    3622:	051b      	lsls	r3, r3, #20
    3624:	4313      	orrs	r3, r2
    3626:	4a43      	ldr	r2, [pc, #268]	; (3734 <__aeabi_dmul+0x1e8>)
    3628:	0524      	lsls	r4, r4, #20
    362a:	4013      	ands	r3, r2
    362c:	431c      	orrs	r4, r3
    362e:	0064      	lsls	r4, r4, #1
    3630:	07ed      	lsls	r5, r5, #31
    3632:	0864      	lsrs	r4, r4, #1
    3634:	432c      	orrs	r4, r5
    3636:	4648      	mov	r0, r9
    3638:	0021      	movs	r1, r4
    363a:	b007      	add	sp, #28
    363c:	bc3c      	pop	{r2, r3, r4, r5}
    363e:	4690      	mov	r8, r2
    3640:	4699      	mov	r9, r3
    3642:	46a2      	mov	sl, r4
    3644:	46ab      	mov	fp, r5
    3646:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3648:	4303      	orrs	r3, r0
    364a:	4699      	mov	r9, r3
    364c:	d04f      	beq.n	36ee <__aeabi_dmul+0x1a2>
    364e:	465b      	mov	r3, fp
    3650:	2b00      	cmp	r3, #0
    3652:	d100      	bne.n	3656 <__aeabi_dmul+0x10a>
    3654:	e189      	b.n	396a <__aeabi_dmul+0x41e>
    3656:	4658      	mov	r0, fp
    3658:	f000 fed6 	bl	4408 <__clzsi2>
    365c:	0003      	movs	r3, r0
    365e:	3b0b      	subs	r3, #11
    3660:	2b1c      	cmp	r3, #28
    3662:	dd00      	ble.n	3666 <__aeabi_dmul+0x11a>
    3664:	e17a      	b.n	395c <__aeabi_dmul+0x410>
    3666:	221d      	movs	r2, #29
    3668:	1ad3      	subs	r3, r2, r3
    366a:	003a      	movs	r2, r7
    366c:	0001      	movs	r1, r0
    366e:	465c      	mov	r4, fp
    3670:	40da      	lsrs	r2, r3
    3672:	3908      	subs	r1, #8
    3674:	408c      	lsls	r4, r1
    3676:	0013      	movs	r3, r2
    3678:	408f      	lsls	r7, r1
    367a:	4323      	orrs	r3, r4
    367c:	469b      	mov	fp, r3
    367e:	46b9      	mov	r9, r7
    3680:	2300      	movs	r3, #0
    3682:	4e2d      	ldr	r6, [pc, #180]	; (3738 <__aeabi_dmul+0x1ec>)
    3684:	2700      	movs	r7, #0
    3686:	1a36      	subs	r6, r6, r0
    3688:	9302      	str	r3, [sp, #8]
    368a:	e784      	b.n	3596 <__aeabi_dmul+0x4a>
    368c:	4653      	mov	r3, sl
    368e:	4323      	orrs	r3, r4
    3690:	d12a      	bne.n	36e8 <__aeabi_dmul+0x19c>
    3692:	2400      	movs	r4, #0
    3694:	2002      	movs	r0, #2
    3696:	e796      	b.n	35c6 <__aeabi_dmul+0x7a>
    3698:	4653      	mov	r3, sl
    369a:	4323      	orrs	r3, r4
    369c:	d020      	beq.n	36e0 <__aeabi_dmul+0x194>
    369e:	2c00      	cmp	r4, #0
    36a0:	d100      	bne.n	36a4 <__aeabi_dmul+0x158>
    36a2:	e157      	b.n	3954 <__aeabi_dmul+0x408>
    36a4:	0020      	movs	r0, r4
    36a6:	f000 feaf 	bl	4408 <__clzsi2>
    36aa:	0003      	movs	r3, r0
    36ac:	3b0b      	subs	r3, #11
    36ae:	2b1c      	cmp	r3, #28
    36b0:	dd00      	ble.n	36b4 <__aeabi_dmul+0x168>
    36b2:	e149      	b.n	3948 <__aeabi_dmul+0x3fc>
    36b4:	211d      	movs	r1, #29
    36b6:	1acb      	subs	r3, r1, r3
    36b8:	4651      	mov	r1, sl
    36ba:	0002      	movs	r2, r0
    36bc:	40d9      	lsrs	r1, r3
    36be:	4653      	mov	r3, sl
    36c0:	3a08      	subs	r2, #8
    36c2:	4094      	lsls	r4, r2
    36c4:	4093      	lsls	r3, r2
    36c6:	430c      	orrs	r4, r1
    36c8:	4a1b      	ldr	r2, [pc, #108]	; (3738 <__aeabi_dmul+0x1ec>)
    36ca:	1a12      	subs	r2, r2, r0
    36cc:	2000      	movs	r0, #0
    36ce:	e77a      	b.n	35c6 <__aeabi_dmul+0x7a>
    36d0:	2501      	movs	r5, #1
    36d2:	9b01      	ldr	r3, [sp, #4]
    36d4:	4c14      	ldr	r4, [pc, #80]	; (3728 <__aeabi_dmul+0x1dc>)
    36d6:	401d      	ands	r5, r3
    36d8:	2300      	movs	r3, #0
    36da:	2200      	movs	r2, #0
    36dc:	4699      	mov	r9, r3
    36de:	e79c      	b.n	361a <__aeabi_dmul+0xce>
    36e0:	2400      	movs	r4, #0
    36e2:	2200      	movs	r2, #0
    36e4:	2001      	movs	r0, #1
    36e6:	e76e      	b.n	35c6 <__aeabi_dmul+0x7a>
    36e8:	4653      	mov	r3, sl
    36ea:	2003      	movs	r0, #3
    36ec:	e76b      	b.n	35c6 <__aeabi_dmul+0x7a>
    36ee:	2300      	movs	r3, #0
    36f0:	469b      	mov	fp, r3
    36f2:	3301      	adds	r3, #1
    36f4:	2704      	movs	r7, #4
    36f6:	2600      	movs	r6, #0
    36f8:	9302      	str	r3, [sp, #8]
    36fa:	e74c      	b.n	3596 <__aeabi_dmul+0x4a>
    36fc:	2303      	movs	r3, #3
    36fe:	4681      	mov	r9, r0
    3700:	270c      	movs	r7, #12
    3702:	9302      	str	r3, [sp, #8]
    3704:	e747      	b.n	3596 <__aeabi_dmul+0x4a>
    3706:	2280      	movs	r2, #128	; 0x80
    3708:	2300      	movs	r3, #0
    370a:	2500      	movs	r5, #0
    370c:	0312      	lsls	r2, r2, #12
    370e:	4699      	mov	r9, r3
    3710:	4c05      	ldr	r4, [pc, #20]	; (3728 <__aeabi_dmul+0x1dc>)
    3712:	e782      	b.n	361a <__aeabi_dmul+0xce>
    3714:	465c      	mov	r4, fp
    3716:	464b      	mov	r3, r9
    3718:	9802      	ldr	r0, [sp, #8]
    371a:	e76f      	b.n	35fc <__aeabi_dmul+0xb0>
    371c:	465c      	mov	r4, fp
    371e:	464b      	mov	r3, r9
    3720:	9501      	str	r5, [sp, #4]
    3722:	9802      	ldr	r0, [sp, #8]
    3724:	e76a      	b.n	35fc <__aeabi_dmul+0xb0>
    3726:	46c0      	nop			; (mov r8, r8)
    3728:	000007ff 	.word	0x000007ff
    372c:	fffffc01 	.word	0xfffffc01
    3730:	0000a074 	.word	0x0000a074
    3734:	800fffff 	.word	0x800fffff
    3738:	fffffc0d 	.word	0xfffffc0d
    373c:	464a      	mov	r2, r9
    373e:	4649      	mov	r1, r9
    3740:	0c17      	lsrs	r7, r2, #16
    3742:	0c1a      	lsrs	r2, r3, #16
    3744:	041b      	lsls	r3, r3, #16
    3746:	0c1b      	lsrs	r3, r3, #16
    3748:	0408      	lsls	r0, r1, #16
    374a:	0019      	movs	r1, r3
    374c:	0c00      	lsrs	r0, r0, #16
    374e:	4341      	muls	r1, r0
    3750:	0015      	movs	r5, r2
    3752:	4688      	mov	r8, r1
    3754:	0019      	movs	r1, r3
    3756:	437d      	muls	r5, r7
    3758:	4379      	muls	r1, r7
    375a:	9503      	str	r5, [sp, #12]
    375c:	4689      	mov	r9, r1
    375e:	0029      	movs	r1, r5
    3760:	0015      	movs	r5, r2
    3762:	4345      	muls	r5, r0
    3764:	444d      	add	r5, r9
    3766:	9502      	str	r5, [sp, #8]
    3768:	4645      	mov	r5, r8
    376a:	0c2d      	lsrs	r5, r5, #16
    376c:	46aa      	mov	sl, r5
    376e:	9d02      	ldr	r5, [sp, #8]
    3770:	4455      	add	r5, sl
    3772:	45a9      	cmp	r9, r5
    3774:	d906      	bls.n	3784 <__aeabi_dmul+0x238>
    3776:	468a      	mov	sl, r1
    3778:	2180      	movs	r1, #128	; 0x80
    377a:	0249      	lsls	r1, r1, #9
    377c:	4689      	mov	r9, r1
    377e:	44ca      	add	sl, r9
    3780:	4651      	mov	r1, sl
    3782:	9103      	str	r1, [sp, #12]
    3784:	0c29      	lsrs	r1, r5, #16
    3786:	9104      	str	r1, [sp, #16]
    3788:	4641      	mov	r1, r8
    378a:	0409      	lsls	r1, r1, #16
    378c:	042d      	lsls	r5, r5, #16
    378e:	0c09      	lsrs	r1, r1, #16
    3790:	4688      	mov	r8, r1
    3792:	0029      	movs	r1, r5
    3794:	0c25      	lsrs	r5, r4, #16
    3796:	0424      	lsls	r4, r4, #16
    3798:	4441      	add	r1, r8
    379a:	0c24      	lsrs	r4, r4, #16
    379c:	9105      	str	r1, [sp, #20]
    379e:	0021      	movs	r1, r4
    37a0:	4341      	muls	r1, r0
    37a2:	4688      	mov	r8, r1
    37a4:	0021      	movs	r1, r4
    37a6:	4379      	muls	r1, r7
    37a8:	468a      	mov	sl, r1
    37aa:	4368      	muls	r0, r5
    37ac:	4641      	mov	r1, r8
    37ae:	4450      	add	r0, sl
    37b0:	4681      	mov	r9, r0
    37b2:	0c08      	lsrs	r0, r1, #16
    37b4:	4448      	add	r0, r9
    37b6:	436f      	muls	r7, r5
    37b8:	4582      	cmp	sl, r0
    37ba:	d903      	bls.n	37c4 <__aeabi_dmul+0x278>
    37bc:	2180      	movs	r1, #128	; 0x80
    37be:	0249      	lsls	r1, r1, #9
    37c0:	4689      	mov	r9, r1
    37c2:	444f      	add	r7, r9
    37c4:	0c01      	lsrs	r1, r0, #16
    37c6:	4689      	mov	r9, r1
    37c8:	0039      	movs	r1, r7
    37ca:	4449      	add	r1, r9
    37cc:	9102      	str	r1, [sp, #8]
    37ce:	4641      	mov	r1, r8
    37d0:	040f      	lsls	r7, r1, #16
    37d2:	9904      	ldr	r1, [sp, #16]
    37d4:	0c3f      	lsrs	r7, r7, #16
    37d6:	4688      	mov	r8, r1
    37d8:	0400      	lsls	r0, r0, #16
    37da:	19c0      	adds	r0, r0, r7
    37dc:	4480      	add	r8, r0
    37de:	4641      	mov	r1, r8
    37e0:	9104      	str	r1, [sp, #16]
    37e2:	4659      	mov	r1, fp
    37e4:	0c0f      	lsrs	r7, r1, #16
    37e6:	0409      	lsls	r1, r1, #16
    37e8:	0c09      	lsrs	r1, r1, #16
    37ea:	4688      	mov	r8, r1
    37ec:	4359      	muls	r1, r3
    37ee:	468a      	mov	sl, r1
    37f0:	0039      	movs	r1, r7
    37f2:	4351      	muls	r1, r2
    37f4:	4689      	mov	r9, r1
    37f6:	4641      	mov	r1, r8
    37f8:	434a      	muls	r2, r1
    37fa:	4651      	mov	r1, sl
    37fc:	0c09      	lsrs	r1, r1, #16
    37fe:	468b      	mov	fp, r1
    3800:	437b      	muls	r3, r7
    3802:	18d2      	adds	r2, r2, r3
    3804:	445a      	add	r2, fp
    3806:	4293      	cmp	r3, r2
    3808:	d903      	bls.n	3812 <__aeabi_dmul+0x2c6>
    380a:	2380      	movs	r3, #128	; 0x80
    380c:	025b      	lsls	r3, r3, #9
    380e:	469b      	mov	fp, r3
    3810:	44d9      	add	r9, fp
    3812:	4651      	mov	r1, sl
    3814:	0409      	lsls	r1, r1, #16
    3816:	0c09      	lsrs	r1, r1, #16
    3818:	468a      	mov	sl, r1
    381a:	4641      	mov	r1, r8
    381c:	4361      	muls	r1, r4
    381e:	437c      	muls	r4, r7
    3820:	0c13      	lsrs	r3, r2, #16
    3822:	0412      	lsls	r2, r2, #16
    3824:	444b      	add	r3, r9
    3826:	4452      	add	r2, sl
    3828:	46a1      	mov	r9, r4
    382a:	468a      	mov	sl, r1
    382c:	003c      	movs	r4, r7
    382e:	4641      	mov	r1, r8
    3830:	436c      	muls	r4, r5
    3832:	434d      	muls	r5, r1
    3834:	4651      	mov	r1, sl
    3836:	444d      	add	r5, r9
    3838:	0c0f      	lsrs	r7, r1, #16
    383a:	197d      	adds	r5, r7, r5
    383c:	45a9      	cmp	r9, r5
    383e:	d903      	bls.n	3848 <__aeabi_dmul+0x2fc>
    3840:	2180      	movs	r1, #128	; 0x80
    3842:	0249      	lsls	r1, r1, #9
    3844:	4688      	mov	r8, r1
    3846:	4444      	add	r4, r8
    3848:	9f04      	ldr	r7, [sp, #16]
    384a:	9903      	ldr	r1, [sp, #12]
    384c:	46b8      	mov	r8, r7
    384e:	4441      	add	r1, r8
    3850:	468b      	mov	fp, r1
    3852:	4583      	cmp	fp, r0
    3854:	4180      	sbcs	r0, r0
    3856:	4241      	negs	r1, r0
    3858:	4688      	mov	r8, r1
    385a:	4651      	mov	r1, sl
    385c:	0408      	lsls	r0, r1, #16
    385e:	042f      	lsls	r7, r5, #16
    3860:	0c00      	lsrs	r0, r0, #16
    3862:	183f      	adds	r7, r7, r0
    3864:	4658      	mov	r0, fp
    3866:	9902      	ldr	r1, [sp, #8]
    3868:	1810      	adds	r0, r2, r0
    386a:	4689      	mov	r9, r1
    386c:	4290      	cmp	r0, r2
    386e:	4192      	sbcs	r2, r2
    3870:	444f      	add	r7, r9
    3872:	46ba      	mov	sl, r7
    3874:	4252      	negs	r2, r2
    3876:	4699      	mov	r9, r3
    3878:	4693      	mov	fp, r2
    387a:	44c2      	add	sl, r8
    387c:	44d1      	add	r9, sl
    387e:	44cb      	add	fp, r9
    3880:	428f      	cmp	r7, r1
    3882:	41bf      	sbcs	r7, r7
    3884:	45c2      	cmp	sl, r8
    3886:	4189      	sbcs	r1, r1
    3888:	4599      	cmp	r9, r3
    388a:	419b      	sbcs	r3, r3
    388c:	4593      	cmp	fp, r2
    388e:	4192      	sbcs	r2, r2
    3890:	427f      	negs	r7, r7
    3892:	4249      	negs	r1, r1
    3894:	0c2d      	lsrs	r5, r5, #16
    3896:	4252      	negs	r2, r2
    3898:	430f      	orrs	r7, r1
    389a:	425b      	negs	r3, r3
    389c:	4313      	orrs	r3, r2
    389e:	197f      	adds	r7, r7, r5
    38a0:	18ff      	adds	r7, r7, r3
    38a2:	465b      	mov	r3, fp
    38a4:	193c      	adds	r4, r7, r4
    38a6:	0ddb      	lsrs	r3, r3, #23
    38a8:	9a05      	ldr	r2, [sp, #20]
    38aa:	0264      	lsls	r4, r4, #9
    38ac:	431c      	orrs	r4, r3
    38ae:	0243      	lsls	r3, r0, #9
    38b0:	4313      	orrs	r3, r2
    38b2:	1e5d      	subs	r5, r3, #1
    38b4:	41ab      	sbcs	r3, r5
    38b6:	465a      	mov	r2, fp
    38b8:	0dc0      	lsrs	r0, r0, #23
    38ba:	4303      	orrs	r3, r0
    38bc:	0252      	lsls	r2, r2, #9
    38be:	4313      	orrs	r3, r2
    38c0:	01e2      	lsls	r2, r4, #7
    38c2:	d556      	bpl.n	3972 <__aeabi_dmul+0x426>
    38c4:	2001      	movs	r0, #1
    38c6:	085a      	lsrs	r2, r3, #1
    38c8:	4003      	ands	r3, r0
    38ca:	4313      	orrs	r3, r2
    38cc:	07e2      	lsls	r2, r4, #31
    38ce:	4313      	orrs	r3, r2
    38d0:	0864      	lsrs	r4, r4, #1
    38d2:	485a      	ldr	r0, [pc, #360]	; (3a3c <__aeabi_dmul+0x4f0>)
    38d4:	4460      	add	r0, ip
    38d6:	2800      	cmp	r0, #0
    38d8:	dd4d      	ble.n	3976 <__aeabi_dmul+0x42a>
    38da:	075a      	lsls	r2, r3, #29
    38dc:	d009      	beq.n	38f2 <__aeabi_dmul+0x3a6>
    38de:	220f      	movs	r2, #15
    38e0:	401a      	ands	r2, r3
    38e2:	2a04      	cmp	r2, #4
    38e4:	d005      	beq.n	38f2 <__aeabi_dmul+0x3a6>
    38e6:	1d1a      	adds	r2, r3, #4
    38e8:	429a      	cmp	r2, r3
    38ea:	419b      	sbcs	r3, r3
    38ec:	425b      	negs	r3, r3
    38ee:	18e4      	adds	r4, r4, r3
    38f0:	0013      	movs	r3, r2
    38f2:	01e2      	lsls	r2, r4, #7
    38f4:	d504      	bpl.n	3900 <__aeabi_dmul+0x3b4>
    38f6:	2080      	movs	r0, #128	; 0x80
    38f8:	4a51      	ldr	r2, [pc, #324]	; (3a40 <__aeabi_dmul+0x4f4>)
    38fa:	00c0      	lsls	r0, r0, #3
    38fc:	4014      	ands	r4, r2
    38fe:	4460      	add	r0, ip
    3900:	4a50      	ldr	r2, [pc, #320]	; (3a44 <__aeabi_dmul+0x4f8>)
    3902:	4290      	cmp	r0, r2
    3904:	dd00      	ble.n	3908 <__aeabi_dmul+0x3bc>
    3906:	e6e3      	b.n	36d0 <__aeabi_dmul+0x184>
    3908:	2501      	movs	r5, #1
    390a:	08db      	lsrs	r3, r3, #3
    390c:	0762      	lsls	r2, r4, #29
    390e:	431a      	orrs	r2, r3
    3910:	0264      	lsls	r4, r4, #9
    3912:	9b01      	ldr	r3, [sp, #4]
    3914:	4691      	mov	r9, r2
    3916:	0b22      	lsrs	r2, r4, #12
    3918:	0544      	lsls	r4, r0, #21
    391a:	0d64      	lsrs	r4, r4, #21
    391c:	401d      	ands	r5, r3
    391e:	e67c      	b.n	361a <__aeabi_dmul+0xce>
    3920:	2280      	movs	r2, #128	; 0x80
    3922:	4659      	mov	r1, fp
    3924:	0312      	lsls	r2, r2, #12
    3926:	4211      	tst	r1, r2
    3928:	d008      	beq.n	393c <__aeabi_dmul+0x3f0>
    392a:	4214      	tst	r4, r2
    392c:	d106      	bne.n	393c <__aeabi_dmul+0x3f0>
    392e:	4322      	orrs	r2, r4
    3930:	0312      	lsls	r2, r2, #12
    3932:	0b12      	lsrs	r2, r2, #12
    3934:	4645      	mov	r5, r8
    3936:	4699      	mov	r9, r3
    3938:	4c43      	ldr	r4, [pc, #268]	; (3a48 <__aeabi_dmul+0x4fc>)
    393a:	e66e      	b.n	361a <__aeabi_dmul+0xce>
    393c:	465b      	mov	r3, fp
    393e:	431a      	orrs	r2, r3
    3940:	0312      	lsls	r2, r2, #12
    3942:	0b12      	lsrs	r2, r2, #12
    3944:	4c40      	ldr	r4, [pc, #256]	; (3a48 <__aeabi_dmul+0x4fc>)
    3946:	e668      	b.n	361a <__aeabi_dmul+0xce>
    3948:	0003      	movs	r3, r0
    394a:	4654      	mov	r4, sl
    394c:	3b28      	subs	r3, #40	; 0x28
    394e:	409c      	lsls	r4, r3
    3950:	2300      	movs	r3, #0
    3952:	e6b9      	b.n	36c8 <__aeabi_dmul+0x17c>
    3954:	f000 fd58 	bl	4408 <__clzsi2>
    3958:	3020      	adds	r0, #32
    395a:	e6a6      	b.n	36aa <__aeabi_dmul+0x15e>
    395c:	0003      	movs	r3, r0
    395e:	3b28      	subs	r3, #40	; 0x28
    3960:	409f      	lsls	r7, r3
    3962:	2300      	movs	r3, #0
    3964:	46bb      	mov	fp, r7
    3966:	4699      	mov	r9, r3
    3968:	e68a      	b.n	3680 <__aeabi_dmul+0x134>
    396a:	f000 fd4d 	bl	4408 <__clzsi2>
    396e:	3020      	adds	r0, #32
    3970:	e674      	b.n	365c <__aeabi_dmul+0x110>
    3972:	46b4      	mov	ip, r6
    3974:	e7ad      	b.n	38d2 <__aeabi_dmul+0x386>
    3976:	2501      	movs	r5, #1
    3978:	1a2a      	subs	r2, r5, r0
    397a:	2a38      	cmp	r2, #56	; 0x38
    397c:	dd06      	ble.n	398c <__aeabi_dmul+0x440>
    397e:	9b01      	ldr	r3, [sp, #4]
    3980:	2400      	movs	r4, #0
    3982:	401d      	ands	r5, r3
    3984:	2300      	movs	r3, #0
    3986:	2200      	movs	r2, #0
    3988:	4699      	mov	r9, r3
    398a:	e646      	b.n	361a <__aeabi_dmul+0xce>
    398c:	2a1f      	cmp	r2, #31
    398e:	dc21      	bgt.n	39d4 <__aeabi_dmul+0x488>
    3990:	2520      	movs	r5, #32
    3992:	0020      	movs	r0, r4
    3994:	1aad      	subs	r5, r5, r2
    3996:	001e      	movs	r6, r3
    3998:	40ab      	lsls	r3, r5
    399a:	40a8      	lsls	r0, r5
    399c:	40d6      	lsrs	r6, r2
    399e:	1e5d      	subs	r5, r3, #1
    39a0:	41ab      	sbcs	r3, r5
    39a2:	4330      	orrs	r0, r6
    39a4:	4318      	orrs	r0, r3
    39a6:	40d4      	lsrs	r4, r2
    39a8:	0743      	lsls	r3, r0, #29
    39aa:	d009      	beq.n	39c0 <__aeabi_dmul+0x474>
    39ac:	230f      	movs	r3, #15
    39ae:	4003      	ands	r3, r0
    39b0:	2b04      	cmp	r3, #4
    39b2:	d005      	beq.n	39c0 <__aeabi_dmul+0x474>
    39b4:	0003      	movs	r3, r0
    39b6:	1d18      	adds	r0, r3, #4
    39b8:	4298      	cmp	r0, r3
    39ba:	419b      	sbcs	r3, r3
    39bc:	425b      	negs	r3, r3
    39be:	18e4      	adds	r4, r4, r3
    39c0:	0223      	lsls	r3, r4, #8
    39c2:	d521      	bpl.n	3a08 <__aeabi_dmul+0x4bc>
    39c4:	2501      	movs	r5, #1
    39c6:	9b01      	ldr	r3, [sp, #4]
    39c8:	2401      	movs	r4, #1
    39ca:	401d      	ands	r5, r3
    39cc:	2300      	movs	r3, #0
    39ce:	2200      	movs	r2, #0
    39d0:	4699      	mov	r9, r3
    39d2:	e622      	b.n	361a <__aeabi_dmul+0xce>
    39d4:	251f      	movs	r5, #31
    39d6:	0021      	movs	r1, r4
    39d8:	426d      	negs	r5, r5
    39da:	1a28      	subs	r0, r5, r0
    39dc:	40c1      	lsrs	r1, r0
    39de:	0008      	movs	r0, r1
    39e0:	2a20      	cmp	r2, #32
    39e2:	d01d      	beq.n	3a20 <__aeabi_dmul+0x4d4>
    39e4:	355f      	adds	r5, #95	; 0x5f
    39e6:	1aaa      	subs	r2, r5, r2
    39e8:	4094      	lsls	r4, r2
    39ea:	4323      	orrs	r3, r4
    39ec:	1e5c      	subs	r4, r3, #1
    39ee:	41a3      	sbcs	r3, r4
    39f0:	2507      	movs	r5, #7
    39f2:	4303      	orrs	r3, r0
    39f4:	401d      	ands	r5, r3
    39f6:	2200      	movs	r2, #0
    39f8:	2d00      	cmp	r5, #0
    39fa:	d009      	beq.n	3a10 <__aeabi_dmul+0x4c4>
    39fc:	220f      	movs	r2, #15
    39fe:	2400      	movs	r4, #0
    3a00:	401a      	ands	r2, r3
    3a02:	0018      	movs	r0, r3
    3a04:	2a04      	cmp	r2, #4
    3a06:	d1d6      	bne.n	39b6 <__aeabi_dmul+0x46a>
    3a08:	0003      	movs	r3, r0
    3a0a:	0765      	lsls	r5, r4, #29
    3a0c:	0264      	lsls	r4, r4, #9
    3a0e:	0b22      	lsrs	r2, r4, #12
    3a10:	08db      	lsrs	r3, r3, #3
    3a12:	432b      	orrs	r3, r5
    3a14:	2501      	movs	r5, #1
    3a16:	4699      	mov	r9, r3
    3a18:	9b01      	ldr	r3, [sp, #4]
    3a1a:	2400      	movs	r4, #0
    3a1c:	401d      	ands	r5, r3
    3a1e:	e5fc      	b.n	361a <__aeabi_dmul+0xce>
    3a20:	2400      	movs	r4, #0
    3a22:	e7e2      	b.n	39ea <__aeabi_dmul+0x49e>
    3a24:	2280      	movs	r2, #128	; 0x80
    3a26:	2501      	movs	r5, #1
    3a28:	0312      	lsls	r2, r2, #12
    3a2a:	4322      	orrs	r2, r4
    3a2c:	9901      	ldr	r1, [sp, #4]
    3a2e:	0312      	lsls	r2, r2, #12
    3a30:	0b12      	lsrs	r2, r2, #12
    3a32:	400d      	ands	r5, r1
    3a34:	4699      	mov	r9, r3
    3a36:	4c04      	ldr	r4, [pc, #16]	; (3a48 <__aeabi_dmul+0x4fc>)
    3a38:	e5ef      	b.n	361a <__aeabi_dmul+0xce>
    3a3a:	46c0      	nop			; (mov r8, r8)
    3a3c:	000003ff 	.word	0x000003ff
    3a40:	feffffff 	.word	0xfeffffff
    3a44:	000007fe 	.word	0x000007fe
    3a48:	000007ff 	.word	0x000007ff

00003a4c <__aeabi_dsub>:
    3a4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3a4e:	4646      	mov	r6, r8
    3a50:	46d6      	mov	lr, sl
    3a52:	464f      	mov	r7, r9
    3a54:	030c      	lsls	r4, r1, #12
    3a56:	b5c0      	push	{r6, r7, lr}
    3a58:	0fcd      	lsrs	r5, r1, #31
    3a5a:	004e      	lsls	r6, r1, #1
    3a5c:	0a61      	lsrs	r1, r4, #9
    3a5e:	0f44      	lsrs	r4, r0, #29
    3a60:	430c      	orrs	r4, r1
    3a62:	00c1      	lsls	r1, r0, #3
    3a64:	0058      	lsls	r0, r3, #1
    3a66:	0d40      	lsrs	r0, r0, #21
    3a68:	4684      	mov	ip, r0
    3a6a:	468a      	mov	sl, r1
    3a6c:	000f      	movs	r7, r1
    3a6e:	0319      	lsls	r1, r3, #12
    3a70:	0f50      	lsrs	r0, r2, #29
    3a72:	0a49      	lsrs	r1, r1, #9
    3a74:	4301      	orrs	r1, r0
    3a76:	48c6      	ldr	r0, [pc, #792]	; (3d90 <__aeabi_dsub+0x344>)
    3a78:	0d76      	lsrs	r6, r6, #21
    3a7a:	46a8      	mov	r8, r5
    3a7c:	0fdb      	lsrs	r3, r3, #31
    3a7e:	00d2      	lsls	r2, r2, #3
    3a80:	4584      	cmp	ip, r0
    3a82:	d100      	bne.n	3a86 <__aeabi_dsub+0x3a>
    3a84:	e0d8      	b.n	3c38 <__aeabi_dsub+0x1ec>
    3a86:	2001      	movs	r0, #1
    3a88:	4043      	eors	r3, r0
    3a8a:	42ab      	cmp	r3, r5
    3a8c:	d100      	bne.n	3a90 <__aeabi_dsub+0x44>
    3a8e:	e0a6      	b.n	3bde <__aeabi_dsub+0x192>
    3a90:	4660      	mov	r0, ip
    3a92:	1a35      	subs	r5, r6, r0
    3a94:	2d00      	cmp	r5, #0
    3a96:	dc00      	bgt.n	3a9a <__aeabi_dsub+0x4e>
    3a98:	e105      	b.n	3ca6 <__aeabi_dsub+0x25a>
    3a9a:	2800      	cmp	r0, #0
    3a9c:	d110      	bne.n	3ac0 <__aeabi_dsub+0x74>
    3a9e:	000b      	movs	r3, r1
    3aa0:	4313      	orrs	r3, r2
    3aa2:	d100      	bne.n	3aa6 <__aeabi_dsub+0x5a>
    3aa4:	e0d7      	b.n	3c56 <__aeabi_dsub+0x20a>
    3aa6:	1e6b      	subs	r3, r5, #1
    3aa8:	2b00      	cmp	r3, #0
    3aaa:	d000      	beq.n	3aae <__aeabi_dsub+0x62>
    3aac:	e14b      	b.n	3d46 <__aeabi_dsub+0x2fa>
    3aae:	4653      	mov	r3, sl
    3ab0:	1a9f      	subs	r7, r3, r2
    3ab2:	45ba      	cmp	sl, r7
    3ab4:	4180      	sbcs	r0, r0
    3ab6:	1a64      	subs	r4, r4, r1
    3ab8:	4240      	negs	r0, r0
    3aba:	1a24      	subs	r4, r4, r0
    3abc:	2601      	movs	r6, #1
    3abe:	e01e      	b.n	3afe <__aeabi_dsub+0xb2>
    3ac0:	4bb3      	ldr	r3, [pc, #716]	; (3d90 <__aeabi_dsub+0x344>)
    3ac2:	429e      	cmp	r6, r3
    3ac4:	d048      	beq.n	3b58 <__aeabi_dsub+0x10c>
    3ac6:	2380      	movs	r3, #128	; 0x80
    3ac8:	041b      	lsls	r3, r3, #16
    3aca:	4319      	orrs	r1, r3
    3acc:	2d38      	cmp	r5, #56	; 0x38
    3ace:	dd00      	ble.n	3ad2 <__aeabi_dsub+0x86>
    3ad0:	e119      	b.n	3d06 <__aeabi_dsub+0x2ba>
    3ad2:	2d1f      	cmp	r5, #31
    3ad4:	dd00      	ble.n	3ad8 <__aeabi_dsub+0x8c>
    3ad6:	e14c      	b.n	3d72 <__aeabi_dsub+0x326>
    3ad8:	2320      	movs	r3, #32
    3ada:	000f      	movs	r7, r1
    3adc:	1b5b      	subs	r3, r3, r5
    3ade:	0010      	movs	r0, r2
    3ae0:	409a      	lsls	r2, r3
    3ae2:	409f      	lsls	r7, r3
    3ae4:	40e8      	lsrs	r0, r5
    3ae6:	1e53      	subs	r3, r2, #1
    3ae8:	419a      	sbcs	r2, r3
    3aea:	40e9      	lsrs	r1, r5
    3aec:	4307      	orrs	r7, r0
    3aee:	4317      	orrs	r7, r2
    3af0:	4653      	mov	r3, sl
    3af2:	1bdf      	subs	r7, r3, r7
    3af4:	1a61      	subs	r1, r4, r1
    3af6:	45ba      	cmp	sl, r7
    3af8:	41a4      	sbcs	r4, r4
    3afa:	4264      	negs	r4, r4
    3afc:	1b0c      	subs	r4, r1, r4
    3afe:	0223      	lsls	r3, r4, #8
    3b00:	d400      	bmi.n	3b04 <__aeabi_dsub+0xb8>
    3b02:	e0c5      	b.n	3c90 <__aeabi_dsub+0x244>
    3b04:	0264      	lsls	r4, r4, #9
    3b06:	0a65      	lsrs	r5, r4, #9
    3b08:	2d00      	cmp	r5, #0
    3b0a:	d100      	bne.n	3b0e <__aeabi_dsub+0xc2>
    3b0c:	e0f6      	b.n	3cfc <__aeabi_dsub+0x2b0>
    3b0e:	0028      	movs	r0, r5
    3b10:	f000 fc7a 	bl	4408 <__clzsi2>
    3b14:	0003      	movs	r3, r0
    3b16:	3b08      	subs	r3, #8
    3b18:	2b1f      	cmp	r3, #31
    3b1a:	dd00      	ble.n	3b1e <__aeabi_dsub+0xd2>
    3b1c:	e0e9      	b.n	3cf2 <__aeabi_dsub+0x2a6>
    3b1e:	2220      	movs	r2, #32
    3b20:	003c      	movs	r4, r7
    3b22:	1ad2      	subs	r2, r2, r3
    3b24:	409d      	lsls	r5, r3
    3b26:	40d4      	lsrs	r4, r2
    3b28:	409f      	lsls	r7, r3
    3b2a:	4325      	orrs	r5, r4
    3b2c:	429e      	cmp	r6, r3
    3b2e:	dd00      	ble.n	3b32 <__aeabi_dsub+0xe6>
    3b30:	e0db      	b.n	3cea <__aeabi_dsub+0x29e>
    3b32:	1b9e      	subs	r6, r3, r6
    3b34:	1c73      	adds	r3, r6, #1
    3b36:	2b1f      	cmp	r3, #31
    3b38:	dd00      	ble.n	3b3c <__aeabi_dsub+0xf0>
    3b3a:	e10a      	b.n	3d52 <__aeabi_dsub+0x306>
    3b3c:	2220      	movs	r2, #32
    3b3e:	0038      	movs	r0, r7
    3b40:	1ad2      	subs	r2, r2, r3
    3b42:	0029      	movs	r1, r5
    3b44:	4097      	lsls	r7, r2
    3b46:	002c      	movs	r4, r5
    3b48:	4091      	lsls	r1, r2
    3b4a:	40d8      	lsrs	r0, r3
    3b4c:	1e7a      	subs	r2, r7, #1
    3b4e:	4197      	sbcs	r7, r2
    3b50:	40dc      	lsrs	r4, r3
    3b52:	2600      	movs	r6, #0
    3b54:	4301      	orrs	r1, r0
    3b56:	430f      	orrs	r7, r1
    3b58:	077b      	lsls	r3, r7, #29
    3b5a:	d009      	beq.n	3b70 <__aeabi_dsub+0x124>
    3b5c:	230f      	movs	r3, #15
    3b5e:	403b      	ands	r3, r7
    3b60:	2b04      	cmp	r3, #4
    3b62:	d005      	beq.n	3b70 <__aeabi_dsub+0x124>
    3b64:	1d3b      	adds	r3, r7, #4
    3b66:	42bb      	cmp	r3, r7
    3b68:	41bf      	sbcs	r7, r7
    3b6a:	427f      	negs	r7, r7
    3b6c:	19e4      	adds	r4, r4, r7
    3b6e:	001f      	movs	r7, r3
    3b70:	0223      	lsls	r3, r4, #8
    3b72:	d525      	bpl.n	3bc0 <__aeabi_dsub+0x174>
    3b74:	4b86      	ldr	r3, [pc, #536]	; (3d90 <__aeabi_dsub+0x344>)
    3b76:	3601      	adds	r6, #1
    3b78:	429e      	cmp	r6, r3
    3b7a:	d100      	bne.n	3b7e <__aeabi_dsub+0x132>
    3b7c:	e0af      	b.n	3cde <__aeabi_dsub+0x292>
    3b7e:	4b85      	ldr	r3, [pc, #532]	; (3d94 <__aeabi_dsub+0x348>)
    3b80:	2501      	movs	r5, #1
    3b82:	401c      	ands	r4, r3
    3b84:	4643      	mov	r3, r8
    3b86:	0762      	lsls	r2, r4, #29
    3b88:	08ff      	lsrs	r7, r7, #3
    3b8a:	0264      	lsls	r4, r4, #9
    3b8c:	0576      	lsls	r6, r6, #21
    3b8e:	4317      	orrs	r7, r2
    3b90:	0b24      	lsrs	r4, r4, #12
    3b92:	0d76      	lsrs	r6, r6, #21
    3b94:	401d      	ands	r5, r3
    3b96:	2100      	movs	r1, #0
    3b98:	0324      	lsls	r4, r4, #12
    3b9a:	0b23      	lsrs	r3, r4, #12
    3b9c:	0d0c      	lsrs	r4, r1, #20
    3b9e:	4a7e      	ldr	r2, [pc, #504]	; (3d98 <__aeabi_dsub+0x34c>)
    3ba0:	0524      	lsls	r4, r4, #20
    3ba2:	431c      	orrs	r4, r3
    3ba4:	4014      	ands	r4, r2
    3ba6:	0533      	lsls	r3, r6, #20
    3ba8:	4323      	orrs	r3, r4
    3baa:	005b      	lsls	r3, r3, #1
    3bac:	07ed      	lsls	r5, r5, #31
    3bae:	085b      	lsrs	r3, r3, #1
    3bb0:	432b      	orrs	r3, r5
    3bb2:	0038      	movs	r0, r7
    3bb4:	0019      	movs	r1, r3
    3bb6:	bc1c      	pop	{r2, r3, r4}
    3bb8:	4690      	mov	r8, r2
    3bba:	4699      	mov	r9, r3
    3bbc:	46a2      	mov	sl, r4
    3bbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3bc0:	2501      	movs	r5, #1
    3bc2:	4643      	mov	r3, r8
    3bc4:	0762      	lsls	r2, r4, #29
    3bc6:	08ff      	lsrs	r7, r7, #3
    3bc8:	4317      	orrs	r7, r2
    3bca:	08e4      	lsrs	r4, r4, #3
    3bcc:	401d      	ands	r5, r3
    3bce:	4b70      	ldr	r3, [pc, #448]	; (3d90 <__aeabi_dsub+0x344>)
    3bd0:	429e      	cmp	r6, r3
    3bd2:	d036      	beq.n	3c42 <__aeabi_dsub+0x1f6>
    3bd4:	0324      	lsls	r4, r4, #12
    3bd6:	0576      	lsls	r6, r6, #21
    3bd8:	0b24      	lsrs	r4, r4, #12
    3bda:	0d76      	lsrs	r6, r6, #21
    3bdc:	e7db      	b.n	3b96 <__aeabi_dsub+0x14a>
    3bde:	4663      	mov	r3, ip
    3be0:	1af3      	subs	r3, r6, r3
    3be2:	2b00      	cmp	r3, #0
    3be4:	dc00      	bgt.n	3be8 <__aeabi_dsub+0x19c>
    3be6:	e094      	b.n	3d12 <__aeabi_dsub+0x2c6>
    3be8:	4660      	mov	r0, ip
    3bea:	2800      	cmp	r0, #0
    3bec:	d035      	beq.n	3c5a <__aeabi_dsub+0x20e>
    3bee:	4868      	ldr	r0, [pc, #416]	; (3d90 <__aeabi_dsub+0x344>)
    3bf0:	4286      	cmp	r6, r0
    3bf2:	d0b1      	beq.n	3b58 <__aeabi_dsub+0x10c>
    3bf4:	2780      	movs	r7, #128	; 0x80
    3bf6:	043f      	lsls	r7, r7, #16
    3bf8:	4339      	orrs	r1, r7
    3bfa:	2b38      	cmp	r3, #56	; 0x38
    3bfc:	dc00      	bgt.n	3c00 <__aeabi_dsub+0x1b4>
    3bfe:	e0fd      	b.n	3dfc <__aeabi_dsub+0x3b0>
    3c00:	430a      	orrs	r2, r1
    3c02:	0017      	movs	r7, r2
    3c04:	2100      	movs	r1, #0
    3c06:	1e7a      	subs	r2, r7, #1
    3c08:	4197      	sbcs	r7, r2
    3c0a:	4457      	add	r7, sl
    3c0c:	4557      	cmp	r7, sl
    3c0e:	4180      	sbcs	r0, r0
    3c10:	1909      	adds	r1, r1, r4
    3c12:	4244      	negs	r4, r0
    3c14:	190c      	adds	r4, r1, r4
    3c16:	0223      	lsls	r3, r4, #8
    3c18:	d53a      	bpl.n	3c90 <__aeabi_dsub+0x244>
    3c1a:	4b5d      	ldr	r3, [pc, #372]	; (3d90 <__aeabi_dsub+0x344>)
    3c1c:	3601      	adds	r6, #1
    3c1e:	429e      	cmp	r6, r3
    3c20:	d100      	bne.n	3c24 <__aeabi_dsub+0x1d8>
    3c22:	e14b      	b.n	3ebc <__aeabi_dsub+0x470>
    3c24:	2201      	movs	r2, #1
    3c26:	4b5b      	ldr	r3, [pc, #364]	; (3d94 <__aeabi_dsub+0x348>)
    3c28:	401c      	ands	r4, r3
    3c2a:	087b      	lsrs	r3, r7, #1
    3c2c:	4017      	ands	r7, r2
    3c2e:	431f      	orrs	r7, r3
    3c30:	07e2      	lsls	r2, r4, #31
    3c32:	4317      	orrs	r7, r2
    3c34:	0864      	lsrs	r4, r4, #1
    3c36:	e78f      	b.n	3b58 <__aeabi_dsub+0x10c>
    3c38:	0008      	movs	r0, r1
    3c3a:	4310      	orrs	r0, r2
    3c3c:	d000      	beq.n	3c40 <__aeabi_dsub+0x1f4>
    3c3e:	e724      	b.n	3a8a <__aeabi_dsub+0x3e>
    3c40:	e721      	b.n	3a86 <__aeabi_dsub+0x3a>
    3c42:	0023      	movs	r3, r4
    3c44:	433b      	orrs	r3, r7
    3c46:	d100      	bne.n	3c4a <__aeabi_dsub+0x1fe>
    3c48:	e1b9      	b.n	3fbe <__aeabi_dsub+0x572>
    3c4a:	2280      	movs	r2, #128	; 0x80
    3c4c:	0312      	lsls	r2, r2, #12
    3c4e:	4314      	orrs	r4, r2
    3c50:	0324      	lsls	r4, r4, #12
    3c52:	0b24      	lsrs	r4, r4, #12
    3c54:	e79f      	b.n	3b96 <__aeabi_dsub+0x14a>
    3c56:	002e      	movs	r6, r5
    3c58:	e77e      	b.n	3b58 <__aeabi_dsub+0x10c>
    3c5a:	0008      	movs	r0, r1
    3c5c:	4310      	orrs	r0, r2
    3c5e:	d100      	bne.n	3c62 <__aeabi_dsub+0x216>
    3c60:	e0ca      	b.n	3df8 <__aeabi_dsub+0x3ac>
    3c62:	1e58      	subs	r0, r3, #1
    3c64:	4684      	mov	ip, r0
    3c66:	2800      	cmp	r0, #0
    3c68:	d000      	beq.n	3c6c <__aeabi_dsub+0x220>
    3c6a:	e0e7      	b.n	3e3c <__aeabi_dsub+0x3f0>
    3c6c:	4452      	add	r2, sl
    3c6e:	4552      	cmp	r2, sl
    3c70:	4180      	sbcs	r0, r0
    3c72:	1864      	adds	r4, r4, r1
    3c74:	4240      	negs	r0, r0
    3c76:	1824      	adds	r4, r4, r0
    3c78:	0017      	movs	r7, r2
    3c7a:	2601      	movs	r6, #1
    3c7c:	0223      	lsls	r3, r4, #8
    3c7e:	d507      	bpl.n	3c90 <__aeabi_dsub+0x244>
    3c80:	2602      	movs	r6, #2
    3c82:	e7cf      	b.n	3c24 <__aeabi_dsub+0x1d8>
    3c84:	4664      	mov	r4, ip
    3c86:	432c      	orrs	r4, r5
    3c88:	d100      	bne.n	3c8c <__aeabi_dsub+0x240>
    3c8a:	e1b3      	b.n	3ff4 <__aeabi_dsub+0x5a8>
    3c8c:	002c      	movs	r4, r5
    3c8e:	4667      	mov	r7, ip
    3c90:	077b      	lsls	r3, r7, #29
    3c92:	d000      	beq.n	3c96 <__aeabi_dsub+0x24a>
    3c94:	e762      	b.n	3b5c <__aeabi_dsub+0x110>
    3c96:	0763      	lsls	r3, r4, #29
    3c98:	08ff      	lsrs	r7, r7, #3
    3c9a:	431f      	orrs	r7, r3
    3c9c:	2501      	movs	r5, #1
    3c9e:	4643      	mov	r3, r8
    3ca0:	08e4      	lsrs	r4, r4, #3
    3ca2:	401d      	ands	r5, r3
    3ca4:	e793      	b.n	3bce <__aeabi_dsub+0x182>
    3ca6:	2d00      	cmp	r5, #0
    3ca8:	d178      	bne.n	3d9c <__aeabi_dsub+0x350>
    3caa:	1c75      	adds	r5, r6, #1
    3cac:	056d      	lsls	r5, r5, #21
    3cae:	0d6d      	lsrs	r5, r5, #21
    3cb0:	2d01      	cmp	r5, #1
    3cb2:	dc00      	bgt.n	3cb6 <__aeabi_dsub+0x26a>
    3cb4:	e0f2      	b.n	3e9c <__aeabi_dsub+0x450>
    3cb6:	4650      	mov	r0, sl
    3cb8:	1a80      	subs	r0, r0, r2
    3cba:	4582      	cmp	sl, r0
    3cbc:	41bf      	sbcs	r7, r7
    3cbe:	1a65      	subs	r5, r4, r1
    3cc0:	427f      	negs	r7, r7
    3cc2:	1bed      	subs	r5, r5, r7
    3cc4:	4684      	mov	ip, r0
    3cc6:	0228      	lsls	r0, r5, #8
    3cc8:	d400      	bmi.n	3ccc <__aeabi_dsub+0x280>
    3cca:	e08c      	b.n	3de6 <__aeabi_dsub+0x39a>
    3ccc:	4650      	mov	r0, sl
    3cce:	1a17      	subs	r7, r2, r0
    3cd0:	42ba      	cmp	r2, r7
    3cd2:	4192      	sbcs	r2, r2
    3cd4:	1b0c      	subs	r4, r1, r4
    3cd6:	4255      	negs	r5, r2
    3cd8:	1b65      	subs	r5, r4, r5
    3cda:	4698      	mov	r8, r3
    3cdc:	e714      	b.n	3b08 <__aeabi_dsub+0xbc>
    3cde:	2501      	movs	r5, #1
    3ce0:	4643      	mov	r3, r8
    3ce2:	2400      	movs	r4, #0
    3ce4:	401d      	ands	r5, r3
    3ce6:	2700      	movs	r7, #0
    3ce8:	e755      	b.n	3b96 <__aeabi_dsub+0x14a>
    3cea:	4c2a      	ldr	r4, [pc, #168]	; (3d94 <__aeabi_dsub+0x348>)
    3cec:	1af6      	subs	r6, r6, r3
    3cee:	402c      	ands	r4, r5
    3cf0:	e732      	b.n	3b58 <__aeabi_dsub+0x10c>
    3cf2:	003d      	movs	r5, r7
    3cf4:	3828      	subs	r0, #40	; 0x28
    3cf6:	4085      	lsls	r5, r0
    3cf8:	2700      	movs	r7, #0
    3cfa:	e717      	b.n	3b2c <__aeabi_dsub+0xe0>
    3cfc:	0038      	movs	r0, r7
    3cfe:	f000 fb83 	bl	4408 <__clzsi2>
    3d02:	3020      	adds	r0, #32
    3d04:	e706      	b.n	3b14 <__aeabi_dsub+0xc8>
    3d06:	430a      	orrs	r2, r1
    3d08:	0017      	movs	r7, r2
    3d0a:	2100      	movs	r1, #0
    3d0c:	1e7a      	subs	r2, r7, #1
    3d0e:	4197      	sbcs	r7, r2
    3d10:	e6ee      	b.n	3af0 <__aeabi_dsub+0xa4>
    3d12:	2b00      	cmp	r3, #0
    3d14:	d000      	beq.n	3d18 <__aeabi_dsub+0x2cc>
    3d16:	e0e5      	b.n	3ee4 <__aeabi_dsub+0x498>
    3d18:	1c73      	adds	r3, r6, #1
    3d1a:	469c      	mov	ip, r3
    3d1c:	055b      	lsls	r3, r3, #21
    3d1e:	0d5b      	lsrs	r3, r3, #21
    3d20:	2b01      	cmp	r3, #1
    3d22:	dc00      	bgt.n	3d26 <__aeabi_dsub+0x2da>
    3d24:	e09f      	b.n	3e66 <__aeabi_dsub+0x41a>
    3d26:	4b1a      	ldr	r3, [pc, #104]	; (3d90 <__aeabi_dsub+0x344>)
    3d28:	459c      	cmp	ip, r3
    3d2a:	d100      	bne.n	3d2e <__aeabi_dsub+0x2e2>
    3d2c:	e0c5      	b.n	3eba <__aeabi_dsub+0x46e>
    3d2e:	4452      	add	r2, sl
    3d30:	4552      	cmp	r2, sl
    3d32:	4180      	sbcs	r0, r0
    3d34:	1864      	adds	r4, r4, r1
    3d36:	4240      	negs	r0, r0
    3d38:	1824      	adds	r4, r4, r0
    3d3a:	07e7      	lsls	r7, r4, #31
    3d3c:	0852      	lsrs	r2, r2, #1
    3d3e:	4317      	orrs	r7, r2
    3d40:	0864      	lsrs	r4, r4, #1
    3d42:	4666      	mov	r6, ip
    3d44:	e708      	b.n	3b58 <__aeabi_dsub+0x10c>
    3d46:	4812      	ldr	r0, [pc, #72]	; (3d90 <__aeabi_dsub+0x344>)
    3d48:	4285      	cmp	r5, r0
    3d4a:	d100      	bne.n	3d4e <__aeabi_dsub+0x302>
    3d4c:	e085      	b.n	3e5a <__aeabi_dsub+0x40e>
    3d4e:	001d      	movs	r5, r3
    3d50:	e6bc      	b.n	3acc <__aeabi_dsub+0x80>
    3d52:	0029      	movs	r1, r5
    3d54:	3e1f      	subs	r6, #31
    3d56:	40f1      	lsrs	r1, r6
    3d58:	2b20      	cmp	r3, #32
    3d5a:	d100      	bne.n	3d5e <__aeabi_dsub+0x312>
    3d5c:	e07f      	b.n	3e5e <__aeabi_dsub+0x412>
    3d5e:	2240      	movs	r2, #64	; 0x40
    3d60:	1ad3      	subs	r3, r2, r3
    3d62:	409d      	lsls	r5, r3
    3d64:	432f      	orrs	r7, r5
    3d66:	1e7d      	subs	r5, r7, #1
    3d68:	41af      	sbcs	r7, r5
    3d6a:	2400      	movs	r4, #0
    3d6c:	430f      	orrs	r7, r1
    3d6e:	2600      	movs	r6, #0
    3d70:	e78e      	b.n	3c90 <__aeabi_dsub+0x244>
    3d72:	002b      	movs	r3, r5
    3d74:	000f      	movs	r7, r1
    3d76:	3b20      	subs	r3, #32
    3d78:	40df      	lsrs	r7, r3
    3d7a:	2d20      	cmp	r5, #32
    3d7c:	d071      	beq.n	3e62 <__aeabi_dsub+0x416>
    3d7e:	2340      	movs	r3, #64	; 0x40
    3d80:	1b5d      	subs	r5, r3, r5
    3d82:	40a9      	lsls	r1, r5
    3d84:	430a      	orrs	r2, r1
    3d86:	1e51      	subs	r1, r2, #1
    3d88:	418a      	sbcs	r2, r1
    3d8a:	2100      	movs	r1, #0
    3d8c:	4317      	orrs	r7, r2
    3d8e:	e6af      	b.n	3af0 <__aeabi_dsub+0xa4>
    3d90:	000007ff 	.word	0x000007ff
    3d94:	ff7fffff 	.word	0xff7fffff
    3d98:	800fffff 	.word	0x800fffff
    3d9c:	2e00      	cmp	r6, #0
    3d9e:	d03e      	beq.n	3e1e <__aeabi_dsub+0x3d2>
    3da0:	4eb3      	ldr	r6, [pc, #716]	; (4070 <__aeabi_dsub+0x624>)
    3da2:	45b4      	cmp	ip, r6
    3da4:	d045      	beq.n	3e32 <__aeabi_dsub+0x3e6>
    3da6:	2680      	movs	r6, #128	; 0x80
    3da8:	0436      	lsls	r6, r6, #16
    3daa:	426d      	negs	r5, r5
    3dac:	4334      	orrs	r4, r6
    3dae:	2d38      	cmp	r5, #56	; 0x38
    3db0:	dd00      	ble.n	3db4 <__aeabi_dsub+0x368>
    3db2:	e0a8      	b.n	3f06 <__aeabi_dsub+0x4ba>
    3db4:	2d1f      	cmp	r5, #31
    3db6:	dd00      	ble.n	3dba <__aeabi_dsub+0x36e>
    3db8:	e11f      	b.n	3ffa <__aeabi_dsub+0x5ae>
    3dba:	2620      	movs	r6, #32
    3dbc:	0027      	movs	r7, r4
    3dbe:	4650      	mov	r0, sl
    3dc0:	1b76      	subs	r6, r6, r5
    3dc2:	40b7      	lsls	r7, r6
    3dc4:	40e8      	lsrs	r0, r5
    3dc6:	4307      	orrs	r7, r0
    3dc8:	4650      	mov	r0, sl
    3dca:	40b0      	lsls	r0, r6
    3dcc:	1e46      	subs	r6, r0, #1
    3dce:	41b0      	sbcs	r0, r6
    3dd0:	40ec      	lsrs	r4, r5
    3dd2:	4338      	orrs	r0, r7
    3dd4:	1a17      	subs	r7, r2, r0
    3dd6:	42ba      	cmp	r2, r7
    3dd8:	4192      	sbcs	r2, r2
    3dda:	1b0c      	subs	r4, r1, r4
    3ddc:	4252      	negs	r2, r2
    3dde:	1aa4      	subs	r4, r4, r2
    3de0:	4666      	mov	r6, ip
    3de2:	4698      	mov	r8, r3
    3de4:	e68b      	b.n	3afe <__aeabi_dsub+0xb2>
    3de6:	4664      	mov	r4, ip
    3de8:	4667      	mov	r7, ip
    3dea:	432c      	orrs	r4, r5
    3dec:	d000      	beq.n	3df0 <__aeabi_dsub+0x3a4>
    3dee:	e68b      	b.n	3b08 <__aeabi_dsub+0xbc>
    3df0:	2500      	movs	r5, #0
    3df2:	2600      	movs	r6, #0
    3df4:	2700      	movs	r7, #0
    3df6:	e6ea      	b.n	3bce <__aeabi_dsub+0x182>
    3df8:	001e      	movs	r6, r3
    3dfa:	e6ad      	b.n	3b58 <__aeabi_dsub+0x10c>
    3dfc:	2b1f      	cmp	r3, #31
    3dfe:	dc60      	bgt.n	3ec2 <__aeabi_dsub+0x476>
    3e00:	2720      	movs	r7, #32
    3e02:	1af8      	subs	r0, r7, r3
    3e04:	000f      	movs	r7, r1
    3e06:	4684      	mov	ip, r0
    3e08:	4087      	lsls	r7, r0
    3e0a:	0010      	movs	r0, r2
    3e0c:	40d8      	lsrs	r0, r3
    3e0e:	4307      	orrs	r7, r0
    3e10:	4660      	mov	r0, ip
    3e12:	4082      	lsls	r2, r0
    3e14:	1e50      	subs	r0, r2, #1
    3e16:	4182      	sbcs	r2, r0
    3e18:	40d9      	lsrs	r1, r3
    3e1a:	4317      	orrs	r7, r2
    3e1c:	e6f5      	b.n	3c0a <__aeabi_dsub+0x1be>
    3e1e:	0026      	movs	r6, r4
    3e20:	4650      	mov	r0, sl
    3e22:	4306      	orrs	r6, r0
    3e24:	d005      	beq.n	3e32 <__aeabi_dsub+0x3e6>
    3e26:	43ed      	mvns	r5, r5
    3e28:	2d00      	cmp	r5, #0
    3e2a:	d0d3      	beq.n	3dd4 <__aeabi_dsub+0x388>
    3e2c:	4e90      	ldr	r6, [pc, #576]	; (4070 <__aeabi_dsub+0x624>)
    3e2e:	45b4      	cmp	ip, r6
    3e30:	d1bd      	bne.n	3dae <__aeabi_dsub+0x362>
    3e32:	000c      	movs	r4, r1
    3e34:	0017      	movs	r7, r2
    3e36:	4666      	mov	r6, ip
    3e38:	4698      	mov	r8, r3
    3e3a:	e68d      	b.n	3b58 <__aeabi_dsub+0x10c>
    3e3c:	488c      	ldr	r0, [pc, #560]	; (4070 <__aeabi_dsub+0x624>)
    3e3e:	4283      	cmp	r3, r0
    3e40:	d00b      	beq.n	3e5a <__aeabi_dsub+0x40e>
    3e42:	4663      	mov	r3, ip
    3e44:	e6d9      	b.n	3bfa <__aeabi_dsub+0x1ae>
    3e46:	2d00      	cmp	r5, #0
    3e48:	d000      	beq.n	3e4c <__aeabi_dsub+0x400>
    3e4a:	e096      	b.n	3f7a <__aeabi_dsub+0x52e>
    3e4c:	0008      	movs	r0, r1
    3e4e:	4310      	orrs	r0, r2
    3e50:	d100      	bne.n	3e54 <__aeabi_dsub+0x408>
    3e52:	e0e2      	b.n	401a <__aeabi_dsub+0x5ce>
    3e54:	000c      	movs	r4, r1
    3e56:	0017      	movs	r7, r2
    3e58:	4698      	mov	r8, r3
    3e5a:	4e85      	ldr	r6, [pc, #532]	; (4070 <__aeabi_dsub+0x624>)
    3e5c:	e67c      	b.n	3b58 <__aeabi_dsub+0x10c>
    3e5e:	2500      	movs	r5, #0
    3e60:	e780      	b.n	3d64 <__aeabi_dsub+0x318>
    3e62:	2100      	movs	r1, #0
    3e64:	e78e      	b.n	3d84 <__aeabi_dsub+0x338>
    3e66:	0023      	movs	r3, r4
    3e68:	4650      	mov	r0, sl
    3e6a:	4303      	orrs	r3, r0
    3e6c:	2e00      	cmp	r6, #0
    3e6e:	d000      	beq.n	3e72 <__aeabi_dsub+0x426>
    3e70:	e0a8      	b.n	3fc4 <__aeabi_dsub+0x578>
    3e72:	2b00      	cmp	r3, #0
    3e74:	d100      	bne.n	3e78 <__aeabi_dsub+0x42c>
    3e76:	e0de      	b.n	4036 <__aeabi_dsub+0x5ea>
    3e78:	000b      	movs	r3, r1
    3e7a:	4313      	orrs	r3, r2
    3e7c:	d100      	bne.n	3e80 <__aeabi_dsub+0x434>
    3e7e:	e66b      	b.n	3b58 <__aeabi_dsub+0x10c>
    3e80:	4452      	add	r2, sl
    3e82:	4552      	cmp	r2, sl
    3e84:	4180      	sbcs	r0, r0
    3e86:	1864      	adds	r4, r4, r1
    3e88:	4240      	negs	r0, r0
    3e8a:	1824      	adds	r4, r4, r0
    3e8c:	0017      	movs	r7, r2
    3e8e:	0223      	lsls	r3, r4, #8
    3e90:	d400      	bmi.n	3e94 <__aeabi_dsub+0x448>
    3e92:	e6fd      	b.n	3c90 <__aeabi_dsub+0x244>
    3e94:	4b77      	ldr	r3, [pc, #476]	; (4074 <__aeabi_dsub+0x628>)
    3e96:	4666      	mov	r6, ip
    3e98:	401c      	ands	r4, r3
    3e9a:	e65d      	b.n	3b58 <__aeabi_dsub+0x10c>
    3e9c:	0025      	movs	r5, r4
    3e9e:	4650      	mov	r0, sl
    3ea0:	4305      	orrs	r5, r0
    3ea2:	2e00      	cmp	r6, #0
    3ea4:	d1cf      	bne.n	3e46 <__aeabi_dsub+0x3fa>
    3ea6:	2d00      	cmp	r5, #0
    3ea8:	d14f      	bne.n	3f4a <__aeabi_dsub+0x4fe>
    3eaa:	000c      	movs	r4, r1
    3eac:	4314      	orrs	r4, r2
    3eae:	d100      	bne.n	3eb2 <__aeabi_dsub+0x466>
    3eb0:	e0a0      	b.n	3ff4 <__aeabi_dsub+0x5a8>
    3eb2:	000c      	movs	r4, r1
    3eb4:	0017      	movs	r7, r2
    3eb6:	4698      	mov	r8, r3
    3eb8:	e64e      	b.n	3b58 <__aeabi_dsub+0x10c>
    3eba:	4666      	mov	r6, ip
    3ebc:	2400      	movs	r4, #0
    3ebe:	2700      	movs	r7, #0
    3ec0:	e685      	b.n	3bce <__aeabi_dsub+0x182>
    3ec2:	001f      	movs	r7, r3
    3ec4:	0008      	movs	r0, r1
    3ec6:	3f20      	subs	r7, #32
    3ec8:	40f8      	lsrs	r0, r7
    3eca:	0007      	movs	r7, r0
    3ecc:	2b20      	cmp	r3, #32
    3ece:	d100      	bne.n	3ed2 <__aeabi_dsub+0x486>
    3ed0:	e08e      	b.n	3ff0 <__aeabi_dsub+0x5a4>
    3ed2:	2040      	movs	r0, #64	; 0x40
    3ed4:	1ac3      	subs	r3, r0, r3
    3ed6:	4099      	lsls	r1, r3
    3ed8:	430a      	orrs	r2, r1
    3eda:	1e51      	subs	r1, r2, #1
    3edc:	418a      	sbcs	r2, r1
    3ede:	2100      	movs	r1, #0
    3ee0:	4317      	orrs	r7, r2
    3ee2:	e692      	b.n	3c0a <__aeabi_dsub+0x1be>
    3ee4:	2e00      	cmp	r6, #0
    3ee6:	d114      	bne.n	3f12 <__aeabi_dsub+0x4c6>
    3ee8:	0026      	movs	r6, r4
    3eea:	4650      	mov	r0, sl
    3eec:	4306      	orrs	r6, r0
    3eee:	d062      	beq.n	3fb6 <__aeabi_dsub+0x56a>
    3ef0:	43db      	mvns	r3, r3
    3ef2:	2b00      	cmp	r3, #0
    3ef4:	d15c      	bne.n	3fb0 <__aeabi_dsub+0x564>
    3ef6:	1887      	adds	r7, r0, r2
    3ef8:	4297      	cmp	r7, r2
    3efa:	4192      	sbcs	r2, r2
    3efc:	1864      	adds	r4, r4, r1
    3efe:	4252      	negs	r2, r2
    3f00:	18a4      	adds	r4, r4, r2
    3f02:	4666      	mov	r6, ip
    3f04:	e687      	b.n	3c16 <__aeabi_dsub+0x1ca>
    3f06:	4650      	mov	r0, sl
    3f08:	4320      	orrs	r0, r4
    3f0a:	1e44      	subs	r4, r0, #1
    3f0c:	41a0      	sbcs	r0, r4
    3f0e:	2400      	movs	r4, #0
    3f10:	e760      	b.n	3dd4 <__aeabi_dsub+0x388>
    3f12:	4e57      	ldr	r6, [pc, #348]	; (4070 <__aeabi_dsub+0x624>)
    3f14:	45b4      	cmp	ip, r6
    3f16:	d04e      	beq.n	3fb6 <__aeabi_dsub+0x56a>
    3f18:	2680      	movs	r6, #128	; 0x80
    3f1a:	0436      	lsls	r6, r6, #16
    3f1c:	425b      	negs	r3, r3
    3f1e:	4334      	orrs	r4, r6
    3f20:	2b38      	cmp	r3, #56	; 0x38
    3f22:	dd00      	ble.n	3f26 <__aeabi_dsub+0x4da>
    3f24:	e07f      	b.n	4026 <__aeabi_dsub+0x5da>
    3f26:	2b1f      	cmp	r3, #31
    3f28:	dd00      	ble.n	3f2c <__aeabi_dsub+0x4e0>
    3f2a:	e08b      	b.n	4044 <__aeabi_dsub+0x5f8>
    3f2c:	2620      	movs	r6, #32
    3f2e:	0027      	movs	r7, r4
    3f30:	4650      	mov	r0, sl
    3f32:	1af6      	subs	r6, r6, r3
    3f34:	40b7      	lsls	r7, r6
    3f36:	40d8      	lsrs	r0, r3
    3f38:	4307      	orrs	r7, r0
    3f3a:	4650      	mov	r0, sl
    3f3c:	40b0      	lsls	r0, r6
    3f3e:	1e46      	subs	r6, r0, #1
    3f40:	41b0      	sbcs	r0, r6
    3f42:	4307      	orrs	r7, r0
    3f44:	40dc      	lsrs	r4, r3
    3f46:	18bf      	adds	r7, r7, r2
    3f48:	e7d6      	b.n	3ef8 <__aeabi_dsub+0x4ac>
    3f4a:	000d      	movs	r5, r1
    3f4c:	4315      	orrs	r5, r2
    3f4e:	d100      	bne.n	3f52 <__aeabi_dsub+0x506>
    3f50:	e602      	b.n	3b58 <__aeabi_dsub+0x10c>
    3f52:	4650      	mov	r0, sl
    3f54:	1a80      	subs	r0, r0, r2
    3f56:	4582      	cmp	sl, r0
    3f58:	41bf      	sbcs	r7, r7
    3f5a:	1a65      	subs	r5, r4, r1
    3f5c:	427f      	negs	r7, r7
    3f5e:	1bed      	subs	r5, r5, r7
    3f60:	4684      	mov	ip, r0
    3f62:	0228      	lsls	r0, r5, #8
    3f64:	d400      	bmi.n	3f68 <__aeabi_dsub+0x51c>
    3f66:	e68d      	b.n	3c84 <__aeabi_dsub+0x238>
    3f68:	4650      	mov	r0, sl
    3f6a:	1a17      	subs	r7, r2, r0
    3f6c:	42ba      	cmp	r2, r7
    3f6e:	4192      	sbcs	r2, r2
    3f70:	1b0c      	subs	r4, r1, r4
    3f72:	4252      	negs	r2, r2
    3f74:	1aa4      	subs	r4, r4, r2
    3f76:	4698      	mov	r8, r3
    3f78:	e5ee      	b.n	3b58 <__aeabi_dsub+0x10c>
    3f7a:	000d      	movs	r5, r1
    3f7c:	4315      	orrs	r5, r2
    3f7e:	d100      	bne.n	3f82 <__aeabi_dsub+0x536>
    3f80:	e76b      	b.n	3e5a <__aeabi_dsub+0x40e>
    3f82:	4650      	mov	r0, sl
    3f84:	0767      	lsls	r7, r4, #29
    3f86:	08c0      	lsrs	r0, r0, #3
    3f88:	4307      	orrs	r7, r0
    3f8a:	2080      	movs	r0, #128	; 0x80
    3f8c:	08e4      	lsrs	r4, r4, #3
    3f8e:	0300      	lsls	r0, r0, #12
    3f90:	4204      	tst	r4, r0
    3f92:	d007      	beq.n	3fa4 <__aeabi_dsub+0x558>
    3f94:	08cd      	lsrs	r5, r1, #3
    3f96:	4205      	tst	r5, r0
    3f98:	d104      	bne.n	3fa4 <__aeabi_dsub+0x558>
    3f9a:	002c      	movs	r4, r5
    3f9c:	4698      	mov	r8, r3
    3f9e:	08d7      	lsrs	r7, r2, #3
    3fa0:	0749      	lsls	r1, r1, #29
    3fa2:	430f      	orrs	r7, r1
    3fa4:	0f7b      	lsrs	r3, r7, #29
    3fa6:	00e4      	lsls	r4, r4, #3
    3fa8:	431c      	orrs	r4, r3
    3faa:	00ff      	lsls	r7, r7, #3
    3fac:	4e30      	ldr	r6, [pc, #192]	; (4070 <__aeabi_dsub+0x624>)
    3fae:	e5d3      	b.n	3b58 <__aeabi_dsub+0x10c>
    3fb0:	4e2f      	ldr	r6, [pc, #188]	; (4070 <__aeabi_dsub+0x624>)
    3fb2:	45b4      	cmp	ip, r6
    3fb4:	d1b4      	bne.n	3f20 <__aeabi_dsub+0x4d4>
    3fb6:	000c      	movs	r4, r1
    3fb8:	0017      	movs	r7, r2
    3fba:	4666      	mov	r6, ip
    3fbc:	e5cc      	b.n	3b58 <__aeabi_dsub+0x10c>
    3fbe:	2700      	movs	r7, #0
    3fc0:	2400      	movs	r4, #0
    3fc2:	e5e8      	b.n	3b96 <__aeabi_dsub+0x14a>
    3fc4:	2b00      	cmp	r3, #0
    3fc6:	d039      	beq.n	403c <__aeabi_dsub+0x5f0>
    3fc8:	000b      	movs	r3, r1
    3fca:	4313      	orrs	r3, r2
    3fcc:	d100      	bne.n	3fd0 <__aeabi_dsub+0x584>
    3fce:	e744      	b.n	3e5a <__aeabi_dsub+0x40e>
    3fd0:	08c0      	lsrs	r0, r0, #3
    3fd2:	0767      	lsls	r7, r4, #29
    3fd4:	4307      	orrs	r7, r0
    3fd6:	2080      	movs	r0, #128	; 0x80
    3fd8:	08e4      	lsrs	r4, r4, #3
    3fda:	0300      	lsls	r0, r0, #12
    3fdc:	4204      	tst	r4, r0
    3fde:	d0e1      	beq.n	3fa4 <__aeabi_dsub+0x558>
    3fe0:	08cb      	lsrs	r3, r1, #3
    3fe2:	4203      	tst	r3, r0
    3fe4:	d1de      	bne.n	3fa4 <__aeabi_dsub+0x558>
    3fe6:	08d7      	lsrs	r7, r2, #3
    3fe8:	0749      	lsls	r1, r1, #29
    3fea:	430f      	orrs	r7, r1
    3fec:	001c      	movs	r4, r3
    3fee:	e7d9      	b.n	3fa4 <__aeabi_dsub+0x558>
    3ff0:	2100      	movs	r1, #0
    3ff2:	e771      	b.n	3ed8 <__aeabi_dsub+0x48c>
    3ff4:	2500      	movs	r5, #0
    3ff6:	2700      	movs	r7, #0
    3ff8:	e5e9      	b.n	3bce <__aeabi_dsub+0x182>
    3ffa:	002e      	movs	r6, r5
    3ffc:	0027      	movs	r7, r4
    3ffe:	3e20      	subs	r6, #32
    4000:	40f7      	lsrs	r7, r6
    4002:	2d20      	cmp	r5, #32
    4004:	d02f      	beq.n	4066 <__aeabi_dsub+0x61a>
    4006:	2640      	movs	r6, #64	; 0x40
    4008:	1b75      	subs	r5, r6, r5
    400a:	40ac      	lsls	r4, r5
    400c:	4650      	mov	r0, sl
    400e:	4320      	orrs	r0, r4
    4010:	1e44      	subs	r4, r0, #1
    4012:	41a0      	sbcs	r0, r4
    4014:	2400      	movs	r4, #0
    4016:	4338      	orrs	r0, r7
    4018:	e6dc      	b.n	3dd4 <__aeabi_dsub+0x388>
    401a:	2480      	movs	r4, #128	; 0x80
    401c:	2500      	movs	r5, #0
    401e:	0324      	lsls	r4, r4, #12
    4020:	4e13      	ldr	r6, [pc, #76]	; (4070 <__aeabi_dsub+0x624>)
    4022:	2700      	movs	r7, #0
    4024:	e5d3      	b.n	3bce <__aeabi_dsub+0x182>
    4026:	4650      	mov	r0, sl
    4028:	4320      	orrs	r0, r4
    402a:	0007      	movs	r7, r0
    402c:	1e78      	subs	r0, r7, #1
    402e:	4187      	sbcs	r7, r0
    4030:	2400      	movs	r4, #0
    4032:	18bf      	adds	r7, r7, r2
    4034:	e760      	b.n	3ef8 <__aeabi_dsub+0x4ac>
    4036:	000c      	movs	r4, r1
    4038:	0017      	movs	r7, r2
    403a:	e58d      	b.n	3b58 <__aeabi_dsub+0x10c>
    403c:	000c      	movs	r4, r1
    403e:	0017      	movs	r7, r2
    4040:	4e0b      	ldr	r6, [pc, #44]	; (4070 <__aeabi_dsub+0x624>)
    4042:	e589      	b.n	3b58 <__aeabi_dsub+0x10c>
    4044:	001e      	movs	r6, r3
    4046:	0027      	movs	r7, r4
    4048:	3e20      	subs	r6, #32
    404a:	40f7      	lsrs	r7, r6
    404c:	2b20      	cmp	r3, #32
    404e:	d00c      	beq.n	406a <__aeabi_dsub+0x61e>
    4050:	2640      	movs	r6, #64	; 0x40
    4052:	1af3      	subs	r3, r6, r3
    4054:	409c      	lsls	r4, r3
    4056:	4650      	mov	r0, sl
    4058:	4320      	orrs	r0, r4
    405a:	1e44      	subs	r4, r0, #1
    405c:	41a0      	sbcs	r0, r4
    405e:	4307      	orrs	r7, r0
    4060:	2400      	movs	r4, #0
    4062:	18bf      	adds	r7, r7, r2
    4064:	e748      	b.n	3ef8 <__aeabi_dsub+0x4ac>
    4066:	2400      	movs	r4, #0
    4068:	e7d0      	b.n	400c <__aeabi_dsub+0x5c0>
    406a:	2400      	movs	r4, #0
    406c:	e7f3      	b.n	4056 <__aeabi_dsub+0x60a>
    406e:	46c0      	nop			; (mov r8, r8)
    4070:	000007ff 	.word	0x000007ff
    4074:	ff7fffff 	.word	0xff7fffff

00004078 <__aeabi_d2iz>:
    4078:	b530      	push	{r4, r5, lr}
    407a:	4d13      	ldr	r5, [pc, #76]	; (40c8 <__aeabi_d2iz+0x50>)
    407c:	030a      	lsls	r2, r1, #12
    407e:	004b      	lsls	r3, r1, #1
    4080:	0b12      	lsrs	r2, r2, #12
    4082:	0d5b      	lsrs	r3, r3, #21
    4084:	0fc9      	lsrs	r1, r1, #31
    4086:	2400      	movs	r4, #0
    4088:	42ab      	cmp	r3, r5
    408a:	dd10      	ble.n	40ae <__aeabi_d2iz+0x36>
    408c:	4c0f      	ldr	r4, [pc, #60]	; (40cc <__aeabi_d2iz+0x54>)
    408e:	42a3      	cmp	r3, r4
    4090:	dc0f      	bgt.n	40b2 <__aeabi_d2iz+0x3a>
    4092:	2480      	movs	r4, #128	; 0x80
    4094:	4d0e      	ldr	r5, [pc, #56]	; (40d0 <__aeabi_d2iz+0x58>)
    4096:	0364      	lsls	r4, r4, #13
    4098:	4322      	orrs	r2, r4
    409a:	1aed      	subs	r5, r5, r3
    409c:	2d1f      	cmp	r5, #31
    409e:	dd0b      	ble.n	40b8 <__aeabi_d2iz+0x40>
    40a0:	480c      	ldr	r0, [pc, #48]	; (40d4 <__aeabi_d2iz+0x5c>)
    40a2:	1ac3      	subs	r3, r0, r3
    40a4:	40da      	lsrs	r2, r3
    40a6:	4254      	negs	r4, r2
    40a8:	2900      	cmp	r1, #0
    40aa:	d100      	bne.n	40ae <__aeabi_d2iz+0x36>
    40ac:	0014      	movs	r4, r2
    40ae:	0020      	movs	r0, r4
    40b0:	bd30      	pop	{r4, r5, pc}
    40b2:	4b09      	ldr	r3, [pc, #36]	; (40d8 <__aeabi_d2iz+0x60>)
    40b4:	18cc      	adds	r4, r1, r3
    40b6:	e7fa      	b.n	40ae <__aeabi_d2iz+0x36>
    40b8:	4c08      	ldr	r4, [pc, #32]	; (40dc <__aeabi_d2iz+0x64>)
    40ba:	40e8      	lsrs	r0, r5
    40bc:	46a4      	mov	ip, r4
    40be:	4463      	add	r3, ip
    40c0:	409a      	lsls	r2, r3
    40c2:	4302      	orrs	r2, r0
    40c4:	e7ef      	b.n	40a6 <__aeabi_d2iz+0x2e>
    40c6:	46c0      	nop			; (mov r8, r8)
    40c8:	000003fe 	.word	0x000003fe
    40cc:	0000041d 	.word	0x0000041d
    40d0:	00000433 	.word	0x00000433
    40d4:	00000413 	.word	0x00000413
    40d8:	7fffffff 	.word	0x7fffffff
    40dc:	fffffbed 	.word	0xfffffbed

000040e0 <__aeabi_i2d>:
    40e0:	b570      	push	{r4, r5, r6, lr}
    40e2:	2800      	cmp	r0, #0
    40e4:	d030      	beq.n	4148 <__aeabi_i2d+0x68>
    40e6:	17c3      	asrs	r3, r0, #31
    40e8:	18c4      	adds	r4, r0, r3
    40ea:	405c      	eors	r4, r3
    40ec:	0fc5      	lsrs	r5, r0, #31
    40ee:	0020      	movs	r0, r4
    40f0:	f000 f98a 	bl	4408 <__clzsi2>
    40f4:	4b17      	ldr	r3, [pc, #92]	; (4154 <__aeabi_i2d+0x74>)
    40f6:	4a18      	ldr	r2, [pc, #96]	; (4158 <__aeabi_i2d+0x78>)
    40f8:	1a1b      	subs	r3, r3, r0
    40fa:	1ad2      	subs	r2, r2, r3
    40fc:	2a1f      	cmp	r2, #31
    40fe:	dd18      	ble.n	4132 <__aeabi_i2d+0x52>
    4100:	4a16      	ldr	r2, [pc, #88]	; (415c <__aeabi_i2d+0x7c>)
    4102:	1ad2      	subs	r2, r2, r3
    4104:	4094      	lsls	r4, r2
    4106:	2200      	movs	r2, #0
    4108:	0324      	lsls	r4, r4, #12
    410a:	055b      	lsls	r3, r3, #21
    410c:	0b24      	lsrs	r4, r4, #12
    410e:	0d5b      	lsrs	r3, r3, #21
    4110:	2100      	movs	r1, #0
    4112:	0010      	movs	r0, r2
    4114:	0324      	lsls	r4, r4, #12
    4116:	0d0a      	lsrs	r2, r1, #20
    4118:	0b24      	lsrs	r4, r4, #12
    411a:	0512      	lsls	r2, r2, #20
    411c:	4322      	orrs	r2, r4
    411e:	4c10      	ldr	r4, [pc, #64]	; (4160 <__aeabi_i2d+0x80>)
    4120:	051b      	lsls	r3, r3, #20
    4122:	4022      	ands	r2, r4
    4124:	4313      	orrs	r3, r2
    4126:	005b      	lsls	r3, r3, #1
    4128:	07ed      	lsls	r5, r5, #31
    412a:	085b      	lsrs	r3, r3, #1
    412c:	432b      	orrs	r3, r5
    412e:	0019      	movs	r1, r3
    4130:	bd70      	pop	{r4, r5, r6, pc}
    4132:	0021      	movs	r1, r4
    4134:	4091      	lsls	r1, r2
    4136:	000a      	movs	r2, r1
    4138:	210b      	movs	r1, #11
    413a:	1a08      	subs	r0, r1, r0
    413c:	40c4      	lsrs	r4, r0
    413e:	055b      	lsls	r3, r3, #21
    4140:	0324      	lsls	r4, r4, #12
    4142:	0b24      	lsrs	r4, r4, #12
    4144:	0d5b      	lsrs	r3, r3, #21
    4146:	e7e3      	b.n	4110 <__aeabi_i2d+0x30>
    4148:	2500      	movs	r5, #0
    414a:	2300      	movs	r3, #0
    414c:	2400      	movs	r4, #0
    414e:	2200      	movs	r2, #0
    4150:	e7de      	b.n	4110 <__aeabi_i2d+0x30>
    4152:	46c0      	nop			; (mov r8, r8)
    4154:	0000041e 	.word	0x0000041e
    4158:	00000433 	.word	0x00000433
    415c:	00000413 	.word	0x00000413
    4160:	800fffff 	.word	0x800fffff

00004164 <__aeabi_ui2d>:
    4164:	b510      	push	{r4, lr}
    4166:	1e04      	subs	r4, r0, #0
    4168:	d028      	beq.n	41bc <__aeabi_ui2d+0x58>
    416a:	f000 f94d 	bl	4408 <__clzsi2>
    416e:	4b15      	ldr	r3, [pc, #84]	; (41c4 <__aeabi_ui2d+0x60>)
    4170:	4a15      	ldr	r2, [pc, #84]	; (41c8 <__aeabi_ui2d+0x64>)
    4172:	1a1b      	subs	r3, r3, r0
    4174:	1ad2      	subs	r2, r2, r3
    4176:	2a1f      	cmp	r2, #31
    4178:	dd15      	ble.n	41a6 <__aeabi_ui2d+0x42>
    417a:	4a14      	ldr	r2, [pc, #80]	; (41cc <__aeabi_ui2d+0x68>)
    417c:	1ad2      	subs	r2, r2, r3
    417e:	4094      	lsls	r4, r2
    4180:	2200      	movs	r2, #0
    4182:	0324      	lsls	r4, r4, #12
    4184:	055b      	lsls	r3, r3, #21
    4186:	0b24      	lsrs	r4, r4, #12
    4188:	0d5b      	lsrs	r3, r3, #21
    418a:	2100      	movs	r1, #0
    418c:	0010      	movs	r0, r2
    418e:	0324      	lsls	r4, r4, #12
    4190:	0d0a      	lsrs	r2, r1, #20
    4192:	0b24      	lsrs	r4, r4, #12
    4194:	0512      	lsls	r2, r2, #20
    4196:	4322      	orrs	r2, r4
    4198:	4c0d      	ldr	r4, [pc, #52]	; (41d0 <__aeabi_ui2d+0x6c>)
    419a:	051b      	lsls	r3, r3, #20
    419c:	4022      	ands	r2, r4
    419e:	4313      	orrs	r3, r2
    41a0:	005b      	lsls	r3, r3, #1
    41a2:	0859      	lsrs	r1, r3, #1
    41a4:	bd10      	pop	{r4, pc}
    41a6:	0021      	movs	r1, r4
    41a8:	4091      	lsls	r1, r2
    41aa:	000a      	movs	r2, r1
    41ac:	210b      	movs	r1, #11
    41ae:	1a08      	subs	r0, r1, r0
    41b0:	40c4      	lsrs	r4, r0
    41b2:	055b      	lsls	r3, r3, #21
    41b4:	0324      	lsls	r4, r4, #12
    41b6:	0b24      	lsrs	r4, r4, #12
    41b8:	0d5b      	lsrs	r3, r3, #21
    41ba:	e7e6      	b.n	418a <__aeabi_ui2d+0x26>
    41bc:	2300      	movs	r3, #0
    41be:	2400      	movs	r4, #0
    41c0:	2200      	movs	r2, #0
    41c2:	e7e2      	b.n	418a <__aeabi_ui2d+0x26>
    41c4:	0000041e 	.word	0x0000041e
    41c8:	00000433 	.word	0x00000433
    41cc:	00000413 	.word	0x00000413
    41d0:	800fffff 	.word	0x800fffff

000041d4 <__aeabi_f2d>:
    41d4:	0041      	lsls	r1, r0, #1
    41d6:	0e09      	lsrs	r1, r1, #24
    41d8:	1c4b      	adds	r3, r1, #1
    41da:	b570      	push	{r4, r5, r6, lr}
    41dc:	b2db      	uxtb	r3, r3
    41de:	0246      	lsls	r6, r0, #9
    41e0:	0a75      	lsrs	r5, r6, #9
    41e2:	0fc4      	lsrs	r4, r0, #31
    41e4:	2b01      	cmp	r3, #1
    41e6:	dd14      	ble.n	4212 <__aeabi_f2d+0x3e>
    41e8:	23e0      	movs	r3, #224	; 0xe0
    41ea:	009b      	lsls	r3, r3, #2
    41ec:	076d      	lsls	r5, r5, #29
    41ee:	0b36      	lsrs	r6, r6, #12
    41f0:	18cb      	adds	r3, r1, r3
    41f2:	2100      	movs	r1, #0
    41f4:	0d0a      	lsrs	r2, r1, #20
    41f6:	0028      	movs	r0, r5
    41f8:	0512      	lsls	r2, r2, #20
    41fa:	4d1c      	ldr	r5, [pc, #112]	; (426c <__aeabi_f2d+0x98>)
    41fc:	4332      	orrs	r2, r6
    41fe:	055b      	lsls	r3, r3, #21
    4200:	402a      	ands	r2, r5
    4202:	085b      	lsrs	r3, r3, #1
    4204:	4313      	orrs	r3, r2
    4206:	005b      	lsls	r3, r3, #1
    4208:	07e4      	lsls	r4, r4, #31
    420a:	085b      	lsrs	r3, r3, #1
    420c:	4323      	orrs	r3, r4
    420e:	0019      	movs	r1, r3
    4210:	bd70      	pop	{r4, r5, r6, pc}
    4212:	2900      	cmp	r1, #0
    4214:	d114      	bne.n	4240 <__aeabi_f2d+0x6c>
    4216:	2d00      	cmp	r5, #0
    4218:	d01e      	beq.n	4258 <__aeabi_f2d+0x84>
    421a:	0028      	movs	r0, r5
    421c:	f000 f8f4 	bl	4408 <__clzsi2>
    4220:	280a      	cmp	r0, #10
    4222:	dc1c      	bgt.n	425e <__aeabi_f2d+0x8a>
    4224:	230b      	movs	r3, #11
    4226:	002a      	movs	r2, r5
    4228:	1a1b      	subs	r3, r3, r0
    422a:	40da      	lsrs	r2, r3
    422c:	0003      	movs	r3, r0
    422e:	3315      	adds	r3, #21
    4230:	409d      	lsls	r5, r3
    4232:	4b0f      	ldr	r3, [pc, #60]	; (4270 <__aeabi_f2d+0x9c>)
    4234:	0312      	lsls	r2, r2, #12
    4236:	1a1b      	subs	r3, r3, r0
    4238:	055b      	lsls	r3, r3, #21
    423a:	0b16      	lsrs	r6, r2, #12
    423c:	0d5b      	lsrs	r3, r3, #21
    423e:	e7d8      	b.n	41f2 <__aeabi_f2d+0x1e>
    4240:	2d00      	cmp	r5, #0
    4242:	d006      	beq.n	4252 <__aeabi_f2d+0x7e>
    4244:	0b32      	lsrs	r2, r6, #12
    4246:	2680      	movs	r6, #128	; 0x80
    4248:	0336      	lsls	r6, r6, #12
    424a:	076d      	lsls	r5, r5, #29
    424c:	4316      	orrs	r6, r2
    424e:	4b09      	ldr	r3, [pc, #36]	; (4274 <__aeabi_f2d+0xa0>)
    4250:	e7cf      	b.n	41f2 <__aeabi_f2d+0x1e>
    4252:	4b08      	ldr	r3, [pc, #32]	; (4274 <__aeabi_f2d+0xa0>)
    4254:	2600      	movs	r6, #0
    4256:	e7cc      	b.n	41f2 <__aeabi_f2d+0x1e>
    4258:	2300      	movs	r3, #0
    425a:	2600      	movs	r6, #0
    425c:	e7c9      	b.n	41f2 <__aeabi_f2d+0x1e>
    425e:	0003      	movs	r3, r0
    4260:	002a      	movs	r2, r5
    4262:	3b0b      	subs	r3, #11
    4264:	409a      	lsls	r2, r3
    4266:	2500      	movs	r5, #0
    4268:	e7e3      	b.n	4232 <__aeabi_f2d+0x5e>
    426a:	46c0      	nop			; (mov r8, r8)
    426c:	800fffff 	.word	0x800fffff
    4270:	00000389 	.word	0x00000389
    4274:	000007ff 	.word	0x000007ff

00004278 <__aeabi_d2f>:
    4278:	b5f0      	push	{r4, r5, r6, r7, lr}
    427a:	004c      	lsls	r4, r1, #1
    427c:	0d64      	lsrs	r4, r4, #21
    427e:	030b      	lsls	r3, r1, #12
    4280:	1c62      	adds	r2, r4, #1
    4282:	0f45      	lsrs	r5, r0, #29
    4284:	0a5b      	lsrs	r3, r3, #9
    4286:	0552      	lsls	r2, r2, #21
    4288:	432b      	orrs	r3, r5
    428a:	0fc9      	lsrs	r1, r1, #31
    428c:	00c5      	lsls	r5, r0, #3
    428e:	0d52      	lsrs	r2, r2, #21
    4290:	2a01      	cmp	r2, #1
    4292:	dd28      	ble.n	42e6 <__aeabi_d2f+0x6e>
    4294:	4a3a      	ldr	r2, [pc, #232]	; (4380 <__aeabi_d2f+0x108>)
    4296:	18a6      	adds	r6, r4, r2
    4298:	2efe      	cmp	r6, #254	; 0xfe
    429a:	dc1b      	bgt.n	42d4 <__aeabi_d2f+0x5c>
    429c:	2e00      	cmp	r6, #0
    429e:	dd3e      	ble.n	431e <__aeabi_d2f+0xa6>
    42a0:	0180      	lsls	r0, r0, #6
    42a2:	0002      	movs	r2, r0
    42a4:	1e50      	subs	r0, r2, #1
    42a6:	4182      	sbcs	r2, r0
    42a8:	0f6d      	lsrs	r5, r5, #29
    42aa:	432a      	orrs	r2, r5
    42ac:	00db      	lsls	r3, r3, #3
    42ae:	4313      	orrs	r3, r2
    42b0:	075a      	lsls	r2, r3, #29
    42b2:	d004      	beq.n	42be <__aeabi_d2f+0x46>
    42b4:	220f      	movs	r2, #15
    42b6:	401a      	ands	r2, r3
    42b8:	2a04      	cmp	r2, #4
    42ba:	d000      	beq.n	42be <__aeabi_d2f+0x46>
    42bc:	3304      	adds	r3, #4
    42be:	2280      	movs	r2, #128	; 0x80
    42c0:	04d2      	lsls	r2, r2, #19
    42c2:	401a      	ands	r2, r3
    42c4:	d05a      	beq.n	437c <__aeabi_d2f+0x104>
    42c6:	3601      	adds	r6, #1
    42c8:	2eff      	cmp	r6, #255	; 0xff
    42ca:	d003      	beq.n	42d4 <__aeabi_d2f+0x5c>
    42cc:	019b      	lsls	r3, r3, #6
    42ce:	0a5b      	lsrs	r3, r3, #9
    42d0:	b2f4      	uxtb	r4, r6
    42d2:	e001      	b.n	42d8 <__aeabi_d2f+0x60>
    42d4:	24ff      	movs	r4, #255	; 0xff
    42d6:	2300      	movs	r3, #0
    42d8:	0258      	lsls	r0, r3, #9
    42da:	05e4      	lsls	r4, r4, #23
    42dc:	0a40      	lsrs	r0, r0, #9
    42de:	07c9      	lsls	r1, r1, #31
    42e0:	4320      	orrs	r0, r4
    42e2:	4308      	orrs	r0, r1
    42e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    42e6:	2c00      	cmp	r4, #0
    42e8:	d007      	beq.n	42fa <__aeabi_d2f+0x82>
    42ea:	431d      	orrs	r5, r3
    42ec:	d0f2      	beq.n	42d4 <__aeabi_d2f+0x5c>
    42ee:	2080      	movs	r0, #128	; 0x80
    42f0:	00db      	lsls	r3, r3, #3
    42f2:	0480      	lsls	r0, r0, #18
    42f4:	4303      	orrs	r3, r0
    42f6:	26ff      	movs	r6, #255	; 0xff
    42f8:	e7da      	b.n	42b0 <__aeabi_d2f+0x38>
    42fa:	432b      	orrs	r3, r5
    42fc:	d003      	beq.n	4306 <__aeabi_d2f+0x8e>
    42fe:	2305      	movs	r3, #5
    4300:	08db      	lsrs	r3, r3, #3
    4302:	2cff      	cmp	r4, #255	; 0xff
    4304:	d003      	beq.n	430e <__aeabi_d2f+0x96>
    4306:	025b      	lsls	r3, r3, #9
    4308:	0a5b      	lsrs	r3, r3, #9
    430a:	b2e4      	uxtb	r4, r4
    430c:	e7e4      	b.n	42d8 <__aeabi_d2f+0x60>
    430e:	2b00      	cmp	r3, #0
    4310:	d032      	beq.n	4378 <__aeabi_d2f+0x100>
    4312:	2080      	movs	r0, #128	; 0x80
    4314:	03c0      	lsls	r0, r0, #15
    4316:	4303      	orrs	r3, r0
    4318:	025b      	lsls	r3, r3, #9
    431a:	0a5b      	lsrs	r3, r3, #9
    431c:	e7dc      	b.n	42d8 <__aeabi_d2f+0x60>
    431e:	0032      	movs	r2, r6
    4320:	3217      	adds	r2, #23
    4322:	db14      	blt.n	434e <__aeabi_d2f+0xd6>
    4324:	2280      	movs	r2, #128	; 0x80
    4326:	271e      	movs	r7, #30
    4328:	0412      	lsls	r2, r2, #16
    432a:	4313      	orrs	r3, r2
    432c:	1bbf      	subs	r7, r7, r6
    432e:	2f1f      	cmp	r7, #31
    4330:	dc0f      	bgt.n	4352 <__aeabi_d2f+0xda>
    4332:	4a14      	ldr	r2, [pc, #80]	; (4384 <__aeabi_d2f+0x10c>)
    4334:	4694      	mov	ip, r2
    4336:	4464      	add	r4, ip
    4338:	002a      	movs	r2, r5
    433a:	40a5      	lsls	r5, r4
    433c:	002e      	movs	r6, r5
    433e:	40a3      	lsls	r3, r4
    4340:	1e75      	subs	r5, r6, #1
    4342:	41ae      	sbcs	r6, r5
    4344:	40fa      	lsrs	r2, r7
    4346:	4333      	orrs	r3, r6
    4348:	4313      	orrs	r3, r2
    434a:	2600      	movs	r6, #0
    434c:	e7b0      	b.n	42b0 <__aeabi_d2f+0x38>
    434e:	2400      	movs	r4, #0
    4350:	e7d5      	b.n	42fe <__aeabi_d2f+0x86>
    4352:	2202      	movs	r2, #2
    4354:	4252      	negs	r2, r2
    4356:	1b96      	subs	r6, r2, r6
    4358:	001a      	movs	r2, r3
    435a:	40f2      	lsrs	r2, r6
    435c:	2f20      	cmp	r7, #32
    435e:	d009      	beq.n	4374 <__aeabi_d2f+0xfc>
    4360:	4809      	ldr	r0, [pc, #36]	; (4388 <__aeabi_d2f+0x110>)
    4362:	4684      	mov	ip, r0
    4364:	4464      	add	r4, ip
    4366:	40a3      	lsls	r3, r4
    4368:	432b      	orrs	r3, r5
    436a:	1e5d      	subs	r5, r3, #1
    436c:	41ab      	sbcs	r3, r5
    436e:	2600      	movs	r6, #0
    4370:	4313      	orrs	r3, r2
    4372:	e79d      	b.n	42b0 <__aeabi_d2f+0x38>
    4374:	2300      	movs	r3, #0
    4376:	e7f7      	b.n	4368 <__aeabi_d2f+0xf0>
    4378:	2300      	movs	r3, #0
    437a:	e7ad      	b.n	42d8 <__aeabi_d2f+0x60>
    437c:	0034      	movs	r4, r6
    437e:	e7bf      	b.n	4300 <__aeabi_d2f+0x88>
    4380:	fffffc80 	.word	0xfffffc80
    4384:	fffffc82 	.word	0xfffffc82
    4388:	fffffca2 	.word	0xfffffca2

0000438c <__aeabi_cdrcmple>:
    438c:	4684      	mov	ip, r0
    438e:	1c10      	adds	r0, r2, #0
    4390:	4662      	mov	r2, ip
    4392:	468c      	mov	ip, r1
    4394:	1c19      	adds	r1, r3, #0
    4396:	4663      	mov	r3, ip
    4398:	e000      	b.n	439c <__aeabi_cdcmpeq>
    439a:	46c0      	nop			; (mov r8, r8)

0000439c <__aeabi_cdcmpeq>:
    439c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    439e:	f000 f8fb 	bl	4598 <__ledf2>
    43a2:	2800      	cmp	r0, #0
    43a4:	d401      	bmi.n	43aa <__aeabi_cdcmpeq+0xe>
    43a6:	2100      	movs	r1, #0
    43a8:	42c8      	cmn	r0, r1
    43aa:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000043ac <__aeabi_dcmpeq>:
    43ac:	b510      	push	{r4, lr}
    43ae:	f000 f855 	bl	445c <__eqdf2>
    43b2:	4240      	negs	r0, r0
    43b4:	3001      	adds	r0, #1
    43b6:	bd10      	pop	{r4, pc}

000043b8 <__aeabi_dcmplt>:
    43b8:	b510      	push	{r4, lr}
    43ba:	f000 f8ed 	bl	4598 <__ledf2>
    43be:	2800      	cmp	r0, #0
    43c0:	db01      	blt.n	43c6 <__aeabi_dcmplt+0xe>
    43c2:	2000      	movs	r0, #0
    43c4:	bd10      	pop	{r4, pc}
    43c6:	2001      	movs	r0, #1
    43c8:	bd10      	pop	{r4, pc}
    43ca:	46c0      	nop			; (mov r8, r8)

000043cc <__aeabi_dcmple>:
    43cc:	b510      	push	{r4, lr}
    43ce:	f000 f8e3 	bl	4598 <__ledf2>
    43d2:	2800      	cmp	r0, #0
    43d4:	dd01      	ble.n	43da <__aeabi_dcmple+0xe>
    43d6:	2000      	movs	r0, #0
    43d8:	bd10      	pop	{r4, pc}
    43da:	2001      	movs	r0, #1
    43dc:	bd10      	pop	{r4, pc}
    43de:	46c0      	nop			; (mov r8, r8)

000043e0 <__aeabi_dcmpgt>:
    43e0:	b510      	push	{r4, lr}
    43e2:	f000 f875 	bl	44d0 <__gedf2>
    43e6:	2800      	cmp	r0, #0
    43e8:	dc01      	bgt.n	43ee <__aeabi_dcmpgt+0xe>
    43ea:	2000      	movs	r0, #0
    43ec:	bd10      	pop	{r4, pc}
    43ee:	2001      	movs	r0, #1
    43f0:	bd10      	pop	{r4, pc}
    43f2:	46c0      	nop			; (mov r8, r8)

000043f4 <__aeabi_dcmpge>:
    43f4:	b510      	push	{r4, lr}
    43f6:	f000 f86b 	bl	44d0 <__gedf2>
    43fa:	2800      	cmp	r0, #0
    43fc:	da01      	bge.n	4402 <__aeabi_dcmpge+0xe>
    43fe:	2000      	movs	r0, #0
    4400:	bd10      	pop	{r4, pc}
    4402:	2001      	movs	r0, #1
    4404:	bd10      	pop	{r4, pc}
    4406:	46c0      	nop			; (mov r8, r8)

00004408 <__clzsi2>:
    4408:	211c      	movs	r1, #28
    440a:	2301      	movs	r3, #1
    440c:	041b      	lsls	r3, r3, #16
    440e:	4298      	cmp	r0, r3
    4410:	d301      	bcc.n	4416 <__clzsi2+0xe>
    4412:	0c00      	lsrs	r0, r0, #16
    4414:	3910      	subs	r1, #16
    4416:	0a1b      	lsrs	r3, r3, #8
    4418:	4298      	cmp	r0, r3
    441a:	d301      	bcc.n	4420 <__clzsi2+0x18>
    441c:	0a00      	lsrs	r0, r0, #8
    441e:	3908      	subs	r1, #8
    4420:	091b      	lsrs	r3, r3, #4
    4422:	4298      	cmp	r0, r3
    4424:	d301      	bcc.n	442a <__clzsi2+0x22>
    4426:	0900      	lsrs	r0, r0, #4
    4428:	3904      	subs	r1, #4
    442a:	a202      	add	r2, pc, #8	; (adr r2, 4434 <__clzsi2+0x2c>)
    442c:	5c10      	ldrb	r0, [r2, r0]
    442e:	1840      	adds	r0, r0, r1
    4430:	4770      	bx	lr
    4432:	46c0      	nop			; (mov r8, r8)
    4434:	02020304 	.word	0x02020304
    4438:	01010101 	.word	0x01010101
	...

00004444 <__clzdi2>:
    4444:	b510      	push	{r4, lr}
    4446:	2900      	cmp	r1, #0
    4448:	d103      	bne.n	4452 <__clzdi2+0xe>
    444a:	f7ff ffdd 	bl	4408 <__clzsi2>
    444e:	3020      	adds	r0, #32
    4450:	e002      	b.n	4458 <__clzdi2+0x14>
    4452:	1c08      	adds	r0, r1, #0
    4454:	f7ff ffd8 	bl	4408 <__clzsi2>
    4458:	bd10      	pop	{r4, pc}
    445a:	46c0      	nop			; (mov r8, r8)

0000445c <__eqdf2>:
    445c:	b5f0      	push	{r4, r5, r6, r7, lr}
    445e:	464f      	mov	r7, r9
    4460:	4646      	mov	r6, r8
    4462:	46d6      	mov	lr, sl
    4464:	005c      	lsls	r4, r3, #1
    4466:	b5c0      	push	{r6, r7, lr}
    4468:	031f      	lsls	r7, r3, #12
    446a:	0fdb      	lsrs	r3, r3, #31
    446c:	469a      	mov	sl, r3
    446e:	4b17      	ldr	r3, [pc, #92]	; (44cc <__eqdf2+0x70>)
    4470:	030e      	lsls	r6, r1, #12
    4472:	004d      	lsls	r5, r1, #1
    4474:	4684      	mov	ip, r0
    4476:	4680      	mov	r8, r0
    4478:	0b36      	lsrs	r6, r6, #12
    447a:	0d6d      	lsrs	r5, r5, #21
    447c:	0fc9      	lsrs	r1, r1, #31
    447e:	4691      	mov	r9, r2
    4480:	0b3f      	lsrs	r7, r7, #12
    4482:	0d64      	lsrs	r4, r4, #21
    4484:	2001      	movs	r0, #1
    4486:	429d      	cmp	r5, r3
    4488:	d008      	beq.n	449c <__eqdf2+0x40>
    448a:	429c      	cmp	r4, r3
    448c:	d001      	beq.n	4492 <__eqdf2+0x36>
    448e:	42a5      	cmp	r5, r4
    4490:	d00b      	beq.n	44aa <__eqdf2+0x4e>
    4492:	bc1c      	pop	{r2, r3, r4}
    4494:	4690      	mov	r8, r2
    4496:	4699      	mov	r9, r3
    4498:	46a2      	mov	sl, r4
    449a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    449c:	4663      	mov	r3, ip
    449e:	4333      	orrs	r3, r6
    44a0:	d1f7      	bne.n	4492 <__eqdf2+0x36>
    44a2:	42ac      	cmp	r4, r5
    44a4:	d1f5      	bne.n	4492 <__eqdf2+0x36>
    44a6:	433a      	orrs	r2, r7
    44a8:	d1f3      	bne.n	4492 <__eqdf2+0x36>
    44aa:	2001      	movs	r0, #1
    44ac:	42be      	cmp	r6, r7
    44ae:	d1f0      	bne.n	4492 <__eqdf2+0x36>
    44b0:	45c8      	cmp	r8, r9
    44b2:	d1ee      	bne.n	4492 <__eqdf2+0x36>
    44b4:	4551      	cmp	r1, sl
    44b6:	d007      	beq.n	44c8 <__eqdf2+0x6c>
    44b8:	2d00      	cmp	r5, #0
    44ba:	d1ea      	bne.n	4492 <__eqdf2+0x36>
    44bc:	4663      	mov	r3, ip
    44be:	431e      	orrs	r6, r3
    44c0:	0030      	movs	r0, r6
    44c2:	1e46      	subs	r6, r0, #1
    44c4:	41b0      	sbcs	r0, r6
    44c6:	e7e4      	b.n	4492 <__eqdf2+0x36>
    44c8:	2000      	movs	r0, #0
    44ca:	e7e2      	b.n	4492 <__eqdf2+0x36>
    44cc:	000007ff 	.word	0x000007ff

000044d0 <__gedf2>:
    44d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    44d2:	4645      	mov	r5, r8
    44d4:	46de      	mov	lr, fp
    44d6:	4657      	mov	r7, sl
    44d8:	464e      	mov	r6, r9
    44da:	b5e0      	push	{r5, r6, r7, lr}
    44dc:	031f      	lsls	r7, r3, #12
    44de:	0b3d      	lsrs	r5, r7, #12
    44e0:	4f2c      	ldr	r7, [pc, #176]	; (4594 <__gedf2+0xc4>)
    44e2:	030e      	lsls	r6, r1, #12
    44e4:	004c      	lsls	r4, r1, #1
    44e6:	46ab      	mov	fp, r5
    44e8:	005d      	lsls	r5, r3, #1
    44ea:	4684      	mov	ip, r0
    44ec:	0b36      	lsrs	r6, r6, #12
    44ee:	0d64      	lsrs	r4, r4, #21
    44f0:	0fc9      	lsrs	r1, r1, #31
    44f2:	4690      	mov	r8, r2
    44f4:	0d6d      	lsrs	r5, r5, #21
    44f6:	0fdb      	lsrs	r3, r3, #31
    44f8:	42bc      	cmp	r4, r7
    44fa:	d02a      	beq.n	4552 <__gedf2+0x82>
    44fc:	4f25      	ldr	r7, [pc, #148]	; (4594 <__gedf2+0xc4>)
    44fe:	42bd      	cmp	r5, r7
    4500:	d02d      	beq.n	455e <__gedf2+0x8e>
    4502:	2c00      	cmp	r4, #0
    4504:	d10f      	bne.n	4526 <__gedf2+0x56>
    4506:	4330      	orrs	r0, r6
    4508:	0007      	movs	r7, r0
    450a:	4681      	mov	r9, r0
    450c:	4278      	negs	r0, r7
    450e:	4178      	adcs	r0, r7
    4510:	b2c0      	uxtb	r0, r0
    4512:	2d00      	cmp	r5, #0
    4514:	d117      	bne.n	4546 <__gedf2+0x76>
    4516:	465f      	mov	r7, fp
    4518:	433a      	orrs	r2, r7
    451a:	d114      	bne.n	4546 <__gedf2+0x76>
    451c:	464b      	mov	r3, r9
    451e:	2000      	movs	r0, #0
    4520:	2b00      	cmp	r3, #0
    4522:	d00a      	beq.n	453a <__gedf2+0x6a>
    4524:	e006      	b.n	4534 <__gedf2+0x64>
    4526:	2d00      	cmp	r5, #0
    4528:	d102      	bne.n	4530 <__gedf2+0x60>
    452a:	4658      	mov	r0, fp
    452c:	4302      	orrs	r2, r0
    452e:	d001      	beq.n	4534 <__gedf2+0x64>
    4530:	4299      	cmp	r1, r3
    4532:	d018      	beq.n	4566 <__gedf2+0x96>
    4534:	4248      	negs	r0, r1
    4536:	2101      	movs	r1, #1
    4538:	4308      	orrs	r0, r1
    453a:	bc3c      	pop	{r2, r3, r4, r5}
    453c:	4690      	mov	r8, r2
    453e:	4699      	mov	r9, r3
    4540:	46a2      	mov	sl, r4
    4542:	46ab      	mov	fp, r5
    4544:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4546:	2800      	cmp	r0, #0
    4548:	d0f2      	beq.n	4530 <__gedf2+0x60>
    454a:	2001      	movs	r0, #1
    454c:	3b01      	subs	r3, #1
    454e:	4318      	orrs	r0, r3
    4550:	e7f3      	b.n	453a <__gedf2+0x6a>
    4552:	0037      	movs	r7, r6
    4554:	4307      	orrs	r7, r0
    4556:	d0d1      	beq.n	44fc <__gedf2+0x2c>
    4558:	2002      	movs	r0, #2
    455a:	4240      	negs	r0, r0
    455c:	e7ed      	b.n	453a <__gedf2+0x6a>
    455e:	465f      	mov	r7, fp
    4560:	4317      	orrs	r7, r2
    4562:	d0ce      	beq.n	4502 <__gedf2+0x32>
    4564:	e7f8      	b.n	4558 <__gedf2+0x88>
    4566:	42ac      	cmp	r4, r5
    4568:	dce4      	bgt.n	4534 <__gedf2+0x64>
    456a:	da03      	bge.n	4574 <__gedf2+0xa4>
    456c:	1e48      	subs	r0, r1, #1
    456e:	2101      	movs	r1, #1
    4570:	4308      	orrs	r0, r1
    4572:	e7e2      	b.n	453a <__gedf2+0x6a>
    4574:	455e      	cmp	r6, fp
    4576:	d8dd      	bhi.n	4534 <__gedf2+0x64>
    4578:	d006      	beq.n	4588 <__gedf2+0xb8>
    457a:	2000      	movs	r0, #0
    457c:	455e      	cmp	r6, fp
    457e:	d2dc      	bcs.n	453a <__gedf2+0x6a>
    4580:	2301      	movs	r3, #1
    4582:	1e48      	subs	r0, r1, #1
    4584:	4318      	orrs	r0, r3
    4586:	e7d8      	b.n	453a <__gedf2+0x6a>
    4588:	45c4      	cmp	ip, r8
    458a:	d8d3      	bhi.n	4534 <__gedf2+0x64>
    458c:	2000      	movs	r0, #0
    458e:	45c4      	cmp	ip, r8
    4590:	d3f6      	bcc.n	4580 <__gedf2+0xb0>
    4592:	e7d2      	b.n	453a <__gedf2+0x6a>
    4594:	000007ff 	.word	0x000007ff

00004598 <__ledf2>:
    4598:	b5f0      	push	{r4, r5, r6, r7, lr}
    459a:	464e      	mov	r6, r9
    459c:	4645      	mov	r5, r8
    459e:	46de      	mov	lr, fp
    45a0:	4657      	mov	r7, sl
    45a2:	005c      	lsls	r4, r3, #1
    45a4:	b5e0      	push	{r5, r6, r7, lr}
    45a6:	031f      	lsls	r7, r3, #12
    45a8:	0fdb      	lsrs	r3, r3, #31
    45aa:	4699      	mov	r9, r3
    45ac:	4b2a      	ldr	r3, [pc, #168]	; (4658 <__ledf2+0xc0>)
    45ae:	030e      	lsls	r6, r1, #12
    45b0:	004d      	lsls	r5, r1, #1
    45b2:	0fc9      	lsrs	r1, r1, #31
    45b4:	4684      	mov	ip, r0
    45b6:	0b36      	lsrs	r6, r6, #12
    45b8:	0d6d      	lsrs	r5, r5, #21
    45ba:	468b      	mov	fp, r1
    45bc:	4690      	mov	r8, r2
    45be:	0b3f      	lsrs	r7, r7, #12
    45c0:	0d64      	lsrs	r4, r4, #21
    45c2:	429d      	cmp	r5, r3
    45c4:	d020      	beq.n	4608 <__ledf2+0x70>
    45c6:	4b24      	ldr	r3, [pc, #144]	; (4658 <__ledf2+0xc0>)
    45c8:	429c      	cmp	r4, r3
    45ca:	d022      	beq.n	4612 <__ledf2+0x7a>
    45cc:	2d00      	cmp	r5, #0
    45ce:	d112      	bne.n	45f6 <__ledf2+0x5e>
    45d0:	4330      	orrs	r0, r6
    45d2:	4243      	negs	r3, r0
    45d4:	4143      	adcs	r3, r0
    45d6:	b2db      	uxtb	r3, r3
    45d8:	2c00      	cmp	r4, #0
    45da:	d01f      	beq.n	461c <__ledf2+0x84>
    45dc:	2b00      	cmp	r3, #0
    45de:	d00c      	beq.n	45fa <__ledf2+0x62>
    45e0:	464b      	mov	r3, r9
    45e2:	2001      	movs	r0, #1
    45e4:	3b01      	subs	r3, #1
    45e6:	4303      	orrs	r3, r0
    45e8:	0018      	movs	r0, r3
    45ea:	bc3c      	pop	{r2, r3, r4, r5}
    45ec:	4690      	mov	r8, r2
    45ee:	4699      	mov	r9, r3
    45f0:	46a2      	mov	sl, r4
    45f2:	46ab      	mov	fp, r5
    45f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    45f6:	2c00      	cmp	r4, #0
    45f8:	d016      	beq.n	4628 <__ledf2+0x90>
    45fa:	45cb      	cmp	fp, r9
    45fc:	d017      	beq.n	462e <__ledf2+0x96>
    45fe:	465b      	mov	r3, fp
    4600:	4259      	negs	r1, r3
    4602:	2301      	movs	r3, #1
    4604:	430b      	orrs	r3, r1
    4606:	e7ef      	b.n	45e8 <__ledf2+0x50>
    4608:	0031      	movs	r1, r6
    460a:	2302      	movs	r3, #2
    460c:	4301      	orrs	r1, r0
    460e:	d1eb      	bne.n	45e8 <__ledf2+0x50>
    4610:	e7d9      	b.n	45c6 <__ledf2+0x2e>
    4612:	0039      	movs	r1, r7
    4614:	2302      	movs	r3, #2
    4616:	4311      	orrs	r1, r2
    4618:	d1e6      	bne.n	45e8 <__ledf2+0x50>
    461a:	e7d7      	b.n	45cc <__ledf2+0x34>
    461c:	433a      	orrs	r2, r7
    461e:	d1dd      	bne.n	45dc <__ledf2+0x44>
    4620:	2300      	movs	r3, #0
    4622:	2800      	cmp	r0, #0
    4624:	d0e0      	beq.n	45e8 <__ledf2+0x50>
    4626:	e7ea      	b.n	45fe <__ledf2+0x66>
    4628:	433a      	orrs	r2, r7
    462a:	d1e6      	bne.n	45fa <__ledf2+0x62>
    462c:	e7e7      	b.n	45fe <__ledf2+0x66>
    462e:	42a5      	cmp	r5, r4
    4630:	dce5      	bgt.n	45fe <__ledf2+0x66>
    4632:	db05      	blt.n	4640 <__ledf2+0xa8>
    4634:	42be      	cmp	r6, r7
    4636:	d8e2      	bhi.n	45fe <__ledf2+0x66>
    4638:	d007      	beq.n	464a <__ledf2+0xb2>
    463a:	2300      	movs	r3, #0
    463c:	42be      	cmp	r6, r7
    463e:	d2d3      	bcs.n	45e8 <__ledf2+0x50>
    4640:	4659      	mov	r1, fp
    4642:	2301      	movs	r3, #1
    4644:	3901      	subs	r1, #1
    4646:	430b      	orrs	r3, r1
    4648:	e7ce      	b.n	45e8 <__ledf2+0x50>
    464a:	45c4      	cmp	ip, r8
    464c:	d8d7      	bhi.n	45fe <__ledf2+0x66>
    464e:	2300      	movs	r3, #0
    4650:	45c4      	cmp	ip, r8
    4652:	d3f5      	bcc.n	4640 <__ledf2+0xa8>
    4654:	e7c8      	b.n	45e8 <__ledf2+0x50>
    4656:	46c0      	nop			; (mov r8, r8)
    4658:	000007ff 	.word	0x000007ff

0000465c <__libc_init_array>:
    465c:	b570      	push	{r4, r5, r6, lr}
    465e:	4e0d      	ldr	r6, [pc, #52]	; (4694 <__libc_init_array+0x38>)
    4660:	4d0d      	ldr	r5, [pc, #52]	; (4698 <__libc_init_array+0x3c>)
    4662:	2400      	movs	r4, #0
    4664:	1bad      	subs	r5, r5, r6
    4666:	10ad      	asrs	r5, r5, #2
    4668:	d005      	beq.n	4676 <__libc_init_array+0x1a>
    466a:	00a3      	lsls	r3, r4, #2
    466c:	58f3      	ldr	r3, [r6, r3]
    466e:	3401      	adds	r4, #1
    4670:	4798      	blx	r3
    4672:	42a5      	cmp	r5, r4
    4674:	d1f9      	bne.n	466a <__libc_init_array+0xe>
    4676:	f005 ff13 	bl	a4a0 <_init>
    467a:	4e08      	ldr	r6, [pc, #32]	; (469c <__libc_init_array+0x40>)
    467c:	4d08      	ldr	r5, [pc, #32]	; (46a0 <__libc_init_array+0x44>)
    467e:	2400      	movs	r4, #0
    4680:	1bad      	subs	r5, r5, r6
    4682:	10ad      	asrs	r5, r5, #2
    4684:	d005      	beq.n	4692 <__libc_init_array+0x36>
    4686:	00a3      	lsls	r3, r4, #2
    4688:	58f3      	ldr	r3, [r6, r3]
    468a:	3401      	adds	r4, #1
    468c:	4798      	blx	r3
    468e:	42a5      	cmp	r5, r4
    4690:	d1f9      	bne.n	4686 <__libc_init_array+0x2a>
    4692:	bd70      	pop	{r4, r5, r6, pc}
    4694:	0000a4ac 	.word	0x0000a4ac
    4698:	0000a4ac 	.word	0x0000a4ac
    469c:	0000a4ac 	.word	0x0000a4ac
    46a0:	0000a4b4 	.word	0x0000a4b4

000046a4 <memcpy>:
    46a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    46a6:	0005      	movs	r5, r0
    46a8:	2a0f      	cmp	r2, #15
    46aa:	d92f      	bls.n	470c <memcpy+0x68>
    46ac:	000b      	movs	r3, r1
    46ae:	4303      	orrs	r3, r0
    46b0:	079b      	lsls	r3, r3, #30
    46b2:	d134      	bne.n	471e <memcpy+0x7a>
    46b4:	0016      	movs	r6, r2
    46b6:	000c      	movs	r4, r1
    46b8:	0003      	movs	r3, r0
    46ba:	3e10      	subs	r6, #16
    46bc:	0935      	lsrs	r5, r6, #4
    46be:	3501      	adds	r5, #1
    46c0:	012d      	lsls	r5, r5, #4
    46c2:	1945      	adds	r5, r0, r5
    46c4:	6827      	ldr	r7, [r4, #0]
    46c6:	601f      	str	r7, [r3, #0]
    46c8:	6867      	ldr	r7, [r4, #4]
    46ca:	605f      	str	r7, [r3, #4]
    46cc:	68a7      	ldr	r7, [r4, #8]
    46ce:	609f      	str	r7, [r3, #8]
    46d0:	68e7      	ldr	r7, [r4, #12]
    46d2:	3410      	adds	r4, #16
    46d4:	60df      	str	r7, [r3, #12]
    46d6:	3310      	adds	r3, #16
    46d8:	429d      	cmp	r5, r3
    46da:	d1f3      	bne.n	46c4 <memcpy+0x20>
    46dc:	230f      	movs	r3, #15
    46de:	439e      	bics	r6, r3
    46e0:	3610      	adds	r6, #16
    46e2:	1985      	adds	r5, r0, r6
    46e4:	1989      	adds	r1, r1, r6
    46e6:	4013      	ands	r3, r2
    46e8:	2b03      	cmp	r3, #3
    46ea:	d91a      	bls.n	4722 <memcpy+0x7e>
    46ec:	1f1e      	subs	r6, r3, #4
    46ee:	2300      	movs	r3, #0
    46f0:	08b4      	lsrs	r4, r6, #2
    46f2:	3401      	adds	r4, #1
    46f4:	00a4      	lsls	r4, r4, #2
    46f6:	58cf      	ldr	r7, [r1, r3]
    46f8:	50ef      	str	r7, [r5, r3]
    46fa:	3304      	adds	r3, #4
    46fc:	42a3      	cmp	r3, r4
    46fe:	d1fa      	bne.n	46f6 <memcpy+0x52>
    4700:	2403      	movs	r4, #3
    4702:	43a6      	bics	r6, r4
    4704:	1d33      	adds	r3, r6, #4
    4706:	4022      	ands	r2, r4
    4708:	18c9      	adds	r1, r1, r3
    470a:	18ed      	adds	r5, r5, r3
    470c:	2a00      	cmp	r2, #0
    470e:	d005      	beq.n	471c <memcpy+0x78>
    4710:	2300      	movs	r3, #0
    4712:	5ccc      	ldrb	r4, [r1, r3]
    4714:	54ec      	strb	r4, [r5, r3]
    4716:	3301      	adds	r3, #1
    4718:	4293      	cmp	r3, r2
    471a:	d1fa      	bne.n	4712 <memcpy+0x6e>
    471c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    471e:	0005      	movs	r5, r0
    4720:	e7f6      	b.n	4710 <memcpy+0x6c>
    4722:	001a      	movs	r2, r3
    4724:	e7f2      	b.n	470c <memcpy+0x68>
    4726:	46c0      	nop			; (mov r8, r8)

00004728 <memset>:
    4728:	b5f0      	push	{r4, r5, r6, r7, lr}
    472a:	0783      	lsls	r3, r0, #30
    472c:	d043      	beq.n	47b6 <memset+0x8e>
    472e:	1e54      	subs	r4, r2, #1
    4730:	2a00      	cmp	r2, #0
    4732:	d03f      	beq.n	47b4 <memset+0x8c>
    4734:	b2ce      	uxtb	r6, r1
    4736:	0002      	movs	r2, r0
    4738:	2503      	movs	r5, #3
    473a:	e002      	b.n	4742 <memset+0x1a>
    473c:	001a      	movs	r2, r3
    473e:	3c01      	subs	r4, #1
    4740:	d338      	bcc.n	47b4 <memset+0x8c>
    4742:	1c53      	adds	r3, r2, #1
    4744:	7016      	strb	r6, [r2, #0]
    4746:	422b      	tst	r3, r5
    4748:	d1f8      	bne.n	473c <memset+0x14>
    474a:	2c03      	cmp	r4, #3
    474c:	d92a      	bls.n	47a4 <memset+0x7c>
    474e:	22ff      	movs	r2, #255	; 0xff
    4750:	400a      	ands	r2, r1
    4752:	0215      	lsls	r5, r2, #8
    4754:	4315      	orrs	r5, r2
    4756:	042a      	lsls	r2, r5, #16
    4758:	4315      	orrs	r5, r2
    475a:	2c0f      	cmp	r4, #15
    475c:	d914      	bls.n	4788 <memset+0x60>
    475e:	0027      	movs	r7, r4
    4760:	001a      	movs	r2, r3
    4762:	3f10      	subs	r7, #16
    4764:	093e      	lsrs	r6, r7, #4
    4766:	3601      	adds	r6, #1
    4768:	0136      	lsls	r6, r6, #4
    476a:	199e      	adds	r6, r3, r6
    476c:	6015      	str	r5, [r2, #0]
    476e:	6055      	str	r5, [r2, #4]
    4770:	6095      	str	r5, [r2, #8]
    4772:	60d5      	str	r5, [r2, #12]
    4774:	3210      	adds	r2, #16
    4776:	4296      	cmp	r6, r2
    4778:	d1f8      	bne.n	476c <memset+0x44>
    477a:	220f      	movs	r2, #15
    477c:	4397      	bics	r7, r2
    477e:	3710      	adds	r7, #16
    4780:	19db      	adds	r3, r3, r7
    4782:	4014      	ands	r4, r2
    4784:	2c03      	cmp	r4, #3
    4786:	d90d      	bls.n	47a4 <memset+0x7c>
    4788:	001a      	movs	r2, r3
    478a:	1f27      	subs	r7, r4, #4
    478c:	08be      	lsrs	r6, r7, #2
    478e:	3601      	adds	r6, #1
    4790:	00b6      	lsls	r6, r6, #2
    4792:	199e      	adds	r6, r3, r6
    4794:	c220      	stmia	r2!, {r5}
    4796:	42b2      	cmp	r2, r6
    4798:	d1fc      	bne.n	4794 <memset+0x6c>
    479a:	2203      	movs	r2, #3
    479c:	4397      	bics	r7, r2
    479e:	3704      	adds	r7, #4
    47a0:	19db      	adds	r3, r3, r7
    47a2:	4014      	ands	r4, r2
    47a4:	2c00      	cmp	r4, #0
    47a6:	d005      	beq.n	47b4 <memset+0x8c>
    47a8:	b2c9      	uxtb	r1, r1
    47aa:	191c      	adds	r4, r3, r4
    47ac:	7019      	strb	r1, [r3, #0]
    47ae:	3301      	adds	r3, #1
    47b0:	429c      	cmp	r4, r3
    47b2:	d1fb      	bne.n	47ac <memset+0x84>
    47b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    47b6:	0014      	movs	r4, r2
    47b8:	0003      	movs	r3, r0
    47ba:	e7c6      	b.n	474a <memset+0x22>

000047bc <printf>:
    47bc:	b40f      	push	{r0, r1, r2, r3}
    47be:	b500      	push	{lr}
    47c0:	4906      	ldr	r1, [pc, #24]	; (47dc <printf+0x20>)
    47c2:	b083      	sub	sp, #12
    47c4:	ab04      	add	r3, sp, #16
    47c6:	6808      	ldr	r0, [r1, #0]
    47c8:	cb04      	ldmia	r3!, {r2}
    47ca:	6881      	ldr	r1, [r0, #8]
    47cc:	9301      	str	r3, [sp, #4]
    47ce:	f000 f913 	bl	49f8 <_vfprintf_r>
    47d2:	b003      	add	sp, #12
    47d4:	bc08      	pop	{r3}
    47d6:	b004      	add	sp, #16
    47d8:	4718      	bx	r3
    47da:	46c0      	nop			; (mov r8, r8)
    47dc:	2000007c 	.word	0x2000007c

000047e0 <setbuf>:
    47e0:	424a      	negs	r2, r1
    47e2:	414a      	adcs	r2, r1
    47e4:	2380      	movs	r3, #128	; 0x80
    47e6:	b510      	push	{r4, lr}
    47e8:	0052      	lsls	r2, r2, #1
    47ea:	00db      	lsls	r3, r3, #3
    47ec:	f000 f802 	bl	47f4 <setvbuf>
    47f0:	bd10      	pop	{r4, pc}
    47f2:	46c0      	nop			; (mov r8, r8)

000047f4 <setvbuf>:
    47f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    47f6:	4647      	mov	r7, r8
    47f8:	46ce      	mov	lr, r9
    47fa:	b580      	push	{r7, lr}
    47fc:	001f      	movs	r7, r3
    47fe:	4b63      	ldr	r3, [pc, #396]	; (498c <setvbuf+0x198>)
    4800:	b083      	sub	sp, #12
    4802:	681d      	ldr	r5, [r3, #0]
    4804:	0004      	movs	r4, r0
    4806:	4688      	mov	r8, r1
    4808:	0016      	movs	r6, r2
    480a:	2d00      	cmp	r5, #0
    480c:	d002      	beq.n	4814 <setvbuf+0x20>
    480e:	6bab      	ldr	r3, [r5, #56]	; 0x38
    4810:	2b00      	cmp	r3, #0
    4812:	d066      	beq.n	48e2 <setvbuf+0xee>
    4814:	2e02      	cmp	r6, #2
    4816:	d005      	beq.n	4824 <setvbuf+0x30>
    4818:	2e01      	cmp	r6, #1
    481a:	d900      	bls.n	481e <setvbuf+0x2a>
    481c:	e0a1      	b.n	4962 <setvbuf+0x16e>
    481e:	2f00      	cmp	r7, #0
    4820:	da00      	bge.n	4824 <setvbuf+0x30>
    4822:	e09e      	b.n	4962 <setvbuf+0x16e>
    4824:	6e63      	ldr	r3, [r4, #100]	; 0x64
    4826:	07db      	lsls	r3, r3, #31
    4828:	d533      	bpl.n	4892 <setvbuf+0x9e>
    482a:	0021      	movs	r1, r4
    482c:	0028      	movs	r0, r5
    482e:	f002 fe27 	bl	7480 <_fflush_r>
    4832:	6b21      	ldr	r1, [r4, #48]	; 0x30
    4834:	2900      	cmp	r1, #0
    4836:	d008      	beq.n	484a <setvbuf+0x56>
    4838:	0023      	movs	r3, r4
    483a:	3340      	adds	r3, #64	; 0x40
    483c:	4299      	cmp	r1, r3
    483e:	d002      	beq.n	4846 <setvbuf+0x52>
    4840:	0028      	movs	r0, r5
    4842:	f002 ff21 	bl	7688 <_free_r>
    4846:	2300      	movs	r3, #0
    4848:	6323      	str	r3, [r4, #48]	; 0x30
    484a:	2300      	movs	r3, #0
    484c:	61a3      	str	r3, [r4, #24]
    484e:	6063      	str	r3, [r4, #4]
    4850:	220c      	movs	r2, #12
    4852:	5ea3      	ldrsh	r3, [r4, r2]
    4854:	061a      	lsls	r2, r3, #24
    4856:	d43d      	bmi.n	48d4 <setvbuf+0xe0>
    4858:	4a4d      	ldr	r2, [pc, #308]	; (4990 <setvbuf+0x19c>)
    485a:	4013      	ands	r3, r2
    485c:	81a3      	strh	r3, [r4, #12]
    485e:	2e02      	cmp	r6, #2
    4860:	d01e      	beq.n	48a0 <setvbuf+0xac>
    4862:	ab01      	add	r3, sp, #4
    4864:	466a      	mov	r2, sp
    4866:	0021      	movs	r1, r4
    4868:	0028      	movs	r0, r5
    486a:	f003 f9a9 	bl	7bc0 <__swhatbuf_r>
    486e:	89a3      	ldrh	r3, [r4, #12]
    4870:	4318      	orrs	r0, r3
    4872:	81a0      	strh	r0, [r4, #12]
    4874:	2f00      	cmp	r7, #0
    4876:	d138      	bne.n	48ea <setvbuf+0xf6>
    4878:	9f00      	ldr	r7, [sp, #0]
    487a:	0038      	movs	r0, r7
    487c:	f003 fa18 	bl	7cb0 <malloc>
    4880:	4680      	mov	r8, r0
    4882:	2800      	cmp	r0, #0
    4884:	d100      	bne.n	4888 <setvbuf+0x94>
    4886:	e06f      	b.n	4968 <setvbuf+0x174>
    4888:	2280      	movs	r2, #128	; 0x80
    488a:	89a3      	ldrh	r3, [r4, #12]
    488c:	4313      	orrs	r3, r2
    488e:	81a3      	strh	r3, [r4, #12]
    4890:	e02e      	b.n	48f0 <setvbuf+0xfc>
    4892:	89a3      	ldrh	r3, [r4, #12]
    4894:	059b      	lsls	r3, r3, #22
    4896:	d4c8      	bmi.n	482a <setvbuf+0x36>
    4898:	6da0      	ldr	r0, [r4, #88]	; 0x58
    489a:	f003 f98d 	bl	7bb8 <__retarget_lock_acquire_recursive>
    489e:	e7c4      	b.n	482a <setvbuf+0x36>
    48a0:	2500      	movs	r5, #0
    48a2:	2202      	movs	r2, #2
    48a4:	4313      	orrs	r3, r2
    48a6:	2200      	movs	r2, #0
    48a8:	60a2      	str	r2, [r4, #8]
    48aa:	0022      	movs	r2, r4
    48ac:	3243      	adds	r2, #67	; 0x43
    48ae:	6022      	str	r2, [r4, #0]
    48b0:	6122      	str	r2, [r4, #16]
    48b2:	2201      	movs	r2, #1
    48b4:	6e61      	ldr	r1, [r4, #100]	; 0x64
    48b6:	81a3      	strh	r3, [r4, #12]
    48b8:	6162      	str	r2, [r4, #20]
    48ba:	4211      	tst	r1, r2
    48bc:	d104      	bne.n	48c8 <setvbuf+0xd4>
    48be:	059b      	lsls	r3, r3, #22
    48c0:	d402      	bmi.n	48c8 <setvbuf+0xd4>
    48c2:	6da0      	ldr	r0, [r4, #88]	; 0x58
    48c4:	f003 f97a 	bl	7bbc <__retarget_lock_release_recursive>
    48c8:	0028      	movs	r0, r5
    48ca:	b003      	add	sp, #12
    48cc:	bc0c      	pop	{r2, r3}
    48ce:	4690      	mov	r8, r2
    48d0:	4699      	mov	r9, r3
    48d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    48d4:	6921      	ldr	r1, [r4, #16]
    48d6:	0028      	movs	r0, r5
    48d8:	f002 fed6 	bl	7688 <_free_r>
    48dc:	220c      	movs	r2, #12
    48de:	5ea3      	ldrsh	r3, [r4, r2]
    48e0:	e7ba      	b.n	4858 <setvbuf+0x64>
    48e2:	0028      	movs	r0, r5
    48e4:	f002 fe26 	bl	7534 <__sinit>
    48e8:	e794      	b.n	4814 <setvbuf+0x20>
    48ea:	4643      	mov	r3, r8
    48ec:	2b00      	cmp	r3, #0
    48ee:	d0c4      	beq.n	487a <setvbuf+0x86>
    48f0:	6bab      	ldr	r3, [r5, #56]	; 0x38
    48f2:	2b00      	cmp	r3, #0
    48f4:	d027      	beq.n	4946 <setvbuf+0x152>
    48f6:	9b00      	ldr	r3, [sp, #0]
    48f8:	429f      	cmp	r7, r3
    48fa:	d02a      	beq.n	4952 <setvbuf+0x15e>
    48fc:	2380      	movs	r3, #128	; 0x80
    48fe:	89a2      	ldrh	r2, [r4, #12]
    4900:	011b      	lsls	r3, r3, #4
    4902:	4313      	orrs	r3, r2
    4904:	b21b      	sxth	r3, r3
    4906:	81a3      	strh	r3, [r4, #12]
    4908:	2e01      	cmp	r6, #1
    490a:	d026      	beq.n	495a <setvbuf+0x166>
    490c:	4642      	mov	r2, r8
    490e:	6022      	str	r2, [r4, #0]
    4910:	6122      	str	r2, [r4, #16]
    4912:	2208      	movs	r2, #8
    4914:	b29b      	uxth	r3, r3
    4916:	6167      	str	r7, [r4, #20]
    4918:	401a      	ands	r2, r3
    491a:	d00b      	beq.n	4934 <setvbuf+0x140>
    491c:	07da      	lsls	r2, r3, #31
    491e:	d510      	bpl.n	4942 <setvbuf+0x14e>
    4920:	2200      	movs	r2, #0
    4922:	2501      	movs	r5, #1
    4924:	60a2      	str	r2, [r4, #8]
    4926:	6e62      	ldr	r2, [r4, #100]	; 0x64
    4928:	427f      	negs	r7, r7
    492a:	61a7      	str	r7, [r4, #24]
    492c:	4015      	ands	r5, r2
    492e:	d0c6      	beq.n	48be <setvbuf+0xca>
    4930:	2500      	movs	r5, #0
    4932:	e7c9      	b.n	48c8 <setvbuf+0xd4>
    4934:	60a2      	str	r2, [r4, #8]
    4936:	2501      	movs	r5, #1
    4938:	6e62      	ldr	r2, [r4, #100]	; 0x64
    493a:	4015      	ands	r5, r2
    493c:	d0bf      	beq.n	48be <setvbuf+0xca>
    493e:	2500      	movs	r5, #0
    4940:	e7c2      	b.n	48c8 <setvbuf+0xd4>
    4942:	60a7      	str	r7, [r4, #8]
    4944:	e7f7      	b.n	4936 <setvbuf+0x142>
    4946:	0028      	movs	r0, r5
    4948:	f002 fdf4 	bl	7534 <__sinit>
    494c:	9b00      	ldr	r3, [sp, #0]
    494e:	429f      	cmp	r7, r3
    4950:	d1d4      	bne.n	48fc <setvbuf+0x108>
    4952:	220c      	movs	r2, #12
    4954:	5ea3      	ldrsh	r3, [r4, r2]
    4956:	2e01      	cmp	r6, #1
    4958:	d1d8      	bne.n	490c <setvbuf+0x118>
    495a:	2201      	movs	r2, #1
    495c:	4313      	orrs	r3, r2
    495e:	81a3      	strh	r3, [r4, #12]
    4960:	e7d4      	b.n	490c <setvbuf+0x118>
    4962:	2501      	movs	r5, #1
    4964:	426d      	negs	r5, r5
    4966:	e7af      	b.n	48c8 <setvbuf+0xd4>
    4968:	9b00      	ldr	r3, [sp, #0]
    496a:	4699      	mov	r9, r3
    496c:	42bb      	cmp	r3, r7
    496e:	d005      	beq.n	497c <setvbuf+0x188>
    4970:	0018      	movs	r0, r3
    4972:	f003 f99d 	bl	7cb0 <malloc>
    4976:	4680      	mov	r8, r0
    4978:	2800      	cmp	r0, #0
    497a:	d104      	bne.n	4986 <setvbuf+0x192>
    497c:	2501      	movs	r5, #1
    497e:	220c      	movs	r2, #12
    4980:	5ea3      	ldrsh	r3, [r4, r2]
    4982:	426d      	negs	r5, r5
    4984:	e78d      	b.n	48a2 <setvbuf+0xae>
    4986:	464f      	mov	r7, r9
    4988:	e77e      	b.n	4888 <setvbuf+0x94>
    498a:	46c0      	nop			; (mov r8, r8)
    498c:	2000007c 	.word	0x2000007c
    4990:	fffff35c 	.word	0xfffff35c

00004994 <strlen>:
    4994:	b510      	push	{r4, lr}
    4996:	0783      	lsls	r3, r0, #30
    4998:	d025      	beq.n	49e6 <strlen+0x52>
    499a:	7803      	ldrb	r3, [r0, #0]
    499c:	2b00      	cmp	r3, #0
    499e:	d024      	beq.n	49ea <strlen+0x56>
    49a0:	0003      	movs	r3, r0
    49a2:	2103      	movs	r1, #3
    49a4:	e002      	b.n	49ac <strlen+0x18>
    49a6:	781a      	ldrb	r2, [r3, #0]
    49a8:	2a00      	cmp	r2, #0
    49aa:	d01a      	beq.n	49e2 <strlen+0x4e>
    49ac:	3301      	adds	r3, #1
    49ae:	420b      	tst	r3, r1
    49b0:	d1f9      	bne.n	49a6 <strlen+0x12>
    49b2:	6819      	ldr	r1, [r3, #0]
    49b4:	4a0e      	ldr	r2, [pc, #56]	; (49f0 <strlen+0x5c>)
    49b6:	4c0f      	ldr	r4, [pc, #60]	; (49f4 <strlen+0x60>)
    49b8:	188a      	adds	r2, r1, r2
    49ba:	438a      	bics	r2, r1
    49bc:	4222      	tst	r2, r4
    49be:	d106      	bne.n	49ce <strlen+0x3a>
    49c0:	3304      	adds	r3, #4
    49c2:	6819      	ldr	r1, [r3, #0]
    49c4:	4a0a      	ldr	r2, [pc, #40]	; (49f0 <strlen+0x5c>)
    49c6:	188a      	adds	r2, r1, r2
    49c8:	438a      	bics	r2, r1
    49ca:	4222      	tst	r2, r4
    49cc:	d0f8      	beq.n	49c0 <strlen+0x2c>
    49ce:	001a      	movs	r2, r3
    49d0:	781b      	ldrb	r3, [r3, #0]
    49d2:	2b00      	cmp	r3, #0
    49d4:	d003      	beq.n	49de <strlen+0x4a>
    49d6:	3201      	adds	r2, #1
    49d8:	7811      	ldrb	r1, [r2, #0]
    49da:	2900      	cmp	r1, #0
    49dc:	d1fb      	bne.n	49d6 <strlen+0x42>
    49de:	1a10      	subs	r0, r2, r0
    49e0:	bd10      	pop	{r4, pc}
    49e2:	1a18      	subs	r0, r3, r0
    49e4:	e7fc      	b.n	49e0 <strlen+0x4c>
    49e6:	0003      	movs	r3, r0
    49e8:	e7e3      	b.n	49b2 <strlen+0x1e>
    49ea:	2000      	movs	r0, #0
    49ec:	e7f8      	b.n	49e0 <strlen+0x4c>
    49ee:	46c0      	nop			; (mov r8, r8)
    49f0:	fefefeff 	.word	0xfefefeff
    49f4:	80808080 	.word	0x80808080

000049f8 <_vfprintf_r>:
    49f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    49fa:	46de      	mov	lr, fp
    49fc:	464e      	mov	r6, r9
    49fe:	4645      	mov	r5, r8
    4a00:	4657      	mov	r7, sl
    4a02:	b5e0      	push	{r5, r6, r7, lr}
    4a04:	b0c3      	sub	sp, #268	; 0x10c
    4a06:	4689      	mov	r9, r1
    4a08:	0014      	movs	r4, r2
    4a0a:	001d      	movs	r5, r3
    4a0c:	930f      	str	r3, [sp, #60]	; 0x3c
    4a0e:	0006      	movs	r6, r0
    4a10:	9006      	str	r0, [sp, #24]
    4a12:	f003 f8bf 	bl	7b94 <_localeconv_r>
    4a16:	6803      	ldr	r3, [r0, #0]
    4a18:	0018      	movs	r0, r3
    4a1a:	9318      	str	r3, [sp, #96]	; 0x60
    4a1c:	f7ff ffba 	bl	4994 <strlen>
    4a20:	9017      	str	r0, [sp, #92]	; 0x5c
    4a22:	2e00      	cmp	r6, #0
    4a24:	d004      	beq.n	4a30 <_vfprintf_r+0x38>
    4a26:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    4a28:	9307      	str	r3, [sp, #28]
    4a2a:	2b00      	cmp	r3, #0
    4a2c:	d100      	bne.n	4a30 <_vfprintf_r+0x38>
    4a2e:	e0a7      	b.n	4b80 <_vfprintf_r+0x188>
    4a30:	464b      	mov	r3, r9
    4a32:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    4a34:	07db      	lsls	r3, r3, #31
    4a36:	d478      	bmi.n	4b2a <_vfprintf_r+0x132>
    4a38:	464b      	mov	r3, r9
    4a3a:	210c      	movs	r1, #12
    4a3c:	5e59      	ldrsh	r1, [r3, r1]
    4a3e:	b28b      	uxth	r3, r1
    4a40:	059a      	lsls	r2, r3, #22
    4a42:	d56e      	bpl.n	4b22 <_vfprintf_r+0x12a>
    4a44:	2280      	movs	r2, #128	; 0x80
    4a46:	0192      	lsls	r2, r2, #6
    4a48:	4213      	tst	r3, r2
    4a4a:	d109      	bne.n	4a60 <_vfprintf_r+0x68>
    4a4c:	430a      	orrs	r2, r1
    4a4e:	464b      	mov	r3, r9
    4a50:	4649      	mov	r1, r9
    4a52:	819a      	strh	r2, [r3, #12]
    4a54:	6e49      	ldr	r1, [r1, #100]	; 0x64
    4a56:	4bcc      	ldr	r3, [pc, #816]	; (4d88 <_vfprintf_r+0x390>)
    4a58:	400b      	ands	r3, r1
    4a5a:	4649      	mov	r1, r9
    4a5c:	664b      	str	r3, [r1, #100]	; 0x64
    4a5e:	b293      	uxth	r3, r2
    4a60:	071a      	lsls	r2, r3, #28
    4a62:	d567      	bpl.n	4b34 <_vfprintf_r+0x13c>
    4a64:	464a      	mov	r2, r9
    4a66:	6912      	ldr	r2, [r2, #16]
    4a68:	2a00      	cmp	r2, #0
    4a6a:	d063      	beq.n	4b34 <_vfprintf_r+0x13c>
    4a6c:	221a      	movs	r2, #26
    4a6e:	401a      	ands	r2, r3
    4a70:	2a0a      	cmp	r2, #10
    4a72:	d100      	bne.n	4a76 <_vfprintf_r+0x7e>
    4a74:	e088      	b.n	4b88 <_vfprintf_r+0x190>
    4a76:	ab32      	add	r3, sp, #200	; 0xc8
    4a78:	9325      	str	r3, [sp, #148]	; 0x94
    4a7a:	2300      	movs	r3, #0
    4a7c:	46cb      	mov	fp, r9
    4a7e:	af25      	add	r7, sp, #148	; 0x94
    4a80:	60bb      	str	r3, [r7, #8]
    4a82:	607b      	str	r3, [r7, #4]
    4a84:	9407      	str	r4, [sp, #28]
    4a86:	9314      	str	r3, [sp, #80]	; 0x50
    4a88:	9316      	str	r3, [sp, #88]	; 0x58
    4a8a:	9315      	str	r3, [sp, #84]	; 0x54
    4a8c:	ae32      	add	r6, sp, #200	; 0xc8
    4a8e:	9319      	str	r3, [sp, #100]	; 0x64
    4a90:	931a      	str	r3, [sp, #104]	; 0x68
    4a92:	930a      	str	r3, [sp, #40]	; 0x28
    4a94:	9c07      	ldr	r4, [sp, #28]
    4a96:	7823      	ldrb	r3, [r4, #0]
    4a98:	2b00      	cmp	r3, #0
    4a9a:	d101      	bne.n	4aa0 <_vfprintf_r+0xa8>
    4a9c:	f000 fd9e 	bl	55dc <_vfprintf_r+0xbe4>
    4aa0:	2b25      	cmp	r3, #37	; 0x25
    4aa2:	d103      	bne.n	4aac <_vfprintf_r+0xb4>
    4aa4:	f000 fd9a 	bl	55dc <_vfprintf_r+0xbe4>
    4aa8:	2b25      	cmp	r3, #37	; 0x25
    4aaa:	d003      	beq.n	4ab4 <_vfprintf_r+0xbc>
    4aac:	3401      	adds	r4, #1
    4aae:	7823      	ldrb	r3, [r4, #0]
    4ab0:	2b00      	cmp	r3, #0
    4ab2:	d1f9      	bne.n	4aa8 <_vfprintf_r+0xb0>
    4ab4:	9b07      	ldr	r3, [sp, #28]
    4ab6:	1ae5      	subs	r5, r4, r3
    4ab8:	d010      	beq.n	4adc <_vfprintf_r+0xe4>
    4aba:	9b07      	ldr	r3, [sp, #28]
    4abc:	6075      	str	r5, [r6, #4]
    4abe:	6033      	str	r3, [r6, #0]
    4ac0:	68bb      	ldr	r3, [r7, #8]
    4ac2:	195b      	adds	r3, r3, r5
    4ac4:	60bb      	str	r3, [r7, #8]
    4ac6:	687b      	ldr	r3, [r7, #4]
    4ac8:	3301      	adds	r3, #1
    4aca:	607b      	str	r3, [r7, #4]
    4acc:	2b07      	cmp	r3, #7
    4ace:	dc4c      	bgt.n	4b6a <_vfprintf_r+0x172>
    4ad0:	3608      	adds	r6, #8
    4ad2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4ad4:	469c      	mov	ip, r3
    4ad6:	44ac      	add	ip, r5
    4ad8:	4663      	mov	r3, ip
    4ada:	930a      	str	r3, [sp, #40]	; 0x28
    4adc:	7823      	ldrb	r3, [r4, #0]
    4ade:	2b00      	cmp	r3, #0
    4ae0:	d101      	bne.n	4ae6 <_vfprintf_r+0xee>
    4ae2:	f000 fc99 	bl	5418 <_vfprintf_r+0xa20>
    4ae6:	1c63      	adds	r3, r4, #1
    4ae8:	9307      	str	r3, [sp, #28]
    4aea:	2300      	movs	r3, #0
    4aec:	aa16      	add	r2, sp, #88	; 0x58
    4aee:	77d3      	strb	r3, [r2, #31]
    4af0:	2201      	movs	r2, #1
    4af2:	4252      	negs	r2, r2
    4af4:	4692      	mov	sl, r2
    4af6:	2200      	movs	r2, #0
    4af8:	920b      	str	r2, [sp, #44]	; 0x2c
    4afa:	3220      	adds	r2, #32
    4afc:	4691      	mov	r9, r2
    4afe:	3220      	adds	r2, #32
    4b00:	7863      	ldrb	r3, [r4, #1]
    4b02:	2100      	movs	r1, #0
    4b04:	2000      	movs	r0, #0
    4b06:	2400      	movs	r4, #0
    4b08:	4694      	mov	ip, r2
    4b0a:	9a07      	ldr	r2, [sp, #28]
    4b0c:	3201      	adds	r2, #1
    4b0e:	9207      	str	r2, [sp, #28]
    4b10:	001a      	movs	r2, r3
    4b12:	3a20      	subs	r2, #32
    4b14:	2a58      	cmp	r2, #88	; 0x58
    4b16:	d900      	bls.n	4b1a <_vfprintf_r+0x122>
    4b18:	e2e7      	b.n	50ea <_vfprintf_r+0x6f2>
    4b1a:	4d9c      	ldr	r5, [pc, #624]	; (4d8c <_vfprintf_r+0x394>)
    4b1c:	0092      	lsls	r2, r2, #2
    4b1e:	58aa      	ldr	r2, [r5, r2]
    4b20:	4697      	mov	pc, r2
    4b22:	464b      	mov	r3, r9
    4b24:	6d98      	ldr	r0, [r3, #88]	; 0x58
    4b26:	f003 f847 	bl	7bb8 <__retarget_lock_acquire_recursive>
    4b2a:	464b      	mov	r3, r9
    4b2c:	210c      	movs	r1, #12
    4b2e:	5e59      	ldrsh	r1, [r3, r1]
    4b30:	b28b      	uxth	r3, r1
    4b32:	e787      	b.n	4a44 <_vfprintf_r+0x4c>
    4b34:	4649      	mov	r1, r9
    4b36:	9806      	ldr	r0, [sp, #24]
    4b38:	f001 fb0e 	bl	6158 <__swsetup_r>
    4b3c:	464b      	mov	r3, r9
    4b3e:	2800      	cmp	r0, #0
    4b40:	d03a      	beq.n	4bb8 <_vfprintf_r+0x1c0>
    4b42:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    4b44:	07db      	lsls	r3, r3, #31
    4b46:	d405      	bmi.n	4b54 <_vfprintf_r+0x15c>
    4b48:	464b      	mov	r3, r9
    4b4a:	899b      	ldrh	r3, [r3, #12]
    4b4c:	059b      	lsls	r3, r3, #22
    4b4e:	d401      	bmi.n	4b54 <_vfprintf_r+0x15c>
    4b50:	f000 ffcf 	bl	5af2 <_vfprintf_r+0x10fa>
    4b54:	2301      	movs	r3, #1
    4b56:	425b      	negs	r3, r3
    4b58:	930a      	str	r3, [sp, #40]	; 0x28
    4b5a:	980a      	ldr	r0, [sp, #40]	; 0x28
    4b5c:	b043      	add	sp, #268	; 0x10c
    4b5e:	bc3c      	pop	{r2, r3, r4, r5}
    4b60:	4690      	mov	r8, r2
    4b62:	4699      	mov	r9, r3
    4b64:	46a2      	mov	sl, r4
    4b66:	46ab      	mov	fp, r5
    4b68:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4b6a:	003a      	movs	r2, r7
    4b6c:	4659      	mov	r1, fp
    4b6e:	9806      	ldr	r0, [sp, #24]
    4b70:	f004 f9a4 	bl	8ebc <__sprint_r>
    4b74:	2800      	cmp	r0, #0
    4b76:	d001      	beq.n	4b7c <_vfprintf_r+0x184>
    4b78:	f000 fcce 	bl	5518 <_vfprintf_r+0xb20>
    4b7c:	ae32      	add	r6, sp, #200	; 0xc8
    4b7e:	e7a8      	b.n	4ad2 <_vfprintf_r+0xda>
    4b80:	9806      	ldr	r0, [sp, #24]
    4b82:	f002 fcd7 	bl	7534 <__sinit>
    4b86:	e753      	b.n	4a30 <_vfprintf_r+0x38>
    4b88:	464a      	mov	r2, r9
    4b8a:	210e      	movs	r1, #14
    4b8c:	5e52      	ldrsh	r2, [r2, r1]
    4b8e:	2a00      	cmp	r2, #0
    4b90:	da00      	bge.n	4b94 <_vfprintf_r+0x19c>
    4b92:	e770      	b.n	4a76 <_vfprintf_r+0x7e>
    4b94:	464a      	mov	r2, r9
    4b96:	6e52      	ldr	r2, [r2, #100]	; 0x64
    4b98:	07d2      	lsls	r2, r2, #31
    4b9a:	d405      	bmi.n	4ba8 <_vfprintf_r+0x1b0>
    4b9c:	059b      	lsls	r3, r3, #22
    4b9e:	d403      	bmi.n	4ba8 <_vfprintf_r+0x1b0>
    4ba0:	464b      	mov	r3, r9
    4ba2:	6d98      	ldr	r0, [r3, #88]	; 0x58
    4ba4:	f003 f80a 	bl	7bbc <__retarget_lock_release_recursive>
    4ba8:	002b      	movs	r3, r5
    4baa:	0022      	movs	r2, r4
    4bac:	4649      	mov	r1, r9
    4bae:	9806      	ldr	r0, [sp, #24]
    4bb0:	f001 fa8e 	bl	60d0 <__sbprintf>
    4bb4:	900a      	str	r0, [sp, #40]	; 0x28
    4bb6:	e7d0      	b.n	4b5a <_vfprintf_r+0x162>
    4bb8:	899b      	ldrh	r3, [r3, #12]
    4bba:	e757      	b.n	4a6c <_vfprintf_r+0x74>
    4bbc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4bbe:	920f      	str	r2, [sp, #60]	; 0x3c
    4bc0:	425b      	negs	r3, r3
    4bc2:	930b      	str	r3, [sp, #44]	; 0x2c
    4bc4:	2304      	movs	r3, #4
    4bc6:	431c      	orrs	r4, r3
    4bc8:	9b07      	ldr	r3, [sp, #28]
    4bca:	781b      	ldrb	r3, [r3, #0]
    4bcc:	e79d      	b.n	4b0a <_vfprintf_r+0x112>
    4bce:	9b07      	ldr	r3, [sp, #28]
    4bd0:	2101      	movs	r1, #1
    4bd2:	781b      	ldrb	r3, [r3, #0]
    4bd4:	202b      	movs	r0, #43	; 0x2b
    4bd6:	e798      	b.n	4b0a <_vfprintf_r+0x112>
    4bd8:	9b07      	ldr	r3, [sp, #28]
    4bda:	1c5a      	adds	r2, r3, #1
    4bdc:	781b      	ldrb	r3, [r3, #0]
    4bde:	4690      	mov	r8, r2
    4be0:	2b2a      	cmp	r3, #42	; 0x2a
    4be2:	d101      	bne.n	4be8 <_vfprintf_r+0x1f0>
    4be4:	f001 fa38 	bl	6058 <_vfprintf_r+0x1660>
    4be8:	001a      	movs	r2, r3
    4bea:	2500      	movs	r5, #0
    4bec:	3a30      	subs	r2, #48	; 0x30
    4bee:	46aa      	mov	sl, r5
    4bf0:	2a09      	cmp	r2, #9
    4bf2:	d901      	bls.n	4bf8 <_vfprintf_r+0x200>
    4bf4:	f001 f96d 	bl	5ed2 <_vfprintf_r+0x14da>
    4bf8:	0025      	movs	r5, r4
    4bfa:	4643      	mov	r3, r8
    4bfc:	4654      	mov	r4, sl
    4bfe:	4688      	mov	r8, r1
    4c00:	4682      	mov	sl, r0
    4c02:	00a1      	lsls	r1, r4, #2
    4c04:	190c      	adds	r4, r1, r4
    4c06:	7818      	ldrb	r0, [r3, #0]
    4c08:	0064      	lsls	r4, r4, #1
    4c0a:	18a4      	adds	r4, r4, r2
    4c0c:	0002      	movs	r2, r0
    4c0e:	1c59      	adds	r1, r3, #1
    4c10:	3a30      	subs	r2, #48	; 0x30
    4c12:	000b      	movs	r3, r1
    4c14:	2a09      	cmp	r2, #9
    4c16:	d9f4      	bls.n	4c02 <_vfprintf_r+0x20a>
    4c18:	9107      	str	r1, [sp, #28]
    4c1a:	0003      	movs	r3, r0
    4c1c:	4641      	mov	r1, r8
    4c1e:	4650      	mov	r0, sl
    4c20:	46a2      	mov	sl, r4
    4c22:	002c      	movs	r4, r5
    4c24:	e774      	b.n	4b10 <_vfprintf_r+0x118>
    4c26:	9312      	str	r3, [sp, #72]	; 0x48
    4c28:	2900      	cmp	r1, #0
    4c2a:	d001      	beq.n	4c30 <_vfprintf_r+0x238>
    4c2c:	f001 fa2e 	bl	608c <_vfprintf_r+0x1694>
    4c30:	4b57      	ldr	r3, [pc, #348]	; (4d90 <_vfprintf_r+0x398>)
    4c32:	9319      	str	r3, [sp, #100]	; 0x64
    4c34:	06a3      	lsls	r3, r4, #26
    4c36:	d501      	bpl.n	4c3c <_vfprintf_r+0x244>
    4c38:	f000 fe9a 	bl	5970 <_vfprintf_r+0xf78>
    4c3c:	06e3      	lsls	r3, r4, #27
    4c3e:	d501      	bpl.n	4c44 <_vfprintf_r+0x24c>
    4c40:	f000 fd9a 	bl	5778 <_vfprintf_r+0xd80>
    4c44:	0663      	lsls	r3, r4, #25
    4c46:	d401      	bmi.n	4c4c <_vfprintf_r+0x254>
    4c48:	f000 fd96 	bl	5778 <_vfprintf_r+0xd80>
    4c4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4c4e:	881a      	ldrh	r2, [r3, #0]
    4c50:	920c      	str	r2, [sp, #48]	; 0x30
    4c52:	2200      	movs	r2, #0
    4c54:	3304      	adds	r3, #4
    4c56:	920d      	str	r2, [sp, #52]	; 0x34
    4c58:	930f      	str	r3, [sp, #60]	; 0x3c
    4c5a:	07e3      	lsls	r3, r4, #31
    4c5c:	d401      	bmi.n	4c62 <_vfprintf_r+0x26a>
    4c5e:	f000 fd76 	bl	574e <_vfprintf_r+0xd56>
    4c62:	990c      	ldr	r1, [sp, #48]	; 0x30
    4c64:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4c66:	000b      	movs	r3, r1
    4c68:	4313      	orrs	r3, r2
    4c6a:	001a      	movs	r2, r3
    4c6c:	2302      	movs	r3, #2
    4c6e:	2a00      	cmp	r2, #0
    4c70:	d008      	beq.n	4c84 <_vfprintf_r+0x28c>
    4c72:	2030      	movs	r0, #48	; 0x30
    4c74:	a91e      	add	r1, sp, #120	; 0x78
    4c76:	7008      	strb	r0, [r1, #0]
    4c78:	2548      	movs	r5, #72	; 0x48
    4c7a:	4668      	mov	r0, sp
    4c7c:	1940      	adds	r0, r0, r5
    4c7e:	7800      	ldrb	r0, [r0, #0]
    4c80:	431c      	orrs	r4, r3
    4c82:	7048      	strb	r0, [r1, #1]
    4c84:	2100      	movs	r1, #0
    4c86:	4688      	mov	r8, r1
    4c88:	a816      	add	r0, sp, #88	; 0x58
    4c8a:	77c1      	strb	r1, [r0, #31]
    4c8c:	4651      	mov	r1, sl
    4c8e:	3101      	adds	r1, #1
    4c90:	d100      	bne.n	4c94 <_vfprintf_r+0x29c>
    4c92:	e0e6      	b.n	4e62 <_vfprintf_r+0x46a>
    4c94:	2180      	movs	r1, #128	; 0x80
    4c96:	0020      	movs	r0, r4
    4c98:	4388      	bics	r0, r1
    4c9a:	9009      	str	r0, [sp, #36]	; 0x24
    4c9c:	2a00      	cmp	r2, #0
    4c9e:	d000      	beq.n	4ca2 <_vfprintf_r+0x2aa>
    4ca0:	e0e3      	b.n	4e6a <_vfprintf_r+0x472>
    4ca2:	4652      	mov	r2, sl
    4ca4:	2a00      	cmp	r2, #0
    4ca6:	d001      	beq.n	4cac <_vfprintf_r+0x2b4>
    4ca8:	f000 fc38 	bl	551c <_vfprintf_r+0xb24>
    4cac:	2b00      	cmp	r3, #0
    4cae:	d001      	beq.n	4cb4 <_vfprintf_r+0x2bc>
    4cb0:	f000 fd0c 	bl	56cc <_vfprintf_r+0xcd4>
    4cb4:	2001      	movs	r0, #1
    4cb6:	ab32      	add	r3, sp, #200	; 0xc8
    4cb8:	4020      	ands	r0, r4
    4cba:	900e      	str	r0, [sp, #56]	; 0x38
    4cbc:	9311      	str	r3, [sp, #68]	; 0x44
    4cbe:	d008      	beq.n	4cd2 <_vfprintf_r+0x2da>
    4cc0:	2327      	movs	r3, #39	; 0x27
    4cc2:	2130      	movs	r1, #48	; 0x30
    4cc4:	aa28      	add	r2, sp, #160	; 0xa0
    4cc6:	54d1      	strb	r1, [r2, r3]
    4cc8:	aa16      	add	r2, sp, #88	; 0x58
    4cca:	4694      	mov	ip, r2
    4ccc:	3348      	adds	r3, #72	; 0x48
    4cce:	4463      	add	r3, ip
    4cd0:	9311      	str	r3, [sp, #68]	; 0x44
    4cd2:	4653      	mov	r3, sl
    4cd4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4cd6:	9308      	str	r3, [sp, #32]
    4cd8:	4592      	cmp	sl, r2
    4cda:	da00      	bge.n	4cde <_vfprintf_r+0x2e6>
    4cdc:	9208      	str	r2, [sp, #32]
    4cde:	2300      	movs	r3, #0
    4ce0:	9313      	str	r3, [sp, #76]	; 0x4c
    4ce2:	4643      	mov	r3, r8
    4ce4:	2b00      	cmp	r3, #0
    4ce6:	d002      	beq.n	4cee <_vfprintf_r+0x2f6>
    4ce8:	9b08      	ldr	r3, [sp, #32]
    4cea:	3301      	adds	r3, #1
    4cec:	9308      	str	r3, [sp, #32]
    4cee:	2302      	movs	r3, #2
    4cf0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4cf2:	401a      	ands	r2, r3
    4cf4:	4691      	mov	r9, r2
    4cf6:	d002      	beq.n	4cfe <_vfprintf_r+0x306>
    4cf8:	9b08      	ldr	r3, [sp, #32]
    4cfa:	3302      	adds	r3, #2
    4cfc:	9308      	str	r3, [sp, #32]
    4cfe:	2384      	movs	r3, #132	; 0x84
    4d00:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4d02:	401a      	ands	r2, r3
    4d04:	9210      	str	r2, [sp, #64]	; 0x40
    4d06:	d000      	beq.n	4d0a <_vfprintf_r+0x312>
    4d08:	e207      	b.n	511a <_vfprintf_r+0x722>
    4d0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4d0c:	9a08      	ldr	r2, [sp, #32]
    4d0e:	1a9c      	subs	r4, r3, r2
    4d10:	2c00      	cmp	r4, #0
    4d12:	dc00      	bgt.n	4d16 <_vfprintf_r+0x31e>
    4d14:	e201      	b.n	511a <_vfprintf_r+0x722>
    4d16:	491f      	ldr	r1, [pc, #124]	; (4d94 <_vfprintf_r+0x39c>)
    4d18:	68ba      	ldr	r2, [r7, #8]
    4d1a:	687b      	ldr	r3, [r7, #4]
    4d1c:	4688      	mov	r8, r1
    4d1e:	2c10      	cmp	r4, #16
    4d20:	dd21      	ble.n	4d66 <_vfprintf_r+0x36e>
    4d22:	0031      	movs	r1, r6
    4d24:	2510      	movs	r5, #16
    4d26:	465e      	mov	r6, fp
    4d28:	e003      	b.n	4d32 <_vfprintf_r+0x33a>
    4d2a:	3c10      	subs	r4, #16
    4d2c:	3108      	adds	r1, #8
    4d2e:	2c10      	cmp	r4, #16
    4d30:	dd17      	ble.n	4d62 <_vfprintf_r+0x36a>
    4d32:	4640      	mov	r0, r8
    4d34:	3210      	adds	r2, #16
    4d36:	3301      	adds	r3, #1
    4d38:	6008      	str	r0, [r1, #0]
    4d3a:	604d      	str	r5, [r1, #4]
    4d3c:	60ba      	str	r2, [r7, #8]
    4d3e:	607b      	str	r3, [r7, #4]
    4d40:	2b07      	cmp	r3, #7
    4d42:	ddf2      	ble.n	4d2a <_vfprintf_r+0x332>
    4d44:	003a      	movs	r2, r7
    4d46:	0031      	movs	r1, r6
    4d48:	9806      	ldr	r0, [sp, #24]
    4d4a:	f004 f8b7 	bl	8ebc <__sprint_r>
    4d4e:	2800      	cmp	r0, #0
    4d50:	d001      	beq.n	4d56 <_vfprintf_r+0x35e>
    4d52:	f000 fccf 	bl	56f4 <_vfprintf_r+0xcfc>
    4d56:	3c10      	subs	r4, #16
    4d58:	68ba      	ldr	r2, [r7, #8]
    4d5a:	687b      	ldr	r3, [r7, #4]
    4d5c:	a932      	add	r1, sp, #200	; 0xc8
    4d5e:	2c10      	cmp	r4, #16
    4d60:	dce7      	bgt.n	4d32 <_vfprintf_r+0x33a>
    4d62:	46b3      	mov	fp, r6
    4d64:	000e      	movs	r6, r1
    4d66:	4641      	mov	r1, r8
    4d68:	6074      	str	r4, [r6, #4]
    4d6a:	3301      	adds	r3, #1
    4d6c:	18a4      	adds	r4, r4, r2
    4d6e:	6031      	str	r1, [r6, #0]
    4d70:	60bc      	str	r4, [r7, #8]
    4d72:	607b      	str	r3, [r7, #4]
    4d74:	2b07      	cmp	r3, #7
    4d76:	dd01      	ble.n	4d7c <_vfprintf_r+0x384>
    4d78:	f000 fcae 	bl	56d8 <_vfprintf_r+0xce0>
    4d7c:	ab16      	add	r3, sp, #88	; 0x58
    4d7e:	7fdb      	ldrb	r3, [r3, #31]
    4d80:	3608      	adds	r6, #8
    4d82:	4698      	mov	r8, r3
    4d84:	e1ca      	b.n	511c <_vfprintf_r+0x724>
    4d86:	46c0      	nop			; (mov r8, r8)
    4d88:	ffffdfff 	.word	0xffffdfff
    4d8c:	0000a0b8 	.word	0x0000a0b8
    4d90:	0000a240 	.word	0x0000a240
    4d94:	0000a260 	.word	0x0000a260
    4d98:	2200      	movs	r2, #0
    4d9a:	9d07      	ldr	r5, [sp, #28]
    4d9c:	3b30      	subs	r3, #48	; 0x30
    4d9e:	46a8      	mov	r8, r5
    4da0:	920b      	str	r2, [sp, #44]	; 0x2c
    4da2:	001a      	movs	r2, r3
    4da4:	9408      	str	r4, [sp, #32]
    4da6:	002c      	movs	r4, r5
    4da8:	4655      	mov	r5, sl
    4daa:	4682      	mov	sl, r0
    4dac:	4640      	mov	r0, r8
    4dae:	4688      	mov	r8, r1
    4db0:	0011      	movs	r1, r2
    4db2:	2200      	movs	r2, #0
    4db4:	0093      	lsls	r3, r2, #2
    4db6:	189a      	adds	r2, r3, r2
    4db8:	7803      	ldrb	r3, [r0, #0]
    4dba:	0052      	lsls	r2, r2, #1
    4dbc:	188a      	adds	r2, r1, r2
    4dbe:	0019      	movs	r1, r3
    4dc0:	3401      	adds	r4, #1
    4dc2:	3930      	subs	r1, #48	; 0x30
    4dc4:	0020      	movs	r0, r4
    4dc6:	2909      	cmp	r1, #9
    4dc8:	d9f4      	bls.n	4db4 <_vfprintf_r+0x3bc>
    4dca:	9407      	str	r4, [sp, #28]
    4dcc:	4650      	mov	r0, sl
    4dce:	9c08      	ldr	r4, [sp, #32]
    4dd0:	920b      	str	r2, [sp, #44]	; 0x2c
    4dd2:	4641      	mov	r1, r8
    4dd4:	46aa      	mov	sl, r5
    4dd6:	e69b      	b.n	4b10 <_vfprintf_r+0x118>
    4dd8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4dda:	9312      	str	r3, [sp, #72]	; 0x48
    4ddc:	6813      	ldr	r3, [r2, #0]
    4dde:	2120      	movs	r1, #32
    4de0:	9308      	str	r3, [sp, #32]
    4de2:	466b      	mov	r3, sp
    4de4:	185b      	adds	r3, r3, r1
    4de6:	781b      	ldrb	r3, [r3, #0]
    4de8:	ad28      	add	r5, sp, #160	; 0xa0
    4dea:	702b      	strb	r3, [r5, #0]
    4dec:	2300      	movs	r3, #0
    4dee:	a916      	add	r1, sp, #88	; 0x58
    4df0:	77cb      	strb	r3, [r1, #31]
    4df2:	0013      	movs	r3, r2
    4df4:	3304      	adds	r3, #4
    4df6:	930f      	str	r3, [sp, #60]	; 0x3c
    4df8:	2300      	movs	r3, #0
    4dfa:	9409      	str	r4, [sp, #36]	; 0x24
    4dfc:	4698      	mov	r8, r3
    4dfe:	3301      	adds	r3, #1
    4e00:	9308      	str	r3, [sp, #32]
    4e02:	930e      	str	r3, [sp, #56]	; 0x38
    4e04:	2300      	movs	r3, #0
    4e06:	9511      	str	r5, [sp, #68]	; 0x44
    4e08:	469a      	mov	sl, r3
    4e0a:	9313      	str	r3, [sp, #76]	; 0x4c
    4e0c:	e76f      	b.n	4cee <_vfprintf_r+0x2f6>
    4e0e:	9312      	str	r3, [sp, #72]	; 0x48
    4e10:	2900      	cmp	r1, #0
    4e12:	d001      	beq.n	4e18 <_vfprintf_r+0x420>
    4e14:	f001 f94d 	bl	60b2 <_vfprintf_r+0x16ba>
    4e18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4e1a:	06a3      	lsls	r3, r4, #26
    4e1c:	d501      	bpl.n	4e22 <_vfprintf_r+0x42a>
    4e1e:	f000 fd5a 	bl	58d6 <_vfprintf_r+0xede>
    4e22:	06e3      	lsls	r3, r4, #27
    4e24:	d501      	bpl.n	4e2a <_vfprintf_r+0x432>
    4e26:	f000 fcab 	bl	5780 <_vfprintf_r+0xd88>
    4e2a:	0663      	lsls	r3, r4, #25
    4e2c:	d401      	bmi.n	4e32 <_vfprintf_r+0x43a>
    4e2e:	f000 fca7 	bl	5780 <_vfprintf_r+0xd88>
    4e32:	2100      	movs	r1, #0
    4e34:	5e53      	ldrsh	r3, [r2, r1]
    4e36:	930c      	str	r3, [sp, #48]	; 0x30
    4e38:	3204      	adds	r2, #4
    4e3a:	17db      	asrs	r3, r3, #31
    4e3c:	930d      	str	r3, [sp, #52]	; 0x34
    4e3e:	920f      	str	r2, [sp, #60]	; 0x3c
    4e40:	2b00      	cmp	r3, #0
    4e42:	da01      	bge.n	4e48 <_vfprintf_r+0x450>
    4e44:	f000 fdb2 	bl	59ac <_vfprintf_r+0xfb4>
    4e48:	990c      	ldr	r1, [sp, #48]	; 0x30
    4e4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4e4c:	0008      	movs	r0, r1
    4e4e:	4651      	mov	r1, sl
    4e50:	ab16      	add	r3, sp, #88	; 0x58
    4e52:	7fdb      	ldrb	r3, [r3, #31]
    4e54:	4310      	orrs	r0, r2
    4e56:	4698      	mov	r8, r3
    4e58:	0002      	movs	r2, r0
    4e5a:	2301      	movs	r3, #1
    4e5c:	3101      	adds	r1, #1
    4e5e:	d000      	beq.n	4e62 <_vfprintf_r+0x46a>
    4e60:	e718      	b.n	4c94 <_vfprintf_r+0x29c>
    4e62:	2a00      	cmp	r2, #0
    4e64:	d100      	bne.n	4e68 <_vfprintf_r+0x470>
    4e66:	e35a      	b.n	551e <_vfprintf_r+0xb26>
    4e68:	9409      	str	r4, [sp, #36]	; 0x24
    4e6a:	2b01      	cmp	r3, #1
    4e6c:	d101      	bne.n	4e72 <_vfprintf_r+0x47a>
    4e6e:	f000 fc06 	bl	567e <_vfprintf_r+0xc86>
    4e72:	2b02      	cmp	r3, #2
    4e74:	d000      	beq.n	4e78 <_vfprintf_r+0x480>
    4e76:	e380      	b.n	557a <_vfprintf_r+0xb82>
    4e78:	9c19      	ldr	r4, [sp, #100]	; 0x64
    4e7a:	200f      	movs	r0, #15
    4e7c:	46a1      	mov	r9, r4
    4e7e:	46b4      	mov	ip, r6
    4e80:	ab32      	add	r3, sp, #200	; 0xc8
    4e82:	0019      	movs	r1, r3
    4e84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4e86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4e88:	0004      	movs	r4, r0
    4e8a:	464d      	mov	r5, r9
    4e8c:	4014      	ands	r4, r2
    4e8e:	5d2c      	ldrb	r4, [r5, r4]
    4e90:	071e      	lsls	r6, r3, #28
    4e92:	0915      	lsrs	r5, r2, #4
    4e94:	3901      	subs	r1, #1
    4e96:	432e      	orrs	r6, r5
    4e98:	700c      	strb	r4, [r1, #0]
    4e9a:	091c      	lsrs	r4, r3, #4
    4e9c:	0023      	movs	r3, r4
    4e9e:	0034      	movs	r4, r6
    4ea0:	0032      	movs	r2, r6
    4ea2:	431c      	orrs	r4, r3
    4ea4:	d1f0      	bne.n	4e88 <_vfprintf_r+0x490>
    4ea6:	920c      	str	r2, [sp, #48]	; 0x30
    4ea8:	930d      	str	r3, [sp, #52]	; 0x34
    4eaa:	ab32      	add	r3, sp, #200	; 0xc8
    4eac:	1a5b      	subs	r3, r3, r1
    4eae:	9111      	str	r1, [sp, #68]	; 0x44
    4eb0:	4666      	mov	r6, ip
    4eb2:	930e      	str	r3, [sp, #56]	; 0x38
    4eb4:	e70d      	b.n	4cd2 <_vfprintf_r+0x2da>
    4eb6:	4663      	mov	r3, ip
    4eb8:	431c      	orrs	r4, r3
    4eba:	9b07      	ldr	r3, [sp, #28]
    4ebc:	781b      	ldrb	r3, [r3, #0]
    4ebe:	e624      	b.n	4b0a <_vfprintf_r+0x112>
    4ec0:	9b07      	ldr	r3, [sp, #28]
    4ec2:	781b      	ldrb	r3, [r3, #0]
    4ec4:	2b6c      	cmp	r3, #108	; 0x6c
    4ec6:	d101      	bne.n	4ecc <_vfprintf_r+0x4d4>
    4ec8:	f000 fe8c 	bl	5be4 <_vfprintf_r+0x11ec>
    4ecc:	2210      	movs	r2, #16
    4ece:	4314      	orrs	r4, r2
    4ed0:	e61b      	b.n	4b0a <_vfprintf_r+0x112>
    4ed2:	2900      	cmp	r1, #0
    4ed4:	d001      	beq.n	4eda <_vfprintf_r+0x4e2>
    4ed6:	f001 f8d5 	bl	6084 <_vfprintf_r+0x168c>
    4eda:	06a3      	lsls	r3, r4, #26
    4edc:	d501      	bpl.n	4ee2 <_vfprintf_r+0x4ea>
    4ede:	f000 fe76 	bl	5bce <_vfprintf_r+0x11d6>
    4ee2:	06e3      	lsls	r3, r4, #27
    4ee4:	d500      	bpl.n	4ee8 <_vfprintf_r+0x4f0>
    4ee6:	e110      	b.n	510a <_vfprintf_r+0x712>
    4ee8:	0663      	lsls	r3, r4, #25
    4eea:	d400      	bmi.n	4eee <_vfprintf_r+0x4f6>
    4eec:	e10d      	b.n	510a <_vfprintf_r+0x712>
    4eee:	4669      	mov	r1, sp
    4ef0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4ef2:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    4ef4:	681a      	ldr	r2, [r3, #0]
    4ef6:	3304      	adds	r3, #4
    4ef8:	9208      	str	r2, [sp, #32]
    4efa:	8011      	strh	r1, [r2, #0]
    4efc:	930f      	str	r3, [sp, #60]	; 0x3c
    4efe:	e5c9      	b.n	4a94 <_vfprintf_r+0x9c>
    4f00:	990f      	ldr	r1, [sp, #60]	; 0x3c
    4f02:	2230      	movs	r2, #48	; 0x30
    4f04:	680b      	ldr	r3, [r1, #0]
    4f06:	930c      	str	r3, [sp, #48]	; 0x30
    4f08:	2300      	movs	r3, #0
    4f0a:	930d      	str	r3, [sp, #52]	; 0x34
    4f0c:	3302      	adds	r3, #2
    4f0e:	431c      	orrs	r4, r3
    4f10:	ab1e      	add	r3, sp, #120	; 0x78
    4f12:	701a      	strb	r2, [r3, #0]
    4f14:	3248      	adds	r2, #72	; 0x48
    4f16:	705a      	strb	r2, [r3, #1]
    4f18:	000b      	movs	r3, r1
    4f1a:	3304      	adds	r3, #4
    4f1c:	930f      	str	r3, [sp, #60]	; 0x3c
    4f1e:	4bc1      	ldr	r3, [pc, #772]	; (5224 <_vfprintf_r+0x82c>)
    4f20:	9212      	str	r2, [sp, #72]	; 0x48
    4f22:	9319      	str	r3, [sp, #100]	; 0x64
    4f24:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4f26:	2302      	movs	r3, #2
    4f28:	e6ac      	b.n	4c84 <_vfprintf_r+0x28c>
    4f2a:	464b      	mov	r3, r9
    4f2c:	431c      	orrs	r4, r3
    4f2e:	9b07      	ldr	r3, [sp, #28]
    4f30:	781b      	ldrb	r3, [r3, #0]
    4f32:	e5ea      	b.n	4b0a <_vfprintf_r+0x112>
    4f34:	9312      	str	r3, [sp, #72]	; 0x48
    4f36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4f38:	a916      	add	r1, sp, #88	; 0x58
    4f3a:	1d1d      	adds	r5, r3, #4
    4f3c:	681b      	ldr	r3, [r3, #0]
    4f3e:	001a      	movs	r2, r3
    4f40:	9311      	str	r3, [sp, #68]	; 0x44
    4f42:	2300      	movs	r3, #0
    4f44:	77cb      	strb	r3, [r1, #31]
    4f46:	2a00      	cmp	r2, #0
    4f48:	d101      	bne.n	4f4e <_vfprintf_r+0x556>
    4f4a:	f000 ff01 	bl	5d50 <_vfprintf_r+0x1358>
    4f4e:	4653      	mov	r3, sl
    4f50:	3301      	adds	r3, #1
    4f52:	d101      	bne.n	4f58 <_vfprintf_r+0x560>
    4f54:	f000 fe64 	bl	5c20 <_vfprintf_r+0x1228>
    4f58:	4652      	mov	r2, sl
    4f5a:	2100      	movs	r1, #0
    4f5c:	9811      	ldr	r0, [sp, #68]	; 0x44
    4f5e:	f003 f965 	bl	822c <memchr>
    4f62:	2800      	cmp	r0, #0
    4f64:	d101      	bne.n	4f6a <_vfprintf_r+0x572>
    4f66:	f000 ff78 	bl	5e5a <_vfprintf_r+0x1462>
    4f6a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4f6c:	1ac3      	subs	r3, r0, r3
    4f6e:	001a      	movs	r2, r3
    4f70:	930e      	str	r3, [sp, #56]	; 0x38
    4f72:	43db      	mvns	r3, r3
    4f74:	17db      	asrs	r3, r3, #31
    4f76:	401a      	ands	r2, r3
    4f78:	ab16      	add	r3, sp, #88	; 0x58
    4f7a:	7fdb      	ldrb	r3, [r3, #31]
    4f7c:	9208      	str	r2, [sp, #32]
    4f7e:	4698      	mov	r8, r3
    4f80:	2300      	movs	r3, #0
    4f82:	950f      	str	r5, [sp, #60]	; 0x3c
    4f84:	9409      	str	r4, [sp, #36]	; 0x24
    4f86:	469a      	mov	sl, r3
    4f88:	9313      	str	r3, [sp, #76]	; 0x4c
    4f8a:	e6aa      	b.n	4ce2 <_vfprintf_r+0x2ea>
    4f8c:	2308      	movs	r3, #8
    4f8e:	431c      	orrs	r4, r3
    4f90:	9b07      	ldr	r3, [sp, #28]
    4f92:	781b      	ldrb	r3, [r3, #0]
    4f94:	e5b9      	b.n	4b0a <_vfprintf_r+0x112>
    4f96:	9312      	str	r3, [sp, #72]	; 0x48
    4f98:	2310      	movs	r3, #16
    4f9a:	431c      	orrs	r4, r3
    4f9c:	06a3      	lsls	r3, r4, #26
    4f9e:	d501      	bpl.n	4fa4 <_vfprintf_r+0x5ac>
    4fa0:	f000 fca7 	bl	58f2 <_vfprintf_r+0xefa>
    4fa4:	06e3      	lsls	r3, r4, #27
    4fa6:	d500      	bpl.n	4faa <_vfprintf_r+0x5b2>
    4fa8:	e3ee      	b.n	5788 <_vfprintf_r+0xd90>
    4faa:	0663      	lsls	r3, r4, #25
    4fac:	d400      	bmi.n	4fb0 <_vfprintf_r+0x5b8>
    4fae:	e3eb      	b.n	5788 <_vfprintf_r+0xd90>
    4fb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4fb2:	881a      	ldrh	r2, [r3, #0]
    4fb4:	920c      	str	r2, [sp, #48]	; 0x30
    4fb6:	2200      	movs	r2, #0
    4fb8:	3304      	adds	r3, #4
    4fba:	920d      	str	r2, [sp, #52]	; 0x34
    4fbc:	930f      	str	r3, [sp, #60]	; 0x3c
    4fbe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4fc0:	2300      	movs	r3, #0
    4fc2:	e65f      	b.n	4c84 <_vfprintf_r+0x28c>
    4fc4:	9312      	str	r3, [sp, #72]	; 0x48
    4fc6:	2310      	movs	r3, #16
    4fc8:	431c      	orrs	r4, r3
    4fca:	06a3      	lsls	r3, r4, #26
    4fcc:	d501      	bpl.n	4fd2 <_vfprintf_r+0x5da>
    4fce:	f000 fcba 	bl	5946 <_vfprintf_r+0xf4e>
    4fd2:	06e3      	lsls	r3, r4, #27
    4fd4:	d500      	bpl.n	4fd8 <_vfprintf_r+0x5e0>
    4fd6:	e3da      	b.n	578e <_vfprintf_r+0xd96>
    4fd8:	0663      	lsls	r3, r4, #25
    4fda:	d400      	bmi.n	4fde <_vfprintf_r+0x5e6>
    4fdc:	e3d7      	b.n	578e <_vfprintf_r+0xd96>
    4fde:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4fe0:	881a      	ldrh	r2, [r3, #0]
    4fe2:	920c      	str	r2, [sp, #48]	; 0x30
    4fe4:	2200      	movs	r2, #0
    4fe6:	3304      	adds	r3, #4
    4fe8:	920d      	str	r2, [sp, #52]	; 0x34
    4fea:	930f      	str	r3, [sp, #60]	; 0x3c
    4fec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4fee:	2301      	movs	r3, #1
    4ff0:	e648      	b.n	4c84 <_vfprintf_r+0x28c>
    4ff2:	9312      	str	r3, [sp, #72]	; 0x48
    4ff4:	2900      	cmp	r1, #0
    4ff6:	d001      	beq.n	4ffc <_vfprintf_r+0x604>
    4ff8:	f001 f857 	bl	60aa <_vfprintf_r+0x16b2>
    4ffc:	4b8a      	ldr	r3, [pc, #552]	; (5228 <_vfprintf_r+0x830>)
    4ffe:	9319      	str	r3, [sp, #100]	; 0x64
    5000:	e618      	b.n	4c34 <_vfprintf_r+0x23c>
    5002:	2301      	movs	r3, #1
    5004:	431c      	orrs	r4, r3
    5006:	9b07      	ldr	r3, [sp, #28]
    5008:	781b      	ldrb	r3, [r3, #0]
    500a:	e57e      	b.n	4b0a <_vfprintf_r+0x112>
    500c:	2380      	movs	r3, #128	; 0x80
    500e:	431c      	orrs	r4, r3
    5010:	9b07      	ldr	r3, [sp, #28]
    5012:	781b      	ldrb	r3, [r3, #0]
    5014:	e579      	b.n	4b0a <_vfprintf_r+0x112>
    5016:	9b07      	ldr	r3, [sp, #28]
    5018:	781b      	ldrb	r3, [r3, #0]
    501a:	2800      	cmp	r0, #0
    501c:	d000      	beq.n	5020 <_vfprintf_r+0x628>
    501e:	e574      	b.n	4b0a <_vfprintf_r+0x112>
    5020:	2101      	movs	r1, #1
    5022:	3020      	adds	r0, #32
    5024:	e571      	b.n	4b0a <_vfprintf_r+0x112>
    5026:	9312      	str	r3, [sp, #72]	; 0x48
    5028:	2900      	cmp	r1, #0
    502a:	d001      	beq.n	5030 <_vfprintf_r+0x638>
    502c:	f001 f839 	bl	60a2 <_vfprintf_r+0x16aa>
    5030:	2207      	movs	r2, #7
    5032:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5034:	3307      	adds	r3, #7
    5036:	4393      	bics	r3, r2
    5038:	3201      	adds	r2, #1
    503a:	4694      	mov	ip, r2
    503c:	449c      	add	ip, r3
    503e:	4662      	mov	r2, ip
    5040:	920f      	str	r2, [sp, #60]	; 0x3c
    5042:	681a      	ldr	r2, [r3, #0]
    5044:	9216      	str	r2, [sp, #88]	; 0x58
    5046:	685b      	ldr	r3, [r3, #4]
    5048:	2201      	movs	r2, #1
    504a:	9315      	str	r3, [sp, #84]	; 0x54
    504c:	9b15      	ldr	r3, [sp, #84]	; 0x54
    504e:	9d16      	ldr	r5, [sp, #88]	; 0x58
    5050:	005b      	lsls	r3, r3, #1
    5052:	085b      	lsrs	r3, r3, #1
    5054:	4698      	mov	r8, r3
    5056:	4252      	negs	r2, r2
    5058:	4b74      	ldr	r3, [pc, #464]	; (522c <_vfprintf_r+0x834>)
    505a:	0028      	movs	r0, r5
    505c:	4641      	mov	r1, r8
    505e:	f004 fde7 	bl	9c30 <__aeabi_dcmpun>
    5062:	2800      	cmp	r0, #0
    5064:	d001      	beq.n	506a <_vfprintf_r+0x672>
    5066:	f000 fcb4 	bl	59d2 <_vfprintf_r+0xfda>
    506a:	2201      	movs	r2, #1
    506c:	4b6f      	ldr	r3, [pc, #444]	; (522c <_vfprintf_r+0x834>)
    506e:	4252      	negs	r2, r2
    5070:	0028      	movs	r0, r5
    5072:	4641      	mov	r1, r8
    5074:	f7ff f9aa 	bl	43cc <__aeabi_dcmple>
    5078:	2800      	cmp	r0, #0
    507a:	d001      	beq.n	5080 <_vfprintf_r+0x688>
    507c:	f000 fca9 	bl	59d2 <_vfprintf_r+0xfda>
    5080:	2200      	movs	r2, #0
    5082:	2300      	movs	r3, #0
    5084:	9816      	ldr	r0, [sp, #88]	; 0x58
    5086:	9915      	ldr	r1, [sp, #84]	; 0x54
    5088:	f7ff f996 	bl	43b8 <__aeabi_dcmplt>
    508c:	2800      	cmp	r0, #0
    508e:	d001      	beq.n	5094 <_vfprintf_r+0x69c>
    5090:	f000 fd55 	bl	5b3e <_vfprintf_r+0x1146>
    5094:	ab16      	add	r3, sp, #88	; 0x58
    5096:	7fdb      	ldrb	r3, [r3, #31]
    5098:	4698      	mov	r8, r3
    509a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    509c:	2b47      	cmp	r3, #71	; 0x47
    509e:	dd01      	ble.n	50a4 <_vfprintf_r+0x6ac>
    50a0:	f000 fdb4 	bl	5c0c <_vfprintf_r+0x1214>
    50a4:	4b62      	ldr	r3, [pc, #392]	; (5230 <_vfprintf_r+0x838>)
    50a6:	9311      	str	r3, [sp, #68]	; 0x44
    50a8:	2380      	movs	r3, #128	; 0x80
    50aa:	439c      	bics	r4, r3
    50ac:	3b7d      	subs	r3, #125	; 0x7d
    50ae:	9308      	str	r3, [sp, #32]
    50b0:	930e      	str	r3, [sp, #56]	; 0x38
    50b2:	2300      	movs	r3, #0
    50b4:	9409      	str	r4, [sp, #36]	; 0x24
    50b6:	469a      	mov	sl, r3
    50b8:	9313      	str	r3, [sp, #76]	; 0x4c
    50ba:	e612      	b.n	4ce2 <_vfprintf_r+0x2ea>
    50bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    50be:	1d1a      	adds	r2, r3, #4
    50c0:	681b      	ldr	r3, [r3, #0]
    50c2:	930b      	str	r3, [sp, #44]	; 0x2c
    50c4:	2b00      	cmp	r3, #0
    50c6:	da00      	bge.n	50ca <_vfprintf_r+0x6d2>
    50c8:	e578      	b.n	4bbc <_vfprintf_r+0x1c4>
    50ca:	9b07      	ldr	r3, [sp, #28]
    50cc:	920f      	str	r2, [sp, #60]	; 0x3c
    50ce:	781b      	ldrb	r3, [r3, #0]
    50d0:	e51b      	b.n	4b0a <_vfprintf_r+0x112>
    50d2:	9312      	str	r3, [sp, #72]	; 0x48
    50d4:	2900      	cmp	r1, #0
    50d6:	d001      	beq.n	50dc <_vfprintf_r+0x6e4>
    50d8:	f000 ffcc 	bl	6074 <_vfprintf_r+0x167c>
    50dc:	2310      	movs	r3, #16
    50de:	431c      	orrs	r4, r3
    50e0:	e69a      	b.n	4e18 <_vfprintf_r+0x420>
    50e2:	9312      	str	r3, [sp, #72]	; 0x48
    50e4:	e771      	b.n	4fca <_vfprintf_r+0x5d2>
    50e6:	9312      	str	r3, [sp, #72]	; 0x48
    50e8:	e758      	b.n	4f9c <_vfprintf_r+0x5a4>
    50ea:	9312      	str	r3, [sp, #72]	; 0x48
    50ec:	2900      	cmp	r1, #0
    50ee:	d001      	beq.n	50f4 <_vfprintf_r+0x6fc>
    50f0:	f000 ffd3 	bl	609a <_vfprintf_r+0x16a2>
    50f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    50f6:	2b00      	cmp	r3, #0
    50f8:	d100      	bne.n	50fc <_vfprintf_r+0x704>
    50fa:	e18d      	b.n	5418 <_vfprintf_r+0xa20>
    50fc:	ad28      	add	r5, sp, #160	; 0xa0
    50fe:	702b      	strb	r3, [r5, #0]
    5100:	2300      	movs	r3, #0
    5102:	aa16      	add	r2, sp, #88	; 0x58
    5104:	77d3      	strb	r3, [r2, #31]
    5106:	9409      	str	r4, [sp, #36]	; 0x24
    5108:	e678      	b.n	4dfc <_vfprintf_r+0x404>
    510a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    510c:	990a      	ldr	r1, [sp, #40]	; 0x28
    510e:	6813      	ldr	r3, [r2, #0]
    5110:	6019      	str	r1, [r3, #0]
    5112:	0013      	movs	r3, r2
    5114:	3304      	adds	r3, #4
    5116:	930f      	str	r3, [sp, #60]	; 0x3c
    5118:	e4bc      	b.n	4a94 <_vfprintf_r+0x9c>
    511a:	68bc      	ldr	r4, [r7, #8]
    511c:	4643      	mov	r3, r8
    511e:	2b00      	cmp	r3, #0
    5120:	d00f      	beq.n	5142 <_vfprintf_r+0x74a>
    5122:	aa16      	add	r2, sp, #88	; 0x58
    5124:	231f      	movs	r3, #31
    5126:	4694      	mov	ip, r2
    5128:	4463      	add	r3, ip
    512a:	6033      	str	r3, [r6, #0]
    512c:	2301      	movs	r3, #1
    512e:	6073      	str	r3, [r6, #4]
    5130:	687b      	ldr	r3, [r7, #4]
    5132:	3401      	adds	r4, #1
    5134:	3301      	adds	r3, #1
    5136:	60bc      	str	r4, [r7, #8]
    5138:	607b      	str	r3, [r7, #4]
    513a:	2b07      	cmp	r3, #7
    513c:	dd00      	ble.n	5140 <_vfprintf_r+0x748>
    513e:	e203      	b.n	5548 <_vfprintf_r+0xb50>
    5140:	3608      	adds	r6, #8
    5142:	464b      	mov	r3, r9
    5144:	2b00      	cmp	r3, #0
    5146:	d00c      	beq.n	5162 <_vfprintf_r+0x76a>
    5148:	ab1e      	add	r3, sp, #120	; 0x78
    514a:	6033      	str	r3, [r6, #0]
    514c:	2302      	movs	r3, #2
    514e:	6073      	str	r3, [r6, #4]
    5150:	687b      	ldr	r3, [r7, #4]
    5152:	3402      	adds	r4, #2
    5154:	3301      	adds	r3, #1
    5156:	60bc      	str	r4, [r7, #8]
    5158:	607b      	str	r3, [r7, #4]
    515a:	2b07      	cmp	r3, #7
    515c:	dd00      	ble.n	5160 <_vfprintf_r+0x768>
    515e:	e1fd      	b.n	555c <_vfprintf_r+0xb64>
    5160:	3608      	adds	r6, #8
    5162:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5164:	2b80      	cmp	r3, #128	; 0x80
    5166:	d100      	bne.n	516a <_vfprintf_r+0x772>
    5168:	e173      	b.n	5452 <_vfprintf_r+0xa5a>
    516a:	4653      	mov	r3, sl
    516c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    516e:	1a9d      	subs	r5, r3, r2
    5170:	2d00      	cmp	r5, #0
    5172:	dd32      	ble.n	51da <_vfprintf_r+0x7e2>
    5174:	4a2f      	ldr	r2, [pc, #188]	; (5234 <_vfprintf_r+0x83c>)
    5176:	687b      	ldr	r3, [r7, #4]
    5178:	4691      	mov	r9, r2
    517a:	2d10      	cmp	r5, #16
    517c:	dd22      	ble.n	51c4 <_vfprintf_r+0x7cc>
    517e:	2210      	movs	r2, #16
    5180:	4692      	mov	sl, r2
    5182:	0022      	movs	r2, r4
    5184:	465c      	mov	r4, fp
    5186:	e003      	b.n	5190 <_vfprintf_r+0x798>
    5188:	3d10      	subs	r5, #16
    518a:	3608      	adds	r6, #8
    518c:	2d10      	cmp	r5, #16
    518e:	dd17      	ble.n	51c0 <_vfprintf_r+0x7c8>
    5190:	4649      	mov	r1, r9
    5192:	6031      	str	r1, [r6, #0]
    5194:	4651      	mov	r1, sl
    5196:	3210      	adds	r2, #16
    5198:	3301      	adds	r3, #1
    519a:	6071      	str	r1, [r6, #4]
    519c:	60ba      	str	r2, [r7, #8]
    519e:	607b      	str	r3, [r7, #4]
    51a0:	2b07      	cmp	r3, #7
    51a2:	ddf1      	ble.n	5188 <_vfprintf_r+0x790>
    51a4:	003a      	movs	r2, r7
    51a6:	0021      	movs	r1, r4
    51a8:	9806      	ldr	r0, [sp, #24]
    51aa:	f003 fe87 	bl	8ebc <__sprint_r>
    51ae:	2800      	cmp	r0, #0
    51b0:	d000      	beq.n	51b4 <_vfprintf_r+0x7bc>
    51b2:	e18a      	b.n	54ca <_vfprintf_r+0xad2>
    51b4:	3d10      	subs	r5, #16
    51b6:	68ba      	ldr	r2, [r7, #8]
    51b8:	687b      	ldr	r3, [r7, #4]
    51ba:	ae32      	add	r6, sp, #200	; 0xc8
    51bc:	2d10      	cmp	r5, #16
    51be:	dce7      	bgt.n	5190 <_vfprintf_r+0x798>
    51c0:	46a3      	mov	fp, r4
    51c2:	0014      	movs	r4, r2
    51c4:	464a      	mov	r2, r9
    51c6:	1964      	adds	r4, r4, r5
    51c8:	3301      	adds	r3, #1
    51ca:	6032      	str	r2, [r6, #0]
    51cc:	6075      	str	r5, [r6, #4]
    51ce:	60bc      	str	r4, [r7, #8]
    51d0:	607b      	str	r3, [r7, #4]
    51d2:	2b07      	cmp	r3, #7
    51d4:	dd00      	ble.n	51d8 <_vfprintf_r+0x7e0>
    51d6:	e1ad      	b.n	5534 <_vfprintf_r+0xb3c>
    51d8:	3608      	adds	r6, #8
    51da:	9b09      	ldr	r3, [sp, #36]	; 0x24
    51dc:	05db      	lsls	r3, r3, #23
    51de:	d500      	bpl.n	51e2 <_vfprintf_r+0x7ea>
    51e0:	e0be      	b.n	5360 <_vfprintf_r+0x968>
    51e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    51e4:	6033      	str	r3, [r6, #0]
    51e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    51e8:	469c      	mov	ip, r3
    51ea:	6073      	str	r3, [r6, #4]
    51ec:	687b      	ldr	r3, [r7, #4]
    51ee:	4464      	add	r4, ip
    51f0:	3301      	adds	r3, #1
    51f2:	60bc      	str	r4, [r7, #8]
    51f4:	607b      	str	r3, [r7, #4]
    51f6:	2b07      	cmp	r3, #7
    51f8:	dd00      	ble.n	51fc <_vfprintf_r+0x804>
    51fa:	e0a6      	b.n	534a <_vfprintf_r+0x952>
    51fc:	3608      	adds	r6, #8
    51fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5200:	075b      	lsls	r3, r3, #29
    5202:	d54a      	bpl.n	529a <_vfprintf_r+0x8a2>
    5204:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5206:	9a08      	ldr	r2, [sp, #32]
    5208:	1a9d      	subs	r5, r3, r2
    520a:	2d00      	cmp	r5, #0
    520c:	dd45      	ble.n	529a <_vfprintf_r+0x8a2>
    520e:	4a0a      	ldr	r2, [pc, #40]	; (5238 <_vfprintf_r+0x840>)
    5210:	687b      	ldr	r3, [r7, #4]
    5212:	4690      	mov	r8, r2
    5214:	2d10      	cmp	r5, #16
    5216:	dd2f      	ble.n	5278 <_vfprintf_r+0x880>
    5218:	2210      	movs	r2, #16
    521a:	4691      	mov	r9, r2
    521c:	0022      	movs	r2, r4
    521e:	465c      	mov	r4, fp
    5220:	e010      	b.n	5244 <_vfprintf_r+0x84c>
    5222:	46c0      	nop			; (mov r8, r8)
    5224:	0000a240 	.word	0x0000a240
    5228:	0000a22c 	.word	0x0000a22c
    522c:	7fefffff 	.word	0x7fefffff
    5230:	0000a21c 	.word	0x0000a21c
    5234:	0000a270 	.word	0x0000a270
    5238:	0000a260 	.word	0x0000a260
    523c:	3d10      	subs	r5, #16
    523e:	3608      	adds	r6, #8
    5240:	2d10      	cmp	r5, #16
    5242:	dd17      	ble.n	5274 <_vfprintf_r+0x87c>
    5244:	49d1      	ldr	r1, [pc, #836]	; (558c <_vfprintf_r+0xb94>)
    5246:	3210      	adds	r2, #16
    5248:	6031      	str	r1, [r6, #0]
    524a:	4649      	mov	r1, r9
    524c:	3301      	adds	r3, #1
    524e:	6071      	str	r1, [r6, #4]
    5250:	60ba      	str	r2, [r7, #8]
    5252:	607b      	str	r3, [r7, #4]
    5254:	2b07      	cmp	r3, #7
    5256:	ddf1      	ble.n	523c <_vfprintf_r+0x844>
    5258:	003a      	movs	r2, r7
    525a:	0021      	movs	r1, r4
    525c:	9806      	ldr	r0, [sp, #24]
    525e:	f003 fe2d 	bl	8ebc <__sprint_r>
    5262:	2800      	cmp	r0, #0
    5264:	d000      	beq.n	5268 <_vfprintf_r+0x870>
    5266:	e130      	b.n	54ca <_vfprintf_r+0xad2>
    5268:	3d10      	subs	r5, #16
    526a:	68ba      	ldr	r2, [r7, #8]
    526c:	687b      	ldr	r3, [r7, #4]
    526e:	ae32      	add	r6, sp, #200	; 0xc8
    5270:	2d10      	cmp	r5, #16
    5272:	dce7      	bgt.n	5244 <_vfprintf_r+0x84c>
    5274:	46a3      	mov	fp, r4
    5276:	0014      	movs	r4, r2
    5278:	4642      	mov	r2, r8
    527a:	1964      	adds	r4, r4, r5
    527c:	3301      	adds	r3, #1
    527e:	c624      	stmia	r6!, {r2, r5}
    5280:	60bc      	str	r4, [r7, #8]
    5282:	607b      	str	r3, [r7, #4]
    5284:	2b07      	cmp	r3, #7
    5286:	dd08      	ble.n	529a <_vfprintf_r+0x8a2>
    5288:	003a      	movs	r2, r7
    528a:	4659      	mov	r1, fp
    528c:	9806      	ldr	r0, [sp, #24]
    528e:	f003 fe15 	bl	8ebc <__sprint_r>
    5292:	2800      	cmp	r0, #0
    5294:	d000      	beq.n	5298 <_vfprintf_r+0x8a0>
    5296:	e13f      	b.n	5518 <_vfprintf_r+0xb20>
    5298:	68bc      	ldr	r4, [r7, #8]
    529a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    529c:	9908      	ldr	r1, [sp, #32]
    529e:	428b      	cmp	r3, r1
    52a0:	da00      	bge.n	52a4 <_vfprintf_r+0x8ac>
    52a2:	000b      	movs	r3, r1
    52a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    52a6:	4694      	mov	ip, r2
    52a8:	449c      	add	ip, r3
    52aa:	4663      	mov	r3, ip
    52ac:	930a      	str	r3, [sp, #40]	; 0x28
    52ae:	2c00      	cmp	r4, #0
    52b0:	d000      	beq.n	52b4 <_vfprintf_r+0x8bc>
    52b2:	e129      	b.n	5508 <_vfprintf_r+0xb10>
    52b4:	2300      	movs	r3, #0
    52b6:	ae32      	add	r6, sp, #200	; 0xc8
    52b8:	607b      	str	r3, [r7, #4]
    52ba:	f7ff fbeb 	bl	4a94 <_vfprintf_r+0x9c>
    52be:	9b14      	ldr	r3, [sp, #80]	; 0x50
    52c0:	2b01      	cmp	r3, #1
    52c2:	dc00      	bgt.n	52c6 <_vfprintf_r+0x8ce>
    52c4:	e103      	b.n	54ce <_vfprintf_r+0xad6>
    52c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    52c8:	3401      	adds	r4, #1
    52ca:	6033      	str	r3, [r6, #0]
    52cc:	2301      	movs	r3, #1
    52ce:	6073      	str	r3, [r6, #4]
    52d0:	687b      	ldr	r3, [r7, #4]
    52d2:	60bc      	str	r4, [r7, #8]
    52d4:	3301      	adds	r3, #1
    52d6:	607b      	str	r3, [r7, #4]
    52d8:	2b07      	cmp	r3, #7
    52da:	dd00      	ble.n	52de <_vfprintf_r+0x8e6>
    52dc:	e2ef      	b.n	58be <_vfprintf_r+0xec6>
    52de:	3608      	adds	r6, #8
    52e0:	9a18      	ldr	r2, [sp, #96]	; 0x60
    52e2:	3301      	adds	r3, #1
    52e4:	6032      	str	r2, [r6, #0]
    52e6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    52e8:	4698      	mov	r8, r3
    52ea:	4694      	mov	ip, r2
    52ec:	4464      	add	r4, ip
    52ee:	6072      	str	r2, [r6, #4]
    52f0:	60bc      	str	r4, [r7, #8]
    52f2:	607b      	str	r3, [r7, #4]
    52f4:	2b07      	cmp	r3, #7
    52f6:	dd00      	ble.n	52fa <_vfprintf_r+0x902>
    52f8:	e318      	b.n	592c <_vfprintf_r+0xf34>
    52fa:	3608      	adds	r6, #8
    52fc:	2200      	movs	r2, #0
    52fe:	2300      	movs	r3, #0
    5300:	9816      	ldr	r0, [sp, #88]	; 0x58
    5302:	9915      	ldr	r1, [sp, #84]	; 0x54
    5304:	f7ff f852 	bl	43ac <__aeabi_dcmpeq>
    5308:	2800      	cmp	r0, #0
    530a:	d000      	beq.n	530e <_vfprintf_r+0x916>
    530c:	e1f4      	b.n	56f8 <_vfprintf_r+0xd00>
    530e:	9d11      	ldr	r5, [sp, #68]	; 0x44
    5310:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5312:	3501      	adds	r5, #1
    5314:	3b01      	subs	r3, #1
    5316:	6035      	str	r5, [r6, #0]
    5318:	6073      	str	r3, [r6, #4]
    531a:	18e4      	adds	r4, r4, r3
    531c:	2301      	movs	r3, #1
    531e:	469c      	mov	ip, r3
    5320:	44e0      	add	r8, ip
    5322:	4643      	mov	r3, r8
    5324:	60bc      	str	r4, [r7, #8]
    5326:	607b      	str	r3, [r7, #4]
    5328:	2b07      	cmp	r3, #7
    532a:	dd00      	ble.n	532e <_vfprintf_r+0x936>
    532c:	e0e0      	b.n	54f0 <_vfprintf_r+0xaf8>
    532e:	3608      	adds	r6, #8
    5330:	ab21      	add	r3, sp, #132	; 0x84
    5332:	6033      	str	r3, [r6, #0]
    5334:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    5336:	469c      	mov	ip, r3
    5338:	6073      	str	r3, [r6, #4]
    533a:	4643      	mov	r3, r8
    533c:	4464      	add	r4, ip
    533e:	3301      	adds	r3, #1
    5340:	60bc      	str	r4, [r7, #8]
    5342:	607b      	str	r3, [r7, #4]
    5344:	2b07      	cmp	r3, #7
    5346:	dc00      	bgt.n	534a <_vfprintf_r+0x952>
    5348:	e758      	b.n	51fc <_vfprintf_r+0x804>
    534a:	003a      	movs	r2, r7
    534c:	4659      	mov	r1, fp
    534e:	9806      	ldr	r0, [sp, #24]
    5350:	f003 fdb4 	bl	8ebc <__sprint_r>
    5354:	2800      	cmp	r0, #0
    5356:	d000      	beq.n	535a <_vfprintf_r+0x962>
    5358:	e0de      	b.n	5518 <_vfprintf_r+0xb20>
    535a:	68bc      	ldr	r4, [r7, #8]
    535c:	ae32      	add	r6, sp, #200	; 0xc8
    535e:	e74e      	b.n	51fe <_vfprintf_r+0x806>
    5360:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5362:	2b65      	cmp	r3, #101	; 0x65
    5364:	ddab      	ble.n	52be <_vfprintf_r+0x8c6>
    5366:	2200      	movs	r2, #0
    5368:	2300      	movs	r3, #0
    536a:	9816      	ldr	r0, [sp, #88]	; 0x58
    536c:	9915      	ldr	r1, [sp, #84]	; 0x54
    536e:	f7ff f81d 	bl	43ac <__aeabi_dcmpeq>
    5372:	2800      	cmp	r0, #0
    5374:	d100      	bne.n	5378 <_vfprintf_r+0x980>
    5376:	e134      	b.n	55e2 <_vfprintf_r+0xbea>
    5378:	4b85      	ldr	r3, [pc, #532]	; (5590 <_vfprintf_r+0xb98>)
    537a:	3401      	adds	r4, #1
    537c:	6033      	str	r3, [r6, #0]
    537e:	2301      	movs	r3, #1
    5380:	6073      	str	r3, [r6, #4]
    5382:	687b      	ldr	r3, [r7, #4]
    5384:	60bc      	str	r4, [r7, #8]
    5386:	3301      	adds	r3, #1
    5388:	607b      	str	r3, [r7, #4]
    538a:	2b07      	cmp	r3, #7
    538c:	dd00      	ble.n	5390 <_vfprintf_r+0x998>
    538e:	e3dc      	b.n	5b4a <_vfprintf_r+0x1152>
    5390:	3608      	adds	r6, #8
    5392:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5394:	9a14      	ldr	r2, [sp, #80]	; 0x50
    5396:	4293      	cmp	r3, r2
    5398:	db03      	blt.n	53a2 <_vfprintf_r+0x9aa>
    539a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    539c:	07db      	lsls	r3, r3, #31
    539e:	d400      	bmi.n	53a2 <_vfprintf_r+0x9aa>
    53a0:	e3b7      	b.n	5b12 <_vfprintf_r+0x111a>
    53a2:	9b18      	ldr	r3, [sp, #96]	; 0x60
    53a4:	68ba      	ldr	r2, [r7, #8]
    53a6:	6033      	str	r3, [r6, #0]
    53a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    53aa:	469c      	mov	ip, r3
    53ac:	6073      	str	r3, [r6, #4]
    53ae:	687b      	ldr	r3, [r7, #4]
    53b0:	4462      	add	r2, ip
    53b2:	3301      	adds	r3, #1
    53b4:	0014      	movs	r4, r2
    53b6:	60ba      	str	r2, [r7, #8]
    53b8:	607b      	str	r3, [r7, #4]
    53ba:	2b07      	cmp	r3, #7
    53bc:	dd01      	ble.n	53c2 <_vfprintf_r+0x9ca>
    53be:	f000 fc19 	bl	5bf4 <_vfprintf_r+0x11fc>
    53c2:	3608      	adds	r6, #8
    53c4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    53c6:	1e5d      	subs	r5, r3, #1
    53c8:	2d00      	cmp	r5, #0
    53ca:	dc00      	bgt.n	53ce <_vfprintf_r+0x9d6>
    53cc:	e717      	b.n	51fe <_vfprintf_r+0x806>
    53ce:	4a71      	ldr	r2, [pc, #452]	; (5594 <_vfprintf_r+0xb9c>)
    53d0:	687b      	ldr	r3, [r7, #4]
    53d2:	4691      	mov	r9, r2
    53d4:	2d10      	cmp	r5, #16
    53d6:	dc00      	bgt.n	53da <_vfprintf_r+0x9e2>
    53d8:	e1c3      	b.n	5762 <_vfprintf_r+0xd6a>
    53da:	2210      	movs	r2, #16
    53dc:	4690      	mov	r8, r2
    53de:	0022      	movs	r2, r4
    53e0:	464c      	mov	r4, r9
    53e2:	46d9      	mov	r9, fp
    53e4:	e004      	b.n	53f0 <_vfprintf_r+0x9f8>
    53e6:	3608      	adds	r6, #8
    53e8:	3d10      	subs	r5, #16
    53ea:	2d10      	cmp	r5, #16
    53ec:	dc00      	bgt.n	53f0 <_vfprintf_r+0x9f8>
    53ee:	e37c      	b.n	5aea <_vfprintf_r+0x10f2>
    53f0:	4641      	mov	r1, r8
    53f2:	3210      	adds	r2, #16
    53f4:	3301      	adds	r3, #1
    53f6:	6034      	str	r4, [r6, #0]
    53f8:	6071      	str	r1, [r6, #4]
    53fa:	60ba      	str	r2, [r7, #8]
    53fc:	607b      	str	r3, [r7, #4]
    53fe:	2b07      	cmp	r3, #7
    5400:	ddf1      	ble.n	53e6 <_vfprintf_r+0x9ee>
    5402:	003a      	movs	r2, r7
    5404:	4649      	mov	r1, r9
    5406:	9806      	ldr	r0, [sp, #24]
    5408:	f003 fd58 	bl	8ebc <__sprint_r>
    540c:	2800      	cmp	r0, #0
    540e:	d10b      	bne.n	5428 <_vfprintf_r+0xa30>
    5410:	68ba      	ldr	r2, [r7, #8]
    5412:	687b      	ldr	r3, [r7, #4]
    5414:	ae32      	add	r6, sp, #200	; 0xc8
    5416:	e7e7      	b.n	53e8 <_vfprintf_r+0x9f0>
    5418:	68bb      	ldr	r3, [r7, #8]
    541a:	46d9      	mov	r9, fp
    541c:	2b00      	cmp	r3, #0
    541e:	d001      	beq.n	5424 <_vfprintf_r+0xa2c>
    5420:	f000 fd4c 	bl	5ebc <_vfprintf_r+0x14c4>
    5424:	2300      	movs	r3, #0
    5426:	607b      	str	r3, [r7, #4]
    5428:	464b      	mov	r3, r9
    542a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    542c:	07db      	lsls	r3, r3, #31
    542e:	d40d      	bmi.n	544c <_vfprintf_r+0xa54>
    5430:	464b      	mov	r3, r9
    5432:	899b      	ldrh	r3, [r3, #12]
    5434:	059a      	lsls	r2, r3, #22
    5436:	d505      	bpl.n	5444 <_vfprintf_r+0xa4c>
    5438:	065b      	lsls	r3, r3, #25
    543a:	d401      	bmi.n	5440 <_vfprintf_r+0xa48>
    543c:	f7ff fb8d 	bl	4b5a <_vfprintf_r+0x162>
    5440:	f7ff fb88 	bl	4b54 <_vfprintf_r+0x15c>
    5444:	464b      	mov	r3, r9
    5446:	6d98      	ldr	r0, [r3, #88]	; 0x58
    5448:	f002 fbb8 	bl	7bbc <__retarget_lock_release_recursive>
    544c:	464b      	mov	r3, r9
    544e:	899b      	ldrh	r3, [r3, #12]
    5450:	e7f2      	b.n	5438 <_vfprintf_r+0xa40>
    5452:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5454:	9a08      	ldr	r2, [sp, #32]
    5456:	1a9d      	subs	r5, r3, r2
    5458:	2d00      	cmp	r5, #0
    545a:	dc00      	bgt.n	545e <_vfprintf_r+0xa66>
    545c:	e685      	b.n	516a <_vfprintf_r+0x772>
    545e:	4a4d      	ldr	r2, [pc, #308]	; (5594 <_vfprintf_r+0xb9c>)
    5460:	687b      	ldr	r3, [r7, #4]
    5462:	4691      	mov	r9, r2
    5464:	2d10      	cmp	r5, #16
    5466:	dd24      	ble.n	54b2 <_vfprintf_r+0xaba>
    5468:	2210      	movs	r2, #16
    546a:	0021      	movs	r1, r4
    546c:	4690      	mov	r8, r2
    546e:	465c      	mov	r4, fp
    5470:	0032      	movs	r2, r6
    5472:	464e      	mov	r6, r9
    5474:	e003      	b.n	547e <_vfprintf_r+0xa86>
    5476:	3d10      	subs	r5, #16
    5478:	3208      	adds	r2, #8
    547a:	2d10      	cmp	r5, #16
    547c:	dd15      	ble.n	54aa <_vfprintf_r+0xab2>
    547e:	4640      	mov	r0, r8
    5480:	3110      	adds	r1, #16
    5482:	3301      	adds	r3, #1
    5484:	6016      	str	r6, [r2, #0]
    5486:	6050      	str	r0, [r2, #4]
    5488:	60b9      	str	r1, [r7, #8]
    548a:	607b      	str	r3, [r7, #4]
    548c:	2b07      	cmp	r3, #7
    548e:	ddf2      	ble.n	5476 <_vfprintf_r+0xa7e>
    5490:	003a      	movs	r2, r7
    5492:	0021      	movs	r1, r4
    5494:	9806      	ldr	r0, [sp, #24]
    5496:	f003 fd11 	bl	8ebc <__sprint_r>
    549a:	2800      	cmp	r0, #0
    549c:	d115      	bne.n	54ca <_vfprintf_r+0xad2>
    549e:	3d10      	subs	r5, #16
    54a0:	68b9      	ldr	r1, [r7, #8]
    54a2:	687b      	ldr	r3, [r7, #4]
    54a4:	aa32      	add	r2, sp, #200	; 0xc8
    54a6:	2d10      	cmp	r5, #16
    54a8:	dce9      	bgt.n	547e <_vfprintf_r+0xa86>
    54aa:	46a3      	mov	fp, r4
    54ac:	46b1      	mov	r9, r6
    54ae:	000c      	movs	r4, r1
    54b0:	0016      	movs	r6, r2
    54b2:	464a      	mov	r2, r9
    54b4:	1964      	adds	r4, r4, r5
    54b6:	3301      	adds	r3, #1
    54b8:	6032      	str	r2, [r6, #0]
    54ba:	6075      	str	r5, [r6, #4]
    54bc:	60bc      	str	r4, [r7, #8]
    54be:	607b      	str	r3, [r7, #4]
    54c0:	2b07      	cmp	r3, #7
    54c2:	dd00      	ble.n	54c6 <_vfprintf_r+0xace>
    54c4:	e263      	b.n	598e <_vfprintf_r+0xf96>
    54c6:	3608      	adds	r6, #8
    54c8:	e64f      	b.n	516a <_vfprintf_r+0x772>
    54ca:	46a1      	mov	r9, r4
    54cc:	e7ac      	b.n	5428 <_vfprintf_r+0xa30>
    54ce:	2301      	movs	r3, #1
    54d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    54d2:	4213      	tst	r3, r2
    54d4:	d000      	beq.n	54d8 <_vfprintf_r+0xae0>
    54d6:	e6f6      	b.n	52c6 <_vfprintf_r+0x8ce>
    54d8:	6073      	str	r3, [r6, #4]
    54da:	687b      	ldr	r3, [r7, #4]
    54dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
    54de:	3301      	adds	r3, #1
    54e0:	3401      	adds	r4, #1
    54e2:	6032      	str	r2, [r6, #0]
    54e4:	60bc      	str	r4, [r7, #8]
    54e6:	4698      	mov	r8, r3
    54e8:	607b      	str	r3, [r7, #4]
    54ea:	2b07      	cmp	r3, #7
    54ec:	dc00      	bgt.n	54f0 <_vfprintf_r+0xaf8>
    54ee:	e71e      	b.n	532e <_vfprintf_r+0x936>
    54f0:	003a      	movs	r2, r7
    54f2:	4659      	mov	r1, fp
    54f4:	9806      	ldr	r0, [sp, #24]
    54f6:	f003 fce1 	bl	8ebc <__sprint_r>
    54fa:	2800      	cmp	r0, #0
    54fc:	d10c      	bne.n	5518 <_vfprintf_r+0xb20>
    54fe:	687b      	ldr	r3, [r7, #4]
    5500:	68bc      	ldr	r4, [r7, #8]
    5502:	4698      	mov	r8, r3
    5504:	ae32      	add	r6, sp, #200	; 0xc8
    5506:	e713      	b.n	5330 <_vfprintf_r+0x938>
    5508:	003a      	movs	r2, r7
    550a:	4659      	mov	r1, fp
    550c:	9806      	ldr	r0, [sp, #24]
    550e:	f003 fcd5 	bl	8ebc <__sprint_r>
    5512:	2800      	cmp	r0, #0
    5514:	d100      	bne.n	5518 <_vfprintf_r+0xb20>
    5516:	e6cd      	b.n	52b4 <_vfprintf_r+0x8bc>
    5518:	46d9      	mov	r9, fp
    551a:	e785      	b.n	5428 <_vfprintf_r+0xa30>
    551c:	9c09      	ldr	r4, [sp, #36]	; 0x24
    551e:	2b01      	cmp	r3, #1
    5520:	d100      	bne.n	5524 <_vfprintf_r+0xb2c>
    5522:	e148      	b.n	57b6 <_vfprintf_r+0xdbe>
    5524:	2b02      	cmp	r3, #2
    5526:	d123      	bne.n	5570 <_vfprintf_r+0xb78>
    5528:	9409      	str	r4, [sp, #36]	; 0x24
    552a:	2300      	movs	r3, #0
    552c:	2400      	movs	r4, #0
    552e:	930c      	str	r3, [sp, #48]	; 0x30
    5530:	940d      	str	r4, [sp, #52]	; 0x34
    5532:	e4a1      	b.n	4e78 <_vfprintf_r+0x480>
    5534:	003a      	movs	r2, r7
    5536:	4659      	mov	r1, fp
    5538:	9806      	ldr	r0, [sp, #24]
    553a:	f003 fcbf 	bl	8ebc <__sprint_r>
    553e:	2800      	cmp	r0, #0
    5540:	d1ea      	bne.n	5518 <_vfprintf_r+0xb20>
    5542:	68bc      	ldr	r4, [r7, #8]
    5544:	ae32      	add	r6, sp, #200	; 0xc8
    5546:	e648      	b.n	51da <_vfprintf_r+0x7e2>
    5548:	003a      	movs	r2, r7
    554a:	4659      	mov	r1, fp
    554c:	9806      	ldr	r0, [sp, #24]
    554e:	f003 fcb5 	bl	8ebc <__sprint_r>
    5552:	2800      	cmp	r0, #0
    5554:	d1e0      	bne.n	5518 <_vfprintf_r+0xb20>
    5556:	68bc      	ldr	r4, [r7, #8]
    5558:	ae32      	add	r6, sp, #200	; 0xc8
    555a:	e5f2      	b.n	5142 <_vfprintf_r+0x74a>
    555c:	003a      	movs	r2, r7
    555e:	4659      	mov	r1, fp
    5560:	9806      	ldr	r0, [sp, #24]
    5562:	f003 fcab 	bl	8ebc <__sprint_r>
    5566:	2800      	cmp	r0, #0
    5568:	d1d6      	bne.n	5518 <_vfprintf_r+0xb20>
    556a:	68bc      	ldr	r4, [r7, #8]
    556c:	ae32      	add	r6, sp, #200	; 0xc8
    556e:	e5f8      	b.n	5162 <_vfprintf_r+0x76a>
    5570:	9409      	str	r4, [sp, #36]	; 0x24
    5572:	2300      	movs	r3, #0
    5574:	2400      	movs	r4, #0
    5576:	930c      	str	r3, [sp, #48]	; 0x30
    5578:	940d      	str	r4, [sp, #52]	; 0x34
    557a:	980c      	ldr	r0, [sp, #48]	; 0x30
    557c:	990d      	ldr	r1, [sp, #52]	; 0x34
    557e:	4653      	mov	r3, sl
    5580:	aa32      	add	r2, sp, #200	; 0xc8
    5582:	4691      	mov	r9, r2
    5584:	9308      	str	r3, [sp, #32]
    5586:	46b2      	mov	sl, r6
    5588:	e007      	b.n	559a <_vfprintf_r+0xba2>
    558a:	46c0      	nop			; (mov r8, r8)
    558c:	0000a260 	.word	0x0000a260
    5590:	0000a25c 	.word	0x0000a25c
    5594:	0000a270 	.word	0x0000a270
    5598:	46a1      	mov	r9, r4
    559a:	074a      	lsls	r2, r1, #29
    559c:	4694      	mov	ip, r2
    559e:	464b      	mov	r3, r9
    55a0:	4665      	mov	r5, ip
    55a2:	1e5c      	subs	r4, r3, #1
    55a4:	08c6      	lsrs	r6, r0, #3
    55a6:	2307      	movs	r3, #7
    55a8:	08ca      	lsrs	r2, r1, #3
    55aa:	4335      	orrs	r5, r6
    55ac:	0011      	movs	r1, r2
    55ae:	002a      	movs	r2, r5
    55b0:	4003      	ands	r3, r0
    55b2:	3330      	adds	r3, #48	; 0x30
    55b4:	7023      	strb	r3, [r4, #0]
    55b6:	0028      	movs	r0, r5
    55b8:	430a      	orrs	r2, r1
    55ba:	d1ed      	bne.n	5598 <_vfprintf_r+0xba0>
    55bc:	900c      	str	r0, [sp, #48]	; 0x30
    55be:	910d      	str	r1, [sp, #52]	; 0x34
    55c0:	9908      	ldr	r1, [sp, #32]
    55c2:	4656      	mov	r6, sl
    55c4:	468a      	mov	sl, r1
    55c6:	9909      	ldr	r1, [sp, #36]	; 0x24
    55c8:	464a      	mov	r2, r9
    55ca:	9411      	str	r4, [sp, #68]	; 0x44
    55cc:	07c9      	lsls	r1, r1, #31
    55ce:	d500      	bpl.n	55d2 <_vfprintf_r+0xbda>
    55d0:	e0e0      	b.n	5794 <_vfprintf_r+0xd9c>
    55d2:	ab32      	add	r3, sp, #200	; 0xc8
    55d4:	1b1b      	subs	r3, r3, r4
    55d6:	930e      	str	r3, [sp, #56]	; 0x38
    55d8:	f7ff fb7b 	bl	4cd2 <_vfprintf_r+0x2da>
    55dc:	9c07      	ldr	r4, [sp, #28]
    55de:	f7ff fa7d 	bl	4adc <_vfprintf_r+0xe4>
    55e2:	981f      	ldr	r0, [sp, #124]	; 0x7c
    55e4:	2800      	cmp	r0, #0
    55e6:	dc00      	bgt.n	55ea <_vfprintf_r+0xbf2>
    55e8:	e2b9      	b.n	5b5e <_vfprintf_r+0x1166>
    55ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    55ec:	9914      	ldr	r1, [sp, #80]	; 0x50
    55ee:	0013      	movs	r3, r2
    55f0:	4690      	mov	r8, r2
    55f2:	428b      	cmp	r3, r1
    55f4:	dd00      	ble.n	55f8 <_vfprintf_r+0xc00>
    55f6:	4688      	mov	r8, r1
    55f8:	4643      	mov	r3, r8
    55fa:	2b00      	cmp	r3, #0
    55fc:	dd0c      	ble.n	5618 <_vfprintf_r+0xc20>
    55fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5600:	4444      	add	r4, r8
    5602:	6033      	str	r3, [r6, #0]
    5604:	4643      	mov	r3, r8
    5606:	6073      	str	r3, [r6, #4]
    5608:	687b      	ldr	r3, [r7, #4]
    560a:	60bc      	str	r4, [r7, #8]
    560c:	3301      	adds	r3, #1
    560e:	607b      	str	r3, [r7, #4]
    5610:	2b07      	cmp	r3, #7
    5612:	dd00      	ble.n	5616 <_vfprintf_r+0xc1e>
    5614:	e389      	b.n	5d2a <_vfprintf_r+0x1332>
    5616:	3608      	adds	r6, #8
    5618:	4643      	mov	r3, r8
    561a:	43db      	mvns	r3, r3
    561c:	4642      	mov	r2, r8
    561e:	17db      	asrs	r3, r3, #31
    5620:	4013      	ands	r3, r2
    5622:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5624:	1ad3      	subs	r3, r2, r3
    5626:	4698      	mov	r8, r3
    5628:	2b00      	cmp	r3, #0
    562a:	dc00      	bgt.n	562e <_vfprintf_r+0xc36>
    562c:	e0eb      	b.n	5806 <_vfprintf_r+0xe0e>
    562e:	2b10      	cmp	r3, #16
    5630:	dc01      	bgt.n	5636 <_vfprintf_r+0xc3e>
    5632:	f000 fcd9 	bl	5fe8 <_vfprintf_r+0x15f0>
    5636:	4adc      	ldr	r2, [pc, #880]	; (59a8 <_vfprintf_r+0xfb0>)
    5638:	687b      	ldr	r3, [r7, #4]
    563a:	4691      	mov	r9, r2
    563c:	2210      	movs	r2, #16
    563e:	464d      	mov	r5, r9
    5640:	4692      	mov	sl, r2
    5642:	0022      	movs	r2, r4
    5644:	4644      	mov	r4, r8
    5646:	46d8      	mov	r8, fp
    5648:	e004      	b.n	5654 <_vfprintf_r+0xc5c>
    564a:	3608      	adds	r6, #8
    564c:	3c10      	subs	r4, #16
    564e:	2c10      	cmp	r4, #16
    5650:	dc00      	bgt.n	5654 <_vfprintf_r+0xc5c>
    5652:	e0bf      	b.n	57d4 <_vfprintf_r+0xddc>
    5654:	4651      	mov	r1, sl
    5656:	3210      	adds	r2, #16
    5658:	3301      	adds	r3, #1
    565a:	6035      	str	r5, [r6, #0]
    565c:	6071      	str	r1, [r6, #4]
    565e:	60ba      	str	r2, [r7, #8]
    5660:	607b      	str	r3, [r7, #4]
    5662:	2b07      	cmp	r3, #7
    5664:	ddf1      	ble.n	564a <_vfprintf_r+0xc52>
    5666:	003a      	movs	r2, r7
    5668:	4641      	mov	r1, r8
    566a:	9806      	ldr	r0, [sp, #24]
    566c:	f003 fc26 	bl	8ebc <__sprint_r>
    5670:	2800      	cmp	r0, #0
    5672:	d000      	beq.n	5676 <_vfprintf_r+0xc7e>
    5674:	e3b6      	b.n	5de4 <_vfprintf_r+0x13ec>
    5676:	68ba      	ldr	r2, [r7, #8]
    5678:	687b      	ldr	r3, [r7, #4]
    567a:	ae32      	add	r6, sp, #200	; 0xc8
    567c:	e7e6      	b.n	564c <_vfprintf_r+0xc54>
    567e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5680:	2b00      	cmp	r3, #0
    5682:	d100      	bne.n	5686 <_vfprintf_r+0xc8e>
    5684:	e092      	b.n	57ac <_vfprintf_r+0xdb4>
    5686:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    5688:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    568a:	ab32      	add	r3, sp, #200	; 0xc8
    568c:	46b1      	mov	r9, r6
    568e:	001e      	movs	r6, r3
    5690:	0020      	movs	r0, r4
    5692:	0029      	movs	r1, r5
    5694:	220a      	movs	r2, #10
    5696:	2300      	movs	r3, #0
    5698:	f7fd f9b2 	bl	2a00 <__aeabi_uldivmod>
    569c:	3e01      	subs	r6, #1
    569e:	3230      	adds	r2, #48	; 0x30
    56a0:	7032      	strb	r2, [r6, #0]
    56a2:	2300      	movs	r3, #0
    56a4:	0020      	movs	r0, r4
    56a6:	0029      	movs	r1, r5
    56a8:	220a      	movs	r2, #10
    56aa:	f7fd f9a9 	bl	2a00 <__aeabi_uldivmod>
    56ae:	0003      	movs	r3, r0
    56b0:	0004      	movs	r4, r0
    56b2:	000d      	movs	r5, r1
    56b4:	430b      	orrs	r3, r1
    56b6:	d1eb      	bne.n	5690 <_vfprintf_r+0xc98>
    56b8:	0032      	movs	r2, r6
    56ba:	ab32      	add	r3, sp, #200	; 0xc8
    56bc:	1a9b      	subs	r3, r3, r2
    56be:	9611      	str	r6, [sp, #68]	; 0x44
    56c0:	940c      	str	r4, [sp, #48]	; 0x30
    56c2:	950d      	str	r5, [sp, #52]	; 0x34
    56c4:	464e      	mov	r6, r9
    56c6:	930e      	str	r3, [sp, #56]	; 0x38
    56c8:	f7ff fb03 	bl	4cd2 <_vfprintf_r+0x2da>
    56cc:	2300      	movs	r3, #0
    56ce:	930e      	str	r3, [sp, #56]	; 0x38
    56d0:	ab32      	add	r3, sp, #200	; 0xc8
    56d2:	9311      	str	r3, [sp, #68]	; 0x44
    56d4:	f7ff fafd 	bl	4cd2 <_vfprintf_r+0x2da>
    56d8:	003a      	movs	r2, r7
    56da:	4659      	mov	r1, fp
    56dc:	9806      	ldr	r0, [sp, #24]
    56de:	f003 fbed 	bl	8ebc <__sprint_r>
    56e2:	2800      	cmp	r0, #0
    56e4:	d000      	beq.n	56e8 <_vfprintf_r+0xcf0>
    56e6:	e717      	b.n	5518 <_vfprintf_r+0xb20>
    56e8:	ab16      	add	r3, sp, #88	; 0x58
    56ea:	7fdb      	ldrb	r3, [r3, #31]
    56ec:	68bc      	ldr	r4, [r7, #8]
    56ee:	4698      	mov	r8, r3
    56f0:	ae32      	add	r6, sp, #200	; 0xc8
    56f2:	e513      	b.n	511c <_vfprintf_r+0x724>
    56f4:	46b1      	mov	r9, r6
    56f6:	e697      	b.n	5428 <_vfprintf_r+0xa30>
    56f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
    56fa:	1e5d      	subs	r5, r3, #1
    56fc:	2d00      	cmp	r5, #0
    56fe:	dc00      	bgt.n	5702 <_vfprintf_r+0xd0a>
    5700:	e616      	b.n	5330 <_vfprintf_r+0x938>
    5702:	4ba9      	ldr	r3, [pc, #676]	; (59a8 <_vfprintf_r+0xfb0>)
    5704:	4699      	mov	r9, r3
    5706:	2d10      	cmp	r5, #16
    5708:	dc00      	bgt.n	570c <_vfprintf_r+0xd14>
    570a:	e10a      	b.n	5922 <_vfprintf_r+0xf2a>
    570c:	2310      	movs	r3, #16
    570e:	0022      	movs	r2, r4
    5710:	469a      	mov	sl, r3
    5712:	465c      	mov	r4, fp
    5714:	4643      	mov	r3, r8
    5716:	e004      	b.n	5722 <_vfprintf_r+0xd2a>
    5718:	3608      	adds	r6, #8
    571a:	3d10      	subs	r5, #16
    571c:	2d10      	cmp	r5, #16
    571e:	dc00      	bgt.n	5722 <_vfprintf_r+0xd2a>
    5720:	e0fc      	b.n	591c <_vfprintf_r+0xf24>
    5722:	4649      	mov	r1, r9
    5724:	6031      	str	r1, [r6, #0]
    5726:	4651      	mov	r1, sl
    5728:	3210      	adds	r2, #16
    572a:	3301      	adds	r3, #1
    572c:	6071      	str	r1, [r6, #4]
    572e:	60ba      	str	r2, [r7, #8]
    5730:	607b      	str	r3, [r7, #4]
    5732:	2b07      	cmp	r3, #7
    5734:	ddf0      	ble.n	5718 <_vfprintf_r+0xd20>
    5736:	003a      	movs	r2, r7
    5738:	0021      	movs	r1, r4
    573a:	9806      	ldr	r0, [sp, #24]
    573c:	f003 fbbe 	bl	8ebc <__sprint_r>
    5740:	2800      	cmp	r0, #0
    5742:	d000      	beq.n	5746 <_vfprintf_r+0xd4e>
    5744:	e6c1      	b.n	54ca <_vfprintf_r+0xad2>
    5746:	68ba      	ldr	r2, [r7, #8]
    5748:	687b      	ldr	r3, [r7, #4]
    574a:	ae32      	add	r6, sp, #200	; 0xc8
    574c:	e7e5      	b.n	571a <_vfprintf_r+0xd22>
    574e:	990c      	ldr	r1, [sp, #48]	; 0x30
    5750:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5752:	0008      	movs	r0, r1
    5754:	4310      	orrs	r0, r2
    5756:	2302      	movs	r3, #2
    5758:	0002      	movs	r2, r0
    575a:	f7ff fa93 	bl	4c84 <_vfprintf_r+0x28c>
    575e:	46a3      	mov	fp, r4
    5760:	0014      	movs	r4, r2
    5762:	464a      	mov	r2, r9
    5764:	1964      	adds	r4, r4, r5
    5766:	3301      	adds	r3, #1
    5768:	6032      	str	r2, [r6, #0]
    576a:	6075      	str	r5, [r6, #4]
    576c:	60bc      	str	r4, [r7, #8]
    576e:	607b      	str	r3, [r7, #4]
    5770:	2b07      	cmp	r3, #7
    5772:	dc00      	bgt.n	5776 <_vfprintf_r+0xd7e>
    5774:	e542      	b.n	51fc <_vfprintf_r+0x804>
    5776:	e5e8      	b.n	534a <_vfprintf_r+0x952>
    5778:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    577a:	681a      	ldr	r2, [r3, #0]
    577c:	f7ff fa68 	bl	4c50 <_vfprintf_r+0x258>
    5780:	6813      	ldr	r3, [r2, #0]
    5782:	9308      	str	r3, [sp, #32]
    5784:	f7ff fb57 	bl	4e36 <_vfprintf_r+0x43e>
    5788:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    578a:	681a      	ldr	r2, [r3, #0]
    578c:	e412      	b.n	4fb4 <_vfprintf_r+0x5bc>
    578e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5790:	681a      	ldr	r2, [r3, #0]
    5792:	e426      	b.n	4fe2 <_vfprintf_r+0x5ea>
    5794:	2b30      	cmp	r3, #48	; 0x30
    5796:	d100      	bne.n	579a <_vfprintf_r+0xda2>
    5798:	e23c      	b.n	5c14 <_vfprintf_r+0x121c>
    579a:	2330      	movs	r3, #48	; 0x30
    579c:	3a02      	subs	r2, #2
    579e:	7013      	strb	r3, [r2, #0]
    57a0:	ab32      	add	r3, sp, #200	; 0xc8
    57a2:	1a9b      	subs	r3, r3, r2
    57a4:	930e      	str	r3, [sp, #56]	; 0x38
    57a6:	9211      	str	r2, [sp, #68]	; 0x44
    57a8:	f7ff fa93 	bl	4cd2 <_vfprintf_r+0x2da>
    57ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    57ae:	2b09      	cmp	r3, #9
    57b0:	d900      	bls.n	57b4 <_vfprintf_r+0xdbc>
    57b2:	e768      	b.n	5686 <_vfprintf_r+0xc8e>
    57b4:	9c09      	ldr	r4, [sp, #36]	; 0x24
    57b6:	2227      	movs	r2, #39	; 0x27
    57b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    57ba:	a928      	add	r1, sp, #160	; 0xa0
    57bc:	3330      	adds	r3, #48	; 0x30
    57be:	548b      	strb	r3, [r1, r2]
    57c0:	2301      	movs	r3, #1
    57c2:	aa16      	add	r2, sp, #88	; 0x58
    57c4:	4694      	mov	ip, r2
    57c6:	930e      	str	r3, [sp, #56]	; 0x38
    57c8:	336e      	adds	r3, #110	; 0x6e
    57ca:	4463      	add	r3, ip
    57cc:	9409      	str	r4, [sp, #36]	; 0x24
    57ce:	9311      	str	r3, [sp, #68]	; 0x44
    57d0:	f7ff fa7f 	bl	4cd2 <_vfprintf_r+0x2da>
    57d4:	46c3      	mov	fp, r8
    57d6:	46a9      	mov	r9, r5
    57d8:	46a0      	mov	r8, r4
    57da:	0014      	movs	r4, r2
    57dc:	464a      	mov	r2, r9
    57de:	6032      	str	r2, [r6, #0]
    57e0:	4642      	mov	r2, r8
    57e2:	4444      	add	r4, r8
    57e4:	3301      	adds	r3, #1
    57e6:	6072      	str	r2, [r6, #4]
    57e8:	60bc      	str	r4, [r7, #8]
    57ea:	607b      	str	r3, [r7, #4]
    57ec:	2b07      	cmp	r3, #7
    57ee:	dc00      	bgt.n	57f2 <_vfprintf_r+0xdfa>
    57f0:	e18d      	b.n	5b0e <_vfprintf_r+0x1116>
    57f2:	003a      	movs	r2, r7
    57f4:	4659      	mov	r1, fp
    57f6:	9806      	ldr	r0, [sp, #24]
    57f8:	f003 fb60 	bl	8ebc <__sprint_r>
    57fc:	2800      	cmp	r0, #0
    57fe:	d000      	beq.n	5802 <_vfprintf_r+0xe0a>
    5800:	e68a      	b.n	5518 <_vfprintf_r+0xb20>
    5802:	68bc      	ldr	r4, [r7, #8]
    5804:	ae32      	add	r6, sp, #200	; 0xc8
    5806:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5808:	9a14      	ldr	r2, [sp, #80]	; 0x50
    580a:	4293      	cmp	r3, r2
    580c:	db00      	blt.n	5810 <_vfprintf_r+0xe18>
    580e:	e179      	b.n	5b04 <_vfprintf_r+0x110c>
    5810:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5812:	6032      	str	r2, [r6, #0]
    5814:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5816:	4694      	mov	ip, r2
    5818:	6072      	str	r2, [r6, #4]
    581a:	687a      	ldr	r2, [r7, #4]
    581c:	4464      	add	r4, ip
    581e:	3201      	adds	r2, #1
    5820:	60bc      	str	r4, [r7, #8]
    5822:	607a      	str	r2, [r7, #4]
    5824:	2a07      	cmp	r2, #7
    5826:	dd00      	ble.n	582a <_vfprintf_r+0xe32>
    5828:	e176      	b.n	5b18 <_vfprintf_r+0x1120>
    582a:	3608      	adds	r6, #8
    582c:	9a14      	ldr	r2, [sp, #80]	; 0x50
    582e:	9913      	ldr	r1, [sp, #76]	; 0x4c
    5830:	1ad3      	subs	r3, r2, r3
    5832:	1a52      	subs	r2, r2, r1
    5834:	4690      	mov	r8, r2
    5836:	429a      	cmp	r2, r3
    5838:	dd00      	ble.n	583c <_vfprintf_r+0xe44>
    583a:	4698      	mov	r8, r3
    583c:	4642      	mov	r2, r8
    583e:	2a00      	cmp	r2, #0
    5840:	dd0f      	ble.n	5862 <_vfprintf_r+0xe6a>
    5842:	9913      	ldr	r1, [sp, #76]	; 0x4c
    5844:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5846:	468c      	mov	ip, r1
    5848:	4462      	add	r2, ip
    584a:	6032      	str	r2, [r6, #0]
    584c:	4642      	mov	r2, r8
    584e:	6072      	str	r2, [r6, #4]
    5850:	687a      	ldr	r2, [r7, #4]
    5852:	4444      	add	r4, r8
    5854:	3201      	adds	r2, #1
    5856:	60bc      	str	r4, [r7, #8]
    5858:	607a      	str	r2, [r7, #4]
    585a:	2a07      	cmp	r2, #7
    585c:	dd00      	ble.n	5860 <_vfprintf_r+0xe68>
    585e:	e289      	b.n	5d74 <_vfprintf_r+0x137c>
    5860:	3608      	adds	r6, #8
    5862:	4642      	mov	r2, r8
    5864:	43d5      	mvns	r5, r2
    5866:	17ed      	asrs	r5, r5, #31
    5868:	4015      	ands	r5, r2
    586a:	1b5d      	subs	r5, r3, r5
    586c:	2d00      	cmp	r5, #0
    586e:	dc00      	bgt.n	5872 <_vfprintf_r+0xe7a>
    5870:	e4c5      	b.n	51fe <_vfprintf_r+0x806>
    5872:	4a4d      	ldr	r2, [pc, #308]	; (59a8 <_vfprintf_r+0xfb0>)
    5874:	687b      	ldr	r3, [r7, #4]
    5876:	4691      	mov	r9, r2
    5878:	2d10      	cmp	r5, #16
    587a:	dc00      	bgt.n	587e <_vfprintf_r+0xe86>
    587c:	e771      	b.n	5762 <_vfprintf_r+0xd6a>
    587e:	2210      	movs	r2, #16
    5880:	4690      	mov	r8, r2
    5882:	0022      	movs	r2, r4
    5884:	465c      	mov	r4, fp
    5886:	e004      	b.n	5892 <_vfprintf_r+0xe9a>
    5888:	3608      	adds	r6, #8
    588a:	3d10      	subs	r5, #16
    588c:	2d10      	cmp	r5, #16
    588e:	dc00      	bgt.n	5892 <_vfprintf_r+0xe9a>
    5890:	e765      	b.n	575e <_vfprintf_r+0xd66>
    5892:	4649      	mov	r1, r9
    5894:	6031      	str	r1, [r6, #0]
    5896:	4641      	mov	r1, r8
    5898:	3210      	adds	r2, #16
    589a:	3301      	adds	r3, #1
    589c:	6071      	str	r1, [r6, #4]
    589e:	60ba      	str	r2, [r7, #8]
    58a0:	607b      	str	r3, [r7, #4]
    58a2:	2b07      	cmp	r3, #7
    58a4:	ddf0      	ble.n	5888 <_vfprintf_r+0xe90>
    58a6:	003a      	movs	r2, r7
    58a8:	0021      	movs	r1, r4
    58aa:	9806      	ldr	r0, [sp, #24]
    58ac:	f003 fb06 	bl	8ebc <__sprint_r>
    58b0:	2800      	cmp	r0, #0
    58b2:	d000      	beq.n	58b6 <_vfprintf_r+0xebe>
    58b4:	e609      	b.n	54ca <_vfprintf_r+0xad2>
    58b6:	68ba      	ldr	r2, [r7, #8]
    58b8:	687b      	ldr	r3, [r7, #4]
    58ba:	ae32      	add	r6, sp, #200	; 0xc8
    58bc:	e7e5      	b.n	588a <_vfprintf_r+0xe92>
    58be:	003a      	movs	r2, r7
    58c0:	4659      	mov	r1, fp
    58c2:	9806      	ldr	r0, [sp, #24]
    58c4:	f003 fafa 	bl	8ebc <__sprint_r>
    58c8:	2800      	cmp	r0, #0
    58ca:	d000      	beq.n	58ce <_vfprintf_r+0xed6>
    58cc:	e624      	b.n	5518 <_vfprintf_r+0xb20>
    58ce:	68bc      	ldr	r4, [r7, #8]
    58d0:	687b      	ldr	r3, [r7, #4]
    58d2:	ae32      	add	r6, sp, #200	; 0xc8
    58d4:	e504      	b.n	52e0 <_vfprintf_r+0x8e8>
    58d6:	2307      	movs	r3, #7
    58d8:	3207      	adds	r2, #7
    58da:	439a      	bics	r2, r3
    58dc:	3301      	adds	r3, #1
    58de:	469c      	mov	ip, r3
    58e0:	4494      	add	ip, r2
    58e2:	4663      	mov	r3, ip
    58e4:	930f      	str	r3, [sp, #60]	; 0x3c
    58e6:	6853      	ldr	r3, [r2, #4]
    58e8:	6812      	ldr	r2, [r2, #0]
    58ea:	930d      	str	r3, [sp, #52]	; 0x34
    58ec:	920c      	str	r2, [sp, #48]	; 0x30
    58ee:	f7ff faa7 	bl	4e40 <_vfprintf_r+0x448>
    58f2:	2207      	movs	r2, #7
    58f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    58f6:	3307      	adds	r3, #7
    58f8:	4393      	bics	r3, r2
    58fa:	3201      	adds	r2, #1
    58fc:	4694      	mov	ip, r2
    58fe:	449c      	add	ip, r3
    5900:	4662      	mov	r2, ip
    5902:	920f      	str	r2, [sp, #60]	; 0x3c
    5904:	681a      	ldr	r2, [r3, #0]
    5906:	685b      	ldr	r3, [r3, #4]
    5908:	0011      	movs	r1, r2
    590a:	001a      	movs	r2, r3
    590c:	0008      	movs	r0, r1
    590e:	4310      	orrs	r0, r2
    5910:	910c      	str	r1, [sp, #48]	; 0x30
    5912:	920d      	str	r2, [sp, #52]	; 0x34
    5914:	2300      	movs	r3, #0
    5916:	0002      	movs	r2, r0
    5918:	f7ff f9b4 	bl	4c84 <_vfprintf_r+0x28c>
    591c:	46a3      	mov	fp, r4
    591e:	4698      	mov	r8, r3
    5920:	0014      	movs	r4, r2
    5922:	464b      	mov	r3, r9
    5924:	6075      	str	r5, [r6, #4]
    5926:	6033      	str	r3, [r6, #0]
    5928:	1964      	adds	r4, r4, r5
    592a:	e4f7      	b.n	531c <_vfprintf_r+0x924>
    592c:	003a      	movs	r2, r7
    592e:	4659      	mov	r1, fp
    5930:	9806      	ldr	r0, [sp, #24]
    5932:	f003 fac3 	bl	8ebc <__sprint_r>
    5936:	2800      	cmp	r0, #0
    5938:	d000      	beq.n	593c <_vfprintf_r+0xf44>
    593a:	e5ed      	b.n	5518 <_vfprintf_r+0xb20>
    593c:	687b      	ldr	r3, [r7, #4]
    593e:	68bc      	ldr	r4, [r7, #8]
    5940:	4698      	mov	r8, r3
    5942:	ae32      	add	r6, sp, #200	; 0xc8
    5944:	e4da      	b.n	52fc <_vfprintf_r+0x904>
    5946:	2207      	movs	r2, #7
    5948:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    594a:	3307      	adds	r3, #7
    594c:	4393      	bics	r3, r2
    594e:	3201      	adds	r2, #1
    5950:	4694      	mov	ip, r2
    5952:	449c      	add	ip, r3
    5954:	4662      	mov	r2, ip
    5956:	920f      	str	r2, [sp, #60]	; 0x3c
    5958:	681a      	ldr	r2, [r3, #0]
    595a:	685b      	ldr	r3, [r3, #4]
    595c:	0011      	movs	r1, r2
    595e:	001a      	movs	r2, r3
    5960:	0008      	movs	r0, r1
    5962:	4310      	orrs	r0, r2
    5964:	910c      	str	r1, [sp, #48]	; 0x30
    5966:	920d      	str	r2, [sp, #52]	; 0x34
    5968:	2301      	movs	r3, #1
    596a:	0002      	movs	r2, r0
    596c:	f7ff f98a 	bl	4c84 <_vfprintf_r+0x28c>
    5970:	2207      	movs	r2, #7
    5972:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5974:	3307      	adds	r3, #7
    5976:	4393      	bics	r3, r2
    5978:	3201      	adds	r2, #1
    597a:	4694      	mov	ip, r2
    597c:	449c      	add	ip, r3
    597e:	4662      	mov	r2, ip
    5980:	920f      	str	r2, [sp, #60]	; 0x3c
    5982:	681a      	ldr	r2, [r3, #0]
    5984:	685b      	ldr	r3, [r3, #4]
    5986:	920c      	str	r2, [sp, #48]	; 0x30
    5988:	930d      	str	r3, [sp, #52]	; 0x34
    598a:	f7ff f966 	bl	4c5a <_vfprintf_r+0x262>
    598e:	003a      	movs	r2, r7
    5990:	4659      	mov	r1, fp
    5992:	9806      	ldr	r0, [sp, #24]
    5994:	f003 fa92 	bl	8ebc <__sprint_r>
    5998:	2800      	cmp	r0, #0
    599a:	d000      	beq.n	599e <_vfprintf_r+0xfa6>
    599c:	e5bc      	b.n	5518 <_vfprintf_r+0xb20>
    599e:	68bc      	ldr	r4, [r7, #8]
    59a0:	ae32      	add	r6, sp, #200	; 0xc8
    59a2:	f7ff fbe2 	bl	516a <_vfprintf_r+0x772>
    59a6:	46c0      	nop			; (mov r8, r8)
    59a8:	0000a270 	.word	0x0000a270
    59ac:	980c      	ldr	r0, [sp, #48]	; 0x30
    59ae:	990d      	ldr	r1, [sp, #52]	; 0x34
    59b0:	2300      	movs	r3, #0
    59b2:	4242      	negs	r2, r0
    59b4:	418b      	sbcs	r3, r1
    59b6:	0011      	movs	r1, r2
    59b8:	001a      	movs	r2, r3
    59ba:	232d      	movs	r3, #45	; 0x2d
    59bc:	a816      	add	r0, sp, #88	; 0x58
    59be:	77c3      	strb	r3, [r0, #31]
    59c0:	0008      	movs	r0, r1
    59c2:	4310      	orrs	r0, r2
    59c4:	910c      	str	r1, [sp, #48]	; 0x30
    59c6:	920d      	str	r2, [sp, #52]	; 0x34
    59c8:	4698      	mov	r8, r3
    59ca:	0002      	movs	r2, r0
    59cc:	3b2c      	subs	r3, #44	; 0x2c
    59ce:	f7ff f95d 	bl	4c8c <_vfprintf_r+0x294>
    59d2:	9916      	ldr	r1, [sp, #88]	; 0x58
    59d4:	9d15      	ldr	r5, [sp, #84]	; 0x54
    59d6:	000a      	movs	r2, r1
    59d8:	0008      	movs	r0, r1
    59da:	002b      	movs	r3, r5
    59dc:	0029      	movs	r1, r5
    59de:	f004 f927 	bl	9c30 <__aeabi_dcmpun>
    59e2:	2800      	cmp	r0, #0
    59e4:	d000      	beq.n	59e8 <_vfprintf_r+0xff0>
    59e6:	e2c6      	b.n	5f76 <_vfprintf_r+0x157e>
    59e8:	4653      	mov	r3, sl
    59ea:	3301      	adds	r3, #1
    59ec:	d100      	bne.n	59f0 <_vfprintf_r+0xff8>
    59ee:	e09f      	b.n	5b30 <_vfprintf_r+0x1138>
    59f0:	2320      	movs	r3, #32
    59f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
    59f4:	439a      	bics	r2, r3
    59f6:	920e      	str	r2, [sp, #56]	; 0x38
    59f8:	2a47      	cmp	r2, #71	; 0x47
    59fa:	d100      	bne.n	59fe <_vfprintf_r+0x1006>
    59fc:	e1a1      	b.n	5d42 <_vfprintf_r+0x134a>
    59fe:	2380      	movs	r3, #128	; 0x80
    5a00:	005b      	lsls	r3, r3, #1
    5a02:	4323      	orrs	r3, r4
    5a04:	9309      	str	r3, [sp, #36]	; 0x24
    5a06:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5a08:	2b00      	cmp	r3, #0
    5a0a:	da00      	bge.n	5a0e <_vfprintf_r+0x1016>
    5a0c:	e1ed      	b.n	5dea <_vfprintf_r+0x13f2>
    5a0e:	9a16      	ldr	r2, [sp, #88]	; 0x58
    5a10:	9308      	str	r3, [sp, #32]
    5a12:	2300      	movs	r3, #0
    5a14:	4691      	mov	r9, r2
    5a16:	9310      	str	r3, [sp, #64]	; 0x40
    5a18:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5a1a:	2b66      	cmp	r3, #102	; 0x66
    5a1c:	d100      	bne.n	5a20 <_vfprintf_r+0x1028>
    5a1e:	e1b8      	b.n	5d92 <_vfprintf_r+0x139a>
    5a20:	2b46      	cmp	r3, #70	; 0x46
    5a22:	d100      	bne.n	5a26 <_vfprintf_r+0x102e>
    5a24:	e237      	b.n	5e96 <_vfprintf_r+0x149e>
    5a26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5a28:	9806      	ldr	r0, [sp, #24]
    5a2a:	3a45      	subs	r2, #69	; 0x45
    5a2c:	0013      	movs	r3, r2
    5a2e:	4259      	negs	r1, r3
    5a30:	4159      	adcs	r1, r3
    5a32:	ab20      	add	r3, sp, #128	; 0x80
    5a34:	000d      	movs	r5, r1
    5a36:	9303      	str	r3, [sp, #12]
    5a38:	ab1f      	add	r3, sp, #124	; 0x7c
    5a3a:	9302      	str	r3, [sp, #8]
    5a3c:	2302      	movs	r3, #2
    5a3e:	aa23      	add	r2, sp, #140	; 0x8c
    5a40:	4455      	add	r5, sl
    5a42:	921b      	str	r2, [sp, #108]	; 0x6c
    5a44:	9204      	str	r2, [sp, #16]
    5a46:	9300      	str	r3, [sp, #0]
    5a48:	9501      	str	r5, [sp, #4]
    5a4a:	9b08      	ldr	r3, [sp, #32]
    5a4c:	464a      	mov	r2, r9
    5a4e:	f000 fcab 	bl	63a8 <_dtoa_r>
    5a52:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5a54:	9011      	str	r0, [sp, #68]	; 0x44
    5a56:	2b67      	cmp	r3, #103	; 0x67
    5a58:	d000      	beq.n	5a5c <_vfprintf_r+0x1064>
    5a5a:	e20b      	b.n	5e74 <_vfprintf_r+0x147c>
    5a5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5a5e:	4698      	mov	r8, r3
    5a60:	44a8      	add	r8, r5
    5a62:	07e3      	lsls	r3, r4, #31
    5a64:	d400      	bmi.n	5a68 <_vfprintf_r+0x1070>
    5a66:	e277      	b.n	5f58 <_vfprintf_r+0x1560>
    5a68:	2300      	movs	r3, #0
    5a6a:	2200      	movs	r2, #0
    5a6c:	4648      	mov	r0, r9
    5a6e:	9908      	ldr	r1, [sp, #32]
    5a70:	f7fe fc9c 	bl	43ac <__aeabi_dcmpeq>
    5a74:	4643      	mov	r3, r8
    5a76:	2800      	cmp	r0, #0
    5a78:	d10a      	bne.n	5a90 <_vfprintf_r+0x1098>
    5a7a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5a7c:	4543      	cmp	r3, r8
    5a7e:	d207      	bcs.n	5a90 <_vfprintf_r+0x1098>
    5a80:	2130      	movs	r1, #48	; 0x30
    5a82:	4640      	mov	r0, r8
    5a84:	1c5a      	adds	r2, r3, #1
    5a86:	9223      	str	r2, [sp, #140]	; 0x8c
    5a88:	7019      	strb	r1, [r3, #0]
    5a8a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5a8c:	4298      	cmp	r0, r3
    5a8e:	d8f9      	bhi.n	5a84 <_vfprintf_r+0x108c>
    5a90:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5a92:	1a9b      	subs	r3, r3, r2
    5a94:	9314      	str	r3, [sp, #80]	; 0x50
    5a96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5a98:	2b47      	cmp	r3, #71	; 0x47
    5a9a:	d100      	bne.n	5a9e <_vfprintf_r+0x10a6>
    5a9c:	e0d0      	b.n	5c40 <_vfprintf_r+0x1248>
    5a9e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5aa0:	2b65      	cmp	r3, #101	; 0x65
    5aa2:	dc00      	bgt.n	5aa6 <_vfprintf_r+0x10ae>
    5aa4:	e2d5      	b.n	6052 <_vfprintf_r+0x165a>
    5aa6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5aa8:	2b66      	cmp	r3, #102	; 0x66
    5aaa:	d100      	bne.n	5aae <_vfprintf_r+0x10b6>
    5aac:	e1c6      	b.n	5e3c <_vfprintf_r+0x1444>
    5aae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5ab0:	9313      	str	r3, [sp, #76]	; 0x4c
    5ab2:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5ab4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5ab6:	0019      	movs	r1, r3
    5ab8:	4291      	cmp	r1, r2
    5aba:	dd00      	ble.n	5abe <_vfprintf_r+0x10c6>
    5abc:	e1a0      	b.n	5e00 <_vfprintf_r+0x1408>
    5abe:	07e3      	lsls	r3, r4, #31
    5ac0:	d500      	bpl.n	5ac4 <_vfprintf_r+0x10cc>
    5ac2:	e242      	b.n	5f4a <_vfprintf_r+0x1552>
    5ac4:	43d3      	mvns	r3, r2
    5ac6:	17db      	asrs	r3, r3, #31
    5ac8:	0011      	movs	r1, r2
    5aca:	401a      	ands	r2, r3
    5acc:	2367      	movs	r3, #103	; 0x67
    5ace:	9208      	str	r2, [sp, #32]
    5ad0:	910e      	str	r1, [sp, #56]	; 0x38
    5ad2:	9312      	str	r3, [sp, #72]	; 0x48
    5ad4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5ad6:	2b00      	cmp	r3, #0
    5ad8:	d000      	beq.n	5adc <_vfprintf_r+0x10e4>
    5ada:	e0a9      	b.n	5c30 <_vfprintf_r+0x1238>
    5adc:	ab16      	add	r3, sp, #88	; 0x58
    5ade:	7fdb      	ldrb	r3, [r3, #31]
    5ae0:	4698      	mov	r8, r3
    5ae2:	2300      	movs	r3, #0
    5ae4:	469a      	mov	sl, r3
    5ae6:	f7ff f8fc 	bl	4ce2 <_vfprintf_r+0x2ea>
    5aea:	46cb      	mov	fp, r9
    5aec:	46a1      	mov	r9, r4
    5aee:	0014      	movs	r4, r2
    5af0:	e637      	b.n	5762 <_vfprintf_r+0xd6a>
    5af2:	464b      	mov	r3, r9
    5af4:	6d98      	ldr	r0, [r3, #88]	; 0x58
    5af6:	f002 f861 	bl	7bbc <__retarget_lock_release_recursive>
    5afa:	2301      	movs	r3, #1
    5afc:	425b      	negs	r3, r3
    5afe:	930a      	str	r3, [sp, #40]	; 0x28
    5b00:	f7ff f82b 	bl	4b5a <_vfprintf_r+0x162>
    5b04:	9a09      	ldr	r2, [sp, #36]	; 0x24
    5b06:	07d2      	lsls	r2, r2, #31
    5b08:	d400      	bmi.n	5b0c <_vfprintf_r+0x1114>
    5b0a:	e68f      	b.n	582c <_vfprintf_r+0xe34>
    5b0c:	e680      	b.n	5810 <_vfprintf_r+0xe18>
    5b0e:	3608      	adds	r6, #8
    5b10:	e679      	b.n	5806 <_vfprintf_r+0xe0e>
    5b12:	68bc      	ldr	r4, [r7, #8]
    5b14:	f7ff fb73 	bl	51fe <_vfprintf_r+0x806>
    5b18:	003a      	movs	r2, r7
    5b1a:	4659      	mov	r1, fp
    5b1c:	9806      	ldr	r0, [sp, #24]
    5b1e:	f003 f9cd 	bl	8ebc <__sprint_r>
    5b22:	2800      	cmp	r0, #0
    5b24:	d000      	beq.n	5b28 <_vfprintf_r+0x1130>
    5b26:	e4f7      	b.n	5518 <_vfprintf_r+0xb20>
    5b28:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5b2a:	68bc      	ldr	r4, [r7, #8]
    5b2c:	ae32      	add	r6, sp, #200	; 0xc8
    5b2e:	e67d      	b.n	582c <_vfprintf_r+0xe34>
    5b30:	2320      	movs	r3, #32
    5b32:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5b34:	439a      	bics	r2, r3
    5b36:	3b1a      	subs	r3, #26
    5b38:	920e      	str	r2, [sp, #56]	; 0x38
    5b3a:	469a      	mov	sl, r3
    5b3c:	e75f      	b.n	59fe <_vfprintf_r+0x1006>
    5b3e:	232d      	movs	r3, #45	; 0x2d
    5b40:	aa16      	add	r2, sp, #88	; 0x58
    5b42:	77d3      	strb	r3, [r2, #31]
    5b44:	4698      	mov	r8, r3
    5b46:	f7ff faa8 	bl	509a <_vfprintf_r+0x6a2>
    5b4a:	003a      	movs	r2, r7
    5b4c:	4659      	mov	r1, fp
    5b4e:	9806      	ldr	r0, [sp, #24]
    5b50:	f003 f9b4 	bl	8ebc <__sprint_r>
    5b54:	2800      	cmp	r0, #0
    5b56:	d000      	beq.n	5b5a <_vfprintf_r+0x1162>
    5b58:	e4de      	b.n	5518 <_vfprintf_r+0xb20>
    5b5a:	ae32      	add	r6, sp, #200	; 0xc8
    5b5c:	e419      	b.n	5392 <_vfprintf_r+0x99a>
    5b5e:	4be3      	ldr	r3, [pc, #908]	; (5eec <_vfprintf_r+0x14f4>)
    5b60:	3401      	adds	r4, #1
    5b62:	6033      	str	r3, [r6, #0]
    5b64:	2301      	movs	r3, #1
    5b66:	6073      	str	r3, [r6, #4]
    5b68:	687b      	ldr	r3, [r7, #4]
    5b6a:	60bc      	str	r4, [r7, #8]
    5b6c:	3301      	adds	r3, #1
    5b6e:	607b      	str	r3, [r7, #4]
    5b70:	2b07      	cmp	r3, #7
    5b72:	dd00      	ble.n	5b76 <_vfprintf_r+0x117e>
    5b74:	e155      	b.n	5e22 <_vfprintf_r+0x142a>
    5b76:	3608      	adds	r6, #8
    5b78:	2800      	cmp	r0, #0
    5b7a:	d107      	bne.n	5b8c <_vfprintf_r+0x1194>
    5b7c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5b7e:	2b00      	cmp	r3, #0
    5b80:	d104      	bne.n	5b8c <_vfprintf_r+0x1194>
    5b82:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5b84:	07db      	lsls	r3, r3, #31
    5b86:	d401      	bmi.n	5b8c <_vfprintf_r+0x1194>
    5b88:	f7ff fb39 	bl	51fe <_vfprintf_r+0x806>
    5b8c:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5b8e:	6033      	str	r3, [r6, #0]
    5b90:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    5b92:	1919      	adds	r1, r3, r4
    5b94:	6073      	str	r3, [r6, #4]
    5b96:	687b      	ldr	r3, [r7, #4]
    5b98:	60b9      	str	r1, [r7, #8]
    5b9a:	3301      	adds	r3, #1
    5b9c:	607b      	str	r3, [r7, #4]
    5b9e:	2b07      	cmp	r3, #7
    5ba0:	dd00      	ble.n	5ba4 <_vfprintf_r+0x11ac>
    5ba2:	e1c4      	b.n	5f2e <_vfprintf_r+0x1536>
    5ba4:	0032      	movs	r2, r6
    5ba6:	3208      	adds	r2, #8
    5ba8:	2800      	cmp	r0, #0
    5baa:	da00      	bge.n	5bae <_vfprintf_r+0x11b6>
    5bac:	e195      	b.n	5eda <_vfprintf_r+0x14e2>
    5bae:	9811      	ldr	r0, [sp, #68]	; 0x44
    5bb0:	3301      	adds	r3, #1
    5bb2:	6010      	str	r0, [r2, #0]
    5bb4:	9814      	ldr	r0, [sp, #80]	; 0x50
    5bb6:	607b      	str	r3, [r7, #4]
    5bb8:	1844      	adds	r4, r0, r1
    5bba:	6050      	str	r0, [r2, #4]
    5bbc:	60bc      	str	r4, [r7, #8]
    5bbe:	2b07      	cmp	r3, #7
    5bc0:	dd01      	ble.n	5bc6 <_vfprintf_r+0x11ce>
    5bc2:	f7ff fbc2 	bl	534a <_vfprintf_r+0x952>
    5bc6:	3208      	adds	r2, #8
    5bc8:	0016      	movs	r6, r2
    5bca:	f7ff fb18 	bl	51fe <_vfprintf_r+0x806>
    5bce:	990f      	ldr	r1, [sp, #60]	; 0x3c
    5bd0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5bd2:	680b      	ldr	r3, [r1, #0]
    5bd4:	601a      	str	r2, [r3, #0]
    5bd6:	17d2      	asrs	r2, r2, #31
    5bd8:	605a      	str	r2, [r3, #4]
    5bda:	000b      	movs	r3, r1
    5bdc:	3304      	adds	r3, #4
    5bde:	930f      	str	r3, [sp, #60]	; 0x3c
    5be0:	f7fe ff58 	bl	4a94 <_vfprintf_r+0x9c>
    5be4:	464b      	mov	r3, r9
    5be6:	9a07      	ldr	r2, [sp, #28]
    5be8:	431c      	orrs	r4, r3
    5bea:	3201      	adds	r2, #1
    5bec:	7813      	ldrb	r3, [r2, #0]
    5bee:	9207      	str	r2, [sp, #28]
    5bf0:	f7fe ff8b 	bl	4b0a <_vfprintf_r+0x112>
    5bf4:	003a      	movs	r2, r7
    5bf6:	4659      	mov	r1, fp
    5bf8:	9806      	ldr	r0, [sp, #24]
    5bfa:	f003 f95f 	bl	8ebc <__sprint_r>
    5bfe:	2800      	cmp	r0, #0
    5c00:	d000      	beq.n	5c04 <_vfprintf_r+0x120c>
    5c02:	e489      	b.n	5518 <_vfprintf_r+0xb20>
    5c04:	68bc      	ldr	r4, [r7, #8]
    5c06:	ae32      	add	r6, sp, #200	; 0xc8
    5c08:	f7ff fbdc 	bl	53c4 <_vfprintf_r+0x9cc>
    5c0c:	4bb8      	ldr	r3, [pc, #736]	; (5ef0 <_vfprintf_r+0x14f8>)
    5c0e:	9311      	str	r3, [sp, #68]	; 0x44
    5c10:	f7ff fa4a 	bl	50a8 <_vfprintf_r+0x6b0>
    5c14:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5c16:	ab32      	add	r3, sp, #200	; 0xc8
    5c18:	1a9b      	subs	r3, r3, r2
    5c1a:	930e      	str	r3, [sp, #56]	; 0x38
    5c1c:	f7ff f859 	bl	4cd2 <_vfprintf_r+0x2da>
    5c20:	9811      	ldr	r0, [sp, #68]	; 0x44
    5c22:	f7fe feb7 	bl	4994 <strlen>
    5c26:	0002      	movs	r2, r0
    5c28:	900e      	str	r0, [sp, #56]	; 0x38
    5c2a:	0003      	movs	r3, r0
    5c2c:	f7ff f9a1 	bl	4f72 <_vfprintf_r+0x57a>
    5c30:	232d      	movs	r3, #45	; 0x2d
    5c32:	aa16      	add	r2, sp, #88	; 0x58
    5c34:	77d3      	strb	r3, [r2, #31]
    5c36:	4698      	mov	r8, r3
    5c38:	2300      	movs	r3, #0
    5c3a:	469a      	mov	sl, r3
    5c3c:	f7ff f854 	bl	4ce8 <_vfprintf_r+0x2f0>
    5c40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5c42:	9313      	str	r3, [sp, #76]	; 0x4c
    5c44:	1cda      	adds	r2, r3, #3
    5c46:	db02      	blt.n	5c4e <_vfprintf_r+0x1256>
    5c48:	459a      	cmp	sl, r3
    5c4a:	db00      	blt.n	5c4e <_vfprintf_r+0x1256>
    5c4c:	e731      	b.n	5ab2 <_vfprintf_r+0x10ba>
    5c4e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5c50:	3b02      	subs	r3, #2
    5c52:	9312      	str	r3, [sp, #72]	; 0x48
    5c54:	222c      	movs	r2, #44	; 0x2c
    5c56:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5c58:	2148      	movs	r1, #72	; 0x48
    5c5a:	1e5d      	subs	r5, r3, #1
    5c5c:	ab16      	add	r3, sp, #88	; 0x58
    5c5e:	189b      	adds	r3, r3, r2
    5c60:	466a      	mov	r2, sp
    5c62:	1852      	adds	r2, r2, r1
    5c64:	7812      	ldrb	r2, [r2, #0]
    5c66:	951f      	str	r5, [sp, #124]	; 0x7c
    5c68:	701a      	strb	r2, [r3, #0]
    5c6a:	2d00      	cmp	r5, #0
    5c6c:	da00      	bge.n	5c70 <_vfprintf_r+0x1278>
    5c6e:	e1cb      	b.n	6008 <_vfprintf_r+0x1610>
    5c70:	212d      	movs	r1, #45	; 0x2d
    5c72:	232b      	movs	r3, #43	; 0x2b
    5c74:	aa16      	add	r2, sp, #88	; 0x58
    5c76:	1852      	adds	r2, r2, r1
    5c78:	7013      	strb	r3, [r2, #0]
    5c7a:	2d09      	cmp	r5, #9
    5c7c:	dc00      	bgt.n	5c80 <_vfprintf_r+0x1288>
    5c7e:	e16d      	b.n	5f5c <_vfprintf_r+0x1564>
    5c80:	aa16      	add	r2, sp, #88	; 0x58
    5c82:	233b      	movs	r3, #59	; 0x3b
    5c84:	4694      	mov	ip, r2
    5c86:	4463      	add	r3, ip
    5c88:	469a      	mov	sl, r3
    5c8a:	46b1      	mov	r9, r6
    5c8c:	46a0      	mov	r8, r4
    5c8e:	4656      	mov	r6, sl
    5c90:	e000      	b.n	5c94 <_vfprintf_r+0x129c>
    5c92:	0026      	movs	r6, r4
    5c94:	0028      	movs	r0, r5
    5c96:	210a      	movs	r1, #10
    5c98:	f003 fcb6 	bl	9608 <__aeabi_idivmod>
    5c9c:	1e74      	subs	r4, r6, #1
    5c9e:	3130      	adds	r1, #48	; 0x30
    5ca0:	7021      	strb	r1, [r4, #0]
    5ca2:	0028      	movs	r0, r5
    5ca4:	210a      	movs	r1, #10
    5ca6:	f003 fbc9 	bl	943c <__divsi3>
    5caa:	0005      	movs	r5, r0
    5cac:	2809      	cmp	r0, #9
    5cae:	dcf0      	bgt.n	5c92 <_vfprintf_r+0x129a>
    5cb0:	0023      	movs	r3, r4
    5cb2:	4644      	mov	r4, r8
    5cb4:	46b0      	mov	r8, r6
    5cb6:	464e      	mov	r6, r9
    5cb8:	4699      	mov	r9, r3
    5cba:	0003      	movs	r3, r0
    5cbc:	3330      	adds	r3, #48	; 0x30
    5cbe:	b2d8      	uxtb	r0, r3
    5cc0:	4643      	mov	r3, r8
    5cc2:	3b02      	subs	r3, #2
    5cc4:	7018      	strb	r0, [r3, #0]
    5cc6:	459a      	cmp	sl, r3
    5cc8:	d800      	bhi.n	5ccc <_vfprintf_r+0x12d4>
    5cca:	e1f6      	b.n	60ba <_vfprintf_r+0x16c2>
    5ccc:	4642      	mov	r2, r8
    5cce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5cd0:	4645      	mov	r5, r8
    5cd2:	1a99      	subs	r1, r3, r2
    5cd4:	2301      	movs	r3, #1
    5cd6:	3107      	adds	r1, #7
    5cd8:	425b      	negs	r3, r3
    5cda:	e001      	b.n	5ce0 <_vfprintf_r+0x12e8>
    5cdc:	5ce8      	ldrb	r0, [r5, r3]
    5cde:	3301      	adds	r3, #1
    5ce0:	aa21      	add	r2, sp, #132	; 0x84
    5ce2:	18d2      	adds	r2, r2, r3
    5ce4:	70d0      	strb	r0, [r2, #3]
    5ce6:	428b      	cmp	r3, r1
    5ce8:	d1f8      	bne.n	5cdc <_vfprintf_r+0x12e4>
    5cea:	a916      	add	r1, sp, #88	; 0x58
    5cec:	468c      	mov	ip, r1
    5cee:	222e      	movs	r2, #46	; 0x2e
    5cf0:	464b      	mov	r3, r9
    5cf2:	4462      	add	r2, ip
    5cf4:	4694      	mov	ip, r2
    5cf6:	1afb      	subs	r3, r7, r3
    5cf8:	4463      	add	r3, ip
    5cfa:	aa21      	add	r2, sp, #132	; 0x84
    5cfc:	9914      	ldr	r1, [sp, #80]	; 0x50
    5cfe:	1a9b      	subs	r3, r3, r2
    5d00:	469c      	mov	ip, r3
    5d02:	000a      	movs	r2, r1
    5d04:	4462      	add	r2, ip
    5d06:	931a      	str	r3, [sp, #104]	; 0x68
    5d08:	920e      	str	r2, [sp, #56]	; 0x38
    5d0a:	2901      	cmp	r1, #1
    5d0c:	dc00      	bgt.n	5d10 <_vfprintf_r+0x1318>
    5d0e:	e170      	b.n	5ff2 <_vfprintf_r+0x15fa>
    5d10:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5d12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5d14:	4694      	mov	ip, r2
    5d16:	4463      	add	r3, ip
    5d18:	001a      	movs	r2, r3
    5d1a:	930e      	str	r3, [sp, #56]	; 0x38
    5d1c:	43db      	mvns	r3, r3
    5d1e:	17db      	asrs	r3, r3, #31
    5d20:	401a      	ands	r2, r3
    5d22:	2300      	movs	r3, #0
    5d24:	9208      	str	r2, [sp, #32]
    5d26:	9313      	str	r3, [sp, #76]	; 0x4c
    5d28:	e6d4      	b.n	5ad4 <_vfprintf_r+0x10dc>
    5d2a:	003a      	movs	r2, r7
    5d2c:	4659      	mov	r1, fp
    5d2e:	9806      	ldr	r0, [sp, #24]
    5d30:	f003 f8c4 	bl	8ebc <__sprint_r>
    5d34:	2800      	cmp	r0, #0
    5d36:	d001      	beq.n	5d3c <_vfprintf_r+0x1344>
    5d38:	f7ff fbee 	bl	5518 <_vfprintf_r+0xb20>
    5d3c:	68bc      	ldr	r4, [r7, #8]
    5d3e:	ae32      	add	r6, sp, #200	; 0xc8
    5d40:	e46a      	b.n	5618 <_vfprintf_r+0xc20>
    5d42:	4653      	mov	r3, sl
    5d44:	2b00      	cmp	r3, #0
    5d46:	d000      	beq.n	5d4a <_vfprintf_r+0x1352>
    5d48:	e659      	b.n	59fe <_vfprintf_r+0x1006>
    5d4a:	3301      	adds	r3, #1
    5d4c:	469a      	mov	sl, r3
    5d4e:	e656      	b.n	59fe <_vfprintf_r+0x1006>
    5d50:	4653      	mov	r3, sl
    5d52:	9308      	str	r3, [sp, #32]
    5d54:	2b06      	cmp	r3, #6
    5d56:	d901      	bls.n	5d5c <_vfprintf_r+0x1364>
    5d58:	2306      	movs	r3, #6
    5d5a:	9308      	str	r3, [sp, #32]
    5d5c:	9b08      	ldr	r3, [sp, #32]
    5d5e:	950f      	str	r5, [sp, #60]	; 0x3c
    5d60:	930e      	str	r3, [sp, #56]	; 0x38
    5d62:	2300      	movs	r3, #0
    5d64:	4698      	mov	r8, r3
    5d66:	469a      	mov	sl, r3
    5d68:	9313      	str	r3, [sp, #76]	; 0x4c
    5d6a:	4b62      	ldr	r3, [pc, #392]	; (5ef4 <_vfprintf_r+0x14fc>)
    5d6c:	9409      	str	r4, [sp, #36]	; 0x24
    5d6e:	9311      	str	r3, [sp, #68]	; 0x44
    5d70:	f7fe ffbd 	bl	4cee <_vfprintf_r+0x2f6>
    5d74:	003a      	movs	r2, r7
    5d76:	4659      	mov	r1, fp
    5d78:	9806      	ldr	r0, [sp, #24]
    5d7a:	f003 f89f 	bl	8ebc <__sprint_r>
    5d7e:	2800      	cmp	r0, #0
    5d80:	d001      	beq.n	5d86 <_vfprintf_r+0x138e>
    5d82:	f7ff fbc9 	bl	5518 <_vfprintf_r+0xb20>
    5d86:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5d88:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    5d8a:	68bc      	ldr	r4, [r7, #8]
    5d8c:	1a9b      	subs	r3, r3, r2
    5d8e:	ae32      	add	r6, sp, #200	; 0xc8
    5d90:	e567      	b.n	5862 <_vfprintf_r+0xe6a>
    5d92:	ab23      	add	r3, sp, #140	; 0x8c
    5d94:	931b      	str	r3, [sp, #108]	; 0x6c
    5d96:	9304      	str	r3, [sp, #16]
    5d98:	ab20      	add	r3, sp, #128	; 0x80
    5d9a:	9303      	str	r3, [sp, #12]
    5d9c:	ab1f      	add	r3, sp, #124	; 0x7c
    5d9e:	9302      	str	r3, [sp, #8]
    5da0:	4653      	mov	r3, sl
    5da2:	9301      	str	r3, [sp, #4]
    5da4:	2303      	movs	r3, #3
    5da6:	464a      	mov	r2, r9
    5da8:	9300      	str	r3, [sp, #0]
    5daa:	9806      	ldr	r0, [sp, #24]
    5dac:	9b08      	ldr	r3, [sp, #32]
    5dae:	f000 fafb 	bl	63a8 <_dtoa_r>
    5db2:	0003      	movs	r3, r0
    5db4:	4453      	add	r3, sl
    5db6:	4698      	mov	r8, r3
    5db8:	4655      	mov	r5, sl
    5dba:	9011      	str	r0, [sp, #68]	; 0x44
    5dbc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5dbe:	781b      	ldrb	r3, [r3, #0]
    5dc0:	2b30      	cmp	r3, #48	; 0x30
    5dc2:	d002      	beq.n	5dca <_vfprintf_r+0x13d2>
    5dc4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5dc6:	4498      	add	r8, r3
    5dc8:	e64e      	b.n	5a68 <_vfprintf_r+0x1070>
    5dca:	2200      	movs	r2, #0
    5dcc:	2300      	movs	r3, #0
    5dce:	4648      	mov	r0, r9
    5dd0:	9908      	ldr	r1, [sp, #32]
    5dd2:	f7fe faeb 	bl	43ac <__aeabi_dcmpeq>
    5dd6:	2800      	cmp	r0, #0
    5dd8:	d1f4      	bne.n	5dc4 <_vfprintf_r+0x13cc>
    5dda:	2301      	movs	r3, #1
    5ddc:	1b5b      	subs	r3, r3, r5
    5dde:	931f      	str	r3, [sp, #124]	; 0x7c
    5de0:	4498      	add	r8, r3
    5de2:	e641      	b.n	5a68 <_vfprintf_r+0x1070>
    5de4:	46c1      	mov	r9, r8
    5de6:	f7ff fb1f 	bl	5428 <_vfprintf_r+0xa30>
    5dea:	2280      	movs	r2, #128	; 0x80
    5dec:	0612      	lsls	r2, r2, #24
    5dee:	4694      	mov	ip, r2
    5df0:	9b16      	ldr	r3, [sp, #88]	; 0x58
    5df2:	4699      	mov	r9, r3
    5df4:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5df6:	4463      	add	r3, ip
    5df8:	9308      	str	r3, [sp, #32]
    5dfa:	232d      	movs	r3, #45	; 0x2d
    5dfc:	9310      	str	r3, [sp, #64]	; 0x40
    5dfe:	e60b      	b.n	5a18 <_vfprintf_r+0x1020>
    5e00:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5e02:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5e04:	4694      	mov	ip, r2
    5e06:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5e08:	4463      	add	r3, ip
    5e0a:	930e      	str	r3, [sp, #56]	; 0x38
    5e0c:	2a00      	cmp	r2, #0
    5e0e:	dc00      	bgt.n	5e12 <_vfprintf_r+0x141a>
    5e10:	e0e3      	b.n	5fda <_vfprintf_r+0x15e2>
    5e12:	001a      	movs	r2, r3
    5e14:	43db      	mvns	r3, r3
    5e16:	17db      	asrs	r3, r3, #31
    5e18:	401a      	ands	r2, r3
    5e1a:	2367      	movs	r3, #103	; 0x67
    5e1c:	9208      	str	r2, [sp, #32]
    5e1e:	9312      	str	r3, [sp, #72]	; 0x48
    5e20:	e658      	b.n	5ad4 <_vfprintf_r+0x10dc>
    5e22:	003a      	movs	r2, r7
    5e24:	4659      	mov	r1, fp
    5e26:	9806      	ldr	r0, [sp, #24]
    5e28:	f003 f848 	bl	8ebc <__sprint_r>
    5e2c:	2800      	cmp	r0, #0
    5e2e:	d001      	beq.n	5e34 <_vfprintf_r+0x143c>
    5e30:	f7ff fb72 	bl	5518 <_vfprintf_r+0xb20>
    5e34:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5e36:	68bc      	ldr	r4, [r7, #8]
    5e38:	ae32      	add	r6, sp, #200	; 0xc8
    5e3a:	e69d      	b.n	5b78 <_vfprintf_r+0x1180>
    5e3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5e3e:	9313      	str	r3, [sp, #76]	; 0x4c
    5e40:	2b00      	cmp	r3, #0
    5e42:	dc00      	bgt.n	5e46 <_vfprintf_r+0x144e>
    5e44:	e0f2      	b.n	602c <_vfprintf_r+0x1634>
    5e46:	4652      	mov	r2, sl
    5e48:	2a00      	cmp	r2, #0
    5e4a:	d000      	beq.n	5e4e <_vfprintf_r+0x1456>
    5e4c:	e0a0      	b.n	5f90 <_vfprintf_r+0x1598>
    5e4e:	07e2      	lsls	r2, r4, #31
    5e50:	d500      	bpl.n	5e54 <_vfprintf_r+0x145c>
    5e52:	e09d      	b.n	5f90 <_vfprintf_r+0x1598>
    5e54:	9308      	str	r3, [sp, #32]
    5e56:	930e      	str	r3, [sp, #56]	; 0x38
    5e58:	e63c      	b.n	5ad4 <_vfprintf_r+0x10dc>
    5e5a:	ab16      	add	r3, sp, #88	; 0x58
    5e5c:	7fdb      	ldrb	r3, [r3, #31]
    5e5e:	950f      	str	r5, [sp, #60]	; 0x3c
    5e60:	4698      	mov	r8, r3
    5e62:	4653      	mov	r3, sl
    5e64:	9308      	str	r3, [sp, #32]
    5e66:	930e      	str	r3, [sp, #56]	; 0x38
    5e68:	2300      	movs	r3, #0
    5e6a:	9409      	str	r4, [sp, #36]	; 0x24
    5e6c:	469a      	mov	sl, r3
    5e6e:	9313      	str	r3, [sp, #76]	; 0x4c
    5e70:	f7fe ff37 	bl	4ce2 <_vfprintf_r+0x2ea>
    5e74:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5e76:	4698      	mov	r8, r3
    5e78:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5e7a:	44a8      	add	r8, r5
    5e7c:	2b47      	cmp	r3, #71	; 0x47
    5e7e:	d000      	beq.n	5e82 <_vfprintf_r+0x148a>
    5e80:	e5f2      	b.n	5a68 <_vfprintf_r+0x1070>
    5e82:	07e3      	lsls	r3, r4, #31
    5e84:	d400      	bmi.n	5e88 <_vfprintf_r+0x1490>
    5e86:	e0dc      	b.n	6042 <_vfprintf_r+0x164a>
    5e88:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5e8a:	4698      	mov	r8, r3
    5e8c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5e8e:	44a8      	add	r8, r5
    5e90:	2b46      	cmp	r3, #70	; 0x46
    5e92:	d093      	beq.n	5dbc <_vfprintf_r+0x13c4>
    5e94:	e5e8      	b.n	5a68 <_vfprintf_r+0x1070>
    5e96:	ab23      	add	r3, sp, #140	; 0x8c
    5e98:	931b      	str	r3, [sp, #108]	; 0x6c
    5e9a:	9304      	str	r3, [sp, #16]
    5e9c:	ab20      	add	r3, sp, #128	; 0x80
    5e9e:	9303      	str	r3, [sp, #12]
    5ea0:	ab1f      	add	r3, sp, #124	; 0x7c
    5ea2:	9302      	str	r3, [sp, #8]
    5ea4:	4653      	mov	r3, sl
    5ea6:	9301      	str	r3, [sp, #4]
    5ea8:	2303      	movs	r3, #3
    5eaa:	464a      	mov	r2, r9
    5eac:	9300      	str	r3, [sp, #0]
    5eae:	9806      	ldr	r0, [sp, #24]
    5eb0:	9b08      	ldr	r3, [sp, #32]
    5eb2:	f000 fa79 	bl	63a8 <_dtoa_r>
    5eb6:	4655      	mov	r5, sl
    5eb8:	9011      	str	r0, [sp, #68]	; 0x44
    5eba:	e7e5      	b.n	5e88 <_vfprintf_r+0x1490>
    5ebc:	003a      	movs	r2, r7
    5ebe:	4659      	mov	r1, fp
    5ec0:	9806      	ldr	r0, [sp, #24]
    5ec2:	f002 fffb 	bl	8ebc <__sprint_r>
    5ec6:	2800      	cmp	r0, #0
    5ec8:	d101      	bne.n	5ece <_vfprintf_r+0x14d6>
    5eca:	f7ff faab 	bl	5424 <_vfprintf_r+0xa2c>
    5ece:	f7ff faab 	bl	5428 <_vfprintf_r+0xa30>
    5ed2:	4642      	mov	r2, r8
    5ed4:	9207      	str	r2, [sp, #28]
    5ed6:	f7fe fe1b 	bl	4b10 <_vfprintf_r+0x118>
    5eda:	4244      	negs	r4, r0
    5edc:	3010      	adds	r0, #16
    5ede:	db00      	blt.n	5ee2 <_vfprintf_r+0x14ea>
    5ee0:	e0d8      	b.n	6094 <_vfprintf_r+0x169c>
    5ee2:	4805      	ldr	r0, [pc, #20]	; (5ef8 <_vfprintf_r+0x1500>)
    5ee4:	2610      	movs	r6, #16
    5ee6:	0005      	movs	r5, r0
    5ee8:	e00c      	b.n	5f04 <_vfprintf_r+0x150c>
    5eea:	46c0      	nop			; (mov r8, r8)
    5eec:	0000a25c 	.word	0x0000a25c
    5ef0:	0000a220 	.word	0x0000a220
    5ef4:	0000a254 	.word	0x0000a254
    5ef8:	0000a270 	.word	0x0000a270
    5efc:	3208      	adds	r2, #8
    5efe:	3c10      	subs	r4, #16
    5f00:	2c10      	cmp	r4, #16
    5f02:	dd51      	ble.n	5fa8 <_vfprintf_r+0x15b0>
    5f04:	3110      	adds	r1, #16
    5f06:	3301      	adds	r3, #1
    5f08:	6015      	str	r5, [r2, #0]
    5f0a:	6056      	str	r6, [r2, #4]
    5f0c:	60b9      	str	r1, [r7, #8]
    5f0e:	607b      	str	r3, [r7, #4]
    5f10:	2b07      	cmp	r3, #7
    5f12:	ddf3      	ble.n	5efc <_vfprintf_r+0x1504>
    5f14:	003a      	movs	r2, r7
    5f16:	4659      	mov	r1, fp
    5f18:	9806      	ldr	r0, [sp, #24]
    5f1a:	f002 ffcf 	bl	8ebc <__sprint_r>
    5f1e:	2800      	cmp	r0, #0
    5f20:	d001      	beq.n	5f26 <_vfprintf_r+0x152e>
    5f22:	f7ff faf9 	bl	5518 <_vfprintf_r+0xb20>
    5f26:	68b9      	ldr	r1, [r7, #8]
    5f28:	687b      	ldr	r3, [r7, #4]
    5f2a:	aa32      	add	r2, sp, #200	; 0xc8
    5f2c:	e7e7      	b.n	5efe <_vfprintf_r+0x1506>
    5f2e:	003a      	movs	r2, r7
    5f30:	4659      	mov	r1, fp
    5f32:	9806      	ldr	r0, [sp, #24]
    5f34:	f002 ffc2 	bl	8ebc <__sprint_r>
    5f38:	2800      	cmp	r0, #0
    5f3a:	d001      	beq.n	5f40 <_vfprintf_r+0x1548>
    5f3c:	f7ff faec 	bl	5518 <_vfprintf_r+0xb20>
    5f40:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5f42:	68b9      	ldr	r1, [r7, #8]
    5f44:	687b      	ldr	r3, [r7, #4]
    5f46:	aa32      	add	r2, sp, #200	; 0xc8
    5f48:	e62e      	b.n	5ba8 <_vfprintf_r+0x11b0>
    5f4a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5f4c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5f4e:	4694      	mov	ip, r2
    5f50:	4463      	add	r3, ip
    5f52:	001a      	movs	r2, r3
    5f54:	930e      	str	r3, [sp, #56]	; 0x38
    5f56:	e75d      	b.n	5e14 <_vfprintf_r+0x141c>
    5f58:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5f5a:	e599      	b.n	5a90 <_vfprintf_r+0x1098>
    5f5c:	212e      	movs	r1, #46	; 0x2e
    5f5e:	2330      	movs	r3, #48	; 0x30
    5f60:	aa16      	add	r2, sp, #88	; 0x58
    5f62:	1852      	adds	r2, r2, r1
    5f64:	7013      	strb	r3, [r2, #0]
    5f66:	002b      	movs	r3, r5
    5f68:	aa16      	add	r2, sp, #88	; 0x58
    5f6a:	3101      	adds	r1, #1
    5f6c:	3330      	adds	r3, #48	; 0x30
    5f6e:	1852      	adds	r2, r2, r1
    5f70:	7013      	strb	r3, [r2, #0]
    5f72:	ab22      	add	r3, sp, #136	; 0x88
    5f74:	e6c1      	b.n	5cfa <_vfprintf_r+0x1302>
    5f76:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5f78:	2b00      	cmp	r3, #0
    5f7a:	db52      	blt.n	6022 <_vfprintf_r+0x162a>
    5f7c:	ab16      	add	r3, sp, #88	; 0x58
    5f7e:	7fdb      	ldrb	r3, [r3, #31]
    5f80:	4698      	mov	r8, r3
    5f82:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5f84:	2b47      	cmp	r3, #71	; 0x47
    5f86:	dc48      	bgt.n	601a <_vfprintf_r+0x1622>
    5f88:	4b4e      	ldr	r3, [pc, #312]	; (60c4 <_vfprintf_r+0x16cc>)
    5f8a:	9311      	str	r3, [sp, #68]	; 0x44
    5f8c:	f7ff f88c 	bl	50a8 <_vfprintf_r+0x6b0>
    5f90:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5f92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5f94:	4694      	mov	ip, r2
    5f96:	4463      	add	r3, ip
    5f98:	4453      	add	r3, sl
    5f9a:	001a      	movs	r2, r3
    5f9c:	930e      	str	r3, [sp, #56]	; 0x38
    5f9e:	43db      	mvns	r3, r3
    5fa0:	17db      	asrs	r3, r3, #31
    5fa2:	401a      	ands	r2, r3
    5fa4:	9208      	str	r2, [sp, #32]
    5fa6:	e595      	b.n	5ad4 <_vfprintf_r+0x10dc>
    5fa8:	46a9      	mov	r9, r5
    5faa:	4648      	mov	r0, r9
    5fac:	1909      	adds	r1, r1, r4
    5fae:	3301      	adds	r3, #1
    5fb0:	6010      	str	r0, [r2, #0]
    5fb2:	6054      	str	r4, [r2, #4]
    5fb4:	60b9      	str	r1, [r7, #8]
    5fb6:	3208      	adds	r2, #8
    5fb8:	607b      	str	r3, [r7, #4]
    5fba:	2b07      	cmp	r3, #7
    5fbc:	dc00      	bgt.n	5fc0 <_vfprintf_r+0x15c8>
    5fbe:	e5f6      	b.n	5bae <_vfprintf_r+0x11b6>
    5fc0:	003a      	movs	r2, r7
    5fc2:	4659      	mov	r1, fp
    5fc4:	9806      	ldr	r0, [sp, #24]
    5fc6:	f002 ff79 	bl	8ebc <__sprint_r>
    5fca:	2800      	cmp	r0, #0
    5fcc:	d001      	beq.n	5fd2 <_vfprintf_r+0x15da>
    5fce:	f7ff faa3 	bl	5518 <_vfprintf_r+0xb20>
    5fd2:	68b9      	ldr	r1, [r7, #8]
    5fd4:	687b      	ldr	r3, [r7, #4]
    5fd6:	aa32      	add	r2, sp, #200	; 0xc8
    5fd8:	e5e9      	b.n	5bae <_vfprintf_r+0x11b6>
    5fda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5fdc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5fde:	1a98      	subs	r0, r3, r2
    5fe0:	1c43      	adds	r3, r0, #1
    5fe2:	001a      	movs	r2, r3
    5fe4:	930e      	str	r3, [sp, #56]	; 0x38
    5fe6:	e715      	b.n	5e14 <_vfprintf_r+0x141c>
    5fe8:	4a37      	ldr	r2, [pc, #220]	; (60c8 <_vfprintf_r+0x16d0>)
    5fea:	687b      	ldr	r3, [r7, #4]
    5fec:	4691      	mov	r9, r2
    5fee:	f7ff fbf5 	bl	57dc <_vfprintf_r+0xde4>
    5ff2:	2301      	movs	r3, #1
    5ff4:	4023      	ands	r3, r4
    5ff6:	9313      	str	r3, [sp, #76]	; 0x4c
    5ff8:	d000      	beq.n	5ffc <_vfprintf_r+0x1604>
    5ffa:	e689      	b.n	5d10 <_vfprintf_r+0x1318>
    5ffc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5ffe:	43d3      	mvns	r3, r2
    6000:	17db      	asrs	r3, r3, #31
    6002:	401a      	ands	r2, r3
    6004:	9208      	str	r2, [sp, #32]
    6006:	e565      	b.n	5ad4 <_vfprintf_r+0x10dc>
    6008:	2301      	movs	r3, #1
    600a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    600c:	391b      	subs	r1, #27
    600e:	1a9d      	subs	r5, r3, r2
    6010:	aa16      	add	r2, sp, #88	; 0x58
    6012:	332c      	adds	r3, #44	; 0x2c
    6014:	1852      	adds	r2, r2, r1
    6016:	7013      	strb	r3, [r2, #0]
    6018:	e62f      	b.n	5c7a <_vfprintf_r+0x1282>
    601a:	4b2c      	ldr	r3, [pc, #176]	; (60cc <_vfprintf_r+0x16d4>)
    601c:	9311      	str	r3, [sp, #68]	; 0x44
    601e:	f7ff f843 	bl	50a8 <_vfprintf_r+0x6b0>
    6022:	232d      	movs	r3, #45	; 0x2d
    6024:	aa16      	add	r2, sp, #88	; 0x58
    6026:	77d3      	strb	r3, [r2, #31]
    6028:	4698      	mov	r8, r3
    602a:	e7aa      	b.n	5f82 <_vfprintf_r+0x158a>
    602c:	4653      	mov	r3, sl
    602e:	2b00      	cmp	r3, #0
    6030:	d101      	bne.n	6036 <_vfprintf_r+0x163e>
    6032:	07e3      	lsls	r3, r4, #31
    6034:	d503      	bpl.n	603e <_vfprintf_r+0x1646>
    6036:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6038:	1c58      	adds	r0, r3, #1
    603a:	0003      	movs	r3, r0
    603c:	e7ac      	b.n	5f98 <_vfprintf_r+0x15a0>
    603e:	2301      	movs	r3, #1
    6040:	e708      	b.n	5e54 <_vfprintf_r+0x145c>
    6042:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6044:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6046:	1a9b      	subs	r3, r3, r2
    6048:	9314      	str	r3, [sp, #80]	; 0x50
    604a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    604c:	2b47      	cmp	r3, #71	; 0x47
    604e:	d100      	bne.n	6052 <_vfprintf_r+0x165a>
    6050:	e5f6      	b.n	5c40 <_vfprintf_r+0x1248>
    6052:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6054:	9313      	str	r3, [sp, #76]	; 0x4c
    6056:	e5fd      	b.n	5c54 <_vfprintf_r+0x125c>
    6058:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    605a:	1d1d      	adds	r5, r3, #4
    605c:	681b      	ldr	r3, [r3, #0]
    605e:	46a8      	mov	r8, r5
    6060:	469a      	mov	sl, r3
    6062:	2b00      	cmp	r3, #0
    6064:	db0a      	blt.n	607c <_vfprintf_r+0x1684>
    6066:	4645      	mov	r5, r8
    6068:	9b07      	ldr	r3, [sp, #28]
    606a:	950f      	str	r5, [sp, #60]	; 0x3c
    606c:	785b      	ldrb	r3, [r3, #1]
    606e:	9207      	str	r2, [sp, #28]
    6070:	f7fe fd4b 	bl	4b0a <_vfprintf_r+0x112>
    6074:	ab16      	add	r3, sp, #88	; 0x58
    6076:	77d8      	strb	r0, [r3, #31]
    6078:	f7ff f830 	bl	50dc <_vfprintf_r+0x6e4>
    607c:	2301      	movs	r3, #1
    607e:	425b      	negs	r3, r3
    6080:	469a      	mov	sl, r3
    6082:	e7f0      	b.n	6066 <_vfprintf_r+0x166e>
    6084:	ab16      	add	r3, sp, #88	; 0x58
    6086:	77d8      	strb	r0, [r3, #31]
    6088:	f7fe ff27 	bl	4eda <_vfprintf_r+0x4e2>
    608c:	ab16      	add	r3, sp, #88	; 0x58
    608e:	77d8      	strb	r0, [r3, #31]
    6090:	f7fe fdce 	bl	4c30 <_vfprintf_r+0x238>
    6094:	480c      	ldr	r0, [pc, #48]	; (60c8 <_vfprintf_r+0x16d0>)
    6096:	4681      	mov	r9, r0
    6098:	e787      	b.n	5faa <_vfprintf_r+0x15b2>
    609a:	ab16      	add	r3, sp, #88	; 0x58
    609c:	77d8      	strb	r0, [r3, #31]
    609e:	f7ff f829 	bl	50f4 <_vfprintf_r+0x6fc>
    60a2:	ab16      	add	r3, sp, #88	; 0x58
    60a4:	77d8      	strb	r0, [r3, #31]
    60a6:	f7fe ffc3 	bl	5030 <_vfprintf_r+0x638>
    60aa:	ab16      	add	r3, sp, #88	; 0x58
    60ac:	77d8      	strb	r0, [r3, #31]
    60ae:	f7fe ffa5 	bl	4ffc <_vfprintf_r+0x604>
    60b2:	ab16      	add	r3, sp, #88	; 0x58
    60b4:	77d8      	strb	r0, [r3, #31]
    60b6:	f7fe feaf 	bl	4e18 <_vfprintf_r+0x420>
    60ba:	aa16      	add	r2, sp, #88	; 0x58
    60bc:	232e      	movs	r3, #46	; 0x2e
    60be:	4694      	mov	ip, r2
    60c0:	4463      	add	r3, ip
    60c2:	e61a      	b.n	5cfa <_vfprintf_r+0x1302>
    60c4:	0000a224 	.word	0x0000a224
    60c8:	0000a270 	.word	0x0000a270
    60cc:	0000a228 	.word	0x0000a228

000060d0 <__sbprintf>:
    60d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    60d2:	0015      	movs	r5, r2
    60d4:	2202      	movs	r2, #2
    60d6:	4c1e      	ldr	r4, [pc, #120]	; (6150 <__sbprintf+0x80>)
    60d8:	001f      	movs	r7, r3
    60da:	898b      	ldrh	r3, [r1, #12]
    60dc:	44a5      	add	sp, r4
    60de:	4393      	bics	r3, r2
    60e0:	466a      	mov	r2, sp
    60e2:	8193      	strh	r3, [r2, #12]
    60e4:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    60e6:	0006      	movs	r6, r0
    60e8:	9319      	str	r3, [sp, #100]	; 0x64
    60ea:	89cb      	ldrh	r3, [r1, #14]
    60ec:	a816      	add	r0, sp, #88	; 0x58
    60ee:	81d3      	strh	r3, [r2, #14]
    60f0:	69cb      	ldr	r3, [r1, #28]
    60f2:	000c      	movs	r4, r1
    60f4:	9307      	str	r3, [sp, #28]
    60f6:	6a4b      	ldr	r3, [r1, #36]	; 0x24
    60f8:	9309      	str	r3, [sp, #36]	; 0x24
    60fa:	ab1a      	add	r3, sp, #104	; 0x68
    60fc:	9300      	str	r3, [sp, #0]
    60fe:	9304      	str	r3, [sp, #16]
    6100:	2380      	movs	r3, #128	; 0x80
    6102:	00db      	lsls	r3, r3, #3
    6104:	9302      	str	r3, [sp, #8]
    6106:	9305      	str	r3, [sp, #20]
    6108:	2300      	movs	r3, #0
    610a:	9306      	str	r3, [sp, #24]
    610c:	f001 fd50 	bl	7bb0 <__retarget_lock_init_recursive>
    6110:	002a      	movs	r2, r5
    6112:	003b      	movs	r3, r7
    6114:	4669      	mov	r1, sp
    6116:	0030      	movs	r0, r6
    6118:	f7fe fc6e 	bl	49f8 <_vfprintf_r>
    611c:	1e05      	subs	r5, r0, #0
    611e:	db05      	blt.n	612c <__sbprintf+0x5c>
    6120:	4669      	mov	r1, sp
    6122:	0030      	movs	r0, r6
    6124:	f001 f9ac 	bl	7480 <_fflush_r>
    6128:	2800      	cmp	r0, #0
    612a:	d10e      	bne.n	614a <__sbprintf+0x7a>
    612c:	466b      	mov	r3, sp
    612e:	899b      	ldrh	r3, [r3, #12]
    6130:	065b      	lsls	r3, r3, #25
    6132:	d503      	bpl.n	613c <__sbprintf+0x6c>
    6134:	2240      	movs	r2, #64	; 0x40
    6136:	89a3      	ldrh	r3, [r4, #12]
    6138:	4313      	orrs	r3, r2
    613a:	81a3      	strh	r3, [r4, #12]
    613c:	9816      	ldr	r0, [sp, #88]	; 0x58
    613e:	f001 fd39 	bl	7bb4 <__retarget_lock_close_recursive>
    6142:	0028      	movs	r0, r5
    6144:	4b03      	ldr	r3, [pc, #12]	; (6154 <__sbprintf+0x84>)
    6146:	449d      	add	sp, r3
    6148:	bdf0      	pop	{r4, r5, r6, r7, pc}
    614a:	2501      	movs	r5, #1
    614c:	426d      	negs	r5, r5
    614e:	e7ed      	b.n	612c <__sbprintf+0x5c>
    6150:	fffffb94 	.word	0xfffffb94
    6154:	0000046c 	.word	0x0000046c

00006158 <__swsetup_r>:
    6158:	4b33      	ldr	r3, [pc, #204]	; (6228 <__swsetup_r+0xd0>)
    615a:	b570      	push	{r4, r5, r6, lr}
    615c:	0005      	movs	r5, r0
    615e:	6818      	ldr	r0, [r3, #0]
    6160:	000c      	movs	r4, r1
    6162:	2800      	cmp	r0, #0
    6164:	d002      	beq.n	616c <__swsetup_r+0x14>
    6166:	6b83      	ldr	r3, [r0, #56]	; 0x38
    6168:	2b00      	cmp	r3, #0
    616a:	d03c      	beq.n	61e6 <__swsetup_r+0x8e>
    616c:	230c      	movs	r3, #12
    616e:	5ee2      	ldrsh	r2, [r4, r3]
    6170:	b293      	uxth	r3, r2
    6172:	0719      	lsls	r1, r3, #28
    6174:	d50d      	bpl.n	6192 <__swsetup_r+0x3a>
    6176:	6921      	ldr	r1, [r4, #16]
    6178:	2900      	cmp	r1, #0
    617a:	d015      	beq.n	61a8 <__swsetup_r+0x50>
    617c:	07da      	lsls	r2, r3, #31
    617e:	d521      	bpl.n	61c4 <__swsetup_r+0x6c>
    6180:	2300      	movs	r3, #0
    6182:	60a3      	str	r3, [r4, #8]
    6184:	6963      	ldr	r3, [r4, #20]
    6186:	2000      	movs	r0, #0
    6188:	425b      	negs	r3, r3
    618a:	61a3      	str	r3, [r4, #24]
    618c:	2900      	cmp	r1, #0
    618e:	d021      	beq.n	61d4 <__swsetup_r+0x7c>
    6190:	bd70      	pop	{r4, r5, r6, pc}
    6192:	06d9      	lsls	r1, r3, #27
    6194:	d53f      	bpl.n	6216 <__swsetup_r+0xbe>
    6196:	075b      	lsls	r3, r3, #29
    6198:	d428      	bmi.n	61ec <__swsetup_r+0x94>
    619a:	6921      	ldr	r1, [r4, #16]
    619c:	2308      	movs	r3, #8
    619e:	4313      	orrs	r3, r2
    61a0:	81a3      	strh	r3, [r4, #12]
    61a2:	b29b      	uxth	r3, r3
    61a4:	2900      	cmp	r1, #0
    61a6:	d1e9      	bne.n	617c <__swsetup_r+0x24>
    61a8:	22a0      	movs	r2, #160	; 0xa0
    61aa:	2080      	movs	r0, #128	; 0x80
    61ac:	0092      	lsls	r2, r2, #2
    61ae:	0080      	lsls	r0, r0, #2
    61b0:	401a      	ands	r2, r3
    61b2:	4282      	cmp	r2, r0
    61b4:	d0e2      	beq.n	617c <__swsetup_r+0x24>
    61b6:	0021      	movs	r1, r4
    61b8:	0028      	movs	r0, r5
    61ba:	f001 fd31 	bl	7c20 <__smakebuf_r>
    61be:	89a3      	ldrh	r3, [r4, #12]
    61c0:	6921      	ldr	r1, [r4, #16]
    61c2:	e7db      	b.n	617c <__swsetup_r+0x24>
    61c4:	2200      	movs	r2, #0
    61c6:	079b      	lsls	r3, r3, #30
    61c8:	d400      	bmi.n	61cc <__swsetup_r+0x74>
    61ca:	6962      	ldr	r2, [r4, #20]
    61cc:	60a2      	str	r2, [r4, #8]
    61ce:	2000      	movs	r0, #0
    61d0:	2900      	cmp	r1, #0
    61d2:	d1dd      	bne.n	6190 <__swsetup_r+0x38>
    61d4:	220c      	movs	r2, #12
    61d6:	5ea3      	ldrsh	r3, [r4, r2]
    61d8:	061a      	lsls	r2, r3, #24
    61da:	d5d9      	bpl.n	6190 <__swsetup_r+0x38>
    61dc:	2240      	movs	r2, #64	; 0x40
    61de:	4313      	orrs	r3, r2
    61e0:	81a3      	strh	r3, [r4, #12]
    61e2:	3801      	subs	r0, #1
    61e4:	e7d4      	b.n	6190 <__swsetup_r+0x38>
    61e6:	f001 f9a5 	bl	7534 <__sinit>
    61ea:	e7bf      	b.n	616c <__swsetup_r+0x14>
    61ec:	6b21      	ldr	r1, [r4, #48]	; 0x30
    61ee:	2900      	cmp	r1, #0
    61f0:	d00a      	beq.n	6208 <__swsetup_r+0xb0>
    61f2:	0023      	movs	r3, r4
    61f4:	3340      	adds	r3, #64	; 0x40
    61f6:	4299      	cmp	r1, r3
    61f8:	d004      	beq.n	6204 <__swsetup_r+0xac>
    61fa:	0028      	movs	r0, r5
    61fc:	f001 fa44 	bl	7688 <_free_r>
    6200:	230c      	movs	r3, #12
    6202:	5ee2      	ldrsh	r2, [r4, r3]
    6204:	2300      	movs	r3, #0
    6206:	6323      	str	r3, [r4, #48]	; 0x30
    6208:	2324      	movs	r3, #36	; 0x24
    620a:	439a      	bics	r2, r3
    620c:	2300      	movs	r3, #0
    620e:	6921      	ldr	r1, [r4, #16]
    6210:	6063      	str	r3, [r4, #4]
    6212:	6021      	str	r1, [r4, #0]
    6214:	e7c2      	b.n	619c <__swsetup_r+0x44>
    6216:	2309      	movs	r3, #9
    6218:	602b      	str	r3, [r5, #0]
    621a:	2340      	movs	r3, #64	; 0x40
    621c:	2001      	movs	r0, #1
    621e:	431a      	orrs	r2, r3
    6220:	81a2      	strh	r2, [r4, #12]
    6222:	4240      	negs	r0, r0
    6224:	e7b4      	b.n	6190 <__swsetup_r+0x38>
    6226:	46c0      	nop			; (mov r8, r8)
    6228:	2000007c 	.word	0x2000007c

0000622c <register_fini>:
    622c:	4b03      	ldr	r3, [pc, #12]	; (623c <register_fini+0x10>)
    622e:	b510      	push	{r4, lr}
    6230:	2b00      	cmp	r3, #0
    6232:	d002      	beq.n	623a <register_fini+0xe>
    6234:	4802      	ldr	r0, [pc, #8]	; (6240 <register_fini+0x14>)
    6236:	f000 f805 	bl	6244 <atexit>
    623a:	bd10      	pop	{r4, pc}
    623c:	00000000 	.word	0x00000000
    6240:	000075b5 	.word	0x000075b5

00006244 <atexit>:
    6244:	b510      	push	{r4, lr}
    6246:	0001      	movs	r1, r0
    6248:	2300      	movs	r3, #0
    624a:	2200      	movs	r2, #0
    624c:	2000      	movs	r0, #0
    624e:	f002 fe53 	bl	8ef8 <__register_exitproc>
    6252:	bd10      	pop	{r4, pc}

00006254 <quorem>:
    6254:	b5f0      	push	{r4, r5, r6, r7, lr}
    6256:	4645      	mov	r5, r8
    6258:	4680      	mov	r8, r0
    625a:	46de      	mov	lr, fp
    625c:	4657      	mov	r7, sl
    625e:	464e      	mov	r6, r9
    6260:	4642      	mov	r2, r8
    6262:	b5e0      	push	{r5, r6, r7, lr}
    6264:	690c      	ldr	r4, [r1, #16]
    6266:	6912      	ldr	r2, [r2, #16]
    6268:	b085      	sub	sp, #20
    626a:	000b      	movs	r3, r1
    626c:	9102      	str	r1, [sp, #8]
    626e:	2000      	movs	r0, #0
    6270:	4294      	cmp	r4, r2
    6272:	dd00      	ble.n	6276 <quorem+0x22>
    6274:	e090      	b.n	6398 <quorem+0x144>
    6276:	2214      	movs	r2, #20
    6278:	4694      	mov	ip, r2
    627a:	4463      	add	r3, ip
    627c:	4699      	mov	r9, r3
    627e:	464a      	mov	r2, r9
    6280:	3c01      	subs	r4, #1
    6282:	00a3      	lsls	r3, r4, #2
    6284:	18d6      	adds	r6, r2, r3
    6286:	2214      	movs	r2, #20
    6288:	4442      	add	r2, r8
    628a:	4693      	mov	fp, r2
    628c:	449b      	add	fp, r3
    628e:	6833      	ldr	r3, [r6, #0]
    6290:	0015      	movs	r5, r2
    6292:	1c59      	adds	r1, r3, #1
    6294:	465b      	mov	r3, fp
    6296:	6818      	ldr	r0, [r3, #0]
    6298:	9201      	str	r2, [sp, #4]
    629a:	f7fc fb25 	bl	28e8 <__udivsi3>
    629e:	1e03      	subs	r3, r0, #0
    62a0:	9000      	str	r0, [sp, #0]
    62a2:	d042      	beq.n	632a <quorem+0xd6>
    62a4:	0029      	movs	r1, r5
    62a6:	2700      	movs	r7, #0
    62a8:	464d      	mov	r5, r9
    62aa:	2000      	movs	r0, #0
    62ac:	46b1      	mov	r9, r6
    62ae:	46a2      	mov	sl, r4
    62b0:	003e      	movs	r6, r7
    62b2:	0004      	movs	r4, r0
    62b4:	469c      	mov	ip, r3
    62b6:	002f      	movs	r7, r5
    62b8:	0008      	movs	r0, r1
    62ba:	9503      	str	r5, [sp, #12]
    62bc:	4663      	mov	r3, ip
    62be:	cf04      	ldmia	r7!, {r2}
    62c0:	0415      	lsls	r5, r2, #16
    62c2:	0c2d      	lsrs	r5, r5, #16
    62c4:	435d      	muls	r5, r3
    62c6:	0c12      	lsrs	r2, r2, #16
    62c8:	435a      	muls	r2, r3
    62ca:	19ad      	adds	r5, r5, r6
    62cc:	0c2b      	lsrs	r3, r5, #16
    62ce:	18d2      	adds	r2, r2, r3
    62d0:	6803      	ldr	r3, [r0, #0]
    62d2:	042d      	lsls	r5, r5, #16
    62d4:	0419      	lsls	r1, r3, #16
    62d6:	0c09      	lsrs	r1, r1, #16
    62d8:	1909      	adds	r1, r1, r4
    62da:	0c16      	lsrs	r6, r2, #16
    62dc:	0c2d      	lsrs	r5, r5, #16
    62de:	0412      	lsls	r2, r2, #16
    62e0:	1b49      	subs	r1, r1, r5
    62e2:	0c12      	lsrs	r2, r2, #16
    62e4:	0c1b      	lsrs	r3, r3, #16
    62e6:	1a9b      	subs	r3, r3, r2
    62e8:	140a      	asrs	r2, r1, #16
    62ea:	189b      	adds	r3, r3, r2
    62ec:	0409      	lsls	r1, r1, #16
    62ee:	141c      	asrs	r4, r3, #16
    62f0:	0c09      	lsrs	r1, r1, #16
    62f2:	041b      	lsls	r3, r3, #16
    62f4:	4319      	orrs	r1, r3
    62f6:	c002      	stmia	r0!, {r1}
    62f8:	45b9      	cmp	r9, r7
    62fa:	d2df      	bcs.n	62bc <quorem+0x68>
    62fc:	9b03      	ldr	r3, [sp, #12]
    62fe:	464e      	mov	r6, r9
    6300:	4699      	mov	r9, r3
    6302:	465b      	mov	r3, fp
    6304:	681b      	ldr	r3, [r3, #0]
    6306:	4654      	mov	r4, sl
    6308:	2b00      	cmp	r3, #0
    630a:	d10e      	bne.n	632a <quorem+0xd6>
    630c:	465b      	mov	r3, fp
    630e:	9a01      	ldr	r2, [sp, #4]
    6310:	3b04      	subs	r3, #4
    6312:	429a      	cmp	r2, r3
    6314:	d304      	bcc.n	6320 <quorem+0xcc>
    6316:	e006      	b.n	6326 <quorem+0xd2>
    6318:	3b04      	subs	r3, #4
    631a:	3c01      	subs	r4, #1
    631c:	429a      	cmp	r2, r3
    631e:	d202      	bcs.n	6326 <quorem+0xd2>
    6320:	6819      	ldr	r1, [r3, #0]
    6322:	2900      	cmp	r1, #0
    6324:	d0f8      	beq.n	6318 <quorem+0xc4>
    6326:	4643      	mov	r3, r8
    6328:	611c      	str	r4, [r3, #16]
    632a:	9902      	ldr	r1, [sp, #8]
    632c:	4640      	mov	r0, r8
    632e:	f002 fa51 	bl	87d4 <__mcmp>
    6332:	2800      	cmp	r0, #0
    6334:	db2f      	blt.n	6396 <quorem+0x142>
    6336:	464f      	mov	r7, r9
    6338:	2000      	movs	r0, #0
    633a:	9b00      	ldr	r3, [sp, #0]
    633c:	9d01      	ldr	r5, [sp, #4]
    633e:	3301      	adds	r3, #1
    6340:	9300      	str	r3, [sp, #0]
    6342:	682b      	ldr	r3, [r5, #0]
    6344:	cf02      	ldmia	r7!, {r1}
    6346:	041a      	lsls	r2, r3, #16
    6348:	0c12      	lsrs	r2, r2, #16
    634a:	1810      	adds	r0, r2, r0
    634c:	040a      	lsls	r2, r1, #16
    634e:	0c12      	lsrs	r2, r2, #16
    6350:	1a82      	subs	r2, r0, r2
    6352:	0c09      	lsrs	r1, r1, #16
    6354:	0c1b      	lsrs	r3, r3, #16
    6356:	1a5b      	subs	r3, r3, r1
    6358:	1411      	asrs	r1, r2, #16
    635a:	185b      	adds	r3, r3, r1
    635c:	0412      	lsls	r2, r2, #16
    635e:	1418      	asrs	r0, r3, #16
    6360:	0c12      	lsrs	r2, r2, #16
    6362:	041b      	lsls	r3, r3, #16
    6364:	4313      	orrs	r3, r2
    6366:	c508      	stmia	r5!, {r3}
    6368:	42be      	cmp	r6, r7
    636a:	d2ea      	bcs.n	6342 <quorem+0xee>
    636c:	9901      	ldr	r1, [sp, #4]
    636e:	00a3      	lsls	r3, r4, #2
    6370:	468c      	mov	ip, r1
    6372:	4463      	add	r3, ip
    6374:	681a      	ldr	r2, [r3, #0]
    6376:	2a00      	cmp	r2, #0
    6378:	d10d      	bne.n	6396 <quorem+0x142>
    637a:	3b04      	subs	r3, #4
    637c:	000a      	movs	r2, r1
    637e:	4299      	cmp	r1, r3
    6380:	d304      	bcc.n	638c <quorem+0x138>
    6382:	e006      	b.n	6392 <quorem+0x13e>
    6384:	3b04      	subs	r3, #4
    6386:	3c01      	subs	r4, #1
    6388:	429a      	cmp	r2, r3
    638a:	d202      	bcs.n	6392 <quorem+0x13e>
    638c:	6819      	ldr	r1, [r3, #0]
    638e:	2900      	cmp	r1, #0
    6390:	d0f8      	beq.n	6384 <quorem+0x130>
    6392:	4643      	mov	r3, r8
    6394:	611c      	str	r4, [r3, #16]
    6396:	9800      	ldr	r0, [sp, #0]
    6398:	b005      	add	sp, #20
    639a:	bc3c      	pop	{r2, r3, r4, r5}
    639c:	4690      	mov	r8, r2
    639e:	4699      	mov	r9, r3
    63a0:	46a2      	mov	sl, r4
    63a2:	46ab      	mov	fp, r5
    63a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    63a6:	46c0      	nop			; (mov r8, r8)

000063a8 <_dtoa_r>:
    63a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    63aa:	4657      	mov	r7, sl
    63ac:	464e      	mov	r6, r9
    63ae:	4645      	mov	r5, r8
    63b0:	46de      	mov	lr, fp
    63b2:	b5e0      	push	{r5, r6, r7, lr}
    63b4:	6c01      	ldr	r1, [r0, #64]	; 0x40
    63b6:	b099      	sub	sp, #100	; 0x64
    63b8:	4682      	mov	sl, r0
    63ba:	001d      	movs	r5, r3
    63bc:	0016      	movs	r6, r2
    63be:	001f      	movs	r7, r3
    63c0:	2900      	cmp	r1, #0
    63c2:	d009      	beq.n	63d8 <_dtoa_r+0x30>
    63c4:	2301      	movs	r3, #1
    63c6:	6c42      	ldr	r2, [r0, #68]	; 0x44
    63c8:	4093      	lsls	r3, r2
    63ca:	604a      	str	r2, [r1, #4]
    63cc:	608b      	str	r3, [r1, #8]
    63ce:	f001 fff5 	bl	83bc <_Bfree>
    63d2:	2300      	movs	r3, #0
    63d4:	4652      	mov	r2, sl
    63d6:	6413      	str	r3, [r2, #64]	; 0x40
    63d8:	46b8      	mov	r8, r7
    63da:	2f00      	cmp	r7, #0
    63dc:	db37      	blt.n	644e <_dtoa_r+0xa6>
    63de:	2300      	movs	r3, #0
    63e0:	9a25      	ldr	r2, [sp, #148]	; 0x94
    63e2:	6013      	str	r3, [r2, #0]
    63e4:	4642      	mov	r2, r8
    63e6:	4bd6      	ldr	r3, [pc, #856]	; (6740 <_dtoa_r+0x398>)
    63e8:	401a      	ands	r2, r3
    63ea:	429a      	cmp	r2, r3
    63ec:	d018      	beq.n	6420 <_dtoa_r+0x78>
    63ee:	2200      	movs	r2, #0
    63f0:	2300      	movs	r3, #0
    63f2:	0030      	movs	r0, r6
    63f4:	0039      	movs	r1, r7
    63f6:	f7fd ffd9 	bl	43ac <__aeabi_dcmpeq>
    63fa:	2800      	cmp	r0, #0
    63fc:	d02f      	beq.n	645e <_dtoa_r+0xb6>
    63fe:	2301      	movs	r3, #1
    6400:	9a24      	ldr	r2, [sp, #144]	; 0x90
    6402:	6013      	str	r3, [r2, #0]
    6404:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6406:	2b00      	cmp	r3, #0
    6408:	d100      	bne.n	640c <_dtoa_r+0x64>
    640a:	e22a      	b.n	6862 <_dtoa_r+0x4ba>
    640c:	48cd      	ldr	r0, [pc, #820]	; (6744 <_dtoa_r+0x39c>)
    640e:	6018      	str	r0, [r3, #0]
    6410:	3801      	subs	r0, #1
    6412:	b019      	add	sp, #100	; 0x64
    6414:	bc3c      	pop	{r2, r3, r4, r5}
    6416:	4690      	mov	r8, r2
    6418:	4699      	mov	r9, r3
    641a:	46a2      	mov	sl, r4
    641c:	46ab      	mov	fp, r5
    641e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6420:	4bc9      	ldr	r3, [pc, #804]	; (6748 <_dtoa_r+0x3a0>)
    6422:	9a24      	ldr	r2, [sp, #144]	; 0x90
    6424:	6013      	str	r3, [r2, #0]
    6426:	2e00      	cmp	r6, #0
    6428:	d10b      	bne.n	6442 <_dtoa_r+0x9a>
    642a:	4643      	mov	r3, r8
    642c:	0318      	lsls	r0, r3, #12
    642e:	d108      	bne.n	6442 <_dtoa_r+0x9a>
    6430:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6432:	48c6      	ldr	r0, [pc, #792]	; (674c <_dtoa_r+0x3a4>)
    6434:	2b00      	cmp	r3, #0
    6436:	d0ec      	beq.n	6412 <_dtoa_r+0x6a>
    6438:	0003      	movs	r3, r0
    643a:	3308      	adds	r3, #8
    643c:	9a26      	ldr	r2, [sp, #152]	; 0x98
    643e:	6013      	str	r3, [r2, #0]
    6440:	e7e7      	b.n	6412 <_dtoa_r+0x6a>
    6442:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6444:	48c2      	ldr	r0, [pc, #776]	; (6750 <_dtoa_r+0x3a8>)
    6446:	2b00      	cmp	r3, #0
    6448:	d0e3      	beq.n	6412 <_dtoa_r+0x6a>
    644a:	1cc3      	adds	r3, r0, #3
    644c:	e7f6      	b.n	643c <_dtoa_r+0x94>
    644e:	2301      	movs	r3, #1
    6450:	9a25      	ldr	r2, [sp, #148]	; 0x94
    6452:	0068      	lsls	r0, r5, #1
    6454:	6013      	str	r3, [r2, #0]
    6456:	0843      	lsrs	r3, r0, #1
    6458:	4698      	mov	r8, r3
    645a:	001f      	movs	r7, r3
    645c:	e7c2      	b.n	63e4 <_dtoa_r+0x3c>
    645e:	ab16      	add	r3, sp, #88	; 0x58
    6460:	9301      	str	r3, [sp, #4]
    6462:	ab17      	add	r3, sp, #92	; 0x5c
    6464:	9300      	str	r3, [sp, #0]
    6466:	0032      	movs	r2, r6
    6468:	003b      	movs	r3, r7
    646a:	4650      	mov	r0, sl
    646c:	f002 fa68 	bl	8940 <__d2b>
    6470:	4643      	mov	r3, r8
    6472:	4683      	mov	fp, r0
    6474:	0d1a      	lsrs	r2, r3, #20
    6476:	d100      	bne.n	647a <_dtoa_r+0xd2>
    6478:	e1d6      	b.n	6828 <_dtoa_r+0x480>
    647a:	033b      	lsls	r3, r7, #12
    647c:	4cb5      	ldr	r4, [pc, #724]	; (6754 <_dtoa_r+0x3ac>)
    647e:	0b1b      	lsrs	r3, r3, #12
    6480:	431c      	orrs	r4, r3
    6482:	4bb5      	ldr	r3, [pc, #724]	; (6758 <_dtoa_r+0x3b0>)
    6484:	0030      	movs	r0, r6
    6486:	4698      	mov	r8, r3
    6488:	9b16      	ldr	r3, [sp, #88]	; 0x58
    648a:	0021      	movs	r1, r4
    648c:	4699      	mov	r9, r3
    648e:	2300      	movs	r3, #0
    6490:	4490      	add	r8, r2
    6492:	930f      	str	r3, [sp, #60]	; 0x3c
    6494:	2200      	movs	r2, #0
    6496:	4bb1      	ldr	r3, [pc, #708]	; (675c <_dtoa_r+0x3b4>)
    6498:	f7fd fad8 	bl	3a4c <__aeabi_dsub>
    649c:	4ab0      	ldr	r2, [pc, #704]	; (6760 <_dtoa_r+0x3b8>)
    649e:	4bb1      	ldr	r3, [pc, #708]	; (6764 <_dtoa_r+0x3bc>)
    64a0:	f7fd f854 	bl	354c <__aeabi_dmul>
    64a4:	4ab0      	ldr	r2, [pc, #704]	; (6768 <_dtoa_r+0x3c0>)
    64a6:	4bb1      	ldr	r3, [pc, #708]	; (676c <_dtoa_r+0x3c4>)
    64a8:	f003 f8b2 	bl	9610 <__aeabi_dadd>
    64ac:	0004      	movs	r4, r0
    64ae:	4640      	mov	r0, r8
    64b0:	000d      	movs	r5, r1
    64b2:	f7fd fe15 	bl	40e0 <__aeabi_i2d>
    64b6:	4aae      	ldr	r2, [pc, #696]	; (6770 <_dtoa_r+0x3c8>)
    64b8:	4bae      	ldr	r3, [pc, #696]	; (6774 <_dtoa_r+0x3cc>)
    64ba:	f7fd f847 	bl	354c <__aeabi_dmul>
    64be:	0002      	movs	r2, r0
    64c0:	000b      	movs	r3, r1
    64c2:	0020      	movs	r0, r4
    64c4:	0029      	movs	r1, r5
    64c6:	f003 f8a3 	bl	9610 <__aeabi_dadd>
    64ca:	0004      	movs	r4, r0
    64cc:	000d      	movs	r5, r1
    64ce:	f7fd fdd3 	bl	4078 <__aeabi_d2iz>
    64d2:	2200      	movs	r2, #0
    64d4:	9003      	str	r0, [sp, #12]
    64d6:	2300      	movs	r3, #0
    64d8:	0020      	movs	r0, r4
    64da:	0029      	movs	r1, r5
    64dc:	f7fd ff6c 	bl	43b8 <__aeabi_dcmplt>
    64e0:	2800      	cmp	r0, #0
    64e2:	d000      	beq.n	64e6 <_dtoa_r+0x13e>
    64e4:	e2b1      	b.n	6a4a <_dtoa_r+0x6a2>
    64e6:	2301      	movs	r3, #1
    64e8:	9c03      	ldr	r4, [sp, #12]
    64ea:	930c      	str	r3, [sp, #48]	; 0x30
    64ec:	2c16      	cmp	r4, #22
    64ee:	d810      	bhi.n	6512 <_dtoa_r+0x16a>
    64f0:	49a1      	ldr	r1, [pc, #644]	; (6778 <_dtoa_r+0x3d0>)
    64f2:	00e3      	lsls	r3, r4, #3
    64f4:	18c9      	adds	r1, r1, r3
    64f6:	0032      	movs	r2, r6
    64f8:	6808      	ldr	r0, [r1, #0]
    64fa:	6849      	ldr	r1, [r1, #4]
    64fc:	003b      	movs	r3, r7
    64fe:	f7fd ff6f 	bl	43e0 <__aeabi_dcmpgt>
    6502:	2800      	cmp	r0, #0
    6504:	d100      	bne.n	6508 <_dtoa_r+0x160>
    6506:	e31d      	b.n	6b44 <_dtoa_r+0x79c>
    6508:	0023      	movs	r3, r4
    650a:	3b01      	subs	r3, #1
    650c:	9303      	str	r3, [sp, #12]
    650e:	2300      	movs	r3, #0
    6510:	930c      	str	r3, [sp, #48]	; 0x30
    6512:	464b      	mov	r3, r9
    6514:	4642      	mov	r2, r8
    6516:	1a9a      	subs	r2, r3, r2
    6518:	2300      	movs	r3, #0
    651a:	9306      	str	r3, [sp, #24]
    651c:	0013      	movs	r3, r2
    651e:	3b01      	subs	r3, #1
    6520:	9304      	str	r3, [sp, #16]
    6522:	d500      	bpl.n	6526 <_dtoa_r+0x17e>
    6524:	e2a1      	b.n	6a6a <_dtoa_r+0x6c2>
    6526:	9b03      	ldr	r3, [sp, #12]
    6528:	2b00      	cmp	r3, #0
    652a:	da00      	bge.n	652e <_dtoa_r+0x186>
    652c:	e284      	b.n	6a38 <_dtoa_r+0x690>
    652e:	469c      	mov	ip, r3
    6530:	930d      	str	r3, [sp, #52]	; 0x34
    6532:	2300      	movs	r3, #0
    6534:	9a04      	ldr	r2, [sp, #16]
    6536:	4699      	mov	r9, r3
    6538:	0011      	movs	r1, r2
    653a:	4461      	add	r1, ip
    653c:	9104      	str	r1, [sp, #16]
    653e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6540:	2b09      	cmp	r3, #9
    6542:	d900      	bls.n	6546 <_dtoa_r+0x19e>
    6544:	e18f      	b.n	6866 <_dtoa_r+0x4be>
    6546:	2401      	movs	r4, #1
    6548:	2b05      	cmp	r3, #5
    654a:	dd02      	ble.n	6552 <_dtoa_r+0x1aa>
    654c:	2400      	movs	r4, #0
    654e:	3b04      	subs	r3, #4
    6550:	9322      	str	r3, [sp, #136]	; 0x88
    6552:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6554:	2b03      	cmp	r3, #3
    6556:	d101      	bne.n	655c <_dtoa_r+0x1b4>
    6558:	f000 fcce 	bl	6ef8 <_dtoa_r+0xb50>
    655c:	dc01      	bgt.n	6562 <_dtoa_r+0x1ba>
    655e:	f000 fc92 	bl	6e86 <_dtoa_r+0xade>
    6562:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6564:	2b04      	cmp	r3, #4
    6566:	d101      	bne.n	656c <_dtoa_r+0x1c4>
    6568:	f000 fc40 	bl	6dec <_dtoa_r+0xa44>
    656c:	2301      	movs	r3, #1
    656e:	930b      	str	r3, [sp, #44]	; 0x2c
    6570:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6572:	2b05      	cmp	r3, #5
    6574:	d001      	beq.n	657a <_dtoa_r+0x1d2>
    6576:	f000 fc8b 	bl	6e90 <_dtoa_r+0xae8>
    657a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    657c:	9b03      	ldr	r3, [sp, #12]
    657e:	4694      	mov	ip, r2
    6580:	4463      	add	r3, ip
    6582:	930e      	str	r3, [sp, #56]	; 0x38
    6584:	3301      	adds	r3, #1
    6586:	9307      	str	r3, [sp, #28]
    6588:	1e1d      	subs	r5, r3, #0
    658a:	dc01      	bgt.n	6590 <_dtoa_r+0x1e8>
    658c:	f000 fd49 	bl	7022 <_dtoa_r+0xc7a>
    6590:	9b07      	ldr	r3, [sp, #28]
    6592:	4698      	mov	r8, r3
    6594:	2300      	movs	r3, #0
    6596:	4652      	mov	r2, sl
    6598:	2100      	movs	r1, #0
    659a:	6453      	str	r3, [r2, #68]	; 0x44
    659c:	2d17      	cmp	r5, #23
    659e:	d90a      	bls.n	65b6 <_dtoa_r+0x20e>
    65a0:	2201      	movs	r2, #1
    65a2:	3304      	adds	r3, #4
    65a4:	005b      	lsls	r3, r3, #1
    65a6:	0018      	movs	r0, r3
    65a8:	3014      	adds	r0, #20
    65aa:	0011      	movs	r1, r2
    65ac:	3201      	adds	r2, #1
    65ae:	4285      	cmp	r5, r0
    65b0:	d2f8      	bcs.n	65a4 <_dtoa_r+0x1fc>
    65b2:	4653      	mov	r3, sl
    65b4:	6459      	str	r1, [r3, #68]	; 0x44
    65b6:	4650      	mov	r0, sl
    65b8:	f001 fed8 	bl	836c <_Balloc>
    65bc:	4653      	mov	r3, sl
    65be:	6418      	str	r0, [r3, #64]	; 0x40
    65c0:	4643      	mov	r3, r8
    65c2:	900a      	str	r0, [sp, #40]	; 0x28
    65c4:	2b0e      	cmp	r3, #14
    65c6:	d900      	bls.n	65ca <_dtoa_r+0x222>
    65c8:	e161      	b.n	688e <_dtoa_r+0x4e6>
    65ca:	2c00      	cmp	r4, #0
    65cc:	d100      	bne.n	65d0 <_dtoa_r+0x228>
    65ce:	e15e      	b.n	688e <_dtoa_r+0x4e6>
    65d0:	9610      	str	r6, [sp, #64]	; 0x40
    65d2:	9711      	str	r7, [sp, #68]	; 0x44
    65d4:	9e03      	ldr	r6, [sp, #12]
    65d6:	2e00      	cmp	r6, #0
    65d8:	dc01      	bgt.n	65de <_dtoa_r+0x236>
    65da:	f000 fd25 	bl	7028 <_dtoa_r+0xc80>
    65de:	0032      	movs	r2, r6
    65e0:	210f      	movs	r1, #15
    65e2:	4b65      	ldr	r3, [pc, #404]	; (6778 <_dtoa_r+0x3d0>)
    65e4:	400a      	ands	r2, r1
    65e6:	00d2      	lsls	r2, r2, #3
    65e8:	189b      	adds	r3, r3, r2
    65ea:	1136      	asrs	r6, r6, #4
    65ec:	681c      	ldr	r4, [r3, #0]
    65ee:	685d      	ldr	r5, [r3, #4]
    65f0:	06f3      	lsls	r3, r6, #27
    65f2:	d401      	bmi.n	65f8 <_dtoa_r+0x250>
    65f4:	f000 fcca 	bl	6f8c <_dtoa_r+0xbe4>
    65f8:	4b60      	ldr	r3, [pc, #384]	; (677c <_dtoa_r+0x3d4>)
    65fa:	400e      	ands	r6, r1
    65fc:	6a1a      	ldr	r2, [r3, #32]
    65fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    6600:	9810      	ldr	r0, [sp, #64]	; 0x40
    6602:	9911      	ldr	r1, [sp, #68]	; 0x44
    6604:	f7fc fc6e 	bl	2ee4 <__aeabi_ddiv>
    6608:	2303      	movs	r3, #3
    660a:	4698      	mov	r8, r3
    660c:	9008      	str	r0, [sp, #32]
    660e:	9109      	str	r1, [sp, #36]	; 0x24
    6610:	2e00      	cmp	r6, #0
    6612:	d011      	beq.n	6638 <_dtoa_r+0x290>
    6614:	4f59      	ldr	r7, [pc, #356]	; (677c <_dtoa_r+0x3d4>)
    6616:	2301      	movs	r3, #1
    6618:	4233      	tst	r3, r6
    661a:	d009      	beq.n	6630 <_dtoa_r+0x288>
    661c:	469c      	mov	ip, r3
    661e:	683a      	ldr	r2, [r7, #0]
    6620:	687b      	ldr	r3, [r7, #4]
    6622:	0020      	movs	r0, r4
    6624:	0029      	movs	r1, r5
    6626:	44e0      	add	r8, ip
    6628:	f7fc ff90 	bl	354c <__aeabi_dmul>
    662c:	0004      	movs	r4, r0
    662e:	000d      	movs	r5, r1
    6630:	1076      	asrs	r6, r6, #1
    6632:	3708      	adds	r7, #8
    6634:	2e00      	cmp	r6, #0
    6636:	d1ee      	bne.n	6616 <_dtoa_r+0x26e>
    6638:	0022      	movs	r2, r4
    663a:	9808      	ldr	r0, [sp, #32]
    663c:	9909      	ldr	r1, [sp, #36]	; 0x24
    663e:	002b      	movs	r3, r5
    6640:	f7fc fc50 	bl	2ee4 <__aeabi_ddiv>
    6644:	0006      	movs	r6, r0
    6646:	000f      	movs	r7, r1
    6648:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    664a:	2b00      	cmp	r3, #0
    664c:	d009      	beq.n	6662 <_dtoa_r+0x2ba>
    664e:	2200      	movs	r2, #0
    6650:	4b40      	ldr	r3, [pc, #256]	; (6754 <_dtoa_r+0x3ac>)
    6652:	0030      	movs	r0, r6
    6654:	0039      	movs	r1, r7
    6656:	f7fd feaf 	bl	43b8 <__aeabi_dcmplt>
    665a:	2800      	cmp	r0, #0
    665c:	d001      	beq.n	6662 <_dtoa_r+0x2ba>
    665e:	f000 fdc2 	bl	71e6 <_dtoa_r+0xe3e>
    6662:	4640      	mov	r0, r8
    6664:	f7fd fd3c 	bl	40e0 <__aeabi_i2d>
    6668:	0032      	movs	r2, r6
    666a:	003b      	movs	r3, r7
    666c:	f7fc ff6e 	bl	354c <__aeabi_dmul>
    6670:	2200      	movs	r2, #0
    6672:	4b43      	ldr	r3, [pc, #268]	; (6780 <_dtoa_r+0x3d8>)
    6674:	f002 ffcc 	bl	9610 <__aeabi_dadd>
    6678:	4a42      	ldr	r2, [pc, #264]	; (6784 <_dtoa_r+0x3dc>)
    667a:	000b      	movs	r3, r1
    667c:	4694      	mov	ip, r2
    667e:	4463      	add	r3, ip
    6680:	9008      	str	r0, [sp, #32]
    6682:	9109      	str	r1, [sp, #36]	; 0x24
    6684:	9309      	str	r3, [sp, #36]	; 0x24
    6686:	9b07      	ldr	r3, [sp, #28]
    6688:	2b00      	cmp	r3, #0
    668a:	d101      	bne.n	6690 <_dtoa_r+0x2e8>
    668c:	f000 fc50 	bl	6f30 <_dtoa_r+0xb88>
    6690:	9b03      	ldr	r3, [sp, #12]
    6692:	9313      	str	r3, [sp, #76]	; 0x4c
    6694:	9b07      	ldr	r3, [sp, #28]
    6696:	9312      	str	r3, [sp, #72]	; 0x48
    6698:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    669a:	2b00      	cmp	r3, #0
    669c:	d101      	bne.n	66a2 <_dtoa_r+0x2fa>
    669e:	f000 fd1d 	bl	70dc <_dtoa_r+0xd34>
    66a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    66a4:	2000      	movs	r0, #0
    66a6:	1e5a      	subs	r2, r3, #1
    66a8:	4b33      	ldr	r3, [pc, #204]	; (6778 <_dtoa_r+0x3d0>)
    66aa:	00d2      	lsls	r2, r2, #3
    66ac:	189b      	adds	r3, r3, r2
    66ae:	681a      	ldr	r2, [r3, #0]
    66b0:	685b      	ldr	r3, [r3, #4]
    66b2:	4935      	ldr	r1, [pc, #212]	; (6788 <_dtoa_r+0x3e0>)
    66b4:	f7fc fc16 	bl	2ee4 <__aeabi_ddiv>
    66b8:	9a08      	ldr	r2, [sp, #32]
    66ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
    66bc:	f7fd f9c6 	bl	3a4c <__aeabi_dsub>
    66c0:	9008      	str	r0, [sp, #32]
    66c2:	9109      	str	r1, [sp, #36]	; 0x24
    66c4:	0039      	movs	r1, r7
    66c6:	0030      	movs	r0, r6
    66c8:	f7fd fcd6 	bl	4078 <__aeabi_d2iz>
    66cc:	0004      	movs	r4, r0
    66ce:	f7fd fd07 	bl	40e0 <__aeabi_i2d>
    66d2:	0002      	movs	r2, r0
    66d4:	000b      	movs	r3, r1
    66d6:	0030      	movs	r0, r6
    66d8:	0039      	movs	r1, r7
    66da:	f7fd f9b7 	bl	3a4c <__aeabi_dsub>
    66de:	0005      	movs	r5, r0
    66e0:	000e      	movs	r6, r1
    66e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    66e4:	3430      	adds	r4, #48	; 0x30
    66e6:	1c51      	adds	r1, r2, #1
    66e8:	b2e7      	uxtb	r7, r4
    66ea:	9114      	str	r1, [sp, #80]	; 0x50
    66ec:	7017      	strb	r7, [r2, #0]
    66ee:	0033      	movs	r3, r6
    66f0:	9808      	ldr	r0, [sp, #32]
    66f2:	9909      	ldr	r1, [sp, #36]	; 0x24
    66f4:	002a      	movs	r2, r5
    66f6:	f7fd fe73 	bl	43e0 <__aeabi_dcmpgt>
    66fa:	2800      	cmp	r0, #0
    66fc:	d001      	beq.n	6702 <_dtoa_r+0x35a>
    66fe:	f000 fdfe 	bl	72fe <_dtoa_r+0xf56>
    6702:	002a      	movs	r2, r5
    6704:	0033      	movs	r3, r6
    6706:	2000      	movs	r0, #0
    6708:	4912      	ldr	r1, [pc, #72]	; (6754 <_dtoa_r+0x3ac>)
    670a:	f7fd f99f 	bl	3a4c <__aeabi_dsub>
    670e:	0002      	movs	r2, r0
    6710:	000b      	movs	r3, r1
    6712:	9808      	ldr	r0, [sp, #32]
    6714:	9909      	ldr	r1, [sp, #36]	; 0x24
    6716:	f7fd fe63 	bl	43e0 <__aeabi_dcmpgt>
    671a:	2800      	cmp	r0, #0
    671c:	d001      	beq.n	6722 <_dtoa_r+0x37a>
    671e:	f000 fde7 	bl	72f0 <_dtoa_r+0xf48>
    6722:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6724:	2b01      	cmp	r3, #1
    6726:	d101      	bne.n	672c <_dtoa_r+0x384>
    6728:	f000 fc78 	bl	701c <_dtoa_r+0xc74>
    672c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    672e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6730:	4694      	mov	ip, r2
    6732:	4463      	add	r3, ip
    6734:	4698      	mov	r8, r3
    6736:	464b      	mov	r3, r9
    6738:	9312      	str	r3, [sp, #72]	; 0x48
    673a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    673c:	4699      	mov	r9, r3
    673e:	e038      	b.n	67b2 <_dtoa_r+0x40a>
    6740:	7ff00000 	.word	0x7ff00000
    6744:	0000a25d 	.word	0x0000a25d
    6748:	0000270f 	.word	0x0000270f
    674c:	0000a280 	.word	0x0000a280
    6750:	0000a28c 	.word	0x0000a28c
    6754:	3ff00000 	.word	0x3ff00000
    6758:	fffffc01 	.word	0xfffffc01
    675c:	3ff80000 	.word	0x3ff80000
    6760:	636f4361 	.word	0x636f4361
    6764:	3fd287a7 	.word	0x3fd287a7
    6768:	8b60c8b3 	.word	0x8b60c8b3
    676c:	3fc68a28 	.word	0x3fc68a28
    6770:	509f79fb 	.word	0x509f79fb
    6774:	3fd34413 	.word	0x3fd34413
    6778:	0000a2b8 	.word	0x0000a2b8
    677c:	0000a290 	.word	0x0000a290
    6780:	401c0000 	.word	0x401c0000
    6784:	fcc00000 	.word	0xfcc00000
    6788:	3fe00000 	.word	0x3fe00000
    678c:	002a      	movs	r2, r5
    678e:	0033      	movs	r3, r6
    6790:	2000      	movs	r0, #0
    6792:	49b9      	ldr	r1, [pc, #740]	; (6a78 <_dtoa_r+0x6d0>)
    6794:	f7fd f95a 	bl	3a4c <__aeabi_dsub>
    6798:	9a08      	ldr	r2, [sp, #32]
    679a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    679c:	f7fd fe0c 	bl	43b8 <__aeabi_dcmplt>
    67a0:	2800      	cmp	r0, #0
    67a2:	d001      	beq.n	67a8 <_dtoa_r+0x400>
    67a4:	f000 fd74 	bl	7290 <_dtoa_r+0xee8>
    67a8:	46a1      	mov	r9, r4
    67aa:	4544      	cmp	r4, r8
    67ac:	d101      	bne.n	67b2 <_dtoa_r+0x40a>
    67ae:	f000 fc33 	bl	7018 <_dtoa_r+0xc70>
    67b2:	9808      	ldr	r0, [sp, #32]
    67b4:	9909      	ldr	r1, [sp, #36]	; 0x24
    67b6:	2200      	movs	r2, #0
    67b8:	4bb0      	ldr	r3, [pc, #704]	; (6a7c <_dtoa_r+0x6d4>)
    67ba:	f7fc fec7 	bl	354c <__aeabi_dmul>
    67be:	2200      	movs	r2, #0
    67c0:	4bae      	ldr	r3, [pc, #696]	; (6a7c <_dtoa_r+0x6d4>)
    67c2:	9008      	str	r0, [sp, #32]
    67c4:	9109      	str	r1, [sp, #36]	; 0x24
    67c6:	0028      	movs	r0, r5
    67c8:	0031      	movs	r1, r6
    67ca:	f7fc febf 	bl	354c <__aeabi_dmul>
    67ce:	000d      	movs	r5, r1
    67d0:	0004      	movs	r4, r0
    67d2:	f7fd fc51 	bl	4078 <__aeabi_d2iz>
    67d6:	0007      	movs	r7, r0
    67d8:	f7fd fc82 	bl	40e0 <__aeabi_i2d>
    67dc:	0002      	movs	r2, r0
    67de:	000b      	movs	r3, r1
    67e0:	0020      	movs	r0, r4
    67e2:	0029      	movs	r1, r5
    67e4:	f7fd f932 	bl	3a4c <__aeabi_dsub>
    67e8:	464b      	mov	r3, r9
    67ea:	3730      	adds	r7, #48	; 0x30
    67ec:	b2ff      	uxtb	r7, r7
    67ee:	1c5c      	adds	r4, r3, #1
    67f0:	701f      	strb	r7, [r3, #0]
    67f2:	9a08      	ldr	r2, [sp, #32]
    67f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    67f6:	0005      	movs	r5, r0
    67f8:	000e      	movs	r6, r1
    67fa:	f7fd fddd 	bl	43b8 <__aeabi_dcmplt>
    67fe:	2800      	cmp	r0, #0
    6800:	d0c4      	beq.n	678c <_dtoa_r+0x3e4>
    6802:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6804:	9303      	str	r3, [sp, #12]
    6806:	4659      	mov	r1, fp
    6808:	4650      	mov	r0, sl
    680a:	f001 fdd7 	bl	83bc <_Bfree>
    680e:	2300      	movs	r3, #0
    6810:	7023      	strb	r3, [r4, #0]
    6812:	9b03      	ldr	r3, [sp, #12]
    6814:	9a24      	ldr	r2, [sp, #144]	; 0x90
    6816:	3301      	adds	r3, #1
    6818:	6013      	str	r3, [r2, #0]
    681a:	9b26      	ldr	r3, [sp, #152]	; 0x98
    681c:	2b00      	cmp	r3, #0
    681e:	d100      	bne.n	6822 <_dtoa_r+0x47a>
    6820:	e3a8      	b.n	6f74 <_dtoa_r+0xbcc>
    6822:	601c      	str	r4, [r3, #0]
    6824:	980a      	ldr	r0, [sp, #40]	; 0x28
    6826:	e5f4      	b.n	6412 <_dtoa_r+0x6a>
    6828:	9b16      	ldr	r3, [sp, #88]	; 0x58
    682a:	4699      	mov	r9, r3
    682c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    682e:	444b      	add	r3, r9
    6830:	001c      	movs	r4, r3
    6832:	4b93      	ldr	r3, [pc, #588]	; (6a80 <_dtoa_r+0x6d8>)
    6834:	18e3      	adds	r3, r4, r3
    6836:	2b20      	cmp	r3, #32
    6838:	dc00      	bgt.n	683c <_dtoa_r+0x494>
    683a:	e17e      	b.n	6b3a <_dtoa_r+0x792>
    683c:	0031      	movs	r1, r6
    683e:	4a91      	ldr	r2, [pc, #580]	; (6a84 <_dtoa_r+0x6dc>)
    6840:	4640      	mov	r0, r8
    6842:	18a2      	adds	r2, r4, r2
    6844:	40d1      	lsrs	r1, r2
    6846:	000a      	movs	r2, r1
    6848:	2140      	movs	r1, #64	; 0x40
    684a:	1acb      	subs	r3, r1, r3
    684c:	4098      	lsls	r0, r3
    684e:	4310      	orrs	r0, r2
    6850:	f7fd fc88 	bl	4164 <__aeabi_ui2d>
    6854:	1e63      	subs	r3, r4, #1
    6856:	4698      	mov	r8, r3
    6858:	2301      	movs	r3, #1
    685a:	4d8b      	ldr	r5, [pc, #556]	; (6a88 <_dtoa_r+0x6e0>)
    685c:	930f      	str	r3, [sp, #60]	; 0x3c
    685e:	1949      	adds	r1, r1, r5
    6860:	e618      	b.n	6494 <_dtoa_r+0xec>
    6862:	488a      	ldr	r0, [pc, #552]	; (6a8c <_dtoa_r+0x6e4>)
    6864:	e5d5      	b.n	6412 <_dtoa_r+0x6a>
    6866:	2300      	movs	r3, #0
    6868:	4652      	mov	r2, sl
    686a:	2100      	movs	r1, #0
    686c:	6453      	str	r3, [r2, #68]	; 0x44
    686e:	4650      	mov	r0, sl
    6870:	f001 fd7c 	bl	836c <_Balloc>
    6874:	4653      	mov	r3, sl
    6876:	6418      	str	r0, [r3, #64]	; 0x40
    6878:	2301      	movs	r3, #1
    687a:	425b      	negs	r3, r3
    687c:	9307      	str	r3, [sp, #28]
    687e:	930e      	str	r3, [sp, #56]	; 0x38
    6880:	3302      	adds	r3, #2
    6882:	2200      	movs	r2, #0
    6884:	930b      	str	r3, [sp, #44]	; 0x2c
    6886:	2300      	movs	r3, #0
    6888:	900a      	str	r0, [sp, #40]	; 0x28
    688a:	9223      	str	r2, [sp, #140]	; 0x8c
    688c:	9322      	str	r3, [sp, #136]	; 0x88
    688e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6890:	2b00      	cmp	r3, #0
    6892:	da00      	bge.n	6896 <_dtoa_r+0x4ee>
    6894:	e0ab      	b.n	69ee <_dtoa_r+0x646>
    6896:	9a03      	ldr	r2, [sp, #12]
    6898:	2a0e      	cmp	r2, #14
    689a:	dd00      	ble.n	689e <_dtoa_r+0x4f6>
    689c:	e0a7      	b.n	69ee <_dtoa_r+0x646>
    689e:	4b7c      	ldr	r3, [pc, #496]	; (6a90 <_dtoa_r+0x6e8>)
    68a0:	00d2      	lsls	r2, r2, #3
    68a2:	189b      	adds	r3, r3, r2
    68a4:	685c      	ldr	r4, [r3, #4]
    68a6:	681b      	ldr	r3, [r3, #0]
    68a8:	9304      	str	r3, [sp, #16]
    68aa:	9405      	str	r4, [sp, #20]
    68ac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    68ae:	2b00      	cmp	r3, #0
    68b0:	da00      	bge.n	68b4 <_dtoa_r+0x50c>
    68b2:	e2a7      	b.n	6e04 <_dtoa_r+0xa5c>
    68b4:	9c04      	ldr	r4, [sp, #16]
    68b6:	9d05      	ldr	r5, [sp, #20]
    68b8:	0030      	movs	r0, r6
    68ba:	0022      	movs	r2, r4
    68bc:	002b      	movs	r3, r5
    68be:	0039      	movs	r1, r7
    68c0:	f7fc fb10 	bl	2ee4 <__aeabi_ddiv>
    68c4:	f7fd fbd8 	bl	4078 <__aeabi_d2iz>
    68c8:	4680      	mov	r8, r0
    68ca:	f7fd fc09 	bl	40e0 <__aeabi_i2d>
    68ce:	0022      	movs	r2, r4
    68d0:	002b      	movs	r3, r5
    68d2:	f7fc fe3b 	bl	354c <__aeabi_dmul>
    68d6:	0002      	movs	r2, r0
    68d8:	000b      	movs	r3, r1
    68da:	0030      	movs	r0, r6
    68dc:	0039      	movs	r1, r7
    68de:	f7fd f8b5 	bl	3a4c <__aeabi_dsub>
    68e2:	4643      	mov	r3, r8
    68e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    68e6:	3330      	adds	r3, #48	; 0x30
    68e8:	7013      	strb	r3, [r2, #0]
    68ea:	9b07      	ldr	r3, [sp, #28]
    68ec:	0006      	movs	r6, r0
    68ee:	000f      	movs	r7, r1
    68f0:	1c54      	adds	r4, r2, #1
    68f2:	2b01      	cmp	r3, #1
    68f4:	d04e      	beq.n	6994 <_dtoa_r+0x5ec>
    68f6:	2200      	movs	r2, #0
    68f8:	4b60      	ldr	r3, [pc, #384]	; (6a7c <_dtoa_r+0x6d4>)
    68fa:	f7fc fe27 	bl	354c <__aeabi_dmul>
    68fe:	2200      	movs	r2, #0
    6900:	2300      	movs	r3, #0
    6902:	0006      	movs	r6, r0
    6904:	000f      	movs	r7, r1
    6906:	f7fd fd51 	bl	43ac <__aeabi_dcmpeq>
    690a:	2800      	cmp	r0, #0
    690c:	d000      	beq.n	6910 <_dtoa_r+0x568>
    690e:	e77a      	b.n	6806 <_dtoa_r+0x45e>
    6910:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6912:	9a07      	ldr	r2, [sp, #28]
    6914:	1c9d      	adds	r5, r3, #2
    6916:	469c      	mov	ip, r3
    6918:	465b      	mov	r3, fp
    691a:	9306      	str	r3, [sp, #24]
    691c:	4653      	mov	r3, sl
    691e:	4462      	add	r2, ip
    6920:	46aa      	mov	sl, r5
    6922:	9c04      	ldr	r4, [sp, #16]
    6924:	9d05      	ldr	r5, [sp, #20]
    6926:	4691      	mov	r9, r2
    6928:	9307      	str	r3, [sp, #28]
    692a:	e00f      	b.n	694c <_dtoa_r+0x5a4>
    692c:	2200      	movs	r2, #0
    692e:	4b53      	ldr	r3, [pc, #332]	; (6a7c <_dtoa_r+0x6d4>)
    6930:	f7fc fe0c 	bl	354c <__aeabi_dmul>
    6934:	2301      	movs	r3, #1
    6936:	469c      	mov	ip, r3
    6938:	2200      	movs	r2, #0
    693a:	2300      	movs	r3, #0
    693c:	0006      	movs	r6, r0
    693e:	000f      	movs	r7, r1
    6940:	44e2      	add	sl, ip
    6942:	f7fd fd33 	bl	43ac <__aeabi_dcmpeq>
    6946:	2800      	cmp	r0, #0
    6948:	d000      	beq.n	694c <_dtoa_r+0x5a4>
    694a:	e2d9      	b.n	6f00 <_dtoa_r+0xb58>
    694c:	0022      	movs	r2, r4
    694e:	002b      	movs	r3, r5
    6950:	0030      	movs	r0, r6
    6952:	0039      	movs	r1, r7
    6954:	f7fc fac6 	bl	2ee4 <__aeabi_ddiv>
    6958:	f7fd fb8e 	bl	4078 <__aeabi_d2iz>
    695c:	4680      	mov	r8, r0
    695e:	f7fd fbbf 	bl	40e0 <__aeabi_i2d>
    6962:	0022      	movs	r2, r4
    6964:	002b      	movs	r3, r5
    6966:	f7fc fdf1 	bl	354c <__aeabi_dmul>
    696a:	0002      	movs	r2, r0
    696c:	000b      	movs	r3, r1
    696e:	0030      	movs	r0, r6
    6970:	0039      	movs	r1, r7
    6972:	f7fd f86b 	bl	3a4c <__aeabi_dsub>
    6976:	4653      	mov	r3, sl
    6978:	4642      	mov	r2, r8
    697a:	3b01      	subs	r3, #1
    697c:	3230      	adds	r2, #48	; 0x30
    697e:	0006      	movs	r6, r0
    6980:	000f      	movs	r7, r1
    6982:	46d3      	mov	fp, sl
    6984:	701a      	strb	r2, [r3, #0]
    6986:	45d1      	cmp	r9, sl
    6988:	d1d0      	bne.n	692c <_dtoa_r+0x584>
    698a:	9b06      	ldr	r3, [sp, #24]
    698c:	4654      	mov	r4, sl
    698e:	469b      	mov	fp, r3
    6990:	9b07      	ldr	r3, [sp, #28]
    6992:	469a      	mov	sl, r3
    6994:	0032      	movs	r2, r6
    6996:	003b      	movs	r3, r7
    6998:	0030      	movs	r0, r6
    699a:	0039      	movs	r1, r7
    699c:	f002 fe38 	bl	9610 <__aeabi_dadd>
    69a0:	0006      	movs	r6, r0
    69a2:	000f      	movs	r7, r1
    69a4:	0002      	movs	r2, r0
    69a6:	000b      	movs	r3, r1
    69a8:	9804      	ldr	r0, [sp, #16]
    69aa:	9905      	ldr	r1, [sp, #20]
    69ac:	f7fd fd04 	bl	43b8 <__aeabi_dcmplt>
    69b0:	2800      	cmp	r0, #0
    69b2:	d10c      	bne.n	69ce <_dtoa_r+0x626>
    69b4:	9804      	ldr	r0, [sp, #16]
    69b6:	9905      	ldr	r1, [sp, #20]
    69b8:	0032      	movs	r2, r6
    69ba:	003b      	movs	r3, r7
    69bc:	f7fd fcf6 	bl	43ac <__aeabi_dcmpeq>
    69c0:	2800      	cmp	r0, #0
    69c2:	d100      	bne.n	69c6 <_dtoa_r+0x61e>
    69c4:	e71f      	b.n	6806 <_dtoa_r+0x45e>
    69c6:	4643      	mov	r3, r8
    69c8:	07db      	lsls	r3, r3, #31
    69ca:	d400      	bmi.n	69ce <_dtoa_r+0x626>
    69cc:	e71b      	b.n	6806 <_dtoa_r+0x45e>
    69ce:	1e65      	subs	r5, r4, #1
    69d0:	782f      	ldrb	r7, [r5, #0]
    69d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    69d4:	e006      	b.n	69e4 <_dtoa_r+0x63c>
    69d6:	429d      	cmp	r5, r3
    69d8:	d100      	bne.n	69dc <_dtoa_r+0x634>
    69da:	e351      	b.n	7080 <_dtoa_r+0xcd8>
    69dc:	3c02      	subs	r4, #2
    69de:	7827      	ldrb	r7, [r4, #0]
    69e0:	002c      	movs	r4, r5
    69e2:	3d01      	subs	r5, #1
    69e4:	2f39      	cmp	r7, #57	; 0x39
    69e6:	d0f6      	beq.n	69d6 <_dtoa_r+0x62e>
    69e8:	3701      	adds	r7, #1
    69ea:	702f      	strb	r7, [r5, #0]
    69ec:	e70b      	b.n	6806 <_dtoa_r+0x45e>
    69ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    69f0:	2a00      	cmp	r2, #0
    69f2:	d04f      	beq.n	6a94 <_dtoa_r+0x6ec>
    69f4:	9a22      	ldr	r2, [sp, #136]	; 0x88
    69f6:	2a01      	cmp	r2, #1
    69f8:	dc00      	bgt.n	69fc <_dtoa_r+0x654>
    69fa:	e22c      	b.n	6e56 <_dtoa_r+0xaae>
    69fc:	9b07      	ldr	r3, [sp, #28]
    69fe:	1e5c      	subs	r4, r3, #1
    6a00:	464b      	mov	r3, r9
    6a02:	45a1      	cmp	r9, r4
    6a04:	da00      	bge.n	6a08 <_dtoa_r+0x660>
    6a06:	e2b8      	b.n	6f7a <_dtoa_r+0xbd2>
    6a08:	1b1c      	subs	r4, r3, r4
    6a0a:	9b07      	ldr	r3, [sp, #28]
    6a0c:	2b00      	cmp	r3, #0
    6a0e:	da00      	bge.n	6a12 <_dtoa_r+0x66a>
    6a10:	e3d4      	b.n	71bc <_dtoa_r+0xe14>
    6a12:	9b06      	ldr	r3, [sp, #24]
    6a14:	9308      	str	r3, [sp, #32]
    6a16:	9b07      	ldr	r3, [sp, #28]
    6a18:	9a06      	ldr	r2, [sp, #24]
    6a1a:	2101      	movs	r1, #1
    6a1c:	4694      	mov	ip, r2
    6a1e:	449c      	add	ip, r3
    6a20:	4662      	mov	r2, ip
    6a22:	9206      	str	r2, [sp, #24]
    6a24:	9a04      	ldr	r2, [sp, #16]
    6a26:	4650      	mov	r0, sl
    6a28:	4694      	mov	ip, r2
    6a2a:	449c      	add	ip, r3
    6a2c:	4663      	mov	r3, ip
    6a2e:	9304      	str	r3, [sp, #16]
    6a30:	f001 fd5c 	bl	84ec <__i2b>
    6a34:	4680      	mov	r8, r0
    6a36:	e032      	b.n	6a9e <_dtoa_r+0x6f6>
    6a38:	9a06      	ldr	r2, [sp, #24]
    6a3a:	9b03      	ldr	r3, [sp, #12]
    6a3c:	1ad2      	subs	r2, r2, r3
    6a3e:	425b      	negs	r3, r3
    6a40:	4699      	mov	r9, r3
    6a42:	2300      	movs	r3, #0
    6a44:	9206      	str	r2, [sp, #24]
    6a46:	930d      	str	r3, [sp, #52]	; 0x34
    6a48:	e579      	b.n	653e <_dtoa_r+0x196>
    6a4a:	9803      	ldr	r0, [sp, #12]
    6a4c:	f7fd fb48 	bl	40e0 <__aeabi_i2d>
    6a50:	000b      	movs	r3, r1
    6a52:	0002      	movs	r2, r0
    6a54:	0029      	movs	r1, r5
    6a56:	0020      	movs	r0, r4
    6a58:	f7fd fca8 	bl	43ac <__aeabi_dcmpeq>
    6a5c:	0002      	movs	r2, r0
    6a5e:	4250      	negs	r0, r2
    6a60:	4150      	adcs	r0, r2
    6a62:	9b03      	ldr	r3, [sp, #12]
    6a64:	1a1b      	subs	r3, r3, r0
    6a66:	9303      	str	r3, [sp, #12]
    6a68:	e53d      	b.n	64e6 <_dtoa_r+0x13e>
    6a6a:	2301      	movs	r3, #1
    6a6c:	1a9b      	subs	r3, r3, r2
    6a6e:	9306      	str	r3, [sp, #24]
    6a70:	2300      	movs	r3, #0
    6a72:	9304      	str	r3, [sp, #16]
    6a74:	e557      	b.n	6526 <_dtoa_r+0x17e>
    6a76:	46c0      	nop			; (mov r8, r8)
    6a78:	3ff00000 	.word	0x3ff00000
    6a7c:	40240000 	.word	0x40240000
    6a80:	00000432 	.word	0x00000432
    6a84:	00000412 	.word	0x00000412
    6a88:	fe100000 	.word	0xfe100000
    6a8c:	0000a25c 	.word	0x0000a25c
    6a90:	0000a2b8 	.word	0x0000a2b8
    6a94:	9b06      	ldr	r3, [sp, #24]
    6a96:	464c      	mov	r4, r9
    6a98:	9308      	str	r3, [sp, #32]
    6a9a:	2300      	movs	r3, #0
    6a9c:	4698      	mov	r8, r3
    6a9e:	9908      	ldr	r1, [sp, #32]
    6aa0:	1e0b      	subs	r3, r1, #0
    6aa2:	dd0e      	ble.n	6ac2 <_dtoa_r+0x71a>
    6aa4:	9a04      	ldr	r2, [sp, #16]
    6aa6:	2a00      	cmp	r2, #0
    6aa8:	dd0b      	ble.n	6ac2 <_dtoa_r+0x71a>
    6aaa:	4293      	cmp	r3, r2
    6aac:	dd00      	ble.n	6ab0 <_dtoa_r+0x708>
    6aae:	e187      	b.n	6dc0 <_dtoa_r+0xa18>
    6ab0:	9a06      	ldr	r2, [sp, #24]
    6ab2:	1ad2      	subs	r2, r2, r3
    6ab4:	9206      	str	r2, [sp, #24]
    6ab6:	9a08      	ldr	r2, [sp, #32]
    6ab8:	1ad2      	subs	r2, r2, r3
    6aba:	9208      	str	r2, [sp, #32]
    6abc:	9a04      	ldr	r2, [sp, #16]
    6abe:	1ad3      	subs	r3, r2, r3
    6ac0:	9304      	str	r3, [sp, #16]
    6ac2:	464b      	mov	r3, r9
    6ac4:	2b00      	cmp	r3, #0
    6ac6:	d01a      	beq.n	6afe <_dtoa_r+0x756>
    6ac8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6aca:	2b00      	cmp	r3, #0
    6acc:	d100      	bne.n	6ad0 <_dtoa_r+0x728>
    6ace:	e1bb      	b.n	6e48 <_dtoa_r+0xaa0>
    6ad0:	2c00      	cmp	r4, #0
    6ad2:	dd10      	ble.n	6af6 <_dtoa_r+0x74e>
    6ad4:	4641      	mov	r1, r8
    6ad6:	0022      	movs	r2, r4
    6ad8:	4650      	mov	r0, sl
    6ada:	f001 fdbb 	bl	8654 <__pow5mult>
    6ade:	465a      	mov	r2, fp
    6ae0:	0001      	movs	r1, r0
    6ae2:	4680      	mov	r8, r0
    6ae4:	4650      	mov	r0, sl
    6ae6:	f001 fd0b 	bl	8500 <__multiply>
    6aea:	0005      	movs	r5, r0
    6aec:	4659      	mov	r1, fp
    6aee:	4650      	mov	r0, sl
    6af0:	f001 fc64 	bl	83bc <_Bfree>
    6af4:	46ab      	mov	fp, r5
    6af6:	464b      	mov	r3, r9
    6af8:	1b1a      	subs	r2, r3, r4
    6afa:	d000      	beq.n	6afe <_dtoa_r+0x756>
    6afc:	e1a5      	b.n	6e4a <_dtoa_r+0xaa2>
    6afe:	2101      	movs	r1, #1
    6b00:	4650      	mov	r0, sl
    6b02:	f001 fcf3 	bl	84ec <__i2b>
    6b06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6b08:	4681      	mov	r9, r0
    6b0a:	2b00      	cmp	r3, #0
    6b0c:	dd1d      	ble.n	6b4a <_dtoa_r+0x7a2>
    6b0e:	001a      	movs	r2, r3
    6b10:	0001      	movs	r1, r0
    6b12:	4650      	mov	r0, sl
    6b14:	f001 fd9e 	bl	8654 <__pow5mult>
    6b18:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6b1a:	4681      	mov	r9, r0
    6b1c:	2b01      	cmp	r3, #1
    6b1e:	dc00      	bgt.n	6b22 <_dtoa_r+0x77a>
    6b20:	e150      	b.n	6dc4 <_dtoa_r+0xa1c>
    6b22:	2400      	movs	r4, #0
    6b24:	464b      	mov	r3, r9
    6b26:	691b      	ldr	r3, [r3, #16]
    6b28:	3303      	adds	r3, #3
    6b2a:	009b      	lsls	r3, r3, #2
    6b2c:	444b      	add	r3, r9
    6b2e:	6858      	ldr	r0, [r3, #4]
    6b30:	f001 fc94 	bl	845c <__hi0bits>
    6b34:	2320      	movs	r3, #32
    6b36:	1a1b      	subs	r3, r3, r0
    6b38:	e010      	b.n	6b5c <_dtoa_r+0x7b4>
    6b3a:	2220      	movs	r2, #32
    6b3c:	0030      	movs	r0, r6
    6b3e:	1ad3      	subs	r3, r2, r3
    6b40:	4098      	lsls	r0, r3
    6b42:	e685      	b.n	6850 <_dtoa_r+0x4a8>
    6b44:	2300      	movs	r3, #0
    6b46:	930c      	str	r3, [sp, #48]	; 0x30
    6b48:	e4e3      	b.n	6512 <_dtoa_r+0x16a>
    6b4a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6b4c:	2400      	movs	r4, #0
    6b4e:	2b01      	cmp	r3, #1
    6b50:	dc00      	bgt.n	6b54 <_dtoa_r+0x7ac>
    6b52:	e18b      	b.n	6e6c <_dtoa_r+0xac4>
    6b54:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6b56:	2301      	movs	r3, #1
    6b58:	2a00      	cmp	r2, #0
    6b5a:	d1e3      	bne.n	6b24 <_dtoa_r+0x77c>
    6b5c:	9904      	ldr	r1, [sp, #16]
    6b5e:	201f      	movs	r0, #31
    6b60:	468c      	mov	ip, r1
    6b62:	4463      	add	r3, ip
    6b64:	4018      	ands	r0, r3
    6b66:	d100      	bne.n	6b6a <_dtoa_r+0x7c2>
    6b68:	e0ae      	b.n	6cc8 <_dtoa_r+0x920>
    6b6a:	2320      	movs	r3, #32
    6b6c:	1a1b      	subs	r3, r3, r0
    6b6e:	2b04      	cmp	r3, #4
    6b70:	dc00      	bgt.n	6b74 <_dtoa_r+0x7cc>
    6b72:	e3cc      	b.n	730e <_dtoa_r+0xf66>
    6b74:	231c      	movs	r3, #28
    6b76:	1a18      	subs	r0, r3, r0
    6b78:	9b06      	ldr	r3, [sp, #24]
    6b7a:	469c      	mov	ip, r3
    6b7c:	4484      	add	ip, r0
    6b7e:	4663      	mov	r3, ip
    6b80:	9306      	str	r3, [sp, #24]
    6b82:	9b08      	ldr	r3, [sp, #32]
    6b84:	469c      	mov	ip, r3
    6b86:	4484      	add	ip, r0
    6b88:	4663      	mov	r3, ip
    6b8a:	468c      	mov	ip, r1
    6b8c:	4484      	add	ip, r0
    6b8e:	9308      	str	r3, [sp, #32]
    6b90:	4663      	mov	r3, ip
    6b92:	9304      	str	r3, [sp, #16]
    6b94:	9b06      	ldr	r3, [sp, #24]
    6b96:	2b00      	cmp	r3, #0
    6b98:	dd05      	ble.n	6ba6 <_dtoa_r+0x7fe>
    6b9a:	4659      	mov	r1, fp
    6b9c:	001a      	movs	r2, r3
    6b9e:	4650      	mov	r0, sl
    6ba0:	f001 fdb8 	bl	8714 <__lshift>
    6ba4:	4683      	mov	fp, r0
    6ba6:	9b04      	ldr	r3, [sp, #16]
    6ba8:	2b00      	cmp	r3, #0
    6baa:	dd05      	ble.n	6bb8 <_dtoa_r+0x810>
    6bac:	4649      	mov	r1, r9
    6bae:	001a      	movs	r2, r3
    6bb0:	4650      	mov	r0, sl
    6bb2:	f001 fdaf 	bl	8714 <__lshift>
    6bb6:	4681      	mov	r9, r0
    6bb8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6bba:	2b00      	cmp	r3, #0
    6bbc:	d000      	beq.n	6bc0 <_dtoa_r+0x818>
    6bbe:	e094      	b.n	6cea <_dtoa_r+0x942>
    6bc0:	9b07      	ldr	r3, [sp, #28]
    6bc2:	2b00      	cmp	r3, #0
    6bc4:	dc00      	bgt.n	6bc8 <_dtoa_r+0x820>
    6bc6:	e175      	b.n	6eb4 <_dtoa_r+0xb0c>
    6bc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6bca:	2b00      	cmp	r3, #0
    6bcc:	d100      	bne.n	6bd0 <_dtoa_r+0x828>
    6bce:	e0a6      	b.n	6d1e <_dtoa_r+0x976>
    6bd0:	9b08      	ldr	r3, [sp, #32]
    6bd2:	2b00      	cmp	r3, #0
    6bd4:	dd05      	ble.n	6be2 <_dtoa_r+0x83a>
    6bd6:	4641      	mov	r1, r8
    6bd8:	001a      	movs	r2, r3
    6bda:	4650      	mov	r0, sl
    6bdc:	f001 fd9a 	bl	8714 <__lshift>
    6be0:	4680      	mov	r8, r0
    6be2:	4643      	mov	r3, r8
    6be4:	930c      	str	r3, [sp, #48]	; 0x30
    6be6:	2c00      	cmp	r4, #0
    6be8:	d000      	beq.n	6bec <_dtoa_r+0x844>
    6bea:	e250      	b.n	708e <_dtoa_r+0xce6>
    6bec:	9c07      	ldr	r4, [sp, #28]
    6bee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6bf0:	3c01      	subs	r4, #1
    6bf2:	0023      	movs	r3, r4
    6bf4:	4694      	mov	ip, r2
    6bf6:	4463      	add	r3, ip
    6bf8:	9308      	str	r3, [sp, #32]
    6bfa:	2301      	movs	r3, #1
    6bfc:	4033      	ands	r3, r6
    6bfe:	9307      	str	r3, [sp, #28]
    6c00:	464b      	mov	r3, r9
    6c02:	9306      	str	r3, [sp, #24]
    6c04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6c06:	4657      	mov	r7, sl
    6c08:	4645      	mov	r5, r8
    6c0a:	465e      	mov	r6, fp
    6c0c:	4692      	mov	sl, r2
    6c0e:	4698      	mov	r8, r3
    6c10:	9b06      	ldr	r3, [sp, #24]
    6c12:	0030      	movs	r0, r6
    6c14:	0019      	movs	r1, r3
    6c16:	4699      	mov	r9, r3
    6c18:	f7ff fb1c 	bl	6254 <quorem>
    6c1c:	0003      	movs	r3, r0
    6c1e:	900b      	str	r0, [sp, #44]	; 0x2c
    6c20:	3330      	adds	r3, #48	; 0x30
    6c22:	0029      	movs	r1, r5
    6c24:	0030      	movs	r0, r6
    6c26:	9304      	str	r3, [sp, #16]
    6c28:	f001 fdd4 	bl	87d4 <__mcmp>
    6c2c:	4649      	mov	r1, r9
    6c2e:	0004      	movs	r4, r0
    6c30:	4642      	mov	r2, r8
    6c32:	0038      	movs	r0, r7
    6c34:	f001 fde8 	bl	8808 <__mdiff>
    6c38:	68c3      	ldr	r3, [r0, #12]
    6c3a:	4681      	mov	r9, r0
    6c3c:	2b00      	cmp	r3, #0
    6c3e:	d000      	beq.n	6c42 <_dtoa_r+0x89a>
    6c40:	e11e      	b.n	6e80 <_dtoa_r+0xad8>
    6c42:	0001      	movs	r1, r0
    6c44:	0030      	movs	r0, r6
    6c46:	f001 fdc5 	bl	87d4 <__mcmp>
    6c4a:	4683      	mov	fp, r0
    6c4c:	4649      	mov	r1, r9
    6c4e:	0038      	movs	r0, r7
    6c50:	f001 fbb4 	bl	83bc <_Bfree>
    6c54:	465b      	mov	r3, fp
    6c56:	9a22      	ldr	r2, [sp, #136]	; 0x88
    6c58:	4313      	orrs	r3, r2
    6c5a:	d103      	bne.n	6c64 <_dtoa_r+0x8bc>
    6c5c:	9b07      	ldr	r3, [sp, #28]
    6c5e:	2b00      	cmp	r3, #0
    6c60:	d100      	bne.n	6c64 <_dtoa_r+0x8bc>
    6c62:	e306      	b.n	7272 <_dtoa_r+0xeca>
    6c64:	2c00      	cmp	r4, #0
    6c66:	da00      	bge.n	6c6a <_dtoa_r+0x8c2>
    6c68:	e1a8      	b.n	6fbc <_dtoa_r+0xc14>
    6c6a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6c6c:	431c      	orrs	r4, r3
    6c6e:	d103      	bne.n	6c78 <_dtoa_r+0x8d0>
    6c70:	9b07      	ldr	r3, [sp, #28]
    6c72:	2b00      	cmp	r3, #0
    6c74:	d100      	bne.n	6c78 <_dtoa_r+0x8d0>
    6c76:	e1a1      	b.n	6fbc <_dtoa_r+0xc14>
    6c78:	465b      	mov	r3, fp
    6c7a:	2b00      	cmp	r3, #0
    6c7c:	dd00      	ble.n	6c80 <_dtoa_r+0x8d8>
    6c7e:	e282      	b.n	7186 <_dtoa_r+0xdde>
    6c80:	4669      	mov	r1, sp
    6c82:	4652      	mov	r2, sl
    6c84:	4653      	mov	r3, sl
    6c86:	7c09      	ldrb	r1, [r1, #16]
    6c88:	1c5c      	adds	r4, r3, #1
    6c8a:	7011      	strb	r1, [r2, #0]
    6c8c:	9a08      	ldr	r2, [sp, #32]
    6c8e:	4552      	cmp	r2, sl
    6c90:	d100      	bne.n	6c94 <_dtoa_r+0x8ec>
    6c92:	e28a      	b.n	71aa <_dtoa_r+0xe02>
    6c94:	0031      	movs	r1, r6
    6c96:	2300      	movs	r3, #0
    6c98:	220a      	movs	r2, #10
    6c9a:	0038      	movs	r0, r7
    6c9c:	f001 fb98 	bl	83d0 <__multadd>
    6ca0:	2300      	movs	r3, #0
    6ca2:	0006      	movs	r6, r0
    6ca4:	220a      	movs	r2, #10
    6ca6:	0029      	movs	r1, r5
    6ca8:	0038      	movs	r0, r7
    6caa:	4545      	cmp	r5, r8
    6cac:	d100      	bne.n	6cb0 <_dtoa_r+0x908>
    6cae:	e0e1      	b.n	6e74 <_dtoa_r+0xacc>
    6cb0:	f001 fb8e 	bl	83d0 <__multadd>
    6cb4:	4641      	mov	r1, r8
    6cb6:	0005      	movs	r5, r0
    6cb8:	2300      	movs	r3, #0
    6cba:	220a      	movs	r2, #10
    6cbc:	0038      	movs	r0, r7
    6cbe:	f001 fb87 	bl	83d0 <__multadd>
    6cc2:	46a2      	mov	sl, r4
    6cc4:	4680      	mov	r8, r0
    6cc6:	e7a3      	b.n	6c10 <_dtoa_r+0x868>
    6cc8:	201c      	movs	r0, #28
    6cca:	9b06      	ldr	r3, [sp, #24]
    6ccc:	469c      	mov	ip, r3
    6cce:	4484      	add	ip, r0
    6cd0:	4663      	mov	r3, ip
    6cd2:	9306      	str	r3, [sp, #24]
    6cd4:	9b08      	ldr	r3, [sp, #32]
    6cd6:	469c      	mov	ip, r3
    6cd8:	4484      	add	ip, r0
    6cda:	4663      	mov	r3, ip
    6cdc:	9308      	str	r3, [sp, #32]
    6cde:	9b04      	ldr	r3, [sp, #16]
    6ce0:	469c      	mov	ip, r3
    6ce2:	4484      	add	ip, r0
    6ce4:	4663      	mov	r3, ip
    6ce6:	9304      	str	r3, [sp, #16]
    6ce8:	e754      	b.n	6b94 <_dtoa_r+0x7ec>
    6cea:	4649      	mov	r1, r9
    6cec:	4658      	mov	r0, fp
    6cee:	f001 fd71 	bl	87d4 <__mcmp>
    6cf2:	2800      	cmp	r0, #0
    6cf4:	db00      	blt.n	6cf8 <_dtoa_r+0x950>
    6cf6:	e763      	b.n	6bc0 <_dtoa_r+0x818>
    6cf8:	9b03      	ldr	r3, [sp, #12]
    6cfa:	4659      	mov	r1, fp
    6cfc:	3b01      	subs	r3, #1
    6cfe:	9303      	str	r3, [sp, #12]
    6d00:	220a      	movs	r2, #10
    6d02:	2300      	movs	r3, #0
    6d04:	4650      	mov	r0, sl
    6d06:	f001 fb63 	bl	83d0 <__multadd>
    6d0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6d0c:	4683      	mov	fp, r0
    6d0e:	2b00      	cmp	r3, #0
    6d10:	d000      	beq.n	6d14 <_dtoa_r+0x96c>
    6d12:	e2ca      	b.n	72aa <_dtoa_r+0xf02>
    6d14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6d16:	2b00      	cmp	r3, #0
    6d18:	dc00      	bgt.n	6d1c <_dtoa_r+0x974>
    6d1a:	e2d8      	b.n	72ce <_dtoa_r+0xf26>
    6d1c:	9307      	str	r3, [sp, #28]
    6d1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6d20:	465d      	mov	r5, fp
    6d22:	2400      	movs	r4, #0
    6d24:	9f07      	ldr	r7, [sp, #28]
    6d26:	469b      	mov	fp, r3
    6d28:	e006      	b.n	6d38 <_dtoa_r+0x990>
    6d2a:	0029      	movs	r1, r5
    6d2c:	2300      	movs	r3, #0
    6d2e:	220a      	movs	r2, #10
    6d30:	4650      	mov	r0, sl
    6d32:	f001 fb4d 	bl	83d0 <__multadd>
    6d36:	0005      	movs	r5, r0
    6d38:	4649      	mov	r1, r9
    6d3a:	0028      	movs	r0, r5
    6d3c:	f7ff fa8a 	bl	6254 <quorem>
    6d40:	465b      	mov	r3, fp
    6d42:	3030      	adds	r0, #48	; 0x30
    6d44:	5518      	strb	r0, [r3, r4]
    6d46:	3401      	adds	r4, #1
    6d48:	42bc      	cmp	r4, r7
    6d4a:	dbee      	blt.n	6d2a <_dtoa_r+0x982>
    6d4c:	46ab      	mov	fp, r5
    6d4e:	0006      	movs	r6, r0
    6d50:	9c07      	ldr	r4, [sp, #28]
    6d52:	2c00      	cmp	r4, #0
    6d54:	dc00      	bgt.n	6d58 <_dtoa_r+0x9b0>
    6d56:	e237      	b.n	71c8 <_dtoa_r+0xe20>
    6d58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6d5a:	2700      	movs	r7, #0
    6d5c:	469c      	mov	ip, r3
    6d5e:	4464      	add	r4, ip
    6d60:	4659      	mov	r1, fp
    6d62:	2201      	movs	r2, #1
    6d64:	4650      	mov	r0, sl
    6d66:	f001 fcd5 	bl	8714 <__lshift>
    6d6a:	4649      	mov	r1, r9
    6d6c:	4683      	mov	fp, r0
    6d6e:	f001 fd31 	bl	87d4 <__mcmp>
    6d72:	2800      	cmp	r0, #0
    6d74:	dc00      	bgt.n	6d78 <_dtoa_r+0x9d0>
    6d76:	e144      	b.n	7002 <_dtoa_r+0xc5a>
    6d78:	1e65      	subs	r5, r4, #1
    6d7a:	782b      	ldrb	r3, [r5, #0]
    6d7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6d7e:	e006      	b.n	6d8e <_dtoa_r+0x9e6>
    6d80:	4295      	cmp	r5, r2
    6d82:	d100      	bne.n	6d86 <_dtoa_r+0x9de>
    6d84:	e0b1      	b.n	6eea <_dtoa_r+0xb42>
    6d86:	3c02      	subs	r4, #2
    6d88:	7823      	ldrb	r3, [r4, #0]
    6d8a:	002c      	movs	r4, r5
    6d8c:	3d01      	subs	r5, #1
    6d8e:	2b39      	cmp	r3, #57	; 0x39
    6d90:	d0f6      	beq.n	6d80 <_dtoa_r+0x9d8>
    6d92:	3301      	adds	r3, #1
    6d94:	702b      	strb	r3, [r5, #0]
    6d96:	4649      	mov	r1, r9
    6d98:	4650      	mov	r0, sl
    6d9a:	f001 fb0f 	bl	83bc <_Bfree>
    6d9e:	4643      	mov	r3, r8
    6da0:	2b00      	cmp	r3, #0
    6da2:	d100      	bne.n	6da6 <_dtoa_r+0x9fe>
    6da4:	e52f      	b.n	6806 <_dtoa_r+0x45e>
    6da6:	2f00      	cmp	r7, #0
    6da8:	d005      	beq.n	6db6 <_dtoa_r+0xa0e>
    6daa:	4547      	cmp	r7, r8
    6dac:	d003      	beq.n	6db6 <_dtoa_r+0xa0e>
    6dae:	0039      	movs	r1, r7
    6db0:	4650      	mov	r0, sl
    6db2:	f001 fb03 	bl	83bc <_Bfree>
    6db6:	4641      	mov	r1, r8
    6db8:	4650      	mov	r0, sl
    6dba:	f001 faff 	bl	83bc <_Bfree>
    6dbe:	e522      	b.n	6806 <_dtoa_r+0x45e>
    6dc0:	0013      	movs	r3, r2
    6dc2:	e675      	b.n	6ab0 <_dtoa_r+0x708>
    6dc4:	2e00      	cmp	r6, #0
    6dc6:	d000      	beq.n	6dca <_dtoa_r+0xa22>
    6dc8:	e6ab      	b.n	6b22 <_dtoa_r+0x77a>
    6dca:	033b      	lsls	r3, r7, #12
    6dcc:	2400      	movs	r4, #0
    6dce:	2b00      	cmp	r3, #0
    6dd0:	d000      	beq.n	6dd4 <_dtoa_r+0xa2c>
    6dd2:	e6bf      	b.n	6b54 <_dtoa_r+0x7ac>
    6dd4:	4bba      	ldr	r3, [pc, #744]	; (70c0 <_dtoa_r+0xd18>)
    6dd6:	423b      	tst	r3, r7
    6dd8:	d100      	bne.n	6ddc <_dtoa_r+0xa34>
    6dda:	e6bb      	b.n	6b54 <_dtoa_r+0x7ac>
    6ddc:	9b06      	ldr	r3, [sp, #24]
    6dde:	3401      	adds	r4, #1
    6de0:	3301      	adds	r3, #1
    6de2:	9306      	str	r3, [sp, #24]
    6de4:	9b04      	ldr	r3, [sp, #16]
    6de6:	3301      	adds	r3, #1
    6de8:	9304      	str	r3, [sp, #16]
    6dea:	e6b3      	b.n	6b54 <_dtoa_r+0x7ac>
    6dec:	2301      	movs	r3, #1
    6dee:	930b      	str	r3, [sp, #44]	; 0x2c
    6df0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6df2:	2b00      	cmp	r3, #0
    6df4:	dc00      	bgt.n	6df8 <_dtoa_r+0xa50>
    6df6:	e0d1      	b.n	6f9c <_dtoa_r+0xbf4>
    6df8:	001d      	movs	r5, r3
    6dfa:	4698      	mov	r8, r3
    6dfc:	930e      	str	r3, [sp, #56]	; 0x38
    6dfe:	9307      	str	r3, [sp, #28]
    6e00:	f7ff fbc8 	bl	6594 <_dtoa_r+0x1ec>
    6e04:	9b07      	ldr	r3, [sp, #28]
    6e06:	2b00      	cmp	r3, #0
    6e08:	dd00      	ble.n	6e0c <_dtoa_r+0xa64>
    6e0a:	e553      	b.n	68b4 <_dtoa_r+0x50c>
    6e0c:	d000      	beq.n	6e10 <_dtoa_r+0xa68>
    6e0e:	e0ad      	b.n	6f6c <_dtoa_r+0xbc4>
    6e10:	9804      	ldr	r0, [sp, #16]
    6e12:	9905      	ldr	r1, [sp, #20]
    6e14:	2200      	movs	r2, #0
    6e16:	4bab      	ldr	r3, [pc, #684]	; (70c4 <_dtoa_r+0xd1c>)
    6e18:	f7fc fb98 	bl	354c <__aeabi_dmul>
    6e1c:	003b      	movs	r3, r7
    6e1e:	0032      	movs	r2, r6
    6e20:	f7fd fae8 	bl	43f4 <__aeabi_dcmpge>
    6e24:	2300      	movs	r3, #0
    6e26:	4699      	mov	r9, r3
    6e28:	4698      	mov	r8, r3
    6e2a:	2800      	cmp	r0, #0
    6e2c:	d055      	beq.n	6eda <_dtoa_r+0xb32>
    6e2e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6e30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    6e32:	43db      	mvns	r3, r3
    6e34:	9303      	str	r3, [sp, #12]
    6e36:	4649      	mov	r1, r9
    6e38:	4650      	mov	r0, sl
    6e3a:	f001 fabf 	bl	83bc <_Bfree>
    6e3e:	4643      	mov	r3, r8
    6e40:	2b00      	cmp	r3, #0
    6e42:	d100      	bne.n	6e46 <_dtoa_r+0xa9e>
    6e44:	e4df      	b.n	6806 <_dtoa_r+0x45e>
    6e46:	e7b6      	b.n	6db6 <_dtoa_r+0xa0e>
    6e48:	464a      	mov	r2, r9
    6e4a:	4659      	mov	r1, fp
    6e4c:	4650      	mov	r0, sl
    6e4e:	f001 fc01 	bl	8654 <__pow5mult>
    6e52:	4683      	mov	fp, r0
    6e54:	e653      	b.n	6afe <_dtoa_r+0x756>
    6e56:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6e58:	2a00      	cmp	r2, #0
    6e5a:	d100      	bne.n	6e5e <_dtoa_r+0xab6>
    6e5c:	e1b6      	b.n	71cc <_dtoa_r+0xe24>
    6e5e:	4a9a      	ldr	r2, [pc, #616]	; (70c8 <_dtoa_r+0xd20>)
    6e60:	464c      	mov	r4, r9
    6e62:	4694      	mov	ip, r2
    6e64:	9a06      	ldr	r2, [sp, #24]
    6e66:	4463      	add	r3, ip
    6e68:	9208      	str	r2, [sp, #32]
    6e6a:	e5d5      	b.n	6a18 <_dtoa_r+0x670>
    6e6c:	2e00      	cmp	r6, #0
    6e6e:	d000      	beq.n	6e72 <_dtoa_r+0xaca>
    6e70:	e670      	b.n	6b54 <_dtoa_r+0x7ac>
    6e72:	e7aa      	b.n	6dca <_dtoa_r+0xa22>
    6e74:	f001 faac 	bl	83d0 <__multadd>
    6e78:	46a2      	mov	sl, r4
    6e7a:	0005      	movs	r5, r0
    6e7c:	4680      	mov	r8, r0
    6e7e:	e6c7      	b.n	6c10 <_dtoa_r+0x868>
    6e80:	2301      	movs	r3, #1
    6e82:	469b      	mov	fp, r3
    6e84:	e6e2      	b.n	6c4c <_dtoa_r+0x8a4>
    6e86:	2300      	movs	r3, #0
    6e88:	930b      	str	r3, [sp, #44]	; 0x2c
    6e8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6e8c:	2b02      	cmp	r3, #2
    6e8e:	d0af      	beq.n	6df0 <_dtoa_r+0xa48>
    6e90:	2400      	movs	r4, #0
    6e92:	4653      	mov	r3, sl
    6e94:	0021      	movs	r1, r4
    6e96:	645c      	str	r4, [r3, #68]	; 0x44
    6e98:	4650      	mov	r0, sl
    6e9a:	f001 fa67 	bl	836c <_Balloc>
    6e9e:	4653      	mov	r3, sl
    6ea0:	6418      	str	r0, [r3, #64]	; 0x40
    6ea2:	2301      	movs	r3, #1
    6ea4:	425b      	negs	r3, r3
    6ea6:	9307      	str	r3, [sp, #28]
    6ea8:	930e      	str	r3, [sp, #56]	; 0x38
    6eaa:	3302      	adds	r3, #2
    6eac:	900a      	str	r0, [sp, #40]	; 0x28
    6eae:	9423      	str	r4, [sp, #140]	; 0x8c
    6eb0:	930b      	str	r3, [sp, #44]	; 0x2c
    6eb2:	e4ec      	b.n	688e <_dtoa_r+0x4e6>
    6eb4:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6eb6:	2b02      	cmp	r3, #2
    6eb8:	dc00      	bgt.n	6ebc <_dtoa_r+0xb14>
    6eba:	e685      	b.n	6bc8 <_dtoa_r+0x820>
    6ebc:	9b07      	ldr	r3, [sp, #28]
    6ebe:	2b00      	cmp	r3, #0
    6ec0:	d1b5      	bne.n	6e2e <_dtoa_r+0xa86>
    6ec2:	4649      	mov	r1, r9
    6ec4:	2205      	movs	r2, #5
    6ec6:	4650      	mov	r0, sl
    6ec8:	f001 fa82 	bl	83d0 <__multadd>
    6ecc:	4681      	mov	r9, r0
    6ece:	0001      	movs	r1, r0
    6ed0:	4658      	mov	r0, fp
    6ed2:	f001 fc7f 	bl	87d4 <__mcmp>
    6ed6:	2800      	cmp	r0, #0
    6ed8:	dda9      	ble.n	6e2e <_dtoa_r+0xa86>
    6eda:	2331      	movs	r3, #49	; 0x31
    6edc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6ede:	7013      	strb	r3, [r2, #0]
    6ee0:	9b03      	ldr	r3, [sp, #12]
    6ee2:	1c54      	adds	r4, r2, #1
    6ee4:	3301      	adds	r3, #1
    6ee6:	9303      	str	r3, [sp, #12]
    6ee8:	e7a5      	b.n	6e36 <_dtoa_r+0xa8e>
    6eea:	9b03      	ldr	r3, [sp, #12]
    6eec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6eee:	3301      	adds	r3, #1
    6ef0:	9303      	str	r3, [sp, #12]
    6ef2:	2331      	movs	r3, #49	; 0x31
    6ef4:	7013      	strb	r3, [r2, #0]
    6ef6:	e74e      	b.n	6d96 <_dtoa_r+0x9ee>
    6ef8:	2300      	movs	r3, #0
    6efa:	930b      	str	r3, [sp, #44]	; 0x2c
    6efc:	f7ff fb3d 	bl	657a <_dtoa_r+0x1d2>
    6f00:	9b06      	ldr	r3, [sp, #24]
    6f02:	465c      	mov	r4, fp
    6f04:	469b      	mov	fp, r3
    6f06:	9b07      	ldr	r3, [sp, #28]
    6f08:	469a      	mov	sl, r3
    6f0a:	e47c      	b.n	6806 <_dtoa_r+0x45e>
    6f0c:	4640      	mov	r0, r8
    6f0e:	f7fd f8e7 	bl	40e0 <__aeabi_i2d>
    6f12:	0032      	movs	r2, r6
    6f14:	003b      	movs	r3, r7
    6f16:	f7fc fb19 	bl	354c <__aeabi_dmul>
    6f1a:	2200      	movs	r2, #0
    6f1c:	4b6b      	ldr	r3, [pc, #428]	; (70cc <_dtoa_r+0xd24>)
    6f1e:	f002 fb77 	bl	9610 <__aeabi_dadd>
    6f22:	4a6b      	ldr	r2, [pc, #428]	; (70d0 <_dtoa_r+0xd28>)
    6f24:	000b      	movs	r3, r1
    6f26:	4694      	mov	ip, r2
    6f28:	4463      	add	r3, ip
    6f2a:	9008      	str	r0, [sp, #32]
    6f2c:	9109      	str	r1, [sp, #36]	; 0x24
    6f2e:	9309      	str	r3, [sp, #36]	; 0x24
    6f30:	2200      	movs	r2, #0
    6f32:	4b64      	ldr	r3, [pc, #400]	; (70c4 <_dtoa_r+0xd1c>)
    6f34:	0030      	movs	r0, r6
    6f36:	0039      	movs	r1, r7
    6f38:	f7fc fd88 	bl	3a4c <__aeabi_dsub>
    6f3c:	9e08      	ldr	r6, [sp, #32]
    6f3e:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6f40:	0032      	movs	r2, r6
    6f42:	003b      	movs	r3, r7
    6f44:	0004      	movs	r4, r0
    6f46:	000d      	movs	r5, r1
    6f48:	f7fd fa4a 	bl	43e0 <__aeabi_dcmpgt>
    6f4c:	2800      	cmp	r0, #0
    6f4e:	d000      	beq.n	6f52 <_dtoa_r+0xbaa>
    6f50:	e0b2      	b.n	70b8 <_dtoa_r+0xd10>
    6f52:	2080      	movs	r0, #128	; 0x80
    6f54:	0600      	lsls	r0, r0, #24
    6f56:	4684      	mov	ip, r0
    6f58:	0039      	movs	r1, r7
    6f5a:	4461      	add	r1, ip
    6f5c:	000b      	movs	r3, r1
    6f5e:	0032      	movs	r2, r6
    6f60:	0020      	movs	r0, r4
    6f62:	0029      	movs	r1, r5
    6f64:	f7fd fa28 	bl	43b8 <__aeabi_dcmplt>
    6f68:	2800      	cmp	r0, #0
    6f6a:	d057      	beq.n	701c <_dtoa_r+0xc74>
    6f6c:	2300      	movs	r3, #0
    6f6e:	4699      	mov	r9, r3
    6f70:	4698      	mov	r8, r3
    6f72:	e75c      	b.n	6e2e <_dtoa_r+0xa86>
    6f74:	980a      	ldr	r0, [sp, #40]	; 0x28
    6f76:	f7ff fa4c 	bl	6412 <_dtoa_r+0x6a>
    6f7a:	1ae2      	subs	r2, r4, r3
    6f7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6f7e:	46a1      	mov	r9, r4
    6f80:	469c      	mov	ip, r3
    6f82:	4494      	add	ip, r2
    6f84:	4663      	mov	r3, ip
    6f86:	2400      	movs	r4, #0
    6f88:	930d      	str	r3, [sp, #52]	; 0x34
    6f8a:	e53e      	b.n	6a0a <_dtoa_r+0x662>
    6f8c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    6f8e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6f90:	9208      	str	r2, [sp, #32]
    6f92:	9309      	str	r3, [sp, #36]	; 0x24
    6f94:	2302      	movs	r3, #2
    6f96:	4698      	mov	r8, r3
    6f98:	f7ff fb3a 	bl	6610 <_dtoa_r+0x268>
    6f9c:	2300      	movs	r3, #0
    6f9e:	4652      	mov	r2, sl
    6fa0:	2100      	movs	r1, #0
    6fa2:	6453      	str	r3, [r2, #68]	; 0x44
    6fa4:	4650      	mov	r0, sl
    6fa6:	f001 f9e1 	bl	836c <_Balloc>
    6faa:	4653      	mov	r3, sl
    6fac:	6418      	str	r0, [r3, #64]	; 0x40
    6fae:	2301      	movs	r3, #1
    6fb0:	900a      	str	r0, [sp, #40]	; 0x28
    6fb2:	9307      	str	r3, [sp, #28]
    6fb4:	9323      	str	r3, [sp, #140]	; 0x8c
    6fb6:	930e      	str	r3, [sp, #56]	; 0x38
    6fb8:	f7ff fb07 	bl	65ca <_dtoa_r+0x222>
    6fbc:	4643      	mov	r3, r8
    6fbe:	930c      	str	r3, [sp, #48]	; 0x30
    6fc0:	465b      	mov	r3, fp
    6fc2:	9a06      	ldr	r2, [sp, #24]
    6fc4:	46a8      	mov	r8, r5
    6fc6:	46b3      	mov	fp, r6
    6fc8:	4655      	mov	r5, sl
    6fca:	9e04      	ldr	r6, [sp, #16]
    6fcc:	4691      	mov	r9, r2
    6fce:	46ba      	mov	sl, r7
    6fd0:	2b00      	cmp	r3, #0
    6fd2:	dd10      	ble.n	6ff6 <_dtoa_r+0xc4e>
    6fd4:	4659      	mov	r1, fp
    6fd6:	2201      	movs	r2, #1
    6fd8:	0038      	movs	r0, r7
    6fda:	f001 fb9b 	bl	8714 <__lshift>
    6fde:	4649      	mov	r1, r9
    6fe0:	4683      	mov	fp, r0
    6fe2:	f001 fbf7 	bl	87d4 <__mcmp>
    6fe6:	2800      	cmp	r0, #0
    6fe8:	dc00      	bgt.n	6fec <_dtoa_r+0xc44>
    6fea:	e157      	b.n	729c <_dtoa_r+0xef4>
    6fec:	2e39      	cmp	r6, #57	; 0x39
    6fee:	d100      	bne.n	6ff2 <_dtoa_r+0xc4a>
    6ff0:	e122      	b.n	7238 <_dtoa_r+0xe90>
    6ff2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    6ff4:	3631      	adds	r6, #49	; 0x31
    6ff6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6ff8:	4647      	mov	r7, r8
    6ffa:	1c6c      	adds	r4, r5, #1
    6ffc:	702e      	strb	r6, [r5, #0]
    6ffe:	4698      	mov	r8, r3
    7000:	e6c9      	b.n	6d96 <_dtoa_r+0x9ee>
    7002:	2800      	cmp	r0, #0
    7004:	d103      	bne.n	700e <_dtoa_r+0xc66>
    7006:	07f3      	lsls	r3, r6, #31
    7008:	d501      	bpl.n	700e <_dtoa_r+0xc66>
    700a:	e6b5      	b.n	6d78 <_dtoa_r+0x9d0>
    700c:	001c      	movs	r4, r3
    700e:	1e63      	subs	r3, r4, #1
    7010:	781a      	ldrb	r2, [r3, #0]
    7012:	2a30      	cmp	r2, #48	; 0x30
    7014:	d0fa      	beq.n	700c <_dtoa_r+0xc64>
    7016:	e6be      	b.n	6d96 <_dtoa_r+0x9ee>
    7018:	9b12      	ldr	r3, [sp, #72]	; 0x48
    701a:	4699      	mov	r9, r3
    701c:	9e10      	ldr	r6, [sp, #64]	; 0x40
    701e:	9f11      	ldr	r7, [sp, #68]	; 0x44
    7020:	e435      	b.n	688e <_dtoa_r+0x4e6>
    7022:	2501      	movs	r5, #1
    7024:	f7ff fab4 	bl	6590 <_dtoa_r+0x1e8>
    7028:	9b03      	ldr	r3, [sp, #12]
    702a:	2b00      	cmp	r3, #0
    702c:	d100      	bne.n	7030 <_dtoa_r+0xc88>
    702e:	e0d4      	b.n	71da <_dtoa_r+0xe32>
    7030:	9810      	ldr	r0, [sp, #64]	; 0x40
    7032:	9911      	ldr	r1, [sp, #68]	; 0x44
    7034:	425c      	negs	r4, r3
    7036:	230f      	movs	r3, #15
    7038:	4a26      	ldr	r2, [pc, #152]	; (70d4 <_dtoa_r+0xd2c>)
    703a:	4023      	ands	r3, r4
    703c:	00db      	lsls	r3, r3, #3
    703e:	18d3      	adds	r3, r2, r3
    7040:	681a      	ldr	r2, [r3, #0]
    7042:	685b      	ldr	r3, [r3, #4]
    7044:	f7fc fa82 	bl	354c <__aeabi_dmul>
    7048:	1124      	asrs	r4, r4, #4
    704a:	0006      	movs	r6, r0
    704c:	000f      	movs	r7, r1
    704e:	2c00      	cmp	r4, #0
    7050:	d100      	bne.n	7054 <_dtoa_r+0xcac>
    7052:	e149      	b.n	72e8 <_dtoa_r+0xf40>
    7054:	2302      	movs	r3, #2
    7056:	4698      	mov	r8, r3
    7058:	4d1f      	ldr	r5, [pc, #124]	; (70d8 <_dtoa_r+0xd30>)
    705a:	2301      	movs	r3, #1
    705c:	4223      	tst	r3, r4
    705e:	d009      	beq.n	7074 <_dtoa_r+0xccc>
    7060:	469c      	mov	ip, r3
    7062:	682a      	ldr	r2, [r5, #0]
    7064:	686b      	ldr	r3, [r5, #4]
    7066:	0030      	movs	r0, r6
    7068:	0039      	movs	r1, r7
    706a:	44e0      	add	r8, ip
    706c:	f7fc fa6e 	bl	354c <__aeabi_dmul>
    7070:	0006      	movs	r6, r0
    7072:	000f      	movs	r7, r1
    7074:	1064      	asrs	r4, r4, #1
    7076:	3508      	adds	r5, #8
    7078:	2c00      	cmp	r4, #0
    707a:	d1ee      	bne.n	705a <_dtoa_r+0xcb2>
    707c:	f7ff fae4 	bl	6648 <_dtoa_r+0x2a0>
    7080:	9b03      	ldr	r3, [sp, #12]
    7082:	2730      	movs	r7, #48	; 0x30
    7084:	3301      	adds	r3, #1
    7086:	9303      	str	r3, [sp, #12]
    7088:	2330      	movs	r3, #48	; 0x30
    708a:	702b      	strb	r3, [r5, #0]
    708c:	e4ac      	b.n	69e8 <_dtoa_r+0x640>
    708e:	6859      	ldr	r1, [r3, #4]
    7090:	4650      	mov	r0, sl
    7092:	f001 f96b 	bl	836c <_Balloc>
    7096:	4643      	mov	r3, r8
    7098:	4641      	mov	r1, r8
    709a:	0004      	movs	r4, r0
    709c:	691b      	ldr	r3, [r3, #16]
    709e:	310c      	adds	r1, #12
    70a0:	1c9a      	adds	r2, r3, #2
    70a2:	0092      	lsls	r2, r2, #2
    70a4:	300c      	adds	r0, #12
    70a6:	f7fd fafd 	bl	46a4 <memcpy>
    70aa:	2201      	movs	r2, #1
    70ac:	0021      	movs	r1, r4
    70ae:	4650      	mov	r0, sl
    70b0:	f001 fb30 	bl	8714 <__lshift>
    70b4:	900c      	str	r0, [sp, #48]	; 0x30
    70b6:	e599      	b.n	6bec <_dtoa_r+0x844>
    70b8:	2300      	movs	r3, #0
    70ba:	4699      	mov	r9, r3
    70bc:	4698      	mov	r8, r3
    70be:	e70c      	b.n	6eda <_dtoa_r+0xb32>
    70c0:	7ff00000 	.word	0x7ff00000
    70c4:	40140000 	.word	0x40140000
    70c8:	00000433 	.word	0x00000433
    70cc:	401c0000 	.word	0x401c0000
    70d0:	fcc00000 	.word	0xfcc00000
    70d4:	0000a2b8 	.word	0x0000a2b8
    70d8:	0000a290 	.word	0x0000a290
    70dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    70de:	498f      	ldr	r1, [pc, #572]	; (731c <_dtoa_r+0xf74>)
    70e0:	3b01      	subs	r3, #1
    70e2:	00db      	lsls	r3, r3, #3
    70e4:	18c9      	adds	r1, r1, r3
    70e6:	6808      	ldr	r0, [r1, #0]
    70e8:	6849      	ldr	r1, [r1, #4]
    70ea:	9a08      	ldr	r2, [sp, #32]
    70ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
    70ee:	f7fc fa2d 	bl	354c <__aeabi_dmul>
    70f2:	9014      	str	r0, [sp, #80]	; 0x50
    70f4:	9115      	str	r1, [sp, #84]	; 0x54
    70f6:	0039      	movs	r1, r7
    70f8:	0030      	movs	r0, r6
    70fa:	f7fc ffbd 	bl	4078 <__aeabi_d2iz>
    70fe:	0005      	movs	r5, r0
    7100:	f7fc ffee 	bl	40e0 <__aeabi_i2d>
    7104:	0002      	movs	r2, r0
    7106:	000b      	movs	r3, r1
    7108:	0030      	movs	r0, r6
    710a:	0039      	movs	r1, r7
    710c:	f7fc fc9e 	bl	3a4c <__aeabi_dsub>
    7110:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7112:	9008      	str	r0, [sp, #32]
    7114:	9109      	str	r1, [sp, #36]	; 0x24
    7116:	990a      	ldr	r1, [sp, #40]	; 0x28
    7118:	001a      	movs	r2, r3
    711a:	468c      	mov	ip, r1
    711c:	3530      	adds	r5, #48	; 0x30
    711e:	4462      	add	r2, ip
    7120:	1c4c      	adds	r4, r1, #1
    7122:	700d      	strb	r5, [r1, #0]
    7124:	4690      	mov	r8, r2
    7126:	2b01      	cmp	r3, #1
    7128:	d01b      	beq.n	7162 <_dtoa_r+0xdba>
    712a:	9808      	ldr	r0, [sp, #32]
    712c:	9909      	ldr	r1, [sp, #36]	; 0x24
    712e:	0025      	movs	r5, r4
    7130:	2200      	movs	r2, #0
    7132:	4b7b      	ldr	r3, [pc, #492]	; (7320 <_dtoa_r+0xf78>)
    7134:	f7fc fa0a 	bl	354c <__aeabi_dmul>
    7138:	000f      	movs	r7, r1
    713a:	0006      	movs	r6, r0
    713c:	f7fc ff9c 	bl	4078 <__aeabi_d2iz>
    7140:	0004      	movs	r4, r0
    7142:	f7fc ffcd 	bl	40e0 <__aeabi_i2d>
    7146:	3430      	adds	r4, #48	; 0x30
    7148:	0002      	movs	r2, r0
    714a:	000b      	movs	r3, r1
    714c:	0030      	movs	r0, r6
    714e:	0039      	movs	r1, r7
    7150:	f7fc fc7c 	bl	3a4c <__aeabi_dsub>
    7154:	702c      	strb	r4, [r5, #0]
    7156:	3501      	adds	r5, #1
    7158:	45a8      	cmp	r8, r5
    715a:	d1e9      	bne.n	7130 <_dtoa_r+0xd88>
    715c:	4644      	mov	r4, r8
    715e:	9008      	str	r0, [sp, #32]
    7160:	9109      	str	r1, [sp, #36]	; 0x24
    7162:	9814      	ldr	r0, [sp, #80]	; 0x50
    7164:	9915      	ldr	r1, [sp, #84]	; 0x54
    7166:	2200      	movs	r2, #0
    7168:	4b6e      	ldr	r3, [pc, #440]	; (7324 <_dtoa_r+0xf7c>)
    716a:	f002 fa51 	bl	9610 <__aeabi_dadd>
    716e:	9a08      	ldr	r2, [sp, #32]
    7170:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7172:	f7fd f921 	bl	43b8 <__aeabi_dcmplt>
    7176:	2800      	cmp	r0, #0
    7178:	d067      	beq.n	724a <_dtoa_r+0xea2>
    717a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    717c:	1e65      	subs	r5, r4, #1
    717e:	9303      	str	r3, [sp, #12]
    7180:	782f      	ldrb	r7, [r5, #0]
    7182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7184:	e42e      	b.n	69e4 <_dtoa_r+0x63c>
    7186:	4643      	mov	r3, r8
    7188:	46b3      	mov	fp, r6
    718a:	930c      	str	r3, [sp, #48]	; 0x30
    718c:	9e04      	ldr	r6, [sp, #16]
    718e:	9b06      	ldr	r3, [sp, #24]
    7190:	46a8      	mov	r8, r5
    7192:	4699      	mov	r9, r3
    7194:	4655      	mov	r5, sl
    7196:	46ba      	mov	sl, r7
    7198:	2e39      	cmp	r6, #57	; 0x39
    719a:	d04d      	beq.n	7238 <_dtoa_r+0xe90>
    719c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    719e:	3601      	adds	r6, #1
    71a0:	4647      	mov	r7, r8
    71a2:	1c6c      	adds	r4, r5, #1
    71a4:	702e      	strb	r6, [r5, #0]
    71a6:	4698      	mov	r8, r3
    71a8:	e5f5      	b.n	6d96 <_dtoa_r+0x9ee>
    71aa:	4642      	mov	r2, r8
    71ac:	9b06      	ldr	r3, [sp, #24]
    71ae:	46b3      	mov	fp, r6
    71b0:	46ba      	mov	sl, r7
    71b2:	9e04      	ldr	r6, [sp, #16]
    71b4:	4699      	mov	r9, r3
    71b6:	002f      	movs	r7, r5
    71b8:	4690      	mov	r8, r2
    71ba:	e5d1      	b.n	6d60 <_dtoa_r+0x9b8>
    71bc:	9b06      	ldr	r3, [sp, #24]
    71be:	9a07      	ldr	r2, [sp, #28]
    71c0:	1a9b      	subs	r3, r3, r2
    71c2:	9308      	str	r3, [sp, #32]
    71c4:	2300      	movs	r3, #0
    71c6:	e427      	b.n	6a18 <_dtoa_r+0x670>
    71c8:	2401      	movs	r4, #1
    71ca:	e5c5      	b.n	6d58 <_dtoa_r+0x9b0>
    71cc:	2336      	movs	r3, #54	; 0x36
    71ce:	9a16      	ldr	r2, [sp, #88]	; 0x58
    71d0:	464c      	mov	r4, r9
    71d2:	1a9b      	subs	r3, r3, r2
    71d4:	9a06      	ldr	r2, [sp, #24]
    71d6:	9208      	str	r2, [sp, #32]
    71d8:	e41e      	b.n	6a18 <_dtoa_r+0x670>
    71da:	2302      	movs	r3, #2
    71dc:	9e10      	ldr	r6, [sp, #64]	; 0x40
    71de:	9f11      	ldr	r7, [sp, #68]	; 0x44
    71e0:	4698      	mov	r8, r3
    71e2:	f7ff fa31 	bl	6648 <_dtoa_r+0x2a0>
    71e6:	9b07      	ldr	r3, [sp, #28]
    71e8:	2b00      	cmp	r3, #0
    71ea:	d100      	bne.n	71ee <_dtoa_r+0xe46>
    71ec:	e68e      	b.n	6f0c <_dtoa_r+0xb64>
    71ee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    71f0:	2c00      	cmp	r4, #0
    71f2:	dc00      	bgt.n	71f6 <_dtoa_r+0xe4e>
    71f4:	e712      	b.n	701c <_dtoa_r+0xc74>
    71f6:	9b03      	ldr	r3, [sp, #12]
    71f8:	2200      	movs	r2, #0
    71fa:	3b01      	subs	r3, #1
    71fc:	9313      	str	r3, [sp, #76]	; 0x4c
    71fe:	0030      	movs	r0, r6
    7200:	4b47      	ldr	r3, [pc, #284]	; (7320 <_dtoa_r+0xf78>)
    7202:	0039      	movs	r1, r7
    7204:	f7fc f9a2 	bl	354c <__aeabi_dmul>
    7208:	0006      	movs	r6, r0
    720a:	4640      	mov	r0, r8
    720c:	000f      	movs	r7, r1
    720e:	3001      	adds	r0, #1
    7210:	f7fc ff66 	bl	40e0 <__aeabi_i2d>
    7214:	0032      	movs	r2, r6
    7216:	003b      	movs	r3, r7
    7218:	f7fc f998 	bl	354c <__aeabi_dmul>
    721c:	2200      	movs	r2, #0
    721e:	4b42      	ldr	r3, [pc, #264]	; (7328 <_dtoa_r+0xf80>)
    7220:	f002 f9f6 	bl	9610 <__aeabi_dadd>
    7224:	4a41      	ldr	r2, [pc, #260]	; (732c <_dtoa_r+0xf84>)
    7226:	000b      	movs	r3, r1
    7228:	4694      	mov	ip, r2
    722a:	4463      	add	r3, ip
    722c:	9008      	str	r0, [sp, #32]
    722e:	9109      	str	r1, [sp, #36]	; 0x24
    7230:	9412      	str	r4, [sp, #72]	; 0x48
    7232:	9309      	str	r3, [sp, #36]	; 0x24
    7234:	f7ff fa30 	bl	6698 <_dtoa_r+0x2f0>
    7238:	2339      	movs	r3, #57	; 0x39
    723a:	702b      	strb	r3, [r5, #0]
    723c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    723e:	4647      	mov	r7, r8
    7240:	1c6c      	adds	r4, r5, #1
    7242:	4698      	mov	r8, r3
    7244:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    7246:	2339      	movs	r3, #57	; 0x39
    7248:	e5a1      	b.n	6d8e <_dtoa_r+0x9e6>
    724a:	9a14      	ldr	r2, [sp, #80]	; 0x50
    724c:	9b15      	ldr	r3, [sp, #84]	; 0x54
    724e:	2000      	movs	r0, #0
    7250:	4934      	ldr	r1, [pc, #208]	; (7324 <_dtoa_r+0xf7c>)
    7252:	f7fc fbfb 	bl	3a4c <__aeabi_dsub>
    7256:	9a08      	ldr	r2, [sp, #32]
    7258:	9b09      	ldr	r3, [sp, #36]	; 0x24
    725a:	f7fd f8c1 	bl	43e0 <__aeabi_dcmpgt>
    725e:	2800      	cmp	r0, #0
    7260:	d101      	bne.n	7266 <_dtoa_r+0xebe>
    7262:	e6db      	b.n	701c <_dtoa_r+0xc74>
    7264:	001c      	movs	r4, r3
    7266:	1e63      	subs	r3, r4, #1
    7268:	781a      	ldrb	r2, [r3, #0]
    726a:	2a30      	cmp	r2, #48	; 0x30
    726c:	d0fa      	beq.n	7264 <_dtoa_r+0xebc>
    726e:	f7ff fac8 	bl	6802 <_dtoa_r+0x45a>
    7272:	4643      	mov	r3, r8
    7274:	46b3      	mov	fp, r6
    7276:	930c      	str	r3, [sp, #48]	; 0x30
    7278:	9e04      	ldr	r6, [sp, #16]
    727a:	9b06      	ldr	r3, [sp, #24]
    727c:	46a8      	mov	r8, r5
    727e:	4699      	mov	r9, r3
    7280:	4655      	mov	r5, sl
    7282:	46ba      	mov	sl, r7
    7284:	2e39      	cmp	r6, #57	; 0x39
    7286:	d0d7      	beq.n	7238 <_dtoa_r+0xe90>
    7288:	2c00      	cmp	r4, #0
    728a:	dd00      	ble.n	728e <_dtoa_r+0xee6>
    728c:	e6b1      	b.n	6ff2 <_dtoa_r+0xc4a>
    728e:	e6b2      	b.n	6ff6 <_dtoa_r+0xc4e>
    7290:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    7292:	464d      	mov	r5, r9
    7294:	9203      	str	r2, [sp, #12]
    7296:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7298:	f7ff fba4 	bl	69e4 <_dtoa_r+0x63c>
    729c:	2800      	cmp	r0, #0
    729e:	d000      	beq.n	72a2 <_dtoa_r+0xefa>
    72a0:	e6a9      	b.n	6ff6 <_dtoa_r+0xc4e>
    72a2:	07f3      	lsls	r3, r6, #31
    72a4:	d400      	bmi.n	72a8 <_dtoa_r+0xf00>
    72a6:	e6a6      	b.n	6ff6 <_dtoa_r+0xc4e>
    72a8:	e6a0      	b.n	6fec <_dtoa_r+0xc44>
    72aa:	2300      	movs	r3, #0
    72ac:	4641      	mov	r1, r8
    72ae:	220a      	movs	r2, #10
    72b0:	4650      	mov	r0, sl
    72b2:	f001 f88d 	bl	83d0 <__multadd>
    72b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    72b8:	4680      	mov	r8, r0
    72ba:	2b00      	cmp	r3, #0
    72bc:	dd01      	ble.n	72c2 <_dtoa_r+0xf1a>
    72be:	9307      	str	r3, [sp, #28]
    72c0:	e486      	b.n	6bd0 <_dtoa_r+0x828>
    72c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    72c4:	2b02      	cmp	r3, #2
    72c6:	dc1f      	bgt.n	7308 <_dtoa_r+0xf60>
    72c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    72ca:	9307      	str	r3, [sp, #28]
    72cc:	e480      	b.n	6bd0 <_dtoa_r+0x828>
    72ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
    72d0:	2b02      	cmp	r3, #2
    72d2:	dc19      	bgt.n	7308 <_dtoa_r+0xf60>
    72d4:	4649      	mov	r1, r9
    72d6:	f7fe ffbd 	bl	6254 <quorem>
    72da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    72dc:	3030      	adds	r0, #48	; 0x30
    72de:	7018      	strb	r0, [r3, #0]
    72e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    72e2:	0006      	movs	r6, r0
    72e4:	9307      	str	r3, [sp, #28]
    72e6:	e533      	b.n	6d50 <_dtoa_r+0x9a8>
    72e8:	2302      	movs	r3, #2
    72ea:	4698      	mov	r8, r3
    72ec:	f7ff f9ac 	bl	6648 <_dtoa_r+0x2a0>
    72f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    72f2:	9c14      	ldr	r4, [sp, #80]	; 0x50
    72f4:	9303      	str	r3, [sp, #12]
    72f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    72f8:	001d      	movs	r5, r3
    72fa:	f7ff fb73 	bl	69e4 <_dtoa_r+0x63c>
    72fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    7300:	9c14      	ldr	r4, [sp, #80]	; 0x50
    7302:	9303      	str	r3, [sp, #12]
    7304:	f7ff fa7f 	bl	6806 <_dtoa_r+0x45e>
    7308:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    730a:	9307      	str	r3, [sp, #28]
    730c:	e5d6      	b.n	6ebc <_dtoa_r+0xb14>
    730e:	2b04      	cmp	r3, #4
    7310:	d100      	bne.n	7314 <_dtoa_r+0xf6c>
    7312:	e43f      	b.n	6b94 <_dtoa_r+0x7ec>
    7314:	233c      	movs	r3, #60	; 0x3c
    7316:	1a18      	subs	r0, r3, r0
    7318:	e4d7      	b.n	6cca <_dtoa_r+0x922>
    731a:	46c0      	nop			; (mov r8, r8)
    731c:	0000a2b8 	.word	0x0000a2b8
    7320:	40240000 	.word	0x40240000
    7324:	3fe00000 	.word	0x3fe00000
    7328:	401c0000 	.word	0x401c0000
    732c:	fcc00000 	.word	0xfcc00000

00007330 <__sflush_r>:
    7330:	b5f0      	push	{r4, r5, r6, r7, lr}
    7332:	46c6      	mov	lr, r8
    7334:	b500      	push	{lr}
    7336:	230c      	movs	r3, #12
    7338:	5eca      	ldrsh	r2, [r1, r3]
    733a:	4680      	mov	r8, r0
    733c:	b293      	uxth	r3, r2
    733e:	000c      	movs	r4, r1
    7340:	0719      	lsls	r1, r3, #28
    7342:	d440      	bmi.n	73c6 <__sflush_r+0x96>
    7344:	2380      	movs	r3, #128	; 0x80
    7346:	011b      	lsls	r3, r3, #4
    7348:	4313      	orrs	r3, r2
    734a:	6862      	ldr	r2, [r4, #4]
    734c:	81a3      	strh	r3, [r4, #12]
    734e:	2a00      	cmp	r2, #0
    7350:	dc00      	bgt.n	7354 <__sflush_r+0x24>
    7352:	e070      	b.n	7436 <__sflush_r+0x106>
    7354:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    7356:	2e00      	cmp	r6, #0
    7358:	d031      	beq.n	73be <__sflush_r+0x8e>
    735a:	4642      	mov	r2, r8
    735c:	4641      	mov	r1, r8
    735e:	6815      	ldr	r5, [r2, #0]
    7360:	2200      	movs	r2, #0
    7362:	b29b      	uxth	r3, r3
    7364:	600a      	str	r2, [r1, #0]
    7366:	04da      	lsls	r2, r3, #19
    7368:	d400      	bmi.n	736c <__sflush_r+0x3c>
    736a:	e069      	b.n	7440 <__sflush_r+0x110>
    736c:	6d22      	ldr	r2, [r4, #80]	; 0x50
    736e:	075b      	lsls	r3, r3, #29
    7370:	d506      	bpl.n	7380 <__sflush_r+0x50>
    7372:	6863      	ldr	r3, [r4, #4]
    7374:	1ad2      	subs	r2, r2, r3
    7376:	6b23      	ldr	r3, [r4, #48]	; 0x30
    7378:	2b00      	cmp	r3, #0
    737a:	d001      	beq.n	7380 <__sflush_r+0x50>
    737c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    737e:	1ad2      	subs	r2, r2, r3
    7380:	2300      	movs	r3, #0
    7382:	69e1      	ldr	r1, [r4, #28]
    7384:	4640      	mov	r0, r8
    7386:	47b0      	blx	r6
    7388:	1c43      	adds	r3, r0, #1
    738a:	d03d      	beq.n	7408 <__sflush_r+0xd8>
    738c:	89a3      	ldrh	r3, [r4, #12]
    738e:	4a3a      	ldr	r2, [pc, #232]	; (7478 <__sflush_r+0x148>)
    7390:	4013      	ands	r3, r2
    7392:	2200      	movs	r2, #0
    7394:	6062      	str	r2, [r4, #4]
    7396:	6922      	ldr	r2, [r4, #16]
    7398:	b21b      	sxth	r3, r3
    739a:	81a3      	strh	r3, [r4, #12]
    739c:	6022      	str	r2, [r4, #0]
    739e:	04db      	lsls	r3, r3, #19
    73a0:	d447      	bmi.n	7432 <__sflush_r+0x102>
    73a2:	4643      	mov	r3, r8
    73a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
    73a6:	601d      	str	r5, [r3, #0]
    73a8:	2900      	cmp	r1, #0
    73aa:	d008      	beq.n	73be <__sflush_r+0x8e>
    73ac:	0023      	movs	r3, r4
    73ae:	3340      	adds	r3, #64	; 0x40
    73b0:	4299      	cmp	r1, r3
    73b2:	d002      	beq.n	73ba <__sflush_r+0x8a>
    73b4:	4640      	mov	r0, r8
    73b6:	f000 f967 	bl	7688 <_free_r>
    73ba:	2300      	movs	r3, #0
    73bc:	6323      	str	r3, [r4, #48]	; 0x30
    73be:	2000      	movs	r0, #0
    73c0:	bc04      	pop	{r2}
    73c2:	4690      	mov	r8, r2
    73c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    73c6:	6926      	ldr	r6, [r4, #16]
    73c8:	2e00      	cmp	r6, #0
    73ca:	d0f8      	beq.n	73be <__sflush_r+0x8e>
    73cc:	6822      	ldr	r2, [r4, #0]
    73ce:	6026      	str	r6, [r4, #0]
    73d0:	1b95      	subs	r5, r2, r6
    73d2:	2200      	movs	r2, #0
    73d4:	079b      	lsls	r3, r3, #30
    73d6:	d100      	bne.n	73da <__sflush_r+0xaa>
    73d8:	6962      	ldr	r2, [r4, #20]
    73da:	60a2      	str	r2, [r4, #8]
    73dc:	2d00      	cmp	r5, #0
    73de:	dc04      	bgt.n	73ea <__sflush_r+0xba>
    73e0:	e7ed      	b.n	73be <__sflush_r+0x8e>
    73e2:	1836      	adds	r6, r6, r0
    73e4:	1a2d      	subs	r5, r5, r0
    73e6:	2d00      	cmp	r5, #0
    73e8:	dde9      	ble.n	73be <__sflush_r+0x8e>
    73ea:	002b      	movs	r3, r5
    73ec:	0032      	movs	r2, r6
    73ee:	69e1      	ldr	r1, [r4, #28]
    73f0:	4640      	mov	r0, r8
    73f2:	6a67      	ldr	r7, [r4, #36]	; 0x24
    73f4:	47b8      	blx	r7
    73f6:	2800      	cmp	r0, #0
    73f8:	dcf3      	bgt.n	73e2 <__sflush_r+0xb2>
    73fa:	2240      	movs	r2, #64	; 0x40
    73fc:	2001      	movs	r0, #1
    73fe:	89a3      	ldrh	r3, [r4, #12]
    7400:	4240      	negs	r0, r0
    7402:	4313      	orrs	r3, r2
    7404:	81a3      	strh	r3, [r4, #12]
    7406:	e7db      	b.n	73c0 <__sflush_r+0x90>
    7408:	4643      	mov	r3, r8
    740a:	6819      	ldr	r1, [r3, #0]
    740c:	291d      	cmp	r1, #29
    740e:	d8f4      	bhi.n	73fa <__sflush_r+0xca>
    7410:	4b1a      	ldr	r3, [pc, #104]	; (747c <__sflush_r+0x14c>)
    7412:	2201      	movs	r2, #1
    7414:	40cb      	lsrs	r3, r1
    7416:	439a      	bics	r2, r3
    7418:	d1ef      	bne.n	73fa <__sflush_r+0xca>
    741a:	89a3      	ldrh	r3, [r4, #12]
    741c:	4e16      	ldr	r6, [pc, #88]	; (7478 <__sflush_r+0x148>)
    741e:	6062      	str	r2, [r4, #4]
    7420:	4033      	ands	r3, r6
    7422:	6922      	ldr	r2, [r4, #16]
    7424:	b21b      	sxth	r3, r3
    7426:	81a3      	strh	r3, [r4, #12]
    7428:	6022      	str	r2, [r4, #0]
    742a:	04db      	lsls	r3, r3, #19
    742c:	d5b9      	bpl.n	73a2 <__sflush_r+0x72>
    742e:	2900      	cmp	r1, #0
    7430:	d1b7      	bne.n	73a2 <__sflush_r+0x72>
    7432:	6520      	str	r0, [r4, #80]	; 0x50
    7434:	e7b5      	b.n	73a2 <__sflush_r+0x72>
    7436:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    7438:	2a00      	cmp	r2, #0
    743a:	dd00      	ble.n	743e <__sflush_r+0x10e>
    743c:	e78a      	b.n	7354 <__sflush_r+0x24>
    743e:	e7be      	b.n	73be <__sflush_r+0x8e>
    7440:	2200      	movs	r2, #0
    7442:	2301      	movs	r3, #1
    7444:	69e1      	ldr	r1, [r4, #28]
    7446:	4640      	mov	r0, r8
    7448:	47b0      	blx	r6
    744a:	0002      	movs	r2, r0
    744c:	1c43      	adds	r3, r0, #1
    744e:	d002      	beq.n	7456 <__sflush_r+0x126>
    7450:	89a3      	ldrh	r3, [r4, #12]
    7452:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    7454:	e78b      	b.n	736e <__sflush_r+0x3e>
    7456:	4643      	mov	r3, r8
    7458:	681b      	ldr	r3, [r3, #0]
    745a:	2b00      	cmp	r3, #0
    745c:	d0f8      	beq.n	7450 <__sflush_r+0x120>
    745e:	2b1d      	cmp	r3, #29
    7460:	d001      	beq.n	7466 <__sflush_r+0x136>
    7462:	2b16      	cmp	r3, #22
    7464:	d103      	bne.n	746e <__sflush_r+0x13e>
    7466:	4643      	mov	r3, r8
    7468:	2000      	movs	r0, #0
    746a:	601d      	str	r5, [r3, #0]
    746c:	e7a8      	b.n	73c0 <__sflush_r+0x90>
    746e:	2140      	movs	r1, #64	; 0x40
    7470:	89a3      	ldrh	r3, [r4, #12]
    7472:	430b      	orrs	r3, r1
    7474:	81a3      	strh	r3, [r4, #12]
    7476:	e7a3      	b.n	73c0 <__sflush_r+0x90>
    7478:	fffff7ff 	.word	0xfffff7ff
    747c:	20400001 	.word	0x20400001

00007480 <_fflush_r>:
    7480:	b570      	push	{r4, r5, r6, lr}
    7482:	0005      	movs	r5, r0
    7484:	000c      	movs	r4, r1
    7486:	2800      	cmp	r0, #0
    7488:	d002      	beq.n	7490 <_fflush_r+0x10>
    748a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    748c:	2b00      	cmp	r3, #0
    748e:	d016      	beq.n	74be <_fflush_r+0x3e>
    7490:	220c      	movs	r2, #12
    7492:	5ea3      	ldrsh	r3, [r4, r2]
    7494:	2600      	movs	r6, #0
    7496:	2b00      	cmp	r3, #0
    7498:	d00f      	beq.n	74ba <_fflush_r+0x3a>
    749a:	6e62      	ldr	r2, [r4, #100]	; 0x64
    749c:	07d2      	lsls	r2, r2, #31
    749e:	d401      	bmi.n	74a4 <_fflush_r+0x24>
    74a0:	059b      	lsls	r3, r3, #22
    74a2:	d513      	bpl.n	74cc <_fflush_r+0x4c>
    74a4:	0021      	movs	r1, r4
    74a6:	0028      	movs	r0, r5
    74a8:	f7ff ff42 	bl	7330 <__sflush_r>
    74ac:	6e63      	ldr	r3, [r4, #100]	; 0x64
    74ae:	0006      	movs	r6, r0
    74b0:	07db      	lsls	r3, r3, #31
    74b2:	d402      	bmi.n	74ba <_fflush_r+0x3a>
    74b4:	89a3      	ldrh	r3, [r4, #12]
    74b6:	059b      	lsls	r3, r3, #22
    74b8:	d504      	bpl.n	74c4 <_fflush_r+0x44>
    74ba:	0030      	movs	r0, r6
    74bc:	bd70      	pop	{r4, r5, r6, pc}
    74be:	f000 f839 	bl	7534 <__sinit>
    74c2:	e7e5      	b.n	7490 <_fflush_r+0x10>
    74c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    74c6:	f000 fb79 	bl	7bbc <__retarget_lock_release_recursive>
    74ca:	e7f6      	b.n	74ba <_fflush_r+0x3a>
    74cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    74ce:	f000 fb73 	bl	7bb8 <__retarget_lock_acquire_recursive>
    74d2:	e7e7      	b.n	74a4 <_fflush_r+0x24>

000074d4 <_cleanup_r>:
    74d4:	b510      	push	{r4, lr}
    74d6:	4902      	ldr	r1, [pc, #8]	; (74e0 <_cleanup_r+0xc>)
    74d8:	f000 fb36 	bl	7b48 <_fwalk_reent>
    74dc:	bd10      	pop	{r4, pc}
    74de:	46c0      	nop			; (mov r8, r8)
    74e0:	00009069 	.word	0x00009069

000074e4 <std.isra.0>:
    74e4:	2300      	movs	r3, #0
    74e6:	b510      	push	{r4, lr}
    74e8:	0004      	movs	r4, r0
    74ea:	6003      	str	r3, [r0, #0]
    74ec:	6043      	str	r3, [r0, #4]
    74ee:	6083      	str	r3, [r0, #8]
    74f0:	8181      	strh	r1, [r0, #12]
    74f2:	6643      	str	r3, [r0, #100]	; 0x64
    74f4:	81c2      	strh	r2, [r0, #14]
    74f6:	6103      	str	r3, [r0, #16]
    74f8:	6143      	str	r3, [r0, #20]
    74fa:	6183      	str	r3, [r0, #24]
    74fc:	2208      	movs	r2, #8
    74fe:	2100      	movs	r1, #0
    7500:	305c      	adds	r0, #92	; 0x5c
    7502:	f7fd f911 	bl	4728 <memset>
    7506:	0020      	movs	r0, r4
    7508:	4b06      	ldr	r3, [pc, #24]	; (7524 <std.isra.0+0x40>)
    750a:	61e4      	str	r4, [r4, #28]
    750c:	6223      	str	r3, [r4, #32]
    750e:	4b06      	ldr	r3, [pc, #24]	; (7528 <std.isra.0+0x44>)
    7510:	3058      	adds	r0, #88	; 0x58
    7512:	6263      	str	r3, [r4, #36]	; 0x24
    7514:	4b05      	ldr	r3, [pc, #20]	; (752c <std.isra.0+0x48>)
    7516:	62a3      	str	r3, [r4, #40]	; 0x28
    7518:	4b05      	ldr	r3, [pc, #20]	; (7530 <std.isra.0+0x4c>)
    751a:	62e3      	str	r3, [r4, #44]	; 0x2c
    751c:	f000 fb48 	bl	7bb0 <__retarget_lock_init_recursive>
    7520:	bd10      	pop	{r4, pc}
    7522:	46c0      	nop			; (mov r8, r8)
    7524:	00008d9d 	.word	0x00008d9d
    7528:	00008dc5 	.word	0x00008dc5
    752c:	00008e01 	.word	0x00008e01
    7530:	00008e2d 	.word	0x00008e2d

00007534 <__sinit>:
    7534:	b570      	push	{r4, r5, r6, lr}
    7536:	0004      	movs	r4, r0
    7538:	4d14      	ldr	r5, [pc, #80]	; (758c <__sinit+0x58>)
    753a:	0028      	movs	r0, r5
    753c:	f000 fb3c 	bl	7bb8 <__retarget_lock_acquire_recursive>
    7540:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    7542:	2b00      	cmp	r3, #0
    7544:	d11d      	bne.n	7582 <__sinit+0x4e>
    7546:	4a12      	ldr	r2, [pc, #72]	; (7590 <__sinit+0x5c>)
    7548:	2104      	movs	r1, #4
    754a:	63e2      	str	r2, [r4, #60]	; 0x3c
    754c:	22b8      	movs	r2, #184	; 0xb8
    754e:	0092      	lsls	r2, r2, #2
    7550:	50a3      	str	r3, [r4, r2]
    7552:	23b9      	movs	r3, #185	; 0xb9
    7554:	2203      	movs	r2, #3
    7556:	009b      	lsls	r3, r3, #2
    7558:	50e2      	str	r2, [r4, r3]
    755a:	3308      	adds	r3, #8
    755c:	18e2      	adds	r2, r4, r3
    755e:	3b04      	subs	r3, #4
    7560:	50e2      	str	r2, [r4, r3]
    7562:	6860      	ldr	r0, [r4, #4]
    7564:	2200      	movs	r2, #0
    7566:	f7ff ffbd 	bl	74e4 <std.isra.0>
    756a:	2201      	movs	r2, #1
    756c:	2109      	movs	r1, #9
    756e:	68a0      	ldr	r0, [r4, #8]
    7570:	f7ff ffb8 	bl	74e4 <std.isra.0>
    7574:	2202      	movs	r2, #2
    7576:	2112      	movs	r1, #18
    7578:	68e0      	ldr	r0, [r4, #12]
    757a:	f7ff ffb3 	bl	74e4 <std.isra.0>
    757e:	2301      	movs	r3, #1
    7580:	63a3      	str	r3, [r4, #56]	; 0x38
    7582:	0028      	movs	r0, r5
    7584:	f000 fb1a 	bl	7bbc <__retarget_lock_release_recursive>
    7588:	bd70      	pop	{r4, r5, r6, pc}
    758a:	46c0      	nop			; (mov r8, r8)
    758c:	20000b98 	.word	0x20000b98
    7590:	000074d5 	.word	0x000074d5

00007594 <__sfp_lock_acquire>:
    7594:	b510      	push	{r4, lr}
    7596:	4802      	ldr	r0, [pc, #8]	; (75a0 <__sfp_lock_acquire+0xc>)
    7598:	f000 fb0e 	bl	7bb8 <__retarget_lock_acquire_recursive>
    759c:	bd10      	pop	{r4, pc}
    759e:	46c0      	nop			; (mov r8, r8)
    75a0:	20000bac 	.word	0x20000bac

000075a4 <__sfp_lock_release>:
    75a4:	b510      	push	{r4, lr}
    75a6:	4802      	ldr	r0, [pc, #8]	; (75b0 <__sfp_lock_release+0xc>)
    75a8:	f000 fb08 	bl	7bbc <__retarget_lock_release_recursive>
    75ac:	bd10      	pop	{r4, pc}
    75ae:	46c0      	nop			; (mov r8, r8)
    75b0:	20000bac 	.word	0x20000bac

000075b4 <__libc_fini_array>:
    75b4:	b570      	push	{r4, r5, r6, lr}
    75b6:	4b09      	ldr	r3, [pc, #36]	; (75dc <__libc_fini_array+0x28>)
    75b8:	4c09      	ldr	r4, [pc, #36]	; (75e0 <__libc_fini_array+0x2c>)
    75ba:	1ae4      	subs	r4, r4, r3
    75bc:	10a4      	asrs	r4, r4, #2
    75be:	d009      	beq.n	75d4 <__libc_fini_array+0x20>
    75c0:	4a08      	ldr	r2, [pc, #32]	; (75e4 <__libc_fini_array+0x30>)
    75c2:	18a5      	adds	r5, r4, r2
    75c4:	00ad      	lsls	r5, r5, #2
    75c6:	18ed      	adds	r5, r5, r3
    75c8:	682b      	ldr	r3, [r5, #0]
    75ca:	3c01      	subs	r4, #1
    75cc:	4798      	blx	r3
    75ce:	3d04      	subs	r5, #4
    75d0:	2c00      	cmp	r4, #0
    75d2:	d1f9      	bne.n	75c8 <__libc_fini_array+0x14>
    75d4:	f002 ff6e 	bl	a4b4 <_fini>
    75d8:	bd70      	pop	{r4, r5, r6, pc}
    75da:	46c0      	nop			; (mov r8, r8)
    75dc:	0000a4c0 	.word	0x0000a4c0
    75e0:	0000a4c4 	.word	0x0000a4c4
    75e4:	3fffffff 	.word	0x3fffffff

000075e8 <_malloc_trim_r>:
    75e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    75ea:	000c      	movs	r4, r1
    75ec:	0006      	movs	r6, r0
    75ee:	f000 fead 	bl	834c <__malloc_lock>
    75f2:	4f20      	ldr	r7, [pc, #128]	; (7674 <_malloc_trim_r+0x8c>)
    75f4:	68bb      	ldr	r3, [r7, #8]
    75f6:	685d      	ldr	r5, [r3, #4]
    75f8:	2303      	movs	r3, #3
    75fa:	439d      	bics	r5, r3
    75fc:	4b1e      	ldr	r3, [pc, #120]	; (7678 <_malloc_trim_r+0x90>)
    75fe:	1b2c      	subs	r4, r5, r4
    7600:	469c      	mov	ip, r3
    7602:	4464      	add	r4, ip
    7604:	0b24      	lsrs	r4, r4, #12
    7606:	4b1d      	ldr	r3, [pc, #116]	; (767c <_malloc_trim_r+0x94>)
    7608:	3c01      	subs	r4, #1
    760a:	0324      	lsls	r4, r4, #12
    760c:	429c      	cmp	r4, r3
    760e:	dd07      	ble.n	7620 <_malloc_trim_r+0x38>
    7610:	2100      	movs	r1, #0
    7612:	0030      	movs	r0, r6
    7614:	f001 fbb0 	bl	8d78 <_sbrk_r>
    7618:	68bb      	ldr	r3, [r7, #8]
    761a:	195b      	adds	r3, r3, r5
    761c:	4298      	cmp	r0, r3
    761e:	d004      	beq.n	762a <_malloc_trim_r+0x42>
    7620:	0030      	movs	r0, r6
    7622:	f000 fe9b 	bl	835c <__malloc_unlock>
    7626:	2000      	movs	r0, #0
    7628:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    762a:	4261      	negs	r1, r4
    762c:	0030      	movs	r0, r6
    762e:	f001 fba3 	bl	8d78 <_sbrk_r>
    7632:	1c43      	adds	r3, r0, #1
    7634:	d00d      	beq.n	7652 <_malloc_trim_r+0x6a>
    7636:	2201      	movs	r2, #1
    7638:	68bb      	ldr	r3, [r7, #8]
    763a:	1b2d      	subs	r5, r5, r4
    763c:	4315      	orrs	r5, r2
    763e:	605d      	str	r5, [r3, #4]
    7640:	4b0f      	ldr	r3, [pc, #60]	; (7680 <_malloc_trim_r+0x98>)
    7642:	0030      	movs	r0, r6
    7644:	681a      	ldr	r2, [r3, #0]
    7646:	1b14      	subs	r4, r2, r4
    7648:	601c      	str	r4, [r3, #0]
    764a:	f000 fe87 	bl	835c <__malloc_unlock>
    764e:	2001      	movs	r0, #1
    7650:	e7ea      	b.n	7628 <_malloc_trim_r+0x40>
    7652:	2100      	movs	r1, #0
    7654:	0030      	movs	r0, r6
    7656:	f001 fb8f 	bl	8d78 <_sbrk_r>
    765a:	68ba      	ldr	r2, [r7, #8]
    765c:	1a83      	subs	r3, r0, r2
    765e:	2b0f      	cmp	r3, #15
    7660:	ddde      	ble.n	7620 <_malloc_trim_r+0x38>
    7662:	4908      	ldr	r1, [pc, #32]	; (7684 <_malloc_trim_r+0x9c>)
    7664:	6809      	ldr	r1, [r1, #0]
    7666:	1a40      	subs	r0, r0, r1
    7668:	4905      	ldr	r1, [pc, #20]	; (7680 <_malloc_trim_r+0x98>)
    766a:	6008      	str	r0, [r1, #0]
    766c:	2101      	movs	r1, #1
    766e:	430b      	orrs	r3, r1
    7670:	6053      	str	r3, [r2, #4]
    7672:	e7d5      	b.n	7620 <_malloc_trim_r+0x38>
    7674:	200004ac 	.word	0x200004ac
    7678:	00000fef 	.word	0x00000fef
    767c:	00000fff 	.word	0x00000fff
    7680:	20000a90 	.word	0x20000a90
    7684:	200008b4 	.word	0x200008b4

00007688 <_free_r>:
    7688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    768a:	0004      	movs	r4, r0
    768c:	1e0d      	subs	r5, r1, #0
    768e:	d03c      	beq.n	770a <_free_r+0x82>
    7690:	f000 fe5c 	bl	834c <__malloc_lock>
    7694:	0029      	movs	r1, r5
    7696:	3908      	subs	r1, #8
    7698:	6848      	ldr	r0, [r1, #4]
    769a:	2301      	movs	r3, #1
    769c:	0005      	movs	r5, r0
    769e:	2603      	movs	r6, #3
    76a0:	439d      	bics	r5, r3
    76a2:	194a      	adds	r2, r1, r5
    76a4:	469c      	mov	ip, r3
    76a6:	4f61      	ldr	r7, [pc, #388]	; (782c <_free_r+0x1a4>)
    76a8:	6853      	ldr	r3, [r2, #4]
    76aa:	43b3      	bics	r3, r6
    76ac:	68be      	ldr	r6, [r7, #8]
    76ae:	42b2      	cmp	r2, r6
    76b0:	d056      	beq.n	7760 <_free_r+0xd8>
    76b2:	4666      	mov	r6, ip
    76b4:	6053      	str	r3, [r2, #4]
    76b6:	4206      	tst	r6, r0
    76b8:	d10a      	bne.n	76d0 <_free_r+0x48>
    76ba:	003e      	movs	r6, r7
    76bc:	6808      	ldr	r0, [r1, #0]
    76be:	3608      	adds	r6, #8
    76c0:	1a09      	subs	r1, r1, r0
    76c2:	182d      	adds	r5, r5, r0
    76c4:	6888      	ldr	r0, [r1, #8]
    76c6:	42b0      	cmp	r0, r6
    76c8:	d065      	beq.n	7796 <_free_r+0x10e>
    76ca:	68ce      	ldr	r6, [r1, #12]
    76cc:	60c6      	str	r6, [r0, #12]
    76ce:	60b0      	str	r0, [r6, #8]
    76d0:	2001      	movs	r0, #1
    76d2:	18d6      	adds	r6, r2, r3
    76d4:	6876      	ldr	r6, [r6, #4]
    76d6:	4206      	tst	r6, r0
    76d8:	d033      	beq.n	7742 <_free_r+0xba>
    76da:	4b55      	ldr	r3, [pc, #340]	; (7830 <_free_r+0x1a8>)
    76dc:	4328      	orrs	r0, r5
    76de:	6048      	str	r0, [r1, #4]
    76e0:	514d      	str	r5, [r1, r5]
    76e2:	429d      	cmp	r5, r3
    76e4:	d812      	bhi.n	770c <_free_r+0x84>
    76e6:	08ed      	lsrs	r5, r5, #3
    76e8:	3bff      	subs	r3, #255	; 0xff
    76ea:	10aa      	asrs	r2, r5, #2
    76ec:	3bff      	subs	r3, #255	; 0xff
    76ee:	4093      	lsls	r3, r2
    76f0:	687a      	ldr	r2, [r7, #4]
    76f2:	00ed      	lsls	r5, r5, #3
    76f4:	4313      	orrs	r3, r2
    76f6:	607b      	str	r3, [r7, #4]
    76f8:	19ef      	adds	r7, r5, r7
    76fa:	68bb      	ldr	r3, [r7, #8]
    76fc:	60cf      	str	r7, [r1, #12]
    76fe:	608b      	str	r3, [r1, #8]
    7700:	60b9      	str	r1, [r7, #8]
    7702:	60d9      	str	r1, [r3, #12]
    7704:	0020      	movs	r0, r4
    7706:	f000 fe29 	bl	835c <__malloc_unlock>
    770a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    770c:	0a68      	lsrs	r0, r5, #9
    770e:	2804      	cmp	r0, #4
    7710:	d850      	bhi.n	77b4 <_free_r+0x12c>
    7712:	09a8      	lsrs	r0, r5, #6
    7714:	0002      	movs	r2, r0
    7716:	3039      	adds	r0, #57	; 0x39
    7718:	3238      	adds	r2, #56	; 0x38
    771a:	00c0      	lsls	r0, r0, #3
    771c:	1838      	adds	r0, r7, r0
    771e:	3808      	subs	r0, #8
    7720:	6883      	ldr	r3, [r0, #8]
    7722:	2603      	movs	r6, #3
    7724:	4298      	cmp	r0, r3
    7726:	d04c      	beq.n	77c2 <_free_r+0x13a>
    7728:	685a      	ldr	r2, [r3, #4]
    772a:	43b2      	bics	r2, r6
    772c:	4295      	cmp	r5, r2
    772e:	d230      	bcs.n	7792 <_free_r+0x10a>
    7730:	689b      	ldr	r3, [r3, #8]
    7732:	4298      	cmp	r0, r3
    7734:	d1f8      	bne.n	7728 <_free_r+0xa0>
    7736:	68c3      	ldr	r3, [r0, #12]
    7738:	60cb      	str	r3, [r1, #12]
    773a:	6088      	str	r0, [r1, #8]
    773c:	6099      	str	r1, [r3, #8]
    773e:	60c1      	str	r1, [r0, #12]
    7740:	e7e0      	b.n	7704 <_free_r+0x7c>
    7742:	18ed      	adds	r5, r5, r3
    7744:	4e3b      	ldr	r6, [pc, #236]	; (7834 <_free_r+0x1ac>)
    7746:	6893      	ldr	r3, [r2, #8]
    7748:	42b3      	cmp	r3, r6
    774a:	d042      	beq.n	77d2 <_free_r+0x14a>
    774c:	68d2      	ldr	r2, [r2, #12]
    774e:	4328      	orrs	r0, r5
    7750:	60da      	str	r2, [r3, #12]
    7752:	6093      	str	r3, [r2, #8]
    7754:	4b36      	ldr	r3, [pc, #216]	; (7830 <_free_r+0x1a8>)
    7756:	6048      	str	r0, [r1, #4]
    7758:	514d      	str	r5, [r1, r5]
    775a:	429d      	cmp	r5, r3
    775c:	d8d6      	bhi.n	770c <_free_r+0x84>
    775e:	e7c2      	b.n	76e6 <_free_r+0x5e>
    7760:	4662      	mov	r2, ip
    7762:	18eb      	adds	r3, r5, r3
    7764:	4202      	tst	r2, r0
    7766:	d106      	bne.n	7776 <_free_r+0xee>
    7768:	680a      	ldr	r2, [r1, #0]
    776a:	1a89      	subs	r1, r1, r2
    776c:	6888      	ldr	r0, [r1, #8]
    776e:	189b      	adds	r3, r3, r2
    7770:	68ca      	ldr	r2, [r1, #12]
    7772:	60c2      	str	r2, [r0, #12]
    7774:	6090      	str	r0, [r2, #8]
    7776:	2201      	movs	r2, #1
    7778:	431a      	orrs	r2, r3
    777a:	604a      	str	r2, [r1, #4]
    777c:	4a2e      	ldr	r2, [pc, #184]	; (7838 <_free_r+0x1b0>)
    777e:	60b9      	str	r1, [r7, #8]
    7780:	6812      	ldr	r2, [r2, #0]
    7782:	4293      	cmp	r3, r2
    7784:	d3be      	bcc.n	7704 <_free_r+0x7c>
    7786:	4b2d      	ldr	r3, [pc, #180]	; (783c <_free_r+0x1b4>)
    7788:	0020      	movs	r0, r4
    778a:	6819      	ldr	r1, [r3, #0]
    778c:	f7ff ff2c 	bl	75e8 <_malloc_trim_r>
    7790:	e7b8      	b.n	7704 <_free_r+0x7c>
    7792:	0018      	movs	r0, r3
    7794:	e7cf      	b.n	7736 <_free_r+0xae>
    7796:	4666      	mov	r6, ip
    7798:	18d0      	adds	r0, r2, r3
    779a:	6840      	ldr	r0, [r0, #4]
    779c:	4230      	tst	r0, r6
    779e:	d13f      	bne.n	7820 <_free_r+0x198>
    77a0:	6890      	ldr	r0, [r2, #8]
    77a2:	195d      	adds	r5, r3, r5
    77a4:	68d3      	ldr	r3, [r2, #12]
    77a6:	60c3      	str	r3, [r0, #12]
    77a8:	6098      	str	r0, [r3, #8]
    77aa:	4663      	mov	r3, ip
    77ac:	432b      	orrs	r3, r5
    77ae:	604b      	str	r3, [r1, #4]
    77b0:	514d      	str	r5, [r1, r5]
    77b2:	e7a7      	b.n	7704 <_free_r+0x7c>
    77b4:	2814      	cmp	r0, #20
    77b6:	d814      	bhi.n	77e2 <_free_r+0x15a>
    77b8:	0002      	movs	r2, r0
    77ba:	305c      	adds	r0, #92	; 0x5c
    77bc:	325b      	adds	r2, #91	; 0x5b
    77be:	00c0      	lsls	r0, r0, #3
    77c0:	e7ac      	b.n	771c <_free_r+0x94>
    77c2:	2301      	movs	r3, #1
    77c4:	1092      	asrs	r2, r2, #2
    77c6:	4093      	lsls	r3, r2
    77c8:	687a      	ldr	r2, [r7, #4]
    77ca:	4313      	orrs	r3, r2
    77cc:	607b      	str	r3, [r7, #4]
    77ce:	0003      	movs	r3, r0
    77d0:	e7b2      	b.n	7738 <_free_r+0xb0>
    77d2:	4328      	orrs	r0, r5
    77d4:	60d9      	str	r1, [r3, #12]
    77d6:	6099      	str	r1, [r3, #8]
    77d8:	60cb      	str	r3, [r1, #12]
    77da:	608b      	str	r3, [r1, #8]
    77dc:	6048      	str	r0, [r1, #4]
    77de:	514d      	str	r5, [r1, r5]
    77e0:	e790      	b.n	7704 <_free_r+0x7c>
    77e2:	2854      	cmp	r0, #84	; 0x54
    77e4:	d805      	bhi.n	77f2 <_free_r+0x16a>
    77e6:	0b28      	lsrs	r0, r5, #12
    77e8:	0002      	movs	r2, r0
    77ea:	306f      	adds	r0, #111	; 0x6f
    77ec:	326e      	adds	r2, #110	; 0x6e
    77ee:	00c0      	lsls	r0, r0, #3
    77f0:	e794      	b.n	771c <_free_r+0x94>
    77f2:	22aa      	movs	r2, #170	; 0xaa
    77f4:	0052      	lsls	r2, r2, #1
    77f6:	4290      	cmp	r0, r2
    77f8:	d805      	bhi.n	7806 <_free_r+0x17e>
    77fa:	0be8      	lsrs	r0, r5, #15
    77fc:	0002      	movs	r2, r0
    77fe:	3078      	adds	r0, #120	; 0x78
    7800:	3277      	adds	r2, #119	; 0x77
    7802:	00c0      	lsls	r0, r0, #3
    7804:	e78a      	b.n	771c <_free_r+0x94>
    7806:	4a0e      	ldr	r2, [pc, #56]	; (7840 <_free_r+0x1b8>)
    7808:	4290      	cmp	r0, r2
    780a:	d805      	bhi.n	7818 <_free_r+0x190>
    780c:	0ca8      	lsrs	r0, r5, #18
    780e:	0002      	movs	r2, r0
    7810:	307d      	adds	r0, #125	; 0x7d
    7812:	327c      	adds	r2, #124	; 0x7c
    7814:	00c0      	lsls	r0, r0, #3
    7816:	e781      	b.n	771c <_free_r+0x94>
    7818:	20fe      	movs	r0, #254	; 0xfe
    781a:	227e      	movs	r2, #126	; 0x7e
    781c:	0080      	lsls	r0, r0, #2
    781e:	e77d      	b.n	771c <_free_r+0x94>
    7820:	4663      	mov	r3, ip
    7822:	432b      	orrs	r3, r5
    7824:	604b      	str	r3, [r1, #4]
    7826:	6015      	str	r5, [r2, #0]
    7828:	e76c      	b.n	7704 <_free_r+0x7c>
    782a:	46c0      	nop			; (mov r8, r8)
    782c:	200004ac 	.word	0x200004ac
    7830:	000001ff 	.word	0x000001ff
    7834:	200004b4 	.word	0x200004b4
    7838:	200008b8 	.word	0x200008b8
    783c:	20000ac0 	.word	0x20000ac0
    7840:	00000554 	.word	0x00000554

00007844 <__sfvwrite_r>:
    7844:	b5f0      	push	{r4, r5, r6, r7, lr}
    7846:	464e      	mov	r6, r9
    7848:	46de      	mov	lr, fp
    784a:	4657      	mov	r7, sl
    784c:	4645      	mov	r5, r8
    784e:	b5e0      	push	{r5, r6, r7, lr}
    7850:	6893      	ldr	r3, [r2, #8]
    7852:	b083      	sub	sp, #12
    7854:	9000      	str	r0, [sp, #0]
    7856:	000c      	movs	r4, r1
    7858:	0016      	movs	r6, r2
    785a:	2b00      	cmp	r3, #0
    785c:	d025      	beq.n	78aa <__sfvwrite_r+0x66>
    785e:	898b      	ldrh	r3, [r1, #12]
    7860:	071a      	lsls	r2, r3, #28
    7862:	d52a      	bpl.n	78ba <__sfvwrite_r+0x76>
    7864:	690a      	ldr	r2, [r1, #16]
    7866:	2a00      	cmp	r2, #0
    7868:	d027      	beq.n	78ba <__sfvwrite_r+0x76>
    786a:	6832      	ldr	r2, [r6, #0]
    786c:	4693      	mov	fp, r2
    786e:	079a      	lsls	r2, r3, #30
    7870:	d52f      	bpl.n	78d2 <__sfvwrite_r+0x8e>
    7872:	4bb2      	ldr	r3, [pc, #712]	; (7b3c <__sfvwrite_r+0x2f8>)
    7874:	2700      	movs	r7, #0
    7876:	2500      	movs	r5, #0
    7878:	4698      	mov	r8, r3
    787a:	46b1      	mov	r9, r6
    787c:	2d00      	cmp	r5, #0
    787e:	d100      	bne.n	7882 <__sfvwrite_r+0x3e>
    7880:	e072      	b.n	7968 <__sfvwrite_r+0x124>
    7882:	002b      	movs	r3, r5
    7884:	4545      	cmp	r5, r8
    7886:	d900      	bls.n	788a <__sfvwrite_r+0x46>
    7888:	4bac      	ldr	r3, [pc, #688]	; (7b3c <__sfvwrite_r+0x2f8>)
    788a:	003a      	movs	r2, r7
    788c:	69e1      	ldr	r1, [r4, #28]
    788e:	9800      	ldr	r0, [sp, #0]
    7890:	6a66      	ldr	r6, [r4, #36]	; 0x24
    7892:	47b0      	blx	r6
    7894:	2800      	cmp	r0, #0
    7896:	dc00      	bgt.n	789a <__sfvwrite_r+0x56>
    7898:	e073      	b.n	7982 <__sfvwrite_r+0x13e>
    789a:	464b      	mov	r3, r9
    789c:	689b      	ldr	r3, [r3, #8]
    789e:	183f      	adds	r7, r7, r0
    78a0:	1a2d      	subs	r5, r5, r0
    78a2:	1a18      	subs	r0, r3, r0
    78a4:	464b      	mov	r3, r9
    78a6:	6098      	str	r0, [r3, #8]
    78a8:	d1e8      	bne.n	787c <__sfvwrite_r+0x38>
    78aa:	2000      	movs	r0, #0
    78ac:	b003      	add	sp, #12
    78ae:	bc3c      	pop	{r2, r3, r4, r5}
    78b0:	4690      	mov	r8, r2
    78b2:	4699      	mov	r9, r3
    78b4:	46a2      	mov	sl, r4
    78b6:	46ab      	mov	fp, r5
    78b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    78ba:	0021      	movs	r1, r4
    78bc:	9800      	ldr	r0, [sp, #0]
    78be:	f7fe fc4b 	bl	6158 <__swsetup_r>
    78c2:	2800      	cmp	r0, #0
    78c4:	d000      	beq.n	78c8 <__sfvwrite_r+0x84>
    78c6:	e130      	b.n	7b2a <__sfvwrite_r+0x2e6>
    78c8:	6832      	ldr	r2, [r6, #0]
    78ca:	89a3      	ldrh	r3, [r4, #12]
    78cc:	4693      	mov	fp, r2
    78ce:	079a      	lsls	r2, r3, #30
    78d0:	d4cf      	bmi.n	7872 <__sfvwrite_r+0x2e>
    78d2:	07da      	lsls	r2, r3, #31
    78d4:	d55d      	bpl.n	7992 <__sfvwrite_r+0x14e>
    78d6:	2300      	movs	r3, #0
    78d8:	2000      	movs	r0, #0
    78da:	469a      	mov	sl, r3
    78dc:	2700      	movs	r7, #0
    78de:	001d      	movs	r5, r3
    78e0:	46b1      	mov	r9, r6
    78e2:	e029      	b.n	7938 <__sfvwrite_r+0xf4>
    78e4:	2800      	cmp	r0, #0
    78e6:	d033      	beq.n	7950 <__sfvwrite_r+0x10c>
    78e8:	46a8      	mov	r8, r5
    78ea:	42bd      	cmp	r5, r7
    78ec:	d900      	bls.n	78f0 <__sfvwrite_r+0xac>
    78ee:	46b8      	mov	r8, r7
    78f0:	6820      	ldr	r0, [r4, #0]
    78f2:	6922      	ldr	r2, [r4, #16]
    78f4:	4646      	mov	r6, r8
    78f6:	6963      	ldr	r3, [r4, #20]
    78f8:	4290      	cmp	r0, r2
    78fa:	d907      	bls.n	790c <__sfvwrite_r+0xc8>
    78fc:	68a2      	ldr	r2, [r4, #8]
    78fe:	4694      	mov	ip, r2
    7900:	449c      	add	ip, r3
    7902:	4662      	mov	r2, ip
    7904:	9201      	str	r2, [sp, #4]
    7906:	45e0      	cmp	r8, ip
    7908:	dd00      	ble.n	790c <__sfvwrite_r+0xc8>
    790a:	e0e9      	b.n	7ae0 <__sfvwrite_r+0x29c>
    790c:	4598      	cmp	r8, r3
    790e:	da00      	bge.n	7912 <__sfvwrite_r+0xce>
    7910:	e08f      	b.n	7a32 <__sfvwrite_r+0x1ee>
    7912:	6a66      	ldr	r6, [r4, #36]	; 0x24
    7914:	4652      	mov	r2, sl
    7916:	69e1      	ldr	r1, [r4, #28]
    7918:	9800      	ldr	r0, [sp, #0]
    791a:	47b0      	blx	r6
    791c:	1e06      	subs	r6, r0, #0
    791e:	dd30      	ble.n	7982 <__sfvwrite_r+0x13e>
    7920:	1bad      	subs	r5, r5, r6
    7922:	2001      	movs	r0, #1
    7924:	2d00      	cmp	r5, #0
    7926:	d026      	beq.n	7976 <__sfvwrite_r+0x132>
    7928:	464b      	mov	r3, r9
    792a:	689b      	ldr	r3, [r3, #8]
    792c:	44b2      	add	sl, r6
    792e:	1bbf      	subs	r7, r7, r6
    7930:	1b9e      	subs	r6, r3, r6
    7932:	464b      	mov	r3, r9
    7934:	609e      	str	r6, [r3, #8]
    7936:	d0b8      	beq.n	78aa <__sfvwrite_r+0x66>
    7938:	2f00      	cmp	r7, #0
    793a:	d1d3      	bne.n	78e4 <__sfvwrite_r+0xa0>
    793c:	465b      	mov	r3, fp
    793e:	681b      	ldr	r3, [r3, #0]
    7940:	469a      	mov	sl, r3
    7942:	465b      	mov	r3, fp
    7944:	685f      	ldr	r7, [r3, #4]
    7946:	2308      	movs	r3, #8
    7948:	469c      	mov	ip, r3
    794a:	44e3      	add	fp, ip
    794c:	2f00      	cmp	r7, #0
    794e:	d0f5      	beq.n	793c <__sfvwrite_r+0xf8>
    7950:	003a      	movs	r2, r7
    7952:	210a      	movs	r1, #10
    7954:	4650      	mov	r0, sl
    7956:	f000 fc69 	bl	822c <memchr>
    795a:	2800      	cmp	r0, #0
    795c:	d100      	bne.n	7960 <__sfvwrite_r+0x11c>
    795e:	e0e2      	b.n	7b26 <__sfvwrite_r+0x2e2>
    7960:	4653      	mov	r3, sl
    7962:	3001      	adds	r0, #1
    7964:	1ac5      	subs	r5, r0, r3
    7966:	e7bf      	b.n	78e8 <__sfvwrite_r+0xa4>
    7968:	465b      	mov	r3, fp
    796a:	681f      	ldr	r7, [r3, #0]
    796c:	685d      	ldr	r5, [r3, #4]
    796e:	2308      	movs	r3, #8
    7970:	469c      	mov	ip, r3
    7972:	44e3      	add	fp, ip
    7974:	e782      	b.n	787c <__sfvwrite_r+0x38>
    7976:	0021      	movs	r1, r4
    7978:	9800      	ldr	r0, [sp, #0]
    797a:	f7ff fd81 	bl	7480 <_fflush_r>
    797e:	2800      	cmp	r0, #0
    7980:	d0d2      	beq.n	7928 <__sfvwrite_r+0xe4>
    7982:	220c      	movs	r2, #12
    7984:	5ea3      	ldrsh	r3, [r4, r2]
    7986:	2240      	movs	r2, #64	; 0x40
    7988:	2001      	movs	r0, #1
    798a:	4313      	orrs	r3, r2
    798c:	81a3      	strh	r3, [r4, #12]
    798e:	4240      	negs	r0, r0
    7990:	e78c      	b.n	78ac <__sfvwrite_r+0x68>
    7992:	2200      	movs	r2, #0
    7994:	4691      	mov	r9, r2
    7996:	464d      	mov	r5, r9
    7998:	2d00      	cmp	r5, #0
    799a:	d023      	beq.n	79e4 <__sfvwrite_r+0x1a0>
    799c:	68a2      	ldr	r2, [r4, #8]
    799e:	4690      	mov	r8, r2
    79a0:	2280      	movs	r2, #128	; 0x80
    79a2:	0092      	lsls	r2, r2, #2
    79a4:	4213      	tst	r3, r2
    79a6:	d026      	beq.n	79f6 <__sfvwrite_r+0x1b2>
    79a8:	46c2      	mov	sl, r8
    79aa:	4545      	cmp	r5, r8
    79ac:	d34d      	bcc.n	7a4a <__sfvwrite_r+0x206>
    79ae:	2290      	movs	r2, #144	; 0x90
    79b0:	00d2      	lsls	r2, r2, #3
    79b2:	4213      	tst	r3, r2
    79b4:	d14e      	bne.n	7a54 <__sfvwrite_r+0x210>
    79b6:	002f      	movs	r7, r5
    79b8:	6820      	ldr	r0, [r4, #0]
    79ba:	4652      	mov	r2, sl
    79bc:	4649      	mov	r1, r9
    79be:	f000 fc75 	bl	82ac <memmove>
    79c2:	4642      	mov	r2, r8
    79c4:	68a3      	ldr	r3, [r4, #8]
    79c6:	1a98      	subs	r0, r3, r2
    79c8:	6823      	ldr	r3, [r4, #0]
    79ca:	60a0      	str	r0, [r4, #8]
    79cc:	4453      	add	r3, sl
    79ce:	6023      	str	r3, [r4, #0]
    79d0:	68b3      	ldr	r3, [r6, #8]
    79d2:	44b9      	add	r9, r7
    79d4:	1bed      	subs	r5, r5, r7
    79d6:	1bdf      	subs	r7, r3, r7
    79d8:	60b7      	str	r7, [r6, #8]
    79da:	d100      	bne.n	79de <__sfvwrite_r+0x19a>
    79dc:	e765      	b.n	78aa <__sfvwrite_r+0x66>
    79de:	89a3      	ldrh	r3, [r4, #12]
    79e0:	2d00      	cmp	r5, #0
    79e2:	d1db      	bne.n	799c <__sfvwrite_r+0x158>
    79e4:	465a      	mov	r2, fp
    79e6:	6812      	ldr	r2, [r2, #0]
    79e8:	4691      	mov	r9, r2
    79ea:	465a      	mov	r2, fp
    79ec:	6855      	ldr	r5, [r2, #4]
    79ee:	2208      	movs	r2, #8
    79f0:	4694      	mov	ip, r2
    79f2:	44e3      	add	fp, ip
    79f4:	e7d0      	b.n	7998 <__sfvwrite_r+0x154>
    79f6:	6820      	ldr	r0, [r4, #0]
    79f8:	6923      	ldr	r3, [r4, #16]
    79fa:	4298      	cmp	r0, r3
    79fc:	d802      	bhi.n	7a04 <__sfvwrite_r+0x1c0>
    79fe:	6967      	ldr	r7, [r4, #20]
    7a00:	42bd      	cmp	r5, r7
    7a02:	d259      	bcs.n	7ab8 <__sfvwrite_r+0x274>
    7a04:	4647      	mov	r7, r8
    7a06:	42af      	cmp	r7, r5
    7a08:	d900      	bls.n	7a0c <__sfvwrite_r+0x1c8>
    7a0a:	002f      	movs	r7, r5
    7a0c:	003a      	movs	r2, r7
    7a0e:	4649      	mov	r1, r9
    7a10:	f000 fc4c 	bl	82ac <memmove>
    7a14:	68a3      	ldr	r3, [r4, #8]
    7a16:	6822      	ldr	r2, [r4, #0]
    7a18:	1bdb      	subs	r3, r3, r7
    7a1a:	19d2      	adds	r2, r2, r7
    7a1c:	60a3      	str	r3, [r4, #8]
    7a1e:	6022      	str	r2, [r4, #0]
    7a20:	2b00      	cmp	r3, #0
    7a22:	d1d5      	bne.n	79d0 <__sfvwrite_r+0x18c>
    7a24:	0021      	movs	r1, r4
    7a26:	9800      	ldr	r0, [sp, #0]
    7a28:	f7ff fd2a 	bl	7480 <_fflush_r>
    7a2c:	2800      	cmp	r0, #0
    7a2e:	d0cf      	beq.n	79d0 <__sfvwrite_r+0x18c>
    7a30:	e7a7      	b.n	7982 <__sfvwrite_r+0x13e>
    7a32:	4642      	mov	r2, r8
    7a34:	4651      	mov	r1, sl
    7a36:	f000 fc39 	bl	82ac <memmove>
    7a3a:	4642      	mov	r2, r8
    7a3c:	68a3      	ldr	r3, [r4, #8]
    7a3e:	1a9b      	subs	r3, r3, r2
    7a40:	60a3      	str	r3, [r4, #8]
    7a42:	6823      	ldr	r3, [r4, #0]
    7a44:	4443      	add	r3, r8
    7a46:	6023      	str	r3, [r4, #0]
    7a48:	e76a      	b.n	7920 <__sfvwrite_r+0xdc>
    7a4a:	46a8      	mov	r8, r5
    7a4c:	6820      	ldr	r0, [r4, #0]
    7a4e:	002f      	movs	r7, r5
    7a50:	46aa      	mov	sl, r5
    7a52:	e7b2      	b.n	79ba <__sfvwrite_r+0x176>
    7a54:	6921      	ldr	r1, [r4, #16]
    7a56:	6822      	ldr	r2, [r4, #0]
    7a58:	1a52      	subs	r2, r2, r1
    7a5a:	4692      	mov	sl, r2
    7a5c:	6962      	ldr	r2, [r4, #20]
    7a5e:	0057      	lsls	r7, r2, #1
    7a60:	18bf      	adds	r7, r7, r2
    7a62:	0ffa      	lsrs	r2, r7, #31
    7a64:	19d7      	adds	r7, r2, r7
    7a66:	4652      	mov	r2, sl
    7a68:	1c50      	adds	r0, r2, #1
    7a6a:	107f      	asrs	r7, r7, #1
    7a6c:	1940      	adds	r0, r0, r5
    7a6e:	003a      	movs	r2, r7
    7a70:	42b8      	cmp	r0, r7
    7a72:	d901      	bls.n	7a78 <__sfvwrite_r+0x234>
    7a74:	0007      	movs	r7, r0
    7a76:	0002      	movs	r2, r0
    7a78:	055b      	lsls	r3, r3, #21
    7a7a:	d542      	bpl.n	7b02 <__sfvwrite_r+0x2be>
    7a7c:	0011      	movs	r1, r2
    7a7e:	9800      	ldr	r0, [sp, #0]
    7a80:	f000 f920 	bl	7cc4 <_malloc_r>
    7a84:	4680      	mov	r8, r0
    7a86:	1e03      	subs	r3, r0, #0
    7a88:	d052      	beq.n	7b30 <__sfvwrite_r+0x2ec>
    7a8a:	4652      	mov	r2, sl
    7a8c:	6921      	ldr	r1, [r4, #16]
    7a8e:	f7fc fe09 	bl	46a4 <memcpy>
    7a92:	89a3      	ldrh	r3, [r4, #12]
    7a94:	4a2a      	ldr	r2, [pc, #168]	; (7b40 <__sfvwrite_r+0x2fc>)
    7a96:	4013      	ands	r3, r2
    7a98:	2280      	movs	r2, #128	; 0x80
    7a9a:	4313      	orrs	r3, r2
    7a9c:	81a3      	strh	r3, [r4, #12]
    7a9e:	4643      	mov	r3, r8
    7aa0:	4640      	mov	r0, r8
    7aa2:	6123      	str	r3, [r4, #16]
    7aa4:	4653      	mov	r3, sl
    7aa6:	4450      	add	r0, sl
    7aa8:	6167      	str	r7, [r4, #20]
    7aaa:	1aff      	subs	r7, r7, r3
    7aac:	60a7      	str	r7, [r4, #8]
    7aae:	6020      	str	r0, [r4, #0]
    7ab0:	46a8      	mov	r8, r5
    7ab2:	002f      	movs	r7, r5
    7ab4:	46aa      	mov	sl, r5
    7ab6:	e780      	b.n	79ba <__sfvwrite_r+0x176>
    7ab8:	4b22      	ldr	r3, [pc, #136]	; (7b44 <__sfvwrite_r+0x300>)
    7aba:	0028      	movs	r0, r5
    7abc:	429d      	cmp	r5, r3
    7abe:	d900      	bls.n	7ac2 <__sfvwrite_r+0x27e>
    7ac0:	0018      	movs	r0, r3
    7ac2:	0039      	movs	r1, r7
    7ac4:	f001 fcba 	bl	943c <__divsi3>
    7ac8:	003b      	movs	r3, r7
    7aca:	464a      	mov	r2, r9
    7acc:	4343      	muls	r3, r0
    7ace:	69e1      	ldr	r1, [r4, #28]
    7ad0:	9800      	ldr	r0, [sp, #0]
    7ad2:	6a67      	ldr	r7, [r4, #36]	; 0x24
    7ad4:	47b8      	blx	r7
    7ad6:	2800      	cmp	r0, #0
    7ad8:	dc00      	bgt.n	7adc <__sfvwrite_r+0x298>
    7ada:	e752      	b.n	7982 <__sfvwrite_r+0x13e>
    7adc:	0007      	movs	r7, r0
    7ade:	e777      	b.n	79d0 <__sfvwrite_r+0x18c>
    7ae0:	4666      	mov	r6, ip
    7ae2:	4651      	mov	r1, sl
    7ae4:	f000 fbe2 	bl	82ac <memmove>
    7ae8:	46b4      	mov	ip, r6
    7aea:	6823      	ldr	r3, [r4, #0]
    7aec:	0021      	movs	r1, r4
    7aee:	4463      	add	r3, ip
    7af0:	6023      	str	r3, [r4, #0]
    7af2:	9800      	ldr	r0, [sp, #0]
    7af4:	f7ff fcc4 	bl	7480 <_fflush_r>
    7af8:	2800      	cmp	r0, #0
    7afa:	d000      	beq.n	7afe <__sfvwrite_r+0x2ba>
    7afc:	e741      	b.n	7982 <__sfvwrite_r+0x13e>
    7afe:	9e01      	ldr	r6, [sp, #4]
    7b00:	e70e      	b.n	7920 <__sfvwrite_r+0xdc>
    7b02:	9800      	ldr	r0, [sp, #0]
    7b04:	f000 ff7a 	bl	89fc <_realloc_r>
    7b08:	4680      	mov	r8, r0
    7b0a:	2800      	cmp	r0, #0
    7b0c:	d1c7      	bne.n	7a9e <__sfvwrite_r+0x25a>
    7b0e:	9d00      	ldr	r5, [sp, #0]
    7b10:	6921      	ldr	r1, [r4, #16]
    7b12:	0028      	movs	r0, r5
    7b14:	f7ff fdb8 	bl	7688 <_free_r>
    7b18:	2280      	movs	r2, #128	; 0x80
    7b1a:	89a3      	ldrh	r3, [r4, #12]
    7b1c:	4393      	bics	r3, r2
    7b1e:	3a74      	subs	r2, #116	; 0x74
    7b20:	b21b      	sxth	r3, r3
    7b22:	602a      	str	r2, [r5, #0]
    7b24:	e72f      	b.n	7986 <__sfvwrite_r+0x142>
    7b26:	1c7d      	adds	r5, r7, #1
    7b28:	e6de      	b.n	78e8 <__sfvwrite_r+0xa4>
    7b2a:	2001      	movs	r0, #1
    7b2c:	4240      	negs	r0, r0
    7b2e:	e6bd      	b.n	78ac <__sfvwrite_r+0x68>
    7b30:	9a00      	ldr	r2, [sp, #0]
    7b32:	330c      	adds	r3, #12
    7b34:	6013      	str	r3, [r2, #0]
    7b36:	220c      	movs	r2, #12
    7b38:	5ea3      	ldrsh	r3, [r4, r2]
    7b3a:	e724      	b.n	7986 <__sfvwrite_r+0x142>
    7b3c:	7ffffc00 	.word	0x7ffffc00
    7b40:	fffffb7f 	.word	0xfffffb7f
    7b44:	7fffffff 	.word	0x7fffffff

00007b48 <_fwalk_reent>:
    7b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7b4a:	4647      	mov	r7, r8
    7b4c:	46ce      	mov	lr, r9
    7b4e:	b580      	push	{r7, lr}
    7b50:	27b8      	movs	r7, #184	; 0xb8
    7b52:	4680      	mov	r8, r0
    7b54:	00bf      	lsls	r7, r7, #2
    7b56:	4447      	add	r7, r8
    7b58:	4689      	mov	r9, r1
    7b5a:	2600      	movs	r6, #0
    7b5c:	2f00      	cmp	r7, #0
    7b5e:	d014      	beq.n	7b8a <_fwalk_reent+0x42>
    7b60:	687b      	ldr	r3, [r7, #4]
    7b62:	68bc      	ldr	r4, [r7, #8]
    7b64:	1e5d      	subs	r5, r3, #1
    7b66:	d40d      	bmi.n	7b84 <_fwalk_reent+0x3c>
    7b68:	89a3      	ldrh	r3, [r4, #12]
    7b6a:	2b01      	cmp	r3, #1
    7b6c:	d907      	bls.n	7b7e <_fwalk_reent+0x36>
    7b6e:	220e      	movs	r2, #14
    7b70:	5ea3      	ldrsh	r3, [r4, r2]
    7b72:	3301      	adds	r3, #1
    7b74:	d003      	beq.n	7b7e <_fwalk_reent+0x36>
    7b76:	0021      	movs	r1, r4
    7b78:	4640      	mov	r0, r8
    7b7a:	47c8      	blx	r9
    7b7c:	4306      	orrs	r6, r0
    7b7e:	3468      	adds	r4, #104	; 0x68
    7b80:	3d01      	subs	r5, #1
    7b82:	d2f1      	bcs.n	7b68 <_fwalk_reent+0x20>
    7b84:	683f      	ldr	r7, [r7, #0]
    7b86:	2f00      	cmp	r7, #0
    7b88:	d1ea      	bne.n	7b60 <_fwalk_reent+0x18>
    7b8a:	0030      	movs	r0, r6
    7b8c:	bc0c      	pop	{r2, r3}
    7b8e:	4690      	mov	r8, r2
    7b90:	4699      	mov	r9, r3
    7b92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00007b94 <_localeconv_r>:
    7b94:	4b04      	ldr	r3, [pc, #16]	; (7ba8 <_localeconv_r+0x14>)
    7b96:	681b      	ldr	r3, [r3, #0]
    7b98:	6b58      	ldr	r0, [r3, #52]	; 0x34
    7b9a:	2800      	cmp	r0, #0
    7b9c:	d001      	beq.n	7ba2 <_localeconv_r+0xe>
    7b9e:	30f0      	adds	r0, #240	; 0xf0
    7ba0:	4770      	bx	lr
    7ba2:	4802      	ldr	r0, [pc, #8]	; (7bac <_localeconv_r+0x18>)
    7ba4:	e7fb      	b.n	7b9e <_localeconv_r+0xa>
    7ba6:	46c0      	nop			; (mov r8, r8)
    7ba8:	2000007c 	.word	0x2000007c
    7bac:	200008bc 	.word	0x200008bc

00007bb0 <__retarget_lock_init_recursive>:
    7bb0:	4770      	bx	lr
    7bb2:	46c0      	nop			; (mov r8, r8)

00007bb4 <__retarget_lock_close_recursive>:
    7bb4:	4770      	bx	lr
    7bb6:	46c0      	nop			; (mov r8, r8)

00007bb8 <__retarget_lock_acquire_recursive>:
    7bb8:	4770      	bx	lr
    7bba:	46c0      	nop			; (mov r8, r8)

00007bbc <__retarget_lock_release_recursive>:
    7bbc:	4770      	bx	lr
    7bbe:	46c0      	nop			; (mov r8, r8)

00007bc0 <__swhatbuf_r>:
    7bc0:	b570      	push	{r4, r5, r6, lr}
    7bc2:	000c      	movs	r4, r1
    7bc4:	001e      	movs	r6, r3
    7bc6:	230e      	movs	r3, #14
    7bc8:	5ec9      	ldrsh	r1, [r1, r3]
    7bca:	b090      	sub	sp, #64	; 0x40
    7bcc:	0015      	movs	r5, r2
    7bce:	2900      	cmp	r1, #0
    7bd0:	db15      	blt.n	7bfe <__swhatbuf_r+0x3e>
    7bd2:	aa01      	add	r2, sp, #4
    7bd4:	f001 fb28 	bl	9228 <_fstat_r>
    7bd8:	2800      	cmp	r0, #0
    7bda:	db10      	blt.n	7bfe <__swhatbuf_r+0x3e>
    7bdc:	22f0      	movs	r2, #240	; 0xf0
    7bde:	9b02      	ldr	r3, [sp, #8]
    7be0:	0212      	lsls	r2, r2, #8
    7be2:	4013      	ands	r3, r2
    7be4:	4a0d      	ldr	r2, [pc, #52]	; (7c1c <__swhatbuf_r+0x5c>)
    7be6:	2080      	movs	r0, #128	; 0x80
    7be8:	4694      	mov	ip, r2
    7bea:	4463      	add	r3, ip
    7bec:	425a      	negs	r2, r3
    7bee:	4153      	adcs	r3, r2
    7bf0:	6033      	str	r3, [r6, #0]
    7bf2:	2380      	movs	r3, #128	; 0x80
    7bf4:	00db      	lsls	r3, r3, #3
    7bf6:	602b      	str	r3, [r5, #0]
    7bf8:	0100      	lsls	r0, r0, #4
    7bfa:	b010      	add	sp, #64	; 0x40
    7bfc:	bd70      	pop	{r4, r5, r6, pc}
    7bfe:	2300      	movs	r3, #0
    7c00:	6033      	str	r3, [r6, #0]
    7c02:	89a3      	ldrh	r3, [r4, #12]
    7c04:	061b      	lsls	r3, r3, #24
    7c06:	d503      	bpl.n	7c10 <__swhatbuf_r+0x50>
    7c08:	2340      	movs	r3, #64	; 0x40
    7c0a:	2000      	movs	r0, #0
    7c0c:	602b      	str	r3, [r5, #0]
    7c0e:	e7f4      	b.n	7bfa <__swhatbuf_r+0x3a>
    7c10:	2380      	movs	r3, #128	; 0x80
    7c12:	00db      	lsls	r3, r3, #3
    7c14:	602b      	str	r3, [r5, #0]
    7c16:	2000      	movs	r0, #0
    7c18:	e7ef      	b.n	7bfa <__swhatbuf_r+0x3a>
    7c1a:	46c0      	nop			; (mov r8, r8)
    7c1c:	ffffe000 	.word	0xffffe000

00007c20 <__smakebuf_r>:
    7c20:	b570      	push	{r4, r5, r6, lr}
    7c22:	898b      	ldrh	r3, [r1, #12]
    7c24:	b082      	sub	sp, #8
    7c26:	0006      	movs	r6, r0
    7c28:	000c      	movs	r4, r1
    7c2a:	079b      	lsls	r3, r3, #30
    7c2c:	d507      	bpl.n	7c3e <__smakebuf_r+0x1e>
    7c2e:	0023      	movs	r3, r4
    7c30:	3343      	adds	r3, #67	; 0x43
    7c32:	6023      	str	r3, [r4, #0]
    7c34:	6123      	str	r3, [r4, #16]
    7c36:	2301      	movs	r3, #1
    7c38:	6163      	str	r3, [r4, #20]
    7c3a:	b002      	add	sp, #8
    7c3c:	bd70      	pop	{r4, r5, r6, pc}
    7c3e:	ab01      	add	r3, sp, #4
    7c40:	466a      	mov	r2, sp
    7c42:	f7ff ffbd 	bl	7bc0 <__swhatbuf_r>
    7c46:	9900      	ldr	r1, [sp, #0]
    7c48:	0005      	movs	r5, r0
    7c4a:	0030      	movs	r0, r6
    7c4c:	f000 f83a 	bl	7cc4 <_malloc_r>
    7c50:	2800      	cmp	r0, #0
    7c52:	d01e      	beq.n	7c92 <__smakebuf_r+0x72>
    7c54:	2280      	movs	r2, #128	; 0x80
    7c56:	4b15      	ldr	r3, [pc, #84]	; (7cac <__smakebuf_r+0x8c>)
    7c58:	63f3      	str	r3, [r6, #60]	; 0x3c
    7c5a:	89a3      	ldrh	r3, [r4, #12]
    7c5c:	6020      	str	r0, [r4, #0]
    7c5e:	4313      	orrs	r3, r2
    7c60:	9a00      	ldr	r2, [sp, #0]
    7c62:	b21b      	sxth	r3, r3
    7c64:	6162      	str	r2, [r4, #20]
    7c66:	9a01      	ldr	r2, [sp, #4]
    7c68:	81a3      	strh	r3, [r4, #12]
    7c6a:	6120      	str	r0, [r4, #16]
    7c6c:	2a00      	cmp	r2, #0
    7c6e:	d102      	bne.n	7c76 <__smakebuf_r+0x56>
    7c70:	432b      	orrs	r3, r5
    7c72:	81a3      	strh	r3, [r4, #12]
    7c74:	e7e1      	b.n	7c3a <__smakebuf_r+0x1a>
    7c76:	230e      	movs	r3, #14
    7c78:	5ee1      	ldrsh	r1, [r4, r3]
    7c7a:	0030      	movs	r0, r6
    7c7c:	f001 fae8 	bl	9250 <_isatty_r>
    7c80:	2800      	cmp	r0, #0
    7c82:	d010      	beq.n	7ca6 <__smakebuf_r+0x86>
    7c84:	2203      	movs	r2, #3
    7c86:	89a3      	ldrh	r3, [r4, #12]
    7c88:	4393      	bics	r3, r2
    7c8a:	2201      	movs	r2, #1
    7c8c:	4313      	orrs	r3, r2
    7c8e:	b21b      	sxth	r3, r3
    7c90:	e7ee      	b.n	7c70 <__smakebuf_r+0x50>
    7c92:	220c      	movs	r2, #12
    7c94:	5ea3      	ldrsh	r3, [r4, r2]
    7c96:	059a      	lsls	r2, r3, #22
    7c98:	d4cf      	bmi.n	7c3a <__smakebuf_r+0x1a>
    7c9a:	2203      	movs	r2, #3
    7c9c:	4393      	bics	r3, r2
    7c9e:	2202      	movs	r2, #2
    7ca0:	4313      	orrs	r3, r2
    7ca2:	81a3      	strh	r3, [r4, #12]
    7ca4:	e7c3      	b.n	7c2e <__smakebuf_r+0xe>
    7ca6:	220c      	movs	r2, #12
    7ca8:	5ea3      	ldrsh	r3, [r4, r2]
    7caa:	e7e1      	b.n	7c70 <__smakebuf_r+0x50>
    7cac:	000074d5 	.word	0x000074d5

00007cb0 <malloc>:
    7cb0:	b510      	push	{r4, lr}
    7cb2:	4b03      	ldr	r3, [pc, #12]	; (7cc0 <malloc+0x10>)
    7cb4:	0001      	movs	r1, r0
    7cb6:	6818      	ldr	r0, [r3, #0]
    7cb8:	f000 f804 	bl	7cc4 <_malloc_r>
    7cbc:	bd10      	pop	{r4, pc}
    7cbe:	46c0      	nop			; (mov r8, r8)
    7cc0:	2000007c 	.word	0x2000007c

00007cc4 <_malloc_r>:
    7cc4:	b5f0      	push	{r4, r5, r6, r7, lr}
    7cc6:	4657      	mov	r7, sl
    7cc8:	4645      	mov	r5, r8
    7cca:	46de      	mov	lr, fp
    7ccc:	464e      	mov	r6, r9
    7cce:	b5e0      	push	{r5, r6, r7, lr}
    7cd0:	000d      	movs	r5, r1
    7cd2:	350b      	adds	r5, #11
    7cd4:	b083      	sub	sp, #12
    7cd6:	0007      	movs	r7, r0
    7cd8:	2d16      	cmp	r5, #22
    7cda:	d800      	bhi.n	7cde <_malloc_r+0x1a>
    7cdc:	e09f      	b.n	7e1e <_malloc_r+0x15a>
    7cde:	2307      	movs	r3, #7
    7ce0:	439d      	bics	r5, r3
    7ce2:	d500      	bpl.n	7ce6 <_malloc_r+0x22>
    7ce4:	e0c4      	b.n	7e70 <_malloc_r+0x1ac>
    7ce6:	42a9      	cmp	r1, r5
    7ce8:	d900      	bls.n	7cec <_malloc_r+0x28>
    7cea:	e0c1      	b.n	7e70 <_malloc_r+0x1ac>
    7cec:	f000 fb2e 	bl	834c <__malloc_lock>
    7cf0:	23f8      	movs	r3, #248	; 0xf8
    7cf2:	33ff      	adds	r3, #255	; 0xff
    7cf4:	429d      	cmp	r5, r3
    7cf6:	d800      	bhi.n	7cfa <_malloc_r+0x36>
    7cf8:	e28f      	b.n	821a <_malloc_r+0x556>
    7cfa:	0a68      	lsrs	r0, r5, #9
    7cfc:	d100      	bne.n	7d00 <_malloc_r+0x3c>
    7cfe:	e0bb      	b.n	7e78 <_malloc_r+0x1b4>
    7d00:	2804      	cmp	r0, #4
    7d02:	d900      	bls.n	7d06 <_malloc_r+0x42>
    7d04:	e162      	b.n	7fcc <_malloc_r+0x308>
    7d06:	2338      	movs	r3, #56	; 0x38
    7d08:	4698      	mov	r8, r3
    7d0a:	09a8      	lsrs	r0, r5, #6
    7d0c:	4480      	add	r8, r0
    7d0e:	3039      	adds	r0, #57	; 0x39
    7d10:	00c1      	lsls	r1, r0, #3
    7d12:	4ed2      	ldr	r6, [pc, #840]	; (805c <_malloc_r+0x398>)
    7d14:	1871      	adds	r1, r6, r1
    7d16:	3908      	subs	r1, #8
    7d18:	68cc      	ldr	r4, [r1, #12]
    7d1a:	42a1      	cmp	r1, r4
    7d1c:	d019      	beq.n	7d52 <_malloc_r+0x8e>
    7d1e:	2303      	movs	r3, #3
    7d20:	6862      	ldr	r2, [r4, #4]
    7d22:	439a      	bics	r2, r3
    7d24:	0013      	movs	r3, r2
    7d26:	1b52      	subs	r2, r2, r5
    7d28:	2a0f      	cmp	r2, #15
    7d2a:	dd00      	ble.n	7d2e <_malloc_r+0x6a>
    7d2c:	e0aa      	b.n	7e84 <_malloc_r+0x1c0>
    7d2e:	2a00      	cmp	r2, #0
    7d30:	db00      	blt.n	7d34 <_malloc_r+0x70>
    7d32:	e088      	b.n	7e46 <_malloc_r+0x182>
    7d34:	2303      	movs	r3, #3
    7d36:	469c      	mov	ip, r3
    7d38:	e008      	b.n	7d4c <_malloc_r+0x88>
    7d3a:	4662      	mov	r2, ip
    7d3c:	6863      	ldr	r3, [r4, #4]
    7d3e:	4393      	bics	r3, r2
    7d40:	1b5a      	subs	r2, r3, r5
    7d42:	2a0f      	cmp	r2, #15
    7d44:	dd00      	ble.n	7d48 <_malloc_r+0x84>
    7d46:	e09d      	b.n	7e84 <_malloc_r+0x1c0>
    7d48:	2a00      	cmp	r2, #0
    7d4a:	da7c      	bge.n	7e46 <_malloc_r+0x182>
    7d4c:	68e4      	ldr	r4, [r4, #12]
    7d4e:	42a1      	cmp	r1, r4
    7d50:	d1f3      	bne.n	7d3a <_malloc_r+0x76>
    7d52:	0032      	movs	r2, r6
    7d54:	6934      	ldr	r4, [r6, #16]
    7d56:	3208      	adds	r2, #8
    7d58:	4294      	cmp	r4, r2
    7d5a:	d100      	bne.n	7d5e <_malloc_r+0x9a>
    7d5c:	e190      	b.n	8080 <_malloc_r+0x3bc>
    7d5e:	2303      	movs	r3, #3
    7d60:	6861      	ldr	r1, [r4, #4]
    7d62:	4399      	bics	r1, r3
    7d64:	4689      	mov	r9, r1
    7d66:	1b49      	subs	r1, r1, r5
    7d68:	290f      	cmp	r1, #15
    7d6a:	dd00      	ble.n	7d6e <_malloc_r+0xaa>
    7d6c:	e162      	b.n	8034 <_malloc_r+0x370>
    7d6e:	6172      	str	r2, [r6, #20]
    7d70:	6132      	str	r2, [r6, #16]
    7d72:	2900      	cmp	r1, #0
    7d74:	db00      	blt.n	7d78 <_malloc_r+0xb4>
    7d76:	e087      	b.n	7e88 <_malloc_r+0x1c4>
    7d78:	4ab9      	ldr	r2, [pc, #740]	; (8060 <_malloc_r+0x39c>)
    7d7a:	464b      	mov	r3, r9
    7d7c:	4591      	cmp	r9, r2
    7d7e:	d900      	bls.n	7d82 <_malloc_r+0xbe>
    7d80:	e130      	b.n	7fe4 <_malloc_r+0x320>
    7d82:	08db      	lsrs	r3, r3, #3
    7d84:	3aff      	subs	r2, #255	; 0xff
    7d86:	1099      	asrs	r1, r3, #2
    7d88:	3aff      	subs	r2, #255	; 0xff
    7d8a:	408a      	lsls	r2, r1
    7d8c:	00db      	lsls	r3, r3, #3
    7d8e:	6871      	ldr	r1, [r6, #4]
    7d90:	199b      	adds	r3, r3, r6
    7d92:	430a      	orrs	r2, r1
    7d94:	6899      	ldr	r1, [r3, #8]
    7d96:	6072      	str	r2, [r6, #4]
    7d98:	60e3      	str	r3, [r4, #12]
    7d9a:	60a1      	str	r1, [r4, #8]
    7d9c:	609c      	str	r4, [r3, #8]
    7d9e:	0013      	movs	r3, r2
    7da0:	60cc      	str	r4, [r1, #12]
    7da2:	2101      	movs	r1, #1
    7da4:	1082      	asrs	r2, r0, #2
    7da6:	4091      	lsls	r1, r2
    7da8:	4299      	cmp	r1, r3
    7daa:	d86f      	bhi.n	7e8c <_malloc_r+0x1c8>
    7dac:	420b      	tst	r3, r1
    7dae:	d105      	bne.n	7dbc <_malloc_r+0xf8>
    7db0:	2203      	movs	r2, #3
    7db2:	4390      	bics	r0, r2
    7db4:	0049      	lsls	r1, r1, #1
    7db6:	3004      	adds	r0, #4
    7db8:	420b      	tst	r3, r1
    7dba:	d0fb      	beq.n	7db4 <_malloc_r+0xf0>
    7dbc:	2303      	movs	r3, #3
    7dbe:	4698      	mov	r8, r3
    7dc0:	00c3      	lsls	r3, r0, #3
    7dc2:	4699      	mov	r9, r3
    7dc4:	44b1      	add	r9, r6
    7dc6:	46cc      	mov	ip, r9
    7dc8:	4682      	mov	sl, r0
    7dca:	4663      	mov	r3, ip
    7dcc:	68dc      	ldr	r4, [r3, #12]
    7dce:	45a4      	cmp	ip, r4
    7dd0:	d107      	bne.n	7de2 <_malloc_r+0x11e>
    7dd2:	e157      	b.n	8084 <_malloc_r+0x3c0>
    7dd4:	2a00      	cmp	r2, #0
    7dd6:	db00      	blt.n	7dda <_malloc_r+0x116>
    7dd8:	e166      	b.n	80a8 <_malloc_r+0x3e4>
    7dda:	68e4      	ldr	r4, [r4, #12]
    7ddc:	45a4      	cmp	ip, r4
    7dde:	d100      	bne.n	7de2 <_malloc_r+0x11e>
    7de0:	e150      	b.n	8084 <_malloc_r+0x3c0>
    7de2:	4642      	mov	r2, r8
    7de4:	6863      	ldr	r3, [r4, #4]
    7de6:	4393      	bics	r3, r2
    7de8:	1b5a      	subs	r2, r3, r5
    7dea:	2a0f      	cmp	r2, #15
    7dec:	ddf2      	ble.n	7dd4 <_malloc_r+0x110>
    7dee:	2001      	movs	r0, #1
    7df0:	4680      	mov	r8, r0
    7df2:	1961      	adds	r1, r4, r5
    7df4:	4305      	orrs	r5, r0
    7df6:	6065      	str	r5, [r4, #4]
    7df8:	68a0      	ldr	r0, [r4, #8]
    7dfa:	68e5      	ldr	r5, [r4, #12]
    7dfc:	3608      	adds	r6, #8
    7dfe:	60c5      	str	r5, [r0, #12]
    7e00:	60a8      	str	r0, [r5, #8]
    7e02:	4640      	mov	r0, r8
    7e04:	60f1      	str	r1, [r6, #12]
    7e06:	60b1      	str	r1, [r6, #8]
    7e08:	4310      	orrs	r0, r2
    7e0a:	6048      	str	r0, [r1, #4]
    7e0c:	60ce      	str	r6, [r1, #12]
    7e0e:	608e      	str	r6, [r1, #8]
    7e10:	0038      	movs	r0, r7
    7e12:	50e2      	str	r2, [r4, r3]
    7e14:	f000 faa2 	bl	835c <__malloc_unlock>
    7e18:	0020      	movs	r0, r4
    7e1a:	3008      	adds	r0, #8
    7e1c:	e021      	b.n	7e62 <_malloc_r+0x19e>
    7e1e:	2910      	cmp	r1, #16
    7e20:	d826      	bhi.n	7e70 <_malloc_r+0x1ac>
    7e22:	0038      	movs	r0, r7
    7e24:	f000 fa92 	bl	834c <__malloc_lock>
    7e28:	2510      	movs	r5, #16
    7e2a:	2318      	movs	r3, #24
    7e2c:	2002      	movs	r0, #2
    7e2e:	4e8b      	ldr	r6, [pc, #556]	; (805c <_malloc_r+0x398>)
    7e30:	18f3      	adds	r3, r6, r3
    7e32:	001a      	movs	r2, r3
    7e34:	685c      	ldr	r4, [r3, #4]
    7e36:	3a08      	subs	r2, #8
    7e38:	4294      	cmp	r4, r2
    7e3a:	d100      	bne.n	7e3e <_malloc_r+0x17a>
    7e3c:	e12e      	b.n	809c <_malloc_r+0x3d8>
    7e3e:	2303      	movs	r3, #3
    7e40:	6862      	ldr	r2, [r4, #4]
    7e42:	439a      	bics	r2, r3
    7e44:	0013      	movs	r3, r2
    7e46:	68e2      	ldr	r2, [r4, #12]
    7e48:	68a1      	ldr	r1, [r4, #8]
    7e4a:	60ca      	str	r2, [r1, #12]
    7e4c:	6091      	str	r1, [r2, #8]
    7e4e:	2201      	movs	r2, #1
    7e50:	18e3      	adds	r3, r4, r3
    7e52:	6859      	ldr	r1, [r3, #4]
    7e54:	0038      	movs	r0, r7
    7e56:	430a      	orrs	r2, r1
    7e58:	605a      	str	r2, [r3, #4]
    7e5a:	f000 fa7f 	bl	835c <__malloc_unlock>
    7e5e:	0020      	movs	r0, r4
    7e60:	3008      	adds	r0, #8
    7e62:	b003      	add	sp, #12
    7e64:	bc3c      	pop	{r2, r3, r4, r5}
    7e66:	4690      	mov	r8, r2
    7e68:	4699      	mov	r9, r3
    7e6a:	46a2      	mov	sl, r4
    7e6c:	46ab      	mov	fp, r5
    7e6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7e70:	230c      	movs	r3, #12
    7e72:	2000      	movs	r0, #0
    7e74:	603b      	str	r3, [r7, #0]
    7e76:	e7f4      	b.n	7e62 <_malloc_r+0x19e>
    7e78:	2180      	movs	r1, #128	; 0x80
    7e7a:	233f      	movs	r3, #63	; 0x3f
    7e7c:	2040      	movs	r0, #64	; 0x40
    7e7e:	0089      	lsls	r1, r1, #2
    7e80:	4698      	mov	r8, r3
    7e82:	e746      	b.n	7d12 <_malloc_r+0x4e>
    7e84:	4640      	mov	r0, r8
    7e86:	e764      	b.n	7d52 <_malloc_r+0x8e>
    7e88:	464b      	mov	r3, r9
    7e8a:	e7e0      	b.n	7e4e <_malloc_r+0x18a>
    7e8c:	2303      	movs	r3, #3
    7e8e:	68b4      	ldr	r4, [r6, #8]
    7e90:	6862      	ldr	r2, [r4, #4]
    7e92:	439a      	bics	r2, r3
    7e94:	4690      	mov	r8, r2
    7e96:	42aa      	cmp	r2, r5
    7e98:	d303      	bcc.n	7ea2 <_malloc_r+0x1de>
    7e9a:	1b53      	subs	r3, r2, r5
    7e9c:	2b0f      	cmp	r3, #15
    7e9e:	dd00      	ble.n	7ea2 <_malloc_r+0x1de>
    7ea0:	e086      	b.n	7fb0 <_malloc_r+0x2ec>
    7ea2:	0023      	movs	r3, r4
    7ea4:	4443      	add	r3, r8
    7ea6:	4a6f      	ldr	r2, [pc, #444]	; (8064 <_malloc_r+0x3a0>)
    7ea8:	9301      	str	r3, [sp, #4]
    7eaa:	4b6f      	ldr	r3, [pc, #444]	; (8068 <_malloc_r+0x3a4>)
    7eac:	4693      	mov	fp, r2
    7eae:	681b      	ldr	r3, [r3, #0]
    7eb0:	6812      	ldr	r2, [r2, #0]
    7eb2:	18eb      	adds	r3, r5, r3
    7eb4:	3201      	adds	r2, #1
    7eb6:	d100      	bne.n	7eba <_malloc_r+0x1f6>
    7eb8:	e168      	b.n	818c <_malloc_r+0x4c8>
    7eba:	4a6c      	ldr	r2, [pc, #432]	; (806c <_malloc_r+0x3a8>)
    7ebc:	4694      	mov	ip, r2
    7ebe:	4463      	add	r3, ip
    7ec0:	0b1b      	lsrs	r3, r3, #12
    7ec2:	031b      	lsls	r3, r3, #12
    7ec4:	9300      	str	r3, [sp, #0]
    7ec6:	9900      	ldr	r1, [sp, #0]
    7ec8:	0038      	movs	r0, r7
    7eca:	f000 ff55 	bl	8d78 <_sbrk_r>
    7ece:	0003      	movs	r3, r0
    7ed0:	4681      	mov	r9, r0
    7ed2:	3301      	adds	r3, #1
    7ed4:	d061      	beq.n	7f9a <_malloc_r+0x2d6>
    7ed6:	9b01      	ldr	r3, [sp, #4]
    7ed8:	4283      	cmp	r3, r0
    7eda:	d900      	bls.n	7ede <_malloc_r+0x21a>
    7edc:	e0ff      	b.n	80de <_malloc_r+0x41a>
    7ede:	4b64      	ldr	r3, [pc, #400]	; (8070 <_malloc_r+0x3ac>)
    7ee0:	9a00      	ldr	r2, [sp, #0]
    7ee2:	469a      	mov	sl, r3
    7ee4:	681b      	ldr	r3, [r3, #0]
    7ee6:	469c      	mov	ip, r3
    7ee8:	4653      	mov	r3, sl
    7eea:	4462      	add	r2, ip
    7eec:	601a      	str	r2, [r3, #0]
    7eee:	9b01      	ldr	r3, [sp, #4]
    7ef0:	0011      	movs	r1, r2
    7ef2:	4283      	cmp	r3, r0
    7ef4:	d100      	bne.n	7ef8 <_malloc_r+0x234>
    7ef6:	e155      	b.n	81a4 <_malloc_r+0x4e0>
    7ef8:	465b      	mov	r3, fp
    7efa:	681b      	ldr	r3, [r3, #0]
    7efc:	3301      	adds	r3, #1
    7efe:	d100      	bne.n	7f02 <_malloc_r+0x23e>
    7f00:	e16c      	b.n	81dc <_malloc_r+0x518>
    7f02:	464b      	mov	r3, r9
    7f04:	9a01      	ldr	r2, [sp, #4]
    7f06:	1a9b      	subs	r3, r3, r2
    7f08:	1859      	adds	r1, r3, r1
    7f0a:	4653      	mov	r3, sl
    7f0c:	6019      	str	r1, [r3, #0]
    7f0e:	2307      	movs	r3, #7
    7f10:	464a      	mov	r2, r9
    7f12:	4013      	ands	r3, r2
    7f14:	d100      	bne.n	7f18 <_malloc_r+0x254>
    7f16:	e124      	b.n	8162 <_malloc_r+0x49e>
    7f18:	2108      	movs	r1, #8
    7f1a:	4689      	mov	r9, r1
    7f1c:	4955      	ldr	r1, [pc, #340]	; (8074 <_malloc_r+0x3b0>)
    7f1e:	1ad2      	subs	r2, r2, r3
    7f20:	4491      	add	r9, r2
    7f22:	1acb      	subs	r3, r1, r3
    7f24:	9a00      	ldr	r2, [sp, #0]
    7f26:	0038      	movs	r0, r7
    7f28:	444a      	add	r2, r9
    7f2a:	0511      	lsls	r1, r2, #20
    7f2c:	0d09      	lsrs	r1, r1, #20
    7f2e:	1a5b      	subs	r3, r3, r1
    7f30:	0019      	movs	r1, r3
    7f32:	469b      	mov	fp, r3
    7f34:	f000 ff20 	bl	8d78 <_sbrk_r>
    7f38:	1c43      	adds	r3, r0, #1
    7f3a:	d100      	bne.n	7f3e <_malloc_r+0x27a>
    7f3c:	e142      	b.n	81c4 <_malloc_r+0x500>
    7f3e:	464b      	mov	r3, r9
    7f40:	1ac0      	subs	r0, r0, r3
    7f42:	2301      	movs	r3, #1
    7f44:	4458      	add	r0, fp
    7f46:	4318      	orrs	r0, r3
    7f48:	4653      	mov	r3, sl
    7f4a:	681b      	ldr	r3, [r3, #0]
    7f4c:	445b      	add	r3, fp
    7f4e:	0019      	movs	r1, r3
    7f50:	4653      	mov	r3, sl
    7f52:	6019      	str	r1, [r3, #0]
    7f54:	464b      	mov	r3, r9
    7f56:	60b3      	str	r3, [r6, #8]
    7f58:	6058      	str	r0, [r3, #4]
    7f5a:	42b4      	cmp	r4, r6
    7f5c:	d013      	beq.n	7f86 <_malloc_r+0x2c2>
    7f5e:	4643      	mov	r3, r8
    7f60:	2b0f      	cmp	r3, #15
    7f62:	d800      	bhi.n	7f66 <_malloc_r+0x2a2>
    7f64:	e0e8      	b.n	8138 <_malloc_r+0x474>
    7f66:	4643      	mov	r3, r8
    7f68:	2207      	movs	r2, #7
    7f6a:	6860      	ldr	r0, [r4, #4]
    7f6c:	3b0c      	subs	r3, #12
    7f6e:	4393      	bics	r3, r2
    7f70:	3a06      	subs	r2, #6
    7f72:	4002      	ands	r2, r0
    7f74:	2005      	movs	r0, #5
    7f76:	431a      	orrs	r2, r3
    7f78:	6062      	str	r2, [r4, #4]
    7f7a:	18e2      	adds	r2, r4, r3
    7f7c:	6050      	str	r0, [r2, #4]
    7f7e:	6090      	str	r0, [r2, #8]
    7f80:	2b0f      	cmp	r3, #15
    7f82:	d900      	bls.n	7f86 <_malloc_r+0x2c2>
    7f84:	e122      	b.n	81cc <_malloc_r+0x508>
    7f86:	4b3c      	ldr	r3, [pc, #240]	; (8078 <_malloc_r+0x3b4>)
    7f88:	681a      	ldr	r2, [r3, #0]
    7f8a:	4291      	cmp	r1, r2
    7f8c:	d900      	bls.n	7f90 <_malloc_r+0x2cc>
    7f8e:	6019      	str	r1, [r3, #0]
    7f90:	4b3a      	ldr	r3, [pc, #232]	; (807c <_malloc_r+0x3b8>)
    7f92:	681a      	ldr	r2, [r3, #0]
    7f94:	4291      	cmp	r1, r2
    7f96:	d900      	bls.n	7f9a <_malloc_r+0x2d6>
    7f98:	6019      	str	r1, [r3, #0]
    7f9a:	2303      	movs	r3, #3
    7f9c:	68b4      	ldr	r4, [r6, #8]
    7f9e:	6862      	ldr	r2, [r4, #4]
    7fa0:	439a      	bics	r2, r3
    7fa2:	1b53      	subs	r3, r2, r5
    7fa4:	4295      	cmp	r5, r2
    7fa6:	d900      	bls.n	7faa <_malloc_r+0x2e6>
    7fa8:	e0c9      	b.n	813e <_malloc_r+0x47a>
    7faa:	2b0f      	cmp	r3, #15
    7fac:	dc00      	bgt.n	7fb0 <_malloc_r+0x2ec>
    7fae:	e0c6      	b.n	813e <_malloc_r+0x47a>
    7fb0:	2201      	movs	r2, #1
    7fb2:	0029      	movs	r1, r5
    7fb4:	4313      	orrs	r3, r2
    7fb6:	4311      	orrs	r1, r2
    7fb8:	1965      	adds	r5, r4, r5
    7fba:	6061      	str	r1, [r4, #4]
    7fbc:	0038      	movs	r0, r7
    7fbe:	60b5      	str	r5, [r6, #8]
    7fc0:	606b      	str	r3, [r5, #4]
    7fc2:	f000 f9cb 	bl	835c <__malloc_unlock>
    7fc6:	0020      	movs	r0, r4
    7fc8:	3008      	adds	r0, #8
    7fca:	e74a      	b.n	7e62 <_malloc_r+0x19e>
    7fcc:	2814      	cmp	r0, #20
    7fce:	d97a      	bls.n	80c6 <_malloc_r+0x402>
    7fd0:	2854      	cmp	r0, #84	; 0x54
    7fd2:	d900      	bls.n	7fd6 <_malloc_r+0x312>
    7fd4:	e0ba      	b.n	814c <_malloc_r+0x488>
    7fd6:	236e      	movs	r3, #110	; 0x6e
    7fd8:	4698      	mov	r8, r3
    7fda:	0b28      	lsrs	r0, r5, #12
    7fdc:	4480      	add	r8, r0
    7fde:	306f      	adds	r0, #111	; 0x6f
    7fe0:	00c1      	lsls	r1, r0, #3
    7fe2:	e696      	b.n	7d12 <_malloc_r+0x4e>
    7fe4:	0a5a      	lsrs	r2, r3, #9
    7fe6:	2a04      	cmp	r2, #4
    7fe8:	d973      	bls.n	80d2 <_malloc_r+0x40e>
    7fea:	2a14      	cmp	r2, #20
    7fec:	d900      	bls.n	7ff0 <_malloc_r+0x32c>
    7fee:	e0d0      	b.n	8192 <_malloc_r+0x4ce>
    7ff0:	0011      	movs	r1, r2
    7ff2:	325c      	adds	r2, #92	; 0x5c
    7ff4:	315b      	adds	r1, #91	; 0x5b
    7ff6:	00d2      	lsls	r2, r2, #3
    7ff8:	2308      	movs	r3, #8
    7ffa:	425b      	negs	r3, r3
    7ffc:	469c      	mov	ip, r3
    7ffe:	18b2      	adds	r2, r6, r2
    8000:	4494      	add	ip, r2
    8002:	4663      	mov	r3, ip
    8004:	689a      	ldr	r2, [r3, #8]
    8006:	2303      	movs	r3, #3
    8008:	4698      	mov	r8, r3
    800a:	4594      	cmp	ip, r2
    800c:	d100      	bne.n	8010 <_malloc_r+0x34c>
    800e:	e0ab      	b.n	8168 <_malloc_r+0x4a4>
    8010:	4643      	mov	r3, r8
    8012:	6851      	ldr	r1, [r2, #4]
    8014:	4399      	bics	r1, r3
    8016:	4589      	cmp	r9, r1
    8018:	d300      	bcc.n	801c <_malloc_r+0x358>
    801a:	e095      	b.n	8148 <_malloc_r+0x484>
    801c:	6892      	ldr	r2, [r2, #8]
    801e:	4594      	cmp	ip, r2
    8020:	d1f6      	bne.n	8010 <_malloc_r+0x34c>
    8022:	4663      	mov	r3, ip
    8024:	68da      	ldr	r2, [r3, #12]
    8026:	6873      	ldr	r3, [r6, #4]
    8028:	4661      	mov	r1, ip
    802a:	60e2      	str	r2, [r4, #12]
    802c:	60a1      	str	r1, [r4, #8]
    802e:	6094      	str	r4, [r2, #8]
    8030:	60cc      	str	r4, [r1, #12]
    8032:	e6b6      	b.n	7da2 <_malloc_r+0xde>
    8034:	2301      	movs	r3, #1
    8036:	1960      	adds	r0, r4, r5
    8038:	431d      	orrs	r5, r3
    803a:	6065      	str	r5, [r4, #4]
    803c:	6170      	str	r0, [r6, #20]
    803e:	6130      	str	r0, [r6, #16]
    8040:	60c2      	str	r2, [r0, #12]
    8042:	6082      	str	r2, [r0, #8]
    8044:	001a      	movs	r2, r3
    8046:	464b      	mov	r3, r9
    8048:	430a      	orrs	r2, r1
    804a:	6042      	str	r2, [r0, #4]
    804c:	0038      	movs	r0, r7
    804e:	50e1      	str	r1, [r4, r3]
    8050:	f000 f984 	bl	835c <__malloc_unlock>
    8054:	0020      	movs	r0, r4
    8056:	3008      	adds	r0, #8
    8058:	e703      	b.n	7e62 <_malloc_r+0x19e>
    805a:	46c0      	nop			; (mov r8, r8)
    805c:	200004ac 	.word	0x200004ac
    8060:	000001ff 	.word	0x000001ff
    8064:	200008b4 	.word	0x200008b4
    8068:	20000ac0 	.word	0x20000ac0
    806c:	0000100f 	.word	0x0000100f
    8070:	20000a90 	.word	0x20000a90
    8074:	00001008 	.word	0x00001008
    8078:	20000ab8 	.word	0x20000ab8
    807c:	20000abc 	.word	0x20000abc
    8080:	6873      	ldr	r3, [r6, #4]
    8082:	e68e      	b.n	7da2 <_malloc_r+0xde>
    8084:	2308      	movs	r3, #8
    8086:	469b      	mov	fp, r3
    8088:	3b07      	subs	r3, #7
    808a:	44dc      	add	ip, fp
    808c:	469b      	mov	fp, r3
    808e:	44da      	add	sl, fp
    8090:	4643      	mov	r3, r8
    8092:	4652      	mov	r2, sl
    8094:	4213      	tst	r3, r2
    8096:	d000      	beq.n	809a <_malloc_r+0x3d6>
    8098:	e697      	b.n	7dca <_malloc_r+0x106>
    809a:	e037      	b.n	810c <_malloc_r+0x448>
    809c:	68dc      	ldr	r4, [r3, #12]
    809e:	3002      	adds	r0, #2
    80a0:	42a3      	cmp	r3, r4
    80a2:	d100      	bne.n	80a6 <_malloc_r+0x3e2>
    80a4:	e655      	b.n	7d52 <_malloc_r+0x8e>
    80a6:	e6ca      	b.n	7e3e <_malloc_r+0x17a>
    80a8:	2201      	movs	r2, #1
    80aa:	18e3      	adds	r3, r4, r3
    80ac:	6859      	ldr	r1, [r3, #4]
    80ae:	0038      	movs	r0, r7
    80b0:	430a      	orrs	r2, r1
    80b2:	605a      	str	r2, [r3, #4]
    80b4:	68e3      	ldr	r3, [r4, #12]
    80b6:	68a2      	ldr	r2, [r4, #8]
    80b8:	60d3      	str	r3, [r2, #12]
    80ba:	609a      	str	r2, [r3, #8]
    80bc:	f000 f94e 	bl	835c <__malloc_unlock>
    80c0:	0020      	movs	r0, r4
    80c2:	3008      	adds	r0, #8
    80c4:	e6cd      	b.n	7e62 <_malloc_r+0x19e>
    80c6:	235b      	movs	r3, #91	; 0x5b
    80c8:	4698      	mov	r8, r3
    80ca:	4480      	add	r8, r0
    80cc:	305c      	adds	r0, #92	; 0x5c
    80ce:	00c1      	lsls	r1, r0, #3
    80d0:	e61f      	b.n	7d12 <_malloc_r+0x4e>
    80d2:	099a      	lsrs	r2, r3, #6
    80d4:	0011      	movs	r1, r2
    80d6:	3239      	adds	r2, #57	; 0x39
    80d8:	3138      	adds	r1, #56	; 0x38
    80da:	00d2      	lsls	r2, r2, #3
    80dc:	e78c      	b.n	7ff8 <_malloc_r+0x334>
    80de:	42b4      	cmp	r4, r6
    80e0:	d000      	beq.n	80e4 <_malloc_r+0x420>
    80e2:	e75a      	b.n	7f9a <_malloc_r+0x2d6>
    80e4:	4b4f      	ldr	r3, [pc, #316]	; (8224 <_malloc_r+0x560>)
    80e6:	9a00      	ldr	r2, [sp, #0]
    80e8:	469a      	mov	sl, r3
    80ea:	681b      	ldr	r3, [r3, #0]
    80ec:	469c      	mov	ip, r3
    80ee:	4653      	mov	r3, sl
    80f0:	4462      	add	r2, ip
    80f2:	0011      	movs	r1, r2
    80f4:	601a      	str	r2, [r3, #0]
    80f6:	e6ff      	b.n	7ef8 <_malloc_r+0x234>
    80f8:	2308      	movs	r3, #8
    80fa:	425b      	negs	r3, r3
    80fc:	469c      	mov	ip, r3
    80fe:	44e1      	add	r9, ip
    8100:	464b      	mov	r3, r9
    8102:	689b      	ldr	r3, [r3, #8]
    8104:	3801      	subs	r0, #1
    8106:	4599      	cmp	r9, r3
    8108:	d000      	beq.n	810c <_malloc_r+0x448>
    810a:	e084      	b.n	8216 <_malloc_r+0x552>
    810c:	4643      	mov	r3, r8
    810e:	4203      	tst	r3, r0
    8110:	d1f2      	bne.n	80f8 <_malloc_r+0x434>
    8112:	6873      	ldr	r3, [r6, #4]
    8114:	438b      	bics	r3, r1
    8116:	6073      	str	r3, [r6, #4]
    8118:	0049      	lsls	r1, r1, #1
    811a:	4299      	cmp	r1, r3
    811c:	d900      	bls.n	8120 <_malloc_r+0x45c>
    811e:	e6b5      	b.n	7e8c <_malloc_r+0x1c8>
    8120:	2900      	cmp	r1, #0
    8122:	d100      	bne.n	8126 <_malloc_r+0x462>
    8124:	e6b2      	b.n	7e8c <_malloc_r+0x1c8>
    8126:	4650      	mov	r0, sl
    8128:	420b      	tst	r3, r1
    812a:	d000      	beq.n	812e <_malloc_r+0x46a>
    812c:	e648      	b.n	7dc0 <_malloc_r+0xfc>
    812e:	0049      	lsls	r1, r1, #1
    8130:	3004      	adds	r0, #4
    8132:	420b      	tst	r3, r1
    8134:	d0fb      	beq.n	812e <_malloc_r+0x46a>
    8136:	e643      	b.n	7dc0 <_malloc_r+0xfc>
    8138:	2301      	movs	r3, #1
    813a:	464a      	mov	r2, r9
    813c:	6053      	str	r3, [r2, #4]
    813e:	0038      	movs	r0, r7
    8140:	f000 f90c 	bl	835c <__malloc_unlock>
    8144:	2000      	movs	r0, #0
    8146:	e68c      	b.n	7e62 <_malloc_r+0x19e>
    8148:	4694      	mov	ip, r2
    814a:	e76a      	b.n	8022 <_malloc_r+0x35e>
    814c:	23aa      	movs	r3, #170	; 0xaa
    814e:	005b      	lsls	r3, r3, #1
    8150:	4298      	cmp	r0, r3
    8152:	d811      	bhi.n	8178 <_malloc_r+0x4b4>
    8154:	3bdd      	subs	r3, #221	; 0xdd
    8156:	4698      	mov	r8, r3
    8158:	0be8      	lsrs	r0, r5, #15
    815a:	4480      	add	r8, r0
    815c:	3078      	adds	r0, #120	; 0x78
    815e:	00c1      	lsls	r1, r0, #3
    8160:	e5d7      	b.n	7d12 <_malloc_r+0x4e>
    8162:	2380      	movs	r3, #128	; 0x80
    8164:	015b      	lsls	r3, r3, #5
    8166:	e6dd      	b.n	7f24 <_malloc_r+0x260>
    8168:	1089      	asrs	r1, r1, #2
    816a:	3b02      	subs	r3, #2
    816c:	408b      	lsls	r3, r1
    816e:	6872      	ldr	r2, [r6, #4]
    8170:	4313      	orrs	r3, r2
    8172:	6073      	str	r3, [r6, #4]
    8174:	4662      	mov	r2, ip
    8176:	e757      	b.n	8028 <_malloc_r+0x364>
    8178:	4b2b      	ldr	r3, [pc, #172]	; (8228 <_malloc_r+0x564>)
    817a:	4298      	cmp	r0, r3
    817c:	d81c      	bhi.n	81b8 <_malloc_r+0x4f4>
    817e:	237c      	movs	r3, #124	; 0x7c
    8180:	4698      	mov	r8, r3
    8182:	0ca8      	lsrs	r0, r5, #18
    8184:	4480      	add	r8, r0
    8186:	307d      	adds	r0, #125	; 0x7d
    8188:	00c1      	lsls	r1, r0, #3
    818a:	e5c2      	b.n	7d12 <_malloc_r+0x4e>
    818c:	3310      	adds	r3, #16
    818e:	9300      	str	r3, [sp, #0]
    8190:	e699      	b.n	7ec6 <_malloc_r+0x202>
    8192:	2a54      	cmp	r2, #84	; 0x54
    8194:	d826      	bhi.n	81e4 <_malloc_r+0x520>
    8196:	464b      	mov	r3, r9
    8198:	0b1a      	lsrs	r2, r3, #12
    819a:	0011      	movs	r1, r2
    819c:	326f      	adds	r2, #111	; 0x6f
    819e:	316e      	adds	r1, #110	; 0x6e
    81a0:	00d2      	lsls	r2, r2, #3
    81a2:	e729      	b.n	7ff8 <_malloc_r+0x334>
    81a4:	051b      	lsls	r3, r3, #20
    81a6:	d000      	beq.n	81aa <_malloc_r+0x4e6>
    81a8:	e6a6      	b.n	7ef8 <_malloc_r+0x234>
    81aa:	2001      	movs	r0, #1
    81ac:	9b00      	ldr	r3, [sp, #0]
    81ae:	68b2      	ldr	r2, [r6, #8]
    81b0:	4443      	add	r3, r8
    81b2:	4303      	orrs	r3, r0
    81b4:	6053      	str	r3, [r2, #4]
    81b6:	e6e6      	b.n	7f86 <_malloc_r+0x2c2>
    81b8:	21fe      	movs	r1, #254	; 0xfe
    81ba:	237e      	movs	r3, #126	; 0x7e
    81bc:	207f      	movs	r0, #127	; 0x7f
    81be:	0089      	lsls	r1, r1, #2
    81c0:	4698      	mov	r8, r3
    81c2:	e5a6      	b.n	7d12 <_malloc_r+0x4e>
    81c4:	2300      	movs	r3, #0
    81c6:	2001      	movs	r0, #1
    81c8:	469b      	mov	fp, r3
    81ca:	e6bd      	b.n	7f48 <_malloc_r+0x284>
    81cc:	0021      	movs	r1, r4
    81ce:	0038      	movs	r0, r7
    81d0:	3108      	adds	r1, #8
    81d2:	f7ff fa59 	bl	7688 <_free_r>
    81d6:	4653      	mov	r3, sl
    81d8:	6819      	ldr	r1, [r3, #0]
    81da:	e6d4      	b.n	7f86 <_malloc_r+0x2c2>
    81dc:	465b      	mov	r3, fp
    81de:	464a      	mov	r2, r9
    81e0:	601a      	str	r2, [r3, #0]
    81e2:	e694      	b.n	7f0e <_malloc_r+0x24a>
    81e4:	21aa      	movs	r1, #170	; 0xaa
    81e6:	0049      	lsls	r1, r1, #1
    81e8:	428a      	cmp	r2, r1
    81ea:	d806      	bhi.n	81fa <_malloc_r+0x536>
    81ec:	464b      	mov	r3, r9
    81ee:	0bda      	lsrs	r2, r3, #15
    81f0:	0011      	movs	r1, r2
    81f2:	3278      	adds	r2, #120	; 0x78
    81f4:	3177      	adds	r1, #119	; 0x77
    81f6:	00d2      	lsls	r2, r2, #3
    81f8:	e6fe      	b.n	7ff8 <_malloc_r+0x334>
    81fa:	490b      	ldr	r1, [pc, #44]	; (8228 <_malloc_r+0x564>)
    81fc:	428a      	cmp	r2, r1
    81fe:	d806      	bhi.n	820e <_malloc_r+0x54a>
    8200:	464b      	mov	r3, r9
    8202:	0c9a      	lsrs	r2, r3, #18
    8204:	0011      	movs	r1, r2
    8206:	327d      	adds	r2, #125	; 0x7d
    8208:	317c      	adds	r1, #124	; 0x7c
    820a:	00d2      	lsls	r2, r2, #3
    820c:	e6f4      	b.n	7ff8 <_malloc_r+0x334>
    820e:	22fe      	movs	r2, #254	; 0xfe
    8210:	217e      	movs	r1, #126	; 0x7e
    8212:	0092      	lsls	r2, r2, #2
    8214:	e6f0      	b.n	7ff8 <_malloc_r+0x334>
    8216:	6873      	ldr	r3, [r6, #4]
    8218:	e77e      	b.n	8118 <_malloc_r+0x454>
    821a:	002b      	movs	r3, r5
    821c:	08e8      	lsrs	r0, r5, #3
    821e:	3308      	adds	r3, #8
    8220:	e605      	b.n	7e2e <_malloc_r+0x16a>
    8222:	46c0      	nop			; (mov r8, r8)
    8224:	20000a90 	.word	0x20000a90
    8228:	00000554 	.word	0x00000554

0000822c <memchr>:
    822c:	b570      	push	{r4, r5, r6, lr}
    822e:	b2cd      	uxtb	r5, r1
    8230:	0783      	lsls	r3, r0, #30
    8232:	d034      	beq.n	829e <memchr+0x72>
    8234:	1e54      	subs	r4, r2, #1
    8236:	2a00      	cmp	r2, #0
    8238:	d01b      	beq.n	8272 <memchr+0x46>
    823a:	7803      	ldrb	r3, [r0, #0]
    823c:	42ab      	cmp	r3, r5
    823e:	d019      	beq.n	8274 <memchr+0x48>
    8240:	2203      	movs	r2, #3
    8242:	e004      	b.n	824e <memchr+0x22>
    8244:	3c01      	subs	r4, #1
    8246:	d314      	bcc.n	8272 <memchr+0x46>
    8248:	7803      	ldrb	r3, [r0, #0]
    824a:	42ab      	cmp	r3, r5
    824c:	d012      	beq.n	8274 <memchr+0x48>
    824e:	3001      	adds	r0, #1
    8250:	4210      	tst	r0, r2
    8252:	d1f7      	bne.n	8244 <memchr+0x18>
    8254:	2c03      	cmp	r4, #3
    8256:	d80e      	bhi.n	8276 <memchr+0x4a>
    8258:	2c00      	cmp	r4, #0
    825a:	d00a      	beq.n	8272 <memchr+0x46>
    825c:	7803      	ldrb	r3, [r0, #0]
    825e:	42ab      	cmp	r3, r5
    8260:	d008      	beq.n	8274 <memchr+0x48>
    8262:	1904      	adds	r4, r0, r4
    8264:	e002      	b.n	826c <memchr+0x40>
    8266:	7803      	ldrb	r3, [r0, #0]
    8268:	42ab      	cmp	r3, r5
    826a:	d003      	beq.n	8274 <memchr+0x48>
    826c:	3001      	adds	r0, #1
    826e:	4284      	cmp	r4, r0
    8270:	d1f9      	bne.n	8266 <memchr+0x3a>
    8272:	2000      	movs	r0, #0
    8274:	bd70      	pop	{r4, r5, r6, pc}
    8276:	22ff      	movs	r2, #255	; 0xff
    8278:	060b      	lsls	r3, r1, #24
    827a:	0c1b      	lsrs	r3, r3, #16
    827c:	4011      	ands	r1, r2
    827e:	4319      	orrs	r1, r3
    8280:	040b      	lsls	r3, r1, #16
    8282:	4e08      	ldr	r6, [pc, #32]	; (82a4 <memchr+0x78>)
    8284:	4319      	orrs	r1, r3
    8286:	6803      	ldr	r3, [r0, #0]
    8288:	4a07      	ldr	r2, [pc, #28]	; (82a8 <memchr+0x7c>)
    828a:	404b      	eors	r3, r1
    828c:	189a      	adds	r2, r3, r2
    828e:	439a      	bics	r2, r3
    8290:	4232      	tst	r2, r6
    8292:	d1e3      	bne.n	825c <memchr+0x30>
    8294:	3c04      	subs	r4, #4
    8296:	3004      	adds	r0, #4
    8298:	2c03      	cmp	r4, #3
    829a:	d8f4      	bhi.n	8286 <memchr+0x5a>
    829c:	e7dc      	b.n	8258 <memchr+0x2c>
    829e:	0014      	movs	r4, r2
    82a0:	e7d8      	b.n	8254 <memchr+0x28>
    82a2:	46c0      	nop			; (mov r8, r8)
    82a4:	80808080 	.word	0x80808080
    82a8:	fefefeff 	.word	0xfefefeff

000082ac <memmove>:
    82ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    82ae:	4288      	cmp	r0, r1
    82b0:	d90a      	bls.n	82c8 <memmove+0x1c>
    82b2:	188b      	adds	r3, r1, r2
    82b4:	4298      	cmp	r0, r3
    82b6:	d207      	bcs.n	82c8 <memmove+0x1c>
    82b8:	1e53      	subs	r3, r2, #1
    82ba:	2a00      	cmp	r2, #0
    82bc:	d003      	beq.n	82c6 <memmove+0x1a>
    82be:	5cca      	ldrb	r2, [r1, r3]
    82c0:	54c2      	strb	r2, [r0, r3]
    82c2:	3b01      	subs	r3, #1
    82c4:	d2fb      	bcs.n	82be <memmove+0x12>
    82c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    82c8:	0005      	movs	r5, r0
    82ca:	2a0f      	cmp	r2, #15
    82cc:	d808      	bhi.n	82e0 <memmove+0x34>
    82ce:	2a00      	cmp	r2, #0
    82d0:	d0f9      	beq.n	82c6 <memmove+0x1a>
    82d2:	2300      	movs	r3, #0
    82d4:	5ccc      	ldrb	r4, [r1, r3]
    82d6:	54ec      	strb	r4, [r5, r3]
    82d8:	3301      	adds	r3, #1
    82da:	4293      	cmp	r3, r2
    82dc:	d1fa      	bne.n	82d4 <memmove+0x28>
    82de:	e7f2      	b.n	82c6 <memmove+0x1a>
    82e0:	000b      	movs	r3, r1
    82e2:	4303      	orrs	r3, r0
    82e4:	079b      	lsls	r3, r3, #30
    82e6:	d12d      	bne.n	8344 <memmove+0x98>
    82e8:	0015      	movs	r5, r2
    82ea:	000c      	movs	r4, r1
    82ec:	0003      	movs	r3, r0
    82ee:	3d10      	subs	r5, #16
    82f0:	092f      	lsrs	r7, r5, #4
    82f2:	3701      	adds	r7, #1
    82f4:	013f      	lsls	r7, r7, #4
    82f6:	19c7      	adds	r7, r0, r7
    82f8:	6826      	ldr	r6, [r4, #0]
    82fa:	601e      	str	r6, [r3, #0]
    82fc:	6866      	ldr	r6, [r4, #4]
    82fe:	605e      	str	r6, [r3, #4]
    8300:	68a6      	ldr	r6, [r4, #8]
    8302:	609e      	str	r6, [r3, #8]
    8304:	68e6      	ldr	r6, [r4, #12]
    8306:	3410      	adds	r4, #16
    8308:	60de      	str	r6, [r3, #12]
    830a:	3310      	adds	r3, #16
    830c:	429f      	cmp	r7, r3
    830e:	d1f3      	bne.n	82f8 <memmove+0x4c>
    8310:	240f      	movs	r4, #15
    8312:	43a5      	bics	r5, r4
    8314:	3510      	adds	r5, #16
    8316:	1949      	adds	r1, r1, r5
    8318:	4014      	ands	r4, r2
    831a:	1945      	adds	r5, r0, r5
    831c:	2c03      	cmp	r4, #3
    831e:	d913      	bls.n	8348 <memmove+0x9c>
    8320:	2300      	movs	r3, #0
    8322:	1f27      	subs	r7, r4, #4
    8324:	08be      	lsrs	r6, r7, #2
    8326:	3601      	adds	r6, #1
    8328:	00b6      	lsls	r6, r6, #2
    832a:	58cc      	ldr	r4, [r1, r3]
    832c:	50ec      	str	r4, [r5, r3]
    832e:	3304      	adds	r3, #4
    8330:	42b3      	cmp	r3, r6
    8332:	d1fa      	bne.n	832a <memmove+0x7e>
    8334:	2603      	movs	r6, #3
    8336:	43b7      	bics	r7, r6
    8338:	1d3c      	adds	r4, r7, #4
    833a:	1909      	adds	r1, r1, r4
    833c:	192d      	adds	r5, r5, r4
    833e:	4032      	ands	r2, r6
    8340:	d1c7      	bne.n	82d2 <memmove+0x26>
    8342:	e7c0      	b.n	82c6 <memmove+0x1a>
    8344:	0005      	movs	r5, r0
    8346:	e7c4      	b.n	82d2 <memmove+0x26>
    8348:	0022      	movs	r2, r4
    834a:	e7c0      	b.n	82ce <memmove+0x22>

0000834c <__malloc_lock>:
    834c:	b510      	push	{r4, lr}
    834e:	4802      	ldr	r0, [pc, #8]	; (8358 <__malloc_lock+0xc>)
    8350:	f7ff fc32 	bl	7bb8 <__retarget_lock_acquire_recursive>
    8354:	bd10      	pop	{r4, pc}
    8356:	46c0      	nop			; (mov r8, r8)
    8358:	20000b9c 	.word	0x20000b9c

0000835c <__malloc_unlock>:
    835c:	b510      	push	{r4, lr}
    835e:	4802      	ldr	r0, [pc, #8]	; (8368 <__malloc_unlock+0xc>)
    8360:	f7ff fc2c 	bl	7bbc <__retarget_lock_release_recursive>
    8364:	bd10      	pop	{r4, pc}
    8366:	46c0      	nop			; (mov r8, r8)
    8368:	20000b9c 	.word	0x20000b9c

0000836c <_Balloc>:
    836c:	b570      	push	{r4, r5, r6, lr}
    836e:	0004      	movs	r4, r0
    8370:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    8372:	000d      	movs	r5, r1
    8374:	2800      	cmp	r0, #0
    8376:	d00a      	beq.n	838e <_Balloc+0x22>
    8378:	00ab      	lsls	r3, r5, #2
    837a:	18c3      	adds	r3, r0, r3
    837c:	6818      	ldr	r0, [r3, #0]
    837e:	2800      	cmp	r0, #0
    8380:	d00f      	beq.n	83a2 <_Balloc+0x36>
    8382:	6802      	ldr	r2, [r0, #0]
    8384:	601a      	str	r2, [r3, #0]
    8386:	2300      	movs	r3, #0
    8388:	6103      	str	r3, [r0, #16]
    838a:	60c3      	str	r3, [r0, #12]
    838c:	bd70      	pop	{r4, r5, r6, pc}
    838e:	2221      	movs	r2, #33	; 0x21
    8390:	2104      	movs	r1, #4
    8392:	0020      	movs	r0, r4
    8394:	f000 fe2a 	bl	8fec <_calloc_r>
    8398:	64e0      	str	r0, [r4, #76]	; 0x4c
    839a:	2800      	cmp	r0, #0
    839c:	d1ec      	bne.n	8378 <_Balloc+0xc>
    839e:	2000      	movs	r0, #0
    83a0:	e7f4      	b.n	838c <_Balloc+0x20>
    83a2:	2601      	movs	r6, #1
    83a4:	40ae      	lsls	r6, r5
    83a6:	1d72      	adds	r2, r6, #5
    83a8:	0092      	lsls	r2, r2, #2
    83aa:	2101      	movs	r1, #1
    83ac:	0020      	movs	r0, r4
    83ae:	f000 fe1d 	bl	8fec <_calloc_r>
    83b2:	2800      	cmp	r0, #0
    83b4:	d0f3      	beq.n	839e <_Balloc+0x32>
    83b6:	6045      	str	r5, [r0, #4]
    83b8:	6086      	str	r6, [r0, #8]
    83ba:	e7e4      	b.n	8386 <_Balloc+0x1a>

000083bc <_Bfree>:
    83bc:	2900      	cmp	r1, #0
    83be:	d006      	beq.n	83ce <_Bfree+0x12>
    83c0:	684b      	ldr	r3, [r1, #4]
    83c2:	009a      	lsls	r2, r3, #2
    83c4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    83c6:	189b      	adds	r3, r3, r2
    83c8:	681a      	ldr	r2, [r3, #0]
    83ca:	600a      	str	r2, [r1, #0]
    83cc:	6019      	str	r1, [r3, #0]
    83ce:	4770      	bx	lr

000083d0 <__multadd>:
    83d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    83d2:	46ce      	mov	lr, r9
    83d4:	4647      	mov	r7, r8
    83d6:	4681      	mov	r9, r0
    83d8:	0008      	movs	r0, r1
    83da:	b580      	push	{r7, lr}
    83dc:	000d      	movs	r5, r1
    83de:	690c      	ldr	r4, [r1, #16]
    83e0:	001f      	movs	r7, r3
    83e2:	2100      	movs	r1, #0
    83e4:	3014      	adds	r0, #20
    83e6:	6803      	ldr	r3, [r0, #0]
    83e8:	3101      	adds	r1, #1
    83ea:	041e      	lsls	r6, r3, #16
    83ec:	0c36      	lsrs	r6, r6, #16
    83ee:	4356      	muls	r6, r2
    83f0:	0c1b      	lsrs	r3, r3, #16
    83f2:	4353      	muls	r3, r2
    83f4:	19f6      	adds	r6, r6, r7
    83f6:	0c37      	lsrs	r7, r6, #16
    83f8:	19db      	adds	r3, r3, r7
    83fa:	0436      	lsls	r6, r6, #16
    83fc:	0c1f      	lsrs	r7, r3, #16
    83fe:	0c36      	lsrs	r6, r6, #16
    8400:	041b      	lsls	r3, r3, #16
    8402:	199b      	adds	r3, r3, r6
    8404:	c008      	stmia	r0!, {r3}
    8406:	428c      	cmp	r4, r1
    8408:	dced      	bgt.n	83e6 <__multadd+0x16>
    840a:	2f00      	cmp	r7, #0
    840c:	d008      	beq.n	8420 <__multadd+0x50>
    840e:	68ab      	ldr	r3, [r5, #8]
    8410:	429c      	cmp	r4, r3
    8412:	da0a      	bge.n	842a <__multadd+0x5a>
    8414:	1d23      	adds	r3, r4, #4
    8416:	009b      	lsls	r3, r3, #2
    8418:	18eb      	adds	r3, r5, r3
    841a:	3401      	adds	r4, #1
    841c:	605f      	str	r7, [r3, #4]
    841e:	612c      	str	r4, [r5, #16]
    8420:	0028      	movs	r0, r5
    8422:	bc0c      	pop	{r2, r3}
    8424:	4690      	mov	r8, r2
    8426:	4699      	mov	r9, r3
    8428:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    842a:	686b      	ldr	r3, [r5, #4]
    842c:	4648      	mov	r0, r9
    842e:	1c59      	adds	r1, r3, #1
    8430:	f7ff ff9c 	bl	836c <_Balloc>
    8434:	0029      	movs	r1, r5
    8436:	692b      	ldr	r3, [r5, #16]
    8438:	4680      	mov	r8, r0
    843a:	1c9a      	adds	r2, r3, #2
    843c:	0092      	lsls	r2, r2, #2
    843e:	310c      	adds	r1, #12
    8440:	300c      	adds	r0, #12
    8442:	f7fc f92f 	bl	46a4 <memcpy>
    8446:	686b      	ldr	r3, [r5, #4]
    8448:	009a      	lsls	r2, r3, #2
    844a:	464b      	mov	r3, r9
    844c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    844e:	189b      	adds	r3, r3, r2
    8450:	681a      	ldr	r2, [r3, #0]
    8452:	602a      	str	r2, [r5, #0]
    8454:	601d      	str	r5, [r3, #0]
    8456:	4645      	mov	r5, r8
    8458:	e7dc      	b.n	8414 <__multadd+0x44>
    845a:	46c0      	nop			; (mov r8, r8)

0000845c <__hi0bits>:
    845c:	0003      	movs	r3, r0
    845e:	0c02      	lsrs	r2, r0, #16
    8460:	2000      	movs	r0, #0
    8462:	2a00      	cmp	r2, #0
    8464:	d101      	bne.n	846a <__hi0bits+0xe>
    8466:	041b      	lsls	r3, r3, #16
    8468:	3010      	adds	r0, #16
    846a:	0e1a      	lsrs	r2, r3, #24
    846c:	d101      	bne.n	8472 <__hi0bits+0x16>
    846e:	3008      	adds	r0, #8
    8470:	021b      	lsls	r3, r3, #8
    8472:	0f1a      	lsrs	r2, r3, #28
    8474:	d101      	bne.n	847a <__hi0bits+0x1e>
    8476:	3004      	adds	r0, #4
    8478:	011b      	lsls	r3, r3, #4
    847a:	0f9a      	lsrs	r2, r3, #30
    847c:	d101      	bne.n	8482 <__hi0bits+0x26>
    847e:	3002      	adds	r0, #2
    8480:	009b      	lsls	r3, r3, #2
    8482:	2b00      	cmp	r3, #0
    8484:	db03      	blt.n	848e <__hi0bits+0x32>
    8486:	3001      	adds	r0, #1
    8488:	005b      	lsls	r3, r3, #1
    848a:	d400      	bmi.n	848e <__hi0bits+0x32>
    848c:	2020      	movs	r0, #32
    848e:	4770      	bx	lr

00008490 <__lo0bits>:
    8490:	6803      	ldr	r3, [r0, #0]
    8492:	075a      	lsls	r2, r3, #29
    8494:	d009      	beq.n	84aa <__lo0bits+0x1a>
    8496:	2200      	movs	r2, #0
    8498:	07d9      	lsls	r1, r3, #31
    849a:	d404      	bmi.n	84a6 <__lo0bits+0x16>
    849c:	079a      	lsls	r2, r3, #30
    849e:	d420      	bmi.n	84e2 <__lo0bits+0x52>
    84a0:	2202      	movs	r2, #2
    84a2:	089b      	lsrs	r3, r3, #2
    84a4:	6003      	str	r3, [r0, #0]
    84a6:	0010      	movs	r0, r2
    84a8:	4770      	bx	lr
    84aa:	0419      	lsls	r1, r3, #16
    84ac:	2200      	movs	r2, #0
    84ae:	2900      	cmp	r1, #0
    84b0:	d101      	bne.n	84b6 <__lo0bits+0x26>
    84b2:	0c1b      	lsrs	r3, r3, #16
    84b4:	3210      	adds	r2, #16
    84b6:	21ff      	movs	r1, #255	; 0xff
    84b8:	4219      	tst	r1, r3
    84ba:	d101      	bne.n	84c0 <__lo0bits+0x30>
    84bc:	3208      	adds	r2, #8
    84be:	0a1b      	lsrs	r3, r3, #8
    84c0:	0719      	lsls	r1, r3, #28
    84c2:	d101      	bne.n	84c8 <__lo0bits+0x38>
    84c4:	3204      	adds	r2, #4
    84c6:	091b      	lsrs	r3, r3, #4
    84c8:	0799      	lsls	r1, r3, #30
    84ca:	d101      	bne.n	84d0 <__lo0bits+0x40>
    84cc:	3202      	adds	r2, #2
    84ce:	089b      	lsrs	r3, r3, #2
    84d0:	07d9      	lsls	r1, r3, #31
    84d2:	d404      	bmi.n	84de <__lo0bits+0x4e>
    84d4:	085b      	lsrs	r3, r3, #1
    84d6:	d101      	bne.n	84dc <__lo0bits+0x4c>
    84d8:	2220      	movs	r2, #32
    84da:	e7e4      	b.n	84a6 <__lo0bits+0x16>
    84dc:	3201      	adds	r2, #1
    84de:	6003      	str	r3, [r0, #0]
    84e0:	e7e1      	b.n	84a6 <__lo0bits+0x16>
    84e2:	085b      	lsrs	r3, r3, #1
    84e4:	6003      	str	r3, [r0, #0]
    84e6:	2201      	movs	r2, #1
    84e8:	e7dd      	b.n	84a6 <__lo0bits+0x16>
    84ea:	46c0      	nop			; (mov r8, r8)

000084ec <__i2b>:
    84ec:	b510      	push	{r4, lr}
    84ee:	000c      	movs	r4, r1
    84f0:	2101      	movs	r1, #1
    84f2:	f7ff ff3b 	bl	836c <_Balloc>
    84f6:	2301      	movs	r3, #1
    84f8:	6144      	str	r4, [r0, #20]
    84fa:	6103      	str	r3, [r0, #16]
    84fc:	bd10      	pop	{r4, pc}
    84fe:	46c0      	nop			; (mov r8, r8)

00008500 <__multiply>:
    8500:	b5f0      	push	{r4, r5, r6, r7, lr}
    8502:	4657      	mov	r7, sl
    8504:	464e      	mov	r6, r9
    8506:	4645      	mov	r5, r8
    8508:	46de      	mov	lr, fp
    850a:	b5e0      	push	{r5, r6, r7, lr}
    850c:	6914      	ldr	r4, [r2, #16]
    850e:	690e      	ldr	r6, [r1, #16]
    8510:	b085      	sub	sp, #20
    8512:	000f      	movs	r7, r1
    8514:	0015      	movs	r5, r2
    8516:	42a6      	cmp	r6, r4
    8518:	da04      	bge.n	8524 <__multiply+0x24>
    851a:	0033      	movs	r3, r6
    851c:	0017      	movs	r7, r2
    851e:	0026      	movs	r6, r4
    8520:	000d      	movs	r5, r1
    8522:	001c      	movs	r4, r3
    8524:	1933      	adds	r3, r6, r4
    8526:	4698      	mov	r8, r3
    8528:	68bb      	ldr	r3, [r7, #8]
    852a:	6879      	ldr	r1, [r7, #4]
    852c:	4598      	cmp	r8, r3
    852e:	dd00      	ble.n	8532 <__multiply+0x32>
    8530:	3101      	adds	r1, #1
    8532:	f7ff ff1b 	bl	836c <_Balloc>
    8536:	2214      	movs	r2, #20
    8538:	0003      	movs	r3, r0
    853a:	4694      	mov	ip, r2
    853c:	4463      	add	r3, ip
    853e:	469b      	mov	fp, r3
    8540:	4643      	mov	r3, r8
    8542:	009b      	lsls	r3, r3, #2
    8544:	445b      	add	r3, fp
    8546:	0019      	movs	r1, r3
    8548:	9302      	str	r3, [sp, #8]
    854a:	9003      	str	r0, [sp, #12]
    854c:	465b      	mov	r3, fp
    854e:	2200      	movs	r2, #0
    8550:	458b      	cmp	fp, r1
    8552:	d203      	bcs.n	855c <__multiply+0x5c>
    8554:	9902      	ldr	r1, [sp, #8]
    8556:	c304      	stmia	r3!, {r2}
    8558:	4299      	cmp	r1, r3
    855a:	d8fc      	bhi.n	8556 <__multiply+0x56>
    855c:	2314      	movs	r3, #20
    855e:	00a4      	lsls	r4, r4, #2
    8560:	469a      	mov	sl, r3
    8562:	3714      	adds	r7, #20
    8564:	0023      	movs	r3, r4
    8566:	46bc      	mov	ip, r7
    8568:	44aa      	add	sl, r5
    856a:	00b6      	lsls	r6, r6, #2
    856c:	4453      	add	r3, sl
    856e:	9700      	str	r7, [sp, #0]
    8570:	44b4      	add	ip, r6
    8572:	9301      	str	r3, [sp, #4]
    8574:	459a      	cmp	sl, r3
    8576:	d24f      	bcs.n	8618 <__multiply+0x118>
    8578:	4653      	mov	r3, sl
    857a:	681b      	ldr	r3, [r3, #0]
    857c:	041e      	lsls	r6, r3, #16
    857e:	0c36      	lsrs	r6, r6, #16
    8580:	d020      	beq.n	85c4 <__multiply+0xc4>
    8582:	465c      	mov	r4, fp
    8584:	2700      	movs	r7, #0
    8586:	9d00      	ldr	r5, [sp, #0]
    8588:	0021      	movs	r1, r4
    858a:	cc08      	ldmia	r4!, {r3}
    858c:	cd04      	ldmia	r5!, {r2}
    858e:	4699      	mov	r9, r3
    8590:	4648      	mov	r0, r9
    8592:	0413      	lsls	r3, r2, #16
    8594:	0c1b      	lsrs	r3, r3, #16
    8596:	4373      	muls	r3, r6
    8598:	0400      	lsls	r0, r0, #16
    859a:	0c00      	lsrs	r0, r0, #16
    859c:	181b      	adds	r3, r3, r0
    859e:	19d8      	adds	r0, r3, r7
    85a0:	0c13      	lsrs	r3, r2, #16
    85a2:	464a      	mov	r2, r9
    85a4:	4373      	muls	r3, r6
    85a6:	0c12      	lsrs	r2, r2, #16
    85a8:	189b      	adds	r3, r3, r2
    85aa:	0c02      	lsrs	r2, r0, #16
    85ac:	189b      	adds	r3, r3, r2
    85ae:	0402      	lsls	r2, r0, #16
    85b0:	0c1f      	lsrs	r7, r3, #16
    85b2:	0c12      	lsrs	r2, r2, #16
    85b4:	041b      	lsls	r3, r3, #16
    85b6:	4313      	orrs	r3, r2
    85b8:	600b      	str	r3, [r1, #0]
    85ba:	45ac      	cmp	ip, r5
    85bc:	d8e4      	bhi.n	8588 <__multiply+0x88>
    85be:	4653      	mov	r3, sl
    85c0:	6027      	str	r7, [r4, #0]
    85c2:	681b      	ldr	r3, [r3, #0]
    85c4:	0c1e      	lsrs	r6, r3, #16
    85c6:	d020      	beq.n	860a <__multiply+0x10a>
    85c8:	465b      	mov	r3, fp
    85ca:	2100      	movs	r1, #0
    85cc:	681b      	ldr	r3, [r3, #0]
    85ce:	465c      	mov	r4, fp
    85d0:	0018      	movs	r0, r3
    85d2:	000f      	movs	r7, r1
    85d4:	4662      	mov	r2, ip
    85d6:	9d00      	ldr	r5, [sp, #0]
    85d8:	8829      	ldrh	r1, [r5, #0]
    85da:	0c00      	lsrs	r0, r0, #16
    85dc:	4371      	muls	r1, r6
    85de:	1809      	adds	r1, r1, r0
    85e0:	19c9      	adds	r1, r1, r7
    85e2:	041b      	lsls	r3, r3, #16
    85e4:	0408      	lsls	r0, r1, #16
    85e6:	0c1b      	lsrs	r3, r3, #16
    85e8:	4303      	orrs	r3, r0
    85ea:	6023      	str	r3, [r4, #0]
    85ec:	cd08      	ldmia	r5!, {r3}
    85ee:	6860      	ldr	r0, [r4, #4]
    85f0:	0c1b      	lsrs	r3, r3, #16
    85f2:	4373      	muls	r3, r6
    85f4:	0407      	lsls	r7, r0, #16
    85f6:	0c3f      	lsrs	r7, r7, #16
    85f8:	19db      	adds	r3, r3, r7
    85fa:	0c09      	lsrs	r1, r1, #16
    85fc:	185b      	adds	r3, r3, r1
    85fe:	0c1f      	lsrs	r7, r3, #16
    8600:	3404      	adds	r4, #4
    8602:	42aa      	cmp	r2, r5
    8604:	d8e8      	bhi.n	85d8 <__multiply+0xd8>
    8606:	4694      	mov	ip, r2
    8608:	6023      	str	r3, [r4, #0]
    860a:	2304      	movs	r3, #4
    860c:	4699      	mov	r9, r3
    860e:	9b01      	ldr	r3, [sp, #4]
    8610:	44ca      	add	sl, r9
    8612:	44cb      	add	fp, r9
    8614:	4553      	cmp	r3, sl
    8616:	d8af      	bhi.n	8578 <__multiply+0x78>
    8618:	4643      	mov	r3, r8
    861a:	2b00      	cmp	r3, #0
    861c:	dd0e      	ble.n	863c <__multiply+0x13c>
    861e:	9b02      	ldr	r3, [sp, #8]
    8620:	3b04      	subs	r3, #4
    8622:	681a      	ldr	r2, [r3, #0]
    8624:	2a00      	cmp	r2, #0
    8626:	d109      	bne.n	863c <__multiply+0x13c>
    8628:	4642      	mov	r2, r8
    862a:	e003      	b.n	8634 <__multiply+0x134>
    862c:	3b04      	subs	r3, #4
    862e:	6819      	ldr	r1, [r3, #0]
    8630:	2900      	cmp	r1, #0
    8632:	d102      	bne.n	863a <__multiply+0x13a>
    8634:	3a01      	subs	r2, #1
    8636:	2a00      	cmp	r2, #0
    8638:	d1f8      	bne.n	862c <__multiply+0x12c>
    863a:	4690      	mov	r8, r2
    863c:	9b03      	ldr	r3, [sp, #12]
    863e:	4642      	mov	r2, r8
    8640:	0018      	movs	r0, r3
    8642:	611a      	str	r2, [r3, #16]
    8644:	b005      	add	sp, #20
    8646:	bc3c      	pop	{r2, r3, r4, r5}
    8648:	4690      	mov	r8, r2
    864a:	4699      	mov	r9, r3
    864c:	46a2      	mov	sl, r4
    864e:	46ab      	mov	fp, r5
    8650:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8652:	46c0      	nop			; (mov r8, r8)

00008654 <__pow5mult>:
    8654:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8656:	4647      	mov	r7, r8
    8658:	46ce      	mov	lr, r9
    865a:	2303      	movs	r3, #3
    865c:	b580      	push	{r7, lr}
    865e:	4680      	mov	r8, r0
    8660:	000f      	movs	r7, r1
    8662:	0014      	movs	r4, r2
    8664:	4013      	ands	r3, r2
    8666:	d13a      	bne.n	86de <__pow5mult+0x8a>
    8668:	10a4      	asrs	r4, r4, #2
    866a:	003e      	movs	r6, r7
    866c:	2c00      	cmp	r4, #0
    866e:	d025      	beq.n	86bc <__pow5mult+0x68>
    8670:	4643      	mov	r3, r8
    8672:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    8674:	2d00      	cmp	r5, #0
    8676:	d03b      	beq.n	86f0 <__pow5mult+0x9c>
    8678:	003e      	movs	r6, r7
    867a:	2300      	movs	r3, #0
    867c:	2701      	movs	r7, #1
    867e:	4699      	mov	r9, r3
    8680:	4227      	tst	r7, r4
    8682:	d107      	bne.n	8694 <__pow5mult+0x40>
    8684:	1064      	asrs	r4, r4, #1
    8686:	d019      	beq.n	86bc <__pow5mult+0x68>
    8688:	6828      	ldr	r0, [r5, #0]
    868a:	2800      	cmp	r0, #0
    868c:	d01b      	beq.n	86c6 <__pow5mult+0x72>
    868e:	0005      	movs	r5, r0
    8690:	4227      	tst	r7, r4
    8692:	d0f7      	beq.n	8684 <__pow5mult+0x30>
    8694:	002a      	movs	r2, r5
    8696:	0031      	movs	r1, r6
    8698:	4640      	mov	r0, r8
    869a:	f7ff ff31 	bl	8500 <__multiply>
    869e:	2e00      	cmp	r6, #0
    86a0:	d01b      	beq.n	86da <__pow5mult+0x86>
    86a2:	4642      	mov	r2, r8
    86a4:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    86a6:	6873      	ldr	r3, [r6, #4]
    86a8:	4694      	mov	ip, r2
    86aa:	009b      	lsls	r3, r3, #2
    86ac:	4463      	add	r3, ip
    86ae:	681a      	ldr	r2, [r3, #0]
    86b0:	1064      	asrs	r4, r4, #1
    86b2:	6032      	str	r2, [r6, #0]
    86b4:	601e      	str	r6, [r3, #0]
    86b6:	0006      	movs	r6, r0
    86b8:	2c00      	cmp	r4, #0
    86ba:	d1e5      	bne.n	8688 <__pow5mult+0x34>
    86bc:	0030      	movs	r0, r6
    86be:	bc0c      	pop	{r2, r3}
    86c0:	4690      	mov	r8, r2
    86c2:	4699      	mov	r9, r3
    86c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    86c6:	002a      	movs	r2, r5
    86c8:	0029      	movs	r1, r5
    86ca:	4640      	mov	r0, r8
    86cc:	f7ff ff18 	bl	8500 <__multiply>
    86d0:	464b      	mov	r3, r9
    86d2:	6028      	str	r0, [r5, #0]
    86d4:	6003      	str	r3, [r0, #0]
    86d6:	0005      	movs	r5, r0
    86d8:	e7da      	b.n	8690 <__pow5mult+0x3c>
    86da:	0006      	movs	r6, r0
    86dc:	e7d2      	b.n	8684 <__pow5mult+0x30>
    86de:	4a0b      	ldr	r2, [pc, #44]	; (870c <__pow5mult+0xb8>)
    86e0:	3b01      	subs	r3, #1
    86e2:	009b      	lsls	r3, r3, #2
    86e4:	589a      	ldr	r2, [r3, r2]
    86e6:	2300      	movs	r3, #0
    86e8:	f7ff fe72 	bl	83d0 <__multadd>
    86ec:	0007      	movs	r7, r0
    86ee:	e7bb      	b.n	8668 <__pow5mult+0x14>
    86f0:	2101      	movs	r1, #1
    86f2:	4640      	mov	r0, r8
    86f4:	f7ff fe3a 	bl	836c <_Balloc>
    86f8:	4b05      	ldr	r3, [pc, #20]	; (8710 <__pow5mult+0xbc>)
    86fa:	0005      	movs	r5, r0
    86fc:	6143      	str	r3, [r0, #20]
    86fe:	2301      	movs	r3, #1
    8700:	6103      	str	r3, [r0, #16]
    8702:	4643      	mov	r3, r8
    8704:	6498      	str	r0, [r3, #72]	; 0x48
    8706:	2300      	movs	r3, #0
    8708:	6003      	str	r3, [r0, #0]
    870a:	e7b5      	b.n	8678 <__pow5mult+0x24>
    870c:	0000a380 	.word	0x0000a380
    8710:	00000271 	.word	0x00000271

00008714 <__lshift>:
    8714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8716:	464e      	mov	r6, r9
    8718:	4645      	mov	r5, r8
    871a:	46de      	mov	lr, fp
    871c:	4657      	mov	r7, sl
    871e:	b5e0      	push	{r5, r6, r7, lr}
    8720:	000e      	movs	r6, r1
    8722:	6933      	ldr	r3, [r6, #16]
    8724:	1154      	asrs	r4, r2, #5
    8726:	4698      	mov	r8, r3
    8728:	44a0      	add	r8, r4
    872a:	4643      	mov	r3, r8
    872c:	1c5d      	adds	r5, r3, #1
    872e:	68b3      	ldr	r3, [r6, #8]
    8730:	4683      	mov	fp, r0
    8732:	4691      	mov	r9, r2
    8734:	6849      	ldr	r1, [r1, #4]
    8736:	429d      	cmp	r5, r3
    8738:	dd03      	ble.n	8742 <__lshift+0x2e>
    873a:	3101      	adds	r1, #1
    873c:	005b      	lsls	r3, r3, #1
    873e:	429d      	cmp	r5, r3
    8740:	dcfb      	bgt.n	873a <__lshift+0x26>
    8742:	4658      	mov	r0, fp
    8744:	f7ff fe12 	bl	836c <_Balloc>
    8748:	0003      	movs	r3, r0
    874a:	4684      	mov	ip, r0
    874c:	3314      	adds	r3, #20
    874e:	2c00      	cmp	r4, #0
    8750:	dd06      	ble.n	8760 <__lshift+0x4c>
    8752:	2100      	movs	r1, #0
    8754:	00a4      	lsls	r4, r4, #2
    8756:	001a      	movs	r2, r3
    8758:	191b      	adds	r3, r3, r4
    875a:	c202      	stmia	r2!, {r1}
    875c:	4293      	cmp	r3, r2
    875e:	d1fc      	bne.n	875a <__lshift+0x46>
    8760:	6932      	ldr	r2, [r6, #16]
    8762:	4648      	mov	r0, r9
    8764:	0097      	lsls	r7, r2, #2
    8766:	0031      	movs	r1, r6
    8768:	221f      	movs	r2, #31
    876a:	3114      	adds	r1, #20
    876c:	4010      	ands	r0, r2
    876e:	19cf      	adds	r7, r1, r7
    8770:	4681      	mov	r9, r0
    8772:	2800      	cmp	r0, #0
    8774:	d025      	beq.n	87c2 <__lshift+0xae>
    8776:	2220      	movs	r2, #32
    8778:	1a12      	subs	r2, r2, r0
    877a:	4692      	mov	sl, r2
    877c:	2200      	movs	r2, #0
    877e:	4648      	mov	r0, r9
    8780:	680c      	ldr	r4, [r1, #0]
    8782:	4084      	lsls	r4, r0
    8784:	4650      	mov	r0, sl
    8786:	4314      	orrs	r4, r2
    8788:	601c      	str	r4, [r3, #0]
    878a:	c904      	ldmia	r1!, {r2}
    878c:	3304      	adds	r3, #4
    878e:	40c2      	lsrs	r2, r0
    8790:	428f      	cmp	r7, r1
    8792:	d8f4      	bhi.n	877e <__lshift+0x6a>
    8794:	601a      	str	r2, [r3, #0]
    8796:	2a00      	cmp	r2, #0
    8798:	d001      	beq.n	879e <__lshift+0x8a>
    879a:	4645      	mov	r5, r8
    879c:	3502      	adds	r5, #2
    879e:	4663      	mov	r3, ip
    87a0:	3d01      	subs	r5, #1
    87a2:	611d      	str	r5, [r3, #16]
    87a4:	6873      	ldr	r3, [r6, #4]
    87a6:	4660      	mov	r0, ip
    87a8:	009a      	lsls	r2, r3, #2
    87aa:	465b      	mov	r3, fp
    87ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    87ae:	189b      	adds	r3, r3, r2
    87b0:	681a      	ldr	r2, [r3, #0]
    87b2:	6032      	str	r2, [r6, #0]
    87b4:	601e      	str	r6, [r3, #0]
    87b6:	bc3c      	pop	{r2, r3, r4, r5}
    87b8:	4690      	mov	r8, r2
    87ba:	4699      	mov	r9, r3
    87bc:	46a2      	mov	sl, r4
    87be:	46ab      	mov	fp, r5
    87c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    87c2:	c904      	ldmia	r1!, {r2}
    87c4:	c304      	stmia	r3!, {r2}
    87c6:	428f      	cmp	r7, r1
    87c8:	d9e9      	bls.n	879e <__lshift+0x8a>
    87ca:	c904      	ldmia	r1!, {r2}
    87cc:	c304      	stmia	r3!, {r2}
    87ce:	428f      	cmp	r7, r1
    87d0:	d8f7      	bhi.n	87c2 <__lshift+0xae>
    87d2:	e7e4      	b.n	879e <__lshift+0x8a>

000087d4 <__mcmp>:
    87d4:	690a      	ldr	r2, [r1, #16]
    87d6:	6903      	ldr	r3, [r0, #16]
    87d8:	b530      	push	{r4, r5, lr}
    87da:	0005      	movs	r5, r0
    87dc:	1a98      	subs	r0, r3, r2
    87de:	d111      	bne.n	8804 <__mcmp+0x30>
    87e0:	0092      	lsls	r2, r2, #2
    87e2:	3514      	adds	r5, #20
    87e4:	3114      	adds	r1, #20
    87e6:	18ab      	adds	r3, r5, r2
    87e8:	1889      	adds	r1, r1, r2
    87ea:	e001      	b.n	87f0 <__mcmp+0x1c>
    87ec:	429d      	cmp	r5, r3
    87ee:	d209      	bcs.n	8804 <__mcmp+0x30>
    87f0:	3b04      	subs	r3, #4
    87f2:	3904      	subs	r1, #4
    87f4:	681c      	ldr	r4, [r3, #0]
    87f6:	680a      	ldr	r2, [r1, #0]
    87f8:	4294      	cmp	r4, r2
    87fa:	d0f7      	beq.n	87ec <__mcmp+0x18>
    87fc:	4294      	cmp	r4, r2
    87fe:	4180      	sbcs	r0, r0
    8800:	2201      	movs	r2, #1
    8802:	4310      	orrs	r0, r2
    8804:	bd30      	pop	{r4, r5, pc}
    8806:	46c0      	nop			; (mov r8, r8)

00008808 <__mdiff>:
    8808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    880a:	4645      	mov	r5, r8
    880c:	46de      	mov	lr, fp
    880e:	4657      	mov	r7, sl
    8810:	464e      	mov	r6, r9
    8812:	0014      	movs	r4, r2
    8814:	690b      	ldr	r3, [r1, #16]
    8816:	6912      	ldr	r2, [r2, #16]
    8818:	b5e0      	push	{r5, r6, r7, lr}
    881a:	4688      	mov	r8, r1
    881c:	1a9d      	subs	r5, r3, r2
    881e:	d11a      	bne.n	8856 <__mdiff+0x4e>
    8820:	000f      	movs	r7, r1
    8822:	2114      	movs	r1, #20
    8824:	468c      	mov	ip, r1
    8826:	0092      	lsls	r2, r2, #2
    8828:	3714      	adds	r7, #20
    882a:	44a4      	add	ip, r4
    882c:	18bb      	adds	r3, r7, r2
    882e:	4462      	add	r2, ip
    8830:	e002      	b.n	8838 <__mdiff+0x30>
    8832:	429f      	cmp	r7, r3
    8834:	d300      	bcc.n	8838 <__mdiff+0x30>
    8836:	e070      	b.n	891a <__mdiff+0x112>
    8838:	3b04      	subs	r3, #4
    883a:	3a04      	subs	r2, #4
    883c:	681e      	ldr	r6, [r3, #0]
    883e:	6811      	ldr	r1, [r2, #0]
    8840:	428e      	cmp	r6, r1
    8842:	d0f6      	beq.n	8832 <__mdiff+0x2a>
    8844:	d300      	bcc.n	8848 <__mdiff+0x40>
    8846:	e071      	b.n	892c <__mdiff+0x124>
    8848:	4643      	mov	r3, r8
    884a:	003e      	movs	r6, r7
    884c:	46a0      	mov	r8, r4
    884e:	4667      	mov	r7, ip
    8850:	001c      	movs	r4, r3
    8852:	2501      	movs	r5, #1
    8854:	e006      	b.n	8864 <__mdiff+0x5c>
    8856:	2d00      	cmp	r5, #0
    8858:	db6a      	blt.n	8930 <__mdiff+0x128>
    885a:	4647      	mov	r7, r8
    885c:	0026      	movs	r6, r4
    885e:	2500      	movs	r5, #0
    8860:	3714      	adds	r7, #20
    8862:	3614      	adds	r6, #20
    8864:	4643      	mov	r3, r8
    8866:	6859      	ldr	r1, [r3, #4]
    8868:	f7ff fd80 	bl	836c <_Balloc>
    886c:	4643      	mov	r3, r8
    886e:	4681      	mov	r9, r0
    8870:	60c5      	str	r5, [r0, #12]
    8872:	6918      	ldr	r0, [r3, #16]
    8874:	464d      	mov	r5, r9
    8876:	0083      	lsls	r3, r0, #2
    8878:	469c      	mov	ip, r3
    887a:	6923      	ldr	r3, [r4, #16]
    887c:	44bc      	add	ip, r7
    887e:	009b      	lsls	r3, r3, #2
    8880:	4698      	mov	r8, r3
    8882:	2300      	movs	r3, #0
    8884:	44b0      	add	r8, r6
    8886:	3514      	adds	r5, #20
    8888:	469a      	mov	sl, r3
    888a:	e000      	b.n	888e <__mdiff+0x86>
    888c:	0027      	movs	r7, r4
    888e:	ce04      	ldmia	r6!, {r2}
    8890:	003c      	movs	r4, r7
    8892:	4693      	mov	fp, r2
    8894:	4659      	mov	r1, fp
    8896:	cc08      	ldmia	r4!, {r3}
    8898:	0409      	lsls	r1, r1, #16
    889a:	041a      	lsls	r2, r3, #16
    889c:	0c12      	lsrs	r2, r2, #16
    889e:	4452      	add	r2, sl
    88a0:	0c09      	lsrs	r1, r1, #16
    88a2:	1a52      	subs	r2, r2, r1
    88a4:	0c19      	lsrs	r1, r3, #16
    88a6:	465b      	mov	r3, fp
    88a8:	0c1b      	lsrs	r3, r3, #16
    88aa:	1acb      	subs	r3, r1, r3
    88ac:	1411      	asrs	r1, r2, #16
    88ae:	185b      	adds	r3, r3, r1
    88b0:	0412      	lsls	r2, r2, #16
    88b2:	1419      	asrs	r1, r3, #16
    88b4:	0c12      	lsrs	r2, r2, #16
    88b6:	041b      	lsls	r3, r3, #16
    88b8:	468a      	mov	sl, r1
    88ba:	4313      	orrs	r3, r2
    88bc:	1d29      	adds	r1, r5, #4
    88be:	602b      	str	r3, [r5, #0]
    88c0:	000d      	movs	r5, r1
    88c2:	45b0      	cmp	r8, r6
    88c4:	d8e2      	bhi.n	888c <__mdiff+0x84>
    88c6:	45a4      	cmp	ip, r4
    88c8:	d916      	bls.n	88f8 <__mdiff+0xf0>
    88ca:	cc08      	ldmia	r4!, {r3}
    88cc:	041a      	lsls	r2, r3, #16
    88ce:	0c12      	lsrs	r2, r2, #16
    88d0:	4452      	add	r2, sl
    88d2:	1416      	asrs	r6, r2, #16
    88d4:	0c1b      	lsrs	r3, r3, #16
    88d6:	199b      	adds	r3, r3, r6
    88d8:	0412      	lsls	r2, r2, #16
    88da:	141e      	asrs	r6, r3, #16
    88dc:	0c12      	lsrs	r2, r2, #16
    88de:	041b      	lsls	r3, r3, #16
    88e0:	4313      	orrs	r3, r2
    88e2:	46b2      	mov	sl, r6
    88e4:	c508      	stmia	r5!, {r3}
    88e6:	45a4      	cmp	ip, r4
    88e8:	d8ef      	bhi.n	88ca <__mdiff+0xc2>
    88ea:	4662      	mov	r2, ip
    88ec:	2403      	movs	r4, #3
    88ee:	1bd2      	subs	r2, r2, r7
    88f0:	3a05      	subs	r2, #5
    88f2:	43a2      	bics	r2, r4
    88f4:	3204      	adds	r2, #4
    88f6:	1889      	adds	r1, r1, r2
    88f8:	3904      	subs	r1, #4
    88fa:	2b00      	cmp	r3, #0
    88fc:	d104      	bne.n	8908 <__mdiff+0x100>
    88fe:	3904      	subs	r1, #4
    8900:	680b      	ldr	r3, [r1, #0]
    8902:	3801      	subs	r0, #1
    8904:	2b00      	cmp	r3, #0
    8906:	d0fa      	beq.n	88fe <__mdiff+0xf6>
    8908:	464b      	mov	r3, r9
    890a:	6118      	str	r0, [r3, #16]
    890c:	4648      	mov	r0, r9
    890e:	bc3c      	pop	{r2, r3, r4, r5}
    8910:	4690      	mov	r8, r2
    8912:	4699      	mov	r9, r3
    8914:	46a2      	mov	sl, r4
    8916:	46ab      	mov	fp, r5
    8918:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    891a:	2100      	movs	r1, #0
    891c:	f7ff fd26 	bl	836c <_Balloc>
    8920:	2301      	movs	r3, #1
    8922:	6103      	str	r3, [r0, #16]
    8924:	2300      	movs	r3, #0
    8926:	4681      	mov	r9, r0
    8928:	6143      	str	r3, [r0, #20]
    892a:	e7ef      	b.n	890c <__mdiff+0x104>
    892c:	4666      	mov	r6, ip
    892e:	e799      	b.n	8864 <__mdiff+0x5c>
    8930:	0027      	movs	r7, r4
    8932:	000e      	movs	r6, r1
    8934:	46a0      	mov	r8, r4
    8936:	3714      	adds	r7, #20
    8938:	3614      	adds	r6, #20
    893a:	000c      	movs	r4, r1
    893c:	2501      	movs	r5, #1
    893e:	e791      	b.n	8864 <__mdiff+0x5c>

00008940 <__d2b>:
    8940:	b5f0      	push	{r4, r5, r6, r7, lr}
    8942:	2101      	movs	r1, #1
    8944:	001c      	movs	r4, r3
    8946:	b083      	sub	sp, #12
    8948:	9e08      	ldr	r6, [sp, #32]
    894a:	0015      	movs	r5, r2
    894c:	f7ff fd0e 	bl	836c <_Balloc>
    8950:	0323      	lsls	r3, r4, #12
    8952:	0064      	lsls	r4, r4, #1
    8954:	0007      	movs	r7, r0
    8956:	0b1b      	lsrs	r3, r3, #12
    8958:	0d64      	lsrs	r4, r4, #21
    895a:	d002      	beq.n	8962 <__d2b+0x22>
    895c:	2280      	movs	r2, #128	; 0x80
    895e:	0352      	lsls	r2, r2, #13
    8960:	4313      	orrs	r3, r2
    8962:	9301      	str	r3, [sp, #4]
    8964:	2d00      	cmp	r5, #0
    8966:	d019      	beq.n	899c <__d2b+0x5c>
    8968:	4668      	mov	r0, sp
    896a:	9500      	str	r5, [sp, #0]
    896c:	f7ff fd90 	bl	8490 <__lo0bits>
    8970:	2800      	cmp	r0, #0
    8972:	d130      	bne.n	89d6 <__d2b+0x96>
    8974:	9b00      	ldr	r3, [sp, #0]
    8976:	617b      	str	r3, [r7, #20]
    8978:	9b01      	ldr	r3, [sp, #4]
    897a:	61bb      	str	r3, [r7, #24]
    897c:	1e5a      	subs	r2, r3, #1
    897e:	4193      	sbcs	r3, r2
    8980:	1c5d      	adds	r5, r3, #1
    8982:	613d      	str	r5, [r7, #16]
    8984:	2c00      	cmp	r4, #0
    8986:	d014      	beq.n	89b2 <__d2b+0x72>
    8988:	4b19      	ldr	r3, [pc, #100]	; (89f0 <__d2b+0xb0>)
    898a:	469c      	mov	ip, r3
    898c:	2335      	movs	r3, #53	; 0x35
    898e:	4464      	add	r4, ip
    8990:	1824      	adds	r4, r4, r0
    8992:	1a18      	subs	r0, r3, r0
    8994:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8996:	6034      	str	r4, [r6, #0]
    8998:	6018      	str	r0, [r3, #0]
    899a:	e019      	b.n	89d0 <__d2b+0x90>
    899c:	a801      	add	r0, sp, #4
    899e:	f7ff fd77 	bl	8490 <__lo0bits>
    89a2:	9b01      	ldr	r3, [sp, #4]
    89a4:	3020      	adds	r0, #32
    89a6:	617b      	str	r3, [r7, #20]
    89a8:	2301      	movs	r3, #1
    89aa:	2501      	movs	r5, #1
    89ac:	613b      	str	r3, [r7, #16]
    89ae:	2c00      	cmp	r4, #0
    89b0:	d1ea      	bne.n	8988 <__d2b+0x48>
    89b2:	4b10      	ldr	r3, [pc, #64]	; (89f4 <__d2b+0xb4>)
    89b4:	469c      	mov	ip, r3
    89b6:	4b10      	ldr	r3, [pc, #64]	; (89f8 <__d2b+0xb8>)
    89b8:	4460      	add	r0, ip
    89ba:	18eb      	adds	r3, r5, r3
    89bc:	009b      	lsls	r3, r3, #2
    89be:	18fb      	adds	r3, r7, r3
    89c0:	6030      	str	r0, [r6, #0]
    89c2:	6958      	ldr	r0, [r3, #20]
    89c4:	f7ff fd4a 	bl	845c <__hi0bits>
    89c8:	016b      	lsls	r3, r5, #5
    89ca:	1a18      	subs	r0, r3, r0
    89cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    89ce:	6018      	str	r0, [r3, #0]
    89d0:	0038      	movs	r0, r7
    89d2:	b003      	add	sp, #12
    89d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    89d6:	9b01      	ldr	r3, [sp, #4]
    89d8:	2220      	movs	r2, #32
    89da:	0019      	movs	r1, r3
    89dc:	1a12      	subs	r2, r2, r0
    89de:	4091      	lsls	r1, r2
    89e0:	000a      	movs	r2, r1
    89e2:	40c3      	lsrs	r3, r0
    89e4:	9900      	ldr	r1, [sp, #0]
    89e6:	9301      	str	r3, [sp, #4]
    89e8:	430a      	orrs	r2, r1
    89ea:	617a      	str	r2, [r7, #20]
    89ec:	e7c5      	b.n	897a <__d2b+0x3a>
    89ee:	46c0      	nop			; (mov r8, r8)
    89f0:	fffffbcd 	.word	0xfffffbcd
    89f4:	fffffbce 	.word	0xfffffbce
    89f8:	3fffffff 	.word	0x3fffffff

000089fc <_realloc_r>:
    89fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    89fe:	464e      	mov	r6, r9
    8a00:	4645      	mov	r5, r8
    8a02:	46de      	mov	lr, fp
    8a04:	4657      	mov	r7, sl
    8a06:	b5e0      	push	{r5, r6, r7, lr}
    8a08:	b085      	sub	sp, #20
    8a0a:	9001      	str	r0, [sp, #4]
    8a0c:	000e      	movs	r6, r1
    8a0e:	0015      	movs	r5, r2
    8a10:	2900      	cmp	r1, #0
    8a12:	d100      	bne.n	8a16 <_realloc_r+0x1a>
    8a14:	e09e      	b.n	8b54 <_realloc_r+0x158>
    8a16:	0037      	movs	r7, r6
    8a18:	9801      	ldr	r0, [sp, #4]
    8a1a:	3f08      	subs	r7, #8
    8a1c:	f7ff fc96 	bl	834c <__malloc_lock>
    8a20:	687a      	ldr	r2, [r7, #4]
    8a22:	2303      	movs	r3, #3
    8a24:	0014      	movs	r4, r2
    8a26:	439c      	bics	r4, r3
    8a28:	002b      	movs	r3, r5
    8a2a:	330b      	adds	r3, #11
    8a2c:	46b9      	mov	r9, r7
    8a2e:	2b16      	cmp	r3, #22
    8a30:	d847      	bhi.n	8ac2 <_realloc_r+0xc6>
    8a32:	2110      	movs	r1, #16
    8a34:	2310      	movs	r3, #16
    8a36:	4688      	mov	r8, r1
    8a38:	4545      	cmp	r5, r8
    8a3a:	d846      	bhi.n	8aca <_realloc_r+0xce>
    8a3c:	429c      	cmp	r4, r3
    8a3e:	da49      	bge.n	8ad4 <_realloc_r+0xd8>
    8a40:	49cc      	ldr	r1, [pc, #816]	; (8d74 <_realloc_r+0x378>)
    8a42:	1938      	adds	r0, r7, r4
    8a44:	468b      	mov	fp, r1
    8a46:	6889      	ldr	r1, [r1, #8]
    8a48:	9002      	str	r0, [sp, #8]
    8a4a:	4288      	cmp	r0, r1
    8a4c:	d100      	bne.n	8a50 <_realloc_r+0x54>
    8a4e:	e0c2      	b.n	8bd6 <_realloc_r+0x1da>
    8a50:	2101      	movs	r1, #1
    8a52:	468a      	mov	sl, r1
    8a54:	6840      	ldr	r0, [r0, #4]
    8a56:	0001      	movs	r1, r0
    8a58:	9003      	str	r0, [sp, #12]
    8a5a:	4650      	mov	r0, sl
    8a5c:	4381      	bics	r1, r0
    8a5e:	468c      	mov	ip, r1
    8a60:	9902      	ldr	r1, [sp, #8]
    8a62:	468b      	mov	fp, r1
    8a64:	44dc      	add	ip, fp
    8a66:	4661      	mov	r1, ip
    8a68:	6849      	ldr	r1, [r1, #4]
    8a6a:	4201      	tst	r1, r0
    8a6c:	d04d      	beq.n	8b0a <_realloc_r+0x10e>
    8a6e:	4210      	tst	r0, r2
    8a70:	d100      	bne.n	8a74 <_realloc_r+0x78>
    8a72:	e0a2      	b.n	8bba <_realloc_r+0x1be>
    8a74:	0029      	movs	r1, r5
    8a76:	9801      	ldr	r0, [sp, #4]
    8a78:	f7ff f924 	bl	7cc4 <_malloc_r>
    8a7c:	1e05      	subs	r5, r0, #0
    8a7e:	d039      	beq.n	8af4 <_realloc_r+0xf8>
    8a80:	2301      	movs	r3, #1
    8a82:	0002      	movs	r2, r0
    8a84:	6879      	ldr	r1, [r7, #4]
    8a86:	3a08      	subs	r2, #8
    8a88:	4399      	bics	r1, r3
    8a8a:	187f      	adds	r7, r7, r1
    8a8c:	42ba      	cmp	r2, r7
    8a8e:	d100      	bne.n	8a92 <_realloc_r+0x96>
    8a90:	e12e      	b.n	8cf0 <_realloc_r+0x2f4>
    8a92:	1f22      	subs	r2, r4, #4
    8a94:	2a24      	cmp	r2, #36	; 0x24
    8a96:	d900      	bls.n	8a9a <_realloc_r+0x9e>
    8a98:	e114      	b.n	8cc4 <_realloc_r+0x2c8>
    8a9a:	2a13      	cmp	r2, #19
    8a9c:	d900      	bls.n	8aa0 <_realloc_r+0xa4>
    8a9e:	e0e8      	b.n	8c72 <_realloc_r+0x276>
    8aa0:	0003      	movs	r3, r0
    8aa2:	0032      	movs	r2, r6
    8aa4:	6811      	ldr	r1, [r2, #0]
    8aa6:	6019      	str	r1, [r3, #0]
    8aa8:	6851      	ldr	r1, [r2, #4]
    8aaa:	6059      	str	r1, [r3, #4]
    8aac:	6892      	ldr	r2, [r2, #8]
    8aae:	609a      	str	r2, [r3, #8]
    8ab0:	9c01      	ldr	r4, [sp, #4]
    8ab2:	0031      	movs	r1, r6
    8ab4:	0020      	movs	r0, r4
    8ab6:	f7fe fde7 	bl	7688 <_free_r>
    8aba:	0020      	movs	r0, r4
    8abc:	f7ff fc4e 	bl	835c <__malloc_unlock>
    8ac0:	e01b      	b.n	8afa <_realloc_r+0xfe>
    8ac2:	2107      	movs	r1, #7
    8ac4:	438b      	bics	r3, r1
    8ac6:	4698      	mov	r8, r3
    8ac8:	d5b6      	bpl.n	8a38 <_realloc_r+0x3c>
    8aca:	230c      	movs	r3, #12
    8acc:	9a01      	ldr	r2, [sp, #4]
    8ace:	2500      	movs	r5, #0
    8ad0:	6013      	str	r3, [r2, #0]
    8ad2:	e012      	b.n	8afa <_realloc_r+0xfe>
    8ad4:	0035      	movs	r5, r6
    8ad6:	4643      	mov	r3, r8
    8ad8:	1ae3      	subs	r3, r4, r3
    8ada:	2b0f      	cmp	r3, #15
    8adc:	d825      	bhi.n	8b2a <_realloc_r+0x12e>
    8ade:	464b      	mov	r3, r9
    8ae0:	2201      	movs	r2, #1
    8ae2:	4649      	mov	r1, r9
    8ae4:	685b      	ldr	r3, [r3, #4]
    8ae6:	4013      	ands	r3, r2
    8ae8:	4323      	orrs	r3, r4
    8aea:	604b      	str	r3, [r1, #4]
    8aec:	444c      	add	r4, r9
    8aee:	6863      	ldr	r3, [r4, #4]
    8af0:	431a      	orrs	r2, r3
    8af2:	6062      	str	r2, [r4, #4]
    8af4:	9801      	ldr	r0, [sp, #4]
    8af6:	f7ff fc31 	bl	835c <__malloc_unlock>
    8afa:	0028      	movs	r0, r5
    8afc:	b005      	add	sp, #20
    8afe:	bc3c      	pop	{r2, r3, r4, r5}
    8b00:	4690      	mov	r8, r2
    8b02:	4699      	mov	r9, r3
    8b04:	46a2      	mov	sl, r4
    8b06:	46ab      	mov	fp, r5
    8b08:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8b0a:	2103      	movs	r1, #3
    8b0c:	9803      	ldr	r0, [sp, #12]
    8b0e:	468c      	mov	ip, r1
    8b10:	4388      	bics	r0, r1
    8b12:	1821      	adds	r1, r4, r0
    8b14:	468b      	mov	fp, r1
    8b16:	4299      	cmp	r1, r3
    8b18:	db21      	blt.n	8b5e <_realloc_r+0x162>
    8b1a:	9a02      	ldr	r2, [sp, #8]
    8b1c:	0035      	movs	r5, r6
    8b1e:	68d3      	ldr	r3, [r2, #12]
    8b20:	6892      	ldr	r2, [r2, #8]
    8b22:	465c      	mov	r4, fp
    8b24:	60d3      	str	r3, [r2, #12]
    8b26:	609a      	str	r2, [r3, #8]
    8b28:	e7d5      	b.n	8ad6 <_realloc_r+0xda>
    8b2a:	464a      	mov	r2, r9
    8b2c:	2001      	movs	r0, #1
    8b2e:	4646      	mov	r6, r8
    8b30:	6852      	ldr	r2, [r2, #4]
    8b32:	4649      	mov	r1, r9
    8b34:	4002      	ands	r2, r0
    8b36:	4332      	orrs	r2, r6
    8b38:	464e      	mov	r6, r9
    8b3a:	4441      	add	r1, r8
    8b3c:	4303      	orrs	r3, r0
    8b3e:	6072      	str	r2, [r6, #4]
    8b40:	444c      	add	r4, r9
    8b42:	604b      	str	r3, [r1, #4]
    8b44:	6863      	ldr	r3, [r4, #4]
    8b46:	3108      	adds	r1, #8
    8b48:	4318      	orrs	r0, r3
    8b4a:	6060      	str	r0, [r4, #4]
    8b4c:	9801      	ldr	r0, [sp, #4]
    8b4e:	f7fe fd9b 	bl	7688 <_free_r>
    8b52:	e7cf      	b.n	8af4 <_realloc_r+0xf8>
    8b54:	0011      	movs	r1, r2
    8b56:	f7ff f8b5 	bl	7cc4 <_malloc_r>
    8b5a:	0005      	movs	r5, r0
    8b5c:	e7cd      	b.n	8afa <_realloc_r+0xfe>
    8b5e:	4651      	mov	r1, sl
    8b60:	4211      	tst	r1, r2
    8b62:	d000      	beq.n	8b66 <_realloc_r+0x16a>
    8b64:	e786      	b.n	8a74 <_realloc_r+0x78>
    8b66:	4661      	mov	r1, ip
    8b68:	683a      	ldr	r2, [r7, #0]
    8b6a:	1aba      	subs	r2, r7, r2
    8b6c:	4692      	mov	sl, r2
    8b6e:	6852      	ldr	r2, [r2, #4]
    8b70:	438a      	bics	r2, r1
    8b72:	1880      	adds	r0, r0, r2
    8b74:	4683      	mov	fp, r0
    8b76:	44a3      	add	fp, r4
    8b78:	459b      	cmp	fp, r3
    8b7a:	db26      	blt.n	8bca <_realloc_r+0x1ce>
    8b7c:	9a02      	ldr	r2, [sp, #8]
    8b7e:	68d3      	ldr	r3, [r2, #12]
    8b80:	6892      	ldr	r2, [r2, #8]
    8b82:	60d3      	str	r3, [r2, #12]
    8b84:	609a      	str	r2, [r3, #8]
    8b86:	4653      	mov	r3, sl
    8b88:	4652      	mov	r2, sl
    8b8a:	4655      	mov	r5, sl
    8b8c:	6892      	ldr	r2, [r2, #8]
    8b8e:	68db      	ldr	r3, [r3, #12]
    8b90:	3508      	adds	r5, #8
    8b92:	60d3      	str	r3, [r2, #12]
    8b94:	609a      	str	r2, [r3, #8]
    8b96:	1f22      	subs	r2, r4, #4
    8b98:	2a24      	cmp	r2, #36	; 0x24
    8b9a:	d900      	bls.n	8b9e <_realloc_r+0x1a2>
    8b9c:	e096      	b.n	8ccc <_realloc_r+0x2d0>
    8b9e:	2a13      	cmp	r2, #19
    8ba0:	d972      	bls.n	8c88 <_realloc_r+0x28c>
    8ba2:	4653      	mov	r3, sl
    8ba4:	6831      	ldr	r1, [r6, #0]
    8ba6:	6099      	str	r1, [r3, #8]
    8ba8:	6871      	ldr	r1, [r6, #4]
    8baa:	60d9      	str	r1, [r3, #12]
    8bac:	2a1b      	cmp	r2, #27
    8bae:	d900      	bls.n	8bb2 <_realloc_r+0x1b6>
    8bb0:	e0a4      	b.n	8cfc <_realloc_r+0x300>
    8bb2:	0032      	movs	r2, r6
    8bb4:	3310      	adds	r3, #16
    8bb6:	3208      	adds	r2, #8
    8bb8:	e068      	b.n	8c8c <_realloc_r+0x290>
    8bba:	683a      	ldr	r2, [r7, #0]
    8bbc:	1aba      	subs	r2, r7, r2
    8bbe:	4692      	mov	sl, r2
    8bc0:	4651      	mov	r1, sl
    8bc2:	2203      	movs	r2, #3
    8bc4:	6849      	ldr	r1, [r1, #4]
    8bc6:	4391      	bics	r1, r2
    8bc8:	000a      	movs	r2, r1
    8bca:	4693      	mov	fp, r2
    8bcc:	44a3      	add	fp, r4
    8bce:	459b      	cmp	fp, r3
    8bd0:	da00      	bge.n	8bd4 <_realloc_r+0x1d8>
    8bd2:	e74f      	b.n	8a74 <_realloc_r+0x78>
    8bd4:	e7d7      	b.n	8b86 <_realloc_r+0x18a>
    8bd6:	2003      	movs	r0, #3
    8bd8:	9902      	ldr	r1, [sp, #8]
    8bda:	4684      	mov	ip, r0
    8bdc:	6849      	ldr	r1, [r1, #4]
    8bde:	4381      	bics	r1, r0
    8be0:	4640      	mov	r0, r8
    8be2:	1909      	adds	r1, r1, r4
    8be4:	3010      	adds	r0, #16
    8be6:	9002      	str	r0, [sp, #8]
    8be8:	4281      	cmp	r1, r0
    8bea:	da58      	bge.n	8c9e <_realloc_r+0x2a2>
    8bec:	07d2      	lsls	r2, r2, #31
    8bee:	d500      	bpl.n	8bf2 <_realloc_r+0x1f6>
    8bf0:	e740      	b.n	8a74 <_realloc_r+0x78>
    8bf2:	4660      	mov	r0, ip
    8bf4:	683a      	ldr	r2, [r7, #0]
    8bf6:	1aba      	subs	r2, r7, r2
    8bf8:	4692      	mov	sl, r2
    8bfa:	6852      	ldr	r2, [r2, #4]
    8bfc:	4382      	bics	r2, r0
    8bfe:	9802      	ldr	r0, [sp, #8]
    8c00:	1851      	adds	r1, r2, r1
    8c02:	9103      	str	r1, [sp, #12]
    8c04:	4288      	cmp	r0, r1
    8c06:	dce0      	bgt.n	8bca <_realloc_r+0x1ce>
    8c08:	4653      	mov	r3, sl
    8c0a:	4652      	mov	r2, sl
    8c0c:	4655      	mov	r5, sl
    8c0e:	6892      	ldr	r2, [r2, #8]
    8c10:	68db      	ldr	r3, [r3, #12]
    8c12:	3508      	adds	r5, #8
    8c14:	60d3      	str	r3, [r2, #12]
    8c16:	609a      	str	r2, [r3, #8]
    8c18:	1f22      	subs	r2, r4, #4
    8c1a:	2a24      	cmp	r2, #36	; 0x24
    8c1c:	d900      	bls.n	8c20 <_realloc_r+0x224>
    8c1e:	e08e      	b.n	8d3e <_realloc_r+0x342>
    8c20:	2a13      	cmp	r2, #19
    8c22:	d800      	bhi.n	8c26 <_realloc_r+0x22a>
    8c24:	e088      	b.n	8d38 <_realloc_r+0x33c>
    8c26:	4653      	mov	r3, sl
    8c28:	6831      	ldr	r1, [r6, #0]
    8c2a:	6099      	str	r1, [r3, #8]
    8c2c:	6871      	ldr	r1, [r6, #4]
    8c2e:	60d9      	str	r1, [r3, #12]
    8c30:	2a1b      	cmp	r2, #27
    8c32:	d900      	bls.n	8c36 <_realloc_r+0x23a>
    8c34:	e088      	b.n	8d48 <_realloc_r+0x34c>
    8c36:	0032      	movs	r2, r6
    8c38:	3310      	adds	r3, #16
    8c3a:	3208      	adds	r2, #8
    8c3c:	6811      	ldr	r1, [r2, #0]
    8c3e:	6019      	str	r1, [r3, #0]
    8c40:	6851      	ldr	r1, [r2, #4]
    8c42:	6059      	str	r1, [r3, #4]
    8c44:	6892      	ldr	r2, [r2, #8]
    8c46:	609a      	str	r2, [r3, #8]
    8c48:	4651      	mov	r1, sl
    8c4a:	465b      	mov	r3, fp
    8c4c:	4642      	mov	r2, r8
    8c4e:	4441      	add	r1, r8
    8c50:	6099      	str	r1, [r3, #8]
    8c52:	9b03      	ldr	r3, [sp, #12]
    8c54:	9801      	ldr	r0, [sp, #4]
    8c56:	1a9a      	subs	r2, r3, r2
    8c58:	2301      	movs	r3, #1
    8c5a:	431a      	orrs	r2, r3
    8c5c:	604a      	str	r2, [r1, #4]
    8c5e:	4652      	mov	r2, sl
    8c60:	6852      	ldr	r2, [r2, #4]
    8c62:	4013      	ands	r3, r2
    8c64:	4642      	mov	r2, r8
    8c66:	4313      	orrs	r3, r2
    8c68:	4652      	mov	r2, sl
    8c6a:	6053      	str	r3, [r2, #4]
    8c6c:	f7ff fb76 	bl	835c <__malloc_unlock>
    8c70:	e743      	b.n	8afa <_realloc_r+0xfe>
    8c72:	6833      	ldr	r3, [r6, #0]
    8c74:	6003      	str	r3, [r0, #0]
    8c76:	6873      	ldr	r3, [r6, #4]
    8c78:	6043      	str	r3, [r0, #4]
    8c7a:	2a1b      	cmp	r2, #27
    8c7c:	d82d      	bhi.n	8cda <_realloc_r+0x2de>
    8c7e:	0003      	movs	r3, r0
    8c80:	0032      	movs	r2, r6
    8c82:	3308      	adds	r3, #8
    8c84:	3208      	adds	r2, #8
    8c86:	e70d      	b.n	8aa4 <_realloc_r+0xa8>
    8c88:	002b      	movs	r3, r5
    8c8a:	0032      	movs	r2, r6
    8c8c:	6811      	ldr	r1, [r2, #0]
    8c8e:	465c      	mov	r4, fp
    8c90:	6019      	str	r1, [r3, #0]
    8c92:	6851      	ldr	r1, [r2, #4]
    8c94:	46d1      	mov	r9, sl
    8c96:	6059      	str	r1, [r3, #4]
    8c98:	6892      	ldr	r2, [r2, #8]
    8c9a:	609a      	str	r2, [r3, #8]
    8c9c:	e71b      	b.n	8ad6 <_realloc_r+0xda>
    8c9e:	4643      	mov	r3, r8
    8ca0:	18fa      	adds	r2, r7, r3
    8ca2:	465b      	mov	r3, fp
    8ca4:	609a      	str	r2, [r3, #8]
    8ca6:	4643      	mov	r3, r8
    8ca8:	1ac9      	subs	r1, r1, r3
    8caa:	2301      	movs	r3, #1
    8cac:	4319      	orrs	r1, r3
    8cae:	6051      	str	r1, [r2, #4]
    8cb0:	687a      	ldr	r2, [r7, #4]
    8cb2:	9801      	ldr	r0, [sp, #4]
    8cb4:	4013      	ands	r3, r2
    8cb6:	4642      	mov	r2, r8
    8cb8:	4313      	orrs	r3, r2
    8cba:	607b      	str	r3, [r7, #4]
    8cbc:	f7ff fb4e 	bl	835c <__malloc_unlock>
    8cc0:	0035      	movs	r5, r6
    8cc2:	e71a      	b.n	8afa <_realloc_r+0xfe>
    8cc4:	0031      	movs	r1, r6
    8cc6:	f7ff faf1 	bl	82ac <memmove>
    8cca:	e6f1      	b.n	8ab0 <_realloc_r+0xb4>
    8ccc:	0031      	movs	r1, r6
    8cce:	0028      	movs	r0, r5
    8cd0:	f7ff faec 	bl	82ac <memmove>
    8cd4:	465c      	mov	r4, fp
    8cd6:	46d1      	mov	r9, sl
    8cd8:	e6fd      	b.n	8ad6 <_realloc_r+0xda>
    8cda:	68b3      	ldr	r3, [r6, #8]
    8cdc:	6083      	str	r3, [r0, #8]
    8cde:	68f3      	ldr	r3, [r6, #12]
    8ce0:	60c3      	str	r3, [r0, #12]
    8ce2:	2a24      	cmp	r2, #36	; 0x24
    8ce4:	d015      	beq.n	8d12 <_realloc_r+0x316>
    8ce6:	0003      	movs	r3, r0
    8ce8:	0032      	movs	r2, r6
    8cea:	3310      	adds	r3, #16
    8cec:	3210      	adds	r2, #16
    8cee:	e6d9      	b.n	8aa4 <_realloc_r+0xa8>
    8cf0:	6853      	ldr	r3, [r2, #4]
    8cf2:	2203      	movs	r2, #3
    8cf4:	4393      	bics	r3, r2
    8cf6:	18e4      	adds	r4, r4, r3
    8cf8:	0035      	movs	r5, r6
    8cfa:	e6ec      	b.n	8ad6 <_realloc_r+0xda>
    8cfc:	4653      	mov	r3, sl
    8cfe:	68b1      	ldr	r1, [r6, #8]
    8d00:	6119      	str	r1, [r3, #16]
    8d02:	68f1      	ldr	r1, [r6, #12]
    8d04:	6159      	str	r1, [r3, #20]
    8d06:	2a24      	cmp	r2, #36	; 0x24
    8d08:	d00c      	beq.n	8d24 <_realloc_r+0x328>
    8d0a:	0032      	movs	r2, r6
    8d0c:	3318      	adds	r3, #24
    8d0e:	3210      	adds	r2, #16
    8d10:	e7bc      	b.n	8c8c <_realloc_r+0x290>
    8d12:	6933      	ldr	r3, [r6, #16]
    8d14:	0032      	movs	r2, r6
    8d16:	6103      	str	r3, [r0, #16]
    8d18:	0003      	movs	r3, r0
    8d1a:	6971      	ldr	r1, [r6, #20]
    8d1c:	3318      	adds	r3, #24
    8d1e:	3218      	adds	r2, #24
    8d20:	6141      	str	r1, [r0, #20]
    8d22:	e6bf      	b.n	8aa4 <_realloc_r+0xa8>
    8d24:	4653      	mov	r3, sl
    8d26:	6932      	ldr	r2, [r6, #16]
    8d28:	4651      	mov	r1, sl
    8d2a:	619a      	str	r2, [r3, #24]
    8d2c:	0032      	movs	r2, r6
    8d2e:	6970      	ldr	r0, [r6, #20]
    8d30:	3320      	adds	r3, #32
    8d32:	3218      	adds	r2, #24
    8d34:	61c8      	str	r0, [r1, #28]
    8d36:	e7a9      	b.n	8c8c <_realloc_r+0x290>
    8d38:	002b      	movs	r3, r5
    8d3a:	0032      	movs	r2, r6
    8d3c:	e77e      	b.n	8c3c <_realloc_r+0x240>
    8d3e:	0031      	movs	r1, r6
    8d40:	0028      	movs	r0, r5
    8d42:	f7ff fab3 	bl	82ac <memmove>
    8d46:	e77f      	b.n	8c48 <_realloc_r+0x24c>
    8d48:	4653      	mov	r3, sl
    8d4a:	68b1      	ldr	r1, [r6, #8]
    8d4c:	6119      	str	r1, [r3, #16]
    8d4e:	68f1      	ldr	r1, [r6, #12]
    8d50:	6159      	str	r1, [r3, #20]
    8d52:	2a24      	cmp	r2, #36	; 0x24
    8d54:	d003      	beq.n	8d5e <_realloc_r+0x362>
    8d56:	0032      	movs	r2, r6
    8d58:	3318      	adds	r3, #24
    8d5a:	3210      	adds	r2, #16
    8d5c:	e76e      	b.n	8c3c <_realloc_r+0x240>
    8d5e:	4653      	mov	r3, sl
    8d60:	6932      	ldr	r2, [r6, #16]
    8d62:	4651      	mov	r1, sl
    8d64:	619a      	str	r2, [r3, #24]
    8d66:	0032      	movs	r2, r6
    8d68:	6970      	ldr	r0, [r6, #20]
    8d6a:	3320      	adds	r3, #32
    8d6c:	3218      	adds	r2, #24
    8d6e:	61c8      	str	r0, [r1, #28]
    8d70:	e764      	b.n	8c3c <_realloc_r+0x240>
    8d72:	46c0      	nop			; (mov r8, r8)
    8d74:	200004ac 	.word	0x200004ac

00008d78 <_sbrk_r>:
    8d78:	2300      	movs	r3, #0
    8d7a:	b570      	push	{r4, r5, r6, lr}
    8d7c:	4c06      	ldr	r4, [pc, #24]	; (8d98 <_sbrk_r+0x20>)
    8d7e:	0005      	movs	r5, r0
    8d80:	0008      	movs	r0, r1
    8d82:	6023      	str	r3, [r4, #0]
    8d84:	f7f8 f96a 	bl	105c <_sbrk>
    8d88:	1c43      	adds	r3, r0, #1
    8d8a:	d000      	beq.n	8d8e <_sbrk_r+0x16>
    8d8c:	bd70      	pop	{r4, r5, r6, pc}
    8d8e:	6823      	ldr	r3, [r4, #0]
    8d90:	2b00      	cmp	r3, #0
    8d92:	d0fb      	beq.n	8d8c <_sbrk_r+0x14>
    8d94:	602b      	str	r3, [r5, #0]
    8d96:	e7f9      	b.n	8d8c <_sbrk_r+0x14>
    8d98:	20000bb0 	.word	0x20000bb0

00008d9c <__sread>:
    8d9c:	b570      	push	{r4, r5, r6, lr}
    8d9e:	000c      	movs	r4, r1
    8da0:	250e      	movs	r5, #14
    8da2:	5f49      	ldrsh	r1, [r1, r5]
    8da4:	f000 faa0 	bl	92e8 <_read_r>
    8da8:	2800      	cmp	r0, #0
    8daa:	db03      	blt.n	8db4 <__sread+0x18>
    8dac:	6d23      	ldr	r3, [r4, #80]	; 0x50
    8dae:	181b      	adds	r3, r3, r0
    8db0:	6523      	str	r3, [r4, #80]	; 0x50
    8db2:	bd70      	pop	{r4, r5, r6, pc}
    8db4:	89a3      	ldrh	r3, [r4, #12]
    8db6:	4a02      	ldr	r2, [pc, #8]	; (8dc0 <__sread+0x24>)
    8db8:	4013      	ands	r3, r2
    8dba:	81a3      	strh	r3, [r4, #12]
    8dbc:	e7f9      	b.n	8db2 <__sread+0x16>
    8dbe:	46c0      	nop			; (mov r8, r8)
    8dc0:	ffffefff 	.word	0xffffefff

00008dc4 <__swrite>:
    8dc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8dc6:	0016      	movs	r6, r2
    8dc8:	001f      	movs	r7, r3
    8dca:	220c      	movs	r2, #12
    8dcc:	5e8b      	ldrsh	r3, [r1, r2]
    8dce:	0005      	movs	r5, r0
    8dd0:	000c      	movs	r4, r1
    8dd2:	05da      	lsls	r2, r3, #23
    8dd4:	d507      	bpl.n	8de6 <__swrite+0x22>
    8dd6:	230e      	movs	r3, #14
    8dd8:	5ec9      	ldrsh	r1, [r1, r3]
    8dda:	2200      	movs	r2, #0
    8ddc:	2302      	movs	r3, #2
    8dde:	f000 fa59 	bl	9294 <_lseek_r>
    8de2:	220c      	movs	r2, #12
    8de4:	5ea3      	ldrsh	r3, [r4, r2]
    8de6:	4a05      	ldr	r2, [pc, #20]	; (8dfc <__swrite+0x38>)
    8de8:	0028      	movs	r0, r5
    8dea:	4013      	ands	r3, r2
    8dec:	81a3      	strh	r3, [r4, #12]
    8dee:	0032      	movs	r2, r6
    8df0:	230e      	movs	r3, #14
    8df2:	5ee1      	ldrsh	r1, [r4, r3]
    8df4:	003b      	movs	r3, r7
    8df6:	f000 f86b 	bl	8ed0 <_write_r>
    8dfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8dfc:	ffffefff 	.word	0xffffefff

00008e00 <__sseek>:
    8e00:	b570      	push	{r4, r5, r6, lr}
    8e02:	000c      	movs	r4, r1
    8e04:	250e      	movs	r5, #14
    8e06:	5f49      	ldrsh	r1, [r1, r5]
    8e08:	f000 fa44 	bl	9294 <_lseek_r>
    8e0c:	1c43      	adds	r3, r0, #1
    8e0e:	d006      	beq.n	8e1e <__sseek+0x1e>
    8e10:	2380      	movs	r3, #128	; 0x80
    8e12:	89a2      	ldrh	r2, [r4, #12]
    8e14:	015b      	lsls	r3, r3, #5
    8e16:	4313      	orrs	r3, r2
    8e18:	81a3      	strh	r3, [r4, #12]
    8e1a:	6520      	str	r0, [r4, #80]	; 0x50
    8e1c:	bd70      	pop	{r4, r5, r6, pc}
    8e1e:	89a3      	ldrh	r3, [r4, #12]
    8e20:	4a01      	ldr	r2, [pc, #4]	; (8e28 <__sseek+0x28>)
    8e22:	4013      	ands	r3, r2
    8e24:	81a3      	strh	r3, [r4, #12]
    8e26:	e7f9      	b.n	8e1c <__sseek+0x1c>
    8e28:	ffffefff 	.word	0xffffefff

00008e2c <__sclose>:
    8e2c:	b510      	push	{r4, lr}
    8e2e:	230e      	movs	r3, #14
    8e30:	5ec9      	ldrsh	r1, [r1, r3]
    8e32:	f000 f907 	bl	9044 <_close_r>
    8e36:	bd10      	pop	{r4, pc}

00008e38 <__sprint_r.part.0>:
    8e38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8e3a:	464e      	mov	r6, r9
    8e3c:	4645      	mov	r5, r8
    8e3e:	46de      	mov	lr, fp
    8e40:	4657      	mov	r7, sl
    8e42:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    8e44:	b5e0      	push	{r5, r6, r7, lr}
    8e46:	4680      	mov	r8, r0
    8e48:	000e      	movs	r6, r1
    8e4a:	4691      	mov	r9, r2
    8e4c:	049b      	lsls	r3, r3, #18
    8e4e:	d531      	bpl.n	8eb4 <__sprint_r.part.0+0x7c>
    8e50:	6813      	ldr	r3, [r2, #0]
    8e52:	469a      	mov	sl, r3
    8e54:	6893      	ldr	r3, [r2, #8]
    8e56:	2b00      	cmp	r3, #0
    8e58:	d02a      	beq.n	8eb0 <__sprint_r.part.0+0x78>
    8e5a:	4652      	mov	r2, sl
    8e5c:	6852      	ldr	r2, [r2, #4]
    8e5e:	2500      	movs	r5, #0
    8e60:	4693      	mov	fp, r2
    8e62:	0897      	lsrs	r7, r2, #2
    8e64:	4652      	mov	r2, sl
    8e66:	6814      	ldr	r4, [r2, #0]
    8e68:	d104      	bne.n	8e74 <__sprint_r.part.0+0x3c>
    8e6a:	e016      	b.n	8e9a <__sprint_r.part.0+0x62>
    8e6c:	3501      	adds	r5, #1
    8e6e:	3404      	adds	r4, #4
    8e70:	42af      	cmp	r7, r5
    8e72:	d010      	beq.n	8e96 <__sprint_r.part.0+0x5e>
    8e74:	0032      	movs	r2, r6
    8e76:	6821      	ldr	r1, [r4, #0]
    8e78:	4640      	mov	r0, r8
    8e7a:	f000 f9a7 	bl	91cc <_fputwc_r>
    8e7e:	1c43      	adds	r3, r0, #1
    8e80:	d1f4      	bne.n	8e6c <__sprint_r.part.0+0x34>
    8e82:	464a      	mov	r2, r9
    8e84:	2300      	movs	r3, #0
    8e86:	6093      	str	r3, [r2, #8]
    8e88:	6053      	str	r3, [r2, #4]
    8e8a:	bc3c      	pop	{r2, r3, r4, r5}
    8e8c:	4690      	mov	r8, r2
    8e8e:	4699      	mov	r9, r3
    8e90:	46a2      	mov	sl, r4
    8e92:	46ab      	mov	fp, r5
    8e94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8e96:	464b      	mov	r3, r9
    8e98:	689b      	ldr	r3, [r3, #8]
    8e9a:	465a      	mov	r2, fp
    8e9c:	2103      	movs	r1, #3
    8e9e:	438a      	bics	r2, r1
    8ea0:	1a9b      	subs	r3, r3, r2
    8ea2:	464a      	mov	r2, r9
    8ea4:	6093      	str	r3, [r2, #8]
    8ea6:	2208      	movs	r2, #8
    8ea8:	4694      	mov	ip, r2
    8eaa:	44e2      	add	sl, ip
    8eac:	2b00      	cmp	r3, #0
    8eae:	d1d4      	bne.n	8e5a <__sprint_r.part.0+0x22>
    8eb0:	2000      	movs	r0, #0
    8eb2:	e7e6      	b.n	8e82 <__sprint_r.part.0+0x4a>
    8eb4:	f7fe fcc6 	bl	7844 <__sfvwrite_r>
    8eb8:	e7e3      	b.n	8e82 <__sprint_r.part.0+0x4a>
    8eba:	46c0      	nop			; (mov r8, r8)

00008ebc <__sprint_r>:
    8ebc:	6893      	ldr	r3, [r2, #8]
    8ebe:	b510      	push	{r4, lr}
    8ec0:	2b00      	cmp	r3, #0
    8ec2:	d002      	beq.n	8eca <__sprint_r+0xe>
    8ec4:	f7ff ffb8 	bl	8e38 <__sprint_r.part.0>
    8ec8:	bd10      	pop	{r4, pc}
    8eca:	6053      	str	r3, [r2, #4]
    8ecc:	2000      	movs	r0, #0
    8ece:	e7fb      	b.n	8ec8 <__sprint_r+0xc>

00008ed0 <_write_r>:
    8ed0:	b570      	push	{r4, r5, r6, lr}
    8ed2:	0005      	movs	r5, r0
    8ed4:	0008      	movs	r0, r1
    8ed6:	0011      	movs	r1, r2
    8ed8:	2200      	movs	r2, #0
    8eda:	4c06      	ldr	r4, [pc, #24]	; (8ef4 <_write_r+0x24>)
    8edc:	6022      	str	r2, [r4, #0]
    8ede:	001a      	movs	r2, r3
    8ee0:	f7f9 fa48 	bl	2374 <_write>
    8ee4:	1c43      	adds	r3, r0, #1
    8ee6:	d000      	beq.n	8eea <_write_r+0x1a>
    8ee8:	bd70      	pop	{r4, r5, r6, pc}
    8eea:	6823      	ldr	r3, [r4, #0]
    8eec:	2b00      	cmp	r3, #0
    8eee:	d0fb      	beq.n	8ee8 <_write_r+0x18>
    8ef0:	602b      	str	r3, [r5, #0]
    8ef2:	e7f9      	b.n	8ee8 <_write_r+0x18>
    8ef4:	20000bb0 	.word	0x20000bb0

00008ef8 <__register_exitproc>:
    8ef8:	b5f0      	push	{r4, r5, r6, r7, lr}
    8efa:	464e      	mov	r6, r9
    8efc:	4645      	mov	r5, r8
    8efe:	46de      	mov	lr, fp
    8f00:	4657      	mov	r7, sl
    8f02:	b5e0      	push	{r5, r6, r7, lr}
    8f04:	4d36      	ldr	r5, [pc, #216]	; (8fe0 <__register_exitproc+0xe8>)
    8f06:	b083      	sub	sp, #12
    8f08:	0006      	movs	r6, r0
    8f0a:	6828      	ldr	r0, [r5, #0]
    8f0c:	4698      	mov	r8, r3
    8f0e:	000f      	movs	r7, r1
    8f10:	4691      	mov	r9, r2
    8f12:	f7fe fe51 	bl	7bb8 <__retarget_lock_acquire_recursive>
    8f16:	4b33      	ldr	r3, [pc, #204]	; (8fe4 <__register_exitproc+0xec>)
    8f18:	681c      	ldr	r4, [r3, #0]
    8f1a:	23a4      	movs	r3, #164	; 0xa4
    8f1c:	005b      	lsls	r3, r3, #1
    8f1e:	58e0      	ldr	r0, [r4, r3]
    8f20:	2800      	cmp	r0, #0
    8f22:	d052      	beq.n	8fca <__register_exitproc+0xd2>
    8f24:	6843      	ldr	r3, [r0, #4]
    8f26:	2b1f      	cmp	r3, #31
    8f28:	dc13      	bgt.n	8f52 <__register_exitproc+0x5a>
    8f2a:	1c5a      	adds	r2, r3, #1
    8f2c:	9201      	str	r2, [sp, #4]
    8f2e:	2e00      	cmp	r6, #0
    8f30:	d128      	bne.n	8f84 <__register_exitproc+0x8c>
    8f32:	9a01      	ldr	r2, [sp, #4]
    8f34:	3302      	adds	r3, #2
    8f36:	009b      	lsls	r3, r3, #2
    8f38:	6042      	str	r2, [r0, #4]
    8f3a:	501f      	str	r7, [r3, r0]
    8f3c:	6828      	ldr	r0, [r5, #0]
    8f3e:	f7fe fe3d 	bl	7bbc <__retarget_lock_release_recursive>
    8f42:	2000      	movs	r0, #0
    8f44:	b003      	add	sp, #12
    8f46:	bc3c      	pop	{r2, r3, r4, r5}
    8f48:	4690      	mov	r8, r2
    8f4a:	4699      	mov	r9, r3
    8f4c:	46a2      	mov	sl, r4
    8f4e:	46ab      	mov	fp, r5
    8f50:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8f52:	4b25      	ldr	r3, [pc, #148]	; (8fe8 <__register_exitproc+0xf0>)
    8f54:	2b00      	cmp	r3, #0
    8f56:	d03d      	beq.n	8fd4 <__register_exitproc+0xdc>
    8f58:	20c8      	movs	r0, #200	; 0xc8
    8f5a:	0040      	lsls	r0, r0, #1
    8f5c:	f7fe fea8 	bl	7cb0 <malloc>
    8f60:	2800      	cmp	r0, #0
    8f62:	d037      	beq.n	8fd4 <__register_exitproc+0xdc>
    8f64:	22a4      	movs	r2, #164	; 0xa4
    8f66:	2300      	movs	r3, #0
    8f68:	0052      	lsls	r2, r2, #1
    8f6a:	58a1      	ldr	r1, [r4, r2]
    8f6c:	6043      	str	r3, [r0, #4]
    8f6e:	6001      	str	r1, [r0, #0]
    8f70:	50a0      	str	r0, [r4, r2]
    8f72:	3240      	adds	r2, #64	; 0x40
    8f74:	5083      	str	r3, [r0, r2]
    8f76:	3204      	adds	r2, #4
    8f78:	5083      	str	r3, [r0, r2]
    8f7a:	3301      	adds	r3, #1
    8f7c:	9301      	str	r3, [sp, #4]
    8f7e:	2300      	movs	r3, #0
    8f80:	2e00      	cmp	r6, #0
    8f82:	d0d6      	beq.n	8f32 <__register_exitproc+0x3a>
    8f84:	009a      	lsls	r2, r3, #2
    8f86:	4692      	mov	sl, r2
    8f88:	4482      	add	sl, r0
    8f8a:	464a      	mov	r2, r9
    8f8c:	2188      	movs	r1, #136	; 0x88
    8f8e:	4654      	mov	r4, sl
    8f90:	5062      	str	r2, [r4, r1]
    8f92:	22c4      	movs	r2, #196	; 0xc4
    8f94:	0052      	lsls	r2, r2, #1
    8f96:	4691      	mov	r9, r2
    8f98:	4481      	add	r9, r0
    8f9a:	464a      	mov	r2, r9
    8f9c:	3987      	subs	r1, #135	; 0x87
    8f9e:	4099      	lsls	r1, r3
    8fa0:	6812      	ldr	r2, [r2, #0]
    8fa2:	468b      	mov	fp, r1
    8fa4:	430a      	orrs	r2, r1
    8fa6:	4694      	mov	ip, r2
    8fa8:	464a      	mov	r2, r9
    8faa:	4661      	mov	r1, ip
    8fac:	6011      	str	r1, [r2, #0]
    8fae:	2284      	movs	r2, #132	; 0x84
    8fb0:	4641      	mov	r1, r8
    8fb2:	0052      	lsls	r2, r2, #1
    8fb4:	50a1      	str	r1, [r4, r2]
    8fb6:	2e02      	cmp	r6, #2
    8fb8:	d1bb      	bne.n	8f32 <__register_exitproc+0x3a>
    8fba:	0002      	movs	r2, r0
    8fbc:	465c      	mov	r4, fp
    8fbe:	328d      	adds	r2, #141	; 0x8d
    8fc0:	32ff      	adds	r2, #255	; 0xff
    8fc2:	6811      	ldr	r1, [r2, #0]
    8fc4:	430c      	orrs	r4, r1
    8fc6:	6014      	str	r4, [r2, #0]
    8fc8:	e7b3      	b.n	8f32 <__register_exitproc+0x3a>
    8fca:	0020      	movs	r0, r4
    8fcc:	304d      	adds	r0, #77	; 0x4d
    8fce:	30ff      	adds	r0, #255	; 0xff
    8fd0:	50e0      	str	r0, [r4, r3]
    8fd2:	e7a7      	b.n	8f24 <__register_exitproc+0x2c>
    8fd4:	6828      	ldr	r0, [r5, #0]
    8fd6:	f7fe fdf1 	bl	7bbc <__retarget_lock_release_recursive>
    8fda:	2001      	movs	r0, #1
    8fdc:	4240      	negs	r0, r0
    8fde:	e7b1      	b.n	8f44 <__register_exitproc+0x4c>
    8fe0:	200004a8 	.word	0x200004a8
    8fe4:	0000a0b4 	.word	0x0000a0b4
    8fe8:	00007cb1 	.word	0x00007cb1

00008fec <_calloc_r>:
    8fec:	b510      	push	{r4, lr}
    8fee:	4351      	muls	r1, r2
    8ff0:	f7fe fe68 	bl	7cc4 <_malloc_r>
    8ff4:	1e04      	subs	r4, r0, #0
    8ff6:	d01c      	beq.n	9032 <_calloc_r+0x46>
    8ff8:	0003      	movs	r3, r0
    8ffa:	3b08      	subs	r3, #8
    8ffc:	685a      	ldr	r2, [r3, #4]
    8ffe:	2303      	movs	r3, #3
    9000:	439a      	bics	r2, r3
    9002:	3a04      	subs	r2, #4
    9004:	2a24      	cmp	r2, #36	; 0x24
    9006:	d816      	bhi.n	9036 <_calloc_r+0x4a>
    9008:	0003      	movs	r3, r0
    900a:	2a13      	cmp	r2, #19
    900c:	d90d      	bls.n	902a <_calloc_r+0x3e>
    900e:	2100      	movs	r1, #0
    9010:	3308      	adds	r3, #8
    9012:	6001      	str	r1, [r0, #0]
    9014:	6041      	str	r1, [r0, #4]
    9016:	2a1b      	cmp	r2, #27
    9018:	d907      	bls.n	902a <_calloc_r+0x3e>
    901a:	6081      	str	r1, [r0, #8]
    901c:	60c1      	str	r1, [r0, #12]
    901e:	2a24      	cmp	r2, #36	; 0x24
    9020:	d10d      	bne.n	903e <_calloc_r+0x52>
    9022:	0003      	movs	r3, r0
    9024:	6101      	str	r1, [r0, #16]
    9026:	3318      	adds	r3, #24
    9028:	6141      	str	r1, [r0, #20]
    902a:	2200      	movs	r2, #0
    902c:	601a      	str	r2, [r3, #0]
    902e:	605a      	str	r2, [r3, #4]
    9030:	609a      	str	r2, [r3, #8]
    9032:	0020      	movs	r0, r4
    9034:	bd10      	pop	{r4, pc}
    9036:	2100      	movs	r1, #0
    9038:	f7fb fb76 	bl	4728 <memset>
    903c:	e7f9      	b.n	9032 <_calloc_r+0x46>
    903e:	0003      	movs	r3, r0
    9040:	3310      	adds	r3, #16
    9042:	e7f2      	b.n	902a <_calloc_r+0x3e>

00009044 <_close_r>:
    9044:	2300      	movs	r3, #0
    9046:	b570      	push	{r4, r5, r6, lr}
    9048:	4c06      	ldr	r4, [pc, #24]	; (9064 <_close_r+0x20>)
    904a:	0005      	movs	r5, r0
    904c:	0008      	movs	r0, r1
    904e:	6023      	str	r3, [r4, #0]
    9050:	f7f8 f816 	bl	1080 <_close>
    9054:	1c43      	adds	r3, r0, #1
    9056:	d000      	beq.n	905a <_close_r+0x16>
    9058:	bd70      	pop	{r4, r5, r6, pc}
    905a:	6823      	ldr	r3, [r4, #0]
    905c:	2b00      	cmp	r3, #0
    905e:	d0fb      	beq.n	9058 <_close_r+0x14>
    9060:	602b      	str	r3, [r5, #0]
    9062:	e7f9      	b.n	9058 <_close_r+0x14>
    9064:	20000bb0 	.word	0x20000bb0

00009068 <_fclose_r>:
    9068:	b570      	push	{r4, r5, r6, lr}
    906a:	0005      	movs	r5, r0
    906c:	1e0c      	subs	r4, r1, #0
    906e:	d040      	beq.n	90f2 <_fclose_r+0x8a>
    9070:	2800      	cmp	r0, #0
    9072:	d002      	beq.n	907a <_fclose_r+0x12>
    9074:	6b83      	ldr	r3, [r0, #56]	; 0x38
    9076:	2b00      	cmp	r3, #0
    9078:	d03e      	beq.n	90f8 <_fclose_r+0x90>
    907a:	2601      	movs	r6, #1
    907c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    907e:	4233      	tst	r3, r6
    9080:	d133      	bne.n	90ea <_fclose_r+0x82>
    9082:	89a3      	ldrh	r3, [r4, #12]
    9084:	059b      	lsls	r3, r3, #22
    9086:	d543      	bpl.n	9110 <_fclose_r+0xa8>
    9088:	0021      	movs	r1, r4
    908a:	0028      	movs	r0, r5
    908c:	f7fe f950 	bl	7330 <__sflush_r>
    9090:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    9092:	0006      	movs	r6, r0
    9094:	2b00      	cmp	r3, #0
    9096:	d004      	beq.n	90a2 <_fclose_r+0x3a>
    9098:	69e1      	ldr	r1, [r4, #28]
    909a:	0028      	movs	r0, r5
    909c:	4798      	blx	r3
    909e:	2800      	cmp	r0, #0
    90a0:	db44      	blt.n	912c <_fclose_r+0xc4>
    90a2:	89a3      	ldrh	r3, [r4, #12]
    90a4:	061b      	lsls	r3, r3, #24
    90a6:	d42a      	bmi.n	90fe <_fclose_r+0x96>
    90a8:	6b21      	ldr	r1, [r4, #48]	; 0x30
    90aa:	2900      	cmp	r1, #0
    90ac:	d008      	beq.n	90c0 <_fclose_r+0x58>
    90ae:	0023      	movs	r3, r4
    90b0:	3340      	adds	r3, #64	; 0x40
    90b2:	4299      	cmp	r1, r3
    90b4:	d002      	beq.n	90bc <_fclose_r+0x54>
    90b6:	0028      	movs	r0, r5
    90b8:	f7fe fae6 	bl	7688 <_free_r>
    90bc:	2300      	movs	r3, #0
    90be:	6323      	str	r3, [r4, #48]	; 0x30
    90c0:	6c61      	ldr	r1, [r4, #68]	; 0x44
    90c2:	2900      	cmp	r1, #0
    90c4:	d004      	beq.n	90d0 <_fclose_r+0x68>
    90c6:	0028      	movs	r0, r5
    90c8:	f7fe fade 	bl	7688 <_free_r>
    90cc:	2300      	movs	r3, #0
    90ce:	6463      	str	r3, [r4, #68]	; 0x44
    90d0:	f7fe fa60 	bl	7594 <__sfp_lock_acquire>
    90d4:	2300      	movs	r3, #0
    90d6:	81a3      	strh	r3, [r4, #12]
    90d8:	6e63      	ldr	r3, [r4, #100]	; 0x64
    90da:	07db      	lsls	r3, r3, #31
    90dc:	d514      	bpl.n	9108 <_fclose_r+0xa0>
    90de:	6da0      	ldr	r0, [r4, #88]	; 0x58
    90e0:	f7fe fd68 	bl	7bb4 <__retarget_lock_close_recursive>
    90e4:	f7fe fa5e 	bl	75a4 <__sfp_lock_release>
    90e8:	e004      	b.n	90f4 <_fclose_r+0x8c>
    90ea:	220c      	movs	r2, #12
    90ec:	5ea3      	ldrsh	r3, [r4, r2]
    90ee:	2b00      	cmp	r3, #0
    90f0:	d1ca      	bne.n	9088 <_fclose_r+0x20>
    90f2:	2600      	movs	r6, #0
    90f4:	0030      	movs	r0, r6
    90f6:	bd70      	pop	{r4, r5, r6, pc}
    90f8:	f7fe fa1c 	bl	7534 <__sinit>
    90fc:	e7bd      	b.n	907a <_fclose_r+0x12>
    90fe:	6921      	ldr	r1, [r4, #16]
    9100:	0028      	movs	r0, r5
    9102:	f7fe fac1 	bl	7688 <_free_r>
    9106:	e7cf      	b.n	90a8 <_fclose_r+0x40>
    9108:	6da0      	ldr	r0, [r4, #88]	; 0x58
    910a:	f7fe fd57 	bl	7bbc <__retarget_lock_release_recursive>
    910e:	e7e6      	b.n	90de <_fclose_r+0x76>
    9110:	6da0      	ldr	r0, [r4, #88]	; 0x58
    9112:	f7fe fd51 	bl	7bb8 <__retarget_lock_acquire_recursive>
    9116:	220c      	movs	r2, #12
    9118:	5ea3      	ldrsh	r3, [r4, r2]
    911a:	2b00      	cmp	r3, #0
    911c:	d1b4      	bne.n	9088 <_fclose_r+0x20>
    911e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    9120:	401e      	ands	r6, r3
    9122:	d1e6      	bne.n	90f2 <_fclose_r+0x8a>
    9124:	6da0      	ldr	r0, [r4, #88]	; 0x58
    9126:	f7fe fd49 	bl	7bbc <__retarget_lock_release_recursive>
    912a:	e7e3      	b.n	90f4 <_fclose_r+0x8c>
    912c:	2601      	movs	r6, #1
    912e:	4276      	negs	r6, r6
    9130:	e7b7      	b.n	90a2 <_fclose_r+0x3a>
    9132:	46c0      	nop			; (mov r8, r8)

00009134 <__fputwc>:
    9134:	b5f0      	push	{r4, r5, r6, r7, lr}
    9136:	46ce      	mov	lr, r9
    9138:	4647      	mov	r7, r8
    913a:	b580      	push	{r7, lr}
    913c:	b085      	sub	sp, #20
    913e:	4680      	mov	r8, r0
    9140:	4689      	mov	r9, r1
    9142:	0014      	movs	r4, r2
    9144:	f000 f896 	bl	9274 <__locale_mb_cur_max>
    9148:	2801      	cmp	r0, #1
    914a:	d031      	beq.n	91b0 <__fputwc+0x7c>
    914c:	0023      	movs	r3, r4
    914e:	af03      	add	r7, sp, #12
    9150:	335c      	adds	r3, #92	; 0x5c
    9152:	464a      	mov	r2, r9
    9154:	0039      	movs	r1, r7
    9156:	4640      	mov	r0, r8
    9158:	f000 f938 	bl	93cc <_wcrtomb_r>
    915c:	0006      	movs	r6, r0
    915e:	1c43      	adds	r3, r0, #1
    9160:	d021      	beq.n	91a6 <__fputwc+0x72>
    9162:	2800      	cmp	r0, #0
    9164:	d030      	beq.n	91c8 <__fputwc+0x94>
    9166:	7839      	ldrb	r1, [r7, #0]
    9168:	2500      	movs	r5, #0
    916a:	e007      	b.n	917c <__fputwc+0x48>
    916c:	6823      	ldr	r3, [r4, #0]
    916e:	1c5a      	adds	r2, r3, #1
    9170:	6022      	str	r2, [r4, #0]
    9172:	7019      	strb	r1, [r3, #0]
    9174:	3501      	adds	r5, #1
    9176:	42b5      	cmp	r5, r6
    9178:	d226      	bcs.n	91c8 <__fputwc+0x94>
    917a:	5d79      	ldrb	r1, [r7, r5]
    917c:	68a3      	ldr	r3, [r4, #8]
    917e:	3b01      	subs	r3, #1
    9180:	60a3      	str	r3, [r4, #8]
    9182:	2b00      	cmp	r3, #0
    9184:	daf2      	bge.n	916c <__fputwc+0x38>
    9186:	69a2      	ldr	r2, [r4, #24]
    9188:	4293      	cmp	r3, r2
    918a:	db01      	blt.n	9190 <__fputwc+0x5c>
    918c:	290a      	cmp	r1, #10
    918e:	d1ed      	bne.n	916c <__fputwc+0x38>
    9190:	0022      	movs	r2, r4
    9192:	4640      	mov	r0, r8
    9194:	f000 f8bc 	bl	9310 <__swbuf_r>
    9198:	1c43      	adds	r3, r0, #1
    919a:	d1eb      	bne.n	9174 <__fputwc+0x40>
    919c:	b005      	add	sp, #20
    919e:	bc0c      	pop	{r2, r3}
    91a0:	4690      	mov	r8, r2
    91a2:	4699      	mov	r9, r3
    91a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    91a6:	2240      	movs	r2, #64	; 0x40
    91a8:	89a3      	ldrh	r3, [r4, #12]
    91aa:	4313      	orrs	r3, r2
    91ac:	81a3      	strh	r3, [r4, #12]
    91ae:	e7f5      	b.n	919c <__fputwc+0x68>
    91b0:	464b      	mov	r3, r9
    91b2:	3b01      	subs	r3, #1
    91b4:	2bfe      	cmp	r3, #254	; 0xfe
    91b6:	d8c9      	bhi.n	914c <__fputwc+0x18>
    91b8:	466a      	mov	r2, sp
    91ba:	464b      	mov	r3, r9
    91bc:	71d3      	strb	r3, [r2, #7]
    91be:	79d1      	ldrb	r1, [r2, #7]
    91c0:	af03      	add	r7, sp, #12
    91c2:	7039      	strb	r1, [r7, #0]
    91c4:	2601      	movs	r6, #1
    91c6:	e7cf      	b.n	9168 <__fputwc+0x34>
    91c8:	4648      	mov	r0, r9
    91ca:	e7e7      	b.n	919c <__fputwc+0x68>

000091cc <_fputwc_r>:
    91cc:	6e53      	ldr	r3, [r2, #100]	; 0x64
    91ce:	b570      	push	{r4, r5, r6, lr}
    91d0:	0005      	movs	r5, r0
    91d2:	000e      	movs	r6, r1
    91d4:	0014      	movs	r4, r2
    91d6:	07db      	lsls	r3, r3, #31
    91d8:	d41e      	bmi.n	9218 <_fputwc_r+0x4c>
    91da:	230c      	movs	r3, #12
    91dc:	5ed2      	ldrsh	r2, [r2, r3]
    91de:	b291      	uxth	r1, r2
    91e0:	058b      	lsls	r3, r1, #22
    91e2:	d516      	bpl.n	9212 <_fputwc_r+0x46>
    91e4:	2380      	movs	r3, #128	; 0x80
    91e6:	019b      	lsls	r3, r3, #6
    91e8:	4219      	tst	r1, r3
    91ea:	d104      	bne.n	91f6 <_fputwc_r+0x2a>
    91ec:	431a      	orrs	r2, r3
    91ee:	81a2      	strh	r2, [r4, #12]
    91f0:	6e62      	ldr	r2, [r4, #100]	; 0x64
    91f2:	4313      	orrs	r3, r2
    91f4:	6663      	str	r3, [r4, #100]	; 0x64
    91f6:	0028      	movs	r0, r5
    91f8:	0022      	movs	r2, r4
    91fa:	0031      	movs	r1, r6
    91fc:	f7ff ff9a 	bl	9134 <__fputwc>
    9200:	6e63      	ldr	r3, [r4, #100]	; 0x64
    9202:	0005      	movs	r5, r0
    9204:	07db      	lsls	r3, r3, #31
    9206:	d402      	bmi.n	920e <_fputwc_r+0x42>
    9208:	89a3      	ldrh	r3, [r4, #12]
    920a:	059b      	lsls	r3, r3, #22
    920c:	d508      	bpl.n	9220 <_fputwc_r+0x54>
    920e:	0028      	movs	r0, r5
    9210:	bd70      	pop	{r4, r5, r6, pc}
    9212:	6da0      	ldr	r0, [r4, #88]	; 0x58
    9214:	f7fe fcd0 	bl	7bb8 <__retarget_lock_acquire_recursive>
    9218:	230c      	movs	r3, #12
    921a:	5ee2      	ldrsh	r2, [r4, r3]
    921c:	b291      	uxth	r1, r2
    921e:	e7e1      	b.n	91e4 <_fputwc_r+0x18>
    9220:	6da0      	ldr	r0, [r4, #88]	; 0x58
    9222:	f7fe fccb 	bl	7bbc <__retarget_lock_release_recursive>
    9226:	e7f2      	b.n	920e <_fputwc_r+0x42>

00009228 <_fstat_r>:
    9228:	2300      	movs	r3, #0
    922a:	b570      	push	{r4, r5, r6, lr}
    922c:	4c07      	ldr	r4, [pc, #28]	; (924c <_fstat_r+0x24>)
    922e:	0005      	movs	r5, r0
    9230:	0008      	movs	r0, r1
    9232:	0011      	movs	r1, r2
    9234:	6023      	str	r3, [r4, #0]
    9236:	f7f7 ff26 	bl	1086 <_fstat>
    923a:	1c43      	adds	r3, r0, #1
    923c:	d000      	beq.n	9240 <_fstat_r+0x18>
    923e:	bd70      	pop	{r4, r5, r6, pc}
    9240:	6823      	ldr	r3, [r4, #0]
    9242:	2b00      	cmp	r3, #0
    9244:	d0fb      	beq.n	923e <_fstat_r+0x16>
    9246:	602b      	str	r3, [r5, #0]
    9248:	e7f9      	b.n	923e <_fstat_r+0x16>
    924a:	46c0      	nop			; (mov r8, r8)
    924c:	20000bb0 	.word	0x20000bb0

00009250 <_isatty_r>:
    9250:	2300      	movs	r3, #0
    9252:	b570      	push	{r4, r5, r6, lr}
    9254:	4c06      	ldr	r4, [pc, #24]	; (9270 <_isatty_r+0x20>)
    9256:	0005      	movs	r5, r0
    9258:	0008      	movs	r0, r1
    925a:	6023      	str	r3, [r4, #0]
    925c:	f7f7 ff18 	bl	1090 <_isatty>
    9260:	1c43      	adds	r3, r0, #1
    9262:	d000      	beq.n	9266 <_isatty_r+0x16>
    9264:	bd70      	pop	{r4, r5, r6, pc}
    9266:	6823      	ldr	r3, [r4, #0]
    9268:	2b00      	cmp	r3, #0
    926a:	d0fb      	beq.n	9264 <_isatty_r+0x14>
    926c:	602b      	str	r3, [r5, #0]
    926e:	e7f9      	b.n	9264 <_isatty_r+0x14>
    9270:	20000bb0 	.word	0x20000bb0

00009274 <__locale_mb_cur_max>:
    9274:	4b05      	ldr	r3, [pc, #20]	; (928c <__locale_mb_cur_max+0x18>)
    9276:	681b      	ldr	r3, [r3, #0]
    9278:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    927a:	2b00      	cmp	r3, #0
    927c:	d003      	beq.n	9286 <__locale_mb_cur_max+0x12>
    927e:	2294      	movs	r2, #148	; 0x94
    9280:	0052      	lsls	r2, r2, #1
    9282:	5c98      	ldrb	r0, [r3, r2]
    9284:	4770      	bx	lr
    9286:	4b02      	ldr	r3, [pc, #8]	; (9290 <__locale_mb_cur_max+0x1c>)
    9288:	e7f9      	b.n	927e <__locale_mb_cur_max+0xa>
    928a:	46c0      	nop			; (mov r8, r8)
    928c:	2000007c 	.word	0x2000007c
    9290:	200008bc 	.word	0x200008bc

00009294 <_lseek_r>:
    9294:	b570      	push	{r4, r5, r6, lr}
    9296:	0005      	movs	r5, r0
    9298:	0008      	movs	r0, r1
    929a:	0011      	movs	r1, r2
    929c:	2200      	movs	r2, #0
    929e:	4c06      	ldr	r4, [pc, #24]	; (92b8 <_lseek_r+0x24>)
    92a0:	6022      	str	r2, [r4, #0]
    92a2:	001a      	movs	r2, r3
    92a4:	f7f7 fef6 	bl	1094 <_lseek>
    92a8:	1c43      	adds	r3, r0, #1
    92aa:	d000      	beq.n	92ae <_lseek_r+0x1a>
    92ac:	bd70      	pop	{r4, r5, r6, pc}
    92ae:	6823      	ldr	r3, [r4, #0]
    92b0:	2b00      	cmp	r3, #0
    92b2:	d0fb      	beq.n	92ac <_lseek_r+0x18>
    92b4:	602b      	str	r3, [r5, #0]
    92b6:	e7f9      	b.n	92ac <_lseek_r+0x18>
    92b8:	20000bb0 	.word	0x20000bb0

000092bc <__ascii_mbtowc>:
    92bc:	b082      	sub	sp, #8
    92be:	2900      	cmp	r1, #0
    92c0:	d00a      	beq.n	92d8 <__ascii_mbtowc+0x1c>
    92c2:	2a00      	cmp	r2, #0
    92c4:	d00b      	beq.n	92de <__ascii_mbtowc+0x22>
    92c6:	2b00      	cmp	r3, #0
    92c8:	d00b      	beq.n	92e2 <__ascii_mbtowc+0x26>
    92ca:	7813      	ldrb	r3, [r2, #0]
    92cc:	600b      	str	r3, [r1, #0]
    92ce:	7810      	ldrb	r0, [r2, #0]
    92d0:	1e43      	subs	r3, r0, #1
    92d2:	4198      	sbcs	r0, r3
    92d4:	b002      	add	sp, #8
    92d6:	4770      	bx	lr
    92d8:	a901      	add	r1, sp, #4
    92da:	2a00      	cmp	r2, #0
    92dc:	d1f3      	bne.n	92c6 <__ascii_mbtowc+0xa>
    92de:	2000      	movs	r0, #0
    92e0:	e7f8      	b.n	92d4 <__ascii_mbtowc+0x18>
    92e2:	2002      	movs	r0, #2
    92e4:	4240      	negs	r0, r0
    92e6:	e7f5      	b.n	92d4 <__ascii_mbtowc+0x18>

000092e8 <_read_r>:
    92e8:	b570      	push	{r4, r5, r6, lr}
    92ea:	0005      	movs	r5, r0
    92ec:	0008      	movs	r0, r1
    92ee:	0011      	movs	r1, r2
    92f0:	2200      	movs	r2, #0
    92f2:	4c06      	ldr	r4, [pc, #24]	; (930c <_read_r+0x24>)
    92f4:	6022      	str	r2, [r4, #0]
    92f6:	001a      	movs	r2, r3
    92f8:	f7f9 f828 	bl	234c <_read>
    92fc:	1c43      	adds	r3, r0, #1
    92fe:	d000      	beq.n	9302 <_read_r+0x1a>
    9300:	bd70      	pop	{r4, r5, r6, pc}
    9302:	6823      	ldr	r3, [r4, #0]
    9304:	2b00      	cmp	r3, #0
    9306:	d0fb      	beq.n	9300 <_read_r+0x18>
    9308:	602b      	str	r3, [r5, #0]
    930a:	e7f9      	b.n	9300 <_read_r+0x18>
    930c:	20000bb0 	.word	0x20000bb0

00009310 <__swbuf_r>:
    9310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9312:	0006      	movs	r6, r0
    9314:	000d      	movs	r5, r1
    9316:	0014      	movs	r4, r2
    9318:	2800      	cmp	r0, #0
    931a:	d002      	beq.n	9322 <__swbuf_r+0x12>
    931c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    931e:	2b00      	cmp	r3, #0
    9320:	d04e      	beq.n	93c0 <__swbuf_r+0xb0>
    9322:	69a3      	ldr	r3, [r4, #24]
    9324:	60a3      	str	r3, [r4, #8]
    9326:	230c      	movs	r3, #12
    9328:	5ee0      	ldrsh	r0, [r4, r3]
    932a:	b281      	uxth	r1, r0
    932c:	070b      	lsls	r3, r1, #28
    932e:	d53c      	bpl.n	93aa <__swbuf_r+0x9a>
    9330:	6923      	ldr	r3, [r4, #16]
    9332:	2b00      	cmp	r3, #0
    9334:	d039      	beq.n	93aa <__swbuf_r+0x9a>
    9336:	22ff      	movs	r2, #255	; 0xff
    9338:	b2ef      	uxtb	r7, r5
    933a:	4015      	ands	r5, r2
    933c:	2280      	movs	r2, #128	; 0x80
    933e:	0192      	lsls	r2, r2, #6
    9340:	4211      	tst	r1, r2
    9342:	d015      	beq.n	9370 <__swbuf_r+0x60>
    9344:	6822      	ldr	r2, [r4, #0]
    9346:	6961      	ldr	r1, [r4, #20]
    9348:	1ad3      	subs	r3, r2, r3
    934a:	428b      	cmp	r3, r1
    934c:	da1b      	bge.n	9386 <__swbuf_r+0x76>
    934e:	3301      	adds	r3, #1
    9350:	68a1      	ldr	r1, [r4, #8]
    9352:	3901      	subs	r1, #1
    9354:	60a1      	str	r1, [r4, #8]
    9356:	1c51      	adds	r1, r2, #1
    9358:	6021      	str	r1, [r4, #0]
    935a:	7017      	strb	r7, [r2, #0]
    935c:	6962      	ldr	r2, [r4, #20]
    935e:	429a      	cmp	r2, r3
    9360:	d01a      	beq.n	9398 <__swbuf_r+0x88>
    9362:	89a3      	ldrh	r3, [r4, #12]
    9364:	07db      	lsls	r3, r3, #31
    9366:	d501      	bpl.n	936c <__swbuf_r+0x5c>
    9368:	2d0a      	cmp	r5, #10
    936a:	d015      	beq.n	9398 <__swbuf_r+0x88>
    936c:	0028      	movs	r0, r5
    936e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9370:	4302      	orrs	r2, r0
    9372:	6e61      	ldr	r1, [r4, #100]	; 0x64
    9374:	81a2      	strh	r2, [r4, #12]
    9376:	4a14      	ldr	r2, [pc, #80]	; (93c8 <__swbuf_r+0xb8>)
    9378:	400a      	ands	r2, r1
    937a:	6662      	str	r2, [r4, #100]	; 0x64
    937c:	6961      	ldr	r1, [r4, #20]
    937e:	6822      	ldr	r2, [r4, #0]
    9380:	1ad3      	subs	r3, r2, r3
    9382:	428b      	cmp	r3, r1
    9384:	dbe3      	blt.n	934e <__swbuf_r+0x3e>
    9386:	0021      	movs	r1, r4
    9388:	0030      	movs	r0, r6
    938a:	f7fe f879 	bl	7480 <_fflush_r>
    938e:	2800      	cmp	r0, #0
    9390:	d108      	bne.n	93a4 <__swbuf_r+0x94>
    9392:	6822      	ldr	r2, [r4, #0]
    9394:	2301      	movs	r3, #1
    9396:	e7db      	b.n	9350 <__swbuf_r+0x40>
    9398:	0021      	movs	r1, r4
    939a:	0030      	movs	r0, r6
    939c:	f7fe f870 	bl	7480 <_fflush_r>
    93a0:	2800      	cmp	r0, #0
    93a2:	d0e3      	beq.n	936c <__swbuf_r+0x5c>
    93a4:	2501      	movs	r5, #1
    93a6:	426d      	negs	r5, r5
    93a8:	e7e0      	b.n	936c <__swbuf_r+0x5c>
    93aa:	0021      	movs	r1, r4
    93ac:	0030      	movs	r0, r6
    93ae:	f7fc fed3 	bl	6158 <__swsetup_r>
    93b2:	2800      	cmp	r0, #0
    93b4:	d1f6      	bne.n	93a4 <__swbuf_r+0x94>
    93b6:	230c      	movs	r3, #12
    93b8:	5ee0      	ldrsh	r0, [r4, r3]
    93ba:	6923      	ldr	r3, [r4, #16]
    93bc:	b281      	uxth	r1, r0
    93be:	e7ba      	b.n	9336 <__swbuf_r+0x26>
    93c0:	f7fe f8b8 	bl	7534 <__sinit>
    93c4:	e7ad      	b.n	9322 <__swbuf_r+0x12>
    93c6:	46c0      	nop			; (mov r8, r8)
    93c8:	ffffdfff 	.word	0xffffdfff

000093cc <_wcrtomb_r>:
    93cc:	b570      	push	{r4, r5, r6, lr}
    93ce:	001d      	movs	r5, r3
    93d0:	4b11      	ldr	r3, [pc, #68]	; (9418 <_wcrtomb_r+0x4c>)
    93d2:	b084      	sub	sp, #16
    93d4:	681b      	ldr	r3, [r3, #0]
    93d6:	0004      	movs	r4, r0
    93d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    93da:	2900      	cmp	r1, #0
    93dc:	d00e      	beq.n	93fc <_wcrtomb_r+0x30>
    93de:	2b00      	cmp	r3, #0
    93e0:	d016      	beq.n	9410 <_wcrtomb_r+0x44>
    93e2:	20e0      	movs	r0, #224	; 0xe0
    93e4:	581e      	ldr	r6, [r3, r0]
    93e6:	002b      	movs	r3, r5
    93e8:	0020      	movs	r0, r4
    93ea:	47b0      	blx	r6
    93ec:	1c43      	adds	r3, r0, #1
    93ee:	d103      	bne.n	93f8 <_wcrtomb_r+0x2c>
    93f0:	2300      	movs	r3, #0
    93f2:	602b      	str	r3, [r5, #0]
    93f4:	338a      	adds	r3, #138	; 0x8a
    93f6:	6023      	str	r3, [r4, #0]
    93f8:	b004      	add	sp, #16
    93fa:	bd70      	pop	{r4, r5, r6, pc}
    93fc:	2b00      	cmp	r3, #0
    93fe:	d009      	beq.n	9414 <_wcrtomb_r+0x48>
    9400:	22e0      	movs	r2, #224	; 0xe0
    9402:	a901      	add	r1, sp, #4
    9404:	589e      	ldr	r6, [r3, r2]
    9406:	0020      	movs	r0, r4
    9408:	002b      	movs	r3, r5
    940a:	2200      	movs	r2, #0
    940c:	47b0      	blx	r6
    940e:	e7ed      	b.n	93ec <_wcrtomb_r+0x20>
    9410:	4b02      	ldr	r3, [pc, #8]	; (941c <_wcrtomb_r+0x50>)
    9412:	e7e6      	b.n	93e2 <_wcrtomb_r+0x16>
    9414:	4b01      	ldr	r3, [pc, #4]	; (941c <_wcrtomb_r+0x50>)
    9416:	e7f3      	b.n	9400 <_wcrtomb_r+0x34>
    9418:	2000007c 	.word	0x2000007c
    941c:	200008bc 	.word	0x200008bc

00009420 <__ascii_wctomb>:
    9420:	2900      	cmp	r1, #0
    9422:	d004      	beq.n	942e <__ascii_wctomb+0xe>
    9424:	2aff      	cmp	r2, #255	; 0xff
    9426:	d804      	bhi.n	9432 <__ascii_wctomb+0x12>
    9428:	2001      	movs	r0, #1
    942a:	700a      	strb	r2, [r1, #0]
    942c:	4770      	bx	lr
    942e:	2000      	movs	r0, #0
    9430:	e7fc      	b.n	942c <__ascii_wctomb+0xc>
    9432:	238a      	movs	r3, #138	; 0x8a
    9434:	6003      	str	r3, [r0, #0]
    9436:	2001      	movs	r0, #1
    9438:	4240      	negs	r0, r0
    943a:	e7f7      	b.n	942c <__ascii_wctomb+0xc>

0000943c <__divsi3>:
    943c:	4603      	mov	r3, r0
    943e:	430b      	orrs	r3, r1
    9440:	d47f      	bmi.n	9542 <__divsi3+0x106>
    9442:	2200      	movs	r2, #0
    9444:	0843      	lsrs	r3, r0, #1
    9446:	428b      	cmp	r3, r1
    9448:	d374      	bcc.n	9534 <__divsi3+0xf8>
    944a:	0903      	lsrs	r3, r0, #4
    944c:	428b      	cmp	r3, r1
    944e:	d35f      	bcc.n	9510 <__divsi3+0xd4>
    9450:	0a03      	lsrs	r3, r0, #8
    9452:	428b      	cmp	r3, r1
    9454:	d344      	bcc.n	94e0 <__divsi3+0xa4>
    9456:	0b03      	lsrs	r3, r0, #12
    9458:	428b      	cmp	r3, r1
    945a:	d328      	bcc.n	94ae <__divsi3+0x72>
    945c:	0c03      	lsrs	r3, r0, #16
    945e:	428b      	cmp	r3, r1
    9460:	d30d      	bcc.n	947e <__divsi3+0x42>
    9462:	22ff      	movs	r2, #255	; 0xff
    9464:	0209      	lsls	r1, r1, #8
    9466:	ba12      	rev	r2, r2
    9468:	0c03      	lsrs	r3, r0, #16
    946a:	428b      	cmp	r3, r1
    946c:	d302      	bcc.n	9474 <__divsi3+0x38>
    946e:	1212      	asrs	r2, r2, #8
    9470:	0209      	lsls	r1, r1, #8
    9472:	d065      	beq.n	9540 <__divsi3+0x104>
    9474:	0b03      	lsrs	r3, r0, #12
    9476:	428b      	cmp	r3, r1
    9478:	d319      	bcc.n	94ae <__divsi3+0x72>
    947a:	e000      	b.n	947e <__divsi3+0x42>
    947c:	0a09      	lsrs	r1, r1, #8
    947e:	0bc3      	lsrs	r3, r0, #15
    9480:	428b      	cmp	r3, r1
    9482:	d301      	bcc.n	9488 <__divsi3+0x4c>
    9484:	03cb      	lsls	r3, r1, #15
    9486:	1ac0      	subs	r0, r0, r3
    9488:	4152      	adcs	r2, r2
    948a:	0b83      	lsrs	r3, r0, #14
    948c:	428b      	cmp	r3, r1
    948e:	d301      	bcc.n	9494 <__divsi3+0x58>
    9490:	038b      	lsls	r3, r1, #14
    9492:	1ac0      	subs	r0, r0, r3
    9494:	4152      	adcs	r2, r2
    9496:	0b43      	lsrs	r3, r0, #13
    9498:	428b      	cmp	r3, r1
    949a:	d301      	bcc.n	94a0 <__divsi3+0x64>
    949c:	034b      	lsls	r3, r1, #13
    949e:	1ac0      	subs	r0, r0, r3
    94a0:	4152      	adcs	r2, r2
    94a2:	0b03      	lsrs	r3, r0, #12
    94a4:	428b      	cmp	r3, r1
    94a6:	d301      	bcc.n	94ac <__divsi3+0x70>
    94a8:	030b      	lsls	r3, r1, #12
    94aa:	1ac0      	subs	r0, r0, r3
    94ac:	4152      	adcs	r2, r2
    94ae:	0ac3      	lsrs	r3, r0, #11
    94b0:	428b      	cmp	r3, r1
    94b2:	d301      	bcc.n	94b8 <__divsi3+0x7c>
    94b4:	02cb      	lsls	r3, r1, #11
    94b6:	1ac0      	subs	r0, r0, r3
    94b8:	4152      	adcs	r2, r2
    94ba:	0a83      	lsrs	r3, r0, #10
    94bc:	428b      	cmp	r3, r1
    94be:	d301      	bcc.n	94c4 <__divsi3+0x88>
    94c0:	028b      	lsls	r3, r1, #10
    94c2:	1ac0      	subs	r0, r0, r3
    94c4:	4152      	adcs	r2, r2
    94c6:	0a43      	lsrs	r3, r0, #9
    94c8:	428b      	cmp	r3, r1
    94ca:	d301      	bcc.n	94d0 <__divsi3+0x94>
    94cc:	024b      	lsls	r3, r1, #9
    94ce:	1ac0      	subs	r0, r0, r3
    94d0:	4152      	adcs	r2, r2
    94d2:	0a03      	lsrs	r3, r0, #8
    94d4:	428b      	cmp	r3, r1
    94d6:	d301      	bcc.n	94dc <__divsi3+0xa0>
    94d8:	020b      	lsls	r3, r1, #8
    94da:	1ac0      	subs	r0, r0, r3
    94dc:	4152      	adcs	r2, r2
    94de:	d2cd      	bcs.n	947c <__divsi3+0x40>
    94e0:	09c3      	lsrs	r3, r0, #7
    94e2:	428b      	cmp	r3, r1
    94e4:	d301      	bcc.n	94ea <__divsi3+0xae>
    94e6:	01cb      	lsls	r3, r1, #7
    94e8:	1ac0      	subs	r0, r0, r3
    94ea:	4152      	adcs	r2, r2
    94ec:	0983      	lsrs	r3, r0, #6
    94ee:	428b      	cmp	r3, r1
    94f0:	d301      	bcc.n	94f6 <__divsi3+0xba>
    94f2:	018b      	lsls	r3, r1, #6
    94f4:	1ac0      	subs	r0, r0, r3
    94f6:	4152      	adcs	r2, r2
    94f8:	0943      	lsrs	r3, r0, #5
    94fa:	428b      	cmp	r3, r1
    94fc:	d301      	bcc.n	9502 <__divsi3+0xc6>
    94fe:	014b      	lsls	r3, r1, #5
    9500:	1ac0      	subs	r0, r0, r3
    9502:	4152      	adcs	r2, r2
    9504:	0903      	lsrs	r3, r0, #4
    9506:	428b      	cmp	r3, r1
    9508:	d301      	bcc.n	950e <__divsi3+0xd2>
    950a:	010b      	lsls	r3, r1, #4
    950c:	1ac0      	subs	r0, r0, r3
    950e:	4152      	adcs	r2, r2
    9510:	08c3      	lsrs	r3, r0, #3
    9512:	428b      	cmp	r3, r1
    9514:	d301      	bcc.n	951a <__divsi3+0xde>
    9516:	00cb      	lsls	r3, r1, #3
    9518:	1ac0      	subs	r0, r0, r3
    951a:	4152      	adcs	r2, r2
    951c:	0883      	lsrs	r3, r0, #2
    951e:	428b      	cmp	r3, r1
    9520:	d301      	bcc.n	9526 <__divsi3+0xea>
    9522:	008b      	lsls	r3, r1, #2
    9524:	1ac0      	subs	r0, r0, r3
    9526:	4152      	adcs	r2, r2
    9528:	0843      	lsrs	r3, r0, #1
    952a:	428b      	cmp	r3, r1
    952c:	d301      	bcc.n	9532 <__divsi3+0xf6>
    952e:	004b      	lsls	r3, r1, #1
    9530:	1ac0      	subs	r0, r0, r3
    9532:	4152      	adcs	r2, r2
    9534:	1a41      	subs	r1, r0, r1
    9536:	d200      	bcs.n	953a <__divsi3+0xfe>
    9538:	4601      	mov	r1, r0
    953a:	4152      	adcs	r2, r2
    953c:	4610      	mov	r0, r2
    953e:	4770      	bx	lr
    9540:	e05d      	b.n	95fe <__divsi3+0x1c2>
    9542:	0fca      	lsrs	r2, r1, #31
    9544:	d000      	beq.n	9548 <__divsi3+0x10c>
    9546:	4249      	negs	r1, r1
    9548:	1003      	asrs	r3, r0, #32
    954a:	d300      	bcc.n	954e <__divsi3+0x112>
    954c:	4240      	negs	r0, r0
    954e:	4053      	eors	r3, r2
    9550:	2200      	movs	r2, #0
    9552:	469c      	mov	ip, r3
    9554:	0903      	lsrs	r3, r0, #4
    9556:	428b      	cmp	r3, r1
    9558:	d32d      	bcc.n	95b6 <__divsi3+0x17a>
    955a:	0a03      	lsrs	r3, r0, #8
    955c:	428b      	cmp	r3, r1
    955e:	d312      	bcc.n	9586 <__divsi3+0x14a>
    9560:	22fc      	movs	r2, #252	; 0xfc
    9562:	0189      	lsls	r1, r1, #6
    9564:	ba12      	rev	r2, r2
    9566:	0a03      	lsrs	r3, r0, #8
    9568:	428b      	cmp	r3, r1
    956a:	d30c      	bcc.n	9586 <__divsi3+0x14a>
    956c:	0189      	lsls	r1, r1, #6
    956e:	1192      	asrs	r2, r2, #6
    9570:	428b      	cmp	r3, r1
    9572:	d308      	bcc.n	9586 <__divsi3+0x14a>
    9574:	0189      	lsls	r1, r1, #6
    9576:	1192      	asrs	r2, r2, #6
    9578:	428b      	cmp	r3, r1
    957a:	d304      	bcc.n	9586 <__divsi3+0x14a>
    957c:	0189      	lsls	r1, r1, #6
    957e:	d03a      	beq.n	95f6 <__divsi3+0x1ba>
    9580:	1192      	asrs	r2, r2, #6
    9582:	e000      	b.n	9586 <__divsi3+0x14a>
    9584:	0989      	lsrs	r1, r1, #6
    9586:	09c3      	lsrs	r3, r0, #7
    9588:	428b      	cmp	r3, r1
    958a:	d301      	bcc.n	9590 <__divsi3+0x154>
    958c:	01cb      	lsls	r3, r1, #7
    958e:	1ac0      	subs	r0, r0, r3
    9590:	4152      	adcs	r2, r2
    9592:	0983      	lsrs	r3, r0, #6
    9594:	428b      	cmp	r3, r1
    9596:	d301      	bcc.n	959c <__divsi3+0x160>
    9598:	018b      	lsls	r3, r1, #6
    959a:	1ac0      	subs	r0, r0, r3
    959c:	4152      	adcs	r2, r2
    959e:	0943      	lsrs	r3, r0, #5
    95a0:	428b      	cmp	r3, r1
    95a2:	d301      	bcc.n	95a8 <__divsi3+0x16c>
    95a4:	014b      	lsls	r3, r1, #5
    95a6:	1ac0      	subs	r0, r0, r3
    95a8:	4152      	adcs	r2, r2
    95aa:	0903      	lsrs	r3, r0, #4
    95ac:	428b      	cmp	r3, r1
    95ae:	d301      	bcc.n	95b4 <__divsi3+0x178>
    95b0:	010b      	lsls	r3, r1, #4
    95b2:	1ac0      	subs	r0, r0, r3
    95b4:	4152      	adcs	r2, r2
    95b6:	08c3      	lsrs	r3, r0, #3
    95b8:	428b      	cmp	r3, r1
    95ba:	d301      	bcc.n	95c0 <__divsi3+0x184>
    95bc:	00cb      	lsls	r3, r1, #3
    95be:	1ac0      	subs	r0, r0, r3
    95c0:	4152      	adcs	r2, r2
    95c2:	0883      	lsrs	r3, r0, #2
    95c4:	428b      	cmp	r3, r1
    95c6:	d301      	bcc.n	95cc <__divsi3+0x190>
    95c8:	008b      	lsls	r3, r1, #2
    95ca:	1ac0      	subs	r0, r0, r3
    95cc:	4152      	adcs	r2, r2
    95ce:	d2d9      	bcs.n	9584 <__divsi3+0x148>
    95d0:	0843      	lsrs	r3, r0, #1
    95d2:	428b      	cmp	r3, r1
    95d4:	d301      	bcc.n	95da <__divsi3+0x19e>
    95d6:	004b      	lsls	r3, r1, #1
    95d8:	1ac0      	subs	r0, r0, r3
    95da:	4152      	adcs	r2, r2
    95dc:	1a41      	subs	r1, r0, r1
    95de:	d200      	bcs.n	95e2 <__divsi3+0x1a6>
    95e0:	4601      	mov	r1, r0
    95e2:	4663      	mov	r3, ip
    95e4:	4152      	adcs	r2, r2
    95e6:	105b      	asrs	r3, r3, #1
    95e8:	4610      	mov	r0, r2
    95ea:	d301      	bcc.n	95f0 <__divsi3+0x1b4>
    95ec:	4240      	negs	r0, r0
    95ee:	2b00      	cmp	r3, #0
    95f0:	d500      	bpl.n	95f4 <__divsi3+0x1b8>
    95f2:	4249      	negs	r1, r1
    95f4:	4770      	bx	lr
    95f6:	4663      	mov	r3, ip
    95f8:	105b      	asrs	r3, r3, #1
    95fa:	d300      	bcc.n	95fe <__divsi3+0x1c2>
    95fc:	4240      	negs	r0, r0
    95fe:	b501      	push	{r0, lr}
    9600:	2000      	movs	r0, #0
    9602:	f7f9 f9fb 	bl	29fc <__aeabi_idiv0>
    9606:	bd02      	pop	{r1, pc}

00009608 <__aeabi_idivmod>:
    9608:	2900      	cmp	r1, #0
    960a:	d0f8      	beq.n	95fe <__divsi3+0x1c2>
    960c:	e716      	b.n	943c <__divsi3>
    960e:	4770      	bx	lr

00009610 <__aeabi_dadd>:
    9610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9612:	4645      	mov	r5, r8
    9614:	46de      	mov	lr, fp
    9616:	4657      	mov	r7, sl
    9618:	464e      	mov	r6, r9
    961a:	030c      	lsls	r4, r1, #12
    961c:	b5e0      	push	{r5, r6, r7, lr}
    961e:	004e      	lsls	r6, r1, #1
    9620:	0fc9      	lsrs	r1, r1, #31
    9622:	4688      	mov	r8, r1
    9624:	000d      	movs	r5, r1
    9626:	0a61      	lsrs	r1, r4, #9
    9628:	0f44      	lsrs	r4, r0, #29
    962a:	430c      	orrs	r4, r1
    962c:	00c7      	lsls	r7, r0, #3
    962e:	0319      	lsls	r1, r3, #12
    9630:	0058      	lsls	r0, r3, #1
    9632:	0fdb      	lsrs	r3, r3, #31
    9634:	469b      	mov	fp, r3
    9636:	0a4b      	lsrs	r3, r1, #9
    9638:	0f51      	lsrs	r1, r2, #29
    963a:	430b      	orrs	r3, r1
    963c:	0d76      	lsrs	r6, r6, #21
    963e:	0d40      	lsrs	r0, r0, #21
    9640:	0019      	movs	r1, r3
    9642:	00d2      	lsls	r2, r2, #3
    9644:	45d8      	cmp	r8, fp
    9646:	d100      	bne.n	964a <__aeabi_dadd+0x3a>
    9648:	e0ae      	b.n	97a8 <__aeabi_dadd+0x198>
    964a:	1a35      	subs	r5, r6, r0
    964c:	2d00      	cmp	r5, #0
    964e:	dc00      	bgt.n	9652 <__aeabi_dadd+0x42>
    9650:	e0f6      	b.n	9840 <__aeabi_dadd+0x230>
    9652:	2800      	cmp	r0, #0
    9654:	d10f      	bne.n	9676 <__aeabi_dadd+0x66>
    9656:	4313      	orrs	r3, r2
    9658:	d100      	bne.n	965c <__aeabi_dadd+0x4c>
    965a:	e0db      	b.n	9814 <__aeabi_dadd+0x204>
    965c:	1e6b      	subs	r3, r5, #1
    965e:	2b00      	cmp	r3, #0
    9660:	d000      	beq.n	9664 <__aeabi_dadd+0x54>
    9662:	e137      	b.n	98d4 <__aeabi_dadd+0x2c4>
    9664:	1aba      	subs	r2, r7, r2
    9666:	4297      	cmp	r7, r2
    9668:	41bf      	sbcs	r7, r7
    966a:	1a64      	subs	r4, r4, r1
    966c:	427f      	negs	r7, r7
    966e:	1be4      	subs	r4, r4, r7
    9670:	2601      	movs	r6, #1
    9672:	0017      	movs	r7, r2
    9674:	e024      	b.n	96c0 <__aeabi_dadd+0xb0>
    9676:	4bc6      	ldr	r3, [pc, #792]	; (9990 <__aeabi_dadd+0x380>)
    9678:	429e      	cmp	r6, r3
    967a:	d04d      	beq.n	9718 <__aeabi_dadd+0x108>
    967c:	2380      	movs	r3, #128	; 0x80
    967e:	041b      	lsls	r3, r3, #16
    9680:	4319      	orrs	r1, r3
    9682:	2d38      	cmp	r5, #56	; 0x38
    9684:	dd00      	ble.n	9688 <__aeabi_dadd+0x78>
    9686:	e107      	b.n	9898 <__aeabi_dadd+0x288>
    9688:	2d1f      	cmp	r5, #31
    968a:	dd00      	ble.n	968e <__aeabi_dadd+0x7e>
    968c:	e138      	b.n	9900 <__aeabi_dadd+0x2f0>
    968e:	2020      	movs	r0, #32
    9690:	1b43      	subs	r3, r0, r5
    9692:	469a      	mov	sl, r3
    9694:	000b      	movs	r3, r1
    9696:	4650      	mov	r0, sl
    9698:	4083      	lsls	r3, r0
    969a:	4699      	mov	r9, r3
    969c:	0013      	movs	r3, r2
    969e:	4648      	mov	r0, r9
    96a0:	40eb      	lsrs	r3, r5
    96a2:	4318      	orrs	r0, r3
    96a4:	0003      	movs	r3, r0
    96a6:	4650      	mov	r0, sl
    96a8:	4082      	lsls	r2, r0
    96aa:	1e50      	subs	r0, r2, #1
    96ac:	4182      	sbcs	r2, r0
    96ae:	40e9      	lsrs	r1, r5
    96b0:	431a      	orrs	r2, r3
    96b2:	1aba      	subs	r2, r7, r2
    96b4:	1a61      	subs	r1, r4, r1
    96b6:	4297      	cmp	r7, r2
    96b8:	41a4      	sbcs	r4, r4
    96ba:	0017      	movs	r7, r2
    96bc:	4264      	negs	r4, r4
    96be:	1b0c      	subs	r4, r1, r4
    96c0:	0223      	lsls	r3, r4, #8
    96c2:	d562      	bpl.n	978a <__aeabi_dadd+0x17a>
    96c4:	0264      	lsls	r4, r4, #9
    96c6:	0a65      	lsrs	r5, r4, #9
    96c8:	2d00      	cmp	r5, #0
    96ca:	d100      	bne.n	96ce <__aeabi_dadd+0xbe>
    96cc:	e0df      	b.n	988e <__aeabi_dadd+0x27e>
    96ce:	0028      	movs	r0, r5
    96d0:	f7fa fe9a 	bl	4408 <__clzsi2>
    96d4:	0003      	movs	r3, r0
    96d6:	3b08      	subs	r3, #8
    96d8:	2b1f      	cmp	r3, #31
    96da:	dd00      	ble.n	96de <__aeabi_dadd+0xce>
    96dc:	e0d2      	b.n	9884 <__aeabi_dadd+0x274>
    96de:	2220      	movs	r2, #32
    96e0:	003c      	movs	r4, r7
    96e2:	1ad2      	subs	r2, r2, r3
    96e4:	409d      	lsls	r5, r3
    96e6:	40d4      	lsrs	r4, r2
    96e8:	409f      	lsls	r7, r3
    96ea:	4325      	orrs	r5, r4
    96ec:	429e      	cmp	r6, r3
    96ee:	dd00      	ble.n	96f2 <__aeabi_dadd+0xe2>
    96f0:	e0c4      	b.n	987c <__aeabi_dadd+0x26c>
    96f2:	1b9e      	subs	r6, r3, r6
    96f4:	1c73      	adds	r3, r6, #1
    96f6:	2b1f      	cmp	r3, #31
    96f8:	dd00      	ble.n	96fc <__aeabi_dadd+0xec>
    96fa:	e0f1      	b.n	98e0 <__aeabi_dadd+0x2d0>
    96fc:	2220      	movs	r2, #32
    96fe:	0038      	movs	r0, r7
    9700:	0029      	movs	r1, r5
    9702:	1ad2      	subs	r2, r2, r3
    9704:	40d8      	lsrs	r0, r3
    9706:	4091      	lsls	r1, r2
    9708:	4097      	lsls	r7, r2
    970a:	002c      	movs	r4, r5
    970c:	4301      	orrs	r1, r0
    970e:	1e78      	subs	r0, r7, #1
    9710:	4187      	sbcs	r7, r0
    9712:	40dc      	lsrs	r4, r3
    9714:	2600      	movs	r6, #0
    9716:	430f      	orrs	r7, r1
    9718:	077b      	lsls	r3, r7, #29
    971a:	d009      	beq.n	9730 <__aeabi_dadd+0x120>
    971c:	230f      	movs	r3, #15
    971e:	403b      	ands	r3, r7
    9720:	2b04      	cmp	r3, #4
    9722:	d005      	beq.n	9730 <__aeabi_dadd+0x120>
    9724:	1d3b      	adds	r3, r7, #4
    9726:	42bb      	cmp	r3, r7
    9728:	41bf      	sbcs	r7, r7
    972a:	427f      	negs	r7, r7
    972c:	19e4      	adds	r4, r4, r7
    972e:	001f      	movs	r7, r3
    9730:	0223      	lsls	r3, r4, #8
    9732:	d52c      	bpl.n	978e <__aeabi_dadd+0x17e>
    9734:	4b96      	ldr	r3, [pc, #600]	; (9990 <__aeabi_dadd+0x380>)
    9736:	3601      	adds	r6, #1
    9738:	429e      	cmp	r6, r3
    973a:	d100      	bne.n	973e <__aeabi_dadd+0x12e>
    973c:	e09a      	b.n	9874 <__aeabi_dadd+0x264>
    973e:	4645      	mov	r5, r8
    9740:	4b94      	ldr	r3, [pc, #592]	; (9994 <__aeabi_dadd+0x384>)
    9742:	08ff      	lsrs	r7, r7, #3
    9744:	401c      	ands	r4, r3
    9746:	0760      	lsls	r0, r4, #29
    9748:	0576      	lsls	r6, r6, #21
    974a:	0264      	lsls	r4, r4, #9
    974c:	4307      	orrs	r7, r0
    974e:	0b24      	lsrs	r4, r4, #12
    9750:	0d76      	lsrs	r6, r6, #21
    9752:	2100      	movs	r1, #0
    9754:	0324      	lsls	r4, r4, #12
    9756:	0b23      	lsrs	r3, r4, #12
    9758:	0d0c      	lsrs	r4, r1, #20
    975a:	4a8f      	ldr	r2, [pc, #572]	; (9998 <__aeabi_dadd+0x388>)
    975c:	0524      	lsls	r4, r4, #20
    975e:	431c      	orrs	r4, r3
    9760:	4014      	ands	r4, r2
    9762:	0533      	lsls	r3, r6, #20
    9764:	4323      	orrs	r3, r4
    9766:	005b      	lsls	r3, r3, #1
    9768:	07ed      	lsls	r5, r5, #31
    976a:	085b      	lsrs	r3, r3, #1
    976c:	432b      	orrs	r3, r5
    976e:	0038      	movs	r0, r7
    9770:	0019      	movs	r1, r3
    9772:	bc3c      	pop	{r2, r3, r4, r5}
    9774:	4690      	mov	r8, r2
    9776:	4699      	mov	r9, r3
    9778:	46a2      	mov	sl, r4
    977a:	46ab      	mov	fp, r5
    977c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    977e:	4664      	mov	r4, ip
    9780:	4304      	orrs	r4, r0
    9782:	d100      	bne.n	9786 <__aeabi_dadd+0x176>
    9784:	e211      	b.n	9baa <__aeabi_dadd+0x59a>
    9786:	0004      	movs	r4, r0
    9788:	4667      	mov	r7, ip
    978a:	077b      	lsls	r3, r7, #29
    978c:	d1c6      	bne.n	971c <__aeabi_dadd+0x10c>
    978e:	4645      	mov	r5, r8
    9790:	0760      	lsls	r0, r4, #29
    9792:	08ff      	lsrs	r7, r7, #3
    9794:	4307      	orrs	r7, r0
    9796:	08e4      	lsrs	r4, r4, #3
    9798:	4b7d      	ldr	r3, [pc, #500]	; (9990 <__aeabi_dadd+0x380>)
    979a:	429e      	cmp	r6, r3
    979c:	d030      	beq.n	9800 <__aeabi_dadd+0x1f0>
    979e:	0324      	lsls	r4, r4, #12
    97a0:	0576      	lsls	r6, r6, #21
    97a2:	0b24      	lsrs	r4, r4, #12
    97a4:	0d76      	lsrs	r6, r6, #21
    97a6:	e7d4      	b.n	9752 <__aeabi_dadd+0x142>
    97a8:	1a33      	subs	r3, r6, r0
    97aa:	469a      	mov	sl, r3
    97ac:	2b00      	cmp	r3, #0
    97ae:	dd78      	ble.n	98a2 <__aeabi_dadd+0x292>
    97b0:	2800      	cmp	r0, #0
    97b2:	d031      	beq.n	9818 <__aeabi_dadd+0x208>
    97b4:	4876      	ldr	r0, [pc, #472]	; (9990 <__aeabi_dadd+0x380>)
    97b6:	4286      	cmp	r6, r0
    97b8:	d0ae      	beq.n	9718 <__aeabi_dadd+0x108>
    97ba:	2080      	movs	r0, #128	; 0x80
    97bc:	0400      	lsls	r0, r0, #16
    97be:	4301      	orrs	r1, r0
    97c0:	4653      	mov	r3, sl
    97c2:	2b38      	cmp	r3, #56	; 0x38
    97c4:	dc00      	bgt.n	97c8 <__aeabi_dadd+0x1b8>
    97c6:	e0e9      	b.n	999c <__aeabi_dadd+0x38c>
    97c8:	430a      	orrs	r2, r1
    97ca:	1e51      	subs	r1, r2, #1
    97cc:	418a      	sbcs	r2, r1
    97ce:	2100      	movs	r1, #0
    97d0:	19d2      	adds	r2, r2, r7
    97d2:	42ba      	cmp	r2, r7
    97d4:	41bf      	sbcs	r7, r7
    97d6:	1909      	adds	r1, r1, r4
    97d8:	427c      	negs	r4, r7
    97da:	0017      	movs	r7, r2
    97dc:	190c      	adds	r4, r1, r4
    97de:	0223      	lsls	r3, r4, #8
    97e0:	d5d3      	bpl.n	978a <__aeabi_dadd+0x17a>
    97e2:	4b6b      	ldr	r3, [pc, #428]	; (9990 <__aeabi_dadd+0x380>)
    97e4:	3601      	adds	r6, #1
    97e6:	429e      	cmp	r6, r3
    97e8:	d100      	bne.n	97ec <__aeabi_dadd+0x1dc>
    97ea:	e13a      	b.n	9a62 <__aeabi_dadd+0x452>
    97ec:	2001      	movs	r0, #1
    97ee:	4b69      	ldr	r3, [pc, #420]	; (9994 <__aeabi_dadd+0x384>)
    97f0:	401c      	ands	r4, r3
    97f2:	087b      	lsrs	r3, r7, #1
    97f4:	4007      	ands	r7, r0
    97f6:	431f      	orrs	r7, r3
    97f8:	07e0      	lsls	r0, r4, #31
    97fa:	4307      	orrs	r7, r0
    97fc:	0864      	lsrs	r4, r4, #1
    97fe:	e78b      	b.n	9718 <__aeabi_dadd+0x108>
    9800:	0023      	movs	r3, r4
    9802:	433b      	orrs	r3, r7
    9804:	d100      	bne.n	9808 <__aeabi_dadd+0x1f8>
    9806:	e1cb      	b.n	9ba0 <__aeabi_dadd+0x590>
    9808:	2280      	movs	r2, #128	; 0x80
    980a:	0312      	lsls	r2, r2, #12
    980c:	4314      	orrs	r4, r2
    980e:	0324      	lsls	r4, r4, #12
    9810:	0b24      	lsrs	r4, r4, #12
    9812:	e79e      	b.n	9752 <__aeabi_dadd+0x142>
    9814:	002e      	movs	r6, r5
    9816:	e77f      	b.n	9718 <__aeabi_dadd+0x108>
    9818:	0008      	movs	r0, r1
    981a:	4310      	orrs	r0, r2
    981c:	d100      	bne.n	9820 <__aeabi_dadd+0x210>
    981e:	e0b4      	b.n	998a <__aeabi_dadd+0x37a>
    9820:	1e58      	subs	r0, r3, #1
    9822:	2800      	cmp	r0, #0
    9824:	d000      	beq.n	9828 <__aeabi_dadd+0x218>
    9826:	e0de      	b.n	99e6 <__aeabi_dadd+0x3d6>
    9828:	18ba      	adds	r2, r7, r2
    982a:	42ba      	cmp	r2, r7
    982c:	419b      	sbcs	r3, r3
    982e:	1864      	adds	r4, r4, r1
    9830:	425b      	negs	r3, r3
    9832:	18e4      	adds	r4, r4, r3
    9834:	0017      	movs	r7, r2
    9836:	2601      	movs	r6, #1
    9838:	0223      	lsls	r3, r4, #8
    983a:	d5a6      	bpl.n	978a <__aeabi_dadd+0x17a>
    983c:	2602      	movs	r6, #2
    983e:	e7d5      	b.n	97ec <__aeabi_dadd+0x1dc>
    9840:	2d00      	cmp	r5, #0
    9842:	d16e      	bne.n	9922 <__aeabi_dadd+0x312>
    9844:	1c70      	adds	r0, r6, #1
    9846:	0540      	lsls	r0, r0, #21
    9848:	0d40      	lsrs	r0, r0, #21
    984a:	2801      	cmp	r0, #1
    984c:	dc00      	bgt.n	9850 <__aeabi_dadd+0x240>
    984e:	e0f9      	b.n	9a44 <__aeabi_dadd+0x434>
    9850:	1ab8      	subs	r0, r7, r2
    9852:	4684      	mov	ip, r0
    9854:	4287      	cmp	r7, r0
    9856:	4180      	sbcs	r0, r0
    9858:	1ae5      	subs	r5, r4, r3
    985a:	4240      	negs	r0, r0
    985c:	1a2d      	subs	r5, r5, r0
    985e:	0228      	lsls	r0, r5, #8
    9860:	d400      	bmi.n	9864 <__aeabi_dadd+0x254>
    9862:	e089      	b.n	9978 <__aeabi_dadd+0x368>
    9864:	1bd7      	subs	r7, r2, r7
    9866:	42ba      	cmp	r2, r7
    9868:	4192      	sbcs	r2, r2
    986a:	1b1c      	subs	r4, r3, r4
    986c:	4252      	negs	r2, r2
    986e:	1aa5      	subs	r5, r4, r2
    9870:	46d8      	mov	r8, fp
    9872:	e729      	b.n	96c8 <__aeabi_dadd+0xb8>
    9874:	4645      	mov	r5, r8
    9876:	2400      	movs	r4, #0
    9878:	2700      	movs	r7, #0
    987a:	e76a      	b.n	9752 <__aeabi_dadd+0x142>
    987c:	4c45      	ldr	r4, [pc, #276]	; (9994 <__aeabi_dadd+0x384>)
    987e:	1af6      	subs	r6, r6, r3
    9880:	402c      	ands	r4, r5
    9882:	e749      	b.n	9718 <__aeabi_dadd+0x108>
    9884:	003d      	movs	r5, r7
    9886:	3828      	subs	r0, #40	; 0x28
    9888:	4085      	lsls	r5, r0
    988a:	2700      	movs	r7, #0
    988c:	e72e      	b.n	96ec <__aeabi_dadd+0xdc>
    988e:	0038      	movs	r0, r7
    9890:	f7fa fdba 	bl	4408 <__clzsi2>
    9894:	3020      	adds	r0, #32
    9896:	e71d      	b.n	96d4 <__aeabi_dadd+0xc4>
    9898:	430a      	orrs	r2, r1
    989a:	1e51      	subs	r1, r2, #1
    989c:	418a      	sbcs	r2, r1
    989e:	2100      	movs	r1, #0
    98a0:	e707      	b.n	96b2 <__aeabi_dadd+0xa2>
    98a2:	2b00      	cmp	r3, #0
    98a4:	d000      	beq.n	98a8 <__aeabi_dadd+0x298>
    98a6:	e0f3      	b.n	9a90 <__aeabi_dadd+0x480>
    98a8:	1c70      	adds	r0, r6, #1
    98aa:	0543      	lsls	r3, r0, #21
    98ac:	0d5b      	lsrs	r3, r3, #21
    98ae:	2b01      	cmp	r3, #1
    98b0:	dc00      	bgt.n	98b4 <__aeabi_dadd+0x2a4>
    98b2:	e0ad      	b.n	9a10 <__aeabi_dadd+0x400>
    98b4:	4b36      	ldr	r3, [pc, #216]	; (9990 <__aeabi_dadd+0x380>)
    98b6:	4298      	cmp	r0, r3
    98b8:	d100      	bne.n	98bc <__aeabi_dadd+0x2ac>
    98ba:	e0d1      	b.n	9a60 <__aeabi_dadd+0x450>
    98bc:	18ba      	adds	r2, r7, r2
    98be:	42ba      	cmp	r2, r7
    98c0:	41bf      	sbcs	r7, r7
    98c2:	1864      	adds	r4, r4, r1
    98c4:	427f      	negs	r7, r7
    98c6:	19e4      	adds	r4, r4, r7
    98c8:	07e7      	lsls	r7, r4, #31
    98ca:	0852      	lsrs	r2, r2, #1
    98cc:	4317      	orrs	r7, r2
    98ce:	0864      	lsrs	r4, r4, #1
    98d0:	0006      	movs	r6, r0
    98d2:	e721      	b.n	9718 <__aeabi_dadd+0x108>
    98d4:	482e      	ldr	r0, [pc, #184]	; (9990 <__aeabi_dadd+0x380>)
    98d6:	4285      	cmp	r5, r0
    98d8:	d100      	bne.n	98dc <__aeabi_dadd+0x2cc>
    98da:	e093      	b.n	9a04 <__aeabi_dadd+0x3f4>
    98dc:	001d      	movs	r5, r3
    98de:	e6d0      	b.n	9682 <__aeabi_dadd+0x72>
    98e0:	0029      	movs	r1, r5
    98e2:	3e1f      	subs	r6, #31
    98e4:	40f1      	lsrs	r1, r6
    98e6:	2b20      	cmp	r3, #32
    98e8:	d100      	bne.n	98ec <__aeabi_dadd+0x2dc>
    98ea:	e08d      	b.n	9a08 <__aeabi_dadd+0x3f8>
    98ec:	2240      	movs	r2, #64	; 0x40
    98ee:	1ad3      	subs	r3, r2, r3
    98f0:	409d      	lsls	r5, r3
    98f2:	432f      	orrs	r7, r5
    98f4:	1e7d      	subs	r5, r7, #1
    98f6:	41af      	sbcs	r7, r5
    98f8:	2400      	movs	r4, #0
    98fa:	430f      	orrs	r7, r1
    98fc:	2600      	movs	r6, #0
    98fe:	e744      	b.n	978a <__aeabi_dadd+0x17a>
    9900:	002b      	movs	r3, r5
    9902:	0008      	movs	r0, r1
    9904:	3b20      	subs	r3, #32
    9906:	40d8      	lsrs	r0, r3
    9908:	0003      	movs	r3, r0
    990a:	2d20      	cmp	r5, #32
    990c:	d100      	bne.n	9910 <__aeabi_dadd+0x300>
    990e:	e07d      	b.n	9a0c <__aeabi_dadd+0x3fc>
    9910:	2040      	movs	r0, #64	; 0x40
    9912:	1b45      	subs	r5, r0, r5
    9914:	40a9      	lsls	r1, r5
    9916:	430a      	orrs	r2, r1
    9918:	1e51      	subs	r1, r2, #1
    991a:	418a      	sbcs	r2, r1
    991c:	2100      	movs	r1, #0
    991e:	431a      	orrs	r2, r3
    9920:	e6c7      	b.n	96b2 <__aeabi_dadd+0xa2>
    9922:	2e00      	cmp	r6, #0
    9924:	d050      	beq.n	99c8 <__aeabi_dadd+0x3b8>
    9926:	4e1a      	ldr	r6, [pc, #104]	; (9990 <__aeabi_dadd+0x380>)
    9928:	42b0      	cmp	r0, r6
    992a:	d057      	beq.n	99dc <__aeabi_dadd+0x3cc>
    992c:	2680      	movs	r6, #128	; 0x80
    992e:	426b      	negs	r3, r5
    9930:	4699      	mov	r9, r3
    9932:	0436      	lsls	r6, r6, #16
    9934:	4334      	orrs	r4, r6
    9936:	464b      	mov	r3, r9
    9938:	2b38      	cmp	r3, #56	; 0x38
    993a:	dd00      	ble.n	993e <__aeabi_dadd+0x32e>
    993c:	e0d6      	b.n	9aec <__aeabi_dadd+0x4dc>
    993e:	2b1f      	cmp	r3, #31
    9940:	dd00      	ble.n	9944 <__aeabi_dadd+0x334>
    9942:	e135      	b.n	9bb0 <__aeabi_dadd+0x5a0>
    9944:	2620      	movs	r6, #32
    9946:	1af5      	subs	r5, r6, r3
    9948:	0026      	movs	r6, r4
    994a:	40ae      	lsls	r6, r5
    994c:	46b2      	mov	sl, r6
    994e:	003e      	movs	r6, r7
    9950:	40de      	lsrs	r6, r3
    9952:	46ac      	mov	ip, r5
    9954:	0035      	movs	r5, r6
    9956:	4656      	mov	r6, sl
    9958:	432e      	orrs	r6, r5
    995a:	4665      	mov	r5, ip
    995c:	40af      	lsls	r7, r5
    995e:	1e7d      	subs	r5, r7, #1
    9960:	41af      	sbcs	r7, r5
    9962:	40dc      	lsrs	r4, r3
    9964:	4337      	orrs	r7, r6
    9966:	1bd7      	subs	r7, r2, r7
    9968:	42ba      	cmp	r2, r7
    996a:	4192      	sbcs	r2, r2
    996c:	1b0c      	subs	r4, r1, r4
    996e:	4252      	negs	r2, r2
    9970:	1aa4      	subs	r4, r4, r2
    9972:	0006      	movs	r6, r0
    9974:	46d8      	mov	r8, fp
    9976:	e6a3      	b.n	96c0 <__aeabi_dadd+0xb0>
    9978:	4664      	mov	r4, ip
    997a:	4667      	mov	r7, ip
    997c:	432c      	orrs	r4, r5
    997e:	d000      	beq.n	9982 <__aeabi_dadd+0x372>
    9980:	e6a2      	b.n	96c8 <__aeabi_dadd+0xb8>
    9982:	2500      	movs	r5, #0
    9984:	2600      	movs	r6, #0
    9986:	2700      	movs	r7, #0
    9988:	e706      	b.n	9798 <__aeabi_dadd+0x188>
    998a:	001e      	movs	r6, r3
    998c:	e6c4      	b.n	9718 <__aeabi_dadd+0x108>
    998e:	46c0      	nop			; (mov r8, r8)
    9990:	000007ff 	.word	0x000007ff
    9994:	ff7fffff 	.word	0xff7fffff
    9998:	800fffff 	.word	0x800fffff
    999c:	2b1f      	cmp	r3, #31
    999e:	dc63      	bgt.n	9a68 <__aeabi_dadd+0x458>
    99a0:	2020      	movs	r0, #32
    99a2:	1ac3      	subs	r3, r0, r3
    99a4:	0008      	movs	r0, r1
    99a6:	4098      	lsls	r0, r3
    99a8:	469c      	mov	ip, r3
    99aa:	4683      	mov	fp, r0
    99ac:	4653      	mov	r3, sl
    99ae:	0010      	movs	r0, r2
    99b0:	40d8      	lsrs	r0, r3
    99b2:	0003      	movs	r3, r0
    99b4:	4658      	mov	r0, fp
    99b6:	4318      	orrs	r0, r3
    99b8:	4663      	mov	r3, ip
    99ba:	409a      	lsls	r2, r3
    99bc:	1e53      	subs	r3, r2, #1
    99be:	419a      	sbcs	r2, r3
    99c0:	4653      	mov	r3, sl
    99c2:	4302      	orrs	r2, r0
    99c4:	40d9      	lsrs	r1, r3
    99c6:	e703      	b.n	97d0 <__aeabi_dadd+0x1c0>
    99c8:	0026      	movs	r6, r4
    99ca:	433e      	orrs	r6, r7
    99cc:	d006      	beq.n	99dc <__aeabi_dadd+0x3cc>
    99ce:	43eb      	mvns	r3, r5
    99d0:	4699      	mov	r9, r3
    99d2:	2b00      	cmp	r3, #0
    99d4:	d0c7      	beq.n	9966 <__aeabi_dadd+0x356>
    99d6:	4e94      	ldr	r6, [pc, #592]	; (9c28 <__aeabi_dadd+0x618>)
    99d8:	42b0      	cmp	r0, r6
    99da:	d1ac      	bne.n	9936 <__aeabi_dadd+0x326>
    99dc:	000c      	movs	r4, r1
    99de:	0017      	movs	r7, r2
    99e0:	0006      	movs	r6, r0
    99e2:	46d8      	mov	r8, fp
    99e4:	e698      	b.n	9718 <__aeabi_dadd+0x108>
    99e6:	4b90      	ldr	r3, [pc, #576]	; (9c28 <__aeabi_dadd+0x618>)
    99e8:	459a      	cmp	sl, r3
    99ea:	d00b      	beq.n	9a04 <__aeabi_dadd+0x3f4>
    99ec:	4682      	mov	sl, r0
    99ee:	e6e7      	b.n	97c0 <__aeabi_dadd+0x1b0>
    99f0:	2800      	cmp	r0, #0
    99f2:	d000      	beq.n	99f6 <__aeabi_dadd+0x3e6>
    99f4:	e09e      	b.n	9b34 <__aeabi_dadd+0x524>
    99f6:	0018      	movs	r0, r3
    99f8:	4310      	orrs	r0, r2
    99fa:	d100      	bne.n	99fe <__aeabi_dadd+0x3ee>
    99fc:	e0e9      	b.n	9bd2 <__aeabi_dadd+0x5c2>
    99fe:	001c      	movs	r4, r3
    9a00:	0017      	movs	r7, r2
    9a02:	46d8      	mov	r8, fp
    9a04:	4e88      	ldr	r6, [pc, #544]	; (9c28 <__aeabi_dadd+0x618>)
    9a06:	e687      	b.n	9718 <__aeabi_dadd+0x108>
    9a08:	2500      	movs	r5, #0
    9a0a:	e772      	b.n	98f2 <__aeabi_dadd+0x2e2>
    9a0c:	2100      	movs	r1, #0
    9a0e:	e782      	b.n	9916 <__aeabi_dadd+0x306>
    9a10:	0023      	movs	r3, r4
    9a12:	433b      	orrs	r3, r7
    9a14:	2e00      	cmp	r6, #0
    9a16:	d000      	beq.n	9a1a <__aeabi_dadd+0x40a>
    9a18:	e0ab      	b.n	9b72 <__aeabi_dadd+0x562>
    9a1a:	2b00      	cmp	r3, #0
    9a1c:	d100      	bne.n	9a20 <__aeabi_dadd+0x410>
    9a1e:	e0e7      	b.n	9bf0 <__aeabi_dadd+0x5e0>
    9a20:	000b      	movs	r3, r1
    9a22:	4313      	orrs	r3, r2
    9a24:	d100      	bne.n	9a28 <__aeabi_dadd+0x418>
    9a26:	e677      	b.n	9718 <__aeabi_dadd+0x108>
    9a28:	18ba      	adds	r2, r7, r2
    9a2a:	42ba      	cmp	r2, r7
    9a2c:	41bf      	sbcs	r7, r7
    9a2e:	1864      	adds	r4, r4, r1
    9a30:	427f      	negs	r7, r7
    9a32:	19e4      	adds	r4, r4, r7
    9a34:	0223      	lsls	r3, r4, #8
    9a36:	d400      	bmi.n	9a3a <__aeabi_dadd+0x42a>
    9a38:	e0f2      	b.n	9c20 <__aeabi_dadd+0x610>
    9a3a:	4b7c      	ldr	r3, [pc, #496]	; (9c2c <__aeabi_dadd+0x61c>)
    9a3c:	0017      	movs	r7, r2
    9a3e:	401c      	ands	r4, r3
    9a40:	0006      	movs	r6, r0
    9a42:	e669      	b.n	9718 <__aeabi_dadd+0x108>
    9a44:	0020      	movs	r0, r4
    9a46:	4338      	orrs	r0, r7
    9a48:	2e00      	cmp	r6, #0
    9a4a:	d1d1      	bne.n	99f0 <__aeabi_dadd+0x3e0>
    9a4c:	2800      	cmp	r0, #0
    9a4e:	d15b      	bne.n	9b08 <__aeabi_dadd+0x4f8>
    9a50:	001c      	movs	r4, r3
    9a52:	4314      	orrs	r4, r2
    9a54:	d100      	bne.n	9a58 <__aeabi_dadd+0x448>
    9a56:	e0a8      	b.n	9baa <__aeabi_dadd+0x59a>
    9a58:	001c      	movs	r4, r3
    9a5a:	0017      	movs	r7, r2
    9a5c:	46d8      	mov	r8, fp
    9a5e:	e65b      	b.n	9718 <__aeabi_dadd+0x108>
    9a60:	0006      	movs	r6, r0
    9a62:	2400      	movs	r4, #0
    9a64:	2700      	movs	r7, #0
    9a66:	e697      	b.n	9798 <__aeabi_dadd+0x188>
    9a68:	4650      	mov	r0, sl
    9a6a:	000b      	movs	r3, r1
    9a6c:	3820      	subs	r0, #32
    9a6e:	40c3      	lsrs	r3, r0
    9a70:	4699      	mov	r9, r3
    9a72:	4653      	mov	r3, sl
    9a74:	2b20      	cmp	r3, #32
    9a76:	d100      	bne.n	9a7a <__aeabi_dadd+0x46a>
    9a78:	e095      	b.n	9ba6 <__aeabi_dadd+0x596>
    9a7a:	2340      	movs	r3, #64	; 0x40
    9a7c:	4650      	mov	r0, sl
    9a7e:	1a1b      	subs	r3, r3, r0
    9a80:	4099      	lsls	r1, r3
    9a82:	430a      	orrs	r2, r1
    9a84:	1e51      	subs	r1, r2, #1
    9a86:	418a      	sbcs	r2, r1
    9a88:	464b      	mov	r3, r9
    9a8a:	2100      	movs	r1, #0
    9a8c:	431a      	orrs	r2, r3
    9a8e:	e69f      	b.n	97d0 <__aeabi_dadd+0x1c0>
    9a90:	2e00      	cmp	r6, #0
    9a92:	d130      	bne.n	9af6 <__aeabi_dadd+0x4e6>
    9a94:	0026      	movs	r6, r4
    9a96:	433e      	orrs	r6, r7
    9a98:	d067      	beq.n	9b6a <__aeabi_dadd+0x55a>
    9a9a:	43db      	mvns	r3, r3
    9a9c:	469a      	mov	sl, r3
    9a9e:	2b00      	cmp	r3, #0
    9aa0:	d01c      	beq.n	9adc <__aeabi_dadd+0x4cc>
    9aa2:	4e61      	ldr	r6, [pc, #388]	; (9c28 <__aeabi_dadd+0x618>)
    9aa4:	42b0      	cmp	r0, r6
    9aa6:	d060      	beq.n	9b6a <__aeabi_dadd+0x55a>
    9aa8:	4653      	mov	r3, sl
    9aaa:	2b38      	cmp	r3, #56	; 0x38
    9aac:	dd00      	ble.n	9ab0 <__aeabi_dadd+0x4a0>
    9aae:	e096      	b.n	9bde <__aeabi_dadd+0x5ce>
    9ab0:	2b1f      	cmp	r3, #31
    9ab2:	dd00      	ble.n	9ab6 <__aeabi_dadd+0x4a6>
    9ab4:	e09f      	b.n	9bf6 <__aeabi_dadd+0x5e6>
    9ab6:	2620      	movs	r6, #32
    9ab8:	1af3      	subs	r3, r6, r3
    9aba:	0026      	movs	r6, r4
    9abc:	409e      	lsls	r6, r3
    9abe:	469c      	mov	ip, r3
    9ac0:	46b3      	mov	fp, r6
    9ac2:	4653      	mov	r3, sl
    9ac4:	003e      	movs	r6, r7
    9ac6:	40de      	lsrs	r6, r3
    9ac8:	0033      	movs	r3, r6
    9aca:	465e      	mov	r6, fp
    9acc:	431e      	orrs	r6, r3
    9ace:	4663      	mov	r3, ip
    9ad0:	409f      	lsls	r7, r3
    9ad2:	1e7b      	subs	r3, r7, #1
    9ad4:	419f      	sbcs	r7, r3
    9ad6:	4653      	mov	r3, sl
    9ad8:	40dc      	lsrs	r4, r3
    9ada:	4337      	orrs	r7, r6
    9adc:	18bf      	adds	r7, r7, r2
    9ade:	4297      	cmp	r7, r2
    9ae0:	4192      	sbcs	r2, r2
    9ae2:	1864      	adds	r4, r4, r1
    9ae4:	4252      	negs	r2, r2
    9ae6:	18a4      	adds	r4, r4, r2
    9ae8:	0006      	movs	r6, r0
    9aea:	e678      	b.n	97de <__aeabi_dadd+0x1ce>
    9aec:	4327      	orrs	r7, r4
    9aee:	1e7c      	subs	r4, r7, #1
    9af0:	41a7      	sbcs	r7, r4
    9af2:	2400      	movs	r4, #0
    9af4:	e737      	b.n	9966 <__aeabi_dadd+0x356>
    9af6:	4e4c      	ldr	r6, [pc, #304]	; (9c28 <__aeabi_dadd+0x618>)
    9af8:	42b0      	cmp	r0, r6
    9afa:	d036      	beq.n	9b6a <__aeabi_dadd+0x55a>
    9afc:	2680      	movs	r6, #128	; 0x80
    9afe:	425b      	negs	r3, r3
    9b00:	0436      	lsls	r6, r6, #16
    9b02:	469a      	mov	sl, r3
    9b04:	4334      	orrs	r4, r6
    9b06:	e7cf      	b.n	9aa8 <__aeabi_dadd+0x498>
    9b08:	0018      	movs	r0, r3
    9b0a:	4310      	orrs	r0, r2
    9b0c:	d100      	bne.n	9b10 <__aeabi_dadd+0x500>
    9b0e:	e603      	b.n	9718 <__aeabi_dadd+0x108>
    9b10:	1ab8      	subs	r0, r7, r2
    9b12:	4684      	mov	ip, r0
    9b14:	4567      	cmp	r7, ip
    9b16:	41ad      	sbcs	r5, r5
    9b18:	1ae0      	subs	r0, r4, r3
    9b1a:	426d      	negs	r5, r5
    9b1c:	1b40      	subs	r0, r0, r5
    9b1e:	0205      	lsls	r5, r0, #8
    9b20:	d400      	bmi.n	9b24 <__aeabi_dadd+0x514>
    9b22:	e62c      	b.n	977e <__aeabi_dadd+0x16e>
    9b24:	1bd7      	subs	r7, r2, r7
    9b26:	42ba      	cmp	r2, r7
    9b28:	4192      	sbcs	r2, r2
    9b2a:	1b1c      	subs	r4, r3, r4
    9b2c:	4252      	negs	r2, r2
    9b2e:	1aa4      	subs	r4, r4, r2
    9b30:	46d8      	mov	r8, fp
    9b32:	e5f1      	b.n	9718 <__aeabi_dadd+0x108>
    9b34:	0018      	movs	r0, r3
    9b36:	4310      	orrs	r0, r2
    9b38:	d100      	bne.n	9b3c <__aeabi_dadd+0x52c>
    9b3a:	e763      	b.n	9a04 <__aeabi_dadd+0x3f4>
    9b3c:	08f8      	lsrs	r0, r7, #3
    9b3e:	0767      	lsls	r7, r4, #29
    9b40:	4307      	orrs	r7, r0
    9b42:	2080      	movs	r0, #128	; 0x80
    9b44:	08e4      	lsrs	r4, r4, #3
    9b46:	0300      	lsls	r0, r0, #12
    9b48:	4204      	tst	r4, r0
    9b4a:	d008      	beq.n	9b5e <__aeabi_dadd+0x54e>
    9b4c:	08dd      	lsrs	r5, r3, #3
    9b4e:	4205      	tst	r5, r0
    9b50:	d105      	bne.n	9b5e <__aeabi_dadd+0x54e>
    9b52:	08d2      	lsrs	r2, r2, #3
    9b54:	0759      	lsls	r1, r3, #29
    9b56:	4311      	orrs	r1, r2
    9b58:	000f      	movs	r7, r1
    9b5a:	002c      	movs	r4, r5
    9b5c:	46d8      	mov	r8, fp
    9b5e:	0f7b      	lsrs	r3, r7, #29
    9b60:	00e4      	lsls	r4, r4, #3
    9b62:	431c      	orrs	r4, r3
    9b64:	00ff      	lsls	r7, r7, #3
    9b66:	4e30      	ldr	r6, [pc, #192]	; (9c28 <__aeabi_dadd+0x618>)
    9b68:	e5d6      	b.n	9718 <__aeabi_dadd+0x108>
    9b6a:	000c      	movs	r4, r1
    9b6c:	0017      	movs	r7, r2
    9b6e:	0006      	movs	r6, r0
    9b70:	e5d2      	b.n	9718 <__aeabi_dadd+0x108>
    9b72:	2b00      	cmp	r3, #0
    9b74:	d038      	beq.n	9be8 <__aeabi_dadd+0x5d8>
    9b76:	000b      	movs	r3, r1
    9b78:	4313      	orrs	r3, r2
    9b7a:	d100      	bne.n	9b7e <__aeabi_dadd+0x56e>
    9b7c:	e742      	b.n	9a04 <__aeabi_dadd+0x3f4>
    9b7e:	08f8      	lsrs	r0, r7, #3
    9b80:	0767      	lsls	r7, r4, #29
    9b82:	4307      	orrs	r7, r0
    9b84:	2080      	movs	r0, #128	; 0x80
    9b86:	08e4      	lsrs	r4, r4, #3
    9b88:	0300      	lsls	r0, r0, #12
    9b8a:	4204      	tst	r4, r0
    9b8c:	d0e7      	beq.n	9b5e <__aeabi_dadd+0x54e>
    9b8e:	08cb      	lsrs	r3, r1, #3
    9b90:	4203      	tst	r3, r0
    9b92:	d1e4      	bne.n	9b5e <__aeabi_dadd+0x54e>
    9b94:	08d2      	lsrs	r2, r2, #3
    9b96:	0749      	lsls	r1, r1, #29
    9b98:	4311      	orrs	r1, r2
    9b9a:	000f      	movs	r7, r1
    9b9c:	001c      	movs	r4, r3
    9b9e:	e7de      	b.n	9b5e <__aeabi_dadd+0x54e>
    9ba0:	2700      	movs	r7, #0
    9ba2:	2400      	movs	r4, #0
    9ba4:	e5d5      	b.n	9752 <__aeabi_dadd+0x142>
    9ba6:	2100      	movs	r1, #0
    9ba8:	e76b      	b.n	9a82 <__aeabi_dadd+0x472>
    9baa:	2500      	movs	r5, #0
    9bac:	2700      	movs	r7, #0
    9bae:	e5f3      	b.n	9798 <__aeabi_dadd+0x188>
    9bb0:	464e      	mov	r6, r9
    9bb2:	0025      	movs	r5, r4
    9bb4:	3e20      	subs	r6, #32
    9bb6:	40f5      	lsrs	r5, r6
    9bb8:	464b      	mov	r3, r9
    9bba:	002e      	movs	r6, r5
    9bbc:	2b20      	cmp	r3, #32
    9bbe:	d02d      	beq.n	9c1c <__aeabi_dadd+0x60c>
    9bc0:	2540      	movs	r5, #64	; 0x40
    9bc2:	1aed      	subs	r5, r5, r3
    9bc4:	40ac      	lsls	r4, r5
    9bc6:	4327      	orrs	r7, r4
    9bc8:	1e7c      	subs	r4, r7, #1
    9bca:	41a7      	sbcs	r7, r4
    9bcc:	2400      	movs	r4, #0
    9bce:	4337      	orrs	r7, r6
    9bd0:	e6c9      	b.n	9966 <__aeabi_dadd+0x356>
    9bd2:	2480      	movs	r4, #128	; 0x80
    9bd4:	2500      	movs	r5, #0
    9bd6:	0324      	lsls	r4, r4, #12
    9bd8:	4e13      	ldr	r6, [pc, #76]	; (9c28 <__aeabi_dadd+0x618>)
    9bda:	2700      	movs	r7, #0
    9bdc:	e5dc      	b.n	9798 <__aeabi_dadd+0x188>
    9bde:	4327      	orrs	r7, r4
    9be0:	1e7c      	subs	r4, r7, #1
    9be2:	41a7      	sbcs	r7, r4
    9be4:	2400      	movs	r4, #0
    9be6:	e779      	b.n	9adc <__aeabi_dadd+0x4cc>
    9be8:	000c      	movs	r4, r1
    9bea:	0017      	movs	r7, r2
    9bec:	4e0e      	ldr	r6, [pc, #56]	; (9c28 <__aeabi_dadd+0x618>)
    9bee:	e593      	b.n	9718 <__aeabi_dadd+0x108>
    9bf0:	000c      	movs	r4, r1
    9bf2:	0017      	movs	r7, r2
    9bf4:	e590      	b.n	9718 <__aeabi_dadd+0x108>
    9bf6:	4656      	mov	r6, sl
    9bf8:	0023      	movs	r3, r4
    9bfa:	3e20      	subs	r6, #32
    9bfc:	40f3      	lsrs	r3, r6
    9bfe:	4699      	mov	r9, r3
    9c00:	4653      	mov	r3, sl
    9c02:	2b20      	cmp	r3, #32
    9c04:	d00e      	beq.n	9c24 <__aeabi_dadd+0x614>
    9c06:	2340      	movs	r3, #64	; 0x40
    9c08:	4656      	mov	r6, sl
    9c0a:	1b9b      	subs	r3, r3, r6
    9c0c:	409c      	lsls	r4, r3
    9c0e:	4327      	orrs	r7, r4
    9c10:	1e7c      	subs	r4, r7, #1
    9c12:	41a7      	sbcs	r7, r4
    9c14:	464b      	mov	r3, r9
    9c16:	2400      	movs	r4, #0
    9c18:	431f      	orrs	r7, r3
    9c1a:	e75f      	b.n	9adc <__aeabi_dadd+0x4cc>
    9c1c:	2400      	movs	r4, #0
    9c1e:	e7d2      	b.n	9bc6 <__aeabi_dadd+0x5b6>
    9c20:	0017      	movs	r7, r2
    9c22:	e5b2      	b.n	978a <__aeabi_dadd+0x17a>
    9c24:	2400      	movs	r4, #0
    9c26:	e7f2      	b.n	9c0e <__aeabi_dadd+0x5fe>
    9c28:	000007ff 	.word	0x000007ff
    9c2c:	ff7fffff 	.word	0xff7fffff

00009c30 <__aeabi_dcmpun>:
    9c30:	b570      	push	{r4, r5, r6, lr}
    9c32:	4e0e      	ldr	r6, [pc, #56]	; (9c6c <__aeabi_dcmpun+0x3c>)
    9c34:	030d      	lsls	r5, r1, #12
    9c36:	031c      	lsls	r4, r3, #12
    9c38:	0049      	lsls	r1, r1, #1
    9c3a:	005b      	lsls	r3, r3, #1
    9c3c:	0b2d      	lsrs	r5, r5, #12
    9c3e:	0d49      	lsrs	r1, r1, #21
    9c40:	0b24      	lsrs	r4, r4, #12
    9c42:	0d5b      	lsrs	r3, r3, #21
    9c44:	42b1      	cmp	r1, r6
    9c46:	d004      	beq.n	9c52 <__aeabi_dcmpun+0x22>
    9c48:	4908      	ldr	r1, [pc, #32]	; (9c6c <__aeabi_dcmpun+0x3c>)
    9c4a:	2000      	movs	r0, #0
    9c4c:	428b      	cmp	r3, r1
    9c4e:	d008      	beq.n	9c62 <__aeabi_dcmpun+0x32>
    9c50:	bd70      	pop	{r4, r5, r6, pc}
    9c52:	4305      	orrs	r5, r0
    9c54:	2001      	movs	r0, #1
    9c56:	2d00      	cmp	r5, #0
    9c58:	d1fa      	bne.n	9c50 <__aeabi_dcmpun+0x20>
    9c5a:	4904      	ldr	r1, [pc, #16]	; (9c6c <__aeabi_dcmpun+0x3c>)
    9c5c:	2000      	movs	r0, #0
    9c5e:	428b      	cmp	r3, r1
    9c60:	d1f6      	bne.n	9c50 <__aeabi_dcmpun+0x20>
    9c62:	4314      	orrs	r4, r2
    9c64:	0020      	movs	r0, r4
    9c66:	1e44      	subs	r4, r0, #1
    9c68:	41a0      	sbcs	r0, r4
    9c6a:	e7f1      	b.n	9c50 <__aeabi_dcmpun+0x20>
    9c6c:	000007ff 	.word	0x000007ff
    9c70:	682f2e2e 	.word	0x682f2e2e
    9c74:	732f6c61 	.word	0x732f6c61
    9c78:	682f6372 	.word	0x682f6372
    9c7c:	695f6c61 	.word	0x695f6c61
    9c80:	6d5f6332 	.word	0x6d5f6332
    9c84:	6e79735f 	.word	0x6e79735f
    9c88:	00632e63 	.word	0x00632e63
    9c8c:	682f2e2e 	.word	0x682f2e2e
    9c90:	732f6c61 	.word	0x732f6c61
    9c94:	682f6372 	.word	0x682f6372
    9c98:	695f6c61 	.word	0x695f6c61
    9c9c:	00632e6f 	.word	0x00632e6f
    9ca0:	682f2e2e 	.word	0x682f2e2e
    9ca4:	732f6c61 	.word	0x732f6c61
    9ca8:	682f6372 	.word	0x682f6372
    9cac:	735f6c61 	.word	0x735f6c61
    9cb0:	5f64636c 	.word	0x5f64636c
    9cb4:	636e7973 	.word	0x636e7973
    9cb8:	0000632e 	.word	0x0000632e
    9cbc:	682f2e2e 	.word	0x682f2e2e
    9cc0:	732f6c61 	.word	0x732f6c61
    9cc4:	682f6372 	.word	0x682f6372
    9cc8:	745f6c61 	.word	0x745f6c61
    9ccc:	72656d69 	.word	0x72656d69
    9cd0:	0000632e 	.word	0x0000632e
    9cd4:	682f2e2e 	.word	0x682f2e2e
    9cd8:	732f6c61 	.word	0x732f6c61
    9cdc:	682f6372 	.word	0x682f6372
    9ce0:	755f6c61 	.word	0x755f6c61
    9ce4:	74726173 	.word	0x74726173
    9ce8:	6e79735f 	.word	0x6e79735f
    9cec:	00632e63 	.word	0x00632e63
    9cf0:	682f2e2e 	.word	0x682f2e2e
    9cf4:	752f6c61 	.word	0x752f6c61
    9cf8:	736c6974 	.word	0x736c6974
    9cfc:	6372732f 	.word	0x6372732f
    9d00:	6974752f 	.word	0x6974752f
    9d04:	6c5f736c 	.word	0x6c5f736c
    9d08:	2e747369 	.word	0x2e747369
    9d0c:	00000063 	.word	0x00000063
    9d10:	682f2e2e 	.word	0x682f2e2e
    9d14:	722f6c70 	.word	0x722f6c70
    9d18:	682f6374 	.word	0x682f6374
    9d1c:	725f6c70 	.word	0x725f6c70
    9d20:	632e6374 	.word	0x632e6374
    9d24:	00000000 	.word	0x00000000

00009d28 <_i2cms>:
    9d28:	00000001 00200014 00000100 00000049     ...... .....I...
    9d38:	00d70000 00f42400 682f2e2e 732f6c70     .....$..../hpl/s
    9d48:	6f637265 70682f6d 65735f6c 6d6f6372     ercom/hpl_sercom
    9d58:	0000632e                                .c..

00009d5c <cm_setting>:
    9d5c:	07000100 07000400 07000500 07000600     ................
    9d6c:	07000700 0e010801 0e010a01 0e010c01     ................
    9d7c:	0e010e01 0e011001 0e011201 0e011401     ................
    9d8c:	0e011601 07000100 07000100 07000100     ................
    9d9c:	07000100 07000100 07000100 07000100     ................
    9dac:	07000100 07000100 07000100 07000100     ................
    9dbc:	07000100 07000100 07000100 07000100     ................
    9dcc:	07000100 07000100 07000100 07000100     ................
    9ddc:	07000100 07000100 07000100 07000100     ................
    9dec:	07000100 07000100 07000100 07000100     ................
    9dfc:	07000100 07000100 07000100 07000100     ................

00009e0c <cm7_lut>:
    9e0c:	00000000 00007730 00002431 00005d32     ....0w..1$..2]..
    9e1c:	00006d33 00002e34 00006b35 00007b36     3m..4...5k..6{..
    9e2c:	00002537 00007f38 00002f39 00003f61     7%..8...9/..a?..
    9e3c:	00007a62 00005363 00007c64 00005b65     bz..cS..d|..e[..
    9e4c:	00001b66                                f...

00009e50 <cm14_lut>:
    9e50:	003a1730 00080231 0028c532 0028c333     0.:.1...2.(.3.(.
    9e60:	0018c234 0030c335 0030c736 00280237     4...5.0.6.0.7.(.
    9e70:	0038c738 0038c339 0038c661 0029a362     8.8.9.8.a.8.b.).
    9e80:	00300563 00292364 0030c565 0030c466     c.0.d#).e.0.f.0.
    9e90:	00308767 0018c668 0018c669 0008076a     g.0.h...i...j...
    9ea0:	00124c6b 0010056c 001e066d 001c0e6e     kL..l...m...n...
    9eb0:	0038076f 0038c470 00380f71 0038cc72     o.8.p.8.q.8.r.8.
    9ec0:	00304973 00212074 00180775 00121476     sI0.t !.u...v...
    9ed0:	00181e77 00061878 0018c379 0022117a     w...x...y...z.".
    9ee0:	0000c02d 0001e02b 0002102f 0000c13d     -...+.../...=...
    9ef0:	0009e323 0006182a 00000827 00041029     #...*...'...)...
    9f00:	00020828 00284f40 0031e324 00121225     (...@O(.$.1.%...
    9f10:	0004085c 0000015f 00000000 00000002     \..._...........
    9f20:	00000003 00010002 00010003 00040002     ................
    9f30:	00040003 00050002 00050003 00343332     ............234.
    9f40:	64636261 68676665 00000000 6c786461     abcdefgh....adxl
    9f50:	5f353433 5f766564 74696e69 3d202928     345_dev_init() =
    9f60:	6425203e 0000000a 6c786461 5f353433     > %d....adxl345_
    9f70:	74696e69 3d202928 6425203e 0000000a     init() => %d....
    9f80:	6c786461 5f353433 706f7473 3d202928     adxl345_stop() =
    9f90:	6425203e 0000000a 6c786461 5f353433     > %d....adxl345_
    9fa0:	5f746573 725f7762 5f657461 28676572     set_bw_rate_reg(
    9fb0:	3e3d2029 0a642520 00000000 6c786461     ) => %d.....adxl
    9fc0:	5f353433 5f746573 6f666966 6c74635f     345_set_fifo_ctl
    9fd0:	6765725f 3d202928 6425203e 0000000a     _reg() => %d....
    9fe0:	6c786461 5f353433 72617473 20292874     adxl345_start() 
    9ff0:	25203e3d 00000a64 25206425 20646c35     => %d...%d %5ld 
    a000:	000a6625                                %f..

0000a004 <multipliers_tau_calc>:
    a004:	00130007 00900035                       ....5...

0000a00c <gain_setting_int_cap>:
    a00c:	050b1c3f 0a0b0103                                ?.....

0000a012 <PTC_XY_PINS>:
    a012:	08090a0b 43424645 25240302 29282726     ....EFBC..$%&'()
    a022:	17161514 1f1e1b5c 07060504 13121110     ....\...........
    a032:	30dc0000 30be0000 30780000 2f960000     ...0...0..x0.../
    a042:	30780000 30b00000 30780000 2f960000     ..x0...0..x0.../
    a052:	30be0000 30be0000 30b00000 2f960000     ...0...0...0.../
    a062:	2f8e0000 2f8e0000 2f8e0000 32f40000     .../.../.../...2
    a072:	373c0000 35fc0000 35fc0000 35f80000     ..<7...5...5...5
    a082:	37140000 37140000 37060000 35f80000     ...7...7...7...5
    a092:	37140000 37060000 37140000 35f80000     ...7...7...7...5
    a0a2:	371c0000 371c0000 371c0000 39200000     ...7...7...7.. 9
	...

0000a0b4 <_global_impure_ptr>:
    a0b4:	20000080 00005016 000050ea 000050ea     ... .P...P...P..
    a0c4:	00005002 000050ea 000050ea 000050ea     .P...P...P...P..
    a0d4:	000050ea 000050ea 000050ea 000050bc     .P...P...P...P..
    a0e4:	00004bce 000050ea 00004bc4 00004bd8     .K...P...K...K..
    a0f4:	000050ea 0000500c 00004d98 00004d98     .P...P...M...M..
    a104:	00004d98 00004d98 00004d98 00004d98     .M...M...M...M..
    a114:	00004d98 00004d98 00004d98 000050ea     .M...M...M...P..
    a124:	000050ea 000050ea 000050ea 000050ea     .P...P...P...P..
    a134:	000050ea 000050ea 000050ea 000050ea     .P...P...P...P..
    a144:	000050ea 000050d2 00005026 000050ea     .P...P..&P...P..
    a154:	00005026 000050ea 000050ea 000050ea     &P...P...P...P..
    a164:	000050ea 00004f8c 000050ea 000050ea     .P...O...P...P..
    a174:	00004f96 000050ea 000050ea 000050ea     .O...P...P...P..
    a184:	000050ea 000050ea 00004fc4 000050ea     .P...P...O...P..
    a194:	000050ea 00004ff2 000050ea 000050ea     .P...O...P...P..
    a1a4:	000050ea 000050ea 000050ea 000050ea     .P...P...P...P..
    a1b4:	000050ea 000050ea 000050ea 000050ea     .P...P...P...P..
    a1c4:	00004dd8 00004e0e 00005026 00005026     .M...N..&P..&P..
    a1d4:	00005026 00004eb6 00004e0e 000050ea     &P...N...N...P..
    a1e4:	000050ea 00004ec0 000050ea 00004ed2     .P...N...P...N..
    a1f4:	000050e6 00004f00 00004f2a 000050ea     .P...O..*O...P..
    a204:	00004f34 000050ea 000050e2 000050ea     4O...P...P...P..
    a214:	000050ea 00004c26 00464e49 00666e69     .P..&L..INF.inf.
    a224:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
    a234:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    a244:	37363534 62613938 66656463 00000000     456789abcdef....
    a254:	6c756e28 0000296c 00000030              (null)..0...

0000a260 <blanks.7238>:
    a260:	20202020 20202020 20202020 20202020                     

0000a270 <zeroes.7239>:
    a270:	30303030 30303030 30303030 30303030     0000000000000000
    a280:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

0000a290 <__mprec_bigtens>:
    a290:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    a2a0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    a2b0:	7f73bf3c 75154fdd                       <.s..O.u

0000a2b8 <__mprec_tens>:
    a2b8:	00000000 3ff00000 00000000 40240000     .......?......$@
    a2c8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    a2d8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    a2e8:	00000000 412e8480 00000000 416312d0     .......A......cA
    a2f8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    a308:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    a318:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    a328:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    a338:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    a348:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    a358:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    a368:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    a378:	79d99db4 44ea7843                       ...yCx.D

0000a380 <p05.6055>:
    a380:	00000005 00000019 0000007d 00000043     ........}...C...
    a390:	49534f50 00000058 0000002e              POSIX.......

0000a39c <_ctype_>:
    a39c:	20202000 20202020 28282020 20282828     .         ((((( 
    a3ac:	20202020 20202020 20202020 20202020                     
    a3bc:	10108820 10101010 10101010 10101010      ...............
    a3cc:	04040410 04040404 10040404 10101010     ................
    a3dc:	41411010 41414141 01010101 01010101     ..AAAAAA........
    a3ec:	01010101 01010101 01010101 10101010     ................
    a3fc:	42421010 42424242 02020202 02020202     ..BBBBBB........
    a40c:	02020202 02020202 02020202 10101010     ................
    a41c:	00000020 00000000 00000000 00000000      ...............
	...

0000a4a0 <_init>:
    a4a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a4a2:	46c0      	nop			; (mov r8, r8)
    a4a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a4a6:	bc08      	pop	{r3}
    a4a8:	469e      	mov	lr, r3
    a4aa:	4770      	bx	lr

0000a4ac <__init_array_start>:
    a4ac:	0000622d 	.word	0x0000622d

0000a4b0 <__frame_dummy_init_array_entry>:
    a4b0:	000000d1                                ....

0000a4b4 <_fini>:
    a4b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a4b6:	46c0      	nop			; (mov r8, r8)
    a4b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a4ba:	bc08      	pop	{r3}
    a4bc:	469e      	mov	lr, r3
    a4be:	4770      	bx	lr

0000a4c0 <__fini_array_start>:
    a4c0:	000000a9 	.word	0x000000a9
