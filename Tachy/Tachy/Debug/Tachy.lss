
Tachy.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000a524  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000a524  0000a524  0001a524  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a28  20000000  0000a52c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          0000018c  20000a28  0000af54  00020a28  2**2
                  ALLOC
  4 .stack        00002004  20000bb4  0000b0e0  00020a28  2**0
                  ALLOC
  5 .ARM.attributes 0000002d  00000000  00000000  00020a28  2**0
                  CONTENTS, READONLY
  6 .comment      000000c7  00000000  00000000  00020a55  2**0
                  CONTENTS, READONLY
  7 .debug_info   0002c3b6  00000000  00000000  00020b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003eed  00000000  00000000  0004ced2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00011b8b  00000000  00000000  00050dbf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000dc0  00000000  00000000  0006294a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001358  00000000  00000000  0006370a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000211d8  00000000  00000000  00064a62  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00016222  00000000  00000000  00085c3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0009dfaa  00000000  00000000  0009be5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00003604  00000000  00000000  00139e08  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b8 2b 00 20 51 03 00 00 4d 03 00 00 4d 03 00 00     .+. Q...M...M...
	...
      2c:	4d 03 00 00 00 00 00 00 00 00 00 00 4d 03 00 00     M...........M...
      3c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 c5 12 00 00     M...M...M.......
      4c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 4d 03 00 00     M...M...M...M...
      5c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 4d 03 00 00     M...M...M...M...
      6c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 4d 03 00 00     M...M...M...M...
      7c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 4d 03 00 00     M...M...M...M...
      8c:	4d 03 00 00 4d 03 00 00 4d 03 00 00 95 23 00 00     M...M...M....#..
      9c:	4d 03 00 00 4d 03 00 00 4d 03 00 00                 M...M...M...

000000a8 <__do_global_dtors_aux>:
      a8:	b510      	push	{r4, lr}
      aa:	4c06      	ldr	r4, [pc, #24]	; (c4 <__do_global_dtors_aux+0x1c>)
      ac:	7823      	ldrb	r3, [r4, #0]
      ae:	2b00      	cmp	r3, #0
      b0:	d107      	bne.n	c2 <__do_global_dtors_aux+0x1a>
      b2:	4b05      	ldr	r3, [pc, #20]	; (c8 <__do_global_dtors_aux+0x20>)
      b4:	2b00      	cmp	r3, #0
      b6:	d002      	beq.n	be <__do_global_dtors_aux+0x16>
      b8:	4804      	ldr	r0, [pc, #16]	; (cc <__do_global_dtors_aux+0x24>)
      ba:	e000      	b.n	be <__do_global_dtors_aux+0x16>
      bc:	bf00      	nop
      be:	2301      	movs	r3, #1
      c0:	7023      	strb	r3, [r4, #0]
      c2:	bd10      	pop	{r4, pc}
      c4:	20000a28 	.word	0x20000a28
      c8:	00000000 	.word	0x00000000
      cc:	0000a52c 	.word	0x0000a52c

000000d0 <frame_dummy>:
      d0:	4b08      	ldr	r3, [pc, #32]	; (f4 <frame_dummy+0x24>)
      d2:	b510      	push	{r4, lr}
      d4:	2b00      	cmp	r3, #0
      d6:	d003      	beq.n	e0 <frame_dummy+0x10>
      d8:	4907      	ldr	r1, [pc, #28]	; (f8 <frame_dummy+0x28>)
      da:	4808      	ldr	r0, [pc, #32]	; (fc <frame_dummy+0x2c>)
      dc:	e000      	b.n	e0 <frame_dummy+0x10>
      de:	bf00      	nop
      e0:	4807      	ldr	r0, [pc, #28]	; (100 <frame_dummy+0x30>)
      e2:	6803      	ldr	r3, [r0, #0]
      e4:	2b00      	cmp	r3, #0
      e6:	d100      	bne.n	ea <frame_dummy+0x1a>
      e8:	bd10      	pop	{r4, pc}
      ea:	4b06      	ldr	r3, [pc, #24]	; (104 <frame_dummy+0x34>)
      ec:	2b00      	cmp	r3, #0
      ee:	d0fb      	beq.n	e8 <frame_dummy+0x18>
      f0:	4798      	blx	r3
      f2:	e7f9      	b.n	e8 <frame_dummy+0x18>
      f4:	00000000 	.word	0x00000000
      f8:	20000a2c 	.word	0x20000a2c
      fc:	0000a52c 	.word	0x0000a52c
     100:	0000a52c 	.word	0x0000a52c
     104:	00000000 	.word	0x00000000

00000108 <adxl345_get_devid_reg>:
}

// ==========================================
// low-level register access

adxl345_err_t adxl345_get_devid_reg(adxl345_t *adxl345, uint8_t *val) {
     108:	b510      	push	{r4, lr}
     10a:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_DEVID, val);
     10c:	6800      	ldr	r0, [r0, #0]
     10e:	2100      	movs	r1, #0
     110:	4b01      	ldr	r3, [pc, #4]	; (118 <adxl345_get_devid_reg+0x10>)
     112:	4798      	blx	r3
}
     114:	bd10      	pop	{r4, pc}
     116:	46c0      	nop			; (mov r8, r8)
     118:	000002d1 	.word	0x000002d1

0000011c <adxl345_init>:
adxl345_err_t adxl345_init(adxl345_t *adxl345, adxl345_dev_t * dev) {
     11c:	b500      	push	{lr}
     11e:	b083      	sub	sp, #12
  adxl345->dev = dev;
     120:	6001      	str	r1, [r0, #0]
  if ((err = adxl345_get_devid_reg(adxl345, &reg)) != ADXL345_ERR_NONE) {
     122:	466b      	mov	r3, sp
     124:	1dd9      	adds	r1, r3, #7
     126:	4b06      	ldr	r3, [pc, #24]	; (140 <adxl345_init+0x24>)
     128:	4798      	blx	r3
     12a:	2800      	cmp	r0, #0
     12c:	d105      	bne.n	13a <adxl345_init+0x1e>
  } else if (reg != ADXL345_DEVICE_ID) {
     12e:	466b      	mov	r3, sp
     130:	3307      	adds	r3, #7
     132:	781b      	ldrb	r3, [r3, #0]
     134:	2be5      	cmp	r3, #229	; 0xe5
     136:	d000      	beq.n	13a <adxl345_init+0x1e>
    return ADXL354_ERR_INIT;
     138:	3004      	adds	r0, #4
}
     13a:	b003      	add	sp, #12
     13c:	bd00      	pop	{pc}
     13e:	46c0      	nop			; (mov r8, r8)
     140:	00000109 	.word	0x00000109

00000144 <adxl345_set_bw_rate_reg>:

adxl345_err_t adxl345_get_bw_rate_reg(adxl345_t *adxl345, adxl345_bw_rate_reg *val) {
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_BW_RATE, val);
}

adxl345_err_t adxl345_set_bw_rate_reg(adxl345_t *adxl345, adxl345_bw_rate_reg val) {
     144:	b510      	push	{r4, lr}
     146:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_BW_RATE, val);
     148:	6800      	ldr	r0, [r0, #0]
     14a:	212c      	movs	r1, #44	; 0x2c
     14c:	4b01      	ldr	r3, [pc, #4]	; (154 <adxl345_set_bw_rate_reg+0x10>)
     14e:	4798      	blx	r3
}
     150:	bd10      	pop	{r4, pc}
     152:	46c0      	nop			; (mov r8, r8)
     154:	000002e9 	.word	0x000002e9

00000158 <adxl345_get_power_ctl_reg>:

adxl345_err_t adxl345_get_power_ctl_reg(adxl345_t *adxl345, adxl345_power_ctl_reg *val) {
     158:	b510      	push	{r4, lr}
     15a:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_POWER_CTL, val);
     15c:	6800      	ldr	r0, [r0, #0]
     15e:	212d      	movs	r1, #45	; 0x2d
     160:	4b01      	ldr	r3, [pc, #4]	; (168 <adxl345_get_power_ctl_reg+0x10>)
     162:	4798      	blx	r3
}
     164:	bd10      	pop	{r4, pc}
     166:	46c0      	nop			; (mov r8, r8)
     168:	000002d1 	.word	0x000002d1

0000016c <adxl345_set_power_ctl_reg>:

adxl345_err_t adxl345_set_power_ctl_reg(adxl345_t *adxl345, adxl345_power_ctl_reg val) {
     16c:	b510      	push	{r4, lr}
     16e:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_POWER_CTL, val);
     170:	6800      	ldr	r0, [r0, #0]
     172:	212d      	movs	r1, #45	; 0x2d
     174:	4b01      	ldr	r3, [pc, #4]	; (17c <adxl345_set_power_ctl_reg+0x10>)
     176:	4798      	blx	r3
}
     178:	bd10      	pop	{r4, pc}
     17a:	46c0      	nop			; (mov r8, r8)
     17c:	000002e9 	.word	0x000002e9

00000180 <adxl345_get_data_regs>:

adxl345_err_t adxl345_set_data_format_reg(adxl345_t *adxl345, adxl345_data_format_reg val) {
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_DATA_FORMAT, val);
}

adxl345_err_t adxl345_get_data_regs(adxl345_t *adxl345, adxl345_data_regs_t *dst) {
     180:	b510      	push	{r4, lr}
     182:	000a      	movs	r2, r1
  return adxl345_dev_read_regs(adxl345->dev, ADXL345_REG_DATAX0, (uint8_t *)dst, sizeof(adxl345_data_regs_t));
     184:	6800      	ldr	r0, [r0, #0]
     186:	2306      	movs	r3, #6
     188:	2132      	movs	r1, #50	; 0x32
     18a:	4c01      	ldr	r4, [pc, #4]	; (190 <adxl345_get_data_regs+0x10>)
     18c:	47a0      	blx	r4
}
     18e:	bd10      	pop	{r4, pc}
     190:	0000031d 	.word	0x0000031d

00000194 <adxl345_set_fifo_ctl_reg>:

adxl345_err_t adxl345_get_fifo_ctl_reg(adxl345_t *adxl345, adxl345_fifo_mode_reg *val) {
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_FIFO_CTL, val);
}

adxl345_err_t adxl345_set_fifo_ctl_reg(adxl345_t *adxl345, adxl345_fifo_mode_reg val) {
     194:	b510      	push	{r4, lr}
     196:	000a      	movs	r2, r1
  return adxl345_dev_write_reg(adxl345->dev, ADXL345_REG_FIFO_CTL, val);
     198:	6800      	ldr	r0, [r0, #0]
     19a:	2138      	movs	r1, #56	; 0x38
     19c:	4b01      	ldr	r3, [pc, #4]	; (1a4 <adxl345_set_fifo_ctl_reg+0x10>)
     19e:	4798      	blx	r3
}
     1a0:	bd10      	pop	{r4, pc}
     1a2:	46c0      	nop			; (mov r8, r8)
     1a4:	000002e9 	.word	0x000002e9

000001a8 <adxl345_get_fifo_status_reg>:

adxl345_err_t adxl345_get_fifo_status_reg(adxl345_t *adxl345, adxl345_fifo_status_reg *val) {
     1a8:	b510      	push	{r4, lr}
     1aa:	000a      	movs	r2, r1
  return adxl345_dev_read_reg(adxl345->dev, ADXL345_REG_FIFO_STATUS, val);
     1ac:	6800      	ldr	r0, [r0, #0]
     1ae:	2139      	movs	r1, #57	; 0x39
     1b0:	4b01      	ldr	r3, [pc, #4]	; (1b8 <adxl345_get_fifo_status_reg+0x10>)
     1b2:	4798      	blx	r3
}
     1b4:	bd10      	pop	{r4, pc}
     1b6:	46c0      	nop			; (mov r8, r8)
     1b8:	000002d1 	.word	0x000002d1

000001bc <adxl345_start>:
// ==========================================
// higher level functions.  In the functions below,
// _g stands for gravity and _s stands for seconds.

/** @brief Enter measurement mode: start measuring */
adxl345_err_t adxl345_start(adxl345_t *adxl345) {
     1bc:	b510      	push	{r4, lr}
     1be:	b082      	sub	sp, #8
     1c0:	0004      	movs	r4, r0
  uint8_t reg;
  adxl345_err_t err;

  err = adxl345_get_power_ctl_reg(adxl345, &reg);
     1c2:	466b      	mov	r3, sp
     1c4:	1dd9      	adds	r1, r3, #7
     1c6:	4b07      	ldr	r3, [pc, #28]	; (1e4 <adxl345_start+0x28>)
     1c8:	4798      	blx	r3
  if (err != ADXL345_ERR_NONE) return err;
     1ca:	2800      	cmp	r0, #0
     1cc:	d001      	beq.n	1d2 <adxl345_start+0x16>

  err = adxl345_set_power_ctl_reg(adxl345, reg | ADXL345_MEASURE);
  return err;
}
     1ce:	b002      	add	sp, #8
     1d0:	bd10      	pop	{r4, pc}
  err = adxl345_set_power_ctl_reg(adxl345, reg | ADXL345_MEASURE);
     1d2:	466b      	mov	r3, sp
     1d4:	79d9      	ldrb	r1, [r3, #7]
     1d6:	2308      	movs	r3, #8
     1d8:	4319      	orrs	r1, r3
     1da:	0020      	movs	r0, r4
     1dc:	4b02      	ldr	r3, [pc, #8]	; (1e8 <adxl345_start+0x2c>)
     1de:	4798      	blx	r3
  return err;
     1e0:	e7f5      	b.n	1ce <adxl345_start+0x12>
     1e2:	46c0      	nop			; (mov r8, r8)
     1e4:	00000159 	.word	0x00000159
     1e8:	0000016d 	.word	0x0000016d

000001ec <adxl345_stop>:

/** @brief Enter standby mode: stop measuring */
adxl345_err_t adxl345_stop(adxl345_t *adxl345) {
     1ec:	b510      	push	{r4, lr}
     1ee:	b082      	sub	sp, #8
     1f0:	0004      	movs	r4, r0
  uint8_t reg;
  adxl345_err_t err;

  err = adxl345_get_power_ctl_reg(adxl345, &reg);
     1f2:	466b      	mov	r3, sp
     1f4:	1dd9      	adds	r1, r3, #7
     1f6:	4b07      	ldr	r3, [pc, #28]	; (214 <adxl345_stop+0x28>)
     1f8:	4798      	blx	r3
  if (err != ADXL345_ERR_NONE) return err;
     1fa:	2800      	cmp	r0, #0
     1fc:	d001      	beq.n	202 <adxl345_stop+0x16>

  err = adxl345_set_power_ctl_reg(adxl345, reg & ~ADXL345_MEASURE);
  return err;
}
     1fe:	b002      	add	sp, #8
     200:	bd10      	pop	{r4, pc}
  err = adxl345_set_power_ctl_reg(adxl345, reg & ~ADXL345_MEASURE);
     202:	466b      	mov	r3, sp
     204:	79d9      	ldrb	r1, [r3, #7]
     206:	2308      	movs	r3, #8
     208:	4399      	bics	r1, r3
     20a:	0020      	movs	r0, r4
     20c:	4b02      	ldr	r3, [pc, #8]	; (218 <adxl345_stop+0x2c>)
     20e:	4798      	blx	r3
  return err;
     210:	e7f5      	b.n	1fe <adxl345_stop+0x12>
     212:	46c0      	nop			; (mov r8, r8)
     214:	00000159 	.word	0x00000159
     218:	0000016d 	.word	0x0000016d

0000021c <adxl345_get_sample>:

adxl345_err_t adxl345_sample_is_available(adxl345_t *adxl345, bool *val);

/** @brief Read an x, y, z sample frame.
 */
adxl345_err_t adxl345_get_sample(adxl345_t *adxl345, adxl345_sample_t *sample) {
     21c:	b5f0      	push	{r4, r5, r6, r7, lr}
     21e:	46c6      	mov	lr, r8
     220:	b500      	push	{lr}
     222:	b082      	sub	sp, #8
     224:	000d      	movs	r5, r1
  adxl345_data_regs_t regs;
  adxl345_err_t err;

  err = adxl345_get_data_regs(adxl345, &regs);
     226:	4669      	mov	r1, sp
     228:	4b19      	ldr	r3, [pc, #100]	; (290 <adxl345_get_sample+0x74>)
     22a:	4798      	blx	r3
     22c:	1e04      	subs	r4, r0, #0
  if (err != ADXL345_ERR_NONE) return err;
     22e:	d12a      	bne.n	286 <adxl345_get_sample+0x6a>

  // Using default values:
  //   x1:x0 is a 16 bit signed value with 10 bits of resolution.
  //   Full scale is 2^9 = 512 corresponding to 2g
  //   This can change with sensitivity settings, packing mode, etc.
  sample->x = (int16_t)((regs.x1 << 8) | regs.x0) * ADXL345_2G_SCALE;
     230:	466b      	mov	r3, sp
     232:	785b      	ldrb	r3, [r3, #1]
     234:	021b      	lsls	r3, r3, #8
     236:	466a      	mov	r2, sp
     238:	7810      	ldrb	r0, [r2, #0]
     23a:	4318      	orrs	r0, r3
     23c:	b200      	sxth	r0, r0
     23e:	4b15      	ldr	r3, [pc, #84]	; (294 <adxl345_get_sample+0x78>)
     240:	4698      	mov	r8, r3
     242:	4798      	blx	r3
     244:	4f14      	ldr	r7, [pc, #80]	; (298 <adxl345_get_sample+0x7c>)
     246:	2200      	movs	r2, #0
     248:	4b14      	ldr	r3, [pc, #80]	; (29c <adxl345_get_sample+0x80>)
     24a:	47b8      	blx	r7
     24c:	4e14      	ldr	r6, [pc, #80]	; (2a0 <adxl345_get_sample+0x84>)
     24e:	47b0      	blx	r6
     250:	6028      	str	r0, [r5, #0]
  sample->y = (int16_t)((regs.y1 << 8) | regs.y0) * ADXL345_2G_SCALE;
     252:	466b      	mov	r3, sp
     254:	78db      	ldrb	r3, [r3, #3]
     256:	021b      	lsls	r3, r3, #8
     258:	466a      	mov	r2, sp
     25a:	7890      	ldrb	r0, [r2, #2]
     25c:	4318      	orrs	r0, r3
     25e:	b200      	sxth	r0, r0
     260:	47c0      	blx	r8
     262:	2200      	movs	r2, #0
     264:	4b0d      	ldr	r3, [pc, #52]	; (29c <adxl345_get_sample+0x80>)
     266:	47b8      	blx	r7
     268:	47b0      	blx	r6
     26a:	6068      	str	r0, [r5, #4]
  sample->z = (int16_t)((regs.z1 << 8) | regs.z0) * ADXL345_2G_SCALE;
     26c:	466b      	mov	r3, sp
     26e:	795b      	ldrb	r3, [r3, #5]
     270:	021b      	lsls	r3, r3, #8
     272:	466a      	mov	r2, sp
     274:	7910      	ldrb	r0, [r2, #4]
     276:	4318      	orrs	r0, r3
     278:	b200      	sxth	r0, r0
     27a:	47c0      	blx	r8
     27c:	2200      	movs	r2, #0
     27e:	4b07      	ldr	r3, [pc, #28]	; (29c <adxl345_get_sample+0x80>)
     280:	47b8      	blx	r7
     282:	47b0      	blx	r6
     284:	60a8      	str	r0, [r5, #8]

  return ADXL345_ERR_NONE;
}
     286:	0020      	movs	r0, r4
     288:	b002      	add	sp, #8
     28a:	bc04      	pop	{r2}
     28c:	4690      	mov	r8, r2
     28e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     290:	00000181 	.word	0x00000181
     294:	0000413d 	.word	0x0000413d
     298:	000035a9 	.word	0x000035a9
     29c:	3f700000 	.word	0x3f700000
     2a0:	000042d5 	.word	0x000042d5

000002a4 <adxl345_dev_init>:
// public code

adxl345_err_t adxl345_dev_init(adxl345_dev_t *dev,
                               struct i2c_m_sync_desc *const i2c_descriptor,
                               int16_t slave_addr,
                               int32_t addr_len) {
     2a4:	b570      	push	{r4, r5, r6, lr}
     2a6:	000c      	movs	r4, r1
     2a8:	0015      	movs	r5, r2
     2aa:	001e      	movs	r6, r3
  dev->i2c_descriptor = i2c_descriptor;
     2ac:	6001      	str	r1, [r0, #0]
  dev->slave_addr = slave_addr;
     2ae:	8082      	strh	r2, [r0, #4]
  dev->addr_len = addr_len;
     2b0:	6083      	str	r3, [r0, #8]

  i2c_m_sync_enable(i2c_descriptor);
     2b2:	0008      	movs	r0, r1
     2b4:	4b04      	ldr	r3, [pc, #16]	; (2c8 <adxl345_dev_init+0x24>)
     2b6:	4798      	blx	r3
  i2c_m_sync_set_slaveaddr(i2c_descriptor, slave_addr, addr_len);
     2b8:	0032      	movs	r2, r6
     2ba:	0029      	movs	r1, r5
     2bc:	0020      	movs	r0, r4
     2be:	4b03      	ldr	r3, [pc, #12]	; (2cc <adxl345_dev_init+0x28>)
     2c0:	4798      	blx	r3

  return ADXL345_ERR_NONE;
}
     2c2:	2000      	movs	r0, #0
     2c4:	bd70      	pop	{r4, r5, r6, pc}
     2c6:	46c0      	nop			; (mov r8, r8)
     2c8:	00000a15 	.word	0x00000a15
     2cc:	00000a21 	.word	0x00000a21

000002d0 <adxl345_dev_read_reg>:
 * @param reg_addr Address of register to be read
 * @param dst Pointer to destination buffer.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_read_reg(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t *dst) {
     2d0:	b510      	push	{r4, lr}
  int32_t err = i2c_m_sync_cmd_read(dev->i2c_descriptor, reg_addr, dst, 1);
     2d2:	6800      	ldr	r0, [r0, #0]
     2d4:	2301      	movs	r3, #1
     2d6:	4c03      	ldr	r4, [pc, #12]	; (2e4 <adxl345_dev_read_reg+0x14>)
     2d8:	47a0      	blx	r4
  if (err < 0) {
    return ADXL345_ERR_WRITE;
     2da:	2303      	movs	r3, #3
  }
  return ADXL345_ERR_NONE;
     2dc:	17c0      	asrs	r0, r0, #31
     2de:	4003      	ands	r3, r0
}
     2e0:	0018      	movs	r0, r3
     2e2:	bd10      	pop	{r4, pc}
     2e4:	00000a35 	.word	0x00000a35

000002e8 <adxl345_dev_write_reg>:
 * @param reg_addr Address of register to be written.
 * @param val Value to be written.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_write_reg(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t val) {
     2e8:	b500      	push	{lr}
     2ea:	b085      	sub	sp, #20
  uint8_t buf[2];
  buf[0] = reg_addr;
     2ec:	ab03      	add	r3, sp, #12
     2ee:	7019      	strb	r1, [r3, #0]
  buf[1] = val;
     2f0:	705a      	strb	r2, [r3, #1]

  struct _i2c_m_msg msg;
  int32_t ret;
  msg.addr = dev->slave_addr;
     2f2:	8882      	ldrh	r2, [r0, #4]
     2f4:	4669      	mov	r1, sp
     2f6:	800a      	strh	r2, [r1, #0]
  msg.len = sizeof(buf);
     2f8:	2202      	movs	r2, #2
     2fa:	9201      	str	r2, [sp, #4]
  msg.flags = I2C_M_STOP;
     2fc:	4a05      	ldr	r2, [pc, #20]	; (314 <adxl345_dev_write_reg+0x2c>)
     2fe:	804a      	strh	r2, [r1, #2]
  msg.buffer = buf;
     300:	9302      	str	r3, [sp, #8]

  ret = i2c_m_sync_transfer(dev->i2c_descriptor, &msg);
     302:	6800      	ldr	r0, [r0, #0]
     304:	4b04      	ldr	r3, [pc, #16]	; (318 <adxl345_dev_write_reg+0x30>)
     306:	4798      	blx	r3
  if (ret < 0) {
    return ADXL345_ERR_WRITE;
     308:	2303      	movs	r3, #3
  }
  return ADXL345_ERR_NONE;
     30a:	17c0      	asrs	r0, r0, #31
     30c:	4003      	ands	r3, r0
}
     30e:	0018      	movs	r0, r3
     310:	b005      	add	sp, #20
     312:	bd00      	pop	{pc}
     314:	ffff8000 	.word	0xffff8000
     318:	00000a7d 	.word	0x00000a7d

0000031c <adxl345_dev_read_regs>:
 * @param dst Pointer to destination buffer.  Must have capacity of n_bytes.
 * @param n_bytes Number of registers to be read.
 *
 * @return 0 on success, non-zero on error.
 */
adxl345_err_t adxl345_dev_read_regs(adxl345_dev_t *dev, uint8_t reg_addr, uint8_t *dst, uint8_t n_bytes) {
     31c:	b510      	push	{r4, lr}
  int32_t err = i2c_m_sync_cmd_read(dev->i2c_descriptor, reg_addr, dst, n_bytes);
     31e:	6800      	ldr	r0, [r0, #0]
     320:	4c02      	ldr	r4, [pc, #8]	; (32c <adxl345_dev_read_regs+0x10>)
     322:	47a0      	blx	r4
  if (err < 0) {
    return ADXL345_ERR_READ;
  }
  return ADXL345_ERR_NONE;
     324:	0fc0      	lsrs	r0, r0, #31
     326:	0040      	lsls	r0, r0, #1
}
     328:	bd10      	pop	{r4, pc}
     32a:	46c0      	nop			; (mov r8, r8)
     32c:	00000a35 	.word	0x00000a35

00000330 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     330:	b510      	push	{r4, lr}
	system_init();
     332:	4b03      	ldr	r3, [pc, #12]	; (340 <atmel_start_init+0x10>)
     334:	4798      	blx	r3
	stdio_redirect_init();
     336:	4b03      	ldr	r3, [pc, #12]	; (344 <atmel_start_init+0x14>)
     338:	4798      	blx	r3

	touch_init();
     33a:	4b03      	ldr	r3, [pc, #12]	; (348 <atmel_start_init+0x18>)
     33c:	4798      	blx	r3
}
     33e:	bd10      	pop	{r4, pc}
     340:	000008bd 	.word	0x000008bd
     344:	0000246d 	.word	0x0000246d
     348:	00002325 	.word	0x00002325

0000034c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     34c:	e7fe      	b.n	34c <Dummy_Handler>
	...

00000350 <Reset_Handler>:
{
     350:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     352:	4a17      	ldr	r2, [pc, #92]	; (3b0 <Reset_Handler+0x60>)
     354:	4b17      	ldr	r3, [pc, #92]	; (3b4 <Reset_Handler+0x64>)
     356:	429a      	cmp	r2, r3
     358:	d011      	beq.n	37e <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     35a:	001a      	movs	r2, r3
     35c:	4b16      	ldr	r3, [pc, #88]	; (3b8 <Reset_Handler+0x68>)
     35e:	429a      	cmp	r2, r3
     360:	d20d      	bcs.n	37e <Reset_Handler+0x2e>
     362:	4a16      	ldr	r2, [pc, #88]	; (3bc <Reset_Handler+0x6c>)
     364:	3303      	adds	r3, #3
     366:	1a9b      	subs	r3, r3, r2
     368:	089b      	lsrs	r3, r3, #2
     36a:	3301      	adds	r3, #1
     36c:	009b      	lsls	r3, r3, #2
     36e:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     370:	4810      	ldr	r0, [pc, #64]	; (3b4 <Reset_Handler+0x64>)
     372:	490f      	ldr	r1, [pc, #60]	; (3b0 <Reset_Handler+0x60>)
     374:	588c      	ldr	r4, [r1, r2]
     376:	5084      	str	r4, [r0, r2]
     378:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     37a:	429a      	cmp	r2, r3
     37c:	d1fa      	bne.n	374 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     37e:	4a10      	ldr	r2, [pc, #64]	; (3c0 <Reset_Handler+0x70>)
     380:	4b10      	ldr	r3, [pc, #64]	; (3c4 <Reset_Handler+0x74>)
     382:	429a      	cmp	r2, r3
     384:	d20a      	bcs.n	39c <Reset_Handler+0x4c>
     386:	43d3      	mvns	r3, r2
     388:	490e      	ldr	r1, [pc, #56]	; (3c4 <Reset_Handler+0x74>)
     38a:	185b      	adds	r3, r3, r1
     38c:	2103      	movs	r1, #3
     38e:	438b      	bics	r3, r1
     390:	3304      	adds	r3, #4
     392:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     394:	2100      	movs	r1, #0
     396:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     398:	4293      	cmp	r3, r2
     39a:	d1fc      	bne.n	396 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     39c:	4a0a      	ldr	r2, [pc, #40]	; (3c8 <Reset_Handler+0x78>)
     39e:	21ff      	movs	r1, #255	; 0xff
     3a0:	4b0a      	ldr	r3, [pc, #40]	; (3cc <Reset_Handler+0x7c>)
     3a2:	438b      	bics	r3, r1
     3a4:	6093      	str	r3, [r2, #8]
        __libc_init_array();
     3a6:	4b0a      	ldr	r3, [pc, #40]	; (3d0 <Reset_Handler+0x80>)
     3a8:	4798      	blx	r3
        main();
     3aa:	4b0a      	ldr	r3, [pc, #40]	; (3d4 <Reset_Handler+0x84>)
     3ac:	4798      	blx	r3
     3ae:	e7fe      	b.n	3ae <Reset_Handler+0x5e>
     3b0:	0000a52c 	.word	0x0000a52c
     3b4:	20000000 	.word	0x20000000
     3b8:	20000a28 	.word	0x20000a28
     3bc:	20000004 	.word	0x20000004
     3c0:	20000a28 	.word	0x20000a28
     3c4:	20000bb4 	.word	0x20000bb4
     3c8:	e000ed00 	.word	0xe000ed00
     3cc:	00000000 	.word	0x00000000
     3d0:	000046b9 	.word	0x000046b9
     3d4:	00002055 	.word	0x00002055

000003d8 <EDBG_0_PORT_init>:
	hri_mclk_set_APBAMASK_RTC_bit(MCLK);
	timer_init(&Timer, RTC, _rtc_get_timer());
}

void EDBG_0_PORT_init(void)
{
     3d8:	b530      	push	{r4, r5, lr}
static inline void hri_port_write_PINCFG_PMUXEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index,
                                                    bool value)
{
	uint8_t tmp;
	PORT_CRITICAL_SECTION_ENTER();
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     3da:	4b11      	ldr	r3, [pc, #68]	; (420 <EDBG_0_PORT_init+0x48>)
     3dc:	22ac      	movs	r2, #172	; 0xac
     3de:	0052      	lsls	r2, r2, #1
     3e0:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     3e2:	2501      	movs	r5, #1
     3e4:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     3e6:	2401      	movs	r4, #1
     3e8:	4321      	orrs	r1, r4
     3ea:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     3ec:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     3ee:	209e      	movs	r0, #158	; 0x9e
     3f0:	0040      	lsls	r0, r0, #1
     3f2:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     3f4:	3a4a      	subs	r2, #74	; 0x4a
     3f6:	3aff      	subs	r2, #255	; 0xff
     3f8:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     3fa:	3a0d      	subs	r2, #13
     3fc:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     3fe:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     400:	215a      	movs	r1, #90	; 0x5a
     402:	31ff      	adds	r1, #255	; 0xff
     404:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     406:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     408:	4322      	orrs	r2, r4
     40a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     40c:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     40e:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     410:	394b      	subs	r1, #75	; 0x4b
     412:	39ff      	subs	r1, #255	; 0xff
     414:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     416:	3111      	adds	r1, #17
     418:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     41a:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(PC24, PINMUX_PC24C_SERCOM0_PAD2);

	gpio_set_pin_function(PC25, PINMUX_PC25C_SERCOM0_PAD3);
}
     41c:	bd30      	pop	{r4, r5, pc}
     41e:	46c0      	nop			; (mov r8, r8)
     420:	41006000 	.word	0x41006000

00000424 <EDBG_0_CLOCK_init>:
}

static inline void hri_gclk_write_PCHCTRL_reg(const void *const hw, uint8_t index, hri_gclk_pchctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->PCHCTRL[index].reg = data;
     424:	4b06      	ldr	r3, [pc, #24]	; (440 <EDBG_0_CLOCK_init+0x1c>)
     426:	2140      	movs	r1, #64	; 0x40
     428:	22c0      	movs	r2, #192	; 0xc0
     42a:	5099      	str	r1, [r3, r2]
     42c:	3103      	adds	r1, #3
     42e:	3a04      	subs	r2, #4
     430:	5099      	str	r1, [r3, r2]
}

static inline void hri_mclk_set_APBCMASK_SERCOM0_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM0;
     432:	4a04      	ldr	r2, [pc, #16]	; (444 <EDBG_0_CLOCK_init+0x20>)
     434:	69d3      	ldr	r3, [r2, #28]
     436:	3941      	subs	r1, #65	; 0x41
     438:	430b      	orrs	r3, r1
     43a:	61d3      	str	r3, [r2, #28]
void EDBG_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM0_GCLK_ID_CORE, CONF_GCLK_SERCOM0_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM0_GCLK_ID_SLOW, CONF_GCLK_SERCOM0_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM0_bit(MCLK);
}
     43c:	4770      	bx	lr
     43e:	46c0      	nop			; (mov r8, r8)
     440:	40001c00 	.word	0x40001c00
     444:	40000800 	.word	0x40000800

00000448 <EDBG_0_init>:

void EDBG_0_init(void)
{
     448:	b510      	push	{r4, lr}
	EDBG_0_CLOCK_init();
     44a:	4b05      	ldr	r3, [pc, #20]	; (460 <EDBG_0_init+0x18>)
     44c:	4798      	blx	r3
	usart_sync_init(&EDBG_0, SERCOM0, (void *)NULL);
     44e:	2200      	movs	r2, #0
     450:	4904      	ldr	r1, [pc, #16]	; (464 <EDBG_0_init+0x1c>)
     452:	4805      	ldr	r0, [pc, #20]	; (468 <EDBG_0_init+0x20>)
     454:	4b05      	ldr	r3, [pc, #20]	; (46c <EDBG_0_init+0x24>)
     456:	4798      	blx	r3
	EDBG_0_PORT_init();
     458:	4b05      	ldr	r3, [pc, #20]	; (470 <EDBG_0_init+0x28>)
     45a:	4798      	blx	r3
}
     45c:	bd10      	pop	{r4, pc}
     45e:	46c0      	nop			; (mov r8, r8)
     460:	00000425 	.word	0x00000425
     464:	42000400 	.word	0x42000400
     468:	20000ae4 	.word	0x20000ae4
     46c:	00000fa9 	.word	0x00000fa9
     470:	000003d9 	.word	0x000003d9

00000474 <ADXL345_0_PORT_init>:

void ADXL345_0_PORT_init(void)
{
     474:	b5f0      	push	{r4, r5, r6, r7, lr}
     476:	46ce      	mov	lr, r9
     478:	4647      	mov	r7, r8
     47a:	b580      	push	{r7, lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     47c:	25c0      	movs	r5, #192	; 0xc0
     47e:	05ed      	lsls	r5, r5, #23
     480:	2484      	movs	r4, #132	; 0x84
     482:	2180      	movs	r1, #128	; 0x80
     484:	05c9      	lsls	r1, r1, #23
     486:	5129      	str	r1, [r5, r4]
}

static inline void hri_port_set_PINCFG_PULLEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
     488:	4b1a      	ldr	r3, [pc, #104]	; (4f4 <ADXL345_0_PORT_init+0x80>)
     48a:	20de      	movs	r0, #222	; 0xde
     48c:	5c1a      	ldrb	r2, [r3, r0]
     48e:	2604      	movs	r6, #4
     490:	46b4      	mov	ip, r6
     492:	4666      	mov	r6, ip
     494:	4332      	orrs	r2, r6
     496:	b2d2      	uxtb	r2, r2
     498:	541a      	strb	r2, [r3, r0]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     49a:	2298      	movs	r2, #152	; 0x98
     49c:	4691      	mov	r9, r2
     49e:	50a9      	str	r1, [r5, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4a0:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4a2:	2701      	movs	r7, #1
     4a4:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     4a6:	2601      	movs	r6, #1
     4a8:	4331      	orrs	r1, r6
     4aa:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4ac:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     4ae:	381f      	subs	r0, #31
     4b0:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     4b2:	3a89      	subs	r2, #137	; 0x89
     4b4:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     4b6:	3a0d      	subs	r2, #13
     4b8:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     4ba:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     4bc:	2280      	movs	r2, #128	; 0x80
     4be:	0612      	lsls	r2, r2, #24
     4c0:	4690      	mov	r8, r2
     4c2:	512a      	str	r2, [r5, r4]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
     4c4:	345b      	adds	r4, #91	; 0x5b
     4c6:	5d19      	ldrb	r1, [r3, r4]
     4c8:	4662      	mov	r2, ip
     4ca:	4311      	orrs	r1, r2
     4cc:	b2c9      	uxtb	r1, r1
     4ce:	5519      	strb	r1, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     4d0:	4642      	mov	r2, r8
     4d2:	4649      	mov	r1, r9
     4d4:	506a      	str	r2, [r5, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4d6:	5d1a      	ldrb	r2, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4d8:	43ba      	bics	r2, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     4da:	4332      	orrs	r2, r6
     4dc:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4de:	551a      	strb	r2, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     4e0:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     4e2:	3989      	subs	r1, #137	; 0x89
     4e4:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     4e6:	3111      	adds	r1, #17
     4e8:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     4ea:	541a      	strb	r2, [r3, r0]
	                       // <GPIO_PULL_UP"> Pull-up
	                       // <GPIO_PULL_DOWN"> Pull-down
	                       GPIO_PULL_UP);

	gpio_set_pin_function(PB31, PINMUX_PB31C_SERCOM1_PAD1);
}
     4ec:	bc0c      	pop	{r2, r3}
     4ee:	4690      	mov	r8, r2
     4f0:	4699      	mov	r9, r3
     4f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     4f4:	41006000 	.word	0x41006000

000004f8 <ADXL345_0_CLOCK_init>:
     4f8:	4b06      	ldr	r3, [pc, #24]	; (514 <ADXL345_0_CLOCK_init+0x1c>)
     4fa:	2140      	movs	r1, #64	; 0x40
     4fc:	22c4      	movs	r2, #196	; 0xc4
     4fe:	5099      	str	r1, [r3, r2]
     500:	3101      	adds	r1, #1
     502:	3a08      	subs	r2, #8
     504:	5099      	str	r1, [r3, r2]
}

static inline void hri_mclk_set_APBCMASK_SERCOM1_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM1;
     506:	4a04      	ldr	r2, [pc, #16]	; (518 <ADXL345_0_CLOCK_init+0x20>)
     508:	69d3      	ldr	r3, [r2, #28]
     50a:	393d      	subs	r1, #61	; 0x3d
     50c:	430b      	orrs	r3, r1
     50e:	61d3      	str	r3, [r2, #28]
void ADXL345_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM1_GCLK_ID_CORE, CONF_GCLK_SERCOM1_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM1_GCLK_ID_SLOW, CONF_GCLK_SERCOM1_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM1_bit(MCLK);
}
     510:	4770      	bx	lr
     512:	46c0      	nop			; (mov r8, r8)
     514:	40001c00 	.word	0x40001c00
     518:	40000800 	.word	0x40000800

0000051c <ADXL345_0_init>:

void ADXL345_0_init(void)
{
     51c:	b510      	push	{r4, lr}
	ADXL345_0_CLOCK_init();
     51e:	4b04      	ldr	r3, [pc, #16]	; (530 <ADXL345_0_init+0x14>)
     520:	4798      	blx	r3
	i2c_m_sync_init(&ADXL345_0, SERCOM1);
     522:	4904      	ldr	r1, [pc, #16]	; (534 <ADXL345_0_init+0x18>)
     524:	4804      	ldr	r0, [pc, #16]	; (538 <ADXL345_0_init+0x1c>)
     526:	4b05      	ldr	r3, [pc, #20]	; (53c <ADXL345_0_init+0x20>)
     528:	4798      	blx	r3
	ADXL345_0_PORT_init();
     52a:	4b05      	ldr	r3, [pc, #20]	; (540 <ADXL345_0_init+0x24>)
     52c:	4798      	blx	r3
}
     52e:	bd10      	pop	{r4, pc}
     530:	000004f9 	.word	0x000004f9
     534:	42000800 	.word	0x42000800
     538:	20000af0 	.word	0x20000af0
     53c:	000009d5 	.word	0x000009d5
     540:	00000475 	.word	0x00000475

00000544 <SEGMENT_LCD_0_PORT_init>:

void SEGMENT_LCD_0_PORT_init(void)
{
     544:	b5f0      	push	{r4, r5, r6, r7, lr}
     546:	46c6      	mov	lr, r8
     548:	b500      	push	{lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     54a:	4bd0      	ldr	r3, [pc, #832]	; (88c <SEGMENT_LCD_0_PORT_init+0x348>)
     54c:	2446      	movs	r4, #70	; 0x46
     54e:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     550:	2101      	movs	r1, #1
     552:	4388      	bics	r0, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     554:	2201      	movs	r2, #1
     556:	4310      	orrs	r0, r2
     558:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     55a:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     55c:	2733      	movs	r7, #51	; 0x33
     55e:	5dd8      	ldrb	r0, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     560:	3c37      	subs	r4, #55	; 0x37
     562:	46a0      	mov	r8, r4
     564:	43a0      	bics	r0, r4
	tmp |= PORT_PMUX_PMUXE(data);
     566:	4310      	orrs	r0, r2
     568:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     56a:	55d8      	strb	r0, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     56c:	3438      	adds	r4, #56	; 0x38
     56e:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     570:	4388      	bics	r0, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     572:	4310      	orrs	r0, r2
     574:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     576:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     578:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     57a:	3c38      	subs	r4, #56	; 0x38
     57c:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     57e:	2010      	movs	r0, #16
     580:	4306      	orrs	r6, r0
     582:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     584:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     586:	2746      	movs	r7, #70	; 0x46
     588:	37ff      	adds	r7, #255	; 0xff
     58a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     58c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     58e:	4316      	orrs	r6, r2
     590:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     592:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     594:	3f13      	subs	r7, #19
     596:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     598:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     59a:	4306      	orrs	r6, r0
     59c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     59e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5a0:	3714      	adds	r7, #20
     5a2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5a4:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5a6:	4316      	orrs	r6, r2
     5a8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5aa:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5ac:	2734      	movs	r7, #52	; 0x34
     5ae:	37ff      	adds	r7, #255	; 0xff
     5b0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     5b2:	4645      	mov	r5, r8
     5b4:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     5b6:	4316      	orrs	r6, r2
     5b8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5ba:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5bc:	2648      	movs	r6, #72	; 0x48
     5be:	36ff      	adds	r6, #255	; 0xff
     5c0:	46b4      	mov	ip, r6
     5c2:	5d9e      	ldrb	r6, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5c4:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5c6:	4316      	orrs	r6, r2
     5c8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5ca:	4665      	mov	r5, ip
     5cc:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5ce:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     5d0:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     5d2:	4306      	orrs	r6, r0
     5d4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5d6:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5d8:	3feb      	subs	r7, #235	; 0xeb
     5da:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5dc:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5de:	4316      	orrs	r6, r2
     5e0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5e2:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5e4:	3f14      	subs	r7, #20
     5e6:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     5e8:	4645      	mov	r5, r8
     5ea:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     5ec:	4316      	orrs	r6, r2
     5ee:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     5f0:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     5f2:	353a      	adds	r5, #58	; 0x3a
     5f4:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     5f6:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     5f8:	4316      	orrs	r6, r2
     5fa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     5fc:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     5fe:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     600:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     602:	4306      	orrs	r6, r0
     604:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     606:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     608:	3716      	adds	r7, #22
     60a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     60c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     60e:	4316      	orrs	r6, r2
     610:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     612:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     614:	3f15      	subs	r7, #21
     616:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     618:	4645      	mov	r5, r8
     61a:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     61c:	4316      	orrs	r6, r2
     61e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     620:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     622:	353c      	adds	r5, #60	; 0x3c
     624:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     626:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     628:	4316      	orrs	r6, r2
     62a:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     62c:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     62e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     630:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     632:	4306      	orrs	r6, r0
     634:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     636:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     638:	3714      	adds	r7, #20
     63a:	37ff      	adds	r7, #255	; 0xff
     63c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     63e:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     640:	4316      	orrs	r6, r2
     642:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     644:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     646:	3f14      	subs	r7, #20
     648:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     64a:	4645      	mov	r5, r8
     64c:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     64e:	4316      	orrs	r6, r2
     650:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     652:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     654:	254a      	movs	r5, #74	; 0x4a
     656:	35ff      	adds	r5, #255	; 0xff
     658:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     65a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     65c:	4316      	orrs	r6, r2
     65e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     660:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     662:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     664:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     666:	4306      	orrs	r6, r0
     668:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     66a:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     66c:	3716      	adds	r7, #22
     66e:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     670:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     672:	4316      	orrs	r6, r2
     674:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     676:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     678:	2736      	movs	r7, #54	; 0x36
     67a:	37ff      	adds	r7, #255	; 0xff
     67c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     67e:	4645      	mov	r5, r8
     680:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     682:	4316      	orrs	r6, r2
     684:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     686:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     688:	254c      	movs	r5, #76	; 0x4c
     68a:	35ff      	adds	r5, #255	; 0xff
     68c:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     68e:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     690:	4316      	orrs	r6, r2
     692:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     694:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     696:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     698:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     69a:	4306      	orrs	r6, r0
     69c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     69e:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6a0:	3717      	adds	r7, #23
     6a2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6a4:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6a6:	4316      	orrs	r6, r2
     6a8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6aa:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6ac:	3f16      	subs	r7, #22
     6ae:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     6b0:	4645      	mov	r5, r8
     6b2:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     6b4:	4316      	orrs	r6, r2
     6b6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6b8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6ba:	254e      	movs	r5, #78	; 0x4e
     6bc:	35ff      	adds	r5, #255	; 0xff
     6be:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6c0:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6c2:	4316      	orrs	r6, r2
     6c4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6c6:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6c8:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6ca:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     6cc:	4306      	orrs	r6, r0
     6ce:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6d0:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6d2:	3f6b      	subs	r7, #107	; 0x6b
     6d4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6d6:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6d8:	4316      	orrs	r6, r2
     6da:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6dc:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6de:	3f16      	subs	r7, #22
     6e0:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6e2:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     6e4:	4306      	orrs	r6, r0
     6e6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6e8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6ea:	3717      	adds	r7, #23
     6ec:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6ee:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6f0:	4316      	orrs	r6, r2
     6f2:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6f4:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6f6:	3f16      	subs	r7, #22
     6f8:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     6fa:	4645      	mov	r5, r8
     6fc:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     6fe:	4316      	orrs	r6, r2
     700:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     702:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     704:	35be      	adds	r5, #190	; 0xbe
     706:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     708:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     70a:	4316      	orrs	r6, r2
     70c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     70e:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     710:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     712:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     714:	4306      	orrs	r6, r0
     716:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     718:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     71a:	3718      	adds	r7, #24
     71c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     71e:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     720:	4316      	orrs	r6, r2
     722:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     724:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     726:	3f17      	subs	r7, #23
     728:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     72a:	4645      	mov	r5, r8
     72c:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     72e:	4316      	orrs	r6, r2
     730:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     732:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     734:	35c0      	adds	r5, #192	; 0xc0
     736:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     738:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     73a:	4316      	orrs	r6, r2
     73c:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     73e:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     740:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     742:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     744:	4306      	orrs	r6, r0
     746:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     748:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     74a:	3797      	adds	r7, #151	; 0x97
     74c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     74e:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     750:	4316      	orrs	r6, r2
     752:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     754:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     756:	2738      	movs	r7, #56	; 0x38
     758:	37ff      	adds	r7, #255	; 0xff
     75a:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     75c:	4645      	mov	r5, r8
     75e:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     760:	4316      	orrs	r6, r2
     762:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     764:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     766:	2550      	movs	r5, #80	; 0x50
     768:	35ff      	adds	r5, #255	; 0xff
     76a:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     76c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     76e:	4316      	orrs	r6, r2
     770:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     772:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     774:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     776:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     778:	4306      	orrs	r6, r0
     77a:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     77c:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     77e:	3fe9      	subs	r7, #233	; 0xe9
     780:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     782:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     784:	4316      	orrs	r6, r2
     786:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     788:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     78a:	3f17      	subs	r7, #23
     78c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     78e:	4645      	mov	r5, r8
     790:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     792:	4316      	orrs	r6, r2
     794:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     796:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     798:	3540      	adds	r5, #64	; 0x40
     79a:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     79c:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     79e:	4316      	orrs	r6, r2
     7a0:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7a2:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7a4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     7a6:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     7a8:	4306      	orrs	r6, r0
     7aa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7ac:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7ae:	371a      	adds	r7, #26
     7b0:	37ff      	adds	r7, #255	; 0xff
     7b2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7b4:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7b6:	4316      	orrs	r6, r2
     7b8:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7ba:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7bc:	3f18      	subs	r7, #24
     7be:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     7c0:	4645      	mov	r5, r8
     7c2:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     7c4:	4316      	orrs	r6, r2
     7c6:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7c8:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7ca:	2552      	movs	r5, #82	; 0x52
     7cc:	35ff      	adds	r5, #255	; 0xff
     7ce:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7d0:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7d2:	4316      	orrs	r6, r2
     7d4:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7d6:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7d8:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     7da:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     7dc:	4306      	orrs	r6, r0
     7de:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7e0:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7e2:	371a      	adds	r7, #26
     7e4:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     7e6:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     7e8:	4316      	orrs	r6, r2
     7ea:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7ec:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     7ee:	273a      	movs	r7, #58	; 0x3a
     7f0:	37ff      	adds	r7, #255	; 0xff
     7f2:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     7f4:	4645      	mov	r5, r8
     7f6:	43ae      	bics	r6, r5
	tmp |= PORT_PMUX_PMUXE(data);
     7f8:	4316      	orrs	r6, r2
     7fa:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     7fc:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     7fe:	2554      	movs	r5, #84	; 0x54
     800:	35ff      	adds	r5, #255	; 0xff
     802:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     804:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     806:	4316      	orrs	r6, r2
     808:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     80a:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     80c:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     80e:	4026      	ands	r6, r4
	tmp |= PORT_PMUX_PMUXO(data);
     810:	4306      	orrs	r6, r0
     812:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     814:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     816:	371b      	adds	r7, #27
     818:	5dde      	ldrb	r6, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     81a:	438e      	bics	r6, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     81c:	4316      	orrs	r6, r2
     81e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     820:	55de      	strb	r6, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     822:	269d      	movs	r6, #157	; 0x9d
     824:	0076      	lsls	r6, r6, #1
     826:	5d9f      	ldrb	r7, [r3, r6]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     828:	4645      	mov	r5, r8
     82a:	43af      	bics	r7, r5
     82c:	003d      	movs	r5, r7
	tmp |= PORT_PMUX_PMUXE(data);
     82e:	4315      	orrs	r5, r2
     830:	b2ed      	uxtb	r5, r5
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     832:	559d      	strb	r5, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     834:	2756      	movs	r7, #86	; 0x56
     836:	37ff      	adds	r7, #255	; 0xff
     838:	5ddd      	ldrb	r5, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     83a:	438d      	bics	r5, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     83c:	432a      	orrs	r2, r5
     83e:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     840:	55da      	strb	r2, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     842:	5d9a      	ldrb	r2, [r3, r6]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     844:	4014      	ands	r4, r2
	tmp |= PORT_PMUX_PMUXO(data);
     846:	4320      	orrs	r0, r4
     848:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     84a:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     84c:	22d0      	movs	r2, #208	; 0xd0
     84e:	5c9b      	ldrb	r3, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     850:	438b      	bics	r3, r1
     852:	0019      	movs	r1, r3
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     854:	2401      	movs	r4, #1
     856:	4321      	orrs	r1, r4
     858:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     85a:	4b0c      	ldr	r3, [pc, #48]	; (88c <SEGMENT_LCD_0_PORT_init+0x348>)
     85c:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     85e:	20b8      	movs	r0, #184	; 0xb8
     860:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     862:	3ac1      	subs	r2, #193	; 0xc1
     864:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     866:	4321      	orrs	r1, r4
     868:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     86a:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     86c:	21d1      	movs	r1, #209	; 0xd1
     86e:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     870:	2501      	movs	r5, #1
     872:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     874:	4322      	orrs	r2, r4
     876:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     878:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     87a:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     87c:	39c2      	subs	r1, #194	; 0xc2
     87e:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     880:	3101      	adds	r1, #1
     882:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     884:	541a      	strb	r2, [r3, r0]
	gpio_set_pin_function(PC21, PINMUX_PC21B_SLCD_LP41);

	gpio_set_pin_function(PB16, PINMUX_PB16B_SLCD_LP42);

	gpio_set_pin_function(PB17, PINMUX_PB17B_SLCD_LP43);
}
     886:	bc04      	pop	{r2}
     888:	4690      	mov	r8, r2
     88a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     88c:	41006000 	.word	0x41006000

00000890 <SEGMENT_LCD_0_init>:
 * \brief SLCD initialization function
 *
 * Enables SLCD peripheral, clocks and initializes SLCD driver
 */
void SEGMENT_LCD_0_init(void)
{
     890:	b510      	push	{r4, lr}
}

static inline void hri_mclk_set_APBCMASK_SLCD_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SLCD;
     892:	4906      	ldr	r1, [pc, #24]	; (8ac <SEGMENT_LCD_0_init+0x1c>)
     894:	69ca      	ldr	r2, [r1, #28]
     896:	2380      	movs	r3, #128	; 0x80
     898:	021b      	lsls	r3, r3, #8
     89a:	4313      	orrs	r3, r2
     89c:	61cb      	str	r3, [r1, #28]
	hri_mclk_set_APBCMASK_SLCD_bit(SLCD);
	slcd_sync_init(&SEGMENT_LCD_0, SLCD);
     89e:	4804      	ldr	r0, [pc, #16]	; (8b0 <SEGMENT_LCD_0_init+0x20>)
     8a0:	4b04      	ldr	r3, [pc, #16]	; (8b4 <SEGMENT_LCD_0_init+0x24>)
     8a2:	4798      	blx	r3
	SEGMENT_LCD_0_PORT_init();
     8a4:	4b04      	ldr	r3, [pc, #16]	; (8b8 <SEGMENT_LCD_0_init+0x28>)
     8a6:	4798      	blx	r3
}
     8a8:	bd10      	pop	{r4, pc}
     8aa:	46c0      	nop			; (mov r8, r8)
     8ac:	42003c00 	.word	0x42003c00
     8b0:	20000ae0 	.word	0x20000ae0
     8b4:	00000af1 	.word	0x00000af1
     8b8:	00000545 	.word	0x00000545

000008bc <system_init>:
	hri_gclk_write_PCHCTRL_reg(GCLK, PTC_GCLK_ID, CONF_GCLK_PTC_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_PTC_bit(MCLK);
}

void system_init(void)
{
     8bc:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     8be:	4b1a      	ldr	r3, [pc, #104]	; (928 <system_init+0x6c>)
     8c0:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     8c2:	23c0      	movs	r3, #192	; 0xc0
     8c4:	05db      	lsls	r3, r3, #23
     8c6:	2208      	movs	r2, #8
     8c8:	218a      	movs	r1, #138	; 0x8a
     8ca:	0049      	lsls	r1, r1, #1
     8cc:	505a      	str	r2, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     8ce:	390c      	subs	r1, #12
     8d0:	505a      	str	r2, [r3, r1]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     8d2:	4b16      	ldr	r3, [pc, #88]	; (92c <system_init+0x70>)
     8d4:	3221      	adds	r2, #33	; 0x21
     8d6:	32ff      	adds	r2, #255	; 0xff
     8d8:	4915      	ldr	r1, [pc, #84]	; (930 <system_init+0x74>)
     8da:	5099      	str	r1, [r3, r2]
     8dc:	21c0      	movs	r1, #192	; 0xc0
     8de:	0609      	lsls	r1, r1, #24
     8e0:	5099      	str	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     8e2:	2144      	movs	r1, #68	; 0x44
     8e4:	31ff      	adds	r1, #255	; 0xff
     8e6:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     8e8:	2001      	movs	r0, #1
     8ea:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     8ec:	545a      	strb	r2, [r3, r1]
	((Mclk *)hw)->APBAMASK.reg |= MCLK_APBAMASK_RTC;
     8ee:	4c11      	ldr	r4, [pc, #68]	; (934 <system_init+0x78>)
     8f0:	6962      	ldr	r2, [r4, #20]
     8f2:	2380      	movs	r3, #128	; 0x80
     8f4:	009b      	lsls	r3, r3, #2
     8f6:	4313      	orrs	r3, r2
     8f8:	6163      	str	r3, [r4, #20]
	timer_init(&Timer, RTC, _rtc_get_timer());
     8fa:	4b0f      	ldr	r3, [pc, #60]	; (938 <system_init+0x7c>)
     8fc:	4798      	blx	r3
     8fe:	0002      	movs	r2, r0
     900:	490e      	ldr	r1, [pc, #56]	; (93c <system_init+0x80>)
     902:	480f      	ldr	r0, [pc, #60]	; (940 <system_init+0x84>)
     904:	4b0f      	ldr	r3, [pc, #60]	; (944 <system_init+0x88>)
     906:	4798      	blx	r3

	gpio_set_pin_function(TEST_PIN, GPIO_PIN_FUNCTION_OFF);

	Timer_init();

	EDBG_0_init();
     908:	4b0f      	ldr	r3, [pc, #60]	; (948 <system_init+0x8c>)
     90a:	4798      	blx	r3

	ADXL345_0_init();
     90c:	4b0f      	ldr	r3, [pc, #60]	; (94c <system_init+0x90>)
     90e:	4798      	blx	r3
	SEGMENT_LCD_0_init();
     910:	4b0f      	ldr	r3, [pc, #60]	; (950 <system_init+0x94>)
     912:	4798      	blx	r3
     914:	2141      	movs	r1, #65	; 0x41
     916:	23ec      	movs	r3, #236	; 0xec
     918:	4a0e      	ldr	r2, [pc, #56]	; (954 <system_init+0x98>)
     91a:	50d1      	str	r1, [r2, r3]
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_PTC;
     91c:	69e2      	ldr	r2, [r4, #28]
     91e:	2380      	movs	r3, #128	; 0x80
     920:	01db      	lsls	r3, r3, #7
     922:	4313      	orrs	r3, r2
     924:	61e3      	str	r3, [r4, #28]

	PTC_clock_init();
}
     926:	bd10      	pop	{r4, pc}
     928:	000010cd 	.word	0x000010cd
     92c:	41006000 	.word	0x41006000
     930:	40000008 	.word	0x40000008
     934:	40000800 	.word	0x40000800
     938:	000012bf 	.word	0x000012bf
     93c:	40002400 	.word	0x40002400
     940:	20000ac4 	.word	0x20000ac4
     944:	00000d99 	.word	0x00000d99
     948:	00000449 	.word	0x00000449
     94c:	0000051d 	.word	0x0000051d
     950:	00000891 	.word	0x00000891
     954:	40001c00 	.word	0x40001c00

00000958 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     958:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     95c:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     95e:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     960:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     964:	4770      	bx	lr

00000966 <atomic_leave_critical>:
     966:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     96a:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     96c:	f383 8810 	msr	PRIMASK, r3
}
     970:	4770      	bx	lr
	...

00000974 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     974:	b510      	push	{r4, lr}
     976:	b084      	sub	sp, #16
     978:	0014      	movs	r4, r2
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     97a:	ab01      	add	r3, sp, #4
     97c:	3814      	subs	r0, #20
     97e:	8b82      	ldrh	r2, [r0, #28]
     980:	801a      	strh	r2, [r3, #0]
	msg.len    = n;
     982:	9402      	str	r4, [sp, #8]
	msg.flags  = I2C_M_STOP;
     984:	4a05      	ldr	r2, [pc, #20]	; (99c <i2c_m_sync_write+0x28>)
     986:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     988:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     98a:	0019      	movs	r1, r3
     98c:	4b04      	ldr	r3, [pc, #16]	; (9a0 <i2c_m_sync_write+0x2c>)
     98e:	4798      	blx	r3

	if (ret) {
     990:	2800      	cmp	r0, #0
     992:	d100      	bne.n	996 <i2c_m_sync_write+0x22>
		return ret;
	}

	return n;
     994:	0020      	movs	r0, r4
}
     996:	b004      	add	sp, #16
     998:	bd10      	pop	{r4, pc}
     99a:	46c0      	nop			; (mov r8, r8)
     99c:	ffff8000 	.word	0xffff8000
     9a0:	000015bd 	.word	0x000015bd

000009a4 <i2c_m_sync_read>:
{
     9a4:	b510      	push	{r4, lr}
     9a6:	b084      	sub	sp, #16
     9a8:	0014      	movs	r4, r2
	msg.addr   = i2c->slave_addr;
     9aa:	ab01      	add	r3, sp, #4
     9ac:	3814      	subs	r0, #20
     9ae:	8b82      	ldrh	r2, [r0, #28]
     9b0:	801a      	strh	r2, [r3, #0]
	msg.len    = n;
     9b2:	9402      	str	r4, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     9b4:	4a05      	ldr	r2, [pc, #20]	; (9cc <i2c_m_sync_read+0x28>)
     9b6:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     9b8:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     9ba:	0019      	movs	r1, r3
     9bc:	4b04      	ldr	r3, [pc, #16]	; (9d0 <i2c_m_sync_read+0x2c>)
     9be:	4798      	blx	r3
	if (ret) {
     9c0:	2800      	cmp	r0, #0
     9c2:	d100      	bne.n	9c6 <i2c_m_sync_read+0x22>
	return n;
     9c4:	0020      	movs	r0, r4
}
     9c6:	b004      	add	sp, #16
     9c8:	bd10      	pop	{r4, pc}
     9ca:	46c0      	nop			; (mov r8, r8)
     9cc:	ffff8001 	.word	0xffff8001
     9d0:	000015bd 	.word	0x000015bd

000009d4 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     9d4:	b570      	push	{r4, r5, r6, lr}
     9d6:	0004      	movs	r4, r0
     9d8:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     9da:	1e43      	subs	r3, r0, #1
     9dc:	4198      	sbcs	r0, r3
     9de:	b2c0      	uxtb	r0, r0
     9e0:	225e      	movs	r2, #94	; 0x5e
     9e2:	4907      	ldr	r1, [pc, #28]	; (a00 <i2c_m_sync_init+0x2c>)
     9e4:	4b07      	ldr	r3, [pc, #28]	; (a04 <i2c_m_sync_init+0x30>)
     9e6:	4798      	blx	r3

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     9e8:	0029      	movs	r1, r5
     9ea:	0020      	movs	r0, r4
     9ec:	4b06      	ldr	r3, [pc, #24]	; (a08 <i2c_m_sync_init+0x34>)
     9ee:	4798      	blx	r3
	if (init_status) {
     9f0:	2800      	cmp	r0, #0
     9f2:	d103      	bne.n	9fc <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     9f4:	4b05      	ldr	r3, [pc, #20]	; (a0c <i2c_m_sync_init+0x38>)
     9f6:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     9f8:	4b05      	ldr	r3, [pc, #20]	; (a10 <i2c_m_sync_init+0x3c>)
     9fa:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     9fc:	bd70      	pop	{r4, r5, r6, pc}
     9fe:	46c0      	nop			; (mov r8, r8)
     a00:	00009ccc 	.word	0x00009ccc
     a04:	00001021 	.word	0x00001021
     a08:	00001509 	.word	0x00001509
     a0c:	000009a5 	.word	0x000009a5
     a10:	00000975 	.word	0x00000975

00000a14 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     a14:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     a16:	4b01      	ldr	r3, [pc, #4]	; (a1c <i2c_m_sync_enable+0x8>)
     a18:	4798      	blx	r3
}
     a1a:	bd10      	pop	{r4, pc}
     a1c:	00001539 	.word	0x00001539

00000a20 <i2c_m_sync_set_slaveaddr>:
/**
 * \brief Sync version of i2c set slave address
 */
int32_t i2c_m_sync_set_slaveaddr(struct i2c_m_sync_desc *i2c, int16_t addr, int32_t addr_len)
{
	return i2c->slave_addr = (addr & 0x3ff) | (addr_len & I2C_M_TEN);
     a20:	0589      	lsls	r1, r1, #22
     a22:	0d89      	lsrs	r1, r1, #22
     a24:	2380      	movs	r3, #128	; 0x80
     a26:	00db      	lsls	r3, r3, #3
     a28:	401a      	ands	r2, r3
     a2a:	430a      	orrs	r2, r1
     a2c:	8382      	strh	r2, [r0, #28]
}
     a2e:	0010      	movs	r0, r2
     a30:	4770      	bx	lr
	...

00000a34 <i2c_m_sync_cmd_read>:

/**
 * \brief Sync version of i2c read command
 */
int32_t i2c_m_sync_cmd_read(struct i2c_m_sync_desc *i2c, uint8_t reg, uint8_t *buffer, uint8_t length)
{
     a34:	b570      	push	{r4, r5, r6, lr}
     a36:	b086      	sub	sp, #24
     a38:	0004      	movs	r4, r0
     a3a:	0016      	movs	r6, r2
     a3c:	001d      	movs	r5, r3
     a3e:	466b      	mov	r3, sp
     a40:	71d9      	strb	r1, [r3, #7]
     a42:	3307      	adds	r3, #7
	struct _i2c_m_msg msg;
	int32_t           ret;

	msg.addr   = i2c->slave_addr;
     a44:	a903      	add	r1, sp, #12
     a46:	8b82      	ldrh	r2, [r0, #28]
     a48:	800a      	strh	r2, [r1, #0]
	msg.len    = 1;
     a4a:	2201      	movs	r2, #1
     a4c:	604a      	str	r2, [r1, #4]
	msg.flags  = 0;
     a4e:	2200      	movs	r2, #0
     a50:	804a      	strh	r2, [r1, #2]
	msg.buffer = &reg;
     a52:	608b      	str	r3, [r1, #8]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     a54:	4b07      	ldr	r3, [pc, #28]	; (a74 <i2c_m_sync_cmd_read+0x40>)
     a56:	4798      	blx	r3

	if (ret != 0) {
     a58:	2800      	cmp	r0, #0
     a5a:	d001      	beq.n	a60 <i2c_m_sync_cmd_read+0x2c>
		/* error occurred */
		return ret;
	}

	return ERR_NONE;
}
     a5c:	b006      	add	sp, #24
     a5e:	bd70      	pop	{r4, r5, r6, pc}
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     a60:	a903      	add	r1, sp, #12
     a62:	4b05      	ldr	r3, [pc, #20]	; (a78 <i2c_m_sync_cmd_read+0x44>)
     a64:	804b      	strh	r3, [r1, #2]
	msg.buffer = buffer;
     a66:	608e      	str	r6, [r1, #8]
	msg.len    = length;
     a68:	604d      	str	r5, [r1, #4]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     a6a:	0020      	movs	r0, r4
     a6c:	4b01      	ldr	r3, [pc, #4]	; (a74 <i2c_m_sync_cmd_read+0x40>)
     a6e:	4798      	blx	r3
     a70:	e7f4      	b.n	a5c <i2c_m_sync_cmd_read+0x28>
     a72:	46c0      	nop			; (mov r8, r8)
     a74:	000015bd 	.word	0x000015bd
     a78:	ffff8001 	.word	0xffff8001

00000a7c <i2c_m_sync_transfer>:

/**
 * \brief Sync version of i2c transfer command
 */
int32_t i2c_m_sync_transfer(struct i2c_m_sync_desc *const i2c, struct _i2c_m_msg *msg)
{
     a7c:	b510      	push	{r4, lr}
	return _i2c_m_sync_transfer(&i2c->device, msg);
     a7e:	4b01      	ldr	r3, [pc, #4]	; (a84 <i2c_m_sync_transfer+0x8>)
     a80:	4798      	blx	r3
}
     a82:	bd10      	pop	{r4, pc}
     a84:	000015bd 	.word	0x000015bd

00000a88 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     a88:	b570      	push	{r4, r5, r6, lr}
     a8a:	0006      	movs	r6, r0
     a8c:	000c      	movs	r4, r1
     a8e:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     a90:	2800      	cmp	r0, #0
     a92:	d00d      	beq.n	ab0 <io_write+0x28>
     a94:	0008      	movs	r0, r1
     a96:	1e43      	subs	r3, r0, #1
     a98:	4198      	sbcs	r0, r3
     a9a:	b2c0      	uxtb	r0, r0
     a9c:	2234      	movs	r2, #52	; 0x34
     a9e:	4905      	ldr	r1, [pc, #20]	; (ab4 <io_write+0x2c>)
     aa0:	4b05      	ldr	r3, [pc, #20]	; (ab8 <io_write+0x30>)
     aa2:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     aa4:	6833      	ldr	r3, [r6, #0]
     aa6:	002a      	movs	r2, r5
     aa8:	0021      	movs	r1, r4
     aaa:	0030      	movs	r0, r6
     aac:	4798      	blx	r3
}
     aae:	bd70      	pop	{r4, r5, r6, pc}
     ab0:	2000      	movs	r0, #0
     ab2:	e7f3      	b.n	a9c <io_write+0x14>
     ab4:	00009ce8 	.word	0x00009ce8
     ab8:	00001021 	.word	0x00001021

00000abc <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     abc:	b570      	push	{r4, r5, r6, lr}
     abe:	0006      	movs	r6, r0
     ac0:	000c      	movs	r4, r1
     ac2:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     ac4:	2800      	cmp	r0, #0
     ac6:	d00d      	beq.n	ae4 <io_read+0x28>
     ac8:	0008      	movs	r0, r1
     aca:	1e43      	subs	r3, r0, #1
     acc:	4198      	sbcs	r0, r3
     ace:	b2c0      	uxtb	r0, r0
     ad0:	223d      	movs	r2, #61	; 0x3d
     ad2:	4905      	ldr	r1, [pc, #20]	; (ae8 <io_read+0x2c>)
     ad4:	4b05      	ldr	r3, [pc, #20]	; (aec <io_read+0x30>)
     ad6:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     ad8:	6873      	ldr	r3, [r6, #4]
     ada:	002a      	movs	r2, r5
     adc:	0021      	movs	r1, r4
     ade:	0030      	movs	r0, r6
     ae0:	4798      	blx	r3
}
     ae2:	bd70      	pop	{r4, r5, r6, pc}
     ae4:	2000      	movs	r0, #0
     ae6:	e7f3      	b.n	ad0 <io_read+0x14>
     ae8:	00009ce8 	.word	0x00009ce8
     aec:	00001021 	.word	0x00001021

00000af0 <slcd_sync_init>:

/**
 * \brief              Initialize SLCD Descriptor
 */
int32_t slcd_sync_init(struct slcd_sync_descriptor *const descr, void *const hw)
{
     af0:	b570      	push	{r4, r5, r6, lr}
     af2:	0004      	movs	r4, r0
     af4:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     af6:	2800      	cmp	r0, #0
     af8:	d00c      	beq.n	b14 <slcd_sync_init+0x24>
     afa:	0008      	movs	r0, r1
     afc:	1e43      	subs	r3, r0, #1
     afe:	4198      	sbcs	r0, r3
     b00:	b2c0      	uxtb	r0, r0
     b02:	222b      	movs	r2, #43	; 0x2b
     b04:	4904      	ldr	r1, [pc, #16]	; (b18 <slcd_sync_init+0x28>)
     b06:	4b05      	ldr	r3, [pc, #20]	; (b1c <slcd_sync_init+0x2c>)
     b08:	4798      	blx	r3
	return _slcd_sync_init(&descr->dev, hw);
     b0a:	0029      	movs	r1, r5
     b0c:	0020      	movs	r0, r4
     b0e:	4b04      	ldr	r3, [pc, #16]	; (b20 <slcd_sync_init+0x30>)
     b10:	4798      	blx	r3
}
     b12:	bd70      	pop	{r4, r5, r6, pc}
     b14:	2000      	movs	r0, #0
     b16:	e7f4      	b.n	b02 <slcd_sync_init+0x12>
     b18:	00009cfc 	.word	0x00009cfc
     b1c:	00001021 	.word	0x00001021
     b20:	00001b69 	.word	0x00001b69

00000b24 <slcd_sync_enable>:
/**
 * \brief              Enable SLCD driver
 *
 */
int32_t slcd_sync_enable(struct slcd_sync_descriptor *const descr)
{
     b24:	b510      	push	{r4, lr}
     b26:	0004      	movs	r4, r0
	ASSERT(descr);
     b28:	1e43      	subs	r3, r0, #1
     b2a:	4198      	sbcs	r0, r3
     b2c:	b2c0      	uxtb	r0, r0
     b2e:	223e      	movs	r2, #62	; 0x3e
     b30:	4903      	ldr	r1, [pc, #12]	; (b40 <slcd_sync_enable+0x1c>)
     b32:	4b04      	ldr	r3, [pc, #16]	; (b44 <slcd_sync_enable+0x20>)
     b34:	4798      	blx	r3
	return _slcd_sync_enable(&descr->dev);
     b36:	0020      	movs	r0, r4
     b38:	4b03      	ldr	r3, [pc, #12]	; (b48 <slcd_sync_enable+0x24>)
     b3a:	4798      	blx	r3
}
     b3c:	bd10      	pop	{r4, pc}
     b3e:	46c0      	nop			; (mov r8, r8)
     b40:	00009cfc 	.word	0x00009cfc
     b44:	00001021 	.word	0x00001021
     b48:	00001c0d 	.word	0x00001c0d

00000b4c <slcd_sync_seg_on>:
}
/**
 * \brief              Turn on a Segment
 */
int32_t slcd_sync_seg_on(struct slcd_sync_descriptor *const descr, uint32_t seg)
{
     b4c:	b570      	push	{r4, r5, r6, lr}
     b4e:	0004      	movs	r4, r0
     b50:	000d      	movs	r5, r1
	ASSERT(descr);
     b52:	1e43      	subs	r3, r0, #1
     b54:	4198      	sbcs	r0, r3
     b56:	b2c0      	uxtb	r0, r0
     b58:	224f      	movs	r2, #79	; 0x4f
     b5a:	4904      	ldr	r1, [pc, #16]	; (b6c <slcd_sync_seg_on+0x20>)
     b5c:	4b04      	ldr	r3, [pc, #16]	; (b70 <slcd_sync_seg_on+0x24>)
     b5e:	4798      	blx	r3
	return _slcd_sync_seg_on(&descr->dev, seg);
     b60:	0029      	movs	r1, r5
     b62:	0020      	movs	r0, r4
     b64:	4b03      	ldr	r3, [pc, #12]	; (b74 <slcd_sync_seg_on+0x28>)
     b66:	4798      	blx	r3
}
     b68:	bd70      	pop	{r4, r5, r6, pc}
     b6a:	46c0      	nop			; (mov r8, r8)
     b6c:	00009cfc 	.word	0x00009cfc
     b70:	00001021 	.word	0x00001021
     b74:	00001c25 	.word	0x00001c25

00000b78 <slcd_sync_seg_blink>:
}
/**
 * \brief              Blink a Segment
 */
int32_t slcd_sync_seg_blink(struct slcd_sync_descriptor *const descr, uint32_t seg, const uint32_t period)
{
     b78:	b570      	push	{r4, r5, r6, lr}
     b7a:	0004      	movs	r4, r0
     b7c:	000e      	movs	r6, r1
     b7e:	0015      	movs	r5, r2
	ASSERT(descr && period);
     b80:	2800      	cmp	r0, #0
     b82:	d00d      	beq.n	ba0 <slcd_sync_seg_blink+0x28>
     b84:	0010      	movs	r0, r2
     b86:	1e43      	subs	r3, r0, #1
     b88:	4198      	sbcs	r0, r3
     b8a:	b2c0      	uxtb	r0, r0
     b8c:	225f      	movs	r2, #95	; 0x5f
     b8e:	4905      	ldr	r1, [pc, #20]	; (ba4 <slcd_sync_seg_blink+0x2c>)
     b90:	4b05      	ldr	r3, [pc, #20]	; (ba8 <slcd_sync_seg_blink+0x30>)
     b92:	4798      	blx	r3
	return _slcd_sync_seg_blink(&descr->dev, seg, period);
     b94:	002a      	movs	r2, r5
     b96:	0031      	movs	r1, r6
     b98:	0020      	movs	r0, r4
     b9a:	4b04      	ldr	r3, [pc, #16]	; (bac <slcd_sync_seg_blink+0x34>)
     b9c:	4798      	blx	r3
}
     b9e:	bd70      	pop	{r4, r5, r6, pc}
     ba0:	2000      	movs	r0, #0
     ba2:	e7f3      	b.n	b8c <slcd_sync_seg_blink+0x14>
     ba4:	00009cfc 	.word	0x00009cfc
     ba8:	00001021 	.word	0x00001021
     bac:	00001c3d 	.word	0x00001c3d

00000bb0 <slcd_sync_write_char>:

/**
 * \brief              Displays a character
 */
int32_t slcd_sync_write_char(struct slcd_sync_descriptor *const descr, const uint8_t character, uint32_t index)
{
     bb0:	b570      	push	{r4, r5, r6, lr}
     bb2:	0004      	movs	r4, r0
     bb4:	000d      	movs	r5, r1
     bb6:	0016      	movs	r6, r2
	ASSERT(descr);
     bb8:	1e43      	subs	r3, r0, #1
     bba:	4198      	sbcs	r0, r3
     bbc:	b2c0      	uxtb	r0, r0
     bbe:	2268      	movs	r2, #104	; 0x68
     bc0:	4904      	ldr	r1, [pc, #16]	; (bd4 <slcd_sync_write_char+0x24>)
     bc2:	4b05      	ldr	r3, [pc, #20]	; (bd8 <slcd_sync_write_char+0x28>)
     bc4:	4798      	blx	r3
	return _slcd_sync_write_char(&descr->dev, character, index);
     bc6:	0032      	movs	r2, r6
     bc8:	0029      	movs	r1, r5
     bca:	0020      	movs	r0, r4
     bcc:	4b03      	ldr	r3, [pc, #12]	; (bdc <slcd_sync_write_char+0x2c>)
     bce:	4798      	blx	r3
}
     bd0:	bd70      	pop	{r4, r5, r6, pc}
     bd2:	46c0      	nop			; (mov r8, r8)
     bd4:	00009cfc 	.word	0x00009cfc
     bd8:	00001021 	.word	0x00001021
     bdc:	00001d7d 	.word	0x00001d7d

00000be0 <slcd_sync_write_string>:
/**
 * \brief              Displays character string string
 */
int32_t slcd_sync_write_string(struct slcd_sync_descriptor *const descr, uint8_t *const str, uint32_t len,
                               uint32_t index)
{
     be0:	b5f0      	push	{r4, r5, r6, r7, lr}
     be2:	46ce      	mov	lr, r9
     be4:	b500      	push	{lr}
     be6:	b082      	sub	sp, #8
     be8:	9001      	str	r0, [sp, #4]
     bea:	000f      	movs	r7, r1
     bec:	0016      	movs	r6, r2
     bee:	001d      	movs	r5, r3
	uint32_t i;
	ASSERT(descr && len);
     bf0:	2800      	cmp	r0, #0
     bf2:	d008      	beq.n	c06 <slcd_sync_write_string+0x26>
     bf4:	2a00      	cmp	r2, #0
     bf6:	d115      	bne.n	c24 <slcd_sync_write_string+0x44>
     bf8:	2273      	movs	r2, #115	; 0x73
     bfa:	4913      	ldr	r1, [pc, #76]	; (c48 <slcd_sync_write_string+0x68>)
     bfc:	2000      	movs	r0, #0
     bfe:	4b13      	ldr	r3, [pc, #76]	; (c4c <slcd_sync_write_string+0x6c>)
     c00:	4798      	blx	r3
	for (i = 0; i < len; i++) {
		if (_slcd_sync_write_char(&descr->dev, *(str + i), index + i) != ERR_NONE) {
			return ERR_INVALID_ARG;
		}
	}
	return ERR_NONE;
     c02:	2000      	movs	r0, #0
     c04:	e00a      	b.n	c1c <slcd_sync_write_string+0x3c>
	ASSERT(descr && len);
     c06:	2273      	movs	r2, #115	; 0x73
     c08:	490f      	ldr	r1, [pc, #60]	; (c48 <slcd_sync_write_string+0x68>)
     c0a:	2000      	movs	r0, #0
     c0c:	4b0f      	ldr	r3, [pc, #60]	; (c4c <slcd_sync_write_string+0x6c>)
     c0e:	4798      	blx	r3
	return ERR_NONE;
     c10:	2000      	movs	r0, #0
	for (i = 0; i < len; i++) {
     c12:	2e00      	cmp	r6, #0
     c14:	d10b      	bne.n	c2e <slcd_sync_write_string+0x4e>
     c16:	e001      	b.n	c1c <slcd_sync_write_string+0x3c>
			return ERR_INVALID_ARG;
     c18:	200d      	movs	r0, #13
     c1a:	4240      	negs	r0, r0
}
     c1c:	b002      	add	sp, #8
     c1e:	bc04      	pop	{r2}
     c20:	4691      	mov	r9, r2
     c22:	bdf0      	pop	{r4, r5, r6, r7, pc}
	ASSERT(descr && len);
     c24:	2273      	movs	r2, #115	; 0x73
     c26:	4908      	ldr	r1, [pc, #32]	; (c48 <slcd_sync_write_string+0x68>)
     c28:	2001      	movs	r0, #1
     c2a:	4b08      	ldr	r3, [pc, #32]	; (c4c <slcd_sync_write_string+0x6c>)
     c2c:	4798      	blx	r3
{
     c2e:	2400      	movs	r4, #0
		if (_slcd_sync_write_char(&descr->dev, *(str + i), index + i) != ERR_NONE) {
     c30:	4b07      	ldr	r3, [pc, #28]	; (c50 <slcd_sync_write_string+0x70>)
     c32:	4699      	mov	r9, r3
     c34:	192a      	adds	r2, r5, r4
     c36:	5d39      	ldrb	r1, [r7, r4]
     c38:	9801      	ldr	r0, [sp, #4]
     c3a:	47c8      	blx	r9
     c3c:	2800      	cmp	r0, #0
     c3e:	d1eb      	bne.n	c18 <slcd_sync_write_string+0x38>
	for (i = 0; i < len; i++) {
     c40:	3401      	adds	r4, #1
     c42:	42a6      	cmp	r6, r4
     c44:	d8f6      	bhi.n	c34 <slcd_sync_write_string+0x54>
     c46:	e7e9      	b.n	c1c <slcd_sync_write_string+0x3c>
     c48:	00009cfc 	.word	0x00009cfc
     c4c:	00001021 	.word	0x00001021
     c50:	00001d7d 	.word	0x00001d7d

00000c54 <slcd_sync_start_animation>:
/**
 * \brief               Start animation play by a segment array
 */
int32_t slcd_sync_start_animation(struct slcd_sync_descriptor *const descr, const uint32_t segs[], uint32_t len,
                                  const uint32_t period)
{
     c54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c56:	0004      	movs	r4, r0
     c58:	000d      	movs	r5, r1
     c5a:	0016      	movs	r6, r2
     c5c:	001f      	movs	r7, r3
	ASSERT(descr && segs && len && period);
     c5e:	2800      	cmp	r0, #0
     c60:	d012      	beq.n	c88 <slcd_sync_start_animation+0x34>
     c62:	2900      	cmp	r1, #0
     c64:	d012      	beq.n	c8c <slcd_sync_start_animation+0x38>
     c66:	2000      	movs	r0, #0
     c68:	2a00      	cmp	r2, #0
     c6a:	d002      	beq.n	c72 <slcd_sync_start_animation+0x1e>
     c6c:	0018      	movs	r0, r3
     c6e:	1e43      	subs	r3, r0, #1
     c70:	4198      	sbcs	r0, r3
     c72:	2282      	movs	r2, #130	; 0x82
     c74:	4906      	ldr	r1, [pc, #24]	; (c90 <slcd_sync_start_animation+0x3c>)
     c76:	4b07      	ldr	r3, [pc, #28]	; (c94 <slcd_sync_start_animation+0x40>)
     c78:	4798      	blx	r3
	return _slcd_sync_start_animation(&descr->dev, segs, len, period);
     c7a:	003b      	movs	r3, r7
     c7c:	0032      	movs	r2, r6
     c7e:	0029      	movs	r1, r5
     c80:	0020      	movs	r0, r4
     c82:	4c05      	ldr	r4, [pc, #20]	; (c98 <slcd_sync_start_animation+0x44>)
     c84:	47a0      	blx	r4
}
     c86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && segs && len && period);
     c88:	2000      	movs	r0, #0
     c8a:	e7f2      	b.n	c72 <slcd_sync_start_animation+0x1e>
     c8c:	2000      	movs	r0, #0
     c8e:	e7f0      	b.n	c72 <slcd_sync_start_animation+0x1e>
     c90:	00009cfc 	.word	0x00009cfc
     c94:	00001021 	.word	0x00001021
     c98:	00001f01 	.word	0x00001f01

00000c9c <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
     c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c9e:	46ce      	mov	lr, r9
     ca0:	4647      	mov	r7, r8
     ca2:	b580      	push	{r7, lr}
     ca4:	4681      	mov	r9, r0
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
     ca6:	6803      	ldr	r3, [r0, #0]
     ca8:	469c      	mov	ip, r3
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
     caa:	2b00      	cmp	r3, #0
     cac:	d005      	beq.n	cba <timer_add_timer_task+0x1e>
		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
		}
		if (time_left >= new_task->interval)
     cae:	688e      	ldr	r6, [r1, #8]
     cb0:	001c      	movs	r4, r3
     cb2:	2500      	movs	r5, #0
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     cb4:	2701      	movs	r7, #1
     cb6:	1abf      	subs	r7, r7, r2
     cb8:	e00d      	b.n	cd6 <timer_add_timer_task+0x3a>
		list_insert_as_head(list, new_task);
     cba:	4b12      	ldr	r3, [pc, #72]	; (d04 <timer_add_timer_task+0x68>)
     cbc:	4798      	blx	r3
		return;
     cbe:	e018      	b.n	cf2 <timer_add_timer_task+0x56>
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     cc0:	18fb      	adds	r3, r7, r3
     cc2:	68a0      	ldr	r0, [r4, #8]
     cc4:	4680      	mov	r8, r0
     cc6:	4443      	add	r3, r8
		if (time_left >= new_task->interval)
     cc8:	42b3      	cmp	r3, r6
     cca:	d20c      	bcs.n	ce6 <timer_add_timer_task+0x4a>
 * \return A pointer to the next list element or NULL if there is not next
 * element
 */
static inline void *list_get_next_element(const void *const element)
{
	return element ? ((struct list_element *)element)->next : NULL;
     ccc:	6823      	ldr	r3, [r4, #0]
     cce:	0025      	movs	r5, r4
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
     cd0:	2b00      	cmp	r3, #0
     cd2:	d00b      	beq.n	cec <timer_add_timer_task+0x50>
     cd4:	001c      	movs	r4, r3
		if (it->time_label <= time) {
     cd6:	6863      	ldr	r3, [r4, #4]
     cd8:	4293      	cmp	r3, r2
     cda:	d8f1      	bhi.n	cc0 <timer_add_timer_task+0x24>
			time_left = it->interval - (time - it->time_label);
     cdc:	68a0      	ldr	r0, [r4, #8]
     cde:	4680      	mov	r8, r0
     ce0:	4443      	add	r3, r8
     ce2:	1a9b      	subs	r3, r3, r2
     ce4:	e7f0      	b.n	cc8 <timer_add_timer_task+0x2c>
			break;
		prev = it;
	}

	if (it == head) {
     ce6:	45a4      	cmp	ip, r4
     ce8:	d007      	beq.n	cfa <timer_add_timer_task+0x5e>
     cea:	002c      	movs	r4, r5
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
     cec:	0020      	movs	r0, r4
     cee:	4b06      	ldr	r3, [pc, #24]	; (d08 <timer_add_timer_task+0x6c>)
     cf0:	4798      	blx	r3
	}
}
     cf2:	bc0c      	pop	{r2, r3}
     cf4:	4690      	mov	r8, r2
     cf6:	4699      	mov	r9, r3
     cf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
     cfa:	4648      	mov	r0, r9
     cfc:	4b01      	ldr	r3, [pc, #4]	; (d04 <timer_add_timer_task+0x68>)
     cfe:	4798      	blx	r3
     d00:	e7f7      	b.n	cf2 <timer_add_timer_task+0x56>
     d02:	46c0      	nop			; (mov r8, r8)
     d04:	0000104d 	.word	0x0000104d
     d08:	00001079 	.word	0x00001079

00000d0c <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
     d0c:	b5f0      	push	{r4, r5, r6, r7, lr}
     d0e:	46c6      	mov	lr, r8
     d10:	b500      	push	{lr}
     d12:	b082      	sub	sp, #8
     d14:	0007      	movs	r7, r0
	return (void *)list->head;
     d16:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
     d18:	6903      	ldr	r3, [r0, #16]
     d1a:	3301      	adds	r3, #1
     d1c:	4698      	mov	r8, r3
     d1e:	6103      	str	r3, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
     d20:	7e03      	ldrb	r3, [r0, #24]
     d22:	07db      	lsls	r3, r3, #31
     d24:	d411      	bmi.n	d4a <timer_process_counted+0x3e>
     d26:	7e03      	ldrb	r3, [r0, #24]
     d28:	079b      	lsls	r3, r3, #30
     d2a:	d40e      	bmi.n	d4a <timer_process_counted+0x3e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
		return;
	}

	while (it && ((time - it->time_label) >= it->interval)) {
     d2c:	2c00      	cmp	r4, #0
     d2e:	d010      	beq.n	d52 <timer_process_counted+0x46>
     d30:	4643      	mov	r3, r8
     d32:	6862      	ldr	r2, [r4, #4]
     d34:	1a9b      	subs	r3, r3, r2
     d36:	68a2      	ldr	r2, [r4, #8]
     d38:	4293      	cmp	r3, r2
     d3a:	d30a      	bcc.n	d52 <timer_process_counted+0x46>
		struct timer_task *tmp = it;

		list_remove_head(&timer->tasks);
     d3c:	2314      	movs	r3, #20
     d3e:	469c      	mov	ip, r3
     d40:	4484      	add	ip, r0
     d42:	4663      	mov	r3, ip
     d44:	9301      	str	r3, [sp, #4]
     d46:	4e12      	ldr	r6, [pc, #72]	; (d90 <timer_process_counted+0x84>)
     d48:	e014      	b.n	d74 <timer_process_counted+0x68>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
     d4a:	7e3b      	ldrb	r3, [r7, #24]
     d4c:	2202      	movs	r2, #2
     d4e:	4313      	orrs	r3, r2
     d50:	763b      	strb	r3, [r7, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
     d52:	b002      	add	sp, #8
     d54:	bc04      	pop	{r2}
     d56:	4690      	mov	r8, r2
     d58:	bdf0      	pop	{r4, r5, r6, r7, pc}
     d5a:	697d      	ldr	r5, [r7, #20]
		tmp->cb(tmp);
     d5c:	68e3      	ldr	r3, [r4, #12]
     d5e:	0020      	movs	r0, r4
     d60:	4798      	blx	r3
	while (it && ((time - it->time_label) >= it->interval)) {
     d62:	2d00      	cmp	r5, #0
     d64:	d0f5      	beq.n	d52 <timer_process_counted+0x46>
		it = (struct timer_task *)list_get_head(&timer->tasks);
     d66:	002c      	movs	r4, r5
	while (it && ((time - it->time_label) >= it->interval)) {
     d68:	4643      	mov	r3, r8
     d6a:	686a      	ldr	r2, [r5, #4]
     d6c:	1a9b      	subs	r3, r3, r2
     d6e:	68aa      	ldr	r2, [r5, #8]
     d70:	4293      	cmp	r3, r2
     d72:	d3ee      	bcc.n	d52 <timer_process_counted+0x46>
		list_remove_head(&timer->tasks);
     d74:	9801      	ldr	r0, [sp, #4]
     d76:	47b0      	blx	r6
		if (TIMER_TASK_REPEAT == tmp->mode) {
     d78:	7c23      	ldrb	r3, [r4, #16]
     d7a:	2b01      	cmp	r3, #1
     d7c:	d1ed      	bne.n	d5a <timer_process_counted+0x4e>
			tmp->time_label = time;
     d7e:	4643      	mov	r3, r8
     d80:	6063      	str	r3, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
     d82:	4642      	mov	r2, r8
     d84:	0021      	movs	r1, r4
     d86:	9801      	ldr	r0, [sp, #4]
     d88:	4b02      	ldr	r3, [pc, #8]	; (d94 <timer_process_counted+0x88>)
     d8a:	4798      	blx	r3
     d8c:	e7e5      	b.n	d5a <timer_process_counted+0x4e>
     d8e:	46c0      	nop			; (mov r8, r8)
     d90:	00001081 	.word	0x00001081
     d94:	00000c9d 	.word	0x00000c9d

00000d98 <timer_init>:
{
     d98:	b570      	push	{r4, r5, r6, lr}
     d9a:	0005      	movs	r5, r0
     d9c:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     d9e:	2800      	cmp	r0, #0
     da0:	d011      	beq.n	dc6 <timer_init+0x2e>
     da2:	0008      	movs	r0, r1
     da4:	1e43      	subs	r3, r0, #1
     da6:	4198      	sbcs	r0, r3
     da8:	b2c0      	uxtb	r0, r0
     daa:	223b      	movs	r2, #59	; 0x3b
     dac:	4907      	ldr	r1, [pc, #28]	; (dcc <timer_init+0x34>)
     dae:	4b08      	ldr	r3, [pc, #32]	; (dd0 <timer_init+0x38>)
     db0:	4798      	blx	r3
	_timer_init(&descr->device, hw);
     db2:	0021      	movs	r1, r4
     db4:	0028      	movs	r0, r5
     db6:	4b07      	ldr	r3, [pc, #28]	; (dd4 <timer_init+0x3c>)
     db8:	4798      	blx	r3
	descr->time                           = 0;
     dba:	2300      	movs	r3, #0
     dbc:	612b      	str	r3, [r5, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
     dbe:	4b06      	ldr	r3, [pc, #24]	; (dd8 <timer_init+0x40>)
     dc0:	602b      	str	r3, [r5, #0]
}
     dc2:	2000      	movs	r0, #0
     dc4:	bd70      	pop	{r4, r5, r6, pc}
     dc6:	2000      	movs	r0, #0
     dc8:	e7ef      	b.n	daa <timer_init+0x12>
     dca:	46c0      	nop			; (mov r8, r8)
     dcc:	00009d18 	.word	0x00009d18
     dd0:	00001021 	.word	0x00001021
     dd4:	000011dd 	.word	0x000011dd
     dd8:	00000d0d 	.word	0x00000d0d

00000ddc <timer_start>:
{
     ddc:	b510      	push	{r4, lr}
     dde:	0004      	movs	r4, r0
	ASSERT(descr);
     de0:	1e43      	subs	r3, r0, #1
     de2:	4198      	sbcs	r0, r3
     de4:	b2c0      	uxtb	r0, r0
     de6:	2253      	movs	r2, #83	; 0x53
     de8:	4907      	ldr	r1, [pc, #28]	; (e08 <timer_start+0x2c>)
     dea:	4b08      	ldr	r3, [pc, #32]	; (e0c <timer_start+0x30>)
     dec:	4798      	blx	r3
	if (_timer_is_started(&descr->device)) {
     dee:	0020      	movs	r0, r4
     df0:	4b07      	ldr	r3, [pc, #28]	; (e10 <timer_start+0x34>)
     df2:	4798      	blx	r3
     df4:	2800      	cmp	r0, #0
     df6:	d104      	bne.n	e02 <timer_start+0x26>
	_timer_start(&descr->device);
     df8:	0020      	movs	r0, r4
     dfa:	4b06      	ldr	r3, [pc, #24]	; (e14 <timer_start+0x38>)
     dfc:	4798      	blx	r3
	return ERR_NONE;
     dfe:	2000      	movs	r0, #0
}
     e00:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     e02:	2011      	movs	r0, #17
     e04:	4240      	negs	r0, r0
     e06:	e7fb      	b.n	e00 <timer_start+0x24>
     e08:	00009d18 	.word	0x00009d18
     e0c:	00001021 	.word	0x00001021
     e10:	000012a5 	.word	0x000012a5
     e14:	00001249 	.word	0x00001249

00000e18 <timer_add_task>:
{
     e18:	b570      	push	{r4, r5, r6, lr}
     e1a:	b082      	sub	sp, #8
     e1c:	0004      	movs	r4, r0
     e1e:	000d      	movs	r5, r1
	ASSERT(descr && task);
     e20:	2800      	cmp	r0, #0
     e22:	d024      	beq.n	e6e <timer_add_task+0x56>
     e24:	0008      	movs	r0, r1
     e26:	1e43      	subs	r3, r0, #1
     e28:	4198      	sbcs	r0, r3
     e2a:	b2c0      	uxtb	r0, r0
     e2c:	227a      	movs	r2, #122	; 0x7a
     e2e:	491e      	ldr	r1, [pc, #120]	; (ea8 <timer_add_task+0x90>)
     e30:	4b1e      	ldr	r3, [pc, #120]	; (eac <timer_add_task+0x94>)
     e32:	4798      	blx	r3
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     e34:	7e23      	ldrb	r3, [r4, #24]
     e36:	2201      	movs	r2, #1
     e38:	4313      	orrs	r3, r2
     e3a:	7623      	strb	r3, [r4, #24]
	if (is_list_element(&descr->tasks, task)) {
     e3c:	0026      	movs	r6, r4
     e3e:	3614      	adds	r6, #20
     e40:	0029      	movs	r1, r5
     e42:	0030      	movs	r0, r6
     e44:	4b1a      	ldr	r3, [pc, #104]	; (eb0 <timer_add_task+0x98>)
     e46:	4798      	blx	r3
     e48:	2800      	cmp	r0, #0
     e4a:	d112      	bne.n	e72 <timer_add_task+0x5a>
	task->time_label = descr->time;
     e4c:	6923      	ldr	r3, [r4, #16]
     e4e:	606b      	str	r3, [r5, #4]
	timer_add_timer_task(&descr->tasks, task, descr->time);
     e50:	6922      	ldr	r2, [r4, #16]
     e52:	0029      	movs	r1, r5
     e54:	0030      	movs	r0, r6
     e56:	4b17      	ldr	r3, [pc, #92]	; (eb4 <timer_add_task+0x9c>)
     e58:	4798      	blx	r3
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     e5a:	7e23      	ldrb	r3, [r4, #24]
     e5c:	2201      	movs	r2, #1
     e5e:	4393      	bics	r3, r2
     e60:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     e62:	7e23      	ldrb	r3, [r4, #24]
	return ERR_NONE;
     e64:	2000      	movs	r0, #0
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     e66:	079b      	lsls	r3, r3, #30
     e68:	d40f      	bmi.n	e8a <timer_add_task+0x72>
}
     e6a:	b002      	add	sp, #8
     e6c:	bd70      	pop	{r4, r5, r6, pc}
     e6e:	2000      	movs	r0, #0
     e70:	e7dc      	b.n	e2c <timer_add_task+0x14>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     e72:	7e23      	ldrb	r3, [r4, #24]
     e74:	2201      	movs	r2, #1
     e76:	4393      	bics	r3, r2
     e78:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     e7a:	327e      	adds	r2, #126	; 0x7e
     e7c:	490a      	ldr	r1, [pc, #40]	; (ea8 <timer_add_task+0x90>)
     e7e:	2000      	movs	r0, #0
     e80:	4b0a      	ldr	r3, [pc, #40]	; (eac <timer_add_task+0x94>)
     e82:	4798      	blx	r3
		return ERR_ALREADY_INITIALIZED;
     e84:	2012      	movs	r0, #18
     e86:	4240      	negs	r0, r0
     e88:	e7ef      	b.n	e6a <timer_add_task+0x52>
		CRITICAL_SECTION_ENTER()
     e8a:	a801      	add	r0, sp, #4
     e8c:	4b0a      	ldr	r3, [pc, #40]	; (eb8 <timer_add_task+0xa0>)
     e8e:	4798      	blx	r3
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     e90:	7e23      	ldrb	r3, [r4, #24]
     e92:	2202      	movs	r2, #2
     e94:	4393      	bics	r3, r2
     e96:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     e98:	0020      	movs	r0, r4
     e9a:	4b08      	ldr	r3, [pc, #32]	; (ebc <timer_add_task+0xa4>)
     e9c:	4798      	blx	r3
		CRITICAL_SECTION_LEAVE()
     e9e:	a801      	add	r0, sp, #4
     ea0:	4b07      	ldr	r3, [pc, #28]	; (ec0 <timer_add_task+0xa8>)
     ea2:	4798      	blx	r3
	return ERR_NONE;
     ea4:	2000      	movs	r0, #0
     ea6:	e7e0      	b.n	e6a <timer_add_task+0x52>
     ea8:	00009d18 	.word	0x00009d18
     eac:	00001021 	.word	0x00001021
     eb0:	00001029 	.word	0x00001029
     eb4:	00000c9d 	.word	0x00000c9d
     eb8:	00000959 	.word	0x00000959
     ebc:	000012bd 	.word	0x000012bd
     ec0:	00000967 	.word	0x00000967

00000ec4 <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     ec6:	46ce      	mov	lr, r9
     ec8:	4647      	mov	r7, r8
     eca:	b580      	push	{r7, lr}
     ecc:	0004      	movs	r4, r0
     ece:	000f      	movs	r7, r1
     ed0:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     ed2:	2800      	cmp	r0, #0
     ed4:	d026      	beq.n	f24 <usart_sync_write+0x60>
     ed6:	2900      	cmp	r1, #0
     ed8:	d026      	beq.n	f28 <usart_sync_write+0x64>
     eda:	0010      	movs	r0, r2
     edc:	1e43      	subs	r3, r0, #1
     ede:	4198      	sbcs	r0, r3
     ee0:	22f1      	movs	r2, #241	; 0xf1
     ee2:	4912      	ldr	r1, [pc, #72]	; (f2c <usart_sync_write+0x68>)
     ee4:	4b12      	ldr	r3, [pc, #72]	; (f30 <usart_sync_write+0x6c>)
     ee6:	4798      	blx	r3
	while (!_usart_sync_is_ready_to_send(&descr->device))
     ee8:	3408      	adds	r4, #8
     eea:	4d12      	ldr	r5, [pc, #72]	; (f34 <usart_sync_write+0x70>)
     eec:	0020      	movs	r0, r4
     eee:	47a8      	blx	r5
     ef0:	2800      	cmp	r0, #0
     ef2:	d0fb      	beq.n	eec <usart_sync_write+0x28>
     ef4:	2600      	movs	r6, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
     ef6:	4b10      	ldr	r3, [pc, #64]	; (f38 <usart_sync_write+0x74>)
     ef8:	4699      	mov	r9, r3
		while (!_usart_sync_is_ready_to_send(&descr->device))
     efa:	4d0e      	ldr	r5, [pc, #56]	; (f34 <usart_sync_write+0x70>)
		_usart_sync_write_byte(&descr->device, buf[offset]);
     efc:	5db9      	ldrb	r1, [r7, r6]
     efe:	0020      	movs	r0, r4
     f00:	47c8      	blx	r9
		while (!_usart_sync_is_ready_to_send(&descr->device))
     f02:	0020      	movs	r0, r4
     f04:	47a8      	blx	r5
     f06:	2800      	cmp	r0, #0
     f08:	d0fb      	beq.n	f02 <usart_sync_write+0x3e>
			;
	} while (++offset < length);
     f0a:	3601      	adds	r6, #1
     f0c:	4546      	cmp	r6, r8
     f0e:	d3f5      	bcc.n	efc <usart_sync_write+0x38>
	while (!_usart_sync_is_transmit_done(&descr->device))
     f10:	4d0a      	ldr	r5, [pc, #40]	; (f3c <usart_sync_write+0x78>)
     f12:	0020      	movs	r0, r4
     f14:	47a8      	blx	r5
     f16:	2800      	cmp	r0, #0
     f18:	d0fb      	beq.n	f12 <usart_sync_write+0x4e>
		;
	return (int32_t)offset;
}
     f1a:	0030      	movs	r0, r6
     f1c:	bc0c      	pop	{r2, r3}
     f1e:	4690      	mov	r8, r2
     f20:	4699      	mov	r9, r3
     f22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     f24:	2000      	movs	r0, #0
     f26:	e7db      	b.n	ee0 <usart_sync_write+0x1c>
     f28:	2000      	movs	r0, #0
     f2a:	e7d9      	b.n	ee0 <usart_sync_write+0x1c>
     f2c:	00009d30 	.word	0x00009d30
     f30:	00001021 	.word	0x00001021
     f34:	000014e9 	.word	0x000014e9
     f38:	000014d9 	.word	0x000014d9
     f3c:	000014f3 	.word	0x000014f3

00000f40 <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     f40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     f42:	46ce      	mov	lr, r9
     f44:	4647      	mov	r7, r8
     f46:	b580      	push	{r7, lr}
     f48:	0004      	movs	r4, r0
     f4a:	000f      	movs	r7, r1
     f4c:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     f4e:	2800      	cmp	r0, #0
     f50:	d01d      	beq.n	f8e <usart_sync_read+0x4e>
     f52:	2900      	cmp	r1, #0
     f54:	d01d      	beq.n	f92 <usart_sync_read+0x52>
     f56:	0010      	movs	r0, r2
     f58:	1e43      	subs	r3, r0, #1
     f5a:	4198      	sbcs	r0, r3
     f5c:	2286      	movs	r2, #134	; 0x86
     f5e:	0052      	lsls	r2, r2, #1
     f60:	490d      	ldr	r1, [pc, #52]	; (f98 <usart_sync_read+0x58>)
     f62:	4b0e      	ldr	r3, [pc, #56]	; (f9c <usart_sync_read+0x5c>)
     f64:	4798      	blx	r3
	uint32_t                      offset = 0;
     f66:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
     f68:	3408      	adds	r4, #8
     f6a:	4d0d      	ldr	r5, [pc, #52]	; (fa0 <usart_sync_read+0x60>)
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
     f6c:	4b0d      	ldr	r3, [pc, #52]	; (fa4 <usart_sync_read+0x64>)
     f6e:	4699      	mov	r9, r3
		while (!_usart_sync_is_byte_received(&descr->device))
     f70:	0020      	movs	r0, r4
     f72:	47a8      	blx	r5
     f74:	2800      	cmp	r0, #0
     f76:	d0fb      	beq.n	f70 <usart_sync_read+0x30>
		buf[offset] = _usart_sync_read_byte(&descr->device);
     f78:	0020      	movs	r0, r4
     f7a:	47c8      	blx	r9
     f7c:	55b8      	strb	r0, [r7, r6]
	} while (++offset < length);
     f7e:	3601      	adds	r6, #1
     f80:	4546      	cmp	r6, r8
     f82:	d3f5      	bcc.n	f70 <usart_sync_read+0x30>

	return (int32_t)offset;
}
     f84:	0030      	movs	r0, r6
     f86:	bc0c      	pop	{r2, r3}
     f88:	4690      	mov	r8, r2
     f8a:	4699      	mov	r9, r3
     f8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     f8e:	2000      	movs	r0, #0
     f90:	e7e4      	b.n	f5c <usart_sync_read+0x1c>
     f92:	2000      	movs	r0, #0
     f94:	e7e2      	b.n	f5c <usart_sync_read+0x1c>
     f96:	46c0      	nop			; (mov r8, r8)
     f98:	00009d30 	.word	0x00009d30
     f9c:	00001021 	.word	0x00001021
     fa0:	000014fd 	.word	0x000014fd
     fa4:	000014e1 	.word	0x000014e1

00000fa8 <usart_sync_init>:
{
     fa8:	b570      	push	{r4, r5, r6, lr}
     faa:	0005      	movs	r5, r0
     fac:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     fae:	2800      	cmp	r0, #0
     fb0:	d013      	beq.n	fda <usart_sync_init+0x32>
     fb2:	0008      	movs	r0, r1
     fb4:	1e43      	subs	r3, r0, #1
     fb6:	4198      	sbcs	r0, r3
     fb8:	b2c0      	uxtb	r0, r0
     fba:	2234      	movs	r2, #52	; 0x34
     fbc:	4908      	ldr	r1, [pc, #32]	; (fe0 <usart_sync_init+0x38>)
     fbe:	4b09      	ldr	r3, [pc, #36]	; (fe4 <usart_sync_init+0x3c>)
     fc0:	4798      	blx	r3
	init_status = _usart_sync_init(&descr->device, hw);
     fc2:	0028      	movs	r0, r5
     fc4:	3008      	adds	r0, #8
     fc6:	0021      	movs	r1, r4
     fc8:	4b07      	ldr	r3, [pc, #28]	; (fe8 <usart_sync_init+0x40>)
     fca:	4798      	blx	r3
	if (init_status) {
     fcc:	2800      	cmp	r0, #0
     fce:	d103      	bne.n	fd8 <usart_sync_init+0x30>
	descr->io.read  = usart_sync_read;
     fd0:	4b06      	ldr	r3, [pc, #24]	; (fec <usart_sync_init+0x44>)
     fd2:	606b      	str	r3, [r5, #4]
	descr->io.write = usart_sync_write;
     fd4:	4b06      	ldr	r3, [pc, #24]	; (ff0 <usart_sync_init+0x48>)
     fd6:	602b      	str	r3, [r5, #0]
}
     fd8:	bd70      	pop	{r4, r5, r6, pc}
     fda:	2000      	movs	r0, #0
     fdc:	e7ed      	b.n	fba <usart_sync_init+0x12>
     fde:	46c0      	nop			; (mov r8, r8)
     fe0:	00009d30 	.word	0x00009d30
     fe4:	00001021 	.word	0x00001021
     fe8:	00001499 	.word	0x00001499
     fec:	00000f41 	.word	0x00000f41
     ff0:	00000ec5 	.word	0x00000ec5

00000ff4 <usart_sync_enable>:
{
     ff4:	b510      	push	{r4, lr}
     ff6:	0004      	movs	r4, r0
	ASSERT(descr);
     ff8:	1e43      	subs	r3, r0, #1
     ffa:	4198      	sbcs	r0, r3
     ffc:	b2c0      	uxtb	r0, r0
     ffe:	2253      	movs	r2, #83	; 0x53
    1000:	4904      	ldr	r1, [pc, #16]	; (1014 <usart_sync_enable+0x20>)
    1002:	4b05      	ldr	r3, [pc, #20]	; (1018 <usart_sync_enable+0x24>)
    1004:	4798      	blx	r3
	_usart_sync_enable(&descr->device);
    1006:	0020      	movs	r0, r4
    1008:	3008      	adds	r0, #8
    100a:	4b04      	ldr	r3, [pc, #16]	; (101c <usart_sync_enable+0x28>)
    100c:	4798      	blx	r3
}
    100e:	2000      	movs	r0, #0
    1010:	bd10      	pop	{r4, pc}
    1012:	46c0      	nop			; (mov r8, r8)
    1014:	00009d30 	.word	0x00009d30
    1018:	00001021 	.word	0x00001021
    101c:	000014c5 	.word	0x000014c5

00001020 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
    1020:	2800      	cmp	r0, #0
    1022:	d100      	bne.n	1026 <assert+0x6>
		__asm("BKPT #0");
    1024:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
    1026:	4770      	bx	lr

00001028 <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
    1028:	6803      	ldr	r3, [r0, #0]
    102a:	2b00      	cmp	r3, #0
    102c:	d00a      	beq.n	1044 <is_list_element+0x1c>
		if (it == element) {
    102e:	428b      	cmp	r3, r1
    1030:	d00a      	beq.n	1048 <is_list_element+0x20>
	for (it = list->head; it; it = it->next) {
    1032:	681b      	ldr	r3, [r3, #0]
    1034:	2b00      	cmp	r3, #0
    1036:	d003      	beq.n	1040 <is_list_element+0x18>
		if (it == element) {
    1038:	4299      	cmp	r1, r3
    103a:	d1fa      	bne.n	1032 <is_list_element+0xa>
			return true;
    103c:	2001      	movs	r0, #1
    103e:	e000      	b.n	1042 <is_list_element+0x1a>
		}
	}

	return false;
    1040:	2000      	movs	r0, #0
}
    1042:	4770      	bx	lr
	return false;
    1044:	2000      	movs	r0, #0
    1046:	e7fc      	b.n	1042 <is_list_element+0x1a>
			return true;
    1048:	2001      	movs	r0, #1
    104a:	e7fa      	b.n	1042 <is_list_element+0x1a>

0000104c <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
    104c:	b570      	push	{r4, r5, r6, lr}
    104e:	0004      	movs	r4, r0
    1050:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
    1052:	4b06      	ldr	r3, [pc, #24]	; (106c <list_insert_as_head+0x20>)
    1054:	4798      	blx	r3
    1056:	2301      	movs	r3, #1
    1058:	4058      	eors	r0, r3
    105a:	b2c0      	uxtb	r0, r0
    105c:	2239      	movs	r2, #57	; 0x39
    105e:	4904      	ldr	r1, [pc, #16]	; (1070 <list_insert_as_head+0x24>)
    1060:	4b04      	ldr	r3, [pc, #16]	; (1074 <list_insert_as_head+0x28>)
    1062:	4798      	blx	r3

	((struct list_element *)element)->next = list->head;
    1064:	6823      	ldr	r3, [r4, #0]
    1066:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
    1068:	6025      	str	r5, [r4, #0]
}
    106a:	bd70      	pop	{r4, r5, r6, pc}
    106c:	00001029 	.word	0x00001029
    1070:	00009d4c 	.word	0x00009d4c
    1074:	00001021 	.word	0x00001021

00001078 <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
    1078:	6803      	ldr	r3, [r0, #0]
    107a:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
    107c:	6001      	str	r1, [r0, #0]
}
    107e:	4770      	bx	lr

00001080 <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
    1080:	6803      	ldr	r3, [r0, #0]
    1082:	2b00      	cmp	r3, #0
    1084:	d001      	beq.n	108a <list_remove_head+0xa>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
    1086:	681a      	ldr	r2, [r3, #0]
    1088:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
	}

	return NULL;
}
    108a:	0018      	movs	r0, r3
    108c:	4770      	bx	lr
	...

00001090 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
    1090:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
    1092:	4a06      	ldr	r2, [pc, #24]	; (10ac <_sbrk+0x1c>)
    1094:	6812      	ldr	r2, [r2, #0]
    1096:	2a00      	cmp	r2, #0
    1098:	d004      	beq.n	10a4 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    109a:	4a04      	ldr	r2, [pc, #16]	; (10ac <_sbrk+0x1c>)
    109c:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    109e:	18c3      	adds	r3, r0, r3
    10a0:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
    10a2:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    10a4:	4902      	ldr	r1, [pc, #8]	; (10b0 <_sbrk+0x20>)
    10a6:	4a01      	ldr	r2, [pc, #4]	; (10ac <_sbrk+0x1c>)
    10a8:	6011      	str	r1, [r2, #0]
    10aa:	e7f6      	b.n	109a <_sbrk+0xa>
    10ac:	20000a44 	.word	0x20000a44
    10b0:	20002bb8 	.word	0x20002bb8

000010b4 <_close>:
 */
extern int _close(int file)
{
	(void)file;
	return -1;
}
    10b4:	2001      	movs	r0, #1
    10b6:	4240      	negs	r0, r0
    10b8:	4770      	bx	lr

000010ba <_fstat>:
 * \brief Replacement of C library of _fstat
 */
extern int _fstat(int file, struct stat *st)
{
	(void)file;
	st->st_mode = S_IFCHR;
    10ba:	2380      	movs	r3, #128	; 0x80
    10bc:	019b      	lsls	r3, r3, #6
    10be:	604b      	str	r3, [r1, #4]

	return 0;
}
    10c0:	2000      	movs	r0, #0
    10c2:	4770      	bx	lr

000010c4 <_isatty>:
 */
extern int _isatty(int file)
{
	(void)file;
	return 1;
}
    10c4:	2001      	movs	r0, #1
    10c6:	4770      	bx	lr

000010c8 <_lseek>:
 */
extern int _lseek(int file, int ptr, int dir)
{
	(void)file, (void)ptr, (void)dir;
	return 0;
}
    10c8:	2000      	movs	r0, #0
    10ca:	4770      	bx	lr

000010cc <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    10cc:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    10ce:	4a0a      	ldr	r2, [pc, #40]	; (10f8 <_init_chip+0x2c>)
    10d0:	6853      	ldr	r3, [r2, #4]
    10d2:	2104      	movs	r1, #4
    10d4:	430b      	orrs	r3, r1
    10d6:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_set_performance_level(2);
    10d8:	2002      	movs	r0, #2
    10da:	4b08      	ldr	r3, [pc, #32]	; (10fc <_init_chip+0x30>)
    10dc:	4798      	blx	r3

	_osc32kctrl_init_sources();
    10de:	4b08      	ldr	r3, [pc, #32]	; (1100 <_init_chip+0x34>)
    10e0:	4798      	blx	r3
	_oscctrl_init_sources();
    10e2:	4b08      	ldr	r3, [pc, #32]	; (1104 <_init_chip+0x38>)
    10e4:	4798      	blx	r3
	_mclk_init();
    10e6:	4b08      	ldr	r3, [pc, #32]	; (1108 <_init_chip+0x3c>)
    10e8:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_oscctrl_init_referenced_generators();
    10ea:	4b08      	ldr	r3, [pc, #32]	; (110c <_init_chip+0x40>)
    10ec:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    10ee:	201f      	movs	r0, #31
    10f0:	4b07      	ldr	r3, [pc, #28]	; (1110 <_init_chip+0x44>)
    10f2:	4798      	blx	r3
#endif

#if (CONF_PORT_EVCTRL_PORT_0 | CONF_PORT_EVCTRL_PORT_1 | CONF_PORT_EVCTRL_PORT_2 | CONF_PORT_EVCTRL_PORT_3)
	_port_event_init();
#endif
}
    10f4:	bd10      	pop	{r4, pc}
    10f6:	46c0      	nop			; (mov r8, r8)
    10f8:	41004000 	.word	0x41004000
    10fc:	000011b1 	.word	0x000011b1
    1100:	0000115d 	.word	0x0000115d
    1104:	00001175 	.word	0x00001175
    1108:	0000114d 	.word	0x0000114d
    110c:	000011ad 	.word	0x000011ad
    1110:	00001115 	.word	0x00001115

00001114 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    1114:	07c3      	lsls	r3, r0, #31
    1116:	d507      	bpl.n	1128 <_gclk_init_generators_by_fref+0x14>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    1118:	4a09      	ldr	r2, [pc, #36]	; (1140 <_gclk_init_generators_by_fref+0x2c>)
    111a:	4b0a      	ldr	r3, [pc, #40]	; (1144 <_gclk_init_generators_by_fref+0x30>)
    111c:	621a      	str	r2, [r3, #32]
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    111e:	0019      	movs	r1, r3
    1120:	227d      	movs	r2, #125	; 0x7d
    1122:	684b      	ldr	r3, [r1, #4]
    1124:	421a      	tst	r2, r3
    1126:	d1fc      	bne.n	1122 <_gclk_init_generators_by_fref+0xe>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SOURCE);
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
    1128:	0783      	lsls	r3, r0, #30
    112a:	d507      	bpl.n	113c <_gclk_init_generators_by_fref+0x28>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    112c:	4a06      	ldr	r2, [pc, #24]	; (1148 <_gclk_init_generators_by_fref+0x34>)
    112e:	4b05      	ldr	r3, [pc, #20]	; (1144 <_gclk_init_generators_by_fref+0x30>)
    1130:	625a      	str	r2, [r3, #36]	; 0x24
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    1132:	0019      	movs	r1, r3
    1134:	227d      	movs	r2, #125	; 0x7d
    1136:	684b      	ldr	r3, [r1, #4]
    1138:	421a      	tst	r2, r3
    113a:	d1fc      	bne.n	1136 <_gclk_init_generators_by_fref+0x22>
		        | (CONF_GCLK_GEN_4_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_4_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_4_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_4_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_4_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_4_SOURCE);
	}
#endif
}
    113c:	4770      	bx	lr
    113e:	46c0      	nop			; (mov r8, r8)
    1140:	00010105 	.word	0x00010105
    1144:	40001c00 	.word	0x40001c00
    1148:	00040105 	.word	0x00040105

0000114c <_mclk_init>:
	((Mclk *)hw)->BUPDIV.reg = data;
    114c:	4b02      	ldr	r3, [pc, #8]	; (1158 <_mclk_init+0xc>)
    114e:	2208      	movs	r2, #8
    1150:	719a      	strb	r2, [r3, #6]
	((Mclk *)hw)->CPUDIV.reg = data;
    1152:	3a07      	subs	r2, #7
    1154:	711a      	strb	r2, [r3, #4]
void _mclk_init(void)
{
	void *hw = (void *)MCLK;
	hri_mclk_write_BUPDIV_reg(hw, MCLK_BUPDIV_BUPDIV(CONF_MCLK_BUPDIV));
	hri_mclk_write_CPUDIV_reg(hw, MCLK_CPUDIV_CPUDIV(CONF_MCLK_CPUDIV));
}
    1156:	4770      	bx	lr
    1158:	40000800 	.word	0x40000800

0000115c <_osc32kctrl_init_sources>:
}

static inline hri_osc32kctrl_osculp32k_reg_t hri_osc32kctrl_read_OSCULP32K_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Osc32kctrl *)hw)->OSCULP32K.reg;
    115c:	4b04      	ldr	r3, [pc, #16]	; (1170 <_osc32kctrl_init_sources+0x14>)
    115e:	69da      	ldr	r2, [r3, #28]
	calib = hri_osc32kctrl_read_OSCULP32K_CALIB_bf(hw);
	hri_osc32kctrl_write_OSCULP32K_reg(hw,
#if CONF_OSC32K_CALIB_ENABLE == 1
	                                   OSC32KCTRL_OSCULP32K_CALIB(CONF_OSC32K_CALIB)
#else
	                                   OSC32KCTRL_OSCULP32K_CALIB(calib)
    1160:	21f8      	movs	r1, #248	; 0xf8
    1162:	0149      	lsls	r1, r1, #5
    1164:	400a      	ands	r2, r1
}

static inline void hri_osc32kctrl_write_OSCULP32K_reg(const void *const hw, hri_osc32kctrl_osculp32k_reg_t data)
{
	OSC32KCTRL_CRITICAL_SECTION_ENTER();
	((Osc32kctrl *)hw)->OSCULP32K.reg = data;
    1166:	61da      	str	r2, [r3, #28]
	((Osc32kctrl *)hw)->RTCCTRL.reg = data;
    1168:	2201      	movs	r2, #1
    116a:	741a      	strb	r2, [r3, #16]
#endif
#endif

	hri_osc32kctrl_write_RTCCTRL_reg(hw, OSC32KCTRL_RTCCTRL_RTCSEL(CONF_RTCCTRL));
	(void)calib;
}
    116c:	4770      	bx	lr
    116e:	46c0      	nop			; (mov r8, r8)
    1170:	40001400 	.word	0x40001400

00001174 <_oscctrl_init_sources>:
}

static inline void hri_oscctrl_write_OSC16MCTRL_reg(const void *const hw, hri_oscctrl_osc16mctrl_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC16MCTRL.reg = data;
    1174:	228e      	movs	r2, #142	; 0x8e
    1176:	4b0c      	ldr	r3, [pc, #48]	; (11a8 <_oscctrl_init_sources+0x34>)
    1178:	751a      	strb	r2, [r3, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
    117a:	0018      	movs	r0, r3
    117c:	2138      	movs	r1, #56	; 0x38
    117e:	3a8c      	subs	r2, #140	; 0x8c
    1180:	5c43      	ldrb	r3, [r0, r1]
    1182:	4213      	tst	r3, r2
    1184:	d1fc      	bne.n	1180 <_oscctrl_init_sources+0xc>
	return (((Oscctrl *)hw)->STATUS.reg & OSCCTRL_STATUS_OSC16MRDY) >> OSCCTRL_STATUS_OSC16MRDY_Pos;
    1186:	4908      	ldr	r1, [pc, #32]	; (11a8 <_oscctrl_init_sources+0x34>)
#endif
#endif

#if CONF_OSC16M_CONFIG == 1
#if CONF_OSC16M_ENABLE == 1
	while (!hri_oscctrl_get_STATUS_OSC16MRDY_bit(hw))
    1188:	2210      	movs	r2, #16
    118a:	68cb      	ldr	r3, [r1, #12]
    118c:	421a      	tst	r2, r3
    118e:	d0fc      	beq.n	118a <_oscctrl_init_sources+0x16>
	((Oscctrl *)hw)->OSC16MCTRL.reg |= OSCCTRL_OSC16MCTRL_ONDEMAND;
    1190:	4a05      	ldr	r2, [pc, #20]	; (11a8 <_oscctrl_init_sources+0x34>)
    1192:	7d13      	ldrb	r3, [r2, #20]
    1194:	2180      	movs	r1, #128	; 0x80
    1196:	430b      	orrs	r3, r1
    1198:	7513      	strb	r3, [r2, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
    119a:	0010      	movs	r0, r2
    119c:	3948      	subs	r1, #72	; 0x48
    119e:	220e      	movs	r2, #14
    11a0:	5c43      	ldrb	r3, [r0, r1]
    11a2:	4213      	tst	r3, r2
    11a4:	d1fc      	bne.n	11a0 <_oscctrl_init_sources+0x2c>
#if CONF_OSC16M_ONDEMAND == 1
	hri_oscctrl_set_OSC16MCTRL_ONDEMAND_bit(hw);
#endif
#endif
	(void)hw;
}
    11a6:	4770      	bx	lr
    11a8:	40001000 	.word	0x40001000

000011ac <_oscctrl_init_referenced_generators>:
#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_read_SYNCBUSY_reg(GCLK))
		;
#endif
	(void)hw, (void)tmp;
}
    11ac:	4770      	bx	lr
	...

000011b0 <_set_performance_level>:
}

static inline hri_pm_plcfg_reg_t hri_pm_get_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t mask)
{
	uint8_t tmp;
	tmp = ((Pm *)hw)->PLCFG.reg;
    11b0:	4b09      	ldr	r3, [pc, #36]	; (11d8 <_set_performance_level+0x28>)
    11b2:	789b      	ldrb	r3, [r3, #2]
/**
 * \brief Set performance level
 */
void _set_performance_level(const uint8_t level)
{
	if (hri_pm_get_PLCFG_PLSEL_bf(PM, PM_PLCFG_PLSEL_Msk) != level) {
    11b4:	2203      	movs	r2, #3
    11b6:	4013      	ands	r3, r2
    11b8:	4298      	cmp	r0, r3
    11ba:	d00b      	beq.n	11d4 <_set_performance_level+0x24>
	((Pm *)hw)->INTFLAG.reg = mask;
    11bc:	4a06      	ldr	r2, [pc, #24]	; (11d8 <_set_performance_level+0x28>)
    11be:	23ff      	movs	r3, #255	; 0xff
    11c0:	7193      	strb	r3, [r2, #6]

static inline void hri_pm_write_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t data)
{
	uint8_t tmp;
	PM_CRITICAL_SECTION_ENTER();
	tmp = ((Pm *)hw)->PLCFG.reg;
    11c2:	7893      	ldrb	r3, [r2, #2]
	tmp &= ~PM_PLCFG_PLSEL_Msk;
    11c4:	2103      	movs	r1, #3
    11c6:	438b      	bics	r3, r1
	tmp |= PM_PLCFG_PLSEL(data);
    11c8:	4008      	ands	r0, r1
    11ca:	4318      	orrs	r0, r3
	((Pm *)hw)->PLCFG.reg = tmp;
    11cc:	7090      	strb	r0, [r2, #2]
	return ((Pm *)hw)->INTFLAG.reg;
    11ce:	7993      	ldrb	r3, [r2, #6]
		hri_pm_clear_INTFLAG_reg(PM, 0xFF);
		hri_pm_write_PLCFG_PLSEL_bf(PM, level);
		while (!hri_pm_read_INTFLAG_reg(PM))
    11d0:	2b00      	cmp	r3, #0
    11d2:	d0fc      	beq.n	11ce <_set_performance_level+0x1e>
			;
	}
}
    11d4:	4770      	bx	lr
    11d6:	46c0      	nop			; (mov r8, r8)
    11d8:	40000400 	.word	0x40000400

000011dc <_timer_init>:

/**
 * \brief Initialize Timer
 */
int32_t _timer_init(struct _timer_device *const dev, void *const hw)
{
    11dc:	b570      	push	{r4, r5, r6, lr}
    11de:	0005      	movs	r5, r0
    11e0:	000c      	movs	r4, r1
	ASSERT(dev);
    11e2:	1e43      	subs	r3, r0, #1
    11e4:	4198      	sbcs	r0, r3
    11e6:	b2c0      	uxtb	r0, r0
    11e8:	2230      	movs	r2, #48	; 0x30
    11ea:	4912      	ldr	r1, [pc, #72]	; (1234 <_timer_init+0x58>)
    11ec:	4b12      	ldr	r3, [pc, #72]	; (1238 <_timer_init+0x5c>)
    11ee:	4798      	blx	r3

	dev->hw = hw;
    11f0:	60ec      	str	r4, [r5, #12]
}

static inline void hri_rtcmode0_write_CTRLA_reg(const void *const hw, hri_rtcmode0_ctrla_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.CTRLA.reg = data;
    11f2:	2301      	movs	r3, #1
    11f4:	8023      	strh	r3, [r4, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    11f6:	4a11      	ldr	r2, [pc, #68]	; (123c <_timer_init+0x60>)
    11f8:	6923      	ldr	r3, [r4, #16]
    11fa:	4213      	tst	r3, r2
    11fc:	d1fc      	bne.n	11f8 <_timer_init+0x1c>

	hri_rtcmode0_write_CTRLA_reg(dev->hw, RTC_MODE0_CTRLA_SWRST);
	hri_rtcmode0_wait_for_sync(dev->hw, RTC_MODE0_SYNCBUSY_SWRST);
    11fe:	68eb      	ldr	r3, [r5, #12]
    1200:	2101      	movs	r1, #1
    1202:	691a      	ldr	r2, [r3, #16]
    1204:	4211      	tst	r1, r2
    1206:	d1fc      	bne.n	1202 <_timer_init+0x26>
	((Rtc *)hw)->MODE0.CTRLA.reg = data;
    1208:	4a0d      	ldr	r2, [pc, #52]	; (1240 <_timer_init+0x64>)
    120a:	801a      	strh	r2, [r3, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    120c:	490b      	ldr	r1, [pc, #44]	; (123c <_timer_init+0x60>)
    120e:	691a      	ldr	r2, [r3, #16]
    1210:	420a      	tst	r2, r1
    1212:	d1fc      	bne.n	120e <_timer_init+0x32>
	        | (CONF_RTC_COMPE0 << RTC_MODE0_EVCTRL_CMPEO_Pos) | (CONF_RTC_OVFEO << RTC_MODE0_EVCTRL_OVFEO_Pos));
#endif

	hri_rtcmode0_write_CTRLA_reg(
	    dev->hw, RTC_MODE0_CTRLA_PRESCALER(CONF_RTC_PRESCALER) | RTC_MODE0_CTRLA_COUNTSYNC | RTC_MODE0_CTRLA_MATCHCLR);
	hri_rtcmode0_write_COMP_reg(dev->hw, 0, CONF_RTC_COMP_VAL);
    1214:	68ea      	ldr	r2, [r5, #12]
}

static inline void hri_rtcmode0_write_COMP_reg(const void *const hw, uint8_t index, hri_rtcmode0_comp_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.COMP[index].reg = data;
    1216:	2320      	movs	r3, #32
    1218:	6213      	str	r3, [r2, #32]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    121a:	2120      	movs	r1, #32
    121c:	6913      	ldr	r3, [r2, #16]
    121e:	4219      	tst	r1, r3
    1220:	d1fc      	bne.n	121c <_timer_init+0x40>
	((Rtc *)hw)->MODE0.INTENSET.reg = RTC_MODE0_INTENSET_CMP0;
    1222:	2380      	movs	r3, #128	; 0x80
    1224:	005b      	lsls	r3, r3, #1
    1226:	68ea      	ldr	r2, [r5, #12]
    1228:	8153      	strh	r3, [r2, #10]
	hri_rtcmode0_set_INTEN_CMP0_bit(dev->hw);

	_rtc_dev = dev;
    122a:	4b06      	ldr	r3, [pc, #24]	; (1244 <_timer_init+0x68>)
    122c:	601d      	str	r5, [r3, #0]

	return ERR_NONE;
}
    122e:	2000      	movs	r0, #0
    1230:	bd70      	pop	{r4, r5, r6, pc}
    1232:	46c0      	nop			; (mov r8, r8)
    1234:	00009d6c 	.word	0x00009d6c
    1238:	00001021 	.word	0x00001021
    123c:	00008003 	.word	0x00008003
    1240:	ffff8080 	.word	0xffff8080
    1244:	20000a48 	.word	0x20000a48

00001248 <_timer_start>:

/**
 * \brief Start hardware timer
 */
void _timer_start(struct _timer_device *const dev)
{
    1248:	b510      	push	{r4, lr}
    124a:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->hw);
    124c:	d01f      	beq.n	128e <_timer_start+0x46>
    124e:	68c0      	ldr	r0, [r0, #12]
    1250:	1e43      	subs	r3, r0, #1
    1252:	4198      	sbcs	r0, r3
    1254:	b2c0      	uxtb	r0, r0
    1256:	225c      	movs	r2, #92	; 0x5c
    1258:	490e      	ldr	r1, [pc, #56]	; (1294 <_timer_start+0x4c>)
    125a:	4b0f      	ldr	r3, [pc, #60]	; (1298 <_timer_start+0x50>)
    125c:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    125e:	2204      	movs	r2, #4
    1260:	4b0e      	ldr	r3, [pc, #56]	; (129c <_timer_start+0x54>)
    1262:	601a      	str	r2, [r3, #0]

	NVIC_EnableIRQ(RTC_IRQn);
	hri_rtcmode0_write_COUNT_reg(dev->hw, 0);
    1264:	68e2      	ldr	r2, [r4, #12]
	((Rtc *)hw)->MODE0.COUNT.reg = data;
    1266:	2300      	movs	r3, #0
    1268:	6193      	str	r3, [r2, #24]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    126a:	2108      	movs	r1, #8
    126c:	6913      	ldr	r3, [r2, #16]
    126e:	4219      	tst	r1, r3
    1270:	d1fc      	bne.n	126c <_timer_start+0x24>
	hri_rtcmode0_wait_for_sync(dev->hw, RTC_MODE0_SYNCBUSY_COUNT);
    1272:	68e3      	ldr	r3, [r4, #12]
    1274:	2108      	movs	r1, #8
    1276:	691a      	ldr	r2, [r3, #16]
    1278:	4211      	tst	r1, r2
    127a:	d1fc      	bne.n	1276 <_timer_start+0x2e>
	((Rtc *)hw)->MODE0.CTRLA.reg |= RTC_MODE0_CTRLA_ENABLE;
    127c:	881a      	ldrh	r2, [r3, #0]
    127e:	2102      	movs	r1, #2
    1280:	430a      	orrs	r2, r1
    1282:	801a      	strh	r2, [r3, #0]
	while (((Rtc *)hw)->MODE0.SYNCBUSY.reg & reg) {
    1284:	4906      	ldr	r1, [pc, #24]	; (12a0 <_timer_start+0x58>)
    1286:	691a      	ldr	r2, [r3, #16]
    1288:	420a      	tst	r2, r1
    128a:	d1fc      	bne.n	1286 <_timer_start+0x3e>
	hri_rtcmode0_set_CTRLA_ENABLE_bit(dev->hw);
}
    128c:	bd10      	pop	{r4, pc}
    128e:	2000      	movs	r0, #0
    1290:	e7e1      	b.n	1256 <_timer_start+0xe>
    1292:	46c0      	nop			; (mov r8, r8)
    1294:	00009d6c 	.word	0x00009d6c
    1298:	00001021 	.word	0x00001021
    129c:	e000e100 	.word	0xe000e100
    12a0:	00008003 	.word	0x00008003

000012a4 <_timer_is_started>:
/**
 * \brief Check if timer is running
 */
bool _timer_is_started(const struct _timer_device *const dev)
{
	return hri_rtcmode0_get_CTRLA_ENABLE_bit(dev->hw);
    12a4:	68c2      	ldr	r2, [r0, #12]
    12a6:	4904      	ldr	r1, [pc, #16]	; (12b8 <_timer_is_started+0x14>)
    12a8:	6913      	ldr	r3, [r2, #16]
    12aa:	420b      	tst	r3, r1
    12ac:	d1fc      	bne.n	12a8 <_timer_is_started+0x4>
	tmp = ((Rtc *)hw)->MODE0.CTRLA.reg;
    12ae:	8810      	ldrh	r0, [r2, #0]
	return (bool)tmp;
    12b0:	0780      	lsls	r0, r0, #30
    12b2:	0fc0      	lsrs	r0, r0, #31
}
    12b4:	4770      	bx	lr
    12b6:	46c0      	nop			; (mov r8, r8)
    12b8:	00008003 	.word	0x00008003

000012bc <_timer_set_irq>:
 * \brief Set timer IRQ
 */
void _timer_set_irq(struct _timer_device *const dev)
{
	(void)dev;
}
    12bc:	4770      	bx	lr

000012be <_rtc_get_timer>:
 * \brief Retrieve timer helper functions
 */
struct _timer_hpl_interface *_rtc_get_timer(void)
{
	return NULL;
}
    12be:	2000      	movs	r0, #0
    12c0:	4770      	bx	lr
	...

000012c4 <RTC_Handler>:

/**
 * \brief Rtc interrupt handler
 */
void RTC_Handler(void)
{
    12c4:	b510      	push	{r4, lr}
	_rtc_timer_interrupt_handler(_rtc_dev);
    12c6:	4b08      	ldr	r3, [pc, #32]	; (12e8 <RTC_Handler+0x24>)
    12c8:	681c      	ldr	r4, [r3, #0]
	return ((Rtc *)hw)->MODE0.INTFLAG.reg;
    12ca:	68e3      	ldr	r3, [r4, #12]
    12cc:	899b      	ldrh	r3, [r3, #12]
	if (flag & RTC_MODE0_INTFLAG_CMP0) {
    12ce:	05db      	lsls	r3, r3, #23
    12d0:	d508      	bpl.n	12e4 <RTC_Handler+0x20>
		if (dev->timer_cb.period_expired) {
    12d2:	6823      	ldr	r3, [r4, #0]
    12d4:	2b00      	cmp	r3, #0
    12d6:	d001      	beq.n	12dc <RTC_Handler+0x18>
			dev->timer_cb.period_expired(dev);
    12d8:	0020      	movs	r0, r4
    12da:	4798      	blx	r3
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
    12dc:	68e3      	ldr	r3, [r4, #12]
	((Rtc *)hw)->MODE0.INTFLAG.reg = RTC_MODE0_INTFLAG_CMP0;
    12de:	2280      	movs	r2, #128	; 0x80
    12e0:	0052      	lsls	r2, r2, #1
    12e2:	819a      	strh	r2, [r3, #12]
}
    12e4:	bd10      	pop	{r4, pc}
    12e6:	46c0      	nop			; (mov r8, r8)
    12e8:	20000a48 	.word	0x20000a48

000012ec <_get_i2cm_index>:
 * \param[in] hw The pointer to hardware instance

 * \return The ordinal number of the given sercom hardware instance
 */
static int8_t _get_i2cm_index(const void *const hw)
{
    12ec:	b510      	push	{r4, lr}
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    12ee:	4b09      	ldr	r3, [pc, #36]	; (1314 <_get_i2cm_index+0x28>)
    12f0:	469c      	mov	ip, r3
    12f2:	4460      	add	r0, ip
    12f4:	0a80      	lsrs	r0, r0, #10
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
	uint8_t i;

	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
		if (_i2cms[i].number == sercom_offset) {
    12f6:	b2c0      	uxtb	r0, r0
    12f8:	2801      	cmp	r0, #1
    12fa:	d008      	beq.n	130e <_get_i2cm_index+0x22>
			return i;
		}
	}

	ASSERT(false);
    12fc:	22e6      	movs	r2, #230	; 0xe6
    12fe:	0092      	lsls	r2, r2, #2
    1300:	4905      	ldr	r1, [pc, #20]	; (1318 <_get_i2cm_index+0x2c>)
    1302:	2000      	movs	r0, #0
    1304:	4b05      	ldr	r3, [pc, #20]	; (131c <_get_i2cm_index+0x30>)
    1306:	4798      	blx	r3
	return -1;
    1308:	2001      	movs	r0, #1
    130a:	4240      	negs	r0, r0
}
    130c:	bd10      	pop	{r4, pc}
			return i;
    130e:	2000      	movs	r0, #0
    1310:	e7fc      	b.n	130c <_get_i2cm_index+0x20>
    1312:	46c0      	nop			; (mov r8, r8)
    1314:	bdfffc00 	.word	0xbdfffc00
    1318:	00009d9c 	.word	0x00009d9c
    131c:	00001021 	.word	0x00001021

00001320 <_i2c_m_sync_init_impl>:
	}
	return ERR_NONE;
}

static int32_t _i2c_m_sync_init_impl(struct _i2c_m_service *const service, void *const hw)
{
    1320:	b570      	push	{r4, r5, r6, lr}
    1322:	0005      	movs	r5, r0
    1324:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
    1326:	0008      	movs	r0, r1
    1328:	4b31      	ldr	r3, [pc, #196]	; (13f0 <_i2c_m_sync_init_impl+0xd0>)
    132a:	4798      	blx	r3
    132c:	b2c0      	uxtb	r0, r0
	};
}

static inline bool hri_sercomi2cm_is_syncing(const void *const hw, hri_sercomi2cm_syncbusy_reg_t reg)
{
	return ((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg;
    132e:	69e3      	ldr	r3, [r4, #28]

	if (!hri_sercomi2cm_is_syncing(hw, SERCOM_I2CM_SYNCBUSY_SWRST)) {
    1330:	07db      	lsls	r3, r3, #31
    1332:	d421      	bmi.n	1378 <_i2c_m_sync_init_impl+0x58>
		uint32_t mode = _i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_MODE_Msk;
    1334:	0043      	lsls	r3, r0, #1
    1336:	181b      	adds	r3, r3, r0
    1338:	00db      	lsls	r3, r3, #3
    133a:	4a2e      	ldr	r2, [pc, #184]	; (13f4 <_i2c_m_sync_init_impl+0xd4>)
    133c:	18d3      	adds	r3, r2, r3
    133e:	6859      	ldr	r1, [r3, #4]
    1340:	231c      	movs	r3, #28
    1342:	4019      	ands	r1, r3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1344:	2203      	movs	r2, #3
    1346:	69e3      	ldr	r3, [r4, #28]
    1348:	421a      	tst	r2, r3
    134a:	d1fc      	bne.n	1346 <_i2c_m_sync_init_impl+0x26>
static inline hri_sercomi2cm_ctrla_reg_t hri_sercomi2cm_get_CTRLA_reg(const void *const          hw,
                                                                      hri_sercomi2cm_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SWRST | SERCOM_I2CM_SYNCBUSY_ENABLE);
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    134c:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
    134e:	079b      	lsls	r3, r3, #30
    1350:	d50b      	bpl.n	136a <_i2c_m_sync_init_impl+0x4a>
	((Sercom *)hw)->I2CM.CTRLA.reg &= ~SERCOM_I2CM_CTRLA_ENABLE;
    1352:	6823      	ldr	r3, [r4, #0]
    1354:	2202      	movs	r2, #2
    1356:	4393      	bics	r3, r2
    1358:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    135a:	3201      	adds	r2, #1
    135c:	69e3      	ldr	r3, [r4, #28]
    135e:	421a      	tst	r2, r3
    1360:	d1fc      	bne.n	135c <_i2c_m_sync_init_impl+0x3c>
    1362:	2202      	movs	r2, #2
    1364:	69e3      	ldr	r3, [r4, #28]
    1366:	421a      	tst	r2, r3
    1368:	d1fc      	bne.n	1364 <_i2c_m_sync_init_impl+0x44>
			hri_sercomi2cm_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_ENABLE);
		}
		hri_sercomi2cm_write_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_SWRST | mode);
    136a:	2301      	movs	r3, #1
    136c:	430b      	orrs	r3, r1
}

static inline void hri_sercomi2cm_write_CTRLA_reg(const void *const hw, hri_sercomi2cm_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    136e:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1370:	2203      	movs	r2, #3
    1372:	69e3      	ldr	r3, [r4, #28]
    1374:	421a      	tst	r2, r3
    1376:	d1fc      	bne.n	1372 <_i2c_m_sync_init_impl+0x52>
    1378:	2201      	movs	r2, #1
    137a:	69e3      	ldr	r3, [r4, #28]
    137c:	421a      	tst	r2, r3
    137e:	d1fc      	bne.n	137a <_i2c_m_sync_init_impl+0x5a>
	}
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SWRST);

	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a);
    1380:	0043      	lsls	r3, r0, #1
    1382:	181b      	adds	r3, r3, r0
    1384:	00db      	lsls	r3, r3, #3
    1386:	4a1b      	ldr	r2, [pc, #108]	; (13f4 <_i2c_m_sync_init_impl+0xd4>)
    1388:	18d3      	adds	r3, r2, r3
    138a:	6859      	ldr	r1, [r3, #4]
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    138c:	6021      	str	r1, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    138e:	2203      	movs	r2, #3
    1390:	69e3      	ldr	r3, [r4, #28]
    1392:	421a      	tst	r2, r3
    1394:	d1fc      	bne.n	1390 <_i2c_m_sync_init_impl+0x70>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
    1396:	0043      	lsls	r3, r0, #1
    1398:	181b      	adds	r3, r3, r0
    139a:	00db      	lsls	r3, r3, #3
    139c:	4a15      	ldr	r2, [pc, #84]	; (13f4 <_i2c_m_sync_init_impl+0xd4>)
    139e:	18d3      	adds	r3, r2, r3
    13a0:	689b      	ldr	r3, [r3, #8]
}

static inline void hri_sercomi2cm_write_CTRLB_reg(const void *const hw, hri_sercomi2cm_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
    13a2:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    13a4:	2204      	movs	r2, #4
    13a6:	69e3      	ldr	r3, [r4, #28]
    13a8:	421a      	tst	r2, r3
    13aa:	d1fc      	bne.n	13a6 <_i2c_m_sync_init_impl+0x86>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
    13ac:	0043      	lsls	r3, r0, #1
    13ae:	181b      	adds	r3, r3, r0
    13b0:	00db      	lsls	r3, r3, #3
    13b2:	4a10      	ldr	r2, [pc, #64]	; (13f4 <_i2c_m_sync_init_impl+0xd4>)
    13b4:	18d3      	adds	r3, r2, r3
    13b6:	68db      	ldr	r3, [r3, #12]
}

static inline void hri_sercomi2cm_write_BAUD_reg(const void *const hw, hri_sercomi2cm_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.BAUD.reg = data;
    13b8:	60e3      	str	r3, [r4, #12]

	service->mode = (_i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_SPEED_Msk) >> SERCOM_I2CM_CTRLA_SPEED_Pos;
    13ba:	0189      	lsls	r1, r1, #6
    13bc:	0f89      	lsrs	r1, r1, #30
    13be:	81a9      	strh	r1, [r5, #12]

static inline void hri_sercomi2cm_write_ADDR_HS_bit(const void *const hw, bool value)
{
	uint32_t tmp;
	SERCOM_CRITICAL_SECTION_ENTER();
	tmp = ((Sercom *)hw)->I2CM.ADDR.reg;
    13c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
	tmp &= ~SERCOM_I2CM_ADDR_HS;
    13c2:	4e0d      	ldr	r6, [pc, #52]	; (13f8 <_i2c_m_sync_init_impl+0xd8>)
    13c4:	401e      	ands	r6, r3
	hri_sercomi2cm_write_ADDR_HS_bit(hw, service->mode < I2C_HS ? 0 : 1);
    13c6:	2301      	movs	r3, #1
    13c8:	428b      	cmp	r3, r1
    13ca:	419b      	sbcs	r3, r3
    13cc:	425b      	negs	r3, r3
	tmp |= value << SERCOM_I2CM_ADDR_HS_Pos;
    13ce:	039b      	lsls	r3, r3, #14
    13d0:	4333      	orrs	r3, r6
	((Sercom *)hw)->I2CM.ADDR.reg = tmp;
    13d2:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    13d4:	2204      	movs	r2, #4
    13d6:	69e3      	ldr	r3, [r4, #28]
    13d8:	421a      	tst	r2, r3
    13da:	d1fc      	bne.n	13d6 <_i2c_m_sync_init_impl+0xb6>

	service->trise = _i2cms[i].trise;
    13dc:	0043      	lsls	r3, r0, #1
    13de:	1818      	adds	r0, r3, r0
    13e0:	00c0      	lsls	r0, r0, #3
    13e2:	4b04      	ldr	r3, [pc, #16]	; (13f4 <_i2c_m_sync_init_impl+0xd4>)
    13e4:	1818      	adds	r0, r3, r0
    13e6:	8a43      	ldrh	r3, [r0, #18]
    13e8:	81eb      	strh	r3, [r5, #14]

	return ERR_NONE;
}
    13ea:	2000      	movs	r0, #0
    13ec:	bd70      	pop	{r4, r5, r6, pc}
    13ee:	46c0      	nop			; (mov r8, r8)
    13f0:	000012ed 	.word	0x000012ed
    13f4:	00009d84 	.word	0x00009d84
    13f8:	ffffbfff 	.word	0xffffbfff

000013fc <_usart_init>:
{
    13fc:	b510      	push	{r4, lr}
    13fe:	0004      	movs	r4, r0
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    1400:	4b1f      	ldr	r3, [pc, #124]	; (1480 <_usart_init+0x84>)
    1402:	18c3      	adds	r3, r0, r3
    1404:	0a9b      	lsrs	r3, r3, #10
		if (_usarts[i].number == sercom_offset) {
    1406:	b2db      	uxtb	r3, r3
    1408:	2b00      	cmp	r3, #0
    140a:	d004      	beq.n	1416 <_usart_init+0x1a>
	ASSERT(false);
    140c:	4a1d      	ldr	r2, [pc, #116]	; (1484 <_usart_init+0x88>)
    140e:	491e      	ldr	r1, [pc, #120]	; (1488 <_usart_init+0x8c>)
    1410:	2000      	movs	r0, #0
    1412:	4b1e      	ldr	r3, [pc, #120]	; (148c <_usart_init+0x90>)
    1414:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
    1416:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
    1418:	07db      	lsls	r3, r3, #31
    141a:	d418      	bmi.n	144e <_usart_init+0x52>
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    141c:	2203      	movs	r2, #3
    141e:	69e3      	ldr	r3, [r4, #28]
    1420:	421a      	tst	r2, r3
    1422:	d1fc      	bne.n	141e <_usart_init+0x22>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    1424:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    1426:	079b      	lsls	r3, r3, #30
    1428:	d50b      	bpl.n	1442 <_usart_init+0x46>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    142a:	6823      	ldr	r3, [r4, #0]
    142c:	2202      	movs	r2, #2
    142e:	4393      	bics	r3, r2
    1430:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1432:	3201      	adds	r2, #1
    1434:	69e3      	ldr	r3, [r4, #28]
    1436:	421a      	tst	r2, r3
    1438:	d1fc      	bne.n	1434 <_usart_init+0x38>
    143a:	2202      	movs	r2, #2
    143c:	69e3      	ldr	r3, [r4, #28]
    143e:	421a      	tst	r2, r3
    1440:	d1fc      	bne.n	143c <_usart_init+0x40>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    1442:	2305      	movs	r3, #5
    1444:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1446:	2203      	movs	r2, #3
    1448:	69e3      	ldr	r3, [r4, #28]
    144a:	421a      	tst	r2, r3
    144c:	d1fc      	bne.n	1448 <_usart_init+0x4c>
    144e:	2201      	movs	r2, #1
    1450:	69e3      	ldr	r3, [r4, #28]
    1452:	421a      	tst	r2, r3
    1454:	d1fc      	bne.n	1450 <_usart_init+0x54>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    1456:	4b0e      	ldr	r3, [pc, #56]	; (1490 <_usart_init+0x94>)
    1458:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    145a:	2203      	movs	r2, #3
    145c:	69e3      	ldr	r3, [r4, #28]
    145e:	421a      	tst	r2, r3
    1460:	d1fc      	bne.n	145c <_usart_init+0x60>
	((Sercom *)hw)->USART.CTRLB.reg = data;
    1462:	23c0      	movs	r3, #192	; 0xc0
    1464:	029b      	lsls	r3, r3, #10
    1466:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1468:	2207      	movs	r2, #7
    146a:	69e3      	ldr	r3, [r4, #28]
    146c:	421a      	tst	r2, r3
    146e:	d1fc      	bne.n	146a <_usart_init+0x6e>
	((Sercom *)hw)->USART.BAUD.reg = data;
    1470:	4b08      	ldr	r3, [pc, #32]	; (1494 <_usart_init+0x98>)
    1472:	81a3      	strh	r3, [r4, #12]
	((Sercom *)hw)->USART.RXPL.reg = data;
    1474:	2300      	movs	r3, #0
    1476:	73a3      	strb	r3, [r4, #14]
}

static inline void hri_sercomusart_write_DBGCTRL_reg(const void *const hw, hri_sercomusart_dbgctrl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    1478:	2230      	movs	r2, #48	; 0x30
    147a:	54a3      	strb	r3, [r4, r2]
}
    147c:	2000      	movs	r0, #0
    147e:	bd10      	pop	{r4, pc}
    1480:	bdfffc00 	.word	0xbdfffc00
    1484:	0000023a 	.word	0x0000023a
    1488:	00009d9c 	.word	0x00009d9c
    148c:	00001021 	.word	0x00001021
    1490:	40310004 	.word	0x40310004
    1494:	ffffe282 	.word	0xffffe282

00001498 <_usart_sync_init>:
{
    1498:	b570      	push	{r4, r5, r6, lr}
    149a:	0005      	movs	r5, r0
    149c:	000c      	movs	r4, r1
	ASSERT(device);
    149e:	1e43      	subs	r3, r0, #1
    14a0:	4198      	sbcs	r0, r3
    14a2:	b2c0      	uxtb	r0, r0
    14a4:	22b4      	movs	r2, #180	; 0xb4
    14a6:	4904      	ldr	r1, [pc, #16]	; (14b8 <_usart_sync_init+0x20>)
    14a8:	4b04      	ldr	r3, [pc, #16]	; (14bc <_usart_sync_init+0x24>)
    14aa:	4798      	blx	r3
	device->hw = hw;
    14ac:	602c      	str	r4, [r5, #0]
	return _usart_init(hw);
    14ae:	0020      	movs	r0, r4
    14b0:	4b03      	ldr	r3, [pc, #12]	; (14c0 <_usart_sync_init+0x28>)
    14b2:	4798      	blx	r3
}
    14b4:	bd70      	pop	{r4, r5, r6, pc}
    14b6:	46c0      	nop			; (mov r8, r8)
    14b8:	00009d9c 	.word	0x00009d9c
    14bc:	00001021 	.word	0x00001021
    14c0:	000013fd 	.word	0x000013fd

000014c4 <_usart_sync_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    14c4:	6802      	ldr	r2, [r0, #0]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    14c6:	6813      	ldr	r3, [r2, #0]
    14c8:	2102      	movs	r1, #2
    14ca:	430b      	orrs	r3, r1
    14cc:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    14ce:	3101      	adds	r1, #1
    14d0:	69d3      	ldr	r3, [r2, #28]
    14d2:	4219      	tst	r1, r3
    14d4:	d1fc      	bne.n	14d0 <_usart_sync_enable+0xc>
}
    14d6:	4770      	bx	lr

000014d8 <_usart_sync_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    14d8:	6803      	ldr	r3, [r0, #0]
    14da:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    14dc:	8519      	strh	r1, [r3, #40]	; 0x28
}
    14de:	4770      	bx	lr

000014e0 <_usart_sync_read_byte>:
	return hri_sercomusart_read_DATA_reg(device->hw);
    14e0:	6803      	ldr	r3, [r0, #0]
	return ((Sercom *)hw)->USART.DATA.reg;
    14e2:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    14e4:	b2c0      	uxtb	r0, r0
}
    14e6:	4770      	bx	lr

000014e8 <_usart_sync_is_ready_to_send>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
    14e8:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    14ea:	7e18      	ldrb	r0, [r3, #24]
    14ec:	2301      	movs	r3, #1
    14ee:	4018      	ands	r0, r3
}
    14f0:	4770      	bx	lr

000014f2 <_usart_sync_is_transmit_done>:
	return hri_sercomusart_get_interrupt_TXC_bit(device->hw);
    14f2:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    14f4:	7e18      	ldrb	r0, [r3, #24]
    14f6:	0780      	lsls	r0, r0, #30
    14f8:	0fc0      	lsrs	r0, r0, #31
}
    14fa:	4770      	bx	lr

000014fc <_usart_sync_is_byte_received>:
	return hri_sercomusart_get_interrupt_RXC_bit(device->hw);
    14fc:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    14fe:	7e18      	ldrb	r0, [r3, #24]
    1500:	0740      	lsls	r0, r0, #29
    1502:	0fc0      	lsrs	r0, r0, #31
}
    1504:	4770      	bx	lr
	...

00001508 <_i2c_m_sync_init>:
{
    1508:	b570      	push	{r4, r5, r6, lr}
    150a:	0004      	movs	r4, r0
    150c:	000d      	movs	r5, r1
	ASSERT(i2c_dev);
    150e:	1e43      	subs	r3, r0, #1
    1510:	4198      	sbcs	r0, r3
    1512:	b2c0      	uxtb	r0, r0
    1514:	4a04      	ldr	r2, [pc, #16]	; (1528 <_i2c_m_sync_init+0x20>)
    1516:	4905      	ldr	r1, [pc, #20]	; (152c <_i2c_m_sync_init+0x24>)
    1518:	4b05      	ldr	r3, [pc, #20]	; (1530 <_i2c_m_sync_init+0x28>)
    151a:	4798      	blx	r3
	i2c_dev->hw = hw;
    151c:	6125      	str	r5, [r4, #16]
	return _i2c_m_sync_init_impl(&i2c_dev->service, hw);
    151e:	0029      	movs	r1, r5
    1520:	0020      	movs	r0, r4
    1522:	4b04      	ldr	r3, [pc, #16]	; (1534 <_i2c_m_sync_init+0x2c>)
    1524:	4798      	blx	r3
}
    1526:	bd70      	pop	{r4, r5, r6, pc}
    1528:	00000507 	.word	0x00000507
    152c:	00009d9c 	.word	0x00009d9c
    1530:	00001021 	.word	0x00001021
    1534:	00001321 	.word	0x00001321

00001538 <_i2c_m_sync_enable>:
{
    1538:	b570      	push	{r4, r5, r6, lr}
    153a:	0004      	movs	r4, r0
	ASSERT(i2c_dev);
    153c:	4d1a      	ldr	r5, [pc, #104]	; (15a8 <_i2c_m_sync_enable+0x70>)
    153e:	1e43      	subs	r3, r0, #1
    1540:	4198      	sbcs	r0, r3
    1542:	b2c0      	uxtb	r0, r0
    1544:	4a19      	ldr	r2, [pc, #100]	; (15ac <_i2c_m_sync_enable+0x74>)
    1546:	0029      	movs	r1, r5
    1548:	4e19      	ldr	r6, [pc, #100]	; (15b0 <_i2c_m_sync_enable+0x78>)
    154a:	47b0      	blx	r6
	return _i2c_m_enable_implementation(i2c_dev->hw);
    154c:	6924      	ldr	r4, [r4, #16]
	ASSERT(hw);
    154e:	0020      	movs	r0, r4
    1550:	1e43      	subs	r3, r0, #1
    1552:	4198      	sbcs	r0, r3
    1554:	b2c0      	uxtb	r0, r0
    1556:	4a17      	ldr	r2, [pc, #92]	; (15b4 <_i2c_m_sync_enable+0x7c>)
    1558:	0029      	movs	r1, r5
    155a:	47b0      	blx	r6
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    155c:	6823      	ldr	r3, [r4, #0]
    155e:	2202      	movs	r2, #2
    1560:	4313      	orrs	r3, r2
    1562:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1564:	3201      	adds	r2, #1
    1566:	69e3      	ldr	r3, [r4, #28]
    1568:	421a      	tst	r2, r3
    156a:	d1fc      	bne.n	1566 <_i2c_m_sync_enable+0x2e>
    156c:	2504      	movs	r5, #4
    156e:	2204      	movs	r2, #4
}

static inline hri_sercomi2cm_status_reg_t hri_sercomi2cm_read_STATUS_BUSSTATE_bf(const void *const hw)
{
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SYSOP);
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    1570:	2003      	movs	r0, #3
}

static inline void hri_sercomi2cm_clear_STATUS_reg(const void *const hw, hri_sercomi2cm_status_reg_t mask)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.STATUS.reg = mask;
    1572:	2610      	movs	r6, #16
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1574:	4910      	ldr	r1, [pc, #64]	; (15b8 <_i2c_m_sync_enable+0x80>)
    1576:	69e3      	ldr	r3, [r4, #28]
    1578:	421a      	tst	r2, r3
    157a:	d1fc      	bne.n	1576 <_i2c_m_sync_enable+0x3e>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    157c:	8b63      	ldrh	r3, [r4, #26]
    157e:	091b      	lsrs	r3, r3, #4
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
    1580:	4003      	ands	r3, r0
    1582:	2b01      	cmp	r3, #1
    1584:	d00a      	beq.n	159c <_i2c_m_sync_enable+0x64>
    1586:	3901      	subs	r1, #1
		if (timeout <= 0) {
    1588:	2900      	cmp	r1, #0
    158a:	d1f4      	bne.n	1576 <_i2c_m_sync_enable+0x3e>
    158c:	3d01      	subs	r5, #1
			if (--timeout_attempt)
    158e:	2d00      	cmp	r5, #0
    1590:	d006      	beq.n	15a0 <_i2c_m_sync_enable+0x68>
	((Sercom *)hw)->I2CM.STATUS.reg = mask;
    1592:	8366      	strh	r6, [r4, #26]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1594:	69e3      	ldr	r3, [r4, #28]
    1596:	421a      	tst	r2, r3
    1598:	d1fc      	bne.n	1594 <_i2c_m_sync_enable+0x5c>
    159a:	e7eb      	b.n	1574 <_i2c_m_sync_enable+0x3c>
	return ERR_NONE;
    159c:	2000      	movs	r0, #0
}
    159e:	bd70      	pop	{r4, r5, r6, pc}
				return I2C_ERR_BUSY;
    15a0:	2006      	movs	r0, #6
    15a2:	4240      	negs	r0, r0
	return _i2c_m_enable_implementation(i2c_dev->hw);
    15a4:	e7fb      	b.n	159e <_i2c_m_sync_enable+0x66>
    15a6:	46c0      	nop			; (mov r8, r8)
    15a8:	00009d9c 	.word	0x00009d9c
    15ac:	00000524 	.word	0x00000524
    15b0:	00001021 	.word	0x00001021
    15b4:	000005f4 	.word	0x000005f4
    15b8:	0000ffff 	.word	0x0000ffff

000015bc <_i2c_m_sync_transfer>:
{
    15bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    15be:	46de      	mov	lr, fp
    15c0:	4657      	mov	r7, sl
    15c2:	464e      	mov	r6, r9
    15c4:	4645      	mov	r5, r8
    15c6:	b5e0      	push	{r5, r6, r7, lr}
    15c8:	b083      	sub	sp, #12
    15ca:	0005      	movs	r5, r0
    15cc:	4688      	mov	r8, r1
	void *   hw = i2c_dev->hw;
    15ce:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    15d0:	0006      	movs	r6, r0
    15d2:	1e73      	subs	r3, r6, #1
    15d4:	419e      	sbcs	r6, r3
    15d6:	b2f3      	uxtb	r3, r6
    15d8:	9301      	str	r3, [sp, #4]
    15da:	4fb4      	ldr	r7, [pc, #720]	; (18ac <_i2c_m_sync_transfer+0x2f0>)
    15dc:	4ab4      	ldr	r2, [pc, #720]	; (18b0 <_i2c_m_sync_transfer+0x2f4>)
    15de:	0039      	movs	r1, r7
    15e0:	0018      	movs	r0, r3
    15e2:	4eb4      	ldr	r6, [pc, #720]	; (18b4 <_i2c_m_sync_transfer+0x2f8>)
    15e4:	47b0      	blx	r6
	ASSERT(i2c_dev->hw);
    15e6:	6928      	ldr	r0, [r5, #16]
    15e8:	1e43      	subs	r3, r0, #1
    15ea:	4198      	sbcs	r0, r3
    15ec:	b2c0      	uxtb	r0, r0
    15ee:	22b8      	movs	r2, #184	; 0xb8
    15f0:	00d2      	lsls	r2, r2, #3
    15f2:	0039      	movs	r1, r7
    15f4:	47b0      	blx	r6
	ASSERT(msg);
    15f6:	4640      	mov	r0, r8
    15f8:	1e43      	subs	r3, r0, #1
    15fa:	4198      	sbcs	r0, r3
    15fc:	b2c0      	uxtb	r0, r0
    15fe:	4aae      	ldr	r2, [pc, #696]	; (18b8 <_i2c_m_sync_transfer+0x2fc>)
    1600:	0039      	movs	r1, r7
    1602:	47b0      	blx	r6
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    1604:	886b      	ldrh	r3, [r5, #2]
    1606:	05db      	lsls	r3, r3, #23
    1608:	d500      	bpl.n	160c <_i2c_m_sync_transfer+0x50>
    160a:	e224      	b.n	1a56 <_i2c_m_sync_transfer+0x49a>
	msg->flags |= I2C_M_BUSY;
    160c:	4643      	mov	r3, r8
    160e:	885a      	ldrh	r2, [r3, #2]
    1610:	2380      	movs	r3, #128	; 0x80
    1612:	005b      	lsls	r3, r3, #1
    1614:	431a      	orrs	r2, r3
    1616:	4641      	mov	r1, r8
    1618:	804a      	strh	r2, [r1, #2]
	i2c_dev->service.msg = *msg;
    161a:	002a      	movs	r2, r5
    161c:	c9c1      	ldmia	r1!, {r0, r6, r7}
    161e:	c2c1      	stmia	r2!, {r0, r6, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
    1620:	6862      	ldr	r2, [r4, #4]
    1622:	4313      	orrs	r3, r2
    1624:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1626:	2204      	movs	r2, #4
    1628:	69e3      	ldr	r3, [r4, #28]
    162a:	421a      	tst	r2, r3
    162c:	d1fc      	bne.n	1628 <_i2c_m_sync_transfer+0x6c>
	void *             hw    = i2c_dev->hw;
    162e:	692f      	ldr	r7, [r5, #16]
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1630:	683b      	ldr	r3, [r7, #0]
    1632:	4699      	mov	r9, r3
	ASSERT(i2c_dev);
    1634:	4aa1      	ldr	r2, [pc, #644]	; (18bc <_i2c_m_sync_transfer+0x300>)
    1636:	499d      	ldr	r1, [pc, #628]	; (18ac <_i2c_m_sync_transfer+0x2f0>)
    1638:	9801      	ldr	r0, [sp, #4]
    163a:	4b9e      	ldr	r3, [pc, #632]	; (18b4 <_i2c_m_sync_transfer+0x2f8>)
    163c:	4798      	blx	r3
	if (msg->len == 1 && sclsm) {
    163e:	686b      	ldr	r3, [r5, #4]
    1640:	2b01      	cmp	r3, #1
    1642:	d05a      	beq.n	16fa <_i2c_m_sync_transfer+0x13e>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    1644:	687b      	ldr	r3, [r7, #4]
    1646:	4a9e      	ldr	r2, [pc, #632]	; (18c0 <_i2c_m_sync_transfer+0x304>)
    1648:	4013      	ands	r3, r2
    164a:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    164c:	2204      	movs	r2, #4
    164e:	69fb      	ldr	r3, [r7, #28]
    1650:	421a      	tst	r2, r3
    1652:	d1fc      	bne.n	164e <_i2c_m_sync_transfer+0x92>
	if (msg->addr & I2C_M_TEN) {
    1654:	882b      	ldrh	r3, [r5, #0]
    1656:	055a      	lsls	r2, r3, #21
    1658:	d55c      	bpl.n	1714 <_i2c_m_sync_transfer+0x158>
		if (msg->flags & I2C_M_RD) {
    165a:	886a      	ldrh	r2, [r5, #2]
    165c:	07d2      	lsls	r2, r2, #31
    165e:	d504      	bpl.n	166a <_i2c_m_sync_transfer+0xae>
			msg->flags |= I2C_M_TEN;
    1660:	886a      	ldrh	r2, [r5, #2]
    1662:	2180      	movs	r1, #128	; 0x80
    1664:	00c9      	lsls	r1, r1, #3
    1666:	430a      	orrs	r2, r1
    1668:	806a      	strh	r2, [r5, #2]
		                              ((msg->addr & TEN_ADDR_MASK) << 1) | SERCOM_I2CM_ADDR_TENBITEN
    166a:	005b      	lsls	r3, r3, #1
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    166c:	4995      	ldr	r1, [pc, #596]	; (18c4 <_i2c_m_sync_transfer+0x308>)
    166e:	4019      	ands	r1, r3
    1670:	2204      	movs	r2, #4
    1672:	69fb      	ldr	r3, [r7, #28]
    1674:	421a      	tst	r2, r3
    1676:	d1fc      	bne.n	1672 <_i2c_m_sync_transfer+0xb6>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    1678:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    167a:	2280      	movs	r2, #128	; 0x80
    167c:	01d2      	lsls	r2, r2, #7
    167e:	401a      	ands	r2, r3
		hri_sercomi2cm_write_ADDR_reg(hw,
    1680:	2380      	movs	r3, #128	; 0x80
    1682:	021b      	lsls	r3, r3, #8
    1684:	4313      	orrs	r3, r2
    1686:	4319      	orrs	r1, r3
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1688:	6279      	str	r1, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    168a:	2204      	movs	r2, #4
    168c:	69fb      	ldr	r3, [r7, #28]
    168e:	421a      	tst	r2, r3
    1690:	d1fc      	bne.n	168c <_i2c_m_sync_transfer+0xd0>
	void *   hw      = i2c_dev->hw;
    1692:	6929      	ldr	r1, [r5, #16]
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    1694:	7e0b      	ldrb	r3, [r1, #24]
    1696:	b2db      	uxtb	r3, r3
    1698:	4a8b      	ldr	r2, [pc, #556]	; (18c8 <_i2c_m_sync_transfer+0x30c>)
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    169a:	2003      	movs	r0, #3
    169c:	4218      	tst	r0, r3
    169e:	d104      	bne.n	16aa <_i2c_m_sync_transfer+0xee>
    16a0:	7e0b      	ldrb	r3, [r1, #24]
    16a2:	b2db      	uxtb	r3, r3
    16a4:	3a01      	subs	r2, #1
		if (timeout-- == 0) {
    16a6:	2a00      	cmp	r2, #0
    16a8:	d1f8      	bne.n	169c <_i2c_m_sync_transfer+0xe0>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    16aa:	683e      	ldr	r6, [r7, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    16ac:	2104      	movs	r1, #4
    16ae:	69fa      	ldr	r2, [r7, #28]
    16b0:	4211      	tst	r1, r2
    16b2:	d1fc      	bne.n	16ae <_i2c_m_sync_transfer+0xf2>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    16b4:	8b7a      	ldrh	r2, [r7, #26]
    16b6:	b292      	uxth	r2, r2
	if (flags & MB_FLAG) {
    16b8:	07d9      	lsls	r1, r3, #31
    16ba:	d400      	bmi.n	16be <_i2c_m_sync_transfer+0x102>
    16bc:	e0a0      	b.n	1800 <_i2c_m_sync_transfer+0x244>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    16be:	0793      	lsls	r3, r2, #30
    16c0:	d53e      	bpl.n	1740 <_i2c_m_sync_transfer+0x184>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    16c2:	2301      	movs	r3, #1
    16c4:	763b      	strb	r3, [r7, #24]
			msg->flags |= I2C_M_FAIL;
    16c6:	886b      	ldrh	r3, [r5, #2]
    16c8:	2180      	movs	r1, #128	; 0x80
    16ca:	0149      	lsls	r1, r1, #5
    16cc:	430b      	orrs	r3, r1
    16ce:	806b      	strh	r3, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    16d0:	886b      	ldrh	r3, [r5, #2]
    16d2:	497e      	ldr	r1, [pc, #504]	; (18cc <_i2c_m_sync_transfer+0x310>)
    16d4:	400b      	ands	r3, r1
    16d6:	806b      	strh	r3, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    16d8:	2001      	movs	r0, #1
    16da:	0003      	movs	r3, r0
    16dc:	4013      	ands	r3, r2
			return I2C_ERR_BAD_ADDRESS;
    16de:	4258      	negs	r0, r3
    16e0:	4158      	adcs	r0, r3
    16e2:	3805      	subs	r0, #5
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    16e4:	886b      	ldrh	r3, [r5, #2]
    16e6:	4a79      	ldr	r2, [pc, #484]	; (18cc <_i2c_m_sync_transfer+0x310>)
    16e8:	4013      	ands	r3, r2
    16ea:	806b      	strh	r3, [r5, #2]
}
    16ec:	b003      	add	sp, #12
    16ee:	bc3c      	pop	{r2, r3, r4, r5}
    16f0:	4690      	mov	r8, r2
    16f2:	4699      	mov	r9, r3
    16f4:	46a2      	mov	sl, r4
    16f6:	46ab      	mov	fp, r5
    16f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (msg->len == 1 && sclsm) {
    16fa:	464b      	mov	r3, r9
    16fc:	011b      	lsls	r3, r3, #4
    16fe:	d5a1      	bpl.n	1644 <_i2c_m_sync_transfer+0x88>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1700:	687a      	ldr	r2, [r7, #4]
    1702:	2380      	movs	r3, #128	; 0x80
    1704:	02db      	lsls	r3, r3, #11
    1706:	4313      	orrs	r3, r2
    1708:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    170a:	2204      	movs	r2, #4
    170c:	69fb      	ldr	r3, [r7, #28]
    170e:	421a      	tst	r2, r3
    1710:	d1fc      	bne.n	170c <_i2c_m_sync_transfer+0x150>
    1712:	e79f      	b.n	1654 <_i2c_m_sync_transfer+0x98>
		                              ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0)
    1714:	886a      	ldrh	r2, [r5, #2]
    1716:	005b      	lsls	r3, r3, #1
    1718:	21ff      	movs	r1, #255	; 0xff
    171a:	400b      	ands	r3, r1
    171c:	39fe      	subs	r1, #254	; 0xfe
    171e:	4011      	ands	r1, r2
    1720:	4319      	orrs	r1, r3
    1722:	2204      	movs	r2, #4
    1724:	69fb      	ldr	r3, [r7, #28]
    1726:	421a      	tst	r2, r3
    1728:	d1fc      	bne.n	1724 <_i2c_m_sync_transfer+0x168>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    172a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    172c:	2280      	movs	r2, #128	; 0x80
    172e:	01d2      	lsls	r2, r2, #7
    1730:	4013      	ands	r3, r2
		hri_sercomi2cm_write_ADDR_reg(hw,
    1732:	430b      	orrs	r3, r1
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1734:	627b      	str	r3, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1736:	2204      	movs	r2, #4
    1738:	69fb      	ldr	r3, [r7, #28]
    173a:	421a      	tst	r2, r3
    173c:	d1fc      	bne.n	1738 <_i2c_m_sync_transfer+0x17c>
    173e:	e7a8      	b.n	1692 <_i2c_m_sync_transfer+0xd6>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    1740:	0753      	lsls	r3, r2, #29
    1742:	d41b      	bmi.n	177c <_i2c_m_sync_transfer+0x1c0>
			if (msg->flags & I2C_M_TEN) {
    1744:	886b      	ldrh	r3, [r5, #2]
    1746:	055b      	lsls	r3, r3, #21
    1748:	d535      	bpl.n	17b6 <_i2c_m_sync_transfer+0x1fa>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
    174a:	882b      	ldrh	r3, [r5, #0]
    174c:	09db      	lsrs	r3, r3, #7
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    174e:	2106      	movs	r1, #6
    1750:	4019      	ands	r1, r3
    1752:	2204      	movs	r2, #4
    1754:	69fb      	ldr	r3, [r7, #28]
    1756:	421a      	tst	r2, r3
    1758:	d1fc      	bne.n	1754 <_i2c_m_sync_transfer+0x198>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    175a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    175c:	2280      	movs	r2, #128	; 0x80
    175e:	01d2      	lsls	r2, r2, #7
    1760:	4013      	ands	r3, r2
				hri_sercomi2cm_write_ADDR_reg(hw,
    1762:	22f1      	movs	r2, #241	; 0xf1
    1764:	4313      	orrs	r3, r2
    1766:	430b      	orrs	r3, r1
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1768:	627b      	str	r3, [r7, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    176a:	3aed      	subs	r2, #237	; 0xed
    176c:	69fb      	ldr	r3, [r7, #28]
    176e:	421a      	tst	r2, r3
    1770:	d1fc      	bne.n	176c <_i2c_m_sync_transfer+0x1b0>
				msg->flags &= ~I2C_M_TEN;
    1772:	886b      	ldrh	r3, [r5, #2]
    1774:	4a56      	ldr	r2, [pc, #344]	; (18d0 <_i2c_m_sync_transfer+0x314>)
    1776:	4013      	ands	r3, r2
    1778:	806b      	strh	r3, [r5, #2]
    177a:	e066      	b.n	184a <_i2c_m_sync_transfer+0x28e>
				if (msg->len > 0) {
    177c:	686b      	ldr	r3, [r5, #4]
    177e:	2b00      	cmp	r3, #0
    1780:	dd04      	ble.n	178c <_i2c_m_sync_transfer+0x1d0>
					msg->flags |= I2C_M_FAIL;
    1782:	886b      	ldrh	r3, [r5, #2]
    1784:	2280      	movs	r2, #128	; 0x80
    1786:	0152      	lsls	r2, r2, #5
    1788:	4313      	orrs	r3, r2
    178a:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    178c:	886b      	ldrh	r3, [r5, #2]
    178e:	b21b      	sxth	r3, r3
    1790:	2b00      	cmp	r3, #0
    1792:	db06      	blt.n	17a2 <_i2c_m_sync_transfer+0x1e6>
				msg->flags &= ~I2C_M_BUSY;
    1794:	886b      	ldrh	r3, [r5, #2]
    1796:	4a4d      	ldr	r2, [pc, #308]	; (18cc <_i2c_m_sync_transfer+0x310>)
    1798:	4013      	ands	r3, r2
    179a:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    179c:	2002      	movs	r0, #2
    179e:	4240      	negs	r0, r0
    17a0:	e7a0      	b.n	16e4 <_i2c_m_sync_transfer+0x128>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    17a2:	687a      	ldr	r2, [r7, #4]
    17a4:	23c0      	movs	r3, #192	; 0xc0
    17a6:	029b      	lsls	r3, r3, #10
    17a8:	4313      	orrs	r3, r2
    17aa:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    17ac:	2304      	movs	r3, #4
    17ae:	69fa      	ldr	r2, [r7, #28]
    17b0:	4213      	tst	r3, r2
    17b2:	d1fc      	bne.n	17ae <_i2c_m_sync_transfer+0x1f2>
    17b4:	e7ee      	b.n	1794 <_i2c_m_sync_transfer+0x1d8>
			if (msg->len == 0) {
    17b6:	686b      	ldr	r3, [r5, #4]
    17b8:	2b00      	cmp	r3, #0
    17ba:	d112      	bne.n	17e2 <_i2c_m_sync_transfer+0x226>
				if (msg->flags & I2C_M_STOP) {
    17bc:	886b      	ldrh	r3, [r5, #2]
    17be:	b21b      	sxth	r3, r3
    17c0:	2b00      	cmp	r3, #0
    17c2:	db04      	blt.n	17ce <_i2c_m_sync_transfer+0x212>
				msg->flags &= ~I2C_M_BUSY;
    17c4:	886b      	ldrh	r3, [r5, #2]
    17c6:	4a41      	ldr	r2, [pc, #260]	; (18cc <_i2c_m_sync_transfer+0x310>)
    17c8:	4013      	ands	r3, r2
    17ca:	806b      	strh	r3, [r5, #2]
    17cc:	e03d      	b.n	184a <_i2c_m_sync_transfer+0x28e>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    17ce:	687a      	ldr	r2, [r7, #4]
    17d0:	23c0      	movs	r3, #192	; 0xc0
    17d2:	029b      	lsls	r3, r3, #10
    17d4:	4313      	orrs	r3, r2
    17d6:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    17d8:	2204      	movs	r2, #4
    17da:	69fb      	ldr	r3, [r7, #28]
    17dc:	421a      	tst	r2, r3
    17de:	d1fc      	bne.n	17da <_i2c_m_sync_transfer+0x21e>
    17e0:	e7f0      	b.n	17c4 <_i2c_m_sync_transfer+0x208>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    17e2:	68ab      	ldr	r3, [r5, #8]
    17e4:	781a      	ldrb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    17e6:	2328      	movs	r3, #40	; 0x28
    17e8:	54fa      	strb	r2, [r7, r3]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    17ea:	2204      	movs	r2, #4
    17ec:	69fb      	ldr	r3, [r7, #28]
    17ee:	421a      	tst	r2, r3
    17f0:	d1fc      	bne.n	17ec <_i2c_m_sync_transfer+0x230>
				msg->buffer++;
    17f2:	68ab      	ldr	r3, [r5, #8]
    17f4:	3301      	adds	r3, #1
    17f6:	60ab      	str	r3, [r5, #8]
				msg->len--;
    17f8:	686b      	ldr	r3, [r5, #4]
    17fa:	3b01      	subs	r3, #1
    17fc:	606b      	str	r3, [r5, #4]
    17fe:	e024      	b.n	184a <_i2c_m_sync_transfer+0x28e>
	} else if (flags & SB_FLAG) {
    1800:	079b      	lsls	r3, r3, #30
    1802:	d522      	bpl.n	184a <_i2c_m_sync_transfer+0x28e>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    1804:	686b      	ldr	r3, [r5, #4]
    1806:	2b00      	cmp	r3, #0
    1808:	d040      	beq.n	188c <_i2c_m_sync_transfer+0x2d0>
    180a:	0752      	lsls	r2, r2, #29
    180c:	d43e      	bmi.n	188c <_i2c_m_sync_transfer+0x2d0>
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
    180e:	0136      	lsls	r6, r6, #4
    1810:	0ff6      	lsrs	r6, r6, #31
			msg->len--;
    1812:	3b01      	subs	r3, #1
    1814:	606b      	str	r3, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1816:	2b00      	cmp	r3, #0
    1818:	d000      	beq.n	181c <_i2c_m_sync_transfer+0x260>
    181a:	e11f      	b.n	1a5c <_i2c_m_sync_transfer+0x4a0>
    181c:	2e00      	cmp	r6, #0
    181e:	d100      	bne.n	1822 <_i2c_m_sync_transfer+0x266>
    1820:	e122      	b.n	1a68 <_i2c_m_sync_transfer+0x4ac>
				if (msg->flags & I2C_M_STOP) {
    1822:	886b      	ldrh	r3, [r5, #2]
    1824:	b21b      	sxth	r3, r3
    1826:	2b00      	cmp	r3, #0
    1828:	db1d      	blt.n	1866 <_i2c_m_sync_transfer+0x2aa>
				msg->flags &= ~I2C_M_BUSY;
    182a:	886b      	ldrh	r3, [r5, #2]
    182c:	4a27      	ldr	r2, [pc, #156]	; (18cc <_i2c_m_sync_transfer+0x310>)
    182e:	4013      	ands	r3, r2
    1830:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    1832:	68a9      	ldr	r1, [r5, #8]
    1834:	1c4b      	adds	r3, r1, #1
    1836:	60ab      	str	r3, [r5, #8]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1838:	2204      	movs	r2, #4
    183a:	69fb      	ldr	r3, [r7, #28]
    183c:	421a      	tst	r2, r3
    183e:	d1fc      	bne.n	183a <_i2c_m_sync_transfer+0x27e>
	return ((Sercom *)hw)->I2CM.DATA.reg;
    1840:	2328      	movs	r3, #40	; 0x28
    1842:	5cfb      	ldrb	r3, [r7, r3]
    1844:	700b      	strb	r3, [r1, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1846:	2302      	movs	r3, #2
    1848:	763b      	strb	r3, [r7, #24]
			return I2C_NACK;
    184a:	2600      	movs	r6, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    184c:	2380      	movs	r3, #128	; 0x80
    184e:	005b      	lsls	r3, r3, #1
    1850:	469a      	mov	sl, r3
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    1852:	2103      	movs	r1, #3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1854:	2204      	movs	r2, #4
	if (flags & MB_FLAG) {
    1856:	3bff      	subs	r3, #255	; 0xff
    1858:	469c      	mov	ip, r3
	} else if (flags & SB_FLAG) {
    185a:	3301      	adds	r3, #1
    185c:	4699      	mov	r9, r3
	return ((Sercom *)hw)->I2CM.DATA.reg;
    185e:	3326      	adds	r3, #38	; 0x26
    1860:	469b      	mov	fp, r3
    1862:	9601      	str	r6, [sp, #4]
    1864:	e0c2      	b.n	19ec <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    1866:	687b      	ldr	r3, [r7, #4]
    1868:	4a18      	ldr	r2, [pc, #96]	; (18cc <_i2c_m_sync_transfer+0x310>)
    186a:	4013      	ands	r3, r2
    186c:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    186e:	3206      	adds	r2, #6
    1870:	32ff      	adds	r2, #255	; 0xff
    1872:	69fb      	ldr	r3, [r7, #28]
    1874:	421a      	tst	r2, r3
    1876:	d1fc      	bne.n	1872 <_i2c_m_sync_transfer+0x2b6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1878:	687a      	ldr	r2, [r7, #4]
    187a:	23c0      	movs	r3, #192	; 0xc0
    187c:	029b      	lsls	r3, r3, #10
    187e:	4313      	orrs	r3, r2
    1880:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1882:	2204      	movs	r2, #4
    1884:	69fb      	ldr	r3, [r7, #28]
    1886:	421a      	tst	r2, r3
    1888:	d1fc      	bne.n	1884 <_i2c_m_sync_transfer+0x2c8>
    188a:	e7ce      	b.n	182a <_i2c_m_sync_transfer+0x26e>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    188c:	2302      	movs	r3, #2
    188e:	763b      	strb	r3, [r7, #24]
			return I2C_NACK;
    1890:	2002      	movs	r0, #2
    1892:	4240      	negs	r0, r0
    1894:	e726      	b.n	16e4 <_i2c_m_sync_transfer+0x128>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1896:	6862      	ldr	r2, [r4, #4]
    1898:	23c0      	movs	r3, #192	; 0xc0
    189a:	029b      	lsls	r3, r3, #10
    189c:	4313      	orrs	r3, r2
    189e:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    18a0:	2204      	movs	r2, #4
    18a2:	69e3      	ldr	r3, [r4, #28]
    18a4:	421a      	tst	r2, r3
    18a6:	d1fc      	bne.n	18a2 <_i2c_m_sync_transfer+0x2e6>
    18a8:	e0b5      	b.n	1a16 <_i2c_m_sync_transfer+0x45a>
    18aa:	46c0      	nop			; (mov r8, r8)
    18ac:	00009d9c 	.word	0x00009d9c
    18b0:	000005bf 	.word	0x000005bf
    18b4:	00001021 	.word	0x00001021
    18b8:	000005c1 	.word	0x000005c1
    18bc:	00000594 	.word	0x00000594
    18c0:	fffbffff 	.word	0xfffbffff
    18c4:	000007fe 	.word	0x000007fe
    18c8:	0000ffff 	.word	0x0000ffff
    18cc:	fffffeff 	.word	0xfffffeff
    18d0:	fffffbff 	.word	0xfffffbff
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    18d4:	4202      	tst	r2, r0
    18d6:	d11b      	bne.n	1910 <_i2c_m_sync_transfer+0x354>
			if (msg->flags & I2C_M_TEN) {
    18d8:	886b      	ldrh	r3, [r5, #2]
    18da:	055b      	lsls	r3, r3, #21
    18dc:	d535      	bpl.n	194a <_i2c_m_sync_transfer+0x38e>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
    18de:	882b      	ldrh	r3, [r5, #0]
    18e0:	09db      	lsrs	r3, r3, #7
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    18e2:	2006      	movs	r0, #6
    18e4:	4018      	ands	r0, r3
    18e6:	69e3      	ldr	r3, [r4, #28]
    18e8:	421a      	tst	r2, r3
    18ea:	d1fc      	bne.n	18e6 <_i2c_m_sync_transfer+0x32a>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    18ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
    18ee:	2680      	movs	r6, #128	; 0x80
    18f0:	01f6      	lsls	r6, r6, #7
    18f2:	4033      	ands	r3, r6
				hri_sercomi2cm_write_ADDR_reg(hw,
    18f4:	26f1      	movs	r6, #241	; 0xf1
    18f6:	4333      	orrs	r3, r6
    18f8:	4303      	orrs	r3, r0
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    18fa:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    18fc:	69e3      	ldr	r3, [r4, #28]
    18fe:	421a      	tst	r2, r3
    1900:	d1fc      	bne.n	18fc <_i2c_m_sync_transfer+0x340>
				msg->flags &= ~I2C_M_TEN;
    1902:	886b      	ldrh	r3, [r5, #2]
    1904:	4878      	ldr	r0, [pc, #480]	; (1ae8 <_i2c_m_sync_transfer+0x52c>)
    1906:	4003      	ands	r3, r0
    1908:	806b      	strh	r3, [r5, #2]
				return I2C_OK;
    190a:	2300      	movs	r3, #0
    190c:	9301      	str	r3, [sp, #4]
    190e:	e06d      	b.n	19ec <_i2c_m_sync_transfer+0x430>
				if (msg->len > 0) {
    1910:	686b      	ldr	r3, [r5, #4]
    1912:	2b00      	cmp	r3, #0
    1914:	dd04      	ble.n	1920 <_i2c_m_sync_transfer+0x364>
					msg->flags |= I2C_M_FAIL;
    1916:	886b      	ldrh	r3, [r5, #2]
    1918:	2080      	movs	r0, #128	; 0x80
    191a:	0140      	lsls	r0, r0, #5
    191c:	4303      	orrs	r3, r0
    191e:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    1920:	886b      	ldrh	r3, [r5, #2]
    1922:	b21b      	sxth	r3, r3
    1924:	2b00      	cmp	r3, #0
    1926:	db07      	blt.n	1938 <_i2c_m_sync_transfer+0x37c>
				msg->flags &= ~I2C_M_BUSY;
    1928:	886b      	ldrh	r3, [r5, #2]
    192a:	4870      	ldr	r0, [pc, #448]	; (1aec <_i2c_m_sync_transfer+0x530>)
    192c:	4003      	ands	r3, r0
    192e:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    1930:	2302      	movs	r3, #2
    1932:	425b      	negs	r3, r3
    1934:	9301      	str	r3, [sp, #4]
    1936:	e059      	b.n	19ec <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1938:	6860      	ldr	r0, [r4, #4]
    193a:	23c0      	movs	r3, #192	; 0xc0
    193c:	029b      	lsls	r3, r3, #10
    193e:	4303      	orrs	r3, r0
    1940:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1942:	69e3      	ldr	r3, [r4, #28]
    1944:	421a      	tst	r2, r3
    1946:	d1fc      	bne.n	1942 <_i2c_m_sync_transfer+0x386>
    1948:	e7ee      	b.n	1928 <_i2c_m_sync_transfer+0x36c>
			if (msg->len == 0) {
    194a:	686b      	ldr	r3, [r5, #4]
    194c:	2b00      	cmp	r3, #0
    194e:	d113      	bne.n	1978 <_i2c_m_sync_transfer+0x3bc>
				if (msg->flags & I2C_M_STOP) {
    1950:	886b      	ldrh	r3, [r5, #2]
    1952:	b21b      	sxth	r3, r3
    1954:	2b00      	cmp	r3, #0
    1956:	db06      	blt.n	1966 <_i2c_m_sync_transfer+0x3aa>
				msg->flags &= ~I2C_M_BUSY;
    1958:	886b      	ldrh	r3, [r5, #2]
    195a:	4864      	ldr	r0, [pc, #400]	; (1aec <_i2c_m_sync_transfer+0x530>)
    195c:	4003      	ands	r3, r0
    195e:	806b      	strh	r3, [r5, #2]
			return I2C_OK;
    1960:	2300      	movs	r3, #0
    1962:	9301      	str	r3, [sp, #4]
    1964:	e042      	b.n	19ec <_i2c_m_sync_transfer+0x430>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1966:	6860      	ldr	r0, [r4, #4]
    1968:	23c0      	movs	r3, #192	; 0xc0
    196a:	029b      	lsls	r3, r3, #10
    196c:	4303      	orrs	r3, r0
    196e:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1970:	69e3      	ldr	r3, [r4, #28]
    1972:	421a      	tst	r2, r3
    1974:	d1fc      	bne.n	1970 <_i2c_m_sync_transfer+0x3b4>
    1976:	e7ef      	b.n	1958 <_i2c_m_sync_transfer+0x39c>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    1978:	68ab      	ldr	r3, [r5, #8]
    197a:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    197c:	4658      	mov	r0, fp
    197e:	5423      	strb	r3, [r4, r0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1980:	69e3      	ldr	r3, [r4, #28]
    1982:	421a      	tst	r2, r3
    1984:	d1fc      	bne.n	1980 <_i2c_m_sync_transfer+0x3c4>
				msg->buffer++;
    1986:	68ab      	ldr	r3, [r5, #8]
    1988:	3301      	adds	r3, #1
    198a:	60ab      	str	r3, [r5, #8]
				msg->len--;
    198c:	686b      	ldr	r3, [r5, #4]
    198e:	3b01      	subs	r3, #1
    1990:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    1992:	2300      	movs	r3, #0
    1994:	9301      	str	r3, [sp, #4]
    1996:	e029      	b.n	19ec <_i2c_m_sync_transfer+0x430>
	return I2C_OK;
    1998:	2600      	movs	r6, #0
    199a:	9601      	str	r6, [sp, #4]
	} else if (flags & SB_FLAG) {
    199c:	464e      	mov	r6, r9
    199e:	421e      	tst	r6, r3
    19a0:	d024      	beq.n	19ec <_i2c_m_sync_transfer+0x430>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    19a2:	686b      	ldr	r3, [r5, #4]
    19a4:	2b00      	cmp	r3, #0
    19a6:	d04d      	beq.n	1a44 <_i2c_m_sync_transfer+0x488>
    19a8:	4202      	tst	r2, r0
    19aa:	d14b      	bne.n	1a44 <_i2c_m_sync_transfer+0x488>
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
    19ac:	0eff      	lsrs	r7, r7, #27
    19ae:	4660      	mov	r0, ip
    19b0:	4007      	ands	r7, r0
			msg->len--;
    19b2:	3b01      	subs	r3, #1
    19b4:	606b      	str	r3, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    19b6:	2b00      	cmp	r3, #0
    19b8:	d000      	beq.n	19bc <_i2c_m_sync_transfer+0x400>
    19ba:	e082      	b.n	1ac2 <_i2c_m_sync_transfer+0x506>
    19bc:	2f00      	cmp	r7, #0
    19be:	d100      	bne.n	19c2 <_i2c_m_sync_transfer+0x406>
    19c0:	e085      	b.n	1ace <_i2c_m_sync_transfer+0x512>
				if (msg->flags & I2C_M_STOP) {
    19c2:	886b      	ldrh	r3, [r5, #2]
    19c4:	b21b      	sxth	r3, r3
    19c6:	2b00      	cmp	r3, #0
    19c8:	db2c      	blt.n	1a24 <_i2c_m_sync_transfer+0x468>
				msg->flags &= ~I2C_M_BUSY;
    19ca:	886b      	ldrh	r3, [r5, #2]
    19cc:	4847      	ldr	r0, [pc, #284]	; (1aec <_i2c_m_sync_transfer+0x530>)
    19ce:	4003      	ands	r3, r0
    19d0:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    19d2:	68a8      	ldr	r0, [r5, #8]
    19d4:	1c43      	adds	r3, r0, #1
    19d6:	60ab      	str	r3, [r5, #8]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    19d8:	69e3      	ldr	r3, [r4, #28]
    19da:	421a      	tst	r2, r3
    19dc:	d1fc      	bne.n	19d8 <_i2c_m_sync_transfer+0x41c>
	return ((Sercom *)hw)->I2CM.DATA.reg;
    19de:	465b      	mov	r3, fp
    19e0:	5ce3      	ldrb	r3, [r4, r3]
    19e2:	7003      	strb	r3, [r0, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    19e4:	464b      	mov	r3, r9
    19e6:	7623      	strb	r3, [r4, #24]
	return I2C_OK;
    19e8:	2300      	movs	r3, #0
    19ea:	9301      	str	r3, [sp, #4]
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    19ec:	886b      	ldrh	r3, [r5, #2]
    19ee:	4650      	mov	r0, sl
    19f0:	4203      	tst	r3, r0
    19f2:	d02d      	beq.n	1a50 <_i2c_m_sync_transfer+0x494>
	void *   hw      = i2c_dev->hw;
    19f4:	692e      	ldr	r6, [r5, #16]
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    19f6:	7e33      	ldrb	r3, [r6, #24]
    19f8:	b2db      	uxtb	r3, r3
    19fa:	483d      	ldr	r0, [pc, #244]	; (1af0 <_i2c_m_sync_transfer+0x534>)
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    19fc:	4219      	tst	r1, r3
    19fe:	d141      	bne.n	1a84 <_i2c_m_sync_transfer+0x4c8>
    1a00:	7e33      	ldrb	r3, [r6, #24]
    1a02:	b2db      	uxtb	r3, r3
    1a04:	3801      	subs	r0, #1
		if (timeout-- == 0) {
    1a06:	2800      	cmp	r0, #0
    1a08:	d1f8      	bne.n	19fc <_i2c_m_sync_transfer+0x440>
			if (msg->flags & I2C_M_STOP) {
    1a0a:	4643      	mov	r3, r8
    1a0c:	885b      	ldrh	r3, [r3, #2]
    1a0e:	b21b      	sxth	r3, r3
    1a10:	2b00      	cmp	r3, #0
    1a12:	da00      	bge.n	1a16 <_i2c_m_sync_transfer+0x45a>
    1a14:	e73f      	b.n	1896 <_i2c_m_sync_transfer+0x2da>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    1a16:	886b      	ldrh	r3, [r5, #2]
    1a18:	4a34      	ldr	r2, [pc, #208]	; (1aec <_i2c_m_sync_transfer+0x530>)
    1a1a:	4013      	ands	r3, r2
    1a1c:	806b      	strh	r3, [r5, #2]
			return I2C_ERR_BUS;
    1a1e:	2005      	movs	r0, #5
    1a20:	4240      	negs	r0, r0
			return ret;
    1a22:	e663      	b.n	16ec <_i2c_m_sync_transfer+0x130>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    1a24:	6863      	ldr	r3, [r4, #4]
    1a26:	4831      	ldr	r0, [pc, #196]	; (1aec <_i2c_m_sync_transfer+0x530>)
    1a28:	4003      	ands	r3, r0
    1a2a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a2c:	69e3      	ldr	r3, [r4, #28]
    1a2e:	421a      	tst	r2, r3
    1a30:	d1fc      	bne.n	1a2c <_i2c_m_sync_transfer+0x470>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1a32:	6860      	ldr	r0, [r4, #4]
    1a34:	23c0      	movs	r3, #192	; 0xc0
    1a36:	029b      	lsls	r3, r3, #10
    1a38:	4303      	orrs	r3, r0
    1a3a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a3c:	69e3      	ldr	r3, [r4, #28]
    1a3e:	421a      	tst	r2, r3
    1a40:	d1fc      	bne.n	1a3c <_i2c_m_sync_transfer+0x480>
    1a42:	e7c2      	b.n	19ca <_i2c_m_sync_transfer+0x40e>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1a44:	464b      	mov	r3, r9
    1a46:	7623      	strb	r3, [r4, #24]
			return I2C_NACK;
    1a48:	2302      	movs	r3, #2
    1a4a:	425b      	negs	r3, r3
    1a4c:	9301      	str	r3, [sp, #4]
    1a4e:	e7cd      	b.n	19ec <_i2c_m_sync_transfer+0x430>
    1a50:	9e01      	ldr	r6, [sp, #4]
    1a52:	0030      	movs	r0, r6
    1a54:	e64a      	b.n	16ec <_i2c_m_sync_transfer+0x130>
		return I2C_ERR_BUSY;
    1a56:	2006      	movs	r0, #6
    1a58:	4240      	negs	r0, r0
    1a5a:	e647      	b.n	16ec <_i2c_m_sync_transfer+0x130>
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1a5c:	2b01      	cmp	r3, #1
    1a5e:	d000      	beq.n	1a62 <_i2c_m_sync_transfer+0x4a6>
    1a60:	e6e7      	b.n	1832 <_i2c_m_sync_transfer+0x276>
    1a62:	2e00      	cmp	r6, #0
    1a64:	d100      	bne.n	1a68 <_i2c_m_sync_transfer+0x4ac>
    1a66:	e6e4      	b.n	1832 <_i2c_m_sync_transfer+0x276>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1a68:	687a      	ldr	r2, [r7, #4]
    1a6a:	2380      	movs	r3, #128	; 0x80
    1a6c:	02db      	lsls	r3, r3, #11
    1a6e:	4313      	orrs	r3, r2
    1a70:	607b      	str	r3, [r7, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a72:	2204      	movs	r2, #4
    1a74:	69fb      	ldr	r3, [r7, #28]
    1a76:	421a      	tst	r2, r3
    1a78:	d1fc      	bne.n	1a74 <_i2c_m_sync_transfer+0x4b8>
			if (msg->len == 0) {
    1a7a:	686b      	ldr	r3, [r5, #4]
    1a7c:	2b00      	cmp	r3, #0
    1a7e:	d100      	bne.n	1a82 <_i2c_m_sync_transfer+0x4c6>
    1a80:	e6cf      	b.n	1822 <_i2c_m_sync_transfer+0x266>
    1a82:	e6d6      	b.n	1832 <_i2c_m_sync_transfer+0x276>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1a84:	6827      	ldr	r7, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1a86:	69e0      	ldr	r0, [r4, #28]
    1a88:	4202      	tst	r2, r0
    1a8a:	d1fc      	bne.n	1a86 <_i2c_m_sync_transfer+0x4ca>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    1a8c:	8b60      	ldrh	r0, [r4, #26]
    1a8e:	b280      	uxth	r0, r0
	if (flags & MB_FLAG) {
    1a90:	4666      	mov	r6, ip
    1a92:	421e      	tst	r6, r3
    1a94:	d100      	bne.n	1a98 <_i2c_m_sync_transfer+0x4dc>
    1a96:	e77f      	b.n	1998 <_i2c_m_sync_transfer+0x3dc>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    1a98:	464b      	mov	r3, r9
    1a9a:	4203      	tst	r3, r0
    1a9c:	d100      	bne.n	1aa0 <_i2c_m_sync_transfer+0x4e4>
    1a9e:	e719      	b.n	18d4 <_i2c_m_sync_transfer+0x318>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    1aa0:	7626      	strb	r6, [r4, #24]
			msg->flags |= I2C_M_FAIL;
    1aa2:	886b      	ldrh	r3, [r5, #2]
    1aa4:	2680      	movs	r6, #128	; 0x80
    1aa6:	0176      	lsls	r6, r6, #5
    1aa8:	4333      	orrs	r3, r6
    1aaa:	806b      	strh	r3, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    1aac:	886b      	ldrh	r3, [r5, #2]
    1aae:	4e0f      	ldr	r6, [pc, #60]	; (1aec <_i2c_m_sync_transfer+0x530>)
    1ab0:	4033      	ands	r3, r6
    1ab2:	806b      	strh	r3, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    1ab4:	4663      	mov	r3, ip
    1ab6:	4018      	ands	r0, r3
			return I2C_ERR_BAD_ADDRESS;
    1ab8:	4246      	negs	r6, r0
    1aba:	4146      	adcs	r6, r0
    1abc:	1f73      	subs	r3, r6, #5
    1abe:	9301      	str	r3, [sp, #4]
    1ac0:	e794      	b.n	19ec <_i2c_m_sync_transfer+0x430>
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1ac2:	2b01      	cmp	r3, #1
    1ac4:	d000      	beq.n	1ac8 <_i2c_m_sync_transfer+0x50c>
    1ac6:	e784      	b.n	19d2 <_i2c_m_sync_transfer+0x416>
    1ac8:	2f00      	cmp	r7, #0
    1aca:	d100      	bne.n	1ace <_i2c_m_sync_transfer+0x512>
    1acc:	e781      	b.n	19d2 <_i2c_m_sync_transfer+0x416>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1ace:	6860      	ldr	r0, [r4, #4]
    1ad0:	2380      	movs	r3, #128	; 0x80
    1ad2:	02db      	lsls	r3, r3, #11
    1ad4:	4303      	orrs	r3, r0
    1ad6:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1ad8:	69e3      	ldr	r3, [r4, #28]
    1ada:	421a      	tst	r2, r3
    1adc:	d1fc      	bne.n	1ad8 <_i2c_m_sync_transfer+0x51c>
			if (msg->len == 0) {
    1ade:	686b      	ldr	r3, [r5, #4]
    1ae0:	2b00      	cmp	r3, #0
    1ae2:	d100      	bne.n	1ae6 <_i2c_m_sync_transfer+0x52a>
    1ae4:	e76d      	b.n	19c2 <_i2c_m_sync_transfer+0x406>
    1ae6:	e774      	b.n	19d2 <_i2c_m_sync_transfer+0x416>
    1ae8:	fffffbff 	.word	0xfffffbff
    1aec:	fffffeff 	.word	0xfffffeff
    1af0:	0000ffff 	.word	0x0000ffff

00001af4 <_slcd_sync_set_segment>:
	return ERR_NONE;
}

static int32_t _slcd_sync_set_segment(struct _slcd_sync_device *dev, const uint32_t com, const uint32_t seg,
                                      const bool on)
{
    1af4:	b510      	push	{r4, lr}
	if ((SLCD_COMNUM(seg) >= CONF_SLCD_COM_NUM) || (SLCD_SEGNUM(seg) >= CONF_SLCD_SEG_NUM)) {
    1af6:	0214      	lsls	r4, r2, #8
    1af8:	0e24      	lsrs	r4, r4, #24
    1afa:	2c04      	cmp	r4, #4
    1afc:	d82d      	bhi.n	1b5a <_slcd_sync_set_segment+0x66>
    1afe:	24ff      	movs	r4, #255	; 0xff
    1b00:	4014      	ands	r4, r2
    1b02:	2c17      	cmp	r4, #23
    1b04:	d82c      	bhi.n	1b60 <_slcd_sync_set_segment+0x6c>
		return ERR_INVALID_ARG;
	}
	/* Use register instead hri interface to optimization code */
	if (on) {
    1b06:	2b00      	cmp	r3, #0
    1b08:	d012      	beq.n	1b30 <_slcd_sync_set_segment+0x3c>
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
    1b0a:	0954      	lsrs	r4, r2, #5
    1b0c:	6803      	ldr	r3, [r0, #0]
    1b0e:	3324      	adds	r3, #36	; 0x24
    1b10:	0049      	lsls	r1, r1, #1
    1b12:	1909      	adds	r1, r1, r4
    1b14:	0089      	lsls	r1, r1, #2
		    |= (seg < 32) ? (1 << seg) : (1 << (seg >> 5));
    1b16:	1859      	adds	r1, r3, r1
    1b18:	6808      	ldr	r0, [r1, #0]
    1b1a:	2a1f      	cmp	r2, #31
    1b1c:	d805      	bhi.n	1b2a <_slcd_sync_set_segment+0x36>
    1b1e:	2301      	movs	r3, #1
    1b20:	4093      	lsls	r3, r2
    1b22:	4303      	orrs	r3, r0
    1b24:	600b      	str	r3, [r1, #0]
	} else {
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
	}

	return ERR_NONE;
    1b26:	2000      	movs	r0, #0
}
    1b28:	bd10      	pop	{r4, pc}
		    |= (seg < 32) ? (1 << seg) : (1 << (seg >> 5));
    1b2a:	2301      	movs	r3, #1
    1b2c:	40a3      	lsls	r3, r4
    1b2e:	e7f8      	b.n	1b22 <_slcd_sync_set_segment+0x2e>
		((uint32_t *)&(((Slcd *)dev->hw)->SDATAL0))[(com * 2) + (seg >> 5)]
    1b30:	0954      	lsrs	r4, r2, #5
    1b32:	6803      	ldr	r3, [r0, #0]
    1b34:	3324      	adds	r3, #36	; 0x24
    1b36:	0049      	lsls	r1, r1, #1
    1b38:	1909      	adds	r1, r1, r4
    1b3a:	0089      	lsls	r1, r1, #2
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
    1b3c:	1859      	adds	r1, r3, r1
    1b3e:	6808      	ldr	r0, [r1, #0]
    1b40:	2a1f      	cmp	r2, #31
    1b42:	d806      	bhi.n	1b52 <_slcd_sync_set_segment+0x5e>
    1b44:	2301      	movs	r3, #1
    1b46:	4093      	lsls	r3, r2
    1b48:	43db      	mvns	r3, r3
    1b4a:	4003      	ands	r3, r0
    1b4c:	600b      	str	r3, [r1, #0]
	return ERR_NONE;
    1b4e:	2000      	movs	r0, #0
    1b50:	e7ea      	b.n	1b28 <_slcd_sync_set_segment+0x34>
		    &= ~((seg < 32) ? (1 << seg) : (1 << (seg >> 5)));
    1b52:	2201      	movs	r2, #1
    1b54:	40a2      	lsls	r2, r4
    1b56:	43d3      	mvns	r3, r2
    1b58:	e7f7      	b.n	1b4a <_slcd_sync_set_segment+0x56>
		return ERR_INVALID_ARG;
    1b5a:	200d      	movs	r0, #13
    1b5c:	4240      	negs	r0, r0
    1b5e:	e7e3      	b.n	1b28 <_slcd_sync_set_segment+0x34>
    1b60:	200d      	movs	r0, #13
    1b62:	4240      	negs	r0, r0
    1b64:	e7e0      	b.n	1b28 <_slcd_sync_set_segment+0x34>
	...

00001b68 <_slcd_sync_init>:
	};
}

static inline bool hri_slcd_is_syncing(const void *const hw, hri_slcd_syncbusy_reg_t reg)
{
	return ((Slcd *)hw)->SYNCBUSY.reg & reg;
    1b68:	694b      	ldr	r3, [r1, #20]
	if (!hri_slcd_is_syncing(hw, SLCD_SYNCBUSY_SWRST)) {
    1b6a:	07db      	lsls	r3, r3, #31
    1b6c:	d418      	bmi.n	1ba0 <_slcd_sync_init+0x38>
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b6e:	2203      	movs	r2, #3
    1b70:	694b      	ldr	r3, [r1, #20]
    1b72:	421a      	tst	r2, r3
    1b74:	d1fc      	bne.n	1b70 <_slcd_sync_init+0x8>

static inline bool hri_slcd_get_CTRLA_ENABLE_bit(const void *const hw)
{
	uint32_t tmp;
	hri_slcd_wait_for_sync(hw, SLCD_SYNCBUSY_SWRST | SLCD_SYNCBUSY_ENABLE);
	tmp = ((Slcd *)hw)->CTRLA.reg;
    1b76:	680b      	ldr	r3, [r1, #0]
		if (hri_slcd_get_CTRLA_ENABLE_bit(hw)) {
    1b78:	079b      	lsls	r3, r3, #30
    1b7a:	d50b      	bpl.n	1b94 <_slcd_sync_init+0x2c>
}

static inline void hri_slcd_clear_CTRLA_ENABLE_bit(const void *const hw)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1b7c:	680b      	ldr	r3, [r1, #0]
    1b7e:	2202      	movs	r2, #2
    1b80:	4393      	bics	r3, r2
    1b82:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b84:	3201      	adds	r2, #1
    1b86:	694b      	ldr	r3, [r1, #20]
    1b88:	421a      	tst	r2, r3
    1b8a:	d1fc      	bne.n	1b86 <_slcd_sync_init+0x1e>
    1b8c:	2202      	movs	r2, #2
    1b8e:	694b      	ldr	r3, [r1, #20]
    1b90:	421a      	tst	r2, r3
    1b92:	d1fc      	bne.n	1b8e <_slcd_sync_init+0x26>
}

static inline void hri_slcd_write_CTRLA_reg(const void *const hw, hri_slcd_ctrla_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLA.reg = data;
    1b94:	2301      	movs	r3, #1
    1b96:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1b98:	2203      	movs	r2, #3
    1b9a:	694b      	ldr	r3, [r1, #20]
    1b9c:	421a      	tst	r2, r3
    1b9e:	d1fc      	bne.n	1b9a <_slcd_sync_init+0x32>
    1ba0:	2201      	movs	r2, #1
    1ba2:	694b      	ldr	r3, [r1, #20]
    1ba4:	421a      	tst	r2, r3
    1ba6:	d1fc      	bne.n	1ba2 <_slcd_sync_init+0x3a>
	dev->hw = hw;
    1ba8:	6001      	str	r1, [r0, #0]
	((Slcd *)hw)->CTRLA.reg = data;
    1baa:	4b16      	ldr	r3, [pc, #88]	; (1c04 <_slcd_sync_init+0x9c>)
    1bac:	600b      	str	r3, [r1, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1bae:	2203      	movs	r2, #3
    1bb0:	694b      	ldr	r3, [r1, #20]
    1bb2:	421a      	tst	r2, r3
    1bb4:	d1fc      	bne.n	1bb0 <_slcd_sync_init+0x48>
}

static inline void hri_slcd_write_CTRLB_reg(const void *const hw, hri_slcd_ctrlb_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLB.reg = data;
    1bb6:	2381      	movs	r3, #129	; 0x81
    1bb8:	808b      	strh	r3, [r1, #4]
}

static inline void hri_slcd_write_CTRLC_reg(const void *const hw, hri_slcd_ctrlc_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLC.reg = data;
    1bba:	3b01      	subs	r3, #1
    1bbc:	80cb      	strh	r3, [r1, #6]
}

static inline void hri_slcd_write_CTRLD_reg(const void *const hw, hri_slcd_ctrld_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CTRLD.reg = data;
    1bbe:	720b      	strb	r3, [r1, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1bc0:	2207      	movs	r2, #7
    1bc2:	694b      	ldr	r3, [r1, #20]
    1bc4:	421a      	tst	r2, r3
    1bc6:	d1fc      	bne.n	1bc2 <_slcd_sync_init+0x5a>
}

static inline void hri_slcd_write_LPENL_reg(const void *const hw, hri_slcd_lpenl_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->LPENL.reg = data;
    1bc8:	4b0f      	ldr	r3, [pc, #60]	; (1c08 <_slcd_sync_init+0xa0>)
    1bca:	61cb      	str	r3, [r1, #28]
}

static inline void hri_slcd_write_LPENH_reg(const void *const hw, hri_slcd_lpenh_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->LPENH.reg = data;
    1bcc:	23ff      	movs	r3, #255	; 0xff
    1bce:	011b      	lsls	r3, r3, #4
    1bd0:	620b      	str	r3, [r1, #32]
}

static inline void hri_slcd_write_SDATAL0_reg(const void *const hw, hri_slcd_sdatal0_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL0.reg = data;
    1bd2:	2300      	movs	r3, #0
    1bd4:	624b      	str	r3, [r1, #36]	; 0x24
}

static inline void hri_slcd_write_SDATAH0_reg(const void *const hw, hri_slcd_sdatah0_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH0.reg = data;
    1bd6:	628b      	str	r3, [r1, #40]	; 0x28
}

static inline void hri_slcd_write_SDATAL1_reg(const void *const hw, hri_slcd_sdatal1_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL1.reg = data;
    1bd8:	62cb      	str	r3, [r1, #44]	; 0x2c
}

static inline void hri_slcd_write_SDATAH1_reg(const void *const hw, hri_slcd_sdatah1_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH1.reg = data;
    1bda:	630b      	str	r3, [r1, #48]	; 0x30
}

static inline void hri_slcd_write_SDATAL2_reg(const void *const hw, hri_slcd_sdatal2_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL2.reg = data;
    1bdc:	634b      	str	r3, [r1, #52]	; 0x34
}

static inline void hri_slcd_write_SDATAH2_reg(const void *const hw, hri_slcd_sdatah2_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH2.reg = data;
    1bde:	638b      	str	r3, [r1, #56]	; 0x38
}

static inline void hri_slcd_write_SDATAL3_reg(const void *const hw, hri_slcd_sdatal3_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL3.reg = data;
    1be0:	63cb      	str	r3, [r1, #60]	; 0x3c
}

static inline void hri_slcd_write_SDATAH3_reg(const void *const hw, hri_slcd_sdatah3_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH3.reg = data;
    1be2:	640b      	str	r3, [r1, #64]	; 0x40
}

static inline void hri_slcd_write_SDATAL4_reg(const void *const hw, hri_slcd_sdatal4_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL4.reg = data;
    1be4:	644b      	str	r3, [r1, #68]	; 0x44
}

static inline void hri_slcd_write_SDATAH4_reg(const void *const hw, hri_slcd_sdatah4_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH4.reg = data;
    1be6:	648b      	str	r3, [r1, #72]	; 0x48
}

static inline void hri_slcd_write_SDATAL5_reg(const void *const hw, hri_slcd_sdatal5_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL5.reg = data;
    1be8:	64cb      	str	r3, [r1, #76]	; 0x4c
}

static inline void hri_slcd_write_SDATAH5_reg(const void *const hw, hri_slcd_sdatah5_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH5.reg = data;
    1bea:	650b      	str	r3, [r1, #80]	; 0x50
}

static inline void hri_slcd_write_SDATAL6_reg(const void *const hw, hri_slcd_sdatal6_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL6.reg = data;
    1bec:	654b      	str	r3, [r1, #84]	; 0x54
}

static inline void hri_slcd_write_SDATAH6_reg(const void *const hw, hri_slcd_sdatah6_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH6.reg = data;
    1bee:	658b      	str	r3, [r1, #88]	; 0x58
}

static inline void hri_slcd_write_SDATAL7_reg(const void *const hw, hri_slcd_sdatal7_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAL7.reg = data;
    1bf0:	65cb      	str	r3, [r1, #92]	; 0x5c
}

static inline void hri_slcd_write_SDATAH7_reg(const void *const hw, hri_slcd_sdatah7_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->SDATAH7.reg = data;
    1bf2:	660b      	str	r3, [r1, #96]	; 0x60
	hri_slcd_set_BCFG_MODE_bit(dev->hw);
    1bf4:	6802      	ldr	r2, [r0, #0]
}

static inline void hri_slcd_set_BCFG_MODE_bit(const void *const hw)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_MODE;
    1bf6:	6e93      	ldr	r3, [r2, #104]	; 0x68
    1bf8:	2101      	movs	r1, #1
    1bfa:	430b      	orrs	r3, r1
    1bfc:	6693      	str	r3, [r2, #104]	; 0x68
}
    1bfe:	2000      	movs	r0, #0
    1c00:	4770      	bx	lr
    1c02:	46c0      	nop			; (mov r8, r8)
    1c04:	00033014 	.word	0x00033014
    1c08:	cfffffc0 	.word	0xcfffffc0

00001c0c <_slcd_sync_enable>:
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1c0c:	6802      	ldr	r2, [r0, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1c0e:	6813      	ldr	r3, [r2, #0]
    1c10:	2102      	movs	r1, #2
    1c12:	430b      	orrs	r3, r1
    1c14:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c16:	3101      	adds	r1, #1
    1c18:	6953      	ldr	r3, [r2, #20]
    1c1a:	4219      	tst	r1, r3
    1c1c:	d1fc      	bne.n	1c18 <_slcd_sync_enable+0xc>
}
    1c1e:	2000      	movs	r0, #0
    1c20:	4770      	bx	lr
	...

00001c24 <_slcd_sync_seg_on>:
{
    1c24:	b510      	push	{r4, lr}
	return _slcd_sync_set_segment(dev, SLCD_COMNUM(seg), SLCD_SEGNUM(seg), true);
    1c26:	23ff      	movs	r3, #255	; 0xff
    1c28:	001a      	movs	r2, r3
    1c2a:	400a      	ands	r2, r1
    1c2c:	0c09      	lsrs	r1, r1, #16
    1c2e:	4019      	ands	r1, r3
    1c30:	3bfe      	subs	r3, #254	; 0xfe
    1c32:	4c01      	ldr	r4, [pc, #4]	; (1c38 <_slcd_sync_seg_on+0x14>)
    1c34:	47a0      	blx	r4
}
    1c36:	bd10      	pop	{r4, pc}
    1c38:	00001af5 	.word	0x00001af5

00001c3c <_slcd_sync_seg_blink>:
{
    1c3c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c3e:	46c6      	mov	lr, r8
    1c40:	b500      	push	{lr}
    1c42:	0004      	movs	r4, r0
	if ((SLCD_COMNUM(seg) >= CONF_SLCD_COM_NUM) || (SLCD_SEGNUM(seg) >= CONF_SLCD_SEG_NUM)) {
    1c44:	020d      	lsls	r5, r1, #8
    1c46:	0e2d      	lsrs	r5, r5, #24
    1c48:	2d04      	cmp	r5, #4
    1c4a:	d900      	bls.n	1c4e <_slcd_sync_seg_blink+0x12>
    1c4c:	e087      	b.n	1d5e <_slcd_sync_seg_blink+0x122>
    1c4e:	26ff      	movs	r6, #255	; 0xff
    1c50:	400e      	ands	r6, r1
	if (SLCD_SEGNUM(seg) >= 2) {
    1c52:	2e01      	cmp	r6, #1
    1c54:	d900      	bls.n	1c58 <_slcd_sync_seg_blink+0x1c>
    1c56:	e085      	b.n	1d64 <_slcd_sync_seg_blink+0x128>
	if (period > SLCD_FC_MAX_MS || period < SLCD_FC_MIN_MS) {
    1c58:	4945      	ldr	r1, [pc, #276]	; (1d70 <_slcd_sync_seg_blink+0x134>)
    1c5a:	0013      	movs	r3, r2
    1c5c:	3b0f      	subs	r3, #15
    1c5e:	428b      	cmp	r3, r1
    1c60:	d900      	bls.n	1c64 <_slcd_sync_seg_blink+0x28>
    1c62:	e082      	b.n	1d6a <_slcd_sync_seg_blink+0x12e>
	hri_slcd_clear_CTRLD_FC0EN_bit(dev->hw);
    1c64:	6801      	ldr	r1, [r0, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_FC0EN;
    1c66:	7a0b      	ldrb	r3, [r1, #8]
    1c68:	2010      	movs	r0, #16
    1c6a:	4383      	bics	r3, r0
    1c6c:	720b      	strb	r3, [r1, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1c6e:	2707      	movs	r7, #7
    1c70:	694b      	ldr	r3, [r1, #20]
    1c72:	421f      	tst	r7, r3
    1c74:	d1fc      	bne.n	1c70 <_slcd_sync_seg_blink+0x34>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_CTRLD);
    1c76:	6827      	ldr	r7, [r4, #0]
    1c78:	2104      	movs	r1, #4
    1c7a:	697b      	ldr	r3, [r7, #20]
    1c7c:	4219      	tst	r1, r3
    1c7e:	d1fc      	bne.n	1c7a <_slcd_sync_seg_blink+0x3e>
	if (period <= SLCD_FC_BYPASS_MAX_MS) {
    1c80:	23f0      	movs	r3, #240	; 0xf0
    1c82:	005b      	lsls	r3, r3, #1
    1c84:	429a      	cmp	r2, r3
    1c86:	d853      	bhi.n	1d30 <_slcd_sync_seg_blink+0xf4>
	((Slcd *)hw)->FC0.reg |= mask;
    1c88:	7e38      	ldrb	r0, [r7, #24]
    1c8a:	b2c3      	uxtb	r3, r0
    1c8c:	4698      	mov	r8, r3
		hri_slcd_set_FC0_reg(dev->hw, SLCD_FC0_PB | ((period / (1000 / SLCD_FRAME_FREQUENCY)) - 1));
    1c8e:	210f      	movs	r1, #15
    1c90:	0010      	movs	r0, r2
    1c92:	4b38      	ldr	r3, [pc, #224]	; (1d74 <_slcd_sync_seg_blink+0x138>)
    1c94:	4798      	blx	r3
    1c96:	1e43      	subs	r3, r0, #1
    1c98:	2080      	movs	r0, #128	; 0x80
    1c9a:	4240      	negs	r0, r0
    1c9c:	4642      	mov	r2, r8
    1c9e:	4310      	orrs	r0, r2
    1ca0:	4303      	orrs	r3, r0
    1ca2:	b2db      	uxtb	r3, r3
    1ca4:	763b      	strb	r3, [r7, #24]
	hri_slcd_set_CTRLD_FC0EN_bit(dev->hw);
    1ca6:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_FC0EN;
    1ca8:	7a13      	ldrb	r3, [r2, #8]
    1caa:	2110      	movs	r1, #16
    1cac:	430b      	orrs	r3, r1
    1cae:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cb0:	3909      	subs	r1, #9
    1cb2:	6953      	ldr	r3, [r2, #20]
    1cb4:	4219      	tst	r1, r3
    1cb6:	d1fc      	bne.n	1cb2 <_slcd_sync_seg_blink+0x76>
	_slcd_sync_set_segment(dev, SLCD_COMNUM(seg), SLCD_SEGNUM(seg), true);
    1cb8:	2301      	movs	r3, #1
    1cba:	0032      	movs	r2, r6
    1cbc:	0029      	movs	r1, r5
    1cbe:	0020      	movs	r0, r4
    1cc0:	4f2d      	ldr	r7, [pc, #180]	; (1d78 <_slcd_sync_seg_blink+0x13c>)
    1cc2:	47b8      	blx	r7
	hri_slcd_clear_CTRLD_BLINK_bit(dev->hw);
    1cc4:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_BLINK;
    1cc6:	7a13      	ldrb	r3, [r2, #8]
    1cc8:	2102      	movs	r1, #2
    1cca:	438b      	bics	r3, r1
    1ccc:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1cce:	3105      	adds	r1, #5
    1cd0:	6953      	ldr	r3, [r2, #20]
    1cd2:	4219      	tst	r1, r3
    1cd4:	d1fc      	bne.n	1cd0 <_slcd_sync_seg_blink+0x94>
	hri_slcd_clear_CTRLA_ENABLE_bit(dev->hw);
    1cd6:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1cd8:	6813      	ldr	r3, [r2, #0]
    1cda:	2102      	movs	r1, #2
    1cdc:	438b      	bics	r3, r1
    1cde:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1ce0:	3101      	adds	r1, #1
    1ce2:	6953      	ldr	r3, [r2, #20]
    1ce4:	4219      	tst	r1, r3
    1ce6:	d1fc      	bne.n	1ce2 <_slcd_sync_seg_blink+0xa6>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_ENABLE);
    1ce8:	6822      	ldr	r2, [r4, #0]
    1cea:	2102      	movs	r1, #2
    1cec:	6953      	ldr	r3, [r2, #20]
    1cee:	4219      	tst	r1, r3
    1cf0:	d1fc      	bne.n	1cec <_slcd_sync_seg_blink+0xb0>
	if (SLCD_SEGNUM(seg) == 0) {
    1cf2:	2e00      	cmp	r6, #0
    1cf4:	d129      	bne.n	1d4a <_slcd_sync_seg_blink+0x10e>
}

static inline void hri_slcd_set_BCFG_BSS0_bf(const void *const hw, hri_slcd_bcfg_reg_t mask)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_BSS0(mask);
    1cf6:	6e91      	ldr	r1, [r2, #104]	; 0x68
		hri_slcd_set_BCFG_BSS0_bf(dev->hw, 1 << SLCD_COMNUM(seg));
    1cf8:	2380      	movs	r3, #128	; 0x80
    1cfa:	045b      	lsls	r3, r3, #17
    1cfc:	40ab      	lsls	r3, r5
    1cfe:	0c1b      	lsrs	r3, r3, #16
    1d00:	430b      	orrs	r3, r1
    1d02:	6693      	str	r3, [r2, #104]	; 0x68
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    1d04:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    1d06:	6813      	ldr	r3, [r2, #0]
    1d08:	2102      	movs	r1, #2
    1d0a:	430b      	orrs	r3, r1
    1d0c:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1d0e:	3101      	adds	r1, #1
    1d10:	6953      	ldr	r3, [r2, #20]
    1d12:	4219      	tst	r1, r3
    1d14:	d1fc      	bne.n	1d10 <_slcd_sync_seg_blink+0xd4>
	hri_slcd_set_CTRLD_BLINK_bit(dev->hw);
    1d16:	6822      	ldr	r2, [r4, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_BLINK;
    1d18:	7a13      	ldrb	r3, [r2, #8]
    1d1a:	2102      	movs	r1, #2
    1d1c:	430b      	orrs	r3, r1
    1d1e:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1d20:	3105      	adds	r1, #5
    1d22:	6953      	ldr	r3, [r2, #20]
    1d24:	4219      	tst	r1, r3
    1d26:	d1fc      	bne.n	1d22 <_slcd_sync_seg_blink+0xe6>
	return ERR_NONE;
    1d28:	2000      	movs	r0, #0
}
    1d2a:	bc04      	pop	{r2}
    1d2c:	4690      	mov	r8, r2
    1d2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((Slcd *)hw)->FC0.reg |= mask;
    1d30:	7e3b      	ldrb	r3, [r7, #24]
    1d32:	b2db      	uxtb	r3, r3
    1d34:	4698      	mov	r8, r3
		hri_slcd_set_FC0_reg(dev->hw, (((period / (1000 / SLCD_FRAME_FREQUENCY)) / 8 - 1)));
    1d36:	2178      	movs	r1, #120	; 0x78
    1d38:	0010      	movs	r0, r2
    1d3a:	4b0e      	ldr	r3, [pc, #56]	; (1d74 <_slcd_sync_seg_blink+0x138>)
    1d3c:	4798      	blx	r3
    1d3e:	3801      	subs	r0, #1
    1d40:	4643      	mov	r3, r8
    1d42:	4318      	orrs	r0, r3
    1d44:	b2c0      	uxtb	r0, r0
    1d46:	7638      	strb	r0, [r7, #24]
    1d48:	e7ad      	b.n	1ca6 <_slcd_sync_seg_blink+0x6a>
}

static inline void hri_slcd_set_BCFG_BSS1_bf(const void *const hw, hri_slcd_bcfg_reg_t mask)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_BSS1(mask);
    1d4a:	6e91      	ldr	r1, [r2, #104]	; 0x68
		hri_slcd_set_BCFG_BSS1_bf(dev->hw, 1 << SLCD_COMNUM(seg));
    1d4c:	2380      	movs	r3, #128	; 0x80
    1d4e:	025b      	lsls	r3, r3, #9
    1d50:	40ab      	lsls	r3, r5
    1d52:	20ff      	movs	r0, #255	; 0xff
    1d54:	0400      	lsls	r0, r0, #16
    1d56:	4003      	ands	r3, r0
    1d58:	430b      	orrs	r3, r1
    1d5a:	6693      	str	r3, [r2, #104]	; 0x68
    1d5c:	e7d2      	b.n	1d04 <_slcd_sync_seg_blink+0xc8>
		return ERR_INVALID_ARG;
    1d5e:	200d      	movs	r0, #13
    1d60:	4240      	negs	r0, r0
    1d62:	e7e2      	b.n	1d2a <_slcd_sync_seg_blink+0xee>
		return ERR_INVALID_ARG;
    1d64:	200d      	movs	r0, #13
    1d66:	4240      	negs	r0, r0
    1d68:	e7df      	b.n	1d2a <_slcd_sync_seg_blink+0xee>
		return ERR_INVALID_ARG;
    1d6a:	200d      	movs	r0, #13
    1d6c:	4240      	negs	r0, r0
    1d6e:	e7dc      	b.n	1d2a <_slcd_sync_seg_blink+0xee>
    1d70:	00000ef1 	.word	0x00000ef1
    1d74:	00002945 	.word	0x00002945
    1d78:	00001af5 	.word	0x00001af5

00001d7c <_slcd_sync_write_char>:
{
    1d7c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d7e:	46d6      	mov	lr, sl
    1d80:	464f      	mov	r7, r9
    1d82:	4646      	mov	r6, r8
    1d84:	b5c0      	push	{r6, r7, lr}
	if (cm_setting[index].size == 7) {
    1d86:	0094      	lsls	r4, r2, #2
    1d88:	4b3c      	ldr	r3, [pc, #240]	; (1e7c <_slcd_sync_write_char+0x100>)
    1d8a:	191b      	adds	r3, r3, r4
    1d8c:	78dd      	ldrb	r5, [r3, #3]
    1d8e:	2d07      	cmp	r5, #7
    1d90:	d004      	beq.n	1d9c <_slcd_sync_write_char+0x20>
	} else if (cm_setting[index].size == 14) {
    1d92:	2d0e      	cmp	r5, #14
    1d94:	d01a      	beq.n	1dcc <_slcd_sync_write_char+0x50>
		return ERR_INVALID_ARG;
    1d96:	200d      	movs	r0, #13
    1d98:	4240      	negs	r0, r0
    1d9a:	e060      	b.n	1e5e <_slcd_sync_write_char+0xe2>
			if (cm7_lut[i].character == character) {
    1d9c:	2900      	cmp	r1, #0
    1d9e:	d00d      	beq.n	1dbc <_slcd_sync_write_char+0x40>
    1da0:	2301      	movs	r3, #1
    1da2:	4f37      	ldr	r7, [pc, #220]	; (1e80 <_slcd_sync_write_char+0x104>)
    1da4:	2630      	movs	r6, #48	; 0x30
    1da6:	009c      	lsls	r4, r3, #2
    1da8:	193c      	adds	r4, r7, r4
    1daa:	5da4      	ldrb	r4, [r4, r6]
    1dac:	428c      	cmp	r4, r1
    1dae:	d006      	beq.n	1dbe <_slcd_sync_write_char+0x42>
		for (i = 0; i<sizeof(cm7_lut)>> 2; i++) {
    1db0:	3301      	adds	r3, #1
    1db2:	2b11      	cmp	r3, #17
    1db4:	d1f7      	bne.n	1da6 <_slcd_sync_write_char+0x2a>
		return ERR_INVALID_ARG;
    1db6:	200d      	movs	r0, #13
    1db8:	4240      	negs	r0, r0
    1dba:	e050      	b.n	1e5e <_slcd_sync_write_char+0xe2>
			if (cm7_lut[i].character == character) {
    1dbc:	2300      	movs	r3, #0
				data = cm7_lut[i].mapping;
    1dbe:	009b      	lsls	r3, r3, #2
    1dc0:	492f      	ldr	r1, [pc, #188]	; (1e80 <_slcd_sync_write_char+0x104>)
    1dc2:	18cb      	adds	r3, r1, r3
    1dc4:	6b1c      	ldr	r4, [r3, #48]	; 0x30
    1dc6:	0a23      	lsrs	r3, r4, #8
    1dc8:	469c      	mov	ip, r3
				break;
    1dca:	e016      	b.n	1dfa <_slcd_sync_write_char+0x7e>
			if (cm14_lut[i].character == character) {
    1dcc:	2930      	cmp	r1, #48	; 0x30
    1dce:	d00d      	beq.n	1dec <_slcd_sync_write_char+0x70>
    1dd0:	2301      	movs	r3, #1
    1dd2:	4f2b      	ldr	r7, [pc, #172]	; (1e80 <_slcd_sync_write_char+0x104>)
    1dd4:	2674      	movs	r6, #116	; 0x74
    1dd6:	009c      	lsls	r4, r3, #2
    1dd8:	193c      	adds	r4, r7, r4
    1dda:	5da4      	ldrb	r4, [r4, r6]
    1ddc:	428c      	cmp	r4, r1
    1dde:	d006      	beq.n	1dee <_slcd_sync_write_char+0x72>
		for (i = 0; i<sizeof(cm14_lut)>> 2; i++) {
    1de0:	3301      	adds	r3, #1
    1de2:	2b33      	cmp	r3, #51	; 0x33
    1de4:	d1f7      	bne.n	1dd6 <_slcd_sync_write_char+0x5a>
		return ERR_INVALID_ARG;
    1de6:	200d      	movs	r0, #13
    1de8:	4240      	negs	r0, r0
    1dea:	e038      	b.n	1e5e <_slcd_sync_write_char+0xe2>
			if (cm14_lut[i].character == character) {
    1dec:	2300      	movs	r3, #0
				data = cm14_lut[i].mapping;
    1dee:	009b      	lsls	r3, r3, #2
    1df0:	4923      	ldr	r1, [pc, #140]	; (1e80 <_slcd_sync_write_char+0x104>)
    1df2:	18cb      	adds	r3, r1, r3
    1df4:	6f5c      	ldr	r4, [r3, #116]	; 0x74
    1df6:	0a23      	lsrs	r3, r4, #8
    1df8:	469c      	mov	ip, r3

static inline void hri_slcd_write_CMCFG_NSEG_bf(const void *const hw, hri_slcd_cmcfg_reg_t data)
{
	uint8_t tmp;
	SLCD_CRITICAL_SECTION_ENTER();
	tmp = ((Slcd *)hw)->CMCFG.reg;
    1dfa:	2470      	movs	r4, #112	; 0x70
    1dfc:	6803      	ldr	r3, [r0, #0]
    1dfe:	5d1b      	ldrb	r3, [r3, r4]
	tmp &= ~SLCD_CMCFG_NSEG_Msk;
    1e00:	2607      	movs	r6, #7
    1e02:	43b3      	bics	r3, r6
	hri_slcd_write_CMCFG_NSEG_bf(dev->hw, cm_setting[index].nseg);
    1e04:	491d      	ldr	r1, [pc, #116]	; (1e7c <_slcd_sync_write_char+0x100>)
    1e06:	468a      	mov	sl, r1
    1e08:	0092      	lsls	r2, r2, #2
    1e0a:	188f      	adds	r7, r1, r2
	tmp |= SLCD_CMCFG_NSEG(data);
    1e0c:	78be      	ldrb	r6, [r7, #2]
    1e0e:	46b1      	mov	r9, r6
    1e10:	2607      	movs	r6, #7
    1e12:	4649      	mov	r1, r9
    1e14:	400e      	ands	r6, r1
    1e16:	4333      	orrs	r3, r6
	((Slcd *)hw)->CMCFG.reg = tmp;
    1e18:	6801      	ldr	r1, [r0, #0]
    1e1a:	550b      	strb	r3, [r1, r4]
	hri_slcd_write_CMINDEX_CINDEX_bf(dev->hw, cm_setting[index].com_index);
    1e1c:	6804      	ldr	r4, [r0, #0]

static inline void hri_slcd_write_CMINDEX_CINDEX_bf(const void *const hw, hri_slcd_cmindex_reg_t data)
{
	uint16_t tmp;
	SLCD_CRITICAL_SECTION_ENTER();
	tmp = ((Slcd *)hw)->CMINDEX.reg;
    1e1e:	2684      	movs	r6, #132	; 0x84
    1e20:	5ba3      	ldrh	r3, [r4, r6]
	tmp &= ~SLCD_CMINDEX_CINDEX_Msk;
    1e22:	4918      	ldr	r1, [pc, #96]	; (1e84 <_slcd_sync_write_char+0x108>)
    1e24:	400b      	ands	r3, r1
    1e26:	4651      	mov	r1, sl
    1e28:	5c52      	ldrb	r2, [r2, r1]
	tmp |= SLCD_CMINDEX_CINDEX(data);
    1e2a:	0212      	lsls	r2, r2, #8
    1e2c:	21e0      	movs	r1, #224	; 0xe0
    1e2e:	00c9      	lsls	r1, r1, #3
    1e30:	400a      	ands	r2, r1
    1e32:	4313      	orrs	r3, r2
	((Slcd *)hw)->CMINDEX.reg = tmp;
    1e34:	53a3      	strh	r3, [r4, r6]
	hri_slcd_write_CMINDEX_SINDEX_bf(dev->hw, cm_setting[index].seg_index);
    1e36:	6802      	ldr	r2, [r0, #0]
	tmp = ((Slcd *)hw)->CMINDEX.reg;
    1e38:	5b93      	ldrh	r3, [r2, r6]
	tmp &= ~SLCD_CMINDEX_SINDEX_Msk;
    1e3a:	213f      	movs	r1, #63	; 0x3f
    1e3c:	438b      	bics	r3, r1
	tmp |= SLCD_CMINDEX_SINDEX(data);
    1e3e:	787f      	ldrb	r7, [r7, #1]
    1e40:	4039      	ands	r1, r7
    1e42:	430b      	orrs	r3, r1
	((Slcd *)hw)->CMINDEX.reg = tmp;
    1e44:	5393      	strh	r3, [r2, r6]
	if (cm_setting[index].size == 7) {
    1e46:	2d07      	cmp	r5, #7
    1e48:	d00e      	beq.n	1e68 <_slcd_sync_write_char+0xec>
	} else if (cm_setting[index].size == 14) {
    1e4a:	2d0e      	cmp	r5, #14
    1e4c:	d011      	beq.n	1e72 <_slcd_sync_write_char+0xf6>
	while (hri_slcd_get_STATUS_CMWRBUSY_bit(dev->hw))
    1e4e:	6802      	ldr	r2, [r0, #0]
    1e50:	2108      	movs	r1, #8
	return (((Slcd *)hw)->STATUS.reg & SLCD_STATUS_CMWRBUSY) >> SLCD_STATUS_CMWRBUSY_Pos;
    1e52:	7c13      	ldrb	r3, [r2, #16]
    1e54:	420b      	tst	r3, r1
    1e56:	d1fc      	bne.n	1e52 <_slcd_sync_write_char+0xd6>
}

static inline void hri_slcd_write_CMDATA_reg(const void *const hw, hri_slcd_cmdata_reg_t data)
{
	SLCD_CRITICAL_SECTION_ENTER();
	((Slcd *)hw)->CMDATA.reg = data;
    1e58:	4663      	mov	r3, ip
    1e5a:	67d3      	str	r3, [r2, #124]	; 0x7c
	return ERR_NONE;
    1e5c:	2000      	movs	r0, #0
}
    1e5e:	bc1c      	pop	{r2, r3, r4}
    1e60:	4690      	mov	r8, r2
    1e62:	4699      	mov	r9, r3
    1e64:	46a2      	mov	sl, r4
    1e66:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((Slcd *)hw)->CMDMASK.reg = data;
    1e68:	4a07      	ldr	r2, [pc, #28]	; (1e88 <_slcd_sync_write_char+0x10c>)
    1e6a:	2380      	movs	r3, #128	; 0x80
    1e6c:	6801      	ldr	r1, [r0, #0]
    1e6e:	50ca      	str	r2, [r1, r3]
    1e70:	e7ed      	b.n	1e4e <_slcd_sync_write_char+0xd2>
    1e72:	4a06      	ldr	r2, [pc, #24]	; (1e8c <_slcd_sync_write_char+0x110>)
    1e74:	2380      	movs	r3, #128	; 0x80
    1e76:	6801      	ldr	r1, [r0, #0]
    1e78:	50ca      	str	r2, [r1, r3]
    1e7a:	e7e8      	b.n	1e4e <_slcd_sync_write_char+0xd2>
    1e7c:	00009db8 	.word	0x00009db8
    1e80:	00009e38 	.word	0x00009e38
    1e84:	fffff8ff 	.word	0xfffff8ff
    1e88:	00ffff80 	.word	0x00ffff80
    1e8c:	00ffc000 	.word	0x00ffc000

00001e90 <_slcd_sync_set_animation_period>:
{
    1e90:	b570      	push	{r4, r5, r6, lr}
    1e92:	0005      	movs	r5, r0
    1e94:	0008      	movs	r0, r1
	hri_slcd_clear_CTRLD_FC1EN_bit(dev->hw);
    1e96:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_FC1EN;
    1e98:	7a13      	ldrb	r3, [r2, #8]
    1e9a:	2120      	movs	r1, #32
    1e9c:	438b      	bics	r3, r1
    1e9e:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1ea0:	3919      	subs	r1, #25
    1ea2:	6953      	ldr	r3, [r2, #20]
    1ea4:	4219      	tst	r1, r3
    1ea6:	d1fc      	bne.n	1ea2 <_slcd_sync_set_animation_period+0x12>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_CTRLD);
    1ea8:	682c      	ldr	r4, [r5, #0]
    1eaa:	2204      	movs	r2, #4
    1eac:	6963      	ldr	r3, [r4, #20]
    1eae:	421a      	tst	r2, r3
    1eb0:	d1fc      	bne.n	1eac <_slcd_sync_set_animation_period+0x1c>
	if (period <= SLCD_FC_BYPASS_MAX_MS) {
    1eb2:	23f0      	movs	r3, #240	; 0xf0
    1eb4:	005b      	lsls	r3, r3, #1
    1eb6:	4298      	cmp	r0, r3
    1eb8:	d816      	bhi.n	1ee8 <_slcd_sync_set_animation_period+0x58>
	((Slcd *)hw)->FC1.reg |= mask;
    1eba:	7e66      	ldrb	r6, [r4, #25]
    1ebc:	b2f6      	uxtb	r6, r6
		hri_slcd_set_FC1_reg(dev->hw, SLCD_FC1_PB | ((period / (1000 / SLCD_FRAME_FREQUENCY)) - 1));
    1ebe:	210f      	movs	r1, #15
    1ec0:	4b0e      	ldr	r3, [pc, #56]	; (1efc <_slcd_sync_set_animation_period+0x6c>)
    1ec2:	4798      	blx	r3
    1ec4:	3801      	subs	r0, #1
    1ec6:	4306      	orrs	r6, r0
    1ec8:	2380      	movs	r3, #128	; 0x80
    1eca:	425b      	negs	r3, r3
    1ecc:	4333      	orrs	r3, r6
    1ece:	b2db      	uxtb	r3, r3
    1ed0:	7663      	strb	r3, [r4, #25]
	hri_slcd_set_CTRLD_FC1EN_bit(dev->hw);
    1ed2:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_FC1EN;
    1ed4:	7a13      	ldrb	r3, [r2, #8]
    1ed6:	2120      	movs	r1, #32
    1ed8:	430b      	orrs	r3, r1
    1eda:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1edc:	3919      	subs	r1, #25
    1ede:	6953      	ldr	r3, [r2, #20]
    1ee0:	4219      	tst	r1, r3
    1ee2:	d1fc      	bne.n	1ede <_slcd_sync_set_animation_period+0x4e>
}
    1ee4:	2000      	movs	r0, #0
    1ee6:	bd70      	pop	{r4, r5, r6, pc}
	((Slcd *)hw)->FC1.reg |= mask;
    1ee8:	7e66      	ldrb	r6, [r4, #25]
    1eea:	b2f6      	uxtb	r6, r6
		hri_slcd_set_FC1_reg(dev->hw, (((period / (1000 / SLCD_FRAME_FREQUENCY)) / 8 - 1)));
    1eec:	2178      	movs	r1, #120	; 0x78
    1eee:	4b03      	ldr	r3, [pc, #12]	; (1efc <_slcd_sync_set_animation_period+0x6c>)
    1ef0:	4798      	blx	r3
    1ef2:	3801      	subs	r0, #1
    1ef4:	4306      	orrs	r6, r0
    1ef6:	b2f6      	uxtb	r6, r6
    1ef8:	7666      	strb	r6, [r4, #25]
    1efa:	e7ea      	b.n	1ed2 <_slcd_sync_set_animation_period+0x42>
    1efc:	00002945 	.word	0x00002945

00001f00 <_slcd_sync_start_animation>:
{
    1f00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1f02:	46ce      	mov	lr, r9
    1f04:	4647      	mov	r7, r8
    1f06:	b580      	push	{r7, lr}
    1f08:	0005      	movs	r5, r0
    1f0a:	000e      	movs	r6, r1
    1f0c:	0014      	movs	r4, r2
	if (len > 16) {
    1f0e:	2a10      	cmp	r2, #16
    1f10:	d900      	bls.n	1f14 <_slcd_sync_start_animation+0x14>
    1f12:	e08e      	b.n	2032 <STACK_SIZE+0x32>
	for (i = 0; i < len; i++) {
    1f14:	2a00      	cmp	r2, #0
    1f16:	d012      	beq.n	1f3e <_slcd_sync_start_animation+0x3e>
		if ((SLCD_SEGNUM(segs[i]) != 2 && SLCD_SEGNUM(segs[i]) != 3)) {
    1f18:	780a      	ldrb	r2, [r1, #0]
    1f1a:	3a02      	subs	r2, #2
    1f1c:	2a01      	cmp	r2, #1
    1f1e:	d900      	bls.n	1f22 <_slcd_sync_start_animation+0x22>
    1f20:	e08a      	b.n	2038 <STACK_SIZE+0x38>
    1f22:	1d08      	adds	r0, r1, #4
    1f24:	00a1      	lsls	r1, r4, #2
    1f26:	1871      	adds	r1, r6, r1
    1f28:	27ff      	movs	r7, #255	; 0xff
	for (i = 0; i < len; i++) {
    1f2a:	4288      	cmp	r0, r1
    1f2c:	d007      	beq.n	1f3e <_slcd_sync_start_animation+0x3e>
		if ((SLCD_SEGNUM(segs[i]) != 2 && SLCD_SEGNUM(segs[i]) != 3)) {
    1f2e:	c804      	ldmia	r0!, {r2}
    1f30:	403a      	ands	r2, r7
    1f32:	3a02      	subs	r2, #2
    1f34:	2a01      	cmp	r2, #1
    1f36:	d9f8      	bls.n	1f2a <_slcd_sync_start_animation+0x2a>
			return ERR_INVALID_ARG;
    1f38:	200d      	movs	r0, #13
    1f3a:	4240      	negs	r0, r0
    1f3c:	e075      	b.n	202a <STACK_SIZE+0x2a>
	if (period > SLCD_FC_MAX_MS || period < SLCD_FC_MIN_MS) {
    1f3e:	4941      	ldr	r1, [pc, #260]	; (2044 <STACK_SIZE+0x44>)
    1f40:	001a      	movs	r2, r3
    1f42:	3a0f      	subs	r2, #15
    1f44:	428a      	cmp	r2, r1
    1f46:	d900      	bls.n	1f4a <_slcd_sync_start_animation+0x4a>
    1f48:	e079      	b.n	203e <STACK_SIZE+0x3e>
	_slcd_sync_set_animation_period(dev, period);
    1f4a:	0019      	movs	r1, r3
    1f4c:	0028      	movs	r0, r5
    1f4e:	4b3e      	ldr	r3, [pc, #248]	; (2048 <STACK_SIZE+0x48>)
    1f50:	4798      	blx	r3
	hri_slcd_clear_CTRLA_ENABLE_bit(dev->hw);
    1f52:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLA.reg &= ~SLCD_CTRLA_ENABLE;
    1f54:	6813      	ldr	r3, [r2, #0]
    1f56:	2102      	movs	r1, #2
    1f58:	438b      	bics	r3, r1
    1f5a:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1f5c:	3101      	adds	r1, #1
    1f5e:	6953      	ldr	r3, [r2, #20]
    1f60:	4219      	tst	r1, r3
    1f62:	d1fc      	bne.n	1f5e <_slcd_sync_start_animation+0x5e>
	hri_slcd_clear_CTRLD_CSREN_bit(dev->hw);
    1f64:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg &= ~SLCD_CTRLD_CSREN;
    1f66:	7a13      	ldrb	r3, [r2, #8]
    1f68:	2104      	movs	r1, #4
    1f6a:	438b      	bics	r3, r1
    1f6c:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    1f6e:	3103      	adds	r1, #3
    1f70:	6953      	ldr	r3, [r2, #20]
    1f72:	4219      	tst	r1, r3
    1f74:	d1fc      	bne.n	1f70 <_slcd_sync_start_animation+0x70>
	hri_slcd_wait_for_sync(dev->hw, SLCD_SYNCBUSY_ENABLE | SLCD_SYNCBUSY_CTRLD);
    1f76:	682a      	ldr	r2, [r5, #0]
    1f78:	2106      	movs	r1, #6
    1f7a:	6953      	ldr	r3, [r2, #20]
    1f7c:	4219      	tst	r1, r3
    1f7e:	d1fc      	bne.n	1f7a <_slcd_sync_start_animation+0x7a>
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_FCS(mask);
    1f80:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
    1f82:	2102      	movs	r1, #2
    1f84:	430b      	orrs	r3, r1
    1f86:	66d3      	str	r3, [r2, #108]	; 0x6c
	hri_slcd_write_CSRCFG_DATA_bf(dev->hw, 0);
    1f88:	682a      	ldr	r2, [r5, #0]
	tmp = ((Slcd *)hw)->CSRCFG.reg;
    1f8a:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
	tmp &= ~SLCD_CSRCFG_DATA_Msk;
    1f8c:	492f      	ldr	r1, [pc, #188]	; (204c <STACK_SIZE+0x4c>)
    1f8e:	400b      	ands	r3, r1
	((Slcd *)hw)->CSRCFG.reg = tmp;
    1f90:	66d3      	str	r3, [r2, #108]	; 0x6c
	for (i = 0; i < len; i++) {
    1f92:	2c00      	cmp	r4, #0
    1f94:	d029      	beq.n	1fea <_slcd_sync_start_animation+0xea>
    1f96:	0030      	movs	r0, r6
    1f98:	00a4      	lsls	r4, r4, #2
    1f9a:	1931      	adds	r1, r6, r4
    1f9c:	2400      	movs	r4, #0
		hri_slcd_set_CSRCFG_DATA_bf(dev->hw, (1 << ((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2))));
    1f9e:	26ff      	movs	r6, #255	; 0xff
    1fa0:	2301      	movs	r3, #1
    1fa2:	469c      	mov	ip, r3
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_DATA(mask);
    1fa4:	4b2a      	ldr	r3, [pc, #168]	; (2050 <STACK_SIZE+0x50>)
    1fa6:	4698      	mov	r8, r3
    1fa8:	e002      	b.n	1fb0 <_slcd_sync_start_animation+0xb0>
    1faa:	3004      	adds	r0, #4
	for (i = 0; i < len; i++) {
    1fac:	4288      	cmp	r0, r1
    1fae:	d01c      	beq.n	1fea <_slcd_sync_start_animation+0xea>
		hri_slcd_set_CSRCFG_DATA_bf(dev->hw, (1 << ((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2))));
    1fb0:	682f      	ldr	r7, [r5, #0]
    1fb2:	6802      	ldr	r2, [r0, #0]
    1fb4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    1fb6:	4699      	mov	r9, r3
    1fb8:	0c13      	lsrs	r3, r2, #16
    1fba:	4033      	ands	r3, r6
    1fbc:	005b      	lsls	r3, r3, #1
    1fbe:	4032      	ands	r2, r6
    1fc0:	3a02      	subs	r2, #2
    1fc2:	189a      	adds	r2, r3, r2
    1fc4:	4663      	mov	r3, ip
    1fc6:	4093      	lsls	r3, r2
    1fc8:	021b      	lsls	r3, r3, #8
    1fca:	4642      	mov	r2, r8
    1fcc:	4013      	ands	r3, r2
    1fce:	464a      	mov	r2, r9
    1fd0:	4313      	orrs	r3, r2
    1fd2:	66fb      	str	r3, [r7, #108]	; 0x6c
		if (((SLCD_COMNUM(segs[i]) * 2) + (SLCD_SEGNUM(segs[i]) - 2)) > csrlen) {
    1fd4:	6802      	ldr	r2, [r0, #0]
    1fd6:	0c13      	lsrs	r3, r2, #16
    1fd8:	4033      	ands	r3, r6
    1fda:	005b      	lsls	r3, r3, #1
    1fdc:	4032      	ands	r2, r6
    1fde:	3a02      	subs	r2, #2
    1fe0:	189b      	adds	r3, r3, r2
    1fe2:	429c      	cmp	r4, r3
    1fe4:	d2e1      	bcs.n	1faa <_slcd_sync_start_animation+0xaa>
    1fe6:	001c      	movs	r4, r3
    1fe8:	e7df      	b.n	1faa <_slcd_sync_start_animation+0xaa>
	hri_slcd_set_CSRCFG_SIZE_bf(dev->hw, csrlen + 1);
    1fea:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CSRCFG.reg |= SLCD_CSRCFG_SIZE(mask);
    1fec:	6ed1      	ldr	r1, [r2, #108]	; 0x6c
    1fee:	3401      	adds	r4, #1
    1ff0:	0124      	lsls	r4, r4, #4
    1ff2:	23ff      	movs	r3, #255	; 0xff
    1ff4:	401c      	ands	r4, r3
    1ff6:	430c      	orrs	r4, r1
    1ff8:	66d4      	str	r4, [r2, #108]	; 0x6c
	hri_slcd_set_BCFG_MODE_bit(dev->hw);
    1ffa:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->BCFG.reg |= SLCD_BCFG_MODE;
    1ffc:	6e93      	ldr	r3, [r2, #104]	; 0x68
    1ffe:	2101      	movs	r1, #1
    2000:	430b      	orrs	r3, r1
    2002:	6693      	str	r3, [r2, #104]	; 0x68
	hri_slcd_set_CTRLD_CSREN_bit(dev->hw);
    2004:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLD.reg |= SLCD_CTRLD_CSREN;
    2006:	7a13      	ldrb	r3, [r2, #8]
    2008:	3103      	adds	r1, #3
    200a:	430b      	orrs	r3, r1
    200c:	7213      	strb	r3, [r2, #8]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    200e:	3103      	adds	r1, #3
    2010:	6953      	ldr	r3, [r2, #20]
    2012:	4219      	tst	r1, r3
    2014:	d1fc      	bne.n	2010 <STACK_SIZE+0x10>
	hri_slcd_set_CTRLA_ENABLE_bit(dev->hw);
    2016:	682a      	ldr	r2, [r5, #0]
	((Slcd *)hw)->CTRLA.reg |= SLCD_CTRLA_ENABLE;
    2018:	6813      	ldr	r3, [r2, #0]
    201a:	2102      	movs	r1, #2
    201c:	430b      	orrs	r3, r1
    201e:	6013      	str	r3, [r2, #0]
	while (((Slcd *)hw)->SYNCBUSY.reg & reg) {
    2020:	3101      	adds	r1, #1
    2022:	6953      	ldr	r3, [r2, #20]
    2024:	4219      	tst	r1, r3
    2026:	d1fc      	bne.n	2022 <STACK_SIZE+0x22>
	return ERR_NONE;
    2028:	2000      	movs	r0, #0
}
    202a:	bc0c      	pop	{r2, r3}
    202c:	4690      	mov	r8, r2
    202e:	4699      	mov	r9, r3
    2030:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return ERR_INVALID_ARG;
    2032:	200d      	movs	r0, #13
    2034:	4240      	negs	r0, r0
    2036:	e7f8      	b.n	202a <STACK_SIZE+0x2a>
			return ERR_INVALID_ARG;
    2038:	200d      	movs	r0, #13
    203a:	4240      	negs	r0, r0
    203c:	e7f5      	b.n	202a <STACK_SIZE+0x2a>
		return ERR_INVALID_ARG;
    203e:	200d      	movs	r0, #13
    2040:	4240      	negs	r0, r0
    2042:	e7f2      	b.n	202a <STACK_SIZE+0x2a>
    2044:	00000ef1 	.word	0x00000ef1
    2048:	00001e91 	.word	0x00001e91
    204c:	ff0000ff 	.word	0xff0000ff
    2050:	00ffff00 	.word	0x00ffff00

00002054 <main>:
static int32_t s_autoc_buf[WINDOW_SIZE * 2];

// =============================================================================
// main code

int main(void) {
    2054:	b5f0      	push	{r4, r5, r6, r7, lr}
    2056:	46d6      	mov	lr, sl
    2058:	464f      	mov	r7, r9
    205a:	4646      	mov	r6, r8
    205c:	b5c0      	push	{r6, r7, lr}
    205e:	b090      	sub	sp, #64	; 0x40
  atmel_start_init();
    2060:	4b7a      	ldr	r3, [pc, #488]	; (224c <main+0x1f8>)
    2062:	4798      	blx	r3
  adxl345_err_t err;
  adxl345_t adxl345;
  adxl345_dev_t adxl345_dev;

  /* Replace with your application code */
  slcd_sync_enable(&SEGMENT_LCD_0);
    2064:	4c7a      	ldr	r4, [pc, #488]	; (2250 <main+0x1fc>)
    2066:	0020      	movs	r0, r4
    2068:	4b7a      	ldr	r3, [pc, #488]	; (2254 <main+0x200>)
    206a:	4798      	blx	r3

// =============================================================================
// local functions

static void turn_on_segments(void) {
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N0);
    206c:	21c0      	movs	r1, #192	; 0xc0
    206e:	0289      	lsls	r1, r1, #10
    2070:	0020      	movs	r0, r4
    2072:	4d79      	ldr	r5, [pc, #484]	; (2258 <main+0x204>)
    2074:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N1);
    2076:	2180      	movs	r1, #128	; 0x80
    2078:	02c9      	lsls	r1, r1, #11
    207a:	0020      	movs	r0, r4
    207c:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N2);
    207e:	21a0      	movs	r1, #160	; 0xa0
    2080:	02c9      	lsls	r1, r1, #11
    2082:	0020      	movs	r0, r4
    2084:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N3);
    2086:	21c0      	movs	r1, #192	; 0xc0
    2088:	02c9      	lsls	r1, r1, #11
    208a:	0020      	movs	r0, r4
    208c:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_N4);
    208e:	21e0      	movs	r1, #224	; 0xe0
    2090:	02c9      	lsls	r1, r1, #11
    2092:	0020      	movs	r0, r4
    2094:	47a8      	blx	r5

  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S0);
    2096:	2115      	movs	r1, #21
    2098:	0020      	movs	r0, r4
    209a:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S1);
    209c:	2114      	movs	r1, #20
    209e:	0020      	movs	r0, r4
    20a0:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S2);
    20a2:	2113      	movs	r1, #19
    20a4:	0020      	movs	r0, r4
    20a6:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S3);
    20a8:	2116      	movs	r1, #22
    20aa:	0020      	movs	r0, r4
    20ac:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S4);
    20ae:	210e      	movs	r1, #14
    20b0:	0020      	movs	r0, r4
    20b2:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S5);
    20b4:	210d      	movs	r1, #13
    20b6:	0020      	movs	r0, r4
    20b8:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S6);
    20ba:	210f      	movs	r1, #15
    20bc:	0020      	movs	r0, r4
    20be:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_S7);
    20c0:	2117      	movs	r1, #23
    20c2:	0020      	movs	r0, r4
    20c4:	47a8      	blx	r5

  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D01);
    20c6:	2110      	movs	r1, #16
    20c8:	0020      	movs	r0, r4
    20ca:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D02);
    20cc:	2111      	movs	r1, #17
    20ce:	0020      	movs	r0, r4
    20d0:	47a8      	blx	r5
  slcd_sync_seg_on(&SEGMENT_LCD_0, TSLCD_SEG_D03);
    20d2:	2112      	movs	r1, #18
    20d4:	0020      	movs	r0, r4
    20d6:	47a8      	blx	r5
}

static void blink_segments(void) {
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B0, 1000);
    20d8:	25fa      	movs	r5, #250	; 0xfa
    20da:	00ad      	lsls	r5, r5, #2
    20dc:	002a      	movs	r2, r5
    20de:	2180      	movs	r1, #128	; 0x80
    20e0:	0249      	lsls	r1, r1, #9
    20e2:	0020      	movs	r0, r4
    20e4:	4e5d      	ldr	r6, [pc, #372]	; (225c <main+0x208>)
    20e6:	47b0      	blx	r6
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B1, 1000);
    20e8:	002a      	movs	r2, r5
    20ea:	2180      	movs	r1, #128	; 0x80
    20ec:	0289      	lsls	r1, r1, #10
    20ee:	0020      	movs	r0, r4
    20f0:	47b0      	blx	r6
  slcd_sync_seg_blink(&SEGMENT_LCD_0, TSLCD_SEG_B2, 1000);
    20f2:	002a      	movs	r2, r5
    20f4:	2100      	movs	r1, #0
    20f6:	0020      	movs	r0, r4
    20f8:	47b0      	blx	r6
}

static void animation_segments(void) {
  uint32_t segs[8] = {TSLCD_SEG_W0,  TSLCD_SEG_W1,  TSLCD_SEG_W2,
    20fa:	a904      	add	r1, sp, #16
    20fc:	4b58      	ldr	r3, [pc, #352]	; (2260 <main+0x20c>)
    20fe:	000a      	movs	r2, r1
    2100:	cbc1      	ldmia	r3!, {r0, r6, r7}
    2102:	c2c1      	stmia	r2!, {r0, r6, r7}
    2104:	cbc1      	ldmia	r3!, {r0, r6, r7}
    2106:	c2c1      	stmia	r2!, {r0, r6, r7}
    2108:	cb41      	ldmia	r3!, {r0, r6}
    210a:	c241      	stmia	r2!, {r0, r6}
                      TSLCD_SEG_W3,  TSLCD_SEG_BT0, TSLCD_SEG_BT1,
                      TSLCD_SEG_BT2, TSLCD_SEG_BT3};
  slcd_sync_start_animation(&SEGMENT_LCD_0, segs, 8, 1000);
    210c:	002b      	movs	r3, r5
    210e:	2208      	movs	r2, #8
    2110:	0020      	movs	r0, r4
    2112:	4d54      	ldr	r5, [pc, #336]	; (2264 <main+0x210>)
    2114:	47a8      	blx	r5
}

static void display_characters(void) {
  slcd_sync_write_char(&SEGMENT_LCD_0, '0', 0);
    2116:	2200      	movs	r2, #0
    2118:	2130      	movs	r1, #48	; 0x30
    211a:	0020      	movs	r0, r4
    211c:	4d52      	ldr	r5, [pc, #328]	; (2268 <main+0x214>)
    211e:	47a8      	blx	r5
  slcd_sync_write_char(&SEGMENT_LCD_0, '1', 1);
    2120:	2201      	movs	r2, #1
    2122:	2131      	movs	r1, #49	; 0x31
    2124:	0020      	movs	r0, r4
    2126:	47a8      	blx	r5
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"234", 3, 2);
    2128:	2302      	movs	r3, #2
    212a:	2203      	movs	r2, #3
    212c:	494f      	ldr	r1, [pc, #316]	; (226c <main+0x218>)
    212e:	0020      	movs	r0, r4
    2130:	4d4f      	ldr	r5, [pc, #316]	; (2270 <main+0x21c>)
    2132:	47a8      	blx	r5
  slcd_sync_write_string(&SEGMENT_LCD_0, (uint8_t *)"abcdefgh", 8, 5);
    2134:	2305      	movs	r3, #5
    2136:	2208      	movs	r2, #8
    2138:	494e      	ldr	r1, [pc, #312]	; (2274 <main+0x220>)
    213a:	0020      	movs	r0, r4
    213c:	47a8      	blx	r5
  err = adxl345_dev_init(&adxl345_dev, &ADXL345_0, ADXL345_I2C_PRIMARY_ADDRESS,
    213e:	2380      	movs	r3, #128	; 0x80
    2140:	011b      	lsls	r3, r3, #4
    2142:	2253      	movs	r2, #83	; 0x53
    2144:	494c      	ldr	r1, [pc, #304]	; (2278 <main+0x224>)
    2146:	a80c      	add	r0, sp, #48	; 0x30
    2148:	4c4c      	ldr	r4, [pc, #304]	; (227c <main+0x228>)
    214a:	47a0      	blx	r4
    214c:	0001      	movs	r1, r0
  printf("adxl345_dev_init() => %d\n", err);
    214e:	484c      	ldr	r0, [pc, #304]	; (2280 <main+0x22c>)
    2150:	4c4c      	ldr	r4, [pc, #304]	; (2284 <main+0x230>)
    2152:	47a0      	blx	r4
  err = adxl345_init(&adxl345, &adxl345_dev);
    2154:	a90c      	add	r1, sp, #48	; 0x30
    2156:	a80f      	add	r0, sp, #60	; 0x3c
    2158:	4b4b      	ldr	r3, [pc, #300]	; (2288 <main+0x234>)
    215a:	4798      	blx	r3
    215c:	0001      	movs	r1, r0
  printf("adxl345_init() => %d\n", err);
    215e:	484b      	ldr	r0, [pc, #300]	; (228c <main+0x238>)
    2160:	47a0      	blx	r4
  err = adxl345_stop(&adxl345);
    2162:	a80f      	add	r0, sp, #60	; 0x3c
    2164:	4b4a      	ldr	r3, [pc, #296]	; (2290 <main+0x23c>)
    2166:	4798      	blx	r3
    2168:	0001      	movs	r1, r0
  printf("adxl345_stop() => %d\n", err);
    216a:	484a      	ldr	r0, [pc, #296]	; (2294 <main+0x240>)
    216c:	47a0      	blx	r4
  err = adxl345_set_bw_rate_reg(&adxl345, ADXL345_RATE_200);
    216e:	210b      	movs	r1, #11
    2170:	a80f      	add	r0, sp, #60	; 0x3c
    2172:	4b49      	ldr	r3, [pc, #292]	; (2298 <main+0x244>)
    2174:	4798      	blx	r3
    2176:	0001      	movs	r1, r0
  printf("adxl345_set_bw_rate_reg() => %d\n", err);
    2178:	4848      	ldr	r0, [pc, #288]	; (229c <main+0x248>)
    217a:	47a0      	blx	r4
  err = adxl345_set_fifo_ctl_reg(&adxl345, ADXL345_FIFO_MODE_ENABLE | 1);
    217c:	2141      	movs	r1, #65	; 0x41
    217e:	a80f      	add	r0, sp, #60	; 0x3c
    2180:	4b47      	ldr	r3, [pc, #284]	; (22a0 <main+0x24c>)
    2182:	4798      	blx	r3
    2184:	0001      	movs	r1, r0
  printf("adxl345_set_fifo_ctl_reg() => %d\n", err);
    2186:	4847      	ldr	r0, [pc, #284]	; (22a4 <main+0x250>)
    2188:	47a0      	blx	r4
  err = adxl345_start(&adxl345);
    218a:	a80f      	add	r0, sp, #60	; 0x3c
    218c:	4b46      	ldr	r3, [pc, #280]	; (22a8 <main+0x254>)
    218e:	4798      	blx	r3
    2190:	0001      	movs	r1, r0
  printf("adxl345_start() => %d\n", err);
    2192:	4846      	ldr	r0, [pc, #280]	; (22ac <main+0x258>)
    2194:	47a0      	blx	r4
  s_high_water = 0;
    2196:	4b46      	ldr	r3, [pc, #280]	; (22b0 <main+0x25c>)
    2198:	2200      	movs	r2, #0
    219a:	701a      	strb	r2, [r3, #0]
  s_samples_read = 0;
    219c:	605a      	str	r2, [r3, #4]
  s_total_x = 0.0;
    219e:	2200      	movs	r2, #0
    21a0:	609a      	str	r2, [r3, #8]
static void process_samples(adxl345_t *adxl345) {
  uint8_t reg, available;
  // adxl345_err_t err;

  // Read FIFO status register to find how many samples ara available
  adxl345_get_fifo_status_reg(adxl345, &reg);
    21a2:	4e44      	ldr	r6, [pc, #272]	; (22b4 <main+0x260>)
  available = reg & 0x1f;
  // note high water mark
  if (available > s_high_water) s_high_water = available;
    21a4:	001d      	movs	r5, r3
    21a6:	e020      	b.n	21ea <main+0x196>
    21a8:	3b01      	subs	r3, #1
  set_test_pin(true);
  p_max = 0;
  i_max = -1;

  for (int i=0; i<WINDOW_SIZE; i++) {
    for (int j=0; j<WINDOW_SIZE; j++) {
    21aa:	2b00      	cmp	r3, #0
    21ac:	d003      	beq.n	21b6 <main+0x162>
      uint32_t p = s_autoc_buf[j] * s_autoc_buf[j+i];
      if ((p > p_max) || (i_max <= 0)) {
    21ae:	2a00      	cmp	r2, #0
    21b0:	dcfa      	bgt.n	21a8 <main+0x154>
    21b2:	000a      	movs	r2, r1
    21b4:	e7f8      	b.n	21a8 <main+0x154>
  for (int i=0; i<WINDOW_SIZE; i++) {
    21b6:	3001      	adds	r0, #1
    21b8:	42a0      	cmp	r0, r4
    21ba:	d003      	beq.n	21c4 <main+0x170>
  for (int i = 0; i < available; i++) {
    21bc:	2380      	movs	r3, #128	; 0x80
    21be:	005b      	lsls	r3, r3, #1
      if ((p > p_max) || (i_max <= 0)) {
    21c0:	0001      	movs	r1, r0
    21c2:	e7f4      	b.n	21ae <main+0x15a>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    21c4:	2108      	movs	r1, #8
    21c6:	238a      	movs	r3, #138	; 0x8a
    21c8:	005b      	lsls	r3, r3, #1
    21ca:	22c0      	movs	r2, #192	; 0xc0
    21cc:	05d2      	lsls	r2, r2, #23
    21ce:	50d1      	str	r1, [r2, r3]
    printf("%d %5ld %f\n", s_high_water, s_samples_read, s_total_x);
    21d0:	4b37      	ldr	r3, [pc, #220]	; (22b0 <main+0x25c>)
    21d2:	685f      	ldr	r7, [r3, #4]
    21d4:	781c      	ldrb	r4, [r3, #0]
    21d6:	6898      	ldr	r0, [r3, #8]
    21d8:	4b37      	ldr	r3, [pc, #220]	; (22b8 <main+0x264>)
    21da:	4798      	blx	r3
    21dc:	9000      	str	r0, [sp, #0]
    21de:	9101      	str	r1, [sp, #4]
    21e0:	003a      	movs	r2, r7
    21e2:	0021      	movs	r1, r4
    21e4:	4835      	ldr	r0, [pc, #212]	; (22bc <main+0x268>)
    21e6:	4b27      	ldr	r3, [pc, #156]	; (2284 <main+0x230>)
    21e8:	4798      	blx	r3
  adxl345_get_fifo_status_reg(adxl345, &reg);
    21ea:	240f      	movs	r4, #15
    21ec:	446c      	add	r4, sp
    21ee:	0021      	movs	r1, r4
    21f0:	a80f      	add	r0, sp, #60	; 0x3c
    21f2:	47b0      	blx	r6
  available = reg & 0x1f;
    21f4:	7822      	ldrb	r2, [r4, #0]
    21f6:	231f      	movs	r3, #31
    21f8:	4013      	ands	r3, r2
  if (available > s_high_water) s_high_water = available;
    21fa:	782a      	ldrb	r2, [r5, #0]
    21fc:	429a      	cmp	r2, r3
    21fe:	d201      	bcs.n	2204 <main+0x1b0>
    2200:	4a2b      	ldr	r2, [pc, #172]	; (22b0 <main+0x25c>)
    2202:	7013      	strb	r3, [r2, #0]
  for (int i = 0; i < available; i++) {
    2204:	1e1c      	subs	r4, r3, #0
    2206:	dd15      	ble.n	2234 <main+0x1e0>
    2208:	2300      	movs	r3, #0
    220a:	4698      	mov	r8, r3
  adxl345_get_sample(adxl345, &sample);
    220c:	4b2c      	ldr	r3, [pc, #176]	; (22c0 <main+0x26c>)
    220e:	469a      	mov	sl, r3
  s_samples_read += 1;
    2210:	4f27      	ldr	r7, [pc, #156]	; (22b0 <main+0x25c>)
  s_total_x += sample.x;
    2212:	4b2c      	ldr	r3, [pc, #176]	; (22c4 <main+0x270>)
    2214:	4699      	mov	r9, r3
  adxl345_get_sample(adxl345, &sample);
    2216:	a904      	add	r1, sp, #16
    2218:	a80f      	add	r0, sp, #60	; 0x3c
    221a:	47d0      	blx	sl
  s_samples_read += 1;
    221c:	687b      	ldr	r3, [r7, #4]
    221e:	3301      	adds	r3, #1
    2220:	607b      	str	r3, [r7, #4]
  s_total_x += sample.x;
    2222:	68b9      	ldr	r1, [r7, #8]
    2224:	9804      	ldr	r0, [sp, #16]
    2226:	47c8      	blx	r9
    2228:	60b8      	str	r0, [r7, #8]
  for (int i = 0; i < available; i++) {
    222a:	2301      	movs	r3, #1
    222c:	469c      	mov	ip, r3
    222e:	44e0      	add	r8, ip
    2230:	4544      	cmp	r4, r8
    2232:	dcf0      	bgt.n	2216 <main+0x1c2>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    2234:	2108      	movs	r1, #8
    2236:	238c      	movs	r3, #140	; 0x8c
    2238:	005b      	lsls	r3, r3, #1
    223a:	22c0      	movs	r2, #192	; 0xc0
    223c:	05d2      	lsls	r2, r2, #23
    223e:	50d1      	str	r1, [r2, r3]
  for (int i=0; i<WINDOW_SIZE; i++) {
    2240:	2000      	movs	r0, #0
  i_max = -1;
    2242:	2201      	movs	r2, #1
    2244:	4252      	negs	r2, r2
  for (int i=0; i<WINDOW_SIZE; i++) {
    2246:	2480      	movs	r4, #128	; 0x80
    2248:	0064      	lsls	r4, r4, #1
    224a:	e7b7      	b.n	21bc <main+0x168>
    224c:	00000331 	.word	0x00000331
    2250:	20000ae0 	.word	0x20000ae0
    2254:	00000b25 	.word	0x00000b25
    2258:	00000b4d 	.word	0x00000b4d
    225c:	00000b79 	.word	0x00000b79
    2260:	00009f78 	.word	0x00009f78
    2264:	00000c55 	.word	0x00000c55
    2268:	00000bb1 	.word	0x00000bb1
    226c:	00009f98 	.word	0x00009f98
    2270:	00000be1 	.word	0x00000be1
    2274:	00009f9c 	.word	0x00009f9c
    2278:	20000af0 	.word	0x20000af0
    227c:	000002a5 	.word	0x000002a5
    2280:	00009fa8 	.word	0x00009fa8
    2284:	00004819 	.word	0x00004819
    2288:	0000011d 	.word	0x0000011d
    228c:	00009fc4 	.word	0x00009fc4
    2290:	000001ed 	.word	0x000001ed
    2294:	00009fdc 	.word	0x00009fdc
    2298:	00000145 	.word	0x00000145
    229c:	00009ff4 	.word	0x00009ff4
    22a0:	00000195 	.word	0x00000195
    22a4:	0000a018 	.word	0x0000a018
    22a8:	000001bd 	.word	0x000001bd
    22ac:	0000a03c 	.word	0x0000a03c
    22b0:	20000a4c 	.word	0x20000a4c
    22b4:	000001a9 	.word	0x000001a9
    22b8:	00004231 	.word	0x00004231
    22bc:	0000a054 	.word	0x0000a054
    22c0:	0000021d 	.word	0x0000021d
    22c4:	00002c1d 	.word	0x00002c1d

000022c8 <touch_timer_handler>:
Input  : none
Output : none
Notes  :
============================================================================*/
void touch_timer_handler(void)
{
    22c8:	b510      	push	{r4, lr}
	/* Count complete - Measure touch sensors */
	time_to_measure_touch_flag = 1u;
    22ca:	2201      	movs	r2, #1
    22cc:	4b02      	ldr	r3, [pc, #8]	; (22d8 <touch_timer_handler+0x10>)
    22ce:	705a      	strb	r2, [r3, #1]
	qtm_update_qtlib_timer(DEF_TOUCH_MEASUREMENT_PERIOD_MS);
    22d0:	2014      	movs	r0, #20
    22d2:	4b02      	ldr	r3, [pc, #8]	; (22dc <touch_timer_handler+0x14>)
    22d4:	4798      	blx	r3
}
    22d6:	bd10      	pop	{r4, pc}
    22d8:	20000a58 	.word	0x20000a58
    22dc:	0000248d 	.word	0x0000248d

000022e0 <Timer_task_cb>:

void Timer_task_cb(const struct timer_task *const timer_task)
{
    22e0:	b510      	push	{r4, lr}
	touch_timer_handler();
    22e2:	4b01      	ldr	r3, [pc, #4]	; (22e8 <Timer_task_cb+0x8>)
    22e4:	4798      	blx	r3
}
    22e6:	bd10      	pop	{r4, pc}
    22e8:	000022c9 	.word	0x000022c9

000022ec <touch_timer_config>:

void touch_timer_config(void)
{
    22ec:	b510      	push	{r4, lr}
	static struct timer_task Timer_task;
#if (KRONO_GESTURE_ENABLE == 1u)
	Timer_task.interval = 1;
#else
	Timer_task.interval = DEF_TOUCH_MEASUREMENT_PERIOD_MS;
    22ee:	4908      	ldr	r1, [pc, #32]	; (2310 <touch_timer_config+0x24>)
    22f0:	2314      	movs	r3, #20
    22f2:	60cb      	str	r3, [r1, #12]
#endif
	Timer_task.cb   = Timer_task_cb;
    22f4:	4b07      	ldr	r3, [pc, #28]	; (2314 <touch_timer_config+0x28>)
    22f6:	610b      	str	r3, [r1, #16]
	Timer_task.mode = TIMER_TASK_REPEAT;
    22f8:	2301      	movs	r3, #1
    22fa:	750b      	strb	r3, [r1, #20]

	timer_add_task(&Timer, &Timer_task);
    22fc:	3104      	adds	r1, #4
    22fe:	4c06      	ldr	r4, [pc, #24]	; (2318 <touch_timer_config+0x2c>)
    2300:	0020      	movs	r0, r4
    2302:	4b06      	ldr	r3, [pc, #24]	; (231c <touch_timer_config+0x30>)
    2304:	4798      	blx	r3
	timer_start(&Timer);
    2306:	0020      	movs	r0, r4
    2308:	4b05      	ldr	r3, [pc, #20]	; (2320 <touch_timer_config+0x34>)
    230a:	4798      	blx	r3
}
    230c:	bd10      	pop	{r4, pc}
    230e:	46c0      	nop			; (mov r8, r8)
    2310:	20000a58 	.word	0x20000a58
    2314:	000022e1 	.word	0x000022e1
    2318:	20000ac4 	.word	0x20000ac4
    231c:	00000e19 	.word	0x00000e19
    2320:	00000ddd 	.word	0x00000ddd

00002324 <touch_init>:
{
    2324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	touch_timer_config();
    2326:	4b12      	ldr	r3, [pc, #72]	; (2370 <touch_init+0x4c>)
    2328:	4798      	blx	r3
	qtm_ptc_init_acquisition_module(&qtlib_acq_set1);
    232a:	4812      	ldr	r0, [pc, #72]	; (2374 <touch_init+0x50>)
    232c:	4b12      	ldr	r3, [pc, #72]	; (2378 <touch_init+0x54>)
    232e:	4798      	blx	r3
	qtm_ptc_qtlib_assign_signal_memory(&touch_acq_signals_raw[0]);
    2330:	4812      	ldr	r0, [pc, #72]	; (237c <touch_init+0x58>)
    2332:	4b13      	ldr	r3, [pc, #76]	; (2380 <touch_init+0x5c>)
    2334:	4798      	blx	r3
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++)
    2336:	2400      	movs	r4, #0
		qtm_enable_sensor_node(&qtlib_acq_set1, sensor_nodes);
    2338:	4d0e      	ldr	r5, [pc, #56]	; (2374 <touch_init+0x50>)
    233a:	4f12      	ldr	r7, [pc, #72]	; (2384 <touch_init+0x60>)
		qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_nodes);
    233c:	4e12      	ldr	r6, [pc, #72]	; (2388 <touch_init+0x64>)
		qtm_enable_sensor_node(&qtlib_acq_set1, sensor_nodes);
    233e:	0021      	movs	r1, r4
    2340:	0028      	movs	r0, r5
    2342:	47b8      	blx	r7
		qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_nodes);
    2344:	0021      	movs	r1, r4
    2346:	0028      	movs	r0, r5
    2348:	47b0      	blx	r6
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++)
    234a:	3401      	adds	r4, #1
    234c:	b2a4      	uxth	r4, r4
    234e:	2c05      	cmp	r4, #5
    2350:	d1f5      	bne.n	233e <touch_init+0x1a>
    2352:	4d0e      	ldr	r5, [pc, #56]	; (238c <touch_init+0x68>)
    2354:	2400      	movs	r4, #0
		qtm_init_sensor_key(&qtlib_key_set1, sensor_nodes, &ptc_qtlib_node_stat1[sensor_nodes]);
    2356:	4e07      	ldr	r6, [pc, #28]	; (2374 <touch_init+0x50>)
    2358:	360c      	adds	r6, #12
    235a:	4f0d      	ldr	r7, [pc, #52]	; (2390 <touch_init+0x6c>)
    235c:	b2e1      	uxtb	r1, r4
    235e:	002a      	movs	r2, r5
    2360:	0030      	movs	r0, r6
    2362:	47b8      	blx	r7
	for (sensor_nodes = 0u; sensor_nodes < DEF_NUM_CHANNELS; sensor_nodes++) {
    2364:	3401      	adds	r4, #1
    2366:	b2a4      	uxth	r4, r4
    2368:	3506      	adds	r5, #6
    236a:	2c05      	cmp	r4, #5
    236c:	d1f6      	bne.n	235c <touch_init+0x38>
}
    236e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2370:	000022ed 	.word	0x000022ed
    2374:	20000000 	.word	0x20000000
    2378:	0000271d 	.word	0x0000271d
    237c:	20000b38 	.word	0x20000b38
    2380:	000027e5 	.word	0x000027e5
    2384:	000027f9 	.word	0x000027f9
    2388:	00002819 	.word	0x00002819
    238c:	20000b18 	.word	0x20000b18
    2390:	0000249d 	.word	0x0000249d

00002394 <PTC_Handler>:
Input  : none
Output : none
Notes  : none
============================================================================*/
void PTC_Handler(void)
{
    2394:	b510      	push	{r4, lr}
	qtm_ptc_clear_interrupt();
    2396:	4b02      	ldr	r3, [pc, #8]	; (23a0 <PTC_Handler+0xc>)
    2398:	4798      	blx	r3
	qtm_saml22_ptc_handler_eoc();
    239a:	4b02      	ldr	r3, [pc, #8]	; (23a4 <PTC_Handler+0x10>)
    239c:	4798      	blx	r3
}
    239e:	bd10      	pop	{r4, pc}
    23a0:	00002869 	.word	0x00002869
    23a4:	0000288d 	.word	0x0000288d

000023a8 <_read>:
#include <stdio.h>

int __attribute__((weak)) _read(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _read(int file, char *ptr, int len)
{
    23a8:	b510      	push	{r4, lr}
    23aa:	000b      	movs	r3, r1
	int n = 0;

	if (file != 0) {
    23ac:	2800      	cmp	r0, #0
    23ae:	d109      	bne.n	23c4 <_read+0x1c>
		return -1;
	}

	n = stdio_io_read((uint8_t *)ptr, len);
    23b0:	0011      	movs	r1, r2
    23b2:	0018      	movs	r0, r3
    23b4:	4b05      	ldr	r3, [pc, #20]	; (23cc <_read+0x24>)
    23b6:	4798      	blx	r3
    23b8:	2800      	cmp	r0, #0
    23ba:	db00      	blt.n	23be <_read+0x16>
	if (n < 0) {
		return -1;
	}

	return n;
}
    23bc:	bd10      	pop	{r4, pc}
    23be:	2001      	movs	r0, #1
    23c0:	4240      	negs	r0, r0
    23c2:	e7fb      	b.n	23bc <_read+0x14>
		return -1;
    23c4:	2001      	movs	r0, #1
    23c6:	4240      	negs	r0, r0
    23c8:	e7f8      	b.n	23bc <_read+0x14>
    23ca:	46c0      	nop			; (mov r8, r8)
    23cc:	00002425 	.word	0x00002425

000023d0 <_write>:
#include <stdio.h>

int __attribute__((weak)) _write(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _write(int file, char *ptr, int len)
{
    23d0:	b510      	push	{r4, lr}
    23d2:	000b      	movs	r3, r1
	int n = 0;

	if ((file != 1) && (file != 2) && (file != 3)) {
    23d4:	3801      	subs	r0, #1
    23d6:	2802      	cmp	r0, #2
    23d8:	d809      	bhi.n	23ee <_write+0x1e>
		return -1;
	}

	n = stdio_io_write((const uint8_t *)ptr, len);
    23da:	0011      	movs	r1, r2
    23dc:	0018      	movs	r0, r3
    23de:	4b05      	ldr	r3, [pc, #20]	; (23f4 <_write+0x24>)
    23e0:	4798      	blx	r3
    23e2:	2800      	cmp	r0, #0
    23e4:	db00      	blt.n	23e8 <_write+0x18>
	if (n < 0) {
		return -1;
	}

	return n;
}
    23e6:	bd10      	pop	{r4, pc}
    23e8:	2001      	movs	r0, #1
    23ea:	4240      	negs	r0, r0
    23ec:	e7fb      	b.n	23e6 <_write+0x16>
		return -1;
    23ee:	2001      	movs	r0, #1
    23f0:	4240      	negs	r0, r0
    23f2:	e7f8      	b.n	23e6 <_write+0x16>
    23f4:	00002449 	.word	0x00002449

000023f8 <stdio_io_init>:

/** IO descriptor for STDIO access. */
static struct io_descriptor *stdio_io = NULL;

void stdio_io_init(struct io_descriptor *io)
{
    23f8:	b570      	push	{r4, r5, r6, lr}
    23fa:	0006      	movs	r6, r0
#if defined(__GNUC__)
	/* Specify that stdout and stdin should not be buffered. */
	setbuf(stdout, NULL);
    23fc:	4d06      	ldr	r5, [pc, #24]	; (2418 <stdio_io_init+0x20>)
    23fe:	682b      	ldr	r3, [r5, #0]
    2400:	6898      	ldr	r0, [r3, #8]
    2402:	2100      	movs	r1, #0
    2404:	4c05      	ldr	r4, [pc, #20]	; (241c <stdio_io_init+0x24>)
    2406:	47a0      	blx	r4
	setbuf(stdin, NULL);
    2408:	682b      	ldr	r3, [r5, #0]
    240a:	6858      	ldr	r0, [r3, #4]
    240c:	2100      	movs	r1, #0
    240e:	47a0      	blx	r4
	 * and AVR GCC library:
	 * - printf() emits one character at a time.
	 * - getchar() requests only 1 byte to exit.
	 */
#endif
	stdio_io = io;
    2410:	4b03      	ldr	r3, [pc, #12]	; (2420 <stdio_io_init+0x28>)
    2412:	601e      	str	r6, [r3, #0]
}
    2414:	bd70      	pop	{r4, r5, r6, pc}
    2416:	46c0      	nop			; (mov r8, r8)
    2418:	2000007c 	.word	0x2000007c
    241c:	0000483d 	.word	0x0000483d
    2420:	20000a70 	.word	0x20000a70

00002424 <stdio_io_read>:
{
	stdio_io = io;
}

int32_t stdio_io_read(uint8_t *buf, const int32_t len)
{
    2424:	b510      	push	{r4, lr}
    2426:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    2428:	4b05      	ldr	r3, [pc, #20]	; (2440 <stdio_io_read+0x1c>)
    242a:	6818      	ldr	r0, [r3, #0]
    242c:	2800      	cmp	r0, #0
    242e:	d004      	beq.n	243a <stdio_io_read+0x16>
		return 0;
	}
	return io_read(stdio_io, buf, len);
    2430:	b28a      	uxth	r2, r1
    2432:	0021      	movs	r1, r4
    2434:	4b03      	ldr	r3, [pc, #12]	; (2444 <stdio_io_read+0x20>)
    2436:	4798      	blx	r3
}
    2438:	bd10      	pop	{r4, pc}
		return 0;
    243a:	2000      	movs	r0, #0
    243c:	e7fc      	b.n	2438 <stdio_io_read+0x14>
    243e:	46c0      	nop			; (mov r8, r8)
    2440:	20000a70 	.word	0x20000a70
    2444:	00000abd 	.word	0x00000abd

00002448 <stdio_io_write>:

int32_t stdio_io_write(const uint8_t *buf, const int32_t len)
{
    2448:	b510      	push	{r4, lr}
    244a:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    244c:	4b05      	ldr	r3, [pc, #20]	; (2464 <stdio_io_write+0x1c>)
    244e:	6818      	ldr	r0, [r3, #0]
    2450:	2800      	cmp	r0, #0
    2452:	d004      	beq.n	245e <stdio_io_write+0x16>
		return 0;
	}
	return io_write(stdio_io, buf, len);
    2454:	b28a      	uxth	r2, r1
    2456:	0021      	movs	r1, r4
    2458:	4b03      	ldr	r3, [pc, #12]	; (2468 <stdio_io_write+0x20>)
    245a:	4798      	blx	r3
}
    245c:	bd10      	pop	{r4, pc}
		return 0;
    245e:	2000      	movs	r0, #0
    2460:	e7fc      	b.n	245c <stdio_io_write+0x14>
    2462:	46c0      	nop			; (mov r8, r8)
    2464:	20000a70 	.word	0x20000a70
    2468:	00000a89 	.word	0x00000a89

0000246c <stdio_redirect_init>:
	/* Print welcome message */
	printf("\r\nHello ATMEL World!\r\n");
}

void stdio_redirect_init(void)
{
    246c:	b510      	push	{r4, lr}

	usart_sync_enable(&EDBG_0);
    246e:	4c04      	ldr	r4, [pc, #16]	; (2480 <stdio_redirect_init+0x14>)
    2470:	0020      	movs	r0, r4
    2472:	4b04      	ldr	r3, [pc, #16]	; (2484 <stdio_redirect_init+0x18>)
    2474:	4798      	blx	r3
	stdio_io_init(&EDBG_0.io);
    2476:	0020      	movs	r0, r4
    2478:	4b03      	ldr	r3, [pc, #12]	; (2488 <stdio_redirect_init+0x1c>)
    247a:	4798      	blx	r3
}
    247c:	bd10      	pop	{r4, pc}
    247e:	46c0      	nop			; (mov r8, r8)
    2480:	20000ae4 	.word	0x20000ae4
    2484:	00000ff5 	.word	0x00000ff5
    2488:	000023f9 	.word	0x000023f9

0000248c <qtm_update_qtlib_timer>:
    248c:	4a02      	ldr	r2, [pc, #8]	; (2498 <qtm_update_qtlib_timer+0xc>)
    248e:	8813      	ldrh	r3, [r2, #0]
    2490:	18c0      	adds	r0, r0, r3
    2492:	8010      	strh	r0, [r2, #0]
    2494:	4770      	bx	lr
    2496:	46c0      	nop			; (mov r8, r8)
    2498:	20000a74 	.word	0x20000a74

0000249c <qtm_init_sensor_key>:
    249c:	b510      	push	{r4, lr}
    249e:	230b      	movs	r3, #11
    24a0:	2800      	cmp	r0, #0
    24a2:	d00b      	beq.n	24bc <qtm_init_sensor_key+0x20>
    24a4:	2a00      	cmp	r2, #0
    24a6:	d009      	beq.n	24bc <qtm_init_sensor_key+0x20>
    24a8:	3301      	adds	r3, #1
    24aa:	000c      	movs	r4, r1
    24ac:	435c      	muls	r4, r3
    24ae:	6881      	ldr	r1, [r0, #8]
    24b0:	3b0b      	subs	r3, #11
    24b2:	550b      	strb	r3, [r1, r4]
    24b4:	6883      	ldr	r3, [r0, #8]
    24b6:	1919      	adds	r1, r3, r4
    24b8:	2300      	movs	r3, #0
    24ba:	604a      	str	r2, [r1, #4]
    24bc:	0018      	movs	r0, r3
    24be:	bc10      	pop	{r4}
    24c0:	bc02      	pop	{r1}
    24c2:	4708      	bx	r1

000024c4 <pin_mode_analog>:
    24c4:	b530      	push	{r4, r5, lr}
    24c6:	2401      	movs	r4, #1
    24c8:	084b      	lsrs	r3, r1, #1
    24ca:	01c0      	lsls	r0, r0, #7
    24cc:	4a0b      	ldr	r2, [pc, #44]	; (24fc <pin_mode_analog+0x38>)
    24ce:	181b      	adds	r3, r3, r0
    24d0:	189b      	adds	r3, r3, r2
    24d2:	4221      	tst	r1, r4
    24d4:	d004      	beq.n	24e0 <pin_mode_analog+0x1c>
    24d6:	220f      	movs	r2, #15
    24d8:	781c      	ldrb	r4, [r3, #0]
    24da:	4022      	ands	r2, r4
    24dc:	2410      	movs	r4, #16
    24de:	e002      	b.n	24e6 <pin_mode_analog+0x22>
    24e0:	250f      	movs	r5, #15
    24e2:	781a      	ldrb	r2, [r3, #0]
    24e4:	43aa      	bics	r2, r5
    24e6:	4322      	orrs	r2, r4
    24e8:	701a      	strb	r2, [r3, #0]
    24ea:	2201      	movs	r2, #1
    24ec:	4b04      	ldr	r3, [pc, #16]	; (2500 <pin_mode_analog+0x3c>)
    24ee:	1808      	adds	r0, r1, r0
    24f0:	18c0      	adds	r0, r0, r3
    24f2:	7803      	ldrb	r3, [r0, #0]
    24f4:	4313      	orrs	r3, r2
    24f6:	7003      	strb	r3, [r0, #0]
    24f8:	bd30      	pop	{r4, r5, pc}
    24fa:	46c0      	nop			; (mov r8, r8)
    24fc:	41006030 	.word	0x41006030
    2500:	41006040 	.word	0x41006040

00002504 <sync_config>:
    2504:	4a02      	ldr	r2, [pc, #8]	; (2510 <sync_config+0xc>)
    2506:	8993      	ldrh	r3, [r2, #12]
    2508:	2b00      	cmp	r3, #0
    250a:	d1fc      	bne.n	2506 <sync_config+0x2>
    250c:	4770      	bx	lr
    250e:	46c0      	nop			; (mov r8, r8)
    2510:	42003800 	.word	0x42003800

00002514 <select_next_channel_to_measure>:
    2514:	b5f0      	push	{r4, r5, r6, r7, lr}
    2516:	2406      	movs	r4, #6
    2518:	2501      	movs	r5, #1
    251a:	490c      	ldr	r1, [pc, #48]	; (254c <select_next_channel_to_measure+0x38>)
    251c:	4a0c      	ldr	r2, [pc, #48]	; (2550 <select_next_channel_to_measure+0x3c>)
    251e:	6809      	ldr	r1, [r1, #0]
    2520:	8813      	ldrh	r3, [r2, #0]
    2522:	6808      	ldr	r0, [r1, #0]
    2524:	8800      	ldrh	r0, [r0, #0]
    2526:	4283      	cmp	r3, r0
    2528:	d20b      	bcs.n	2542 <select_next_channel_to_measure+0x2e>
    252a:	0026      	movs	r6, r4
    252c:	435e      	muls	r6, r3
    252e:	688f      	ldr	r7, [r1, #8]
    2530:	5df6      	ldrb	r6, [r6, r7]
    2532:	422e      	tst	r6, r5
    2534:	d102      	bne.n	253c <select_next_channel_to_measure+0x28>
    2536:	3301      	adds	r3, #1
    2538:	b29b      	uxth	r3, r3
    253a:	e7f4      	b.n	2526 <select_next_channel_to_measure+0x12>
    253c:	8013      	strh	r3, [r2, #0]
    253e:	2000      	movs	r0, #0
    2540:	e002      	b.n	2548 <select_next_channel_to_measure+0x34>
    2542:	2300      	movs	r3, #0
    2544:	2001      	movs	r0, #1
    2546:	8013      	strh	r3, [r2, #0]
    2548:	bdf0      	pop	{r4, r5, r6, r7, pc}
    254a:	46c0      	nop			; (mov r8, r8)
    254c:	20000b84 	.word	0x20000b84
    2550:	20000a78 	.word	0x20000a78

00002554 <qtm_measure_node>:
    2554:	b5f0      	push	{r4, r5, r6, r7, lr}
    2556:	4f67      	ldr	r7, [pc, #412]	; (26f4 <qtm_measure_node+0x1a0>)
    2558:	b089      	sub	sp, #36	; 0x24
    255a:	9003      	str	r0, [sp, #12]
    255c:	47b8      	blx	r7
    255e:	2202      	movs	r2, #2
    2560:	250c      	movs	r5, #12
    2562:	4c65      	ldr	r4, [pc, #404]	; (26f8 <qtm_measure_node+0x1a4>)
    2564:	8823      	ldrh	r3, [r4, #0]
    2566:	4393      	bics	r3, r2
    2568:	8023      	strh	r3, [r4, #0]
    256a:	47b8      	blx	r7
    256c:	9b03      	ldr	r3, [sp, #12]
    256e:	4e63      	ldr	r6, [pc, #396]	; (26fc <qtm_measure_node+0x1a8>)
    2570:	435d      	muls	r5, r3
    2572:	6833      	ldr	r3, [r6, #0]
    2574:	6c61      	ldr	r1, [r4, #68]	; 0x44
    2576:	685b      	ldr	r3, [r3, #4]
    2578:	195b      	adds	r3, r3, r5
    257a:	685b      	ldr	r3, [r3, #4]
    257c:	021b      	lsls	r3, r3, #8
    257e:	0a1a      	lsrs	r2, r3, #8
    2580:	0e0b      	lsrs	r3, r1, #24
    2582:	061b      	lsls	r3, r3, #24
    2584:	4313      	orrs	r3, r2
    2586:	6463      	str	r3, [r4, #68]	; 0x44
    2588:	47b8      	blx	r7
    258a:	6833      	ldr	r3, [r6, #0]
    258c:	685b      	ldr	r3, [r3, #4]
    258e:	595b      	ldr	r3, [r3, r5]
    2590:	63e3      	str	r3, [r4, #60]	; 0x3c
    2592:	47b8      	blx	r7
    2594:	2306      	movs	r3, #6
    2596:	9a03      	ldr	r2, [sp, #12]
    2598:	6831      	ldr	r1, [r6, #0]
    259a:	4353      	muls	r3, r2
    259c:	688a      	ldr	r2, [r1, #8]
    259e:	18d2      	adds	r2, r2, r3
    25a0:	8892      	ldrh	r2, [r2, #4]
    25a2:	64a2      	str	r2, [r4, #72]	; 0x48
    25a4:	9703      	str	r7, [sp, #12]
    25a6:	2702      	movs	r7, #2
    25a8:	688a      	ldr	r2, [r1, #8]
    25aa:	18d2      	adds	r2, r2, r3
    25ac:	7810      	ldrb	r0, [r2, #0]
    25ae:	4238      	tst	r0, r7
    25b0:	d001      	beq.n	25b6 <qtm_measure_node+0x62>
    25b2:	2005      	movs	r0, #5
    25b4:	7010      	strb	r0, [r2, #0]
    25b6:	688a      	ldr	r2, [r1, #8]
    25b8:	5cd7      	ldrb	r7, [r2, r3]
    25ba:	9b03      	ldr	r3, [sp, #12]
    25bc:	06ff      	lsls	r7, r7, #27
    25be:	0f7f      	lsrs	r7, r7, #29
    25c0:	4798      	blx	r3
    25c2:	2f00      	cmp	r7, #0
    25c4:	d10a      	bne.n	25dc <qtm_measure_node+0x88>
    25c6:	6833      	ldr	r3, [r6, #0]
    25c8:	494d      	ldr	r1, [pc, #308]	; (2700 <qtm_measure_node+0x1ac>)
    25ca:	685b      	ldr	r3, [r3, #4]
    25cc:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    25ce:	195b      	adds	r3, r3, r5
    25d0:	7a9b      	ldrb	r3, [r3, #10]
    25d2:	091b      	lsrs	r3, r3, #4
    25d4:	18cb      	adds	r3, r1, r3
    25d6:	7a1b      	ldrb	r3, [r3, #8]
    25d8:	041b      	lsls	r3, r3, #16
    25da:	e002      	b.n	25e2 <qtm_measure_node+0x8e>
    25dc:	22fc      	movs	r2, #252	; 0xfc
    25de:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    25e0:	0392      	lsls	r2, r2, #14
    25e2:	4313      	orrs	r3, r2
    25e4:	64a3      	str	r3, [r4, #72]	; 0x48
    25e6:	9b03      	ldr	r3, [sp, #12]
    25e8:	4798      	blx	r3
    25ea:	6833      	ldr	r3, [r6, #0]
    25ec:	6921      	ldr	r1, [r4, #16]
    25ee:	685b      	ldr	r3, [r3, #4]
    25f0:	4f41      	ldr	r7, [pc, #260]	; (26f8 <qtm_measure_node+0x1a4>)
    25f2:	195b      	adds	r3, r3, r5
    25f4:	7a5a      	ldrb	r2, [r3, #9]
    25f6:	2307      	movs	r3, #7
    25f8:	0912      	lsrs	r2, r2, #4
    25fa:	401a      	ands	r2, r3
    25fc:	4b41      	ldr	r3, [pc, #260]	; (2704 <qtm_measure_node+0x1b0>)
    25fe:	0512      	lsls	r2, r2, #20
    2600:	400b      	ands	r3, r1
    2602:	4313      	orrs	r3, r2
    2604:	6123      	str	r3, [r4, #16]
    2606:	9b03      	ldr	r3, [sp, #12]
    2608:	4798      	blx	r3
    260a:	2203      	movs	r2, #3
    260c:	6833      	ldr	r3, [r6, #0]
    260e:	8821      	ldrh	r1, [r4, #0]
    2610:	685b      	ldr	r3, [r3, #4]
    2612:	195b      	adds	r3, r3, r5
    2614:	7a5b      	ldrb	r3, [r3, #9]
    2616:	401a      	ands	r2, r3
    2618:	4b3b      	ldr	r3, [pc, #236]	; (2708 <qtm_measure_node+0x1b4>)
    261a:	0212      	lsls	r2, r2, #8
    261c:	400b      	ands	r3, r1
    261e:	4313      	orrs	r3, r2
    2620:	8023      	strh	r3, [r4, #0]
    2622:	9b03      	ldr	r3, [sp, #12]
    2624:	4798      	blx	r3
    2626:	2107      	movs	r1, #7
    2628:	6833      	ldr	r3, [r6, #0]
    262a:	685b      	ldr	r3, [r3, #4]
    262c:	195b      	adds	r3, r3, r5
    262e:	7ada      	ldrb	r2, [r3, #11]
    2630:	6923      	ldr	r3, [r4, #16]
    2632:	400a      	ands	r2, r1
    2634:	4935      	ldr	r1, [pc, #212]	; (270c <qtm_measure_node+0x1b8>)
    2636:	0412      	lsls	r2, r2, #16
    2638:	400b      	ands	r3, r1
    263a:	4313      	orrs	r3, r2
    263c:	6123      	str	r3, [r4, #16]
    263e:	9b03      	ldr	r3, [sp, #12]
    2640:	4798      	blx	r3
    2642:	6833      	ldr	r3, [r6, #0]
    2644:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    2646:	685b      	ldr	r3, [r3, #4]
    2648:	195d      	adds	r5, r3, r5
    264a:	7a2b      	ldrb	r3, [r5, #8]
    264c:	2502      	movs	r5, #2
    264e:	061a      	lsls	r2, r3, #24
    2650:	020b      	lsls	r3, r1, #8
    2652:	0a1b      	lsrs	r3, r3, #8
    2654:	4313      	orrs	r3, r2
    2656:	64a3      	str	r3, [r4, #72]	; 0x48
    2658:	9b03      	ldr	r3, [sp, #12]
    265a:	4798      	blx	r3
    265c:	8823      	ldrh	r3, [r4, #0]
    265e:	432b      	orrs	r3, r5
    2660:	8023      	strh	r3, [r4, #0]
    2662:	4b2b      	ldr	r3, [pc, #172]	; (2710 <qtm_measure_node+0x1bc>)
    2664:	685e      	ldr	r6, [r3, #4]
    2666:	2e00      	cmp	r6, #0
    2668:	d03b      	beq.n	26e2 <qtm_measure_node+0x18e>
    266a:	2401      	movs	r4, #1
    266c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    266e:	0e1b      	lsrs	r3, r3, #24
    2670:	9304      	str	r3, [sp, #16]
    2672:	693b      	ldr	r3, [r7, #16]
    2674:	051b      	lsls	r3, r3, #20
    2676:	0f1b      	lsrs	r3, r3, #28
    2678:	9305      	str	r3, [sp, #20]
    267a:	883b      	ldrh	r3, [r7, #0]
    267c:	059b      	lsls	r3, r3, #22
    267e:	0f9b      	lsrs	r3, r3, #30
    2680:	9306      	str	r3, [sp, #24]
    2682:	9b03      	ldr	r3, [sp, #12]
    2684:	4798      	blx	r3
    2686:	883b      	ldrh	r3, [r7, #0]
    2688:	43ab      	bics	r3, r5
    268a:	803b      	strh	r3, [r7, #0]
    268c:	9b03      	ldr	r3, [sp, #12]
    268e:	4798      	blx	r3
    2690:	793b      	ldrb	r3, [r7, #4]
    2692:	4323      	orrs	r3, r4
    2694:	713b      	strb	r3, [r7, #4]
    2696:	9b03      	ldr	r3, [sp, #12]
    2698:	4798      	blx	r3
    269a:	793b      	ldrb	r3, [r7, #4]
    269c:	432b      	orrs	r3, r5
    269e:	713b      	strb	r3, [r7, #4]
    26a0:	9b03      	ldr	r3, [sp, #12]
    26a2:	4798      	blx	r3
    26a4:	2108      	movs	r1, #8
    26a6:	693b      	ldr	r3, [r7, #16]
    26a8:	9307      	str	r3, [sp, #28]
    26aa:	4b1a      	ldr	r3, [pc, #104]	; (2714 <qtm_measure_node+0x1c0>)
    26ac:	681a      	ldr	r2, [r3, #0]
    26ae:	7813      	ldrb	r3, [r2, #0]
    26b0:	430b      	orrs	r3, r1
    26b2:	7013      	strb	r3, [r2, #0]
    26b4:	9b03      	ldr	r3, [sp, #12]
    26b6:	4798      	blx	r3
    26b8:	693b      	ldr	r3, [r7, #16]
    26ba:	4a14      	ldr	r2, [pc, #80]	; (270c <qtm_measure_node+0x1b8>)
    26bc:	4013      	ands	r3, r2
    26be:	613b      	str	r3, [r7, #16]
    26c0:	9b07      	ldr	r3, [sp, #28]
    26c2:	9a06      	ldr	r2, [sp, #24]
    26c4:	9905      	ldr	r1, [sp, #20]
    26c6:	9804      	ldr	r0, [sp, #16]
    26c8:	9300      	str	r3, [sp, #0]
    26ca:	4b13      	ldr	r3, [pc, #76]	; (2718 <qtm_measure_node+0x1c4>)
    26cc:	47b0      	blx	r6
    26ce:	9b03      	ldr	r3, [sp, #12]
    26d0:	4798      	blx	r3
    26d2:	883b      	ldrh	r3, [r7, #0]
    26d4:	431d      	orrs	r5, r3
    26d6:	803d      	strh	r5, [r7, #0]
    26d8:	9b03      	ldr	r3, [sp, #12]
    26da:	4798      	blx	r3
    26dc:	7f3b      	ldrb	r3, [r7, #28]
    26de:	4323      	orrs	r3, r4
    26e0:	e004      	b.n	26ec <qtm_measure_node+0x198>
    26e2:	9b03      	ldr	r3, [sp, #12]
    26e4:	4798      	blx	r3
    26e6:	2201      	movs	r2, #1
    26e8:	7f3b      	ldrb	r3, [r7, #28]
    26ea:	4313      	orrs	r3, r2
    26ec:	773b      	strb	r3, [r7, #28]
    26ee:	b009      	add	sp, #36	; 0x24
    26f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    26f2:	46c0      	nop			; (mov r8, r8)
    26f4:	00002505 	.word	0x00002505
    26f8:	42003800 	.word	0x42003800
    26fc:	20000b84 	.word	0x20000b84
    2700:	0000a060 	.word	0x0000a060
    2704:	ff8fffff 	.word	0xff8fffff
    2708:	fffffcff 	.word	0xfffffcff
    270c:	fff8ffff 	.word	0xfff8ffff
    2710:	20000a78 	.word	0x20000a78
    2714:	20000b80 	.word	0x20000b80
    2718:	42003810 	.word	0x42003810

0000271c <qtm_ptc_init_acquisition_module>:
    271c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    271e:	0001      	movs	r1, r0
    2720:	200b      	movs	r0, #11
    2722:	2900      	cmp	r1, #0
    2724:	d053      	beq.n	27ce <qtm_ptc_init_acquisition_module+0xb2>
    2726:	680b      	ldr	r3, [r1, #0]
    2728:	240c      	movs	r4, #12
    272a:	8818      	ldrh	r0, [r3, #0]
    272c:	2300      	movs	r3, #0
    272e:	001d      	movs	r5, r3
    2730:	001f      	movs	r7, r3
    2732:	b29a      	uxth	r2, r3
    2734:	4290      	cmp	r0, r2
    2736:	d909      	bls.n	274c <qtm_ptc_init_acquisition_module+0x30>
    2738:	0022      	movs	r2, r4
    273a:	435a      	muls	r2, r3
    273c:	684e      	ldr	r6, [r1, #4]
    273e:	3301      	adds	r3, #1
    2740:	18b2      	adds	r2, r6, r2
    2742:	6816      	ldr	r6, [r2, #0]
    2744:	6852      	ldr	r2, [r2, #4]
    2746:	4337      	orrs	r7, r6
    2748:	4315      	orrs	r5, r2
    274a:	e7f2      	b.n	2732 <qtm_ptc_init_acquisition_module+0x16>
    274c:	2002      	movs	r0, #2
    274e:	2d00      	cmp	r5, #0
    2750:	d03d      	beq.n	27ce <qtm_ptc_init_acquisition_module+0xb2>
    2752:	2400      	movs	r4, #0
    2754:	2601      	movs	r6, #1
    2756:	043b      	lsls	r3, r7, #16
    2758:	432b      	orrs	r3, r5
    275a:	9301      	str	r3, [sp, #4]
    275c:	9b01      	ldr	r3, [sp, #4]
    275e:	40e3      	lsrs	r3, r4
    2760:	4233      	tst	r3, r6
    2762:	d010      	beq.n	2786 <qtm_ptc_init_acquisition_module+0x6a>
    2764:	4b1a      	ldr	r3, [pc, #104]	; (27d0 <qtm_ptc_init_acquisition_module+0xb4>)
    2766:	4a1b      	ldr	r2, [pc, #108]	; (27d4 <qtm_ptc_init_acquisition_module+0xb8>)
    2768:	330e      	adds	r3, #14
    276a:	5ce3      	ldrb	r3, [r4, r3]
    276c:	2000      	movs	r0, #0
    276e:	1e19      	subs	r1, r3, #0
    2770:	291f      	cmp	r1, #31
    2772:	d907      	bls.n	2784 <qtm_ptc_init_acquisition_module+0x68>
    2774:	3920      	subs	r1, #32
    2776:	b2c9      	uxtb	r1, r1
    2778:	2001      	movs	r0, #1
    277a:	291f      	cmp	r1, #31
    277c:	d902      	bls.n	2784 <qtm_ptc_init_acquisition_module+0x68>
    277e:	2002      	movs	r0, #2
    2780:	3b40      	subs	r3, #64	; 0x40
    2782:	b2d9      	uxtb	r1, r3
    2784:	4790      	blx	r2
    2786:	3401      	adds	r4, #1
    2788:	2c20      	cmp	r4, #32
    278a:	d1e7      	bne.n	275c <qtm_ptc_init_acquisition_module+0x40>
    278c:	4e12      	ldr	r6, [pc, #72]	; (27d8 <qtm_ptc_init_acquisition_module+0xbc>)
    278e:	47b0      	blx	r6
    2790:	2300      	movs	r3, #0
    2792:	4c12      	ldr	r4, [pc, #72]	; (27dc <qtm_ptc_init_acquisition_module+0xc0>)
    2794:	8023      	strh	r3, [r4, #0]
    2796:	4b12      	ldr	r3, [pc, #72]	; (27e0 <qtm_ptc_init_acquisition_module+0xc4>)
    2798:	7a1b      	ldrb	r3, [r3, #8]
    279a:	9301      	str	r3, [sp, #4]
    279c:	2b00      	cmp	r3, #0
    279e:	d10d      	bne.n	27bc <qtm_ptc_init_acquisition_module+0xa0>
    27a0:	47b0      	blx	r6
    27a2:	9b01      	ldr	r3, [sp, #4]
    27a4:	61a3      	str	r3, [r4, #24]
    27a6:	69a3      	ldr	r3, [r4, #24]
    27a8:	431f      	orrs	r7, r3
    27aa:	61a7      	str	r7, [r4, #24]
    27ac:	47b0      	blx	r6
    27ae:	69a3      	ldr	r3, [r4, #24]
    27b0:	4a0b      	ldr	r2, [pc, #44]	; (27e0 <qtm_ptc_init_acquisition_module+0xc4>)
    27b2:	431d      	orrs	r5, r3
    27b4:	2301      	movs	r3, #1
    27b6:	61a5      	str	r5, [r4, #24]
    27b8:	7213      	strb	r3, [r2, #8]
    27ba:	e007      	b.n	27cc <qtm_ptc_init_acquisition_module+0xb0>
    27bc:	47b0      	blx	r6
    27be:	69a3      	ldr	r3, [r4, #24]
    27c0:	431f      	orrs	r7, r3
    27c2:	61a7      	str	r7, [r4, #24]
    27c4:	47b0      	blx	r6
    27c6:	69a3      	ldr	r3, [r4, #24]
    27c8:	431d      	orrs	r5, r3
    27ca:	61a5      	str	r5, [r4, #24]
    27cc:	2000      	movs	r0, #0
    27ce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    27d0:	0000a060 	.word	0x0000a060
    27d4:	000024c5 	.word	0x000024c5
    27d8:	00002505 	.word	0x00002505
    27dc:	42003800 	.word	0x42003800
    27e0:	20000a78 	.word	0x20000a78

000027e4 <qtm_ptc_qtlib_assign_signal_memory>:
    27e4:	230b      	movs	r3, #11
    27e6:	2800      	cmp	r0, #0
    27e8:	d002      	beq.n	27f0 <qtm_ptc_qtlib_assign_signal_memory+0xc>
    27ea:	4b02      	ldr	r3, [pc, #8]	; (27f4 <qtm_ptc_qtlib_assign_signal_memory+0x10>)
    27ec:	6018      	str	r0, [r3, #0]
    27ee:	2300      	movs	r3, #0
    27f0:	0018      	movs	r0, r3
    27f2:	4770      	bx	lr
    27f4:	20000b88 	.word	0x20000b88

000027f8 <qtm_enable_sensor_node>:
    27f8:	230b      	movs	r3, #11
    27fa:	2800      	cmp	r0, #0
    27fc:	d00a      	beq.n	2814 <qtm_enable_sensor_node+0x1c>
    27fe:	6803      	ldr	r3, [r0, #0]
    2800:	881a      	ldrh	r2, [r3, #0]
    2802:	2302      	movs	r3, #2
    2804:	428a      	cmp	r2, r1
    2806:	d305      	bcc.n	2814 <qtm_enable_sensor_node+0x1c>
    2808:	3304      	adds	r3, #4
    280a:	4359      	muls	r1, r3
    280c:	6882      	ldr	r2, [r0, #8]
    280e:	3b05      	subs	r3, #5
    2810:	548b      	strb	r3, [r1, r2]
    2812:	2300      	movs	r3, #0
    2814:	0018      	movs	r0, r3
    2816:	4770      	bx	lr

00002818 <qtm_calibrate_sensor_node>:
    2818:	0002      	movs	r2, r0
    281a:	b510      	push	{r4, lr}
    281c:	200b      	movs	r0, #11
    281e:	2a00      	cmp	r2, #0
    2820:	d01f      	beq.n	2862 <qtm_calibrate_sensor_node+0x4a>
    2822:	6813      	ldr	r3, [r2, #0]
    2824:	3809      	subs	r0, #9
    2826:	881c      	ldrh	r4, [r3, #0]
    2828:	428c      	cmp	r4, r1
    282a:	d31a      	bcc.n	2862 <qtm_calibrate_sensor_node+0x4a>
    282c:	789b      	ldrb	r3, [r3, #2]
    282e:	6892      	ldr	r2, [r2, #8]
    2830:	2b40      	cmp	r3, #64	; 0x40
    2832:	d105      	bne.n	2840 <qtm_calibrate_sensor_node+0x28>
    2834:	208d      	movs	r0, #141	; 0x8d
    2836:	3b3a      	subs	r3, #58	; 0x3a
    2838:	434b      	muls	r3, r1
    283a:	0080      	lsls	r0, r0, #2
    283c:	18d3      	adds	r3, r2, r3
    283e:	e007      	b.n	2850 <qtm_calibrate_sensor_node+0x38>
    2840:	3b80      	subs	r3, #128	; 0x80
    2842:	b2db      	uxtb	r3, r3
    2844:	2b01      	cmp	r3, #1
    2846:	d805      	bhi.n	2854 <qtm_calibrate_sensor_node+0x3c>
    2848:	2306      	movs	r3, #6
    284a:	434b      	muls	r3, r1
    284c:	4805      	ldr	r0, [pc, #20]	; (2864 <qtm_calibrate_sensor_node+0x4c>)
    284e:	18d3      	adds	r3, r2, r3
    2850:	8098      	strh	r0, [r3, #4]
    2852:	2000      	movs	r0, #0
    2854:	2306      	movs	r3, #6
    2856:	4359      	muls	r1, r3
    2858:	1851      	adds	r1, r2, r1
    285a:	2202      	movs	r2, #2
    285c:	780b      	ldrb	r3, [r1, #0]
    285e:	4313      	orrs	r3, r2
    2860:	700b      	strb	r3, [r1, #0]
    2862:	bd10      	pop	{r4, pc}
    2864:	00000567 	.word	0x00000567

00002868 <qtm_ptc_clear_interrupt>:
    2868:	2002      	movs	r0, #2
    286a:	4b07      	ldr	r3, [pc, #28]	; (2888 <qtm_ptc_clear_interrupt+0x20>)
    286c:	7a9a      	ldrb	r2, [r3, #10]
    286e:	b2d2      	uxtb	r2, r2
    2870:	4202      	tst	r2, r0
    2872:	d002      	beq.n	287a <qtm_ptc_clear_interrupt+0x12>
    2874:	7a99      	ldrb	r1, [r3, #10]
    2876:	4301      	orrs	r1, r0
    2878:	7299      	strb	r1, [r3, #10]
    287a:	2101      	movs	r1, #1
    287c:	420a      	tst	r2, r1
    287e:	d002      	beq.n	2886 <qtm_ptc_clear_interrupt+0x1e>
    2880:	7a9a      	ldrb	r2, [r3, #10]
    2882:	430a      	orrs	r2, r1
    2884:	729a      	strb	r2, [r3, #10]
    2886:	4770      	bx	lr
    2888:	42003800 	.word	0x42003800

0000288c <qtm_saml22_ptc_handler_eoc>:
    288c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    288e:	4b23      	ldr	r3, [pc, #140]	; (291c <qtm_saml22_ptc_handler_eoc+0x90>)
    2890:	4798      	blx	r3
    2892:	2102      	movs	r1, #2
    2894:	4a22      	ldr	r2, [pc, #136]	; (2920 <qtm_saml22_ptc_handler_eoc+0x94>)
    2896:	8813      	ldrh	r3, [r2, #0]
    2898:	438b      	bics	r3, r1
    289a:	8013      	strh	r3, [r2, #0]
    289c:	4b21      	ldr	r3, [pc, #132]	; (2924 <qtm_saml22_ptc_handler_eoc+0x98>)
    289e:	4798      	blx	r3
    28a0:	4b21      	ldr	r3, [pc, #132]	; (2928 <qtm_saml22_ptc_handler_eoc+0x9c>)
    28a2:	4c22      	ldr	r4, [pc, #136]	; (292c <qtm_saml22_ptc_handler_eoc+0xa0>)
    28a4:	4a22      	ldr	r2, [pc, #136]	; (2930 <qtm_saml22_ptc_handler_eoc+0xa4>)
    28a6:	8819      	ldrh	r1, [r3, #0]
    28a8:	8818      	ldrh	r0, [r3, #0]
    28aa:	8823      	ldrh	r3, [r4, #0]
    28ac:	6812      	ldr	r2, [r2, #0]
    28ae:	005b      	lsls	r3, r3, #1
    28b0:	52d0      	strh	r0, [r2, r3]
    28b2:	4b20      	ldr	r3, [pc, #128]	; (2934 <qtm_saml22_ptc_handler_eoc+0xa8>)
    28b4:	b289      	uxth	r1, r1
    28b6:	781b      	ldrb	r3, [r3, #0]
    28b8:	0020      	movs	r0, r4
    28ba:	2b01      	cmp	r3, #1
    28bc:	d002      	beq.n	28c4 <qtm_saml22_ptc_handler_eoc+0x38>
    28be:	2b02      	cmp	r3, #2
    28c0:	d00f      	beq.n	28e2 <qtm_saml22_ptc_handler_eoc+0x56>
    28c2:	e029      	b.n	2918 <qtm_saml22_ptc_handler_eoc+0x8c>
    28c4:	8823      	ldrh	r3, [r4, #0]
    28c6:	3301      	adds	r3, #1
    28c8:	8023      	strh	r3, [r4, #0]
    28ca:	4b1b      	ldr	r3, [pc, #108]	; (2938 <qtm_saml22_ptc_handler_eoc+0xac>)
    28cc:	4798      	blx	r3
    28ce:	2800      	cmp	r0, #0
    28d0:	d105      	bne.n	28de <qtm_saml22_ptc_handler_eoc+0x52>
    28d2:	4b1a      	ldr	r3, [pc, #104]	; (293c <qtm_saml22_ptc_handler_eoc+0xb0>)
    28d4:	8820      	ldrh	r0, [r4, #0]
    28d6:	4798      	blx	r3
    28d8:	2304      	movs	r3, #4
    28da:	7223      	strb	r3, [r4, #8]
    28dc:	e01c      	b.n	2918 <qtm_saml22_ptc_handler_eoc+0x8c>
    28de:	68e3      	ldr	r3, [r4, #12]
    28e0:	e019      	b.n	2916 <qtm_saml22_ptc_handler_eoc+0x8a>
    28e2:	4b17      	ldr	r3, [pc, #92]	; (2940 <qtm_saml22_ptc_handler_eoc+0xb4>)
    28e4:	8824      	ldrh	r4, [r4, #0]
    28e6:	681d      	ldr	r5, [r3, #0]
    28e8:	230c      	movs	r3, #12
    28ea:	4363      	muls	r3, r4
    28ec:	686a      	ldr	r2, [r5, #4]
    28ee:	2700      	movs	r7, #0
    28f0:	18d3      	adds	r3, r2, r3
    28f2:	220f      	movs	r2, #15
    28f4:	7a9e      	ldrb	r6, [r3, #10]
    28f6:	4016      	ands	r6, r2
    28f8:	7ada      	ldrb	r2, [r3, #11]
    28fa:	4296      	cmp	r6, r2
    28fc:	d201      	bcs.n	2902 <qtm_saml22_ptc_handler_eoc+0x76>
    28fe:	1b92      	subs	r2, r2, r6
    2900:	b2d7      	uxtb	r7, r2
    2902:	2206      	movs	r2, #6
    2904:	0013      	movs	r3, r2
    2906:	40f9      	lsrs	r1, r7
    2908:	4363      	muls	r3, r4
    290a:	68ad      	ldr	r5, [r5, #8]
    290c:	18eb      	adds	r3, r5, r3
    290e:	8059      	strh	r1, [r3, #2]
    2910:	2302      	movs	r3, #2
    2912:	7203      	strb	r3, [r0, #8]
    2914:	6903      	ldr	r3, [r0, #16]
    2916:	4798      	blx	r3
    2918:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    291a:	46c0      	nop			; (mov r8, r8)
    291c:	00002505 	.word	0x00002505
    2920:	42003800 	.word	0x42003800
    2924:	00002869 	.word	0x00002869
    2928:	42003858 	.word	0x42003858
    292c:	20000a78 	.word	0x20000a78
    2930:	20000b88 	.word	0x20000b88
    2934:	2000007a 	.word	0x2000007a
    2938:	00002515 	.word	0x00002515
    293c:	00002555 	.word	0x00002555
    2940:	20000b84 	.word	0x20000b84

00002944 <__udivsi3>:
    2944:	2200      	movs	r2, #0
    2946:	0843      	lsrs	r3, r0, #1
    2948:	428b      	cmp	r3, r1
    294a:	d374      	bcc.n	2a36 <__udivsi3+0xf2>
    294c:	0903      	lsrs	r3, r0, #4
    294e:	428b      	cmp	r3, r1
    2950:	d35f      	bcc.n	2a12 <__udivsi3+0xce>
    2952:	0a03      	lsrs	r3, r0, #8
    2954:	428b      	cmp	r3, r1
    2956:	d344      	bcc.n	29e2 <__udivsi3+0x9e>
    2958:	0b03      	lsrs	r3, r0, #12
    295a:	428b      	cmp	r3, r1
    295c:	d328      	bcc.n	29b0 <__udivsi3+0x6c>
    295e:	0c03      	lsrs	r3, r0, #16
    2960:	428b      	cmp	r3, r1
    2962:	d30d      	bcc.n	2980 <__udivsi3+0x3c>
    2964:	22ff      	movs	r2, #255	; 0xff
    2966:	0209      	lsls	r1, r1, #8
    2968:	ba12      	rev	r2, r2
    296a:	0c03      	lsrs	r3, r0, #16
    296c:	428b      	cmp	r3, r1
    296e:	d302      	bcc.n	2976 <__udivsi3+0x32>
    2970:	1212      	asrs	r2, r2, #8
    2972:	0209      	lsls	r1, r1, #8
    2974:	d065      	beq.n	2a42 <__udivsi3+0xfe>
    2976:	0b03      	lsrs	r3, r0, #12
    2978:	428b      	cmp	r3, r1
    297a:	d319      	bcc.n	29b0 <__udivsi3+0x6c>
    297c:	e000      	b.n	2980 <__udivsi3+0x3c>
    297e:	0a09      	lsrs	r1, r1, #8
    2980:	0bc3      	lsrs	r3, r0, #15
    2982:	428b      	cmp	r3, r1
    2984:	d301      	bcc.n	298a <__udivsi3+0x46>
    2986:	03cb      	lsls	r3, r1, #15
    2988:	1ac0      	subs	r0, r0, r3
    298a:	4152      	adcs	r2, r2
    298c:	0b83      	lsrs	r3, r0, #14
    298e:	428b      	cmp	r3, r1
    2990:	d301      	bcc.n	2996 <__udivsi3+0x52>
    2992:	038b      	lsls	r3, r1, #14
    2994:	1ac0      	subs	r0, r0, r3
    2996:	4152      	adcs	r2, r2
    2998:	0b43      	lsrs	r3, r0, #13
    299a:	428b      	cmp	r3, r1
    299c:	d301      	bcc.n	29a2 <__udivsi3+0x5e>
    299e:	034b      	lsls	r3, r1, #13
    29a0:	1ac0      	subs	r0, r0, r3
    29a2:	4152      	adcs	r2, r2
    29a4:	0b03      	lsrs	r3, r0, #12
    29a6:	428b      	cmp	r3, r1
    29a8:	d301      	bcc.n	29ae <__udivsi3+0x6a>
    29aa:	030b      	lsls	r3, r1, #12
    29ac:	1ac0      	subs	r0, r0, r3
    29ae:	4152      	adcs	r2, r2
    29b0:	0ac3      	lsrs	r3, r0, #11
    29b2:	428b      	cmp	r3, r1
    29b4:	d301      	bcc.n	29ba <__udivsi3+0x76>
    29b6:	02cb      	lsls	r3, r1, #11
    29b8:	1ac0      	subs	r0, r0, r3
    29ba:	4152      	adcs	r2, r2
    29bc:	0a83      	lsrs	r3, r0, #10
    29be:	428b      	cmp	r3, r1
    29c0:	d301      	bcc.n	29c6 <__udivsi3+0x82>
    29c2:	028b      	lsls	r3, r1, #10
    29c4:	1ac0      	subs	r0, r0, r3
    29c6:	4152      	adcs	r2, r2
    29c8:	0a43      	lsrs	r3, r0, #9
    29ca:	428b      	cmp	r3, r1
    29cc:	d301      	bcc.n	29d2 <__udivsi3+0x8e>
    29ce:	024b      	lsls	r3, r1, #9
    29d0:	1ac0      	subs	r0, r0, r3
    29d2:	4152      	adcs	r2, r2
    29d4:	0a03      	lsrs	r3, r0, #8
    29d6:	428b      	cmp	r3, r1
    29d8:	d301      	bcc.n	29de <__udivsi3+0x9a>
    29da:	020b      	lsls	r3, r1, #8
    29dc:	1ac0      	subs	r0, r0, r3
    29de:	4152      	adcs	r2, r2
    29e0:	d2cd      	bcs.n	297e <__udivsi3+0x3a>
    29e2:	09c3      	lsrs	r3, r0, #7
    29e4:	428b      	cmp	r3, r1
    29e6:	d301      	bcc.n	29ec <__udivsi3+0xa8>
    29e8:	01cb      	lsls	r3, r1, #7
    29ea:	1ac0      	subs	r0, r0, r3
    29ec:	4152      	adcs	r2, r2
    29ee:	0983      	lsrs	r3, r0, #6
    29f0:	428b      	cmp	r3, r1
    29f2:	d301      	bcc.n	29f8 <__udivsi3+0xb4>
    29f4:	018b      	lsls	r3, r1, #6
    29f6:	1ac0      	subs	r0, r0, r3
    29f8:	4152      	adcs	r2, r2
    29fa:	0943      	lsrs	r3, r0, #5
    29fc:	428b      	cmp	r3, r1
    29fe:	d301      	bcc.n	2a04 <__udivsi3+0xc0>
    2a00:	014b      	lsls	r3, r1, #5
    2a02:	1ac0      	subs	r0, r0, r3
    2a04:	4152      	adcs	r2, r2
    2a06:	0903      	lsrs	r3, r0, #4
    2a08:	428b      	cmp	r3, r1
    2a0a:	d301      	bcc.n	2a10 <__udivsi3+0xcc>
    2a0c:	010b      	lsls	r3, r1, #4
    2a0e:	1ac0      	subs	r0, r0, r3
    2a10:	4152      	adcs	r2, r2
    2a12:	08c3      	lsrs	r3, r0, #3
    2a14:	428b      	cmp	r3, r1
    2a16:	d301      	bcc.n	2a1c <__udivsi3+0xd8>
    2a18:	00cb      	lsls	r3, r1, #3
    2a1a:	1ac0      	subs	r0, r0, r3
    2a1c:	4152      	adcs	r2, r2
    2a1e:	0883      	lsrs	r3, r0, #2
    2a20:	428b      	cmp	r3, r1
    2a22:	d301      	bcc.n	2a28 <__udivsi3+0xe4>
    2a24:	008b      	lsls	r3, r1, #2
    2a26:	1ac0      	subs	r0, r0, r3
    2a28:	4152      	adcs	r2, r2
    2a2a:	0843      	lsrs	r3, r0, #1
    2a2c:	428b      	cmp	r3, r1
    2a2e:	d301      	bcc.n	2a34 <__udivsi3+0xf0>
    2a30:	004b      	lsls	r3, r1, #1
    2a32:	1ac0      	subs	r0, r0, r3
    2a34:	4152      	adcs	r2, r2
    2a36:	1a41      	subs	r1, r0, r1
    2a38:	d200      	bcs.n	2a3c <__udivsi3+0xf8>
    2a3a:	4601      	mov	r1, r0
    2a3c:	4152      	adcs	r2, r2
    2a3e:	4610      	mov	r0, r2
    2a40:	4770      	bx	lr
    2a42:	e7ff      	b.n	2a44 <__udivsi3+0x100>
    2a44:	b501      	push	{r0, lr}
    2a46:	2000      	movs	r0, #0
    2a48:	f000 f806 	bl	2a58 <__aeabi_idiv0>
    2a4c:	bd02      	pop	{r1, pc}
    2a4e:	46c0      	nop			; (mov r8, r8)

00002a50 <__aeabi_uidivmod>:
    2a50:	2900      	cmp	r1, #0
    2a52:	d0f7      	beq.n	2a44 <__udivsi3+0x100>
    2a54:	e776      	b.n	2944 <__udivsi3>
    2a56:	4770      	bx	lr

00002a58 <__aeabi_idiv0>:
    2a58:	4770      	bx	lr
    2a5a:	46c0      	nop			; (mov r8, r8)

00002a5c <__aeabi_uldivmod>:
    2a5c:	2b00      	cmp	r3, #0
    2a5e:	d111      	bne.n	2a84 <__aeabi_uldivmod+0x28>
    2a60:	2a00      	cmp	r2, #0
    2a62:	d10f      	bne.n	2a84 <__aeabi_uldivmod+0x28>
    2a64:	2900      	cmp	r1, #0
    2a66:	d100      	bne.n	2a6a <__aeabi_uldivmod+0xe>
    2a68:	2800      	cmp	r0, #0
    2a6a:	d002      	beq.n	2a72 <__aeabi_uldivmod+0x16>
    2a6c:	2100      	movs	r1, #0
    2a6e:	43c9      	mvns	r1, r1
    2a70:	1c08      	adds	r0, r1, #0
    2a72:	b407      	push	{r0, r1, r2}
    2a74:	4802      	ldr	r0, [pc, #8]	; (2a80 <__aeabi_uldivmod+0x24>)
    2a76:	a102      	add	r1, pc, #8	; (adr r1, 2a80 <__aeabi_uldivmod+0x24>)
    2a78:	1840      	adds	r0, r0, r1
    2a7a:	9002      	str	r0, [sp, #8]
    2a7c:	bd03      	pop	{r0, r1, pc}
    2a7e:	46c0      	nop			; (mov r8, r8)
    2a80:	ffffffd9 	.word	0xffffffd9
    2a84:	b403      	push	{r0, r1}
    2a86:	4668      	mov	r0, sp
    2a88:	b501      	push	{r0, lr}
    2a8a:	9802      	ldr	r0, [sp, #8]
    2a8c:	f000 f806 	bl	2a9c <__udivmoddi4>
    2a90:	9b01      	ldr	r3, [sp, #4]
    2a92:	469e      	mov	lr, r3
    2a94:	b002      	add	sp, #8
    2a96:	bc0c      	pop	{r2, r3}
    2a98:	4770      	bx	lr
    2a9a:	46c0      	nop			; (mov r8, r8)

00002a9c <__udivmoddi4>:
    2a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a9e:	4657      	mov	r7, sl
    2aa0:	464e      	mov	r6, r9
    2aa2:	4645      	mov	r5, r8
    2aa4:	46de      	mov	lr, fp
    2aa6:	b5e0      	push	{r5, r6, r7, lr}
    2aa8:	0004      	movs	r4, r0
    2aaa:	b083      	sub	sp, #12
    2aac:	000d      	movs	r5, r1
    2aae:	4692      	mov	sl, r2
    2ab0:	4699      	mov	r9, r3
    2ab2:	428b      	cmp	r3, r1
    2ab4:	d82f      	bhi.n	2b16 <__udivmoddi4+0x7a>
    2ab6:	d02c      	beq.n	2b12 <__udivmoddi4+0x76>
    2ab8:	4649      	mov	r1, r9
    2aba:	4650      	mov	r0, sl
    2abc:	f001 fcf0 	bl	44a0 <__clzdi2>
    2ac0:	0029      	movs	r1, r5
    2ac2:	0006      	movs	r6, r0
    2ac4:	0020      	movs	r0, r4
    2ac6:	f001 fceb 	bl	44a0 <__clzdi2>
    2aca:	1a33      	subs	r3, r6, r0
    2acc:	4698      	mov	r8, r3
    2ace:	3b20      	subs	r3, #32
    2ad0:	469b      	mov	fp, r3
    2ad2:	d500      	bpl.n	2ad6 <__udivmoddi4+0x3a>
    2ad4:	e074      	b.n	2bc0 <__udivmoddi4+0x124>
    2ad6:	4653      	mov	r3, sl
    2ad8:	465a      	mov	r2, fp
    2ada:	4093      	lsls	r3, r2
    2adc:	001f      	movs	r7, r3
    2ade:	4653      	mov	r3, sl
    2ae0:	4642      	mov	r2, r8
    2ae2:	4093      	lsls	r3, r2
    2ae4:	001e      	movs	r6, r3
    2ae6:	42af      	cmp	r7, r5
    2ae8:	d829      	bhi.n	2b3e <__udivmoddi4+0xa2>
    2aea:	d026      	beq.n	2b3a <__udivmoddi4+0x9e>
    2aec:	465b      	mov	r3, fp
    2aee:	1ba4      	subs	r4, r4, r6
    2af0:	41bd      	sbcs	r5, r7
    2af2:	2b00      	cmp	r3, #0
    2af4:	da00      	bge.n	2af8 <__udivmoddi4+0x5c>
    2af6:	e079      	b.n	2bec <__udivmoddi4+0x150>
    2af8:	2200      	movs	r2, #0
    2afa:	2300      	movs	r3, #0
    2afc:	9200      	str	r2, [sp, #0]
    2afe:	9301      	str	r3, [sp, #4]
    2b00:	2301      	movs	r3, #1
    2b02:	465a      	mov	r2, fp
    2b04:	4093      	lsls	r3, r2
    2b06:	9301      	str	r3, [sp, #4]
    2b08:	2301      	movs	r3, #1
    2b0a:	4642      	mov	r2, r8
    2b0c:	4093      	lsls	r3, r2
    2b0e:	9300      	str	r3, [sp, #0]
    2b10:	e019      	b.n	2b46 <__udivmoddi4+0xaa>
    2b12:	4282      	cmp	r2, r0
    2b14:	d9d0      	bls.n	2ab8 <__udivmoddi4+0x1c>
    2b16:	2200      	movs	r2, #0
    2b18:	2300      	movs	r3, #0
    2b1a:	9200      	str	r2, [sp, #0]
    2b1c:	9301      	str	r3, [sp, #4]
    2b1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2b20:	2b00      	cmp	r3, #0
    2b22:	d001      	beq.n	2b28 <__udivmoddi4+0x8c>
    2b24:	601c      	str	r4, [r3, #0]
    2b26:	605d      	str	r5, [r3, #4]
    2b28:	9800      	ldr	r0, [sp, #0]
    2b2a:	9901      	ldr	r1, [sp, #4]
    2b2c:	b003      	add	sp, #12
    2b2e:	bc3c      	pop	{r2, r3, r4, r5}
    2b30:	4690      	mov	r8, r2
    2b32:	4699      	mov	r9, r3
    2b34:	46a2      	mov	sl, r4
    2b36:	46ab      	mov	fp, r5
    2b38:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b3a:	42a3      	cmp	r3, r4
    2b3c:	d9d6      	bls.n	2aec <__udivmoddi4+0x50>
    2b3e:	2200      	movs	r2, #0
    2b40:	2300      	movs	r3, #0
    2b42:	9200      	str	r2, [sp, #0]
    2b44:	9301      	str	r3, [sp, #4]
    2b46:	4643      	mov	r3, r8
    2b48:	2b00      	cmp	r3, #0
    2b4a:	d0e8      	beq.n	2b1e <__udivmoddi4+0x82>
    2b4c:	07fb      	lsls	r3, r7, #31
    2b4e:	0872      	lsrs	r2, r6, #1
    2b50:	431a      	orrs	r2, r3
    2b52:	4646      	mov	r6, r8
    2b54:	087b      	lsrs	r3, r7, #1
    2b56:	e00e      	b.n	2b76 <__udivmoddi4+0xda>
    2b58:	42ab      	cmp	r3, r5
    2b5a:	d101      	bne.n	2b60 <__udivmoddi4+0xc4>
    2b5c:	42a2      	cmp	r2, r4
    2b5e:	d80c      	bhi.n	2b7a <__udivmoddi4+0xde>
    2b60:	1aa4      	subs	r4, r4, r2
    2b62:	419d      	sbcs	r5, r3
    2b64:	2001      	movs	r0, #1
    2b66:	1924      	adds	r4, r4, r4
    2b68:	416d      	adcs	r5, r5
    2b6a:	2100      	movs	r1, #0
    2b6c:	3e01      	subs	r6, #1
    2b6e:	1824      	adds	r4, r4, r0
    2b70:	414d      	adcs	r5, r1
    2b72:	2e00      	cmp	r6, #0
    2b74:	d006      	beq.n	2b84 <__udivmoddi4+0xe8>
    2b76:	42ab      	cmp	r3, r5
    2b78:	d9ee      	bls.n	2b58 <__udivmoddi4+0xbc>
    2b7a:	3e01      	subs	r6, #1
    2b7c:	1924      	adds	r4, r4, r4
    2b7e:	416d      	adcs	r5, r5
    2b80:	2e00      	cmp	r6, #0
    2b82:	d1f8      	bne.n	2b76 <__udivmoddi4+0xda>
    2b84:	465b      	mov	r3, fp
    2b86:	9800      	ldr	r0, [sp, #0]
    2b88:	9901      	ldr	r1, [sp, #4]
    2b8a:	1900      	adds	r0, r0, r4
    2b8c:	4169      	adcs	r1, r5
    2b8e:	2b00      	cmp	r3, #0
    2b90:	db22      	blt.n	2bd8 <__udivmoddi4+0x13c>
    2b92:	002b      	movs	r3, r5
    2b94:	465a      	mov	r2, fp
    2b96:	40d3      	lsrs	r3, r2
    2b98:	002a      	movs	r2, r5
    2b9a:	4644      	mov	r4, r8
    2b9c:	40e2      	lsrs	r2, r4
    2b9e:	001c      	movs	r4, r3
    2ba0:	465b      	mov	r3, fp
    2ba2:	0015      	movs	r5, r2
    2ba4:	2b00      	cmp	r3, #0
    2ba6:	db2c      	blt.n	2c02 <__udivmoddi4+0x166>
    2ba8:	0026      	movs	r6, r4
    2baa:	409e      	lsls	r6, r3
    2bac:	0033      	movs	r3, r6
    2bae:	0026      	movs	r6, r4
    2bb0:	4647      	mov	r7, r8
    2bb2:	40be      	lsls	r6, r7
    2bb4:	0032      	movs	r2, r6
    2bb6:	1a80      	subs	r0, r0, r2
    2bb8:	4199      	sbcs	r1, r3
    2bba:	9000      	str	r0, [sp, #0]
    2bbc:	9101      	str	r1, [sp, #4]
    2bbe:	e7ae      	b.n	2b1e <__udivmoddi4+0x82>
    2bc0:	4642      	mov	r2, r8
    2bc2:	2320      	movs	r3, #32
    2bc4:	1a9b      	subs	r3, r3, r2
    2bc6:	4652      	mov	r2, sl
    2bc8:	40da      	lsrs	r2, r3
    2bca:	4641      	mov	r1, r8
    2bcc:	0013      	movs	r3, r2
    2bce:	464a      	mov	r2, r9
    2bd0:	408a      	lsls	r2, r1
    2bd2:	0017      	movs	r7, r2
    2bd4:	431f      	orrs	r7, r3
    2bd6:	e782      	b.n	2ade <__udivmoddi4+0x42>
    2bd8:	4642      	mov	r2, r8
    2bda:	2320      	movs	r3, #32
    2bdc:	1a9b      	subs	r3, r3, r2
    2bde:	002a      	movs	r2, r5
    2be0:	4646      	mov	r6, r8
    2be2:	409a      	lsls	r2, r3
    2be4:	0023      	movs	r3, r4
    2be6:	40f3      	lsrs	r3, r6
    2be8:	4313      	orrs	r3, r2
    2bea:	e7d5      	b.n	2b98 <__udivmoddi4+0xfc>
    2bec:	4642      	mov	r2, r8
    2bee:	2320      	movs	r3, #32
    2bf0:	2100      	movs	r1, #0
    2bf2:	1a9b      	subs	r3, r3, r2
    2bf4:	2200      	movs	r2, #0
    2bf6:	9100      	str	r1, [sp, #0]
    2bf8:	9201      	str	r2, [sp, #4]
    2bfa:	2201      	movs	r2, #1
    2bfc:	40da      	lsrs	r2, r3
    2bfe:	9201      	str	r2, [sp, #4]
    2c00:	e782      	b.n	2b08 <__udivmoddi4+0x6c>
    2c02:	4642      	mov	r2, r8
    2c04:	2320      	movs	r3, #32
    2c06:	0026      	movs	r6, r4
    2c08:	1a9b      	subs	r3, r3, r2
    2c0a:	40de      	lsrs	r6, r3
    2c0c:	002f      	movs	r7, r5
    2c0e:	46b4      	mov	ip, r6
    2c10:	4097      	lsls	r7, r2
    2c12:	4666      	mov	r6, ip
    2c14:	003b      	movs	r3, r7
    2c16:	4333      	orrs	r3, r6
    2c18:	e7c9      	b.n	2bae <__udivmoddi4+0x112>
    2c1a:	46c0      	nop			; (mov r8, r8)

00002c1c <__aeabi_fadd>:
    2c1c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c1e:	46c6      	mov	lr, r8
    2c20:	024e      	lsls	r6, r1, #9
    2c22:	0247      	lsls	r7, r0, #9
    2c24:	0a76      	lsrs	r6, r6, #9
    2c26:	0a7b      	lsrs	r3, r7, #9
    2c28:	0044      	lsls	r4, r0, #1
    2c2a:	0fc5      	lsrs	r5, r0, #31
    2c2c:	00f7      	lsls	r7, r6, #3
    2c2e:	0048      	lsls	r0, r1, #1
    2c30:	4698      	mov	r8, r3
    2c32:	b500      	push	{lr}
    2c34:	0e24      	lsrs	r4, r4, #24
    2c36:	002a      	movs	r2, r5
    2c38:	00db      	lsls	r3, r3, #3
    2c3a:	0e00      	lsrs	r0, r0, #24
    2c3c:	0fc9      	lsrs	r1, r1, #31
    2c3e:	46bc      	mov	ip, r7
    2c40:	428d      	cmp	r5, r1
    2c42:	d067      	beq.n	2d14 <__aeabi_fadd+0xf8>
    2c44:	1a22      	subs	r2, r4, r0
    2c46:	2a00      	cmp	r2, #0
    2c48:	dc00      	bgt.n	2c4c <__aeabi_fadd+0x30>
    2c4a:	e0a5      	b.n	2d98 <__aeabi_fadd+0x17c>
    2c4c:	2800      	cmp	r0, #0
    2c4e:	d13a      	bne.n	2cc6 <__aeabi_fadd+0xaa>
    2c50:	2f00      	cmp	r7, #0
    2c52:	d100      	bne.n	2c56 <__aeabi_fadd+0x3a>
    2c54:	e093      	b.n	2d7e <__aeabi_fadd+0x162>
    2c56:	1e51      	subs	r1, r2, #1
    2c58:	2900      	cmp	r1, #0
    2c5a:	d000      	beq.n	2c5e <__aeabi_fadd+0x42>
    2c5c:	e0bc      	b.n	2dd8 <__aeabi_fadd+0x1bc>
    2c5e:	2401      	movs	r4, #1
    2c60:	1bdb      	subs	r3, r3, r7
    2c62:	015a      	lsls	r2, r3, #5
    2c64:	d546      	bpl.n	2cf4 <__aeabi_fadd+0xd8>
    2c66:	019b      	lsls	r3, r3, #6
    2c68:	099e      	lsrs	r6, r3, #6
    2c6a:	0030      	movs	r0, r6
    2c6c:	f001 fbfa 	bl	4464 <__clzsi2>
    2c70:	3805      	subs	r0, #5
    2c72:	4086      	lsls	r6, r0
    2c74:	4284      	cmp	r4, r0
    2c76:	dd00      	ble.n	2c7a <__aeabi_fadd+0x5e>
    2c78:	e09d      	b.n	2db6 <__aeabi_fadd+0x19a>
    2c7a:	1b04      	subs	r4, r0, r4
    2c7c:	0032      	movs	r2, r6
    2c7e:	2020      	movs	r0, #32
    2c80:	3401      	adds	r4, #1
    2c82:	40e2      	lsrs	r2, r4
    2c84:	1b04      	subs	r4, r0, r4
    2c86:	40a6      	lsls	r6, r4
    2c88:	0033      	movs	r3, r6
    2c8a:	1e5e      	subs	r6, r3, #1
    2c8c:	41b3      	sbcs	r3, r6
    2c8e:	2400      	movs	r4, #0
    2c90:	4313      	orrs	r3, r2
    2c92:	075a      	lsls	r2, r3, #29
    2c94:	d004      	beq.n	2ca0 <__aeabi_fadd+0x84>
    2c96:	220f      	movs	r2, #15
    2c98:	401a      	ands	r2, r3
    2c9a:	2a04      	cmp	r2, #4
    2c9c:	d000      	beq.n	2ca0 <__aeabi_fadd+0x84>
    2c9e:	3304      	adds	r3, #4
    2ca0:	015a      	lsls	r2, r3, #5
    2ca2:	d529      	bpl.n	2cf8 <__aeabi_fadd+0xdc>
    2ca4:	3401      	adds	r4, #1
    2ca6:	2cff      	cmp	r4, #255	; 0xff
    2ca8:	d100      	bne.n	2cac <__aeabi_fadd+0x90>
    2caa:	e081      	b.n	2db0 <__aeabi_fadd+0x194>
    2cac:	002a      	movs	r2, r5
    2cae:	019b      	lsls	r3, r3, #6
    2cb0:	0a5b      	lsrs	r3, r3, #9
    2cb2:	b2e4      	uxtb	r4, r4
    2cb4:	025b      	lsls	r3, r3, #9
    2cb6:	05e4      	lsls	r4, r4, #23
    2cb8:	0a58      	lsrs	r0, r3, #9
    2cba:	07d2      	lsls	r2, r2, #31
    2cbc:	4320      	orrs	r0, r4
    2cbe:	4310      	orrs	r0, r2
    2cc0:	bc04      	pop	{r2}
    2cc2:	4690      	mov	r8, r2
    2cc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2cc6:	2cff      	cmp	r4, #255	; 0xff
    2cc8:	d0e3      	beq.n	2c92 <__aeabi_fadd+0x76>
    2cca:	2180      	movs	r1, #128	; 0x80
    2ccc:	0038      	movs	r0, r7
    2cce:	04c9      	lsls	r1, r1, #19
    2cd0:	4308      	orrs	r0, r1
    2cd2:	4684      	mov	ip, r0
    2cd4:	2a1b      	cmp	r2, #27
    2cd6:	dd00      	ble.n	2cda <__aeabi_fadd+0xbe>
    2cd8:	e082      	b.n	2de0 <__aeabi_fadd+0x1c4>
    2cda:	2020      	movs	r0, #32
    2cdc:	4661      	mov	r1, ip
    2cde:	40d1      	lsrs	r1, r2
    2ce0:	1a82      	subs	r2, r0, r2
    2ce2:	4660      	mov	r0, ip
    2ce4:	4090      	lsls	r0, r2
    2ce6:	0002      	movs	r2, r0
    2ce8:	1e50      	subs	r0, r2, #1
    2cea:	4182      	sbcs	r2, r0
    2cec:	430a      	orrs	r2, r1
    2cee:	1a9b      	subs	r3, r3, r2
    2cf0:	015a      	lsls	r2, r3, #5
    2cf2:	d4b8      	bmi.n	2c66 <__aeabi_fadd+0x4a>
    2cf4:	075a      	lsls	r2, r3, #29
    2cf6:	d1ce      	bne.n	2c96 <__aeabi_fadd+0x7a>
    2cf8:	08de      	lsrs	r6, r3, #3
    2cfa:	002a      	movs	r2, r5
    2cfc:	2cff      	cmp	r4, #255	; 0xff
    2cfe:	d13a      	bne.n	2d76 <__aeabi_fadd+0x15a>
    2d00:	2e00      	cmp	r6, #0
    2d02:	d100      	bne.n	2d06 <__aeabi_fadd+0xea>
    2d04:	e0ae      	b.n	2e64 <__aeabi_fadd+0x248>
    2d06:	2380      	movs	r3, #128	; 0x80
    2d08:	03db      	lsls	r3, r3, #15
    2d0a:	4333      	orrs	r3, r6
    2d0c:	025b      	lsls	r3, r3, #9
    2d0e:	0a5b      	lsrs	r3, r3, #9
    2d10:	24ff      	movs	r4, #255	; 0xff
    2d12:	e7cf      	b.n	2cb4 <__aeabi_fadd+0x98>
    2d14:	1a21      	subs	r1, r4, r0
    2d16:	2900      	cmp	r1, #0
    2d18:	dd52      	ble.n	2dc0 <__aeabi_fadd+0x1a4>
    2d1a:	2800      	cmp	r0, #0
    2d1c:	d031      	beq.n	2d82 <__aeabi_fadd+0x166>
    2d1e:	2cff      	cmp	r4, #255	; 0xff
    2d20:	d0b7      	beq.n	2c92 <__aeabi_fadd+0x76>
    2d22:	2080      	movs	r0, #128	; 0x80
    2d24:	003e      	movs	r6, r7
    2d26:	04c0      	lsls	r0, r0, #19
    2d28:	4306      	orrs	r6, r0
    2d2a:	46b4      	mov	ip, r6
    2d2c:	291b      	cmp	r1, #27
    2d2e:	dd00      	ble.n	2d32 <__aeabi_fadd+0x116>
    2d30:	e0aa      	b.n	2e88 <__aeabi_fadd+0x26c>
    2d32:	2620      	movs	r6, #32
    2d34:	4660      	mov	r0, ip
    2d36:	40c8      	lsrs	r0, r1
    2d38:	1a71      	subs	r1, r6, r1
    2d3a:	4666      	mov	r6, ip
    2d3c:	408e      	lsls	r6, r1
    2d3e:	0031      	movs	r1, r6
    2d40:	1e4e      	subs	r6, r1, #1
    2d42:	41b1      	sbcs	r1, r6
    2d44:	4301      	orrs	r1, r0
    2d46:	185b      	adds	r3, r3, r1
    2d48:	0159      	lsls	r1, r3, #5
    2d4a:	d5d3      	bpl.n	2cf4 <__aeabi_fadd+0xd8>
    2d4c:	3401      	adds	r4, #1
    2d4e:	2cff      	cmp	r4, #255	; 0xff
    2d50:	d100      	bne.n	2d54 <__aeabi_fadd+0x138>
    2d52:	e087      	b.n	2e64 <__aeabi_fadd+0x248>
    2d54:	2201      	movs	r2, #1
    2d56:	4978      	ldr	r1, [pc, #480]	; (2f38 <__aeabi_fadd+0x31c>)
    2d58:	401a      	ands	r2, r3
    2d5a:	085b      	lsrs	r3, r3, #1
    2d5c:	400b      	ands	r3, r1
    2d5e:	4313      	orrs	r3, r2
    2d60:	e797      	b.n	2c92 <__aeabi_fadd+0x76>
    2d62:	2c00      	cmp	r4, #0
    2d64:	d000      	beq.n	2d68 <__aeabi_fadd+0x14c>
    2d66:	e0a7      	b.n	2eb8 <__aeabi_fadd+0x29c>
    2d68:	2b00      	cmp	r3, #0
    2d6a:	d000      	beq.n	2d6e <__aeabi_fadd+0x152>
    2d6c:	e0b6      	b.n	2edc <__aeabi_fadd+0x2c0>
    2d6e:	1e3b      	subs	r3, r7, #0
    2d70:	d162      	bne.n	2e38 <__aeabi_fadd+0x21c>
    2d72:	2600      	movs	r6, #0
    2d74:	2200      	movs	r2, #0
    2d76:	0273      	lsls	r3, r6, #9
    2d78:	0a5b      	lsrs	r3, r3, #9
    2d7a:	b2e4      	uxtb	r4, r4
    2d7c:	e79a      	b.n	2cb4 <__aeabi_fadd+0x98>
    2d7e:	0014      	movs	r4, r2
    2d80:	e787      	b.n	2c92 <__aeabi_fadd+0x76>
    2d82:	2f00      	cmp	r7, #0
    2d84:	d04d      	beq.n	2e22 <__aeabi_fadd+0x206>
    2d86:	1e48      	subs	r0, r1, #1
    2d88:	2800      	cmp	r0, #0
    2d8a:	d157      	bne.n	2e3c <__aeabi_fadd+0x220>
    2d8c:	4463      	add	r3, ip
    2d8e:	2401      	movs	r4, #1
    2d90:	015a      	lsls	r2, r3, #5
    2d92:	d5af      	bpl.n	2cf4 <__aeabi_fadd+0xd8>
    2d94:	2402      	movs	r4, #2
    2d96:	e7dd      	b.n	2d54 <__aeabi_fadd+0x138>
    2d98:	2a00      	cmp	r2, #0
    2d9a:	d124      	bne.n	2de6 <__aeabi_fadd+0x1ca>
    2d9c:	1c62      	adds	r2, r4, #1
    2d9e:	b2d2      	uxtb	r2, r2
    2da0:	2a01      	cmp	r2, #1
    2da2:	ddde      	ble.n	2d62 <__aeabi_fadd+0x146>
    2da4:	1bde      	subs	r6, r3, r7
    2da6:	0172      	lsls	r2, r6, #5
    2da8:	d535      	bpl.n	2e16 <__aeabi_fadd+0x1fa>
    2daa:	1afe      	subs	r6, r7, r3
    2dac:	000d      	movs	r5, r1
    2dae:	e75c      	b.n	2c6a <__aeabi_fadd+0x4e>
    2db0:	002a      	movs	r2, r5
    2db2:	2300      	movs	r3, #0
    2db4:	e77e      	b.n	2cb4 <__aeabi_fadd+0x98>
    2db6:	0033      	movs	r3, r6
    2db8:	4a60      	ldr	r2, [pc, #384]	; (2f3c <__aeabi_fadd+0x320>)
    2dba:	1a24      	subs	r4, r4, r0
    2dbc:	4013      	ands	r3, r2
    2dbe:	e768      	b.n	2c92 <__aeabi_fadd+0x76>
    2dc0:	2900      	cmp	r1, #0
    2dc2:	d163      	bne.n	2e8c <__aeabi_fadd+0x270>
    2dc4:	1c61      	adds	r1, r4, #1
    2dc6:	b2c8      	uxtb	r0, r1
    2dc8:	2801      	cmp	r0, #1
    2dca:	dd4e      	ble.n	2e6a <__aeabi_fadd+0x24e>
    2dcc:	29ff      	cmp	r1, #255	; 0xff
    2dce:	d049      	beq.n	2e64 <__aeabi_fadd+0x248>
    2dd0:	4463      	add	r3, ip
    2dd2:	085b      	lsrs	r3, r3, #1
    2dd4:	000c      	movs	r4, r1
    2dd6:	e75c      	b.n	2c92 <__aeabi_fadd+0x76>
    2dd8:	2aff      	cmp	r2, #255	; 0xff
    2dda:	d041      	beq.n	2e60 <__aeabi_fadd+0x244>
    2ddc:	000a      	movs	r2, r1
    2dde:	e779      	b.n	2cd4 <__aeabi_fadd+0xb8>
    2de0:	2201      	movs	r2, #1
    2de2:	1a9b      	subs	r3, r3, r2
    2de4:	e784      	b.n	2cf0 <__aeabi_fadd+0xd4>
    2de6:	2c00      	cmp	r4, #0
    2de8:	d01d      	beq.n	2e26 <__aeabi_fadd+0x20a>
    2dea:	28ff      	cmp	r0, #255	; 0xff
    2dec:	d022      	beq.n	2e34 <__aeabi_fadd+0x218>
    2dee:	2480      	movs	r4, #128	; 0x80
    2df0:	04e4      	lsls	r4, r4, #19
    2df2:	4252      	negs	r2, r2
    2df4:	4323      	orrs	r3, r4
    2df6:	2a1b      	cmp	r2, #27
    2df8:	dd00      	ble.n	2dfc <__aeabi_fadd+0x1e0>
    2dfa:	e08a      	b.n	2f12 <__aeabi_fadd+0x2f6>
    2dfc:	001c      	movs	r4, r3
    2dfe:	2520      	movs	r5, #32
    2e00:	40d4      	lsrs	r4, r2
    2e02:	1aaa      	subs	r2, r5, r2
    2e04:	4093      	lsls	r3, r2
    2e06:	1e5a      	subs	r2, r3, #1
    2e08:	4193      	sbcs	r3, r2
    2e0a:	4323      	orrs	r3, r4
    2e0c:	4662      	mov	r2, ip
    2e0e:	0004      	movs	r4, r0
    2e10:	1ad3      	subs	r3, r2, r3
    2e12:	000d      	movs	r5, r1
    2e14:	e725      	b.n	2c62 <__aeabi_fadd+0x46>
    2e16:	2e00      	cmp	r6, #0
    2e18:	d000      	beq.n	2e1c <__aeabi_fadd+0x200>
    2e1a:	e726      	b.n	2c6a <__aeabi_fadd+0x4e>
    2e1c:	2200      	movs	r2, #0
    2e1e:	2400      	movs	r4, #0
    2e20:	e7a9      	b.n	2d76 <__aeabi_fadd+0x15a>
    2e22:	000c      	movs	r4, r1
    2e24:	e735      	b.n	2c92 <__aeabi_fadd+0x76>
    2e26:	2b00      	cmp	r3, #0
    2e28:	d04d      	beq.n	2ec6 <__aeabi_fadd+0x2aa>
    2e2a:	43d2      	mvns	r2, r2
    2e2c:	2a00      	cmp	r2, #0
    2e2e:	d0ed      	beq.n	2e0c <__aeabi_fadd+0x1f0>
    2e30:	28ff      	cmp	r0, #255	; 0xff
    2e32:	d1e0      	bne.n	2df6 <__aeabi_fadd+0x1da>
    2e34:	4663      	mov	r3, ip
    2e36:	24ff      	movs	r4, #255	; 0xff
    2e38:	000d      	movs	r5, r1
    2e3a:	e72a      	b.n	2c92 <__aeabi_fadd+0x76>
    2e3c:	29ff      	cmp	r1, #255	; 0xff
    2e3e:	d00f      	beq.n	2e60 <__aeabi_fadd+0x244>
    2e40:	0001      	movs	r1, r0
    2e42:	e773      	b.n	2d2c <__aeabi_fadd+0x110>
    2e44:	2b00      	cmp	r3, #0
    2e46:	d061      	beq.n	2f0c <__aeabi_fadd+0x2f0>
    2e48:	24ff      	movs	r4, #255	; 0xff
    2e4a:	2f00      	cmp	r7, #0
    2e4c:	d100      	bne.n	2e50 <__aeabi_fadd+0x234>
    2e4e:	e720      	b.n	2c92 <__aeabi_fadd+0x76>
    2e50:	2280      	movs	r2, #128	; 0x80
    2e52:	4641      	mov	r1, r8
    2e54:	03d2      	lsls	r2, r2, #15
    2e56:	4211      	tst	r1, r2
    2e58:	d002      	beq.n	2e60 <__aeabi_fadd+0x244>
    2e5a:	4216      	tst	r6, r2
    2e5c:	d100      	bne.n	2e60 <__aeabi_fadd+0x244>
    2e5e:	003b      	movs	r3, r7
    2e60:	24ff      	movs	r4, #255	; 0xff
    2e62:	e716      	b.n	2c92 <__aeabi_fadd+0x76>
    2e64:	24ff      	movs	r4, #255	; 0xff
    2e66:	2300      	movs	r3, #0
    2e68:	e724      	b.n	2cb4 <__aeabi_fadd+0x98>
    2e6a:	2c00      	cmp	r4, #0
    2e6c:	d1ea      	bne.n	2e44 <__aeabi_fadd+0x228>
    2e6e:	2b00      	cmp	r3, #0
    2e70:	d058      	beq.n	2f24 <__aeabi_fadd+0x308>
    2e72:	2f00      	cmp	r7, #0
    2e74:	d100      	bne.n	2e78 <__aeabi_fadd+0x25c>
    2e76:	e70c      	b.n	2c92 <__aeabi_fadd+0x76>
    2e78:	4463      	add	r3, ip
    2e7a:	015a      	lsls	r2, r3, #5
    2e7c:	d400      	bmi.n	2e80 <__aeabi_fadd+0x264>
    2e7e:	e739      	b.n	2cf4 <__aeabi_fadd+0xd8>
    2e80:	4a2e      	ldr	r2, [pc, #184]	; (2f3c <__aeabi_fadd+0x320>)
    2e82:	000c      	movs	r4, r1
    2e84:	4013      	ands	r3, r2
    2e86:	e704      	b.n	2c92 <__aeabi_fadd+0x76>
    2e88:	2101      	movs	r1, #1
    2e8a:	e75c      	b.n	2d46 <__aeabi_fadd+0x12a>
    2e8c:	2c00      	cmp	r4, #0
    2e8e:	d11e      	bne.n	2ece <__aeabi_fadd+0x2b2>
    2e90:	2b00      	cmp	r3, #0
    2e92:	d040      	beq.n	2f16 <__aeabi_fadd+0x2fa>
    2e94:	43c9      	mvns	r1, r1
    2e96:	2900      	cmp	r1, #0
    2e98:	d00b      	beq.n	2eb2 <__aeabi_fadd+0x296>
    2e9a:	28ff      	cmp	r0, #255	; 0xff
    2e9c:	d036      	beq.n	2f0c <__aeabi_fadd+0x2f0>
    2e9e:	291b      	cmp	r1, #27
    2ea0:	dc47      	bgt.n	2f32 <__aeabi_fadd+0x316>
    2ea2:	001c      	movs	r4, r3
    2ea4:	2620      	movs	r6, #32
    2ea6:	40cc      	lsrs	r4, r1
    2ea8:	1a71      	subs	r1, r6, r1
    2eaa:	408b      	lsls	r3, r1
    2eac:	1e59      	subs	r1, r3, #1
    2eae:	418b      	sbcs	r3, r1
    2eb0:	4323      	orrs	r3, r4
    2eb2:	4463      	add	r3, ip
    2eb4:	0004      	movs	r4, r0
    2eb6:	e747      	b.n	2d48 <__aeabi_fadd+0x12c>
    2eb8:	2b00      	cmp	r3, #0
    2eba:	d118      	bne.n	2eee <__aeabi_fadd+0x2d2>
    2ebc:	1e3b      	subs	r3, r7, #0
    2ebe:	d02d      	beq.n	2f1c <__aeabi_fadd+0x300>
    2ec0:	000d      	movs	r5, r1
    2ec2:	24ff      	movs	r4, #255	; 0xff
    2ec4:	e6e5      	b.n	2c92 <__aeabi_fadd+0x76>
    2ec6:	003b      	movs	r3, r7
    2ec8:	0004      	movs	r4, r0
    2eca:	000d      	movs	r5, r1
    2ecc:	e6e1      	b.n	2c92 <__aeabi_fadd+0x76>
    2ece:	28ff      	cmp	r0, #255	; 0xff
    2ed0:	d01c      	beq.n	2f0c <__aeabi_fadd+0x2f0>
    2ed2:	2480      	movs	r4, #128	; 0x80
    2ed4:	04e4      	lsls	r4, r4, #19
    2ed6:	4249      	negs	r1, r1
    2ed8:	4323      	orrs	r3, r4
    2eda:	e7e0      	b.n	2e9e <__aeabi_fadd+0x282>
    2edc:	2f00      	cmp	r7, #0
    2ede:	d100      	bne.n	2ee2 <__aeabi_fadd+0x2c6>
    2ee0:	e6d7      	b.n	2c92 <__aeabi_fadd+0x76>
    2ee2:	1bde      	subs	r6, r3, r7
    2ee4:	0172      	lsls	r2, r6, #5
    2ee6:	d51f      	bpl.n	2f28 <__aeabi_fadd+0x30c>
    2ee8:	1afb      	subs	r3, r7, r3
    2eea:	000d      	movs	r5, r1
    2eec:	e6d1      	b.n	2c92 <__aeabi_fadd+0x76>
    2eee:	24ff      	movs	r4, #255	; 0xff
    2ef0:	2f00      	cmp	r7, #0
    2ef2:	d100      	bne.n	2ef6 <__aeabi_fadd+0x2da>
    2ef4:	e6cd      	b.n	2c92 <__aeabi_fadd+0x76>
    2ef6:	2280      	movs	r2, #128	; 0x80
    2ef8:	4640      	mov	r0, r8
    2efa:	03d2      	lsls	r2, r2, #15
    2efc:	4210      	tst	r0, r2
    2efe:	d0af      	beq.n	2e60 <__aeabi_fadd+0x244>
    2f00:	4216      	tst	r6, r2
    2f02:	d1ad      	bne.n	2e60 <__aeabi_fadd+0x244>
    2f04:	003b      	movs	r3, r7
    2f06:	000d      	movs	r5, r1
    2f08:	24ff      	movs	r4, #255	; 0xff
    2f0a:	e6c2      	b.n	2c92 <__aeabi_fadd+0x76>
    2f0c:	4663      	mov	r3, ip
    2f0e:	24ff      	movs	r4, #255	; 0xff
    2f10:	e6bf      	b.n	2c92 <__aeabi_fadd+0x76>
    2f12:	2301      	movs	r3, #1
    2f14:	e77a      	b.n	2e0c <__aeabi_fadd+0x1f0>
    2f16:	003b      	movs	r3, r7
    2f18:	0004      	movs	r4, r0
    2f1a:	e6ba      	b.n	2c92 <__aeabi_fadd+0x76>
    2f1c:	2680      	movs	r6, #128	; 0x80
    2f1e:	2200      	movs	r2, #0
    2f20:	03f6      	lsls	r6, r6, #15
    2f22:	e6f0      	b.n	2d06 <__aeabi_fadd+0xea>
    2f24:	003b      	movs	r3, r7
    2f26:	e6b4      	b.n	2c92 <__aeabi_fadd+0x76>
    2f28:	1e33      	subs	r3, r6, #0
    2f2a:	d000      	beq.n	2f2e <__aeabi_fadd+0x312>
    2f2c:	e6e2      	b.n	2cf4 <__aeabi_fadd+0xd8>
    2f2e:	2200      	movs	r2, #0
    2f30:	e721      	b.n	2d76 <__aeabi_fadd+0x15a>
    2f32:	2301      	movs	r3, #1
    2f34:	e7bd      	b.n	2eb2 <__aeabi_fadd+0x296>
    2f36:	46c0      	nop			; (mov r8, r8)
    2f38:	7dffffff 	.word	0x7dffffff
    2f3c:	fbffffff 	.word	0xfbffffff

00002f40 <__aeabi_ddiv>:
    2f40:	b5f0      	push	{r4, r5, r6, r7, lr}
    2f42:	4657      	mov	r7, sl
    2f44:	4645      	mov	r5, r8
    2f46:	46de      	mov	lr, fp
    2f48:	464e      	mov	r6, r9
    2f4a:	b5e0      	push	{r5, r6, r7, lr}
    2f4c:	004c      	lsls	r4, r1, #1
    2f4e:	030e      	lsls	r6, r1, #12
    2f50:	b087      	sub	sp, #28
    2f52:	4683      	mov	fp, r0
    2f54:	4692      	mov	sl, r2
    2f56:	001d      	movs	r5, r3
    2f58:	4680      	mov	r8, r0
    2f5a:	0b36      	lsrs	r6, r6, #12
    2f5c:	0d64      	lsrs	r4, r4, #21
    2f5e:	0fcf      	lsrs	r7, r1, #31
    2f60:	2c00      	cmp	r4, #0
    2f62:	d04f      	beq.n	3004 <__aeabi_ddiv+0xc4>
    2f64:	4b6f      	ldr	r3, [pc, #444]	; (3124 <__aeabi_ddiv+0x1e4>)
    2f66:	429c      	cmp	r4, r3
    2f68:	d035      	beq.n	2fd6 <__aeabi_ddiv+0x96>
    2f6a:	2380      	movs	r3, #128	; 0x80
    2f6c:	0f42      	lsrs	r2, r0, #29
    2f6e:	041b      	lsls	r3, r3, #16
    2f70:	00f6      	lsls	r6, r6, #3
    2f72:	4313      	orrs	r3, r2
    2f74:	4333      	orrs	r3, r6
    2f76:	4699      	mov	r9, r3
    2f78:	00c3      	lsls	r3, r0, #3
    2f7a:	4698      	mov	r8, r3
    2f7c:	4b6a      	ldr	r3, [pc, #424]	; (3128 <__aeabi_ddiv+0x1e8>)
    2f7e:	2600      	movs	r6, #0
    2f80:	469c      	mov	ip, r3
    2f82:	2300      	movs	r3, #0
    2f84:	4464      	add	r4, ip
    2f86:	9303      	str	r3, [sp, #12]
    2f88:	032b      	lsls	r3, r5, #12
    2f8a:	0b1b      	lsrs	r3, r3, #12
    2f8c:	469b      	mov	fp, r3
    2f8e:	006b      	lsls	r3, r5, #1
    2f90:	0fed      	lsrs	r5, r5, #31
    2f92:	4650      	mov	r0, sl
    2f94:	0d5b      	lsrs	r3, r3, #21
    2f96:	9501      	str	r5, [sp, #4]
    2f98:	d05e      	beq.n	3058 <__aeabi_ddiv+0x118>
    2f9a:	4a62      	ldr	r2, [pc, #392]	; (3124 <__aeabi_ddiv+0x1e4>)
    2f9c:	4293      	cmp	r3, r2
    2f9e:	d053      	beq.n	3048 <__aeabi_ddiv+0x108>
    2fa0:	465a      	mov	r2, fp
    2fa2:	00d1      	lsls	r1, r2, #3
    2fa4:	2280      	movs	r2, #128	; 0x80
    2fa6:	0f40      	lsrs	r0, r0, #29
    2fa8:	0412      	lsls	r2, r2, #16
    2faa:	4302      	orrs	r2, r0
    2fac:	430a      	orrs	r2, r1
    2fae:	4693      	mov	fp, r2
    2fb0:	4652      	mov	r2, sl
    2fb2:	00d1      	lsls	r1, r2, #3
    2fb4:	4a5c      	ldr	r2, [pc, #368]	; (3128 <__aeabi_ddiv+0x1e8>)
    2fb6:	4694      	mov	ip, r2
    2fb8:	2200      	movs	r2, #0
    2fba:	4463      	add	r3, ip
    2fbc:	0038      	movs	r0, r7
    2fbe:	4068      	eors	r0, r5
    2fc0:	4684      	mov	ip, r0
    2fc2:	9002      	str	r0, [sp, #8]
    2fc4:	1ae4      	subs	r4, r4, r3
    2fc6:	4316      	orrs	r6, r2
    2fc8:	2e0f      	cmp	r6, #15
    2fca:	d900      	bls.n	2fce <__aeabi_ddiv+0x8e>
    2fcc:	e0b4      	b.n	3138 <__aeabi_ddiv+0x1f8>
    2fce:	4b57      	ldr	r3, [pc, #348]	; (312c <__aeabi_ddiv+0x1ec>)
    2fd0:	00b6      	lsls	r6, r6, #2
    2fd2:	599b      	ldr	r3, [r3, r6]
    2fd4:	469f      	mov	pc, r3
    2fd6:	0003      	movs	r3, r0
    2fd8:	4333      	orrs	r3, r6
    2fda:	4699      	mov	r9, r3
    2fdc:	d16c      	bne.n	30b8 <__aeabi_ddiv+0x178>
    2fde:	2300      	movs	r3, #0
    2fe0:	4698      	mov	r8, r3
    2fe2:	3302      	adds	r3, #2
    2fe4:	2608      	movs	r6, #8
    2fe6:	9303      	str	r3, [sp, #12]
    2fe8:	e7ce      	b.n	2f88 <__aeabi_ddiv+0x48>
    2fea:	46cb      	mov	fp, r9
    2fec:	4641      	mov	r1, r8
    2fee:	9a03      	ldr	r2, [sp, #12]
    2ff0:	9701      	str	r7, [sp, #4]
    2ff2:	2a02      	cmp	r2, #2
    2ff4:	d165      	bne.n	30c2 <__aeabi_ddiv+0x182>
    2ff6:	9b01      	ldr	r3, [sp, #4]
    2ff8:	4c4a      	ldr	r4, [pc, #296]	; (3124 <__aeabi_ddiv+0x1e4>)
    2ffa:	469c      	mov	ip, r3
    2ffc:	2300      	movs	r3, #0
    2ffe:	2200      	movs	r2, #0
    3000:	4698      	mov	r8, r3
    3002:	e06b      	b.n	30dc <__aeabi_ddiv+0x19c>
    3004:	0003      	movs	r3, r0
    3006:	4333      	orrs	r3, r6
    3008:	4699      	mov	r9, r3
    300a:	d04e      	beq.n	30aa <__aeabi_ddiv+0x16a>
    300c:	2e00      	cmp	r6, #0
    300e:	d100      	bne.n	3012 <__aeabi_ddiv+0xd2>
    3010:	e1bc      	b.n	338c <__aeabi_ddiv+0x44c>
    3012:	0030      	movs	r0, r6
    3014:	f001 fa26 	bl	4464 <__clzsi2>
    3018:	0003      	movs	r3, r0
    301a:	3b0b      	subs	r3, #11
    301c:	2b1c      	cmp	r3, #28
    301e:	dd00      	ble.n	3022 <__aeabi_ddiv+0xe2>
    3020:	e1ac      	b.n	337c <__aeabi_ddiv+0x43c>
    3022:	221d      	movs	r2, #29
    3024:	1ad3      	subs	r3, r2, r3
    3026:	465a      	mov	r2, fp
    3028:	0001      	movs	r1, r0
    302a:	40da      	lsrs	r2, r3
    302c:	3908      	subs	r1, #8
    302e:	408e      	lsls	r6, r1
    3030:	0013      	movs	r3, r2
    3032:	4333      	orrs	r3, r6
    3034:	4699      	mov	r9, r3
    3036:	465b      	mov	r3, fp
    3038:	408b      	lsls	r3, r1
    303a:	4698      	mov	r8, r3
    303c:	2300      	movs	r3, #0
    303e:	4c3c      	ldr	r4, [pc, #240]	; (3130 <__aeabi_ddiv+0x1f0>)
    3040:	2600      	movs	r6, #0
    3042:	1a24      	subs	r4, r4, r0
    3044:	9303      	str	r3, [sp, #12]
    3046:	e79f      	b.n	2f88 <__aeabi_ddiv+0x48>
    3048:	4651      	mov	r1, sl
    304a:	465a      	mov	r2, fp
    304c:	4311      	orrs	r1, r2
    304e:	d129      	bne.n	30a4 <__aeabi_ddiv+0x164>
    3050:	2200      	movs	r2, #0
    3052:	4693      	mov	fp, r2
    3054:	3202      	adds	r2, #2
    3056:	e7b1      	b.n	2fbc <__aeabi_ddiv+0x7c>
    3058:	4659      	mov	r1, fp
    305a:	4301      	orrs	r1, r0
    305c:	d01e      	beq.n	309c <__aeabi_ddiv+0x15c>
    305e:	465b      	mov	r3, fp
    3060:	2b00      	cmp	r3, #0
    3062:	d100      	bne.n	3066 <__aeabi_ddiv+0x126>
    3064:	e19e      	b.n	33a4 <__aeabi_ddiv+0x464>
    3066:	4658      	mov	r0, fp
    3068:	f001 f9fc 	bl	4464 <__clzsi2>
    306c:	0003      	movs	r3, r0
    306e:	3b0b      	subs	r3, #11
    3070:	2b1c      	cmp	r3, #28
    3072:	dd00      	ble.n	3076 <__aeabi_ddiv+0x136>
    3074:	e18f      	b.n	3396 <__aeabi_ddiv+0x456>
    3076:	0002      	movs	r2, r0
    3078:	4659      	mov	r1, fp
    307a:	3a08      	subs	r2, #8
    307c:	4091      	lsls	r1, r2
    307e:	468b      	mov	fp, r1
    3080:	211d      	movs	r1, #29
    3082:	1acb      	subs	r3, r1, r3
    3084:	4651      	mov	r1, sl
    3086:	40d9      	lsrs	r1, r3
    3088:	000b      	movs	r3, r1
    308a:	4659      	mov	r1, fp
    308c:	430b      	orrs	r3, r1
    308e:	4651      	mov	r1, sl
    3090:	469b      	mov	fp, r3
    3092:	4091      	lsls	r1, r2
    3094:	4b26      	ldr	r3, [pc, #152]	; (3130 <__aeabi_ddiv+0x1f0>)
    3096:	2200      	movs	r2, #0
    3098:	1a1b      	subs	r3, r3, r0
    309a:	e78f      	b.n	2fbc <__aeabi_ddiv+0x7c>
    309c:	2300      	movs	r3, #0
    309e:	2201      	movs	r2, #1
    30a0:	469b      	mov	fp, r3
    30a2:	e78b      	b.n	2fbc <__aeabi_ddiv+0x7c>
    30a4:	4651      	mov	r1, sl
    30a6:	2203      	movs	r2, #3
    30a8:	e788      	b.n	2fbc <__aeabi_ddiv+0x7c>
    30aa:	2300      	movs	r3, #0
    30ac:	4698      	mov	r8, r3
    30ae:	3301      	adds	r3, #1
    30b0:	2604      	movs	r6, #4
    30b2:	2400      	movs	r4, #0
    30b4:	9303      	str	r3, [sp, #12]
    30b6:	e767      	b.n	2f88 <__aeabi_ddiv+0x48>
    30b8:	2303      	movs	r3, #3
    30ba:	46b1      	mov	r9, r6
    30bc:	9303      	str	r3, [sp, #12]
    30be:	260c      	movs	r6, #12
    30c0:	e762      	b.n	2f88 <__aeabi_ddiv+0x48>
    30c2:	2a03      	cmp	r2, #3
    30c4:	d100      	bne.n	30c8 <__aeabi_ddiv+0x188>
    30c6:	e25c      	b.n	3582 <__aeabi_ddiv+0x642>
    30c8:	9b01      	ldr	r3, [sp, #4]
    30ca:	2a01      	cmp	r2, #1
    30cc:	d000      	beq.n	30d0 <__aeabi_ddiv+0x190>
    30ce:	e1e4      	b.n	349a <__aeabi_ddiv+0x55a>
    30d0:	4013      	ands	r3, r2
    30d2:	469c      	mov	ip, r3
    30d4:	2300      	movs	r3, #0
    30d6:	2400      	movs	r4, #0
    30d8:	2200      	movs	r2, #0
    30da:	4698      	mov	r8, r3
    30dc:	2100      	movs	r1, #0
    30de:	0312      	lsls	r2, r2, #12
    30e0:	0b13      	lsrs	r3, r2, #12
    30e2:	0d0a      	lsrs	r2, r1, #20
    30e4:	0512      	lsls	r2, r2, #20
    30e6:	431a      	orrs	r2, r3
    30e8:	0523      	lsls	r3, r4, #20
    30ea:	4c12      	ldr	r4, [pc, #72]	; (3134 <__aeabi_ddiv+0x1f4>)
    30ec:	4640      	mov	r0, r8
    30ee:	4022      	ands	r2, r4
    30f0:	4313      	orrs	r3, r2
    30f2:	4662      	mov	r2, ip
    30f4:	005b      	lsls	r3, r3, #1
    30f6:	07d2      	lsls	r2, r2, #31
    30f8:	085b      	lsrs	r3, r3, #1
    30fa:	4313      	orrs	r3, r2
    30fc:	0019      	movs	r1, r3
    30fe:	b007      	add	sp, #28
    3100:	bc3c      	pop	{r2, r3, r4, r5}
    3102:	4690      	mov	r8, r2
    3104:	4699      	mov	r9, r3
    3106:	46a2      	mov	sl, r4
    3108:	46ab      	mov	fp, r5
    310a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    310c:	2300      	movs	r3, #0
    310e:	2280      	movs	r2, #128	; 0x80
    3110:	469c      	mov	ip, r3
    3112:	0312      	lsls	r2, r2, #12
    3114:	4698      	mov	r8, r3
    3116:	4c03      	ldr	r4, [pc, #12]	; (3124 <__aeabi_ddiv+0x1e4>)
    3118:	e7e0      	b.n	30dc <__aeabi_ddiv+0x19c>
    311a:	2300      	movs	r3, #0
    311c:	4c01      	ldr	r4, [pc, #4]	; (3124 <__aeabi_ddiv+0x1e4>)
    311e:	2200      	movs	r2, #0
    3120:	4698      	mov	r8, r3
    3122:	e7db      	b.n	30dc <__aeabi_ddiv+0x19c>
    3124:	000007ff 	.word	0x000007ff
    3128:	fffffc01 	.word	0xfffffc01
    312c:	0000a090 	.word	0x0000a090
    3130:	fffffc0d 	.word	0xfffffc0d
    3134:	800fffff 	.word	0x800fffff
    3138:	45d9      	cmp	r9, fp
    313a:	d900      	bls.n	313e <__aeabi_ddiv+0x1fe>
    313c:	e139      	b.n	33b2 <__aeabi_ddiv+0x472>
    313e:	d100      	bne.n	3142 <__aeabi_ddiv+0x202>
    3140:	e134      	b.n	33ac <__aeabi_ddiv+0x46c>
    3142:	2300      	movs	r3, #0
    3144:	4646      	mov	r6, r8
    3146:	464d      	mov	r5, r9
    3148:	469a      	mov	sl, r3
    314a:	3c01      	subs	r4, #1
    314c:	465b      	mov	r3, fp
    314e:	0e0a      	lsrs	r2, r1, #24
    3150:	021b      	lsls	r3, r3, #8
    3152:	431a      	orrs	r2, r3
    3154:	020b      	lsls	r3, r1, #8
    3156:	0c17      	lsrs	r7, r2, #16
    3158:	9303      	str	r3, [sp, #12]
    315a:	0413      	lsls	r3, r2, #16
    315c:	0c1b      	lsrs	r3, r3, #16
    315e:	0039      	movs	r1, r7
    3160:	0028      	movs	r0, r5
    3162:	4690      	mov	r8, r2
    3164:	9301      	str	r3, [sp, #4]
    3166:	f7ff fbed 	bl	2944 <__udivsi3>
    316a:	0002      	movs	r2, r0
    316c:	9b01      	ldr	r3, [sp, #4]
    316e:	4683      	mov	fp, r0
    3170:	435a      	muls	r2, r3
    3172:	0028      	movs	r0, r5
    3174:	0039      	movs	r1, r7
    3176:	4691      	mov	r9, r2
    3178:	f7ff fc6a 	bl	2a50 <__aeabi_uidivmod>
    317c:	0c35      	lsrs	r5, r6, #16
    317e:	0409      	lsls	r1, r1, #16
    3180:	430d      	orrs	r5, r1
    3182:	45a9      	cmp	r9, r5
    3184:	d90d      	bls.n	31a2 <__aeabi_ddiv+0x262>
    3186:	465b      	mov	r3, fp
    3188:	4445      	add	r5, r8
    318a:	3b01      	subs	r3, #1
    318c:	45a8      	cmp	r8, r5
    318e:	d900      	bls.n	3192 <__aeabi_ddiv+0x252>
    3190:	e13a      	b.n	3408 <__aeabi_ddiv+0x4c8>
    3192:	45a9      	cmp	r9, r5
    3194:	d800      	bhi.n	3198 <__aeabi_ddiv+0x258>
    3196:	e137      	b.n	3408 <__aeabi_ddiv+0x4c8>
    3198:	2302      	movs	r3, #2
    319a:	425b      	negs	r3, r3
    319c:	469c      	mov	ip, r3
    319e:	4445      	add	r5, r8
    31a0:	44e3      	add	fp, ip
    31a2:	464b      	mov	r3, r9
    31a4:	1aeb      	subs	r3, r5, r3
    31a6:	0039      	movs	r1, r7
    31a8:	0018      	movs	r0, r3
    31aa:	9304      	str	r3, [sp, #16]
    31ac:	f7ff fbca 	bl	2944 <__udivsi3>
    31b0:	9b01      	ldr	r3, [sp, #4]
    31b2:	0005      	movs	r5, r0
    31b4:	4343      	muls	r3, r0
    31b6:	0039      	movs	r1, r7
    31b8:	9804      	ldr	r0, [sp, #16]
    31ba:	4699      	mov	r9, r3
    31bc:	f7ff fc48 	bl	2a50 <__aeabi_uidivmod>
    31c0:	0433      	lsls	r3, r6, #16
    31c2:	0409      	lsls	r1, r1, #16
    31c4:	0c1b      	lsrs	r3, r3, #16
    31c6:	430b      	orrs	r3, r1
    31c8:	4599      	cmp	r9, r3
    31ca:	d909      	bls.n	31e0 <__aeabi_ddiv+0x2a0>
    31cc:	4443      	add	r3, r8
    31ce:	1e6a      	subs	r2, r5, #1
    31d0:	4598      	cmp	r8, r3
    31d2:	d900      	bls.n	31d6 <__aeabi_ddiv+0x296>
    31d4:	e11a      	b.n	340c <__aeabi_ddiv+0x4cc>
    31d6:	4599      	cmp	r9, r3
    31d8:	d800      	bhi.n	31dc <__aeabi_ddiv+0x29c>
    31da:	e117      	b.n	340c <__aeabi_ddiv+0x4cc>
    31dc:	3d02      	subs	r5, #2
    31de:	4443      	add	r3, r8
    31e0:	464a      	mov	r2, r9
    31e2:	1a9b      	subs	r3, r3, r2
    31e4:	465a      	mov	r2, fp
    31e6:	0412      	lsls	r2, r2, #16
    31e8:	432a      	orrs	r2, r5
    31ea:	9903      	ldr	r1, [sp, #12]
    31ec:	4693      	mov	fp, r2
    31ee:	0c10      	lsrs	r0, r2, #16
    31f0:	0c0a      	lsrs	r2, r1, #16
    31f2:	4691      	mov	r9, r2
    31f4:	0409      	lsls	r1, r1, #16
    31f6:	465a      	mov	r2, fp
    31f8:	0c09      	lsrs	r1, r1, #16
    31fa:	464e      	mov	r6, r9
    31fc:	000d      	movs	r5, r1
    31fe:	0412      	lsls	r2, r2, #16
    3200:	0c12      	lsrs	r2, r2, #16
    3202:	4345      	muls	r5, r0
    3204:	9105      	str	r1, [sp, #20]
    3206:	4351      	muls	r1, r2
    3208:	4372      	muls	r2, r6
    320a:	4370      	muls	r0, r6
    320c:	1952      	adds	r2, r2, r5
    320e:	0c0e      	lsrs	r6, r1, #16
    3210:	18b2      	adds	r2, r6, r2
    3212:	4295      	cmp	r5, r2
    3214:	d903      	bls.n	321e <__aeabi_ddiv+0x2de>
    3216:	2580      	movs	r5, #128	; 0x80
    3218:	026d      	lsls	r5, r5, #9
    321a:	46ac      	mov	ip, r5
    321c:	4460      	add	r0, ip
    321e:	0c15      	lsrs	r5, r2, #16
    3220:	0409      	lsls	r1, r1, #16
    3222:	0412      	lsls	r2, r2, #16
    3224:	0c09      	lsrs	r1, r1, #16
    3226:	1828      	adds	r0, r5, r0
    3228:	1852      	adds	r2, r2, r1
    322a:	4283      	cmp	r3, r0
    322c:	d200      	bcs.n	3230 <__aeabi_ddiv+0x2f0>
    322e:	e0ce      	b.n	33ce <__aeabi_ddiv+0x48e>
    3230:	d100      	bne.n	3234 <__aeabi_ddiv+0x2f4>
    3232:	e0c8      	b.n	33c6 <__aeabi_ddiv+0x486>
    3234:	1a1d      	subs	r5, r3, r0
    3236:	4653      	mov	r3, sl
    3238:	1a9e      	subs	r6, r3, r2
    323a:	45b2      	cmp	sl, r6
    323c:	4192      	sbcs	r2, r2
    323e:	4252      	negs	r2, r2
    3240:	1aab      	subs	r3, r5, r2
    3242:	469a      	mov	sl, r3
    3244:	4598      	cmp	r8, r3
    3246:	d100      	bne.n	324a <__aeabi_ddiv+0x30a>
    3248:	e117      	b.n	347a <__aeabi_ddiv+0x53a>
    324a:	0039      	movs	r1, r7
    324c:	0018      	movs	r0, r3
    324e:	f7ff fb79 	bl	2944 <__udivsi3>
    3252:	9b01      	ldr	r3, [sp, #4]
    3254:	0005      	movs	r5, r0
    3256:	4343      	muls	r3, r0
    3258:	0039      	movs	r1, r7
    325a:	4650      	mov	r0, sl
    325c:	9304      	str	r3, [sp, #16]
    325e:	f7ff fbf7 	bl	2a50 <__aeabi_uidivmod>
    3262:	9804      	ldr	r0, [sp, #16]
    3264:	040b      	lsls	r3, r1, #16
    3266:	0c31      	lsrs	r1, r6, #16
    3268:	4319      	orrs	r1, r3
    326a:	4288      	cmp	r0, r1
    326c:	d909      	bls.n	3282 <__aeabi_ddiv+0x342>
    326e:	4441      	add	r1, r8
    3270:	1e6b      	subs	r3, r5, #1
    3272:	4588      	cmp	r8, r1
    3274:	d900      	bls.n	3278 <__aeabi_ddiv+0x338>
    3276:	e107      	b.n	3488 <__aeabi_ddiv+0x548>
    3278:	4288      	cmp	r0, r1
    327a:	d800      	bhi.n	327e <__aeabi_ddiv+0x33e>
    327c:	e104      	b.n	3488 <__aeabi_ddiv+0x548>
    327e:	3d02      	subs	r5, #2
    3280:	4441      	add	r1, r8
    3282:	9b04      	ldr	r3, [sp, #16]
    3284:	1acb      	subs	r3, r1, r3
    3286:	0018      	movs	r0, r3
    3288:	0039      	movs	r1, r7
    328a:	9304      	str	r3, [sp, #16]
    328c:	f7ff fb5a 	bl	2944 <__udivsi3>
    3290:	9b01      	ldr	r3, [sp, #4]
    3292:	4682      	mov	sl, r0
    3294:	4343      	muls	r3, r0
    3296:	0039      	movs	r1, r7
    3298:	9804      	ldr	r0, [sp, #16]
    329a:	9301      	str	r3, [sp, #4]
    329c:	f7ff fbd8 	bl	2a50 <__aeabi_uidivmod>
    32a0:	9801      	ldr	r0, [sp, #4]
    32a2:	040b      	lsls	r3, r1, #16
    32a4:	0431      	lsls	r1, r6, #16
    32a6:	0c09      	lsrs	r1, r1, #16
    32a8:	4319      	orrs	r1, r3
    32aa:	4288      	cmp	r0, r1
    32ac:	d90d      	bls.n	32ca <__aeabi_ddiv+0x38a>
    32ae:	4653      	mov	r3, sl
    32b0:	4441      	add	r1, r8
    32b2:	3b01      	subs	r3, #1
    32b4:	4588      	cmp	r8, r1
    32b6:	d900      	bls.n	32ba <__aeabi_ddiv+0x37a>
    32b8:	e0e8      	b.n	348c <__aeabi_ddiv+0x54c>
    32ba:	4288      	cmp	r0, r1
    32bc:	d800      	bhi.n	32c0 <__aeabi_ddiv+0x380>
    32be:	e0e5      	b.n	348c <__aeabi_ddiv+0x54c>
    32c0:	2302      	movs	r3, #2
    32c2:	425b      	negs	r3, r3
    32c4:	469c      	mov	ip, r3
    32c6:	4441      	add	r1, r8
    32c8:	44e2      	add	sl, ip
    32ca:	9b01      	ldr	r3, [sp, #4]
    32cc:	042d      	lsls	r5, r5, #16
    32ce:	1ace      	subs	r6, r1, r3
    32d0:	4651      	mov	r1, sl
    32d2:	4329      	orrs	r1, r5
    32d4:	9d05      	ldr	r5, [sp, #20]
    32d6:	464f      	mov	r7, r9
    32d8:	002a      	movs	r2, r5
    32da:	040b      	lsls	r3, r1, #16
    32dc:	0c08      	lsrs	r0, r1, #16
    32de:	0c1b      	lsrs	r3, r3, #16
    32e0:	435a      	muls	r2, r3
    32e2:	4345      	muls	r5, r0
    32e4:	437b      	muls	r3, r7
    32e6:	4378      	muls	r0, r7
    32e8:	195b      	adds	r3, r3, r5
    32ea:	0c17      	lsrs	r7, r2, #16
    32ec:	18fb      	adds	r3, r7, r3
    32ee:	429d      	cmp	r5, r3
    32f0:	d903      	bls.n	32fa <__aeabi_ddiv+0x3ba>
    32f2:	2580      	movs	r5, #128	; 0x80
    32f4:	026d      	lsls	r5, r5, #9
    32f6:	46ac      	mov	ip, r5
    32f8:	4460      	add	r0, ip
    32fa:	0c1d      	lsrs	r5, r3, #16
    32fc:	0412      	lsls	r2, r2, #16
    32fe:	041b      	lsls	r3, r3, #16
    3300:	0c12      	lsrs	r2, r2, #16
    3302:	1828      	adds	r0, r5, r0
    3304:	189b      	adds	r3, r3, r2
    3306:	4286      	cmp	r6, r0
    3308:	d200      	bcs.n	330c <__aeabi_ddiv+0x3cc>
    330a:	e093      	b.n	3434 <__aeabi_ddiv+0x4f4>
    330c:	d100      	bne.n	3310 <__aeabi_ddiv+0x3d0>
    330e:	e08e      	b.n	342e <__aeabi_ddiv+0x4ee>
    3310:	2301      	movs	r3, #1
    3312:	4319      	orrs	r1, r3
    3314:	4ba0      	ldr	r3, [pc, #640]	; (3598 <__aeabi_ddiv+0x658>)
    3316:	18e3      	adds	r3, r4, r3
    3318:	2b00      	cmp	r3, #0
    331a:	dc00      	bgt.n	331e <__aeabi_ddiv+0x3de>
    331c:	e099      	b.n	3452 <__aeabi_ddiv+0x512>
    331e:	074a      	lsls	r2, r1, #29
    3320:	d000      	beq.n	3324 <__aeabi_ddiv+0x3e4>
    3322:	e09e      	b.n	3462 <__aeabi_ddiv+0x522>
    3324:	465a      	mov	r2, fp
    3326:	01d2      	lsls	r2, r2, #7
    3328:	d506      	bpl.n	3338 <__aeabi_ddiv+0x3f8>
    332a:	465a      	mov	r2, fp
    332c:	4b9b      	ldr	r3, [pc, #620]	; (359c <__aeabi_ddiv+0x65c>)
    332e:	401a      	ands	r2, r3
    3330:	2380      	movs	r3, #128	; 0x80
    3332:	4693      	mov	fp, r2
    3334:	00db      	lsls	r3, r3, #3
    3336:	18e3      	adds	r3, r4, r3
    3338:	4a99      	ldr	r2, [pc, #612]	; (35a0 <__aeabi_ddiv+0x660>)
    333a:	4293      	cmp	r3, r2
    333c:	dd68      	ble.n	3410 <__aeabi_ddiv+0x4d0>
    333e:	2301      	movs	r3, #1
    3340:	9a02      	ldr	r2, [sp, #8]
    3342:	4c98      	ldr	r4, [pc, #608]	; (35a4 <__aeabi_ddiv+0x664>)
    3344:	401a      	ands	r2, r3
    3346:	2300      	movs	r3, #0
    3348:	4694      	mov	ip, r2
    334a:	4698      	mov	r8, r3
    334c:	2200      	movs	r2, #0
    334e:	e6c5      	b.n	30dc <__aeabi_ddiv+0x19c>
    3350:	2280      	movs	r2, #128	; 0x80
    3352:	464b      	mov	r3, r9
    3354:	0312      	lsls	r2, r2, #12
    3356:	4213      	tst	r3, r2
    3358:	d00a      	beq.n	3370 <__aeabi_ddiv+0x430>
    335a:	465b      	mov	r3, fp
    335c:	4213      	tst	r3, r2
    335e:	d106      	bne.n	336e <__aeabi_ddiv+0x42e>
    3360:	431a      	orrs	r2, r3
    3362:	0312      	lsls	r2, r2, #12
    3364:	0b12      	lsrs	r2, r2, #12
    3366:	46ac      	mov	ip, r5
    3368:	4688      	mov	r8, r1
    336a:	4c8e      	ldr	r4, [pc, #568]	; (35a4 <__aeabi_ddiv+0x664>)
    336c:	e6b6      	b.n	30dc <__aeabi_ddiv+0x19c>
    336e:	464b      	mov	r3, r9
    3370:	431a      	orrs	r2, r3
    3372:	0312      	lsls	r2, r2, #12
    3374:	0b12      	lsrs	r2, r2, #12
    3376:	46bc      	mov	ip, r7
    3378:	4c8a      	ldr	r4, [pc, #552]	; (35a4 <__aeabi_ddiv+0x664>)
    337a:	e6af      	b.n	30dc <__aeabi_ddiv+0x19c>
    337c:	0003      	movs	r3, r0
    337e:	465a      	mov	r2, fp
    3380:	3b28      	subs	r3, #40	; 0x28
    3382:	409a      	lsls	r2, r3
    3384:	2300      	movs	r3, #0
    3386:	4691      	mov	r9, r2
    3388:	4698      	mov	r8, r3
    338a:	e657      	b.n	303c <__aeabi_ddiv+0xfc>
    338c:	4658      	mov	r0, fp
    338e:	f001 f869 	bl	4464 <__clzsi2>
    3392:	3020      	adds	r0, #32
    3394:	e640      	b.n	3018 <__aeabi_ddiv+0xd8>
    3396:	0003      	movs	r3, r0
    3398:	4652      	mov	r2, sl
    339a:	3b28      	subs	r3, #40	; 0x28
    339c:	409a      	lsls	r2, r3
    339e:	2100      	movs	r1, #0
    33a0:	4693      	mov	fp, r2
    33a2:	e677      	b.n	3094 <__aeabi_ddiv+0x154>
    33a4:	f001 f85e 	bl	4464 <__clzsi2>
    33a8:	3020      	adds	r0, #32
    33aa:	e65f      	b.n	306c <__aeabi_ddiv+0x12c>
    33ac:	4588      	cmp	r8, r1
    33ae:	d200      	bcs.n	33b2 <__aeabi_ddiv+0x472>
    33b0:	e6c7      	b.n	3142 <__aeabi_ddiv+0x202>
    33b2:	464b      	mov	r3, r9
    33b4:	07de      	lsls	r6, r3, #31
    33b6:	085d      	lsrs	r5, r3, #1
    33b8:	4643      	mov	r3, r8
    33ba:	085b      	lsrs	r3, r3, #1
    33bc:	431e      	orrs	r6, r3
    33be:	4643      	mov	r3, r8
    33c0:	07db      	lsls	r3, r3, #31
    33c2:	469a      	mov	sl, r3
    33c4:	e6c2      	b.n	314c <__aeabi_ddiv+0x20c>
    33c6:	2500      	movs	r5, #0
    33c8:	4592      	cmp	sl, r2
    33ca:	d300      	bcc.n	33ce <__aeabi_ddiv+0x48e>
    33cc:	e733      	b.n	3236 <__aeabi_ddiv+0x2f6>
    33ce:	9e03      	ldr	r6, [sp, #12]
    33d0:	4659      	mov	r1, fp
    33d2:	46b4      	mov	ip, r6
    33d4:	44e2      	add	sl, ip
    33d6:	45b2      	cmp	sl, r6
    33d8:	41ad      	sbcs	r5, r5
    33da:	426d      	negs	r5, r5
    33dc:	4445      	add	r5, r8
    33de:	18eb      	adds	r3, r5, r3
    33e0:	3901      	subs	r1, #1
    33e2:	4598      	cmp	r8, r3
    33e4:	d207      	bcs.n	33f6 <__aeabi_ddiv+0x4b6>
    33e6:	4298      	cmp	r0, r3
    33e8:	d900      	bls.n	33ec <__aeabi_ddiv+0x4ac>
    33ea:	e07f      	b.n	34ec <__aeabi_ddiv+0x5ac>
    33ec:	d100      	bne.n	33f0 <__aeabi_ddiv+0x4b0>
    33ee:	e0bc      	b.n	356a <__aeabi_ddiv+0x62a>
    33f0:	1a1d      	subs	r5, r3, r0
    33f2:	468b      	mov	fp, r1
    33f4:	e71f      	b.n	3236 <__aeabi_ddiv+0x2f6>
    33f6:	4598      	cmp	r8, r3
    33f8:	d1fa      	bne.n	33f0 <__aeabi_ddiv+0x4b0>
    33fa:	9d03      	ldr	r5, [sp, #12]
    33fc:	4555      	cmp	r5, sl
    33fe:	d9f2      	bls.n	33e6 <__aeabi_ddiv+0x4a6>
    3400:	4643      	mov	r3, r8
    3402:	468b      	mov	fp, r1
    3404:	1a1d      	subs	r5, r3, r0
    3406:	e716      	b.n	3236 <__aeabi_ddiv+0x2f6>
    3408:	469b      	mov	fp, r3
    340a:	e6ca      	b.n	31a2 <__aeabi_ddiv+0x262>
    340c:	0015      	movs	r5, r2
    340e:	e6e7      	b.n	31e0 <__aeabi_ddiv+0x2a0>
    3410:	465a      	mov	r2, fp
    3412:	08c9      	lsrs	r1, r1, #3
    3414:	0752      	lsls	r2, r2, #29
    3416:	430a      	orrs	r2, r1
    3418:	055b      	lsls	r3, r3, #21
    341a:	4690      	mov	r8, r2
    341c:	0d5c      	lsrs	r4, r3, #21
    341e:	465a      	mov	r2, fp
    3420:	2301      	movs	r3, #1
    3422:	9902      	ldr	r1, [sp, #8]
    3424:	0252      	lsls	r2, r2, #9
    3426:	4019      	ands	r1, r3
    3428:	0b12      	lsrs	r2, r2, #12
    342a:	468c      	mov	ip, r1
    342c:	e656      	b.n	30dc <__aeabi_ddiv+0x19c>
    342e:	2b00      	cmp	r3, #0
    3430:	d100      	bne.n	3434 <__aeabi_ddiv+0x4f4>
    3432:	e76f      	b.n	3314 <__aeabi_ddiv+0x3d4>
    3434:	4446      	add	r6, r8
    3436:	1e4a      	subs	r2, r1, #1
    3438:	45b0      	cmp	r8, r6
    343a:	d929      	bls.n	3490 <__aeabi_ddiv+0x550>
    343c:	0011      	movs	r1, r2
    343e:	4286      	cmp	r6, r0
    3440:	d000      	beq.n	3444 <__aeabi_ddiv+0x504>
    3442:	e765      	b.n	3310 <__aeabi_ddiv+0x3d0>
    3444:	9a03      	ldr	r2, [sp, #12]
    3446:	4293      	cmp	r3, r2
    3448:	d000      	beq.n	344c <__aeabi_ddiv+0x50c>
    344a:	e761      	b.n	3310 <__aeabi_ddiv+0x3d0>
    344c:	e762      	b.n	3314 <__aeabi_ddiv+0x3d4>
    344e:	2101      	movs	r1, #1
    3450:	4249      	negs	r1, r1
    3452:	2001      	movs	r0, #1
    3454:	1ac2      	subs	r2, r0, r3
    3456:	2a38      	cmp	r2, #56	; 0x38
    3458:	dd21      	ble.n	349e <__aeabi_ddiv+0x55e>
    345a:	9b02      	ldr	r3, [sp, #8]
    345c:	4003      	ands	r3, r0
    345e:	469c      	mov	ip, r3
    3460:	e638      	b.n	30d4 <__aeabi_ddiv+0x194>
    3462:	220f      	movs	r2, #15
    3464:	400a      	ands	r2, r1
    3466:	2a04      	cmp	r2, #4
    3468:	d100      	bne.n	346c <__aeabi_ddiv+0x52c>
    346a:	e75b      	b.n	3324 <__aeabi_ddiv+0x3e4>
    346c:	000a      	movs	r2, r1
    346e:	1d11      	adds	r1, r2, #4
    3470:	4291      	cmp	r1, r2
    3472:	4192      	sbcs	r2, r2
    3474:	4252      	negs	r2, r2
    3476:	4493      	add	fp, r2
    3478:	e754      	b.n	3324 <__aeabi_ddiv+0x3e4>
    347a:	4b47      	ldr	r3, [pc, #284]	; (3598 <__aeabi_ddiv+0x658>)
    347c:	18e3      	adds	r3, r4, r3
    347e:	2b00      	cmp	r3, #0
    3480:	dde5      	ble.n	344e <__aeabi_ddiv+0x50e>
    3482:	2201      	movs	r2, #1
    3484:	4252      	negs	r2, r2
    3486:	e7f2      	b.n	346e <__aeabi_ddiv+0x52e>
    3488:	001d      	movs	r5, r3
    348a:	e6fa      	b.n	3282 <__aeabi_ddiv+0x342>
    348c:	469a      	mov	sl, r3
    348e:	e71c      	b.n	32ca <__aeabi_ddiv+0x38a>
    3490:	42b0      	cmp	r0, r6
    3492:	d839      	bhi.n	3508 <__aeabi_ddiv+0x5c8>
    3494:	d06e      	beq.n	3574 <__aeabi_ddiv+0x634>
    3496:	0011      	movs	r1, r2
    3498:	e73a      	b.n	3310 <__aeabi_ddiv+0x3d0>
    349a:	9302      	str	r3, [sp, #8]
    349c:	e73a      	b.n	3314 <__aeabi_ddiv+0x3d4>
    349e:	2a1f      	cmp	r2, #31
    34a0:	dc3c      	bgt.n	351c <__aeabi_ddiv+0x5dc>
    34a2:	2320      	movs	r3, #32
    34a4:	1a9b      	subs	r3, r3, r2
    34a6:	000c      	movs	r4, r1
    34a8:	4658      	mov	r0, fp
    34aa:	4099      	lsls	r1, r3
    34ac:	4098      	lsls	r0, r3
    34ae:	1e4b      	subs	r3, r1, #1
    34b0:	4199      	sbcs	r1, r3
    34b2:	465b      	mov	r3, fp
    34b4:	40d4      	lsrs	r4, r2
    34b6:	40d3      	lsrs	r3, r2
    34b8:	4320      	orrs	r0, r4
    34ba:	4308      	orrs	r0, r1
    34bc:	001a      	movs	r2, r3
    34be:	0743      	lsls	r3, r0, #29
    34c0:	d009      	beq.n	34d6 <__aeabi_ddiv+0x596>
    34c2:	230f      	movs	r3, #15
    34c4:	4003      	ands	r3, r0
    34c6:	2b04      	cmp	r3, #4
    34c8:	d005      	beq.n	34d6 <__aeabi_ddiv+0x596>
    34ca:	0001      	movs	r1, r0
    34cc:	1d08      	adds	r0, r1, #4
    34ce:	4288      	cmp	r0, r1
    34d0:	419b      	sbcs	r3, r3
    34d2:	425b      	negs	r3, r3
    34d4:	18d2      	adds	r2, r2, r3
    34d6:	0213      	lsls	r3, r2, #8
    34d8:	d53a      	bpl.n	3550 <__aeabi_ddiv+0x610>
    34da:	2301      	movs	r3, #1
    34dc:	9a02      	ldr	r2, [sp, #8]
    34de:	2401      	movs	r4, #1
    34e0:	401a      	ands	r2, r3
    34e2:	2300      	movs	r3, #0
    34e4:	4694      	mov	ip, r2
    34e6:	4698      	mov	r8, r3
    34e8:	2200      	movs	r2, #0
    34ea:	e5f7      	b.n	30dc <__aeabi_ddiv+0x19c>
    34ec:	2102      	movs	r1, #2
    34ee:	4249      	negs	r1, r1
    34f0:	468c      	mov	ip, r1
    34f2:	9d03      	ldr	r5, [sp, #12]
    34f4:	44e3      	add	fp, ip
    34f6:	46ac      	mov	ip, r5
    34f8:	44e2      	add	sl, ip
    34fa:	45aa      	cmp	sl, r5
    34fc:	41ad      	sbcs	r5, r5
    34fe:	426d      	negs	r5, r5
    3500:	4445      	add	r5, r8
    3502:	18ed      	adds	r5, r5, r3
    3504:	1a2d      	subs	r5, r5, r0
    3506:	e696      	b.n	3236 <__aeabi_ddiv+0x2f6>
    3508:	1e8a      	subs	r2, r1, #2
    350a:	9903      	ldr	r1, [sp, #12]
    350c:	004d      	lsls	r5, r1, #1
    350e:	428d      	cmp	r5, r1
    3510:	4189      	sbcs	r1, r1
    3512:	4249      	negs	r1, r1
    3514:	4441      	add	r1, r8
    3516:	1876      	adds	r6, r6, r1
    3518:	9503      	str	r5, [sp, #12]
    351a:	e78f      	b.n	343c <__aeabi_ddiv+0x4fc>
    351c:	201f      	movs	r0, #31
    351e:	4240      	negs	r0, r0
    3520:	1ac3      	subs	r3, r0, r3
    3522:	4658      	mov	r0, fp
    3524:	40d8      	lsrs	r0, r3
    3526:	0003      	movs	r3, r0
    3528:	2a20      	cmp	r2, #32
    352a:	d028      	beq.n	357e <__aeabi_ddiv+0x63e>
    352c:	2040      	movs	r0, #64	; 0x40
    352e:	465d      	mov	r5, fp
    3530:	1a82      	subs	r2, r0, r2
    3532:	4095      	lsls	r5, r2
    3534:	4329      	orrs	r1, r5
    3536:	1e4a      	subs	r2, r1, #1
    3538:	4191      	sbcs	r1, r2
    353a:	4319      	orrs	r1, r3
    353c:	2307      	movs	r3, #7
    353e:	2200      	movs	r2, #0
    3540:	400b      	ands	r3, r1
    3542:	d009      	beq.n	3558 <__aeabi_ddiv+0x618>
    3544:	230f      	movs	r3, #15
    3546:	2200      	movs	r2, #0
    3548:	400b      	ands	r3, r1
    354a:	0008      	movs	r0, r1
    354c:	2b04      	cmp	r3, #4
    354e:	d1bd      	bne.n	34cc <__aeabi_ddiv+0x58c>
    3550:	0001      	movs	r1, r0
    3552:	0753      	lsls	r3, r2, #29
    3554:	0252      	lsls	r2, r2, #9
    3556:	0b12      	lsrs	r2, r2, #12
    3558:	08c9      	lsrs	r1, r1, #3
    355a:	4319      	orrs	r1, r3
    355c:	2301      	movs	r3, #1
    355e:	4688      	mov	r8, r1
    3560:	9902      	ldr	r1, [sp, #8]
    3562:	2400      	movs	r4, #0
    3564:	4019      	ands	r1, r3
    3566:	468c      	mov	ip, r1
    3568:	e5b8      	b.n	30dc <__aeabi_ddiv+0x19c>
    356a:	4552      	cmp	r2, sl
    356c:	d8be      	bhi.n	34ec <__aeabi_ddiv+0x5ac>
    356e:	468b      	mov	fp, r1
    3570:	2500      	movs	r5, #0
    3572:	e660      	b.n	3236 <__aeabi_ddiv+0x2f6>
    3574:	9d03      	ldr	r5, [sp, #12]
    3576:	429d      	cmp	r5, r3
    3578:	d3c6      	bcc.n	3508 <__aeabi_ddiv+0x5c8>
    357a:	0011      	movs	r1, r2
    357c:	e762      	b.n	3444 <__aeabi_ddiv+0x504>
    357e:	2500      	movs	r5, #0
    3580:	e7d8      	b.n	3534 <__aeabi_ddiv+0x5f4>
    3582:	2280      	movs	r2, #128	; 0x80
    3584:	465b      	mov	r3, fp
    3586:	0312      	lsls	r2, r2, #12
    3588:	431a      	orrs	r2, r3
    358a:	9b01      	ldr	r3, [sp, #4]
    358c:	0312      	lsls	r2, r2, #12
    358e:	0b12      	lsrs	r2, r2, #12
    3590:	469c      	mov	ip, r3
    3592:	4688      	mov	r8, r1
    3594:	4c03      	ldr	r4, [pc, #12]	; (35a4 <__aeabi_ddiv+0x664>)
    3596:	e5a1      	b.n	30dc <__aeabi_ddiv+0x19c>
    3598:	000003ff 	.word	0x000003ff
    359c:	feffffff 	.word	0xfeffffff
    35a0:	000007fe 	.word	0x000007fe
    35a4:	000007ff 	.word	0x000007ff

000035a8 <__aeabi_dmul>:
    35a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    35aa:	4657      	mov	r7, sl
    35ac:	4645      	mov	r5, r8
    35ae:	46de      	mov	lr, fp
    35b0:	464e      	mov	r6, r9
    35b2:	b5e0      	push	{r5, r6, r7, lr}
    35b4:	030c      	lsls	r4, r1, #12
    35b6:	4698      	mov	r8, r3
    35b8:	004e      	lsls	r6, r1, #1
    35ba:	0b23      	lsrs	r3, r4, #12
    35bc:	b087      	sub	sp, #28
    35be:	0007      	movs	r7, r0
    35c0:	4692      	mov	sl, r2
    35c2:	469b      	mov	fp, r3
    35c4:	0d76      	lsrs	r6, r6, #21
    35c6:	0fcd      	lsrs	r5, r1, #31
    35c8:	2e00      	cmp	r6, #0
    35ca:	d06b      	beq.n	36a4 <__aeabi_dmul+0xfc>
    35cc:	4b6d      	ldr	r3, [pc, #436]	; (3784 <__aeabi_dmul+0x1dc>)
    35ce:	429e      	cmp	r6, r3
    35d0:	d035      	beq.n	363e <__aeabi_dmul+0x96>
    35d2:	2480      	movs	r4, #128	; 0x80
    35d4:	465b      	mov	r3, fp
    35d6:	0f42      	lsrs	r2, r0, #29
    35d8:	0424      	lsls	r4, r4, #16
    35da:	00db      	lsls	r3, r3, #3
    35dc:	4314      	orrs	r4, r2
    35de:	431c      	orrs	r4, r3
    35e0:	00c3      	lsls	r3, r0, #3
    35e2:	4699      	mov	r9, r3
    35e4:	4b68      	ldr	r3, [pc, #416]	; (3788 <__aeabi_dmul+0x1e0>)
    35e6:	46a3      	mov	fp, r4
    35e8:	469c      	mov	ip, r3
    35ea:	2300      	movs	r3, #0
    35ec:	2700      	movs	r7, #0
    35ee:	4466      	add	r6, ip
    35f0:	9302      	str	r3, [sp, #8]
    35f2:	4643      	mov	r3, r8
    35f4:	031c      	lsls	r4, r3, #12
    35f6:	005a      	lsls	r2, r3, #1
    35f8:	0fdb      	lsrs	r3, r3, #31
    35fa:	4650      	mov	r0, sl
    35fc:	0b24      	lsrs	r4, r4, #12
    35fe:	0d52      	lsrs	r2, r2, #21
    3600:	4698      	mov	r8, r3
    3602:	d100      	bne.n	3606 <__aeabi_dmul+0x5e>
    3604:	e076      	b.n	36f4 <__aeabi_dmul+0x14c>
    3606:	4b5f      	ldr	r3, [pc, #380]	; (3784 <__aeabi_dmul+0x1dc>)
    3608:	429a      	cmp	r2, r3
    360a:	d06d      	beq.n	36e8 <__aeabi_dmul+0x140>
    360c:	2380      	movs	r3, #128	; 0x80
    360e:	0f41      	lsrs	r1, r0, #29
    3610:	041b      	lsls	r3, r3, #16
    3612:	430b      	orrs	r3, r1
    3614:	495c      	ldr	r1, [pc, #368]	; (3788 <__aeabi_dmul+0x1e0>)
    3616:	00e4      	lsls	r4, r4, #3
    3618:	468c      	mov	ip, r1
    361a:	431c      	orrs	r4, r3
    361c:	00c3      	lsls	r3, r0, #3
    361e:	2000      	movs	r0, #0
    3620:	4462      	add	r2, ip
    3622:	4641      	mov	r1, r8
    3624:	18b6      	adds	r6, r6, r2
    3626:	4069      	eors	r1, r5
    3628:	1c72      	adds	r2, r6, #1
    362a:	9101      	str	r1, [sp, #4]
    362c:	4694      	mov	ip, r2
    362e:	4307      	orrs	r7, r0
    3630:	2f0f      	cmp	r7, #15
    3632:	d900      	bls.n	3636 <__aeabi_dmul+0x8e>
    3634:	e0b0      	b.n	3798 <__aeabi_dmul+0x1f0>
    3636:	4a55      	ldr	r2, [pc, #340]	; (378c <__aeabi_dmul+0x1e4>)
    3638:	00bf      	lsls	r7, r7, #2
    363a:	59d2      	ldr	r2, [r2, r7]
    363c:	4697      	mov	pc, r2
    363e:	465b      	mov	r3, fp
    3640:	4303      	orrs	r3, r0
    3642:	4699      	mov	r9, r3
    3644:	d000      	beq.n	3648 <__aeabi_dmul+0xa0>
    3646:	e087      	b.n	3758 <__aeabi_dmul+0x1b0>
    3648:	2300      	movs	r3, #0
    364a:	469b      	mov	fp, r3
    364c:	3302      	adds	r3, #2
    364e:	2708      	movs	r7, #8
    3650:	9302      	str	r3, [sp, #8]
    3652:	e7ce      	b.n	35f2 <__aeabi_dmul+0x4a>
    3654:	4642      	mov	r2, r8
    3656:	9201      	str	r2, [sp, #4]
    3658:	2802      	cmp	r0, #2
    365a:	d067      	beq.n	372c <__aeabi_dmul+0x184>
    365c:	2803      	cmp	r0, #3
    365e:	d100      	bne.n	3662 <__aeabi_dmul+0xba>
    3660:	e20e      	b.n	3a80 <__aeabi_dmul+0x4d8>
    3662:	2801      	cmp	r0, #1
    3664:	d000      	beq.n	3668 <__aeabi_dmul+0xc0>
    3666:	e162      	b.n	392e <__aeabi_dmul+0x386>
    3668:	2300      	movs	r3, #0
    366a:	2400      	movs	r4, #0
    366c:	2200      	movs	r2, #0
    366e:	4699      	mov	r9, r3
    3670:	9901      	ldr	r1, [sp, #4]
    3672:	4001      	ands	r1, r0
    3674:	b2cd      	uxtb	r5, r1
    3676:	2100      	movs	r1, #0
    3678:	0312      	lsls	r2, r2, #12
    367a:	0d0b      	lsrs	r3, r1, #20
    367c:	0b12      	lsrs	r2, r2, #12
    367e:	051b      	lsls	r3, r3, #20
    3680:	4313      	orrs	r3, r2
    3682:	4a43      	ldr	r2, [pc, #268]	; (3790 <__aeabi_dmul+0x1e8>)
    3684:	0524      	lsls	r4, r4, #20
    3686:	4013      	ands	r3, r2
    3688:	431c      	orrs	r4, r3
    368a:	0064      	lsls	r4, r4, #1
    368c:	07ed      	lsls	r5, r5, #31
    368e:	0864      	lsrs	r4, r4, #1
    3690:	432c      	orrs	r4, r5
    3692:	4648      	mov	r0, r9
    3694:	0021      	movs	r1, r4
    3696:	b007      	add	sp, #28
    3698:	bc3c      	pop	{r2, r3, r4, r5}
    369a:	4690      	mov	r8, r2
    369c:	4699      	mov	r9, r3
    369e:	46a2      	mov	sl, r4
    36a0:	46ab      	mov	fp, r5
    36a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    36a4:	4303      	orrs	r3, r0
    36a6:	4699      	mov	r9, r3
    36a8:	d04f      	beq.n	374a <__aeabi_dmul+0x1a2>
    36aa:	465b      	mov	r3, fp
    36ac:	2b00      	cmp	r3, #0
    36ae:	d100      	bne.n	36b2 <__aeabi_dmul+0x10a>
    36b0:	e189      	b.n	39c6 <__aeabi_dmul+0x41e>
    36b2:	4658      	mov	r0, fp
    36b4:	f000 fed6 	bl	4464 <__clzsi2>
    36b8:	0003      	movs	r3, r0
    36ba:	3b0b      	subs	r3, #11
    36bc:	2b1c      	cmp	r3, #28
    36be:	dd00      	ble.n	36c2 <__aeabi_dmul+0x11a>
    36c0:	e17a      	b.n	39b8 <__aeabi_dmul+0x410>
    36c2:	221d      	movs	r2, #29
    36c4:	1ad3      	subs	r3, r2, r3
    36c6:	003a      	movs	r2, r7
    36c8:	0001      	movs	r1, r0
    36ca:	465c      	mov	r4, fp
    36cc:	40da      	lsrs	r2, r3
    36ce:	3908      	subs	r1, #8
    36d0:	408c      	lsls	r4, r1
    36d2:	0013      	movs	r3, r2
    36d4:	408f      	lsls	r7, r1
    36d6:	4323      	orrs	r3, r4
    36d8:	469b      	mov	fp, r3
    36da:	46b9      	mov	r9, r7
    36dc:	2300      	movs	r3, #0
    36de:	4e2d      	ldr	r6, [pc, #180]	; (3794 <__aeabi_dmul+0x1ec>)
    36e0:	2700      	movs	r7, #0
    36e2:	1a36      	subs	r6, r6, r0
    36e4:	9302      	str	r3, [sp, #8]
    36e6:	e784      	b.n	35f2 <__aeabi_dmul+0x4a>
    36e8:	4653      	mov	r3, sl
    36ea:	4323      	orrs	r3, r4
    36ec:	d12a      	bne.n	3744 <__aeabi_dmul+0x19c>
    36ee:	2400      	movs	r4, #0
    36f0:	2002      	movs	r0, #2
    36f2:	e796      	b.n	3622 <__aeabi_dmul+0x7a>
    36f4:	4653      	mov	r3, sl
    36f6:	4323      	orrs	r3, r4
    36f8:	d020      	beq.n	373c <__aeabi_dmul+0x194>
    36fa:	2c00      	cmp	r4, #0
    36fc:	d100      	bne.n	3700 <__aeabi_dmul+0x158>
    36fe:	e157      	b.n	39b0 <__aeabi_dmul+0x408>
    3700:	0020      	movs	r0, r4
    3702:	f000 feaf 	bl	4464 <__clzsi2>
    3706:	0003      	movs	r3, r0
    3708:	3b0b      	subs	r3, #11
    370a:	2b1c      	cmp	r3, #28
    370c:	dd00      	ble.n	3710 <__aeabi_dmul+0x168>
    370e:	e149      	b.n	39a4 <__aeabi_dmul+0x3fc>
    3710:	211d      	movs	r1, #29
    3712:	1acb      	subs	r3, r1, r3
    3714:	4651      	mov	r1, sl
    3716:	0002      	movs	r2, r0
    3718:	40d9      	lsrs	r1, r3
    371a:	4653      	mov	r3, sl
    371c:	3a08      	subs	r2, #8
    371e:	4094      	lsls	r4, r2
    3720:	4093      	lsls	r3, r2
    3722:	430c      	orrs	r4, r1
    3724:	4a1b      	ldr	r2, [pc, #108]	; (3794 <__aeabi_dmul+0x1ec>)
    3726:	1a12      	subs	r2, r2, r0
    3728:	2000      	movs	r0, #0
    372a:	e77a      	b.n	3622 <__aeabi_dmul+0x7a>
    372c:	2501      	movs	r5, #1
    372e:	9b01      	ldr	r3, [sp, #4]
    3730:	4c14      	ldr	r4, [pc, #80]	; (3784 <__aeabi_dmul+0x1dc>)
    3732:	401d      	ands	r5, r3
    3734:	2300      	movs	r3, #0
    3736:	2200      	movs	r2, #0
    3738:	4699      	mov	r9, r3
    373a:	e79c      	b.n	3676 <__aeabi_dmul+0xce>
    373c:	2400      	movs	r4, #0
    373e:	2200      	movs	r2, #0
    3740:	2001      	movs	r0, #1
    3742:	e76e      	b.n	3622 <__aeabi_dmul+0x7a>
    3744:	4653      	mov	r3, sl
    3746:	2003      	movs	r0, #3
    3748:	e76b      	b.n	3622 <__aeabi_dmul+0x7a>
    374a:	2300      	movs	r3, #0
    374c:	469b      	mov	fp, r3
    374e:	3301      	adds	r3, #1
    3750:	2704      	movs	r7, #4
    3752:	2600      	movs	r6, #0
    3754:	9302      	str	r3, [sp, #8]
    3756:	e74c      	b.n	35f2 <__aeabi_dmul+0x4a>
    3758:	2303      	movs	r3, #3
    375a:	4681      	mov	r9, r0
    375c:	270c      	movs	r7, #12
    375e:	9302      	str	r3, [sp, #8]
    3760:	e747      	b.n	35f2 <__aeabi_dmul+0x4a>
    3762:	2280      	movs	r2, #128	; 0x80
    3764:	2300      	movs	r3, #0
    3766:	2500      	movs	r5, #0
    3768:	0312      	lsls	r2, r2, #12
    376a:	4699      	mov	r9, r3
    376c:	4c05      	ldr	r4, [pc, #20]	; (3784 <__aeabi_dmul+0x1dc>)
    376e:	e782      	b.n	3676 <__aeabi_dmul+0xce>
    3770:	465c      	mov	r4, fp
    3772:	464b      	mov	r3, r9
    3774:	9802      	ldr	r0, [sp, #8]
    3776:	e76f      	b.n	3658 <__aeabi_dmul+0xb0>
    3778:	465c      	mov	r4, fp
    377a:	464b      	mov	r3, r9
    377c:	9501      	str	r5, [sp, #4]
    377e:	9802      	ldr	r0, [sp, #8]
    3780:	e76a      	b.n	3658 <__aeabi_dmul+0xb0>
    3782:	46c0      	nop			; (mov r8, r8)
    3784:	000007ff 	.word	0x000007ff
    3788:	fffffc01 	.word	0xfffffc01
    378c:	0000a0d0 	.word	0x0000a0d0
    3790:	800fffff 	.word	0x800fffff
    3794:	fffffc0d 	.word	0xfffffc0d
    3798:	464a      	mov	r2, r9
    379a:	4649      	mov	r1, r9
    379c:	0c17      	lsrs	r7, r2, #16
    379e:	0c1a      	lsrs	r2, r3, #16
    37a0:	041b      	lsls	r3, r3, #16
    37a2:	0c1b      	lsrs	r3, r3, #16
    37a4:	0408      	lsls	r0, r1, #16
    37a6:	0019      	movs	r1, r3
    37a8:	0c00      	lsrs	r0, r0, #16
    37aa:	4341      	muls	r1, r0
    37ac:	0015      	movs	r5, r2
    37ae:	4688      	mov	r8, r1
    37b0:	0019      	movs	r1, r3
    37b2:	437d      	muls	r5, r7
    37b4:	4379      	muls	r1, r7
    37b6:	9503      	str	r5, [sp, #12]
    37b8:	4689      	mov	r9, r1
    37ba:	0029      	movs	r1, r5
    37bc:	0015      	movs	r5, r2
    37be:	4345      	muls	r5, r0
    37c0:	444d      	add	r5, r9
    37c2:	9502      	str	r5, [sp, #8]
    37c4:	4645      	mov	r5, r8
    37c6:	0c2d      	lsrs	r5, r5, #16
    37c8:	46aa      	mov	sl, r5
    37ca:	9d02      	ldr	r5, [sp, #8]
    37cc:	4455      	add	r5, sl
    37ce:	45a9      	cmp	r9, r5
    37d0:	d906      	bls.n	37e0 <__aeabi_dmul+0x238>
    37d2:	468a      	mov	sl, r1
    37d4:	2180      	movs	r1, #128	; 0x80
    37d6:	0249      	lsls	r1, r1, #9
    37d8:	4689      	mov	r9, r1
    37da:	44ca      	add	sl, r9
    37dc:	4651      	mov	r1, sl
    37de:	9103      	str	r1, [sp, #12]
    37e0:	0c29      	lsrs	r1, r5, #16
    37e2:	9104      	str	r1, [sp, #16]
    37e4:	4641      	mov	r1, r8
    37e6:	0409      	lsls	r1, r1, #16
    37e8:	042d      	lsls	r5, r5, #16
    37ea:	0c09      	lsrs	r1, r1, #16
    37ec:	4688      	mov	r8, r1
    37ee:	0029      	movs	r1, r5
    37f0:	0c25      	lsrs	r5, r4, #16
    37f2:	0424      	lsls	r4, r4, #16
    37f4:	4441      	add	r1, r8
    37f6:	0c24      	lsrs	r4, r4, #16
    37f8:	9105      	str	r1, [sp, #20]
    37fa:	0021      	movs	r1, r4
    37fc:	4341      	muls	r1, r0
    37fe:	4688      	mov	r8, r1
    3800:	0021      	movs	r1, r4
    3802:	4379      	muls	r1, r7
    3804:	468a      	mov	sl, r1
    3806:	4368      	muls	r0, r5
    3808:	4641      	mov	r1, r8
    380a:	4450      	add	r0, sl
    380c:	4681      	mov	r9, r0
    380e:	0c08      	lsrs	r0, r1, #16
    3810:	4448      	add	r0, r9
    3812:	436f      	muls	r7, r5
    3814:	4582      	cmp	sl, r0
    3816:	d903      	bls.n	3820 <__aeabi_dmul+0x278>
    3818:	2180      	movs	r1, #128	; 0x80
    381a:	0249      	lsls	r1, r1, #9
    381c:	4689      	mov	r9, r1
    381e:	444f      	add	r7, r9
    3820:	0c01      	lsrs	r1, r0, #16
    3822:	4689      	mov	r9, r1
    3824:	0039      	movs	r1, r7
    3826:	4449      	add	r1, r9
    3828:	9102      	str	r1, [sp, #8]
    382a:	4641      	mov	r1, r8
    382c:	040f      	lsls	r7, r1, #16
    382e:	9904      	ldr	r1, [sp, #16]
    3830:	0c3f      	lsrs	r7, r7, #16
    3832:	4688      	mov	r8, r1
    3834:	0400      	lsls	r0, r0, #16
    3836:	19c0      	adds	r0, r0, r7
    3838:	4480      	add	r8, r0
    383a:	4641      	mov	r1, r8
    383c:	9104      	str	r1, [sp, #16]
    383e:	4659      	mov	r1, fp
    3840:	0c0f      	lsrs	r7, r1, #16
    3842:	0409      	lsls	r1, r1, #16
    3844:	0c09      	lsrs	r1, r1, #16
    3846:	4688      	mov	r8, r1
    3848:	4359      	muls	r1, r3
    384a:	468a      	mov	sl, r1
    384c:	0039      	movs	r1, r7
    384e:	4351      	muls	r1, r2
    3850:	4689      	mov	r9, r1
    3852:	4641      	mov	r1, r8
    3854:	434a      	muls	r2, r1
    3856:	4651      	mov	r1, sl
    3858:	0c09      	lsrs	r1, r1, #16
    385a:	468b      	mov	fp, r1
    385c:	437b      	muls	r3, r7
    385e:	18d2      	adds	r2, r2, r3
    3860:	445a      	add	r2, fp
    3862:	4293      	cmp	r3, r2
    3864:	d903      	bls.n	386e <__aeabi_dmul+0x2c6>
    3866:	2380      	movs	r3, #128	; 0x80
    3868:	025b      	lsls	r3, r3, #9
    386a:	469b      	mov	fp, r3
    386c:	44d9      	add	r9, fp
    386e:	4651      	mov	r1, sl
    3870:	0409      	lsls	r1, r1, #16
    3872:	0c09      	lsrs	r1, r1, #16
    3874:	468a      	mov	sl, r1
    3876:	4641      	mov	r1, r8
    3878:	4361      	muls	r1, r4
    387a:	437c      	muls	r4, r7
    387c:	0c13      	lsrs	r3, r2, #16
    387e:	0412      	lsls	r2, r2, #16
    3880:	444b      	add	r3, r9
    3882:	4452      	add	r2, sl
    3884:	46a1      	mov	r9, r4
    3886:	468a      	mov	sl, r1
    3888:	003c      	movs	r4, r7
    388a:	4641      	mov	r1, r8
    388c:	436c      	muls	r4, r5
    388e:	434d      	muls	r5, r1
    3890:	4651      	mov	r1, sl
    3892:	444d      	add	r5, r9
    3894:	0c0f      	lsrs	r7, r1, #16
    3896:	197d      	adds	r5, r7, r5
    3898:	45a9      	cmp	r9, r5
    389a:	d903      	bls.n	38a4 <__aeabi_dmul+0x2fc>
    389c:	2180      	movs	r1, #128	; 0x80
    389e:	0249      	lsls	r1, r1, #9
    38a0:	4688      	mov	r8, r1
    38a2:	4444      	add	r4, r8
    38a4:	9f04      	ldr	r7, [sp, #16]
    38a6:	9903      	ldr	r1, [sp, #12]
    38a8:	46b8      	mov	r8, r7
    38aa:	4441      	add	r1, r8
    38ac:	468b      	mov	fp, r1
    38ae:	4583      	cmp	fp, r0
    38b0:	4180      	sbcs	r0, r0
    38b2:	4241      	negs	r1, r0
    38b4:	4688      	mov	r8, r1
    38b6:	4651      	mov	r1, sl
    38b8:	0408      	lsls	r0, r1, #16
    38ba:	042f      	lsls	r7, r5, #16
    38bc:	0c00      	lsrs	r0, r0, #16
    38be:	183f      	adds	r7, r7, r0
    38c0:	4658      	mov	r0, fp
    38c2:	9902      	ldr	r1, [sp, #8]
    38c4:	1810      	adds	r0, r2, r0
    38c6:	4689      	mov	r9, r1
    38c8:	4290      	cmp	r0, r2
    38ca:	4192      	sbcs	r2, r2
    38cc:	444f      	add	r7, r9
    38ce:	46ba      	mov	sl, r7
    38d0:	4252      	negs	r2, r2
    38d2:	4699      	mov	r9, r3
    38d4:	4693      	mov	fp, r2
    38d6:	44c2      	add	sl, r8
    38d8:	44d1      	add	r9, sl
    38da:	44cb      	add	fp, r9
    38dc:	428f      	cmp	r7, r1
    38de:	41bf      	sbcs	r7, r7
    38e0:	45c2      	cmp	sl, r8
    38e2:	4189      	sbcs	r1, r1
    38e4:	4599      	cmp	r9, r3
    38e6:	419b      	sbcs	r3, r3
    38e8:	4593      	cmp	fp, r2
    38ea:	4192      	sbcs	r2, r2
    38ec:	427f      	negs	r7, r7
    38ee:	4249      	negs	r1, r1
    38f0:	0c2d      	lsrs	r5, r5, #16
    38f2:	4252      	negs	r2, r2
    38f4:	430f      	orrs	r7, r1
    38f6:	425b      	negs	r3, r3
    38f8:	4313      	orrs	r3, r2
    38fa:	197f      	adds	r7, r7, r5
    38fc:	18ff      	adds	r7, r7, r3
    38fe:	465b      	mov	r3, fp
    3900:	193c      	adds	r4, r7, r4
    3902:	0ddb      	lsrs	r3, r3, #23
    3904:	9a05      	ldr	r2, [sp, #20]
    3906:	0264      	lsls	r4, r4, #9
    3908:	431c      	orrs	r4, r3
    390a:	0243      	lsls	r3, r0, #9
    390c:	4313      	orrs	r3, r2
    390e:	1e5d      	subs	r5, r3, #1
    3910:	41ab      	sbcs	r3, r5
    3912:	465a      	mov	r2, fp
    3914:	0dc0      	lsrs	r0, r0, #23
    3916:	4303      	orrs	r3, r0
    3918:	0252      	lsls	r2, r2, #9
    391a:	4313      	orrs	r3, r2
    391c:	01e2      	lsls	r2, r4, #7
    391e:	d556      	bpl.n	39ce <__aeabi_dmul+0x426>
    3920:	2001      	movs	r0, #1
    3922:	085a      	lsrs	r2, r3, #1
    3924:	4003      	ands	r3, r0
    3926:	4313      	orrs	r3, r2
    3928:	07e2      	lsls	r2, r4, #31
    392a:	4313      	orrs	r3, r2
    392c:	0864      	lsrs	r4, r4, #1
    392e:	485a      	ldr	r0, [pc, #360]	; (3a98 <__aeabi_dmul+0x4f0>)
    3930:	4460      	add	r0, ip
    3932:	2800      	cmp	r0, #0
    3934:	dd4d      	ble.n	39d2 <__aeabi_dmul+0x42a>
    3936:	075a      	lsls	r2, r3, #29
    3938:	d009      	beq.n	394e <__aeabi_dmul+0x3a6>
    393a:	220f      	movs	r2, #15
    393c:	401a      	ands	r2, r3
    393e:	2a04      	cmp	r2, #4
    3940:	d005      	beq.n	394e <__aeabi_dmul+0x3a6>
    3942:	1d1a      	adds	r2, r3, #4
    3944:	429a      	cmp	r2, r3
    3946:	419b      	sbcs	r3, r3
    3948:	425b      	negs	r3, r3
    394a:	18e4      	adds	r4, r4, r3
    394c:	0013      	movs	r3, r2
    394e:	01e2      	lsls	r2, r4, #7
    3950:	d504      	bpl.n	395c <__aeabi_dmul+0x3b4>
    3952:	2080      	movs	r0, #128	; 0x80
    3954:	4a51      	ldr	r2, [pc, #324]	; (3a9c <__aeabi_dmul+0x4f4>)
    3956:	00c0      	lsls	r0, r0, #3
    3958:	4014      	ands	r4, r2
    395a:	4460      	add	r0, ip
    395c:	4a50      	ldr	r2, [pc, #320]	; (3aa0 <__aeabi_dmul+0x4f8>)
    395e:	4290      	cmp	r0, r2
    3960:	dd00      	ble.n	3964 <__aeabi_dmul+0x3bc>
    3962:	e6e3      	b.n	372c <__aeabi_dmul+0x184>
    3964:	2501      	movs	r5, #1
    3966:	08db      	lsrs	r3, r3, #3
    3968:	0762      	lsls	r2, r4, #29
    396a:	431a      	orrs	r2, r3
    396c:	0264      	lsls	r4, r4, #9
    396e:	9b01      	ldr	r3, [sp, #4]
    3970:	4691      	mov	r9, r2
    3972:	0b22      	lsrs	r2, r4, #12
    3974:	0544      	lsls	r4, r0, #21
    3976:	0d64      	lsrs	r4, r4, #21
    3978:	401d      	ands	r5, r3
    397a:	e67c      	b.n	3676 <__aeabi_dmul+0xce>
    397c:	2280      	movs	r2, #128	; 0x80
    397e:	4659      	mov	r1, fp
    3980:	0312      	lsls	r2, r2, #12
    3982:	4211      	tst	r1, r2
    3984:	d008      	beq.n	3998 <__aeabi_dmul+0x3f0>
    3986:	4214      	tst	r4, r2
    3988:	d106      	bne.n	3998 <__aeabi_dmul+0x3f0>
    398a:	4322      	orrs	r2, r4
    398c:	0312      	lsls	r2, r2, #12
    398e:	0b12      	lsrs	r2, r2, #12
    3990:	4645      	mov	r5, r8
    3992:	4699      	mov	r9, r3
    3994:	4c43      	ldr	r4, [pc, #268]	; (3aa4 <__aeabi_dmul+0x4fc>)
    3996:	e66e      	b.n	3676 <__aeabi_dmul+0xce>
    3998:	465b      	mov	r3, fp
    399a:	431a      	orrs	r2, r3
    399c:	0312      	lsls	r2, r2, #12
    399e:	0b12      	lsrs	r2, r2, #12
    39a0:	4c40      	ldr	r4, [pc, #256]	; (3aa4 <__aeabi_dmul+0x4fc>)
    39a2:	e668      	b.n	3676 <__aeabi_dmul+0xce>
    39a4:	0003      	movs	r3, r0
    39a6:	4654      	mov	r4, sl
    39a8:	3b28      	subs	r3, #40	; 0x28
    39aa:	409c      	lsls	r4, r3
    39ac:	2300      	movs	r3, #0
    39ae:	e6b9      	b.n	3724 <__aeabi_dmul+0x17c>
    39b0:	f000 fd58 	bl	4464 <__clzsi2>
    39b4:	3020      	adds	r0, #32
    39b6:	e6a6      	b.n	3706 <__aeabi_dmul+0x15e>
    39b8:	0003      	movs	r3, r0
    39ba:	3b28      	subs	r3, #40	; 0x28
    39bc:	409f      	lsls	r7, r3
    39be:	2300      	movs	r3, #0
    39c0:	46bb      	mov	fp, r7
    39c2:	4699      	mov	r9, r3
    39c4:	e68a      	b.n	36dc <__aeabi_dmul+0x134>
    39c6:	f000 fd4d 	bl	4464 <__clzsi2>
    39ca:	3020      	adds	r0, #32
    39cc:	e674      	b.n	36b8 <__aeabi_dmul+0x110>
    39ce:	46b4      	mov	ip, r6
    39d0:	e7ad      	b.n	392e <__aeabi_dmul+0x386>
    39d2:	2501      	movs	r5, #1
    39d4:	1a2a      	subs	r2, r5, r0
    39d6:	2a38      	cmp	r2, #56	; 0x38
    39d8:	dd06      	ble.n	39e8 <__aeabi_dmul+0x440>
    39da:	9b01      	ldr	r3, [sp, #4]
    39dc:	2400      	movs	r4, #0
    39de:	401d      	ands	r5, r3
    39e0:	2300      	movs	r3, #0
    39e2:	2200      	movs	r2, #0
    39e4:	4699      	mov	r9, r3
    39e6:	e646      	b.n	3676 <__aeabi_dmul+0xce>
    39e8:	2a1f      	cmp	r2, #31
    39ea:	dc21      	bgt.n	3a30 <__aeabi_dmul+0x488>
    39ec:	2520      	movs	r5, #32
    39ee:	0020      	movs	r0, r4
    39f0:	1aad      	subs	r5, r5, r2
    39f2:	001e      	movs	r6, r3
    39f4:	40ab      	lsls	r3, r5
    39f6:	40a8      	lsls	r0, r5
    39f8:	40d6      	lsrs	r6, r2
    39fa:	1e5d      	subs	r5, r3, #1
    39fc:	41ab      	sbcs	r3, r5
    39fe:	4330      	orrs	r0, r6
    3a00:	4318      	orrs	r0, r3
    3a02:	40d4      	lsrs	r4, r2
    3a04:	0743      	lsls	r3, r0, #29
    3a06:	d009      	beq.n	3a1c <__aeabi_dmul+0x474>
    3a08:	230f      	movs	r3, #15
    3a0a:	4003      	ands	r3, r0
    3a0c:	2b04      	cmp	r3, #4
    3a0e:	d005      	beq.n	3a1c <__aeabi_dmul+0x474>
    3a10:	0003      	movs	r3, r0
    3a12:	1d18      	adds	r0, r3, #4
    3a14:	4298      	cmp	r0, r3
    3a16:	419b      	sbcs	r3, r3
    3a18:	425b      	negs	r3, r3
    3a1a:	18e4      	adds	r4, r4, r3
    3a1c:	0223      	lsls	r3, r4, #8
    3a1e:	d521      	bpl.n	3a64 <__aeabi_dmul+0x4bc>
    3a20:	2501      	movs	r5, #1
    3a22:	9b01      	ldr	r3, [sp, #4]
    3a24:	2401      	movs	r4, #1
    3a26:	401d      	ands	r5, r3
    3a28:	2300      	movs	r3, #0
    3a2a:	2200      	movs	r2, #0
    3a2c:	4699      	mov	r9, r3
    3a2e:	e622      	b.n	3676 <__aeabi_dmul+0xce>
    3a30:	251f      	movs	r5, #31
    3a32:	0021      	movs	r1, r4
    3a34:	426d      	negs	r5, r5
    3a36:	1a28      	subs	r0, r5, r0
    3a38:	40c1      	lsrs	r1, r0
    3a3a:	0008      	movs	r0, r1
    3a3c:	2a20      	cmp	r2, #32
    3a3e:	d01d      	beq.n	3a7c <__aeabi_dmul+0x4d4>
    3a40:	355f      	adds	r5, #95	; 0x5f
    3a42:	1aaa      	subs	r2, r5, r2
    3a44:	4094      	lsls	r4, r2
    3a46:	4323      	orrs	r3, r4
    3a48:	1e5c      	subs	r4, r3, #1
    3a4a:	41a3      	sbcs	r3, r4
    3a4c:	2507      	movs	r5, #7
    3a4e:	4303      	orrs	r3, r0
    3a50:	401d      	ands	r5, r3
    3a52:	2200      	movs	r2, #0
    3a54:	2d00      	cmp	r5, #0
    3a56:	d009      	beq.n	3a6c <__aeabi_dmul+0x4c4>
    3a58:	220f      	movs	r2, #15
    3a5a:	2400      	movs	r4, #0
    3a5c:	401a      	ands	r2, r3
    3a5e:	0018      	movs	r0, r3
    3a60:	2a04      	cmp	r2, #4
    3a62:	d1d6      	bne.n	3a12 <__aeabi_dmul+0x46a>
    3a64:	0003      	movs	r3, r0
    3a66:	0765      	lsls	r5, r4, #29
    3a68:	0264      	lsls	r4, r4, #9
    3a6a:	0b22      	lsrs	r2, r4, #12
    3a6c:	08db      	lsrs	r3, r3, #3
    3a6e:	432b      	orrs	r3, r5
    3a70:	2501      	movs	r5, #1
    3a72:	4699      	mov	r9, r3
    3a74:	9b01      	ldr	r3, [sp, #4]
    3a76:	2400      	movs	r4, #0
    3a78:	401d      	ands	r5, r3
    3a7a:	e5fc      	b.n	3676 <__aeabi_dmul+0xce>
    3a7c:	2400      	movs	r4, #0
    3a7e:	e7e2      	b.n	3a46 <__aeabi_dmul+0x49e>
    3a80:	2280      	movs	r2, #128	; 0x80
    3a82:	2501      	movs	r5, #1
    3a84:	0312      	lsls	r2, r2, #12
    3a86:	4322      	orrs	r2, r4
    3a88:	9901      	ldr	r1, [sp, #4]
    3a8a:	0312      	lsls	r2, r2, #12
    3a8c:	0b12      	lsrs	r2, r2, #12
    3a8e:	400d      	ands	r5, r1
    3a90:	4699      	mov	r9, r3
    3a92:	4c04      	ldr	r4, [pc, #16]	; (3aa4 <__aeabi_dmul+0x4fc>)
    3a94:	e5ef      	b.n	3676 <__aeabi_dmul+0xce>
    3a96:	46c0      	nop			; (mov r8, r8)
    3a98:	000003ff 	.word	0x000003ff
    3a9c:	feffffff 	.word	0xfeffffff
    3aa0:	000007fe 	.word	0x000007fe
    3aa4:	000007ff 	.word	0x000007ff

00003aa8 <__aeabi_dsub>:
    3aa8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3aaa:	4646      	mov	r6, r8
    3aac:	46d6      	mov	lr, sl
    3aae:	464f      	mov	r7, r9
    3ab0:	030c      	lsls	r4, r1, #12
    3ab2:	b5c0      	push	{r6, r7, lr}
    3ab4:	0fcd      	lsrs	r5, r1, #31
    3ab6:	004e      	lsls	r6, r1, #1
    3ab8:	0a61      	lsrs	r1, r4, #9
    3aba:	0f44      	lsrs	r4, r0, #29
    3abc:	430c      	orrs	r4, r1
    3abe:	00c1      	lsls	r1, r0, #3
    3ac0:	0058      	lsls	r0, r3, #1
    3ac2:	0d40      	lsrs	r0, r0, #21
    3ac4:	4684      	mov	ip, r0
    3ac6:	468a      	mov	sl, r1
    3ac8:	000f      	movs	r7, r1
    3aca:	0319      	lsls	r1, r3, #12
    3acc:	0f50      	lsrs	r0, r2, #29
    3ace:	0a49      	lsrs	r1, r1, #9
    3ad0:	4301      	orrs	r1, r0
    3ad2:	48c6      	ldr	r0, [pc, #792]	; (3dec <__aeabi_dsub+0x344>)
    3ad4:	0d76      	lsrs	r6, r6, #21
    3ad6:	46a8      	mov	r8, r5
    3ad8:	0fdb      	lsrs	r3, r3, #31
    3ada:	00d2      	lsls	r2, r2, #3
    3adc:	4584      	cmp	ip, r0
    3ade:	d100      	bne.n	3ae2 <__aeabi_dsub+0x3a>
    3ae0:	e0d8      	b.n	3c94 <__aeabi_dsub+0x1ec>
    3ae2:	2001      	movs	r0, #1
    3ae4:	4043      	eors	r3, r0
    3ae6:	42ab      	cmp	r3, r5
    3ae8:	d100      	bne.n	3aec <__aeabi_dsub+0x44>
    3aea:	e0a6      	b.n	3c3a <__aeabi_dsub+0x192>
    3aec:	4660      	mov	r0, ip
    3aee:	1a35      	subs	r5, r6, r0
    3af0:	2d00      	cmp	r5, #0
    3af2:	dc00      	bgt.n	3af6 <__aeabi_dsub+0x4e>
    3af4:	e105      	b.n	3d02 <__aeabi_dsub+0x25a>
    3af6:	2800      	cmp	r0, #0
    3af8:	d110      	bne.n	3b1c <__aeabi_dsub+0x74>
    3afa:	000b      	movs	r3, r1
    3afc:	4313      	orrs	r3, r2
    3afe:	d100      	bne.n	3b02 <__aeabi_dsub+0x5a>
    3b00:	e0d7      	b.n	3cb2 <__aeabi_dsub+0x20a>
    3b02:	1e6b      	subs	r3, r5, #1
    3b04:	2b00      	cmp	r3, #0
    3b06:	d000      	beq.n	3b0a <__aeabi_dsub+0x62>
    3b08:	e14b      	b.n	3da2 <__aeabi_dsub+0x2fa>
    3b0a:	4653      	mov	r3, sl
    3b0c:	1a9f      	subs	r7, r3, r2
    3b0e:	45ba      	cmp	sl, r7
    3b10:	4180      	sbcs	r0, r0
    3b12:	1a64      	subs	r4, r4, r1
    3b14:	4240      	negs	r0, r0
    3b16:	1a24      	subs	r4, r4, r0
    3b18:	2601      	movs	r6, #1
    3b1a:	e01e      	b.n	3b5a <__aeabi_dsub+0xb2>
    3b1c:	4bb3      	ldr	r3, [pc, #716]	; (3dec <__aeabi_dsub+0x344>)
    3b1e:	429e      	cmp	r6, r3
    3b20:	d048      	beq.n	3bb4 <__aeabi_dsub+0x10c>
    3b22:	2380      	movs	r3, #128	; 0x80
    3b24:	041b      	lsls	r3, r3, #16
    3b26:	4319      	orrs	r1, r3
    3b28:	2d38      	cmp	r5, #56	; 0x38
    3b2a:	dd00      	ble.n	3b2e <__aeabi_dsub+0x86>
    3b2c:	e119      	b.n	3d62 <__aeabi_dsub+0x2ba>
    3b2e:	2d1f      	cmp	r5, #31
    3b30:	dd00      	ble.n	3b34 <__aeabi_dsub+0x8c>
    3b32:	e14c      	b.n	3dce <__aeabi_dsub+0x326>
    3b34:	2320      	movs	r3, #32
    3b36:	000f      	movs	r7, r1
    3b38:	1b5b      	subs	r3, r3, r5
    3b3a:	0010      	movs	r0, r2
    3b3c:	409a      	lsls	r2, r3
    3b3e:	409f      	lsls	r7, r3
    3b40:	40e8      	lsrs	r0, r5
    3b42:	1e53      	subs	r3, r2, #1
    3b44:	419a      	sbcs	r2, r3
    3b46:	40e9      	lsrs	r1, r5
    3b48:	4307      	orrs	r7, r0
    3b4a:	4317      	orrs	r7, r2
    3b4c:	4653      	mov	r3, sl
    3b4e:	1bdf      	subs	r7, r3, r7
    3b50:	1a61      	subs	r1, r4, r1
    3b52:	45ba      	cmp	sl, r7
    3b54:	41a4      	sbcs	r4, r4
    3b56:	4264      	negs	r4, r4
    3b58:	1b0c      	subs	r4, r1, r4
    3b5a:	0223      	lsls	r3, r4, #8
    3b5c:	d400      	bmi.n	3b60 <__aeabi_dsub+0xb8>
    3b5e:	e0c5      	b.n	3cec <__aeabi_dsub+0x244>
    3b60:	0264      	lsls	r4, r4, #9
    3b62:	0a65      	lsrs	r5, r4, #9
    3b64:	2d00      	cmp	r5, #0
    3b66:	d100      	bne.n	3b6a <__aeabi_dsub+0xc2>
    3b68:	e0f6      	b.n	3d58 <__aeabi_dsub+0x2b0>
    3b6a:	0028      	movs	r0, r5
    3b6c:	f000 fc7a 	bl	4464 <__clzsi2>
    3b70:	0003      	movs	r3, r0
    3b72:	3b08      	subs	r3, #8
    3b74:	2b1f      	cmp	r3, #31
    3b76:	dd00      	ble.n	3b7a <__aeabi_dsub+0xd2>
    3b78:	e0e9      	b.n	3d4e <__aeabi_dsub+0x2a6>
    3b7a:	2220      	movs	r2, #32
    3b7c:	003c      	movs	r4, r7
    3b7e:	1ad2      	subs	r2, r2, r3
    3b80:	409d      	lsls	r5, r3
    3b82:	40d4      	lsrs	r4, r2
    3b84:	409f      	lsls	r7, r3
    3b86:	4325      	orrs	r5, r4
    3b88:	429e      	cmp	r6, r3
    3b8a:	dd00      	ble.n	3b8e <__aeabi_dsub+0xe6>
    3b8c:	e0db      	b.n	3d46 <__aeabi_dsub+0x29e>
    3b8e:	1b9e      	subs	r6, r3, r6
    3b90:	1c73      	adds	r3, r6, #1
    3b92:	2b1f      	cmp	r3, #31
    3b94:	dd00      	ble.n	3b98 <__aeabi_dsub+0xf0>
    3b96:	e10a      	b.n	3dae <__aeabi_dsub+0x306>
    3b98:	2220      	movs	r2, #32
    3b9a:	0038      	movs	r0, r7
    3b9c:	1ad2      	subs	r2, r2, r3
    3b9e:	0029      	movs	r1, r5
    3ba0:	4097      	lsls	r7, r2
    3ba2:	002c      	movs	r4, r5
    3ba4:	4091      	lsls	r1, r2
    3ba6:	40d8      	lsrs	r0, r3
    3ba8:	1e7a      	subs	r2, r7, #1
    3baa:	4197      	sbcs	r7, r2
    3bac:	40dc      	lsrs	r4, r3
    3bae:	2600      	movs	r6, #0
    3bb0:	4301      	orrs	r1, r0
    3bb2:	430f      	orrs	r7, r1
    3bb4:	077b      	lsls	r3, r7, #29
    3bb6:	d009      	beq.n	3bcc <__aeabi_dsub+0x124>
    3bb8:	230f      	movs	r3, #15
    3bba:	403b      	ands	r3, r7
    3bbc:	2b04      	cmp	r3, #4
    3bbe:	d005      	beq.n	3bcc <__aeabi_dsub+0x124>
    3bc0:	1d3b      	adds	r3, r7, #4
    3bc2:	42bb      	cmp	r3, r7
    3bc4:	41bf      	sbcs	r7, r7
    3bc6:	427f      	negs	r7, r7
    3bc8:	19e4      	adds	r4, r4, r7
    3bca:	001f      	movs	r7, r3
    3bcc:	0223      	lsls	r3, r4, #8
    3bce:	d525      	bpl.n	3c1c <__aeabi_dsub+0x174>
    3bd0:	4b86      	ldr	r3, [pc, #536]	; (3dec <__aeabi_dsub+0x344>)
    3bd2:	3601      	adds	r6, #1
    3bd4:	429e      	cmp	r6, r3
    3bd6:	d100      	bne.n	3bda <__aeabi_dsub+0x132>
    3bd8:	e0af      	b.n	3d3a <__aeabi_dsub+0x292>
    3bda:	4b85      	ldr	r3, [pc, #532]	; (3df0 <__aeabi_dsub+0x348>)
    3bdc:	2501      	movs	r5, #1
    3bde:	401c      	ands	r4, r3
    3be0:	4643      	mov	r3, r8
    3be2:	0762      	lsls	r2, r4, #29
    3be4:	08ff      	lsrs	r7, r7, #3
    3be6:	0264      	lsls	r4, r4, #9
    3be8:	0576      	lsls	r6, r6, #21
    3bea:	4317      	orrs	r7, r2
    3bec:	0b24      	lsrs	r4, r4, #12
    3bee:	0d76      	lsrs	r6, r6, #21
    3bf0:	401d      	ands	r5, r3
    3bf2:	2100      	movs	r1, #0
    3bf4:	0324      	lsls	r4, r4, #12
    3bf6:	0b23      	lsrs	r3, r4, #12
    3bf8:	0d0c      	lsrs	r4, r1, #20
    3bfa:	4a7e      	ldr	r2, [pc, #504]	; (3df4 <__aeabi_dsub+0x34c>)
    3bfc:	0524      	lsls	r4, r4, #20
    3bfe:	431c      	orrs	r4, r3
    3c00:	4014      	ands	r4, r2
    3c02:	0533      	lsls	r3, r6, #20
    3c04:	4323      	orrs	r3, r4
    3c06:	005b      	lsls	r3, r3, #1
    3c08:	07ed      	lsls	r5, r5, #31
    3c0a:	085b      	lsrs	r3, r3, #1
    3c0c:	432b      	orrs	r3, r5
    3c0e:	0038      	movs	r0, r7
    3c10:	0019      	movs	r1, r3
    3c12:	bc1c      	pop	{r2, r3, r4}
    3c14:	4690      	mov	r8, r2
    3c16:	4699      	mov	r9, r3
    3c18:	46a2      	mov	sl, r4
    3c1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c1c:	2501      	movs	r5, #1
    3c1e:	4643      	mov	r3, r8
    3c20:	0762      	lsls	r2, r4, #29
    3c22:	08ff      	lsrs	r7, r7, #3
    3c24:	4317      	orrs	r7, r2
    3c26:	08e4      	lsrs	r4, r4, #3
    3c28:	401d      	ands	r5, r3
    3c2a:	4b70      	ldr	r3, [pc, #448]	; (3dec <__aeabi_dsub+0x344>)
    3c2c:	429e      	cmp	r6, r3
    3c2e:	d036      	beq.n	3c9e <__aeabi_dsub+0x1f6>
    3c30:	0324      	lsls	r4, r4, #12
    3c32:	0576      	lsls	r6, r6, #21
    3c34:	0b24      	lsrs	r4, r4, #12
    3c36:	0d76      	lsrs	r6, r6, #21
    3c38:	e7db      	b.n	3bf2 <__aeabi_dsub+0x14a>
    3c3a:	4663      	mov	r3, ip
    3c3c:	1af3      	subs	r3, r6, r3
    3c3e:	2b00      	cmp	r3, #0
    3c40:	dc00      	bgt.n	3c44 <__aeabi_dsub+0x19c>
    3c42:	e094      	b.n	3d6e <__aeabi_dsub+0x2c6>
    3c44:	4660      	mov	r0, ip
    3c46:	2800      	cmp	r0, #0
    3c48:	d035      	beq.n	3cb6 <__aeabi_dsub+0x20e>
    3c4a:	4868      	ldr	r0, [pc, #416]	; (3dec <__aeabi_dsub+0x344>)
    3c4c:	4286      	cmp	r6, r0
    3c4e:	d0b1      	beq.n	3bb4 <__aeabi_dsub+0x10c>
    3c50:	2780      	movs	r7, #128	; 0x80
    3c52:	043f      	lsls	r7, r7, #16
    3c54:	4339      	orrs	r1, r7
    3c56:	2b38      	cmp	r3, #56	; 0x38
    3c58:	dc00      	bgt.n	3c5c <__aeabi_dsub+0x1b4>
    3c5a:	e0fd      	b.n	3e58 <__aeabi_dsub+0x3b0>
    3c5c:	430a      	orrs	r2, r1
    3c5e:	0017      	movs	r7, r2
    3c60:	2100      	movs	r1, #0
    3c62:	1e7a      	subs	r2, r7, #1
    3c64:	4197      	sbcs	r7, r2
    3c66:	4457      	add	r7, sl
    3c68:	4557      	cmp	r7, sl
    3c6a:	4180      	sbcs	r0, r0
    3c6c:	1909      	adds	r1, r1, r4
    3c6e:	4244      	negs	r4, r0
    3c70:	190c      	adds	r4, r1, r4
    3c72:	0223      	lsls	r3, r4, #8
    3c74:	d53a      	bpl.n	3cec <__aeabi_dsub+0x244>
    3c76:	4b5d      	ldr	r3, [pc, #372]	; (3dec <__aeabi_dsub+0x344>)
    3c78:	3601      	adds	r6, #1
    3c7a:	429e      	cmp	r6, r3
    3c7c:	d100      	bne.n	3c80 <__aeabi_dsub+0x1d8>
    3c7e:	e14b      	b.n	3f18 <__aeabi_dsub+0x470>
    3c80:	2201      	movs	r2, #1
    3c82:	4b5b      	ldr	r3, [pc, #364]	; (3df0 <__aeabi_dsub+0x348>)
    3c84:	401c      	ands	r4, r3
    3c86:	087b      	lsrs	r3, r7, #1
    3c88:	4017      	ands	r7, r2
    3c8a:	431f      	orrs	r7, r3
    3c8c:	07e2      	lsls	r2, r4, #31
    3c8e:	4317      	orrs	r7, r2
    3c90:	0864      	lsrs	r4, r4, #1
    3c92:	e78f      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3c94:	0008      	movs	r0, r1
    3c96:	4310      	orrs	r0, r2
    3c98:	d000      	beq.n	3c9c <__aeabi_dsub+0x1f4>
    3c9a:	e724      	b.n	3ae6 <__aeabi_dsub+0x3e>
    3c9c:	e721      	b.n	3ae2 <__aeabi_dsub+0x3a>
    3c9e:	0023      	movs	r3, r4
    3ca0:	433b      	orrs	r3, r7
    3ca2:	d100      	bne.n	3ca6 <__aeabi_dsub+0x1fe>
    3ca4:	e1b9      	b.n	401a <__aeabi_dsub+0x572>
    3ca6:	2280      	movs	r2, #128	; 0x80
    3ca8:	0312      	lsls	r2, r2, #12
    3caa:	4314      	orrs	r4, r2
    3cac:	0324      	lsls	r4, r4, #12
    3cae:	0b24      	lsrs	r4, r4, #12
    3cb0:	e79f      	b.n	3bf2 <__aeabi_dsub+0x14a>
    3cb2:	002e      	movs	r6, r5
    3cb4:	e77e      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3cb6:	0008      	movs	r0, r1
    3cb8:	4310      	orrs	r0, r2
    3cba:	d100      	bne.n	3cbe <__aeabi_dsub+0x216>
    3cbc:	e0ca      	b.n	3e54 <__aeabi_dsub+0x3ac>
    3cbe:	1e58      	subs	r0, r3, #1
    3cc0:	4684      	mov	ip, r0
    3cc2:	2800      	cmp	r0, #0
    3cc4:	d000      	beq.n	3cc8 <__aeabi_dsub+0x220>
    3cc6:	e0e7      	b.n	3e98 <__aeabi_dsub+0x3f0>
    3cc8:	4452      	add	r2, sl
    3cca:	4552      	cmp	r2, sl
    3ccc:	4180      	sbcs	r0, r0
    3cce:	1864      	adds	r4, r4, r1
    3cd0:	4240      	negs	r0, r0
    3cd2:	1824      	adds	r4, r4, r0
    3cd4:	0017      	movs	r7, r2
    3cd6:	2601      	movs	r6, #1
    3cd8:	0223      	lsls	r3, r4, #8
    3cda:	d507      	bpl.n	3cec <__aeabi_dsub+0x244>
    3cdc:	2602      	movs	r6, #2
    3cde:	e7cf      	b.n	3c80 <__aeabi_dsub+0x1d8>
    3ce0:	4664      	mov	r4, ip
    3ce2:	432c      	orrs	r4, r5
    3ce4:	d100      	bne.n	3ce8 <__aeabi_dsub+0x240>
    3ce6:	e1b3      	b.n	4050 <__aeabi_dsub+0x5a8>
    3ce8:	002c      	movs	r4, r5
    3cea:	4667      	mov	r7, ip
    3cec:	077b      	lsls	r3, r7, #29
    3cee:	d000      	beq.n	3cf2 <__aeabi_dsub+0x24a>
    3cf0:	e762      	b.n	3bb8 <__aeabi_dsub+0x110>
    3cf2:	0763      	lsls	r3, r4, #29
    3cf4:	08ff      	lsrs	r7, r7, #3
    3cf6:	431f      	orrs	r7, r3
    3cf8:	2501      	movs	r5, #1
    3cfa:	4643      	mov	r3, r8
    3cfc:	08e4      	lsrs	r4, r4, #3
    3cfe:	401d      	ands	r5, r3
    3d00:	e793      	b.n	3c2a <__aeabi_dsub+0x182>
    3d02:	2d00      	cmp	r5, #0
    3d04:	d178      	bne.n	3df8 <__aeabi_dsub+0x350>
    3d06:	1c75      	adds	r5, r6, #1
    3d08:	056d      	lsls	r5, r5, #21
    3d0a:	0d6d      	lsrs	r5, r5, #21
    3d0c:	2d01      	cmp	r5, #1
    3d0e:	dc00      	bgt.n	3d12 <__aeabi_dsub+0x26a>
    3d10:	e0f2      	b.n	3ef8 <__aeabi_dsub+0x450>
    3d12:	4650      	mov	r0, sl
    3d14:	1a80      	subs	r0, r0, r2
    3d16:	4582      	cmp	sl, r0
    3d18:	41bf      	sbcs	r7, r7
    3d1a:	1a65      	subs	r5, r4, r1
    3d1c:	427f      	negs	r7, r7
    3d1e:	1bed      	subs	r5, r5, r7
    3d20:	4684      	mov	ip, r0
    3d22:	0228      	lsls	r0, r5, #8
    3d24:	d400      	bmi.n	3d28 <__aeabi_dsub+0x280>
    3d26:	e08c      	b.n	3e42 <__aeabi_dsub+0x39a>
    3d28:	4650      	mov	r0, sl
    3d2a:	1a17      	subs	r7, r2, r0
    3d2c:	42ba      	cmp	r2, r7
    3d2e:	4192      	sbcs	r2, r2
    3d30:	1b0c      	subs	r4, r1, r4
    3d32:	4255      	negs	r5, r2
    3d34:	1b65      	subs	r5, r4, r5
    3d36:	4698      	mov	r8, r3
    3d38:	e714      	b.n	3b64 <__aeabi_dsub+0xbc>
    3d3a:	2501      	movs	r5, #1
    3d3c:	4643      	mov	r3, r8
    3d3e:	2400      	movs	r4, #0
    3d40:	401d      	ands	r5, r3
    3d42:	2700      	movs	r7, #0
    3d44:	e755      	b.n	3bf2 <__aeabi_dsub+0x14a>
    3d46:	4c2a      	ldr	r4, [pc, #168]	; (3df0 <__aeabi_dsub+0x348>)
    3d48:	1af6      	subs	r6, r6, r3
    3d4a:	402c      	ands	r4, r5
    3d4c:	e732      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3d4e:	003d      	movs	r5, r7
    3d50:	3828      	subs	r0, #40	; 0x28
    3d52:	4085      	lsls	r5, r0
    3d54:	2700      	movs	r7, #0
    3d56:	e717      	b.n	3b88 <__aeabi_dsub+0xe0>
    3d58:	0038      	movs	r0, r7
    3d5a:	f000 fb83 	bl	4464 <__clzsi2>
    3d5e:	3020      	adds	r0, #32
    3d60:	e706      	b.n	3b70 <__aeabi_dsub+0xc8>
    3d62:	430a      	orrs	r2, r1
    3d64:	0017      	movs	r7, r2
    3d66:	2100      	movs	r1, #0
    3d68:	1e7a      	subs	r2, r7, #1
    3d6a:	4197      	sbcs	r7, r2
    3d6c:	e6ee      	b.n	3b4c <__aeabi_dsub+0xa4>
    3d6e:	2b00      	cmp	r3, #0
    3d70:	d000      	beq.n	3d74 <__aeabi_dsub+0x2cc>
    3d72:	e0e5      	b.n	3f40 <__aeabi_dsub+0x498>
    3d74:	1c73      	adds	r3, r6, #1
    3d76:	469c      	mov	ip, r3
    3d78:	055b      	lsls	r3, r3, #21
    3d7a:	0d5b      	lsrs	r3, r3, #21
    3d7c:	2b01      	cmp	r3, #1
    3d7e:	dc00      	bgt.n	3d82 <__aeabi_dsub+0x2da>
    3d80:	e09f      	b.n	3ec2 <__aeabi_dsub+0x41a>
    3d82:	4b1a      	ldr	r3, [pc, #104]	; (3dec <__aeabi_dsub+0x344>)
    3d84:	459c      	cmp	ip, r3
    3d86:	d100      	bne.n	3d8a <__aeabi_dsub+0x2e2>
    3d88:	e0c5      	b.n	3f16 <__aeabi_dsub+0x46e>
    3d8a:	4452      	add	r2, sl
    3d8c:	4552      	cmp	r2, sl
    3d8e:	4180      	sbcs	r0, r0
    3d90:	1864      	adds	r4, r4, r1
    3d92:	4240      	negs	r0, r0
    3d94:	1824      	adds	r4, r4, r0
    3d96:	07e7      	lsls	r7, r4, #31
    3d98:	0852      	lsrs	r2, r2, #1
    3d9a:	4317      	orrs	r7, r2
    3d9c:	0864      	lsrs	r4, r4, #1
    3d9e:	4666      	mov	r6, ip
    3da0:	e708      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3da2:	4812      	ldr	r0, [pc, #72]	; (3dec <__aeabi_dsub+0x344>)
    3da4:	4285      	cmp	r5, r0
    3da6:	d100      	bne.n	3daa <__aeabi_dsub+0x302>
    3da8:	e085      	b.n	3eb6 <__aeabi_dsub+0x40e>
    3daa:	001d      	movs	r5, r3
    3dac:	e6bc      	b.n	3b28 <__aeabi_dsub+0x80>
    3dae:	0029      	movs	r1, r5
    3db0:	3e1f      	subs	r6, #31
    3db2:	40f1      	lsrs	r1, r6
    3db4:	2b20      	cmp	r3, #32
    3db6:	d100      	bne.n	3dba <__aeabi_dsub+0x312>
    3db8:	e07f      	b.n	3eba <__aeabi_dsub+0x412>
    3dba:	2240      	movs	r2, #64	; 0x40
    3dbc:	1ad3      	subs	r3, r2, r3
    3dbe:	409d      	lsls	r5, r3
    3dc0:	432f      	orrs	r7, r5
    3dc2:	1e7d      	subs	r5, r7, #1
    3dc4:	41af      	sbcs	r7, r5
    3dc6:	2400      	movs	r4, #0
    3dc8:	430f      	orrs	r7, r1
    3dca:	2600      	movs	r6, #0
    3dcc:	e78e      	b.n	3cec <__aeabi_dsub+0x244>
    3dce:	002b      	movs	r3, r5
    3dd0:	000f      	movs	r7, r1
    3dd2:	3b20      	subs	r3, #32
    3dd4:	40df      	lsrs	r7, r3
    3dd6:	2d20      	cmp	r5, #32
    3dd8:	d071      	beq.n	3ebe <__aeabi_dsub+0x416>
    3dda:	2340      	movs	r3, #64	; 0x40
    3ddc:	1b5d      	subs	r5, r3, r5
    3dde:	40a9      	lsls	r1, r5
    3de0:	430a      	orrs	r2, r1
    3de2:	1e51      	subs	r1, r2, #1
    3de4:	418a      	sbcs	r2, r1
    3de6:	2100      	movs	r1, #0
    3de8:	4317      	orrs	r7, r2
    3dea:	e6af      	b.n	3b4c <__aeabi_dsub+0xa4>
    3dec:	000007ff 	.word	0x000007ff
    3df0:	ff7fffff 	.word	0xff7fffff
    3df4:	800fffff 	.word	0x800fffff
    3df8:	2e00      	cmp	r6, #0
    3dfa:	d03e      	beq.n	3e7a <__aeabi_dsub+0x3d2>
    3dfc:	4eb3      	ldr	r6, [pc, #716]	; (40cc <__aeabi_dsub+0x624>)
    3dfe:	45b4      	cmp	ip, r6
    3e00:	d045      	beq.n	3e8e <__aeabi_dsub+0x3e6>
    3e02:	2680      	movs	r6, #128	; 0x80
    3e04:	0436      	lsls	r6, r6, #16
    3e06:	426d      	negs	r5, r5
    3e08:	4334      	orrs	r4, r6
    3e0a:	2d38      	cmp	r5, #56	; 0x38
    3e0c:	dd00      	ble.n	3e10 <__aeabi_dsub+0x368>
    3e0e:	e0a8      	b.n	3f62 <__aeabi_dsub+0x4ba>
    3e10:	2d1f      	cmp	r5, #31
    3e12:	dd00      	ble.n	3e16 <__aeabi_dsub+0x36e>
    3e14:	e11f      	b.n	4056 <__aeabi_dsub+0x5ae>
    3e16:	2620      	movs	r6, #32
    3e18:	0027      	movs	r7, r4
    3e1a:	4650      	mov	r0, sl
    3e1c:	1b76      	subs	r6, r6, r5
    3e1e:	40b7      	lsls	r7, r6
    3e20:	40e8      	lsrs	r0, r5
    3e22:	4307      	orrs	r7, r0
    3e24:	4650      	mov	r0, sl
    3e26:	40b0      	lsls	r0, r6
    3e28:	1e46      	subs	r6, r0, #1
    3e2a:	41b0      	sbcs	r0, r6
    3e2c:	40ec      	lsrs	r4, r5
    3e2e:	4338      	orrs	r0, r7
    3e30:	1a17      	subs	r7, r2, r0
    3e32:	42ba      	cmp	r2, r7
    3e34:	4192      	sbcs	r2, r2
    3e36:	1b0c      	subs	r4, r1, r4
    3e38:	4252      	negs	r2, r2
    3e3a:	1aa4      	subs	r4, r4, r2
    3e3c:	4666      	mov	r6, ip
    3e3e:	4698      	mov	r8, r3
    3e40:	e68b      	b.n	3b5a <__aeabi_dsub+0xb2>
    3e42:	4664      	mov	r4, ip
    3e44:	4667      	mov	r7, ip
    3e46:	432c      	orrs	r4, r5
    3e48:	d000      	beq.n	3e4c <__aeabi_dsub+0x3a4>
    3e4a:	e68b      	b.n	3b64 <__aeabi_dsub+0xbc>
    3e4c:	2500      	movs	r5, #0
    3e4e:	2600      	movs	r6, #0
    3e50:	2700      	movs	r7, #0
    3e52:	e6ea      	b.n	3c2a <__aeabi_dsub+0x182>
    3e54:	001e      	movs	r6, r3
    3e56:	e6ad      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3e58:	2b1f      	cmp	r3, #31
    3e5a:	dc60      	bgt.n	3f1e <__aeabi_dsub+0x476>
    3e5c:	2720      	movs	r7, #32
    3e5e:	1af8      	subs	r0, r7, r3
    3e60:	000f      	movs	r7, r1
    3e62:	4684      	mov	ip, r0
    3e64:	4087      	lsls	r7, r0
    3e66:	0010      	movs	r0, r2
    3e68:	40d8      	lsrs	r0, r3
    3e6a:	4307      	orrs	r7, r0
    3e6c:	4660      	mov	r0, ip
    3e6e:	4082      	lsls	r2, r0
    3e70:	1e50      	subs	r0, r2, #1
    3e72:	4182      	sbcs	r2, r0
    3e74:	40d9      	lsrs	r1, r3
    3e76:	4317      	orrs	r7, r2
    3e78:	e6f5      	b.n	3c66 <__aeabi_dsub+0x1be>
    3e7a:	0026      	movs	r6, r4
    3e7c:	4650      	mov	r0, sl
    3e7e:	4306      	orrs	r6, r0
    3e80:	d005      	beq.n	3e8e <__aeabi_dsub+0x3e6>
    3e82:	43ed      	mvns	r5, r5
    3e84:	2d00      	cmp	r5, #0
    3e86:	d0d3      	beq.n	3e30 <__aeabi_dsub+0x388>
    3e88:	4e90      	ldr	r6, [pc, #576]	; (40cc <__aeabi_dsub+0x624>)
    3e8a:	45b4      	cmp	ip, r6
    3e8c:	d1bd      	bne.n	3e0a <__aeabi_dsub+0x362>
    3e8e:	000c      	movs	r4, r1
    3e90:	0017      	movs	r7, r2
    3e92:	4666      	mov	r6, ip
    3e94:	4698      	mov	r8, r3
    3e96:	e68d      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3e98:	488c      	ldr	r0, [pc, #560]	; (40cc <__aeabi_dsub+0x624>)
    3e9a:	4283      	cmp	r3, r0
    3e9c:	d00b      	beq.n	3eb6 <__aeabi_dsub+0x40e>
    3e9e:	4663      	mov	r3, ip
    3ea0:	e6d9      	b.n	3c56 <__aeabi_dsub+0x1ae>
    3ea2:	2d00      	cmp	r5, #0
    3ea4:	d000      	beq.n	3ea8 <__aeabi_dsub+0x400>
    3ea6:	e096      	b.n	3fd6 <__aeabi_dsub+0x52e>
    3ea8:	0008      	movs	r0, r1
    3eaa:	4310      	orrs	r0, r2
    3eac:	d100      	bne.n	3eb0 <__aeabi_dsub+0x408>
    3eae:	e0e2      	b.n	4076 <__aeabi_dsub+0x5ce>
    3eb0:	000c      	movs	r4, r1
    3eb2:	0017      	movs	r7, r2
    3eb4:	4698      	mov	r8, r3
    3eb6:	4e85      	ldr	r6, [pc, #532]	; (40cc <__aeabi_dsub+0x624>)
    3eb8:	e67c      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3eba:	2500      	movs	r5, #0
    3ebc:	e780      	b.n	3dc0 <__aeabi_dsub+0x318>
    3ebe:	2100      	movs	r1, #0
    3ec0:	e78e      	b.n	3de0 <__aeabi_dsub+0x338>
    3ec2:	0023      	movs	r3, r4
    3ec4:	4650      	mov	r0, sl
    3ec6:	4303      	orrs	r3, r0
    3ec8:	2e00      	cmp	r6, #0
    3eca:	d000      	beq.n	3ece <__aeabi_dsub+0x426>
    3ecc:	e0a8      	b.n	4020 <__aeabi_dsub+0x578>
    3ece:	2b00      	cmp	r3, #0
    3ed0:	d100      	bne.n	3ed4 <__aeabi_dsub+0x42c>
    3ed2:	e0de      	b.n	4092 <__aeabi_dsub+0x5ea>
    3ed4:	000b      	movs	r3, r1
    3ed6:	4313      	orrs	r3, r2
    3ed8:	d100      	bne.n	3edc <__aeabi_dsub+0x434>
    3eda:	e66b      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3edc:	4452      	add	r2, sl
    3ede:	4552      	cmp	r2, sl
    3ee0:	4180      	sbcs	r0, r0
    3ee2:	1864      	adds	r4, r4, r1
    3ee4:	4240      	negs	r0, r0
    3ee6:	1824      	adds	r4, r4, r0
    3ee8:	0017      	movs	r7, r2
    3eea:	0223      	lsls	r3, r4, #8
    3eec:	d400      	bmi.n	3ef0 <__aeabi_dsub+0x448>
    3eee:	e6fd      	b.n	3cec <__aeabi_dsub+0x244>
    3ef0:	4b77      	ldr	r3, [pc, #476]	; (40d0 <__aeabi_dsub+0x628>)
    3ef2:	4666      	mov	r6, ip
    3ef4:	401c      	ands	r4, r3
    3ef6:	e65d      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3ef8:	0025      	movs	r5, r4
    3efa:	4650      	mov	r0, sl
    3efc:	4305      	orrs	r5, r0
    3efe:	2e00      	cmp	r6, #0
    3f00:	d1cf      	bne.n	3ea2 <__aeabi_dsub+0x3fa>
    3f02:	2d00      	cmp	r5, #0
    3f04:	d14f      	bne.n	3fa6 <__aeabi_dsub+0x4fe>
    3f06:	000c      	movs	r4, r1
    3f08:	4314      	orrs	r4, r2
    3f0a:	d100      	bne.n	3f0e <__aeabi_dsub+0x466>
    3f0c:	e0a0      	b.n	4050 <__aeabi_dsub+0x5a8>
    3f0e:	000c      	movs	r4, r1
    3f10:	0017      	movs	r7, r2
    3f12:	4698      	mov	r8, r3
    3f14:	e64e      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3f16:	4666      	mov	r6, ip
    3f18:	2400      	movs	r4, #0
    3f1a:	2700      	movs	r7, #0
    3f1c:	e685      	b.n	3c2a <__aeabi_dsub+0x182>
    3f1e:	001f      	movs	r7, r3
    3f20:	0008      	movs	r0, r1
    3f22:	3f20      	subs	r7, #32
    3f24:	40f8      	lsrs	r0, r7
    3f26:	0007      	movs	r7, r0
    3f28:	2b20      	cmp	r3, #32
    3f2a:	d100      	bne.n	3f2e <__aeabi_dsub+0x486>
    3f2c:	e08e      	b.n	404c <__aeabi_dsub+0x5a4>
    3f2e:	2040      	movs	r0, #64	; 0x40
    3f30:	1ac3      	subs	r3, r0, r3
    3f32:	4099      	lsls	r1, r3
    3f34:	430a      	orrs	r2, r1
    3f36:	1e51      	subs	r1, r2, #1
    3f38:	418a      	sbcs	r2, r1
    3f3a:	2100      	movs	r1, #0
    3f3c:	4317      	orrs	r7, r2
    3f3e:	e692      	b.n	3c66 <__aeabi_dsub+0x1be>
    3f40:	2e00      	cmp	r6, #0
    3f42:	d114      	bne.n	3f6e <__aeabi_dsub+0x4c6>
    3f44:	0026      	movs	r6, r4
    3f46:	4650      	mov	r0, sl
    3f48:	4306      	orrs	r6, r0
    3f4a:	d062      	beq.n	4012 <__aeabi_dsub+0x56a>
    3f4c:	43db      	mvns	r3, r3
    3f4e:	2b00      	cmp	r3, #0
    3f50:	d15c      	bne.n	400c <__aeabi_dsub+0x564>
    3f52:	1887      	adds	r7, r0, r2
    3f54:	4297      	cmp	r7, r2
    3f56:	4192      	sbcs	r2, r2
    3f58:	1864      	adds	r4, r4, r1
    3f5a:	4252      	negs	r2, r2
    3f5c:	18a4      	adds	r4, r4, r2
    3f5e:	4666      	mov	r6, ip
    3f60:	e687      	b.n	3c72 <__aeabi_dsub+0x1ca>
    3f62:	4650      	mov	r0, sl
    3f64:	4320      	orrs	r0, r4
    3f66:	1e44      	subs	r4, r0, #1
    3f68:	41a0      	sbcs	r0, r4
    3f6a:	2400      	movs	r4, #0
    3f6c:	e760      	b.n	3e30 <__aeabi_dsub+0x388>
    3f6e:	4e57      	ldr	r6, [pc, #348]	; (40cc <__aeabi_dsub+0x624>)
    3f70:	45b4      	cmp	ip, r6
    3f72:	d04e      	beq.n	4012 <__aeabi_dsub+0x56a>
    3f74:	2680      	movs	r6, #128	; 0x80
    3f76:	0436      	lsls	r6, r6, #16
    3f78:	425b      	negs	r3, r3
    3f7a:	4334      	orrs	r4, r6
    3f7c:	2b38      	cmp	r3, #56	; 0x38
    3f7e:	dd00      	ble.n	3f82 <__aeabi_dsub+0x4da>
    3f80:	e07f      	b.n	4082 <__aeabi_dsub+0x5da>
    3f82:	2b1f      	cmp	r3, #31
    3f84:	dd00      	ble.n	3f88 <__aeabi_dsub+0x4e0>
    3f86:	e08b      	b.n	40a0 <__aeabi_dsub+0x5f8>
    3f88:	2620      	movs	r6, #32
    3f8a:	0027      	movs	r7, r4
    3f8c:	4650      	mov	r0, sl
    3f8e:	1af6      	subs	r6, r6, r3
    3f90:	40b7      	lsls	r7, r6
    3f92:	40d8      	lsrs	r0, r3
    3f94:	4307      	orrs	r7, r0
    3f96:	4650      	mov	r0, sl
    3f98:	40b0      	lsls	r0, r6
    3f9a:	1e46      	subs	r6, r0, #1
    3f9c:	41b0      	sbcs	r0, r6
    3f9e:	4307      	orrs	r7, r0
    3fa0:	40dc      	lsrs	r4, r3
    3fa2:	18bf      	adds	r7, r7, r2
    3fa4:	e7d6      	b.n	3f54 <__aeabi_dsub+0x4ac>
    3fa6:	000d      	movs	r5, r1
    3fa8:	4315      	orrs	r5, r2
    3faa:	d100      	bne.n	3fae <__aeabi_dsub+0x506>
    3fac:	e602      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3fae:	4650      	mov	r0, sl
    3fb0:	1a80      	subs	r0, r0, r2
    3fb2:	4582      	cmp	sl, r0
    3fb4:	41bf      	sbcs	r7, r7
    3fb6:	1a65      	subs	r5, r4, r1
    3fb8:	427f      	negs	r7, r7
    3fba:	1bed      	subs	r5, r5, r7
    3fbc:	4684      	mov	ip, r0
    3fbe:	0228      	lsls	r0, r5, #8
    3fc0:	d400      	bmi.n	3fc4 <__aeabi_dsub+0x51c>
    3fc2:	e68d      	b.n	3ce0 <__aeabi_dsub+0x238>
    3fc4:	4650      	mov	r0, sl
    3fc6:	1a17      	subs	r7, r2, r0
    3fc8:	42ba      	cmp	r2, r7
    3fca:	4192      	sbcs	r2, r2
    3fcc:	1b0c      	subs	r4, r1, r4
    3fce:	4252      	negs	r2, r2
    3fd0:	1aa4      	subs	r4, r4, r2
    3fd2:	4698      	mov	r8, r3
    3fd4:	e5ee      	b.n	3bb4 <__aeabi_dsub+0x10c>
    3fd6:	000d      	movs	r5, r1
    3fd8:	4315      	orrs	r5, r2
    3fda:	d100      	bne.n	3fde <__aeabi_dsub+0x536>
    3fdc:	e76b      	b.n	3eb6 <__aeabi_dsub+0x40e>
    3fde:	4650      	mov	r0, sl
    3fe0:	0767      	lsls	r7, r4, #29
    3fe2:	08c0      	lsrs	r0, r0, #3
    3fe4:	4307      	orrs	r7, r0
    3fe6:	2080      	movs	r0, #128	; 0x80
    3fe8:	08e4      	lsrs	r4, r4, #3
    3fea:	0300      	lsls	r0, r0, #12
    3fec:	4204      	tst	r4, r0
    3fee:	d007      	beq.n	4000 <__aeabi_dsub+0x558>
    3ff0:	08cd      	lsrs	r5, r1, #3
    3ff2:	4205      	tst	r5, r0
    3ff4:	d104      	bne.n	4000 <__aeabi_dsub+0x558>
    3ff6:	002c      	movs	r4, r5
    3ff8:	4698      	mov	r8, r3
    3ffa:	08d7      	lsrs	r7, r2, #3
    3ffc:	0749      	lsls	r1, r1, #29
    3ffe:	430f      	orrs	r7, r1
    4000:	0f7b      	lsrs	r3, r7, #29
    4002:	00e4      	lsls	r4, r4, #3
    4004:	431c      	orrs	r4, r3
    4006:	00ff      	lsls	r7, r7, #3
    4008:	4e30      	ldr	r6, [pc, #192]	; (40cc <__aeabi_dsub+0x624>)
    400a:	e5d3      	b.n	3bb4 <__aeabi_dsub+0x10c>
    400c:	4e2f      	ldr	r6, [pc, #188]	; (40cc <__aeabi_dsub+0x624>)
    400e:	45b4      	cmp	ip, r6
    4010:	d1b4      	bne.n	3f7c <__aeabi_dsub+0x4d4>
    4012:	000c      	movs	r4, r1
    4014:	0017      	movs	r7, r2
    4016:	4666      	mov	r6, ip
    4018:	e5cc      	b.n	3bb4 <__aeabi_dsub+0x10c>
    401a:	2700      	movs	r7, #0
    401c:	2400      	movs	r4, #0
    401e:	e5e8      	b.n	3bf2 <__aeabi_dsub+0x14a>
    4020:	2b00      	cmp	r3, #0
    4022:	d039      	beq.n	4098 <__aeabi_dsub+0x5f0>
    4024:	000b      	movs	r3, r1
    4026:	4313      	orrs	r3, r2
    4028:	d100      	bne.n	402c <__aeabi_dsub+0x584>
    402a:	e744      	b.n	3eb6 <__aeabi_dsub+0x40e>
    402c:	08c0      	lsrs	r0, r0, #3
    402e:	0767      	lsls	r7, r4, #29
    4030:	4307      	orrs	r7, r0
    4032:	2080      	movs	r0, #128	; 0x80
    4034:	08e4      	lsrs	r4, r4, #3
    4036:	0300      	lsls	r0, r0, #12
    4038:	4204      	tst	r4, r0
    403a:	d0e1      	beq.n	4000 <__aeabi_dsub+0x558>
    403c:	08cb      	lsrs	r3, r1, #3
    403e:	4203      	tst	r3, r0
    4040:	d1de      	bne.n	4000 <__aeabi_dsub+0x558>
    4042:	08d7      	lsrs	r7, r2, #3
    4044:	0749      	lsls	r1, r1, #29
    4046:	430f      	orrs	r7, r1
    4048:	001c      	movs	r4, r3
    404a:	e7d9      	b.n	4000 <__aeabi_dsub+0x558>
    404c:	2100      	movs	r1, #0
    404e:	e771      	b.n	3f34 <__aeabi_dsub+0x48c>
    4050:	2500      	movs	r5, #0
    4052:	2700      	movs	r7, #0
    4054:	e5e9      	b.n	3c2a <__aeabi_dsub+0x182>
    4056:	002e      	movs	r6, r5
    4058:	0027      	movs	r7, r4
    405a:	3e20      	subs	r6, #32
    405c:	40f7      	lsrs	r7, r6
    405e:	2d20      	cmp	r5, #32
    4060:	d02f      	beq.n	40c2 <__aeabi_dsub+0x61a>
    4062:	2640      	movs	r6, #64	; 0x40
    4064:	1b75      	subs	r5, r6, r5
    4066:	40ac      	lsls	r4, r5
    4068:	4650      	mov	r0, sl
    406a:	4320      	orrs	r0, r4
    406c:	1e44      	subs	r4, r0, #1
    406e:	41a0      	sbcs	r0, r4
    4070:	2400      	movs	r4, #0
    4072:	4338      	orrs	r0, r7
    4074:	e6dc      	b.n	3e30 <__aeabi_dsub+0x388>
    4076:	2480      	movs	r4, #128	; 0x80
    4078:	2500      	movs	r5, #0
    407a:	0324      	lsls	r4, r4, #12
    407c:	4e13      	ldr	r6, [pc, #76]	; (40cc <__aeabi_dsub+0x624>)
    407e:	2700      	movs	r7, #0
    4080:	e5d3      	b.n	3c2a <__aeabi_dsub+0x182>
    4082:	4650      	mov	r0, sl
    4084:	4320      	orrs	r0, r4
    4086:	0007      	movs	r7, r0
    4088:	1e78      	subs	r0, r7, #1
    408a:	4187      	sbcs	r7, r0
    408c:	2400      	movs	r4, #0
    408e:	18bf      	adds	r7, r7, r2
    4090:	e760      	b.n	3f54 <__aeabi_dsub+0x4ac>
    4092:	000c      	movs	r4, r1
    4094:	0017      	movs	r7, r2
    4096:	e58d      	b.n	3bb4 <__aeabi_dsub+0x10c>
    4098:	000c      	movs	r4, r1
    409a:	0017      	movs	r7, r2
    409c:	4e0b      	ldr	r6, [pc, #44]	; (40cc <__aeabi_dsub+0x624>)
    409e:	e589      	b.n	3bb4 <__aeabi_dsub+0x10c>
    40a0:	001e      	movs	r6, r3
    40a2:	0027      	movs	r7, r4
    40a4:	3e20      	subs	r6, #32
    40a6:	40f7      	lsrs	r7, r6
    40a8:	2b20      	cmp	r3, #32
    40aa:	d00c      	beq.n	40c6 <__aeabi_dsub+0x61e>
    40ac:	2640      	movs	r6, #64	; 0x40
    40ae:	1af3      	subs	r3, r6, r3
    40b0:	409c      	lsls	r4, r3
    40b2:	4650      	mov	r0, sl
    40b4:	4320      	orrs	r0, r4
    40b6:	1e44      	subs	r4, r0, #1
    40b8:	41a0      	sbcs	r0, r4
    40ba:	4307      	orrs	r7, r0
    40bc:	2400      	movs	r4, #0
    40be:	18bf      	adds	r7, r7, r2
    40c0:	e748      	b.n	3f54 <__aeabi_dsub+0x4ac>
    40c2:	2400      	movs	r4, #0
    40c4:	e7d0      	b.n	4068 <__aeabi_dsub+0x5c0>
    40c6:	2400      	movs	r4, #0
    40c8:	e7f3      	b.n	40b2 <__aeabi_dsub+0x60a>
    40ca:	46c0      	nop			; (mov r8, r8)
    40cc:	000007ff 	.word	0x000007ff
    40d0:	ff7fffff 	.word	0xff7fffff

000040d4 <__aeabi_d2iz>:
    40d4:	b530      	push	{r4, r5, lr}
    40d6:	4d13      	ldr	r5, [pc, #76]	; (4124 <__aeabi_d2iz+0x50>)
    40d8:	030a      	lsls	r2, r1, #12
    40da:	004b      	lsls	r3, r1, #1
    40dc:	0b12      	lsrs	r2, r2, #12
    40de:	0d5b      	lsrs	r3, r3, #21
    40e0:	0fc9      	lsrs	r1, r1, #31
    40e2:	2400      	movs	r4, #0
    40e4:	42ab      	cmp	r3, r5
    40e6:	dd10      	ble.n	410a <__aeabi_d2iz+0x36>
    40e8:	4c0f      	ldr	r4, [pc, #60]	; (4128 <__aeabi_d2iz+0x54>)
    40ea:	42a3      	cmp	r3, r4
    40ec:	dc0f      	bgt.n	410e <__aeabi_d2iz+0x3a>
    40ee:	2480      	movs	r4, #128	; 0x80
    40f0:	4d0e      	ldr	r5, [pc, #56]	; (412c <__aeabi_d2iz+0x58>)
    40f2:	0364      	lsls	r4, r4, #13
    40f4:	4322      	orrs	r2, r4
    40f6:	1aed      	subs	r5, r5, r3
    40f8:	2d1f      	cmp	r5, #31
    40fa:	dd0b      	ble.n	4114 <__aeabi_d2iz+0x40>
    40fc:	480c      	ldr	r0, [pc, #48]	; (4130 <__aeabi_d2iz+0x5c>)
    40fe:	1ac3      	subs	r3, r0, r3
    4100:	40da      	lsrs	r2, r3
    4102:	4254      	negs	r4, r2
    4104:	2900      	cmp	r1, #0
    4106:	d100      	bne.n	410a <__aeabi_d2iz+0x36>
    4108:	0014      	movs	r4, r2
    410a:	0020      	movs	r0, r4
    410c:	bd30      	pop	{r4, r5, pc}
    410e:	4b09      	ldr	r3, [pc, #36]	; (4134 <__aeabi_d2iz+0x60>)
    4110:	18cc      	adds	r4, r1, r3
    4112:	e7fa      	b.n	410a <__aeabi_d2iz+0x36>
    4114:	4c08      	ldr	r4, [pc, #32]	; (4138 <__aeabi_d2iz+0x64>)
    4116:	40e8      	lsrs	r0, r5
    4118:	46a4      	mov	ip, r4
    411a:	4463      	add	r3, ip
    411c:	409a      	lsls	r2, r3
    411e:	4302      	orrs	r2, r0
    4120:	e7ef      	b.n	4102 <__aeabi_d2iz+0x2e>
    4122:	46c0      	nop			; (mov r8, r8)
    4124:	000003fe 	.word	0x000003fe
    4128:	0000041d 	.word	0x0000041d
    412c:	00000433 	.word	0x00000433
    4130:	00000413 	.word	0x00000413
    4134:	7fffffff 	.word	0x7fffffff
    4138:	fffffbed 	.word	0xfffffbed

0000413c <__aeabi_i2d>:
    413c:	b570      	push	{r4, r5, r6, lr}
    413e:	2800      	cmp	r0, #0
    4140:	d030      	beq.n	41a4 <__aeabi_i2d+0x68>
    4142:	17c3      	asrs	r3, r0, #31
    4144:	18c4      	adds	r4, r0, r3
    4146:	405c      	eors	r4, r3
    4148:	0fc5      	lsrs	r5, r0, #31
    414a:	0020      	movs	r0, r4
    414c:	f000 f98a 	bl	4464 <__clzsi2>
    4150:	4b17      	ldr	r3, [pc, #92]	; (41b0 <__aeabi_i2d+0x74>)
    4152:	4a18      	ldr	r2, [pc, #96]	; (41b4 <__aeabi_i2d+0x78>)
    4154:	1a1b      	subs	r3, r3, r0
    4156:	1ad2      	subs	r2, r2, r3
    4158:	2a1f      	cmp	r2, #31
    415a:	dd18      	ble.n	418e <__aeabi_i2d+0x52>
    415c:	4a16      	ldr	r2, [pc, #88]	; (41b8 <__aeabi_i2d+0x7c>)
    415e:	1ad2      	subs	r2, r2, r3
    4160:	4094      	lsls	r4, r2
    4162:	2200      	movs	r2, #0
    4164:	0324      	lsls	r4, r4, #12
    4166:	055b      	lsls	r3, r3, #21
    4168:	0b24      	lsrs	r4, r4, #12
    416a:	0d5b      	lsrs	r3, r3, #21
    416c:	2100      	movs	r1, #0
    416e:	0010      	movs	r0, r2
    4170:	0324      	lsls	r4, r4, #12
    4172:	0d0a      	lsrs	r2, r1, #20
    4174:	0b24      	lsrs	r4, r4, #12
    4176:	0512      	lsls	r2, r2, #20
    4178:	4322      	orrs	r2, r4
    417a:	4c10      	ldr	r4, [pc, #64]	; (41bc <__aeabi_i2d+0x80>)
    417c:	051b      	lsls	r3, r3, #20
    417e:	4022      	ands	r2, r4
    4180:	4313      	orrs	r3, r2
    4182:	005b      	lsls	r3, r3, #1
    4184:	07ed      	lsls	r5, r5, #31
    4186:	085b      	lsrs	r3, r3, #1
    4188:	432b      	orrs	r3, r5
    418a:	0019      	movs	r1, r3
    418c:	bd70      	pop	{r4, r5, r6, pc}
    418e:	0021      	movs	r1, r4
    4190:	4091      	lsls	r1, r2
    4192:	000a      	movs	r2, r1
    4194:	210b      	movs	r1, #11
    4196:	1a08      	subs	r0, r1, r0
    4198:	40c4      	lsrs	r4, r0
    419a:	055b      	lsls	r3, r3, #21
    419c:	0324      	lsls	r4, r4, #12
    419e:	0b24      	lsrs	r4, r4, #12
    41a0:	0d5b      	lsrs	r3, r3, #21
    41a2:	e7e3      	b.n	416c <__aeabi_i2d+0x30>
    41a4:	2500      	movs	r5, #0
    41a6:	2300      	movs	r3, #0
    41a8:	2400      	movs	r4, #0
    41aa:	2200      	movs	r2, #0
    41ac:	e7de      	b.n	416c <__aeabi_i2d+0x30>
    41ae:	46c0      	nop			; (mov r8, r8)
    41b0:	0000041e 	.word	0x0000041e
    41b4:	00000433 	.word	0x00000433
    41b8:	00000413 	.word	0x00000413
    41bc:	800fffff 	.word	0x800fffff

000041c0 <__aeabi_ui2d>:
    41c0:	b510      	push	{r4, lr}
    41c2:	1e04      	subs	r4, r0, #0
    41c4:	d028      	beq.n	4218 <__aeabi_ui2d+0x58>
    41c6:	f000 f94d 	bl	4464 <__clzsi2>
    41ca:	4b15      	ldr	r3, [pc, #84]	; (4220 <__aeabi_ui2d+0x60>)
    41cc:	4a15      	ldr	r2, [pc, #84]	; (4224 <__aeabi_ui2d+0x64>)
    41ce:	1a1b      	subs	r3, r3, r0
    41d0:	1ad2      	subs	r2, r2, r3
    41d2:	2a1f      	cmp	r2, #31
    41d4:	dd15      	ble.n	4202 <__aeabi_ui2d+0x42>
    41d6:	4a14      	ldr	r2, [pc, #80]	; (4228 <__aeabi_ui2d+0x68>)
    41d8:	1ad2      	subs	r2, r2, r3
    41da:	4094      	lsls	r4, r2
    41dc:	2200      	movs	r2, #0
    41de:	0324      	lsls	r4, r4, #12
    41e0:	055b      	lsls	r3, r3, #21
    41e2:	0b24      	lsrs	r4, r4, #12
    41e4:	0d5b      	lsrs	r3, r3, #21
    41e6:	2100      	movs	r1, #0
    41e8:	0010      	movs	r0, r2
    41ea:	0324      	lsls	r4, r4, #12
    41ec:	0d0a      	lsrs	r2, r1, #20
    41ee:	0b24      	lsrs	r4, r4, #12
    41f0:	0512      	lsls	r2, r2, #20
    41f2:	4322      	orrs	r2, r4
    41f4:	4c0d      	ldr	r4, [pc, #52]	; (422c <__aeabi_ui2d+0x6c>)
    41f6:	051b      	lsls	r3, r3, #20
    41f8:	4022      	ands	r2, r4
    41fa:	4313      	orrs	r3, r2
    41fc:	005b      	lsls	r3, r3, #1
    41fe:	0859      	lsrs	r1, r3, #1
    4200:	bd10      	pop	{r4, pc}
    4202:	0021      	movs	r1, r4
    4204:	4091      	lsls	r1, r2
    4206:	000a      	movs	r2, r1
    4208:	210b      	movs	r1, #11
    420a:	1a08      	subs	r0, r1, r0
    420c:	40c4      	lsrs	r4, r0
    420e:	055b      	lsls	r3, r3, #21
    4210:	0324      	lsls	r4, r4, #12
    4212:	0b24      	lsrs	r4, r4, #12
    4214:	0d5b      	lsrs	r3, r3, #21
    4216:	e7e6      	b.n	41e6 <__aeabi_ui2d+0x26>
    4218:	2300      	movs	r3, #0
    421a:	2400      	movs	r4, #0
    421c:	2200      	movs	r2, #0
    421e:	e7e2      	b.n	41e6 <__aeabi_ui2d+0x26>
    4220:	0000041e 	.word	0x0000041e
    4224:	00000433 	.word	0x00000433
    4228:	00000413 	.word	0x00000413
    422c:	800fffff 	.word	0x800fffff

00004230 <__aeabi_f2d>:
    4230:	0041      	lsls	r1, r0, #1
    4232:	0e09      	lsrs	r1, r1, #24
    4234:	1c4b      	adds	r3, r1, #1
    4236:	b570      	push	{r4, r5, r6, lr}
    4238:	b2db      	uxtb	r3, r3
    423a:	0246      	lsls	r6, r0, #9
    423c:	0a75      	lsrs	r5, r6, #9
    423e:	0fc4      	lsrs	r4, r0, #31
    4240:	2b01      	cmp	r3, #1
    4242:	dd14      	ble.n	426e <__aeabi_f2d+0x3e>
    4244:	23e0      	movs	r3, #224	; 0xe0
    4246:	009b      	lsls	r3, r3, #2
    4248:	076d      	lsls	r5, r5, #29
    424a:	0b36      	lsrs	r6, r6, #12
    424c:	18cb      	adds	r3, r1, r3
    424e:	2100      	movs	r1, #0
    4250:	0d0a      	lsrs	r2, r1, #20
    4252:	0028      	movs	r0, r5
    4254:	0512      	lsls	r2, r2, #20
    4256:	4d1c      	ldr	r5, [pc, #112]	; (42c8 <__aeabi_f2d+0x98>)
    4258:	4332      	orrs	r2, r6
    425a:	055b      	lsls	r3, r3, #21
    425c:	402a      	ands	r2, r5
    425e:	085b      	lsrs	r3, r3, #1
    4260:	4313      	orrs	r3, r2
    4262:	005b      	lsls	r3, r3, #1
    4264:	07e4      	lsls	r4, r4, #31
    4266:	085b      	lsrs	r3, r3, #1
    4268:	4323      	orrs	r3, r4
    426a:	0019      	movs	r1, r3
    426c:	bd70      	pop	{r4, r5, r6, pc}
    426e:	2900      	cmp	r1, #0
    4270:	d114      	bne.n	429c <__aeabi_f2d+0x6c>
    4272:	2d00      	cmp	r5, #0
    4274:	d01e      	beq.n	42b4 <__aeabi_f2d+0x84>
    4276:	0028      	movs	r0, r5
    4278:	f000 f8f4 	bl	4464 <__clzsi2>
    427c:	280a      	cmp	r0, #10
    427e:	dc1c      	bgt.n	42ba <__aeabi_f2d+0x8a>
    4280:	230b      	movs	r3, #11
    4282:	002a      	movs	r2, r5
    4284:	1a1b      	subs	r3, r3, r0
    4286:	40da      	lsrs	r2, r3
    4288:	0003      	movs	r3, r0
    428a:	3315      	adds	r3, #21
    428c:	409d      	lsls	r5, r3
    428e:	4b0f      	ldr	r3, [pc, #60]	; (42cc <__aeabi_f2d+0x9c>)
    4290:	0312      	lsls	r2, r2, #12
    4292:	1a1b      	subs	r3, r3, r0
    4294:	055b      	lsls	r3, r3, #21
    4296:	0b16      	lsrs	r6, r2, #12
    4298:	0d5b      	lsrs	r3, r3, #21
    429a:	e7d8      	b.n	424e <__aeabi_f2d+0x1e>
    429c:	2d00      	cmp	r5, #0
    429e:	d006      	beq.n	42ae <__aeabi_f2d+0x7e>
    42a0:	0b32      	lsrs	r2, r6, #12
    42a2:	2680      	movs	r6, #128	; 0x80
    42a4:	0336      	lsls	r6, r6, #12
    42a6:	076d      	lsls	r5, r5, #29
    42a8:	4316      	orrs	r6, r2
    42aa:	4b09      	ldr	r3, [pc, #36]	; (42d0 <__aeabi_f2d+0xa0>)
    42ac:	e7cf      	b.n	424e <__aeabi_f2d+0x1e>
    42ae:	4b08      	ldr	r3, [pc, #32]	; (42d0 <__aeabi_f2d+0xa0>)
    42b0:	2600      	movs	r6, #0
    42b2:	e7cc      	b.n	424e <__aeabi_f2d+0x1e>
    42b4:	2300      	movs	r3, #0
    42b6:	2600      	movs	r6, #0
    42b8:	e7c9      	b.n	424e <__aeabi_f2d+0x1e>
    42ba:	0003      	movs	r3, r0
    42bc:	002a      	movs	r2, r5
    42be:	3b0b      	subs	r3, #11
    42c0:	409a      	lsls	r2, r3
    42c2:	2500      	movs	r5, #0
    42c4:	e7e3      	b.n	428e <__aeabi_f2d+0x5e>
    42c6:	46c0      	nop			; (mov r8, r8)
    42c8:	800fffff 	.word	0x800fffff
    42cc:	00000389 	.word	0x00000389
    42d0:	000007ff 	.word	0x000007ff

000042d4 <__aeabi_d2f>:
    42d4:	b5f0      	push	{r4, r5, r6, r7, lr}
    42d6:	004c      	lsls	r4, r1, #1
    42d8:	0d64      	lsrs	r4, r4, #21
    42da:	030b      	lsls	r3, r1, #12
    42dc:	1c62      	adds	r2, r4, #1
    42de:	0f45      	lsrs	r5, r0, #29
    42e0:	0a5b      	lsrs	r3, r3, #9
    42e2:	0552      	lsls	r2, r2, #21
    42e4:	432b      	orrs	r3, r5
    42e6:	0fc9      	lsrs	r1, r1, #31
    42e8:	00c5      	lsls	r5, r0, #3
    42ea:	0d52      	lsrs	r2, r2, #21
    42ec:	2a01      	cmp	r2, #1
    42ee:	dd28      	ble.n	4342 <__aeabi_d2f+0x6e>
    42f0:	4a3a      	ldr	r2, [pc, #232]	; (43dc <__aeabi_d2f+0x108>)
    42f2:	18a6      	adds	r6, r4, r2
    42f4:	2efe      	cmp	r6, #254	; 0xfe
    42f6:	dc1b      	bgt.n	4330 <__aeabi_d2f+0x5c>
    42f8:	2e00      	cmp	r6, #0
    42fa:	dd3e      	ble.n	437a <__aeabi_d2f+0xa6>
    42fc:	0180      	lsls	r0, r0, #6
    42fe:	0002      	movs	r2, r0
    4300:	1e50      	subs	r0, r2, #1
    4302:	4182      	sbcs	r2, r0
    4304:	0f6d      	lsrs	r5, r5, #29
    4306:	432a      	orrs	r2, r5
    4308:	00db      	lsls	r3, r3, #3
    430a:	4313      	orrs	r3, r2
    430c:	075a      	lsls	r2, r3, #29
    430e:	d004      	beq.n	431a <__aeabi_d2f+0x46>
    4310:	220f      	movs	r2, #15
    4312:	401a      	ands	r2, r3
    4314:	2a04      	cmp	r2, #4
    4316:	d000      	beq.n	431a <__aeabi_d2f+0x46>
    4318:	3304      	adds	r3, #4
    431a:	2280      	movs	r2, #128	; 0x80
    431c:	04d2      	lsls	r2, r2, #19
    431e:	401a      	ands	r2, r3
    4320:	d05a      	beq.n	43d8 <__aeabi_d2f+0x104>
    4322:	3601      	adds	r6, #1
    4324:	2eff      	cmp	r6, #255	; 0xff
    4326:	d003      	beq.n	4330 <__aeabi_d2f+0x5c>
    4328:	019b      	lsls	r3, r3, #6
    432a:	0a5b      	lsrs	r3, r3, #9
    432c:	b2f4      	uxtb	r4, r6
    432e:	e001      	b.n	4334 <__aeabi_d2f+0x60>
    4330:	24ff      	movs	r4, #255	; 0xff
    4332:	2300      	movs	r3, #0
    4334:	0258      	lsls	r0, r3, #9
    4336:	05e4      	lsls	r4, r4, #23
    4338:	0a40      	lsrs	r0, r0, #9
    433a:	07c9      	lsls	r1, r1, #31
    433c:	4320      	orrs	r0, r4
    433e:	4308      	orrs	r0, r1
    4340:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4342:	2c00      	cmp	r4, #0
    4344:	d007      	beq.n	4356 <__aeabi_d2f+0x82>
    4346:	431d      	orrs	r5, r3
    4348:	d0f2      	beq.n	4330 <__aeabi_d2f+0x5c>
    434a:	2080      	movs	r0, #128	; 0x80
    434c:	00db      	lsls	r3, r3, #3
    434e:	0480      	lsls	r0, r0, #18
    4350:	4303      	orrs	r3, r0
    4352:	26ff      	movs	r6, #255	; 0xff
    4354:	e7da      	b.n	430c <__aeabi_d2f+0x38>
    4356:	432b      	orrs	r3, r5
    4358:	d003      	beq.n	4362 <__aeabi_d2f+0x8e>
    435a:	2305      	movs	r3, #5
    435c:	08db      	lsrs	r3, r3, #3
    435e:	2cff      	cmp	r4, #255	; 0xff
    4360:	d003      	beq.n	436a <__aeabi_d2f+0x96>
    4362:	025b      	lsls	r3, r3, #9
    4364:	0a5b      	lsrs	r3, r3, #9
    4366:	b2e4      	uxtb	r4, r4
    4368:	e7e4      	b.n	4334 <__aeabi_d2f+0x60>
    436a:	2b00      	cmp	r3, #0
    436c:	d032      	beq.n	43d4 <__aeabi_d2f+0x100>
    436e:	2080      	movs	r0, #128	; 0x80
    4370:	03c0      	lsls	r0, r0, #15
    4372:	4303      	orrs	r3, r0
    4374:	025b      	lsls	r3, r3, #9
    4376:	0a5b      	lsrs	r3, r3, #9
    4378:	e7dc      	b.n	4334 <__aeabi_d2f+0x60>
    437a:	0032      	movs	r2, r6
    437c:	3217      	adds	r2, #23
    437e:	db14      	blt.n	43aa <__aeabi_d2f+0xd6>
    4380:	2280      	movs	r2, #128	; 0x80
    4382:	271e      	movs	r7, #30
    4384:	0412      	lsls	r2, r2, #16
    4386:	4313      	orrs	r3, r2
    4388:	1bbf      	subs	r7, r7, r6
    438a:	2f1f      	cmp	r7, #31
    438c:	dc0f      	bgt.n	43ae <__aeabi_d2f+0xda>
    438e:	4a14      	ldr	r2, [pc, #80]	; (43e0 <__aeabi_d2f+0x10c>)
    4390:	4694      	mov	ip, r2
    4392:	4464      	add	r4, ip
    4394:	002a      	movs	r2, r5
    4396:	40a5      	lsls	r5, r4
    4398:	002e      	movs	r6, r5
    439a:	40a3      	lsls	r3, r4
    439c:	1e75      	subs	r5, r6, #1
    439e:	41ae      	sbcs	r6, r5
    43a0:	40fa      	lsrs	r2, r7
    43a2:	4333      	orrs	r3, r6
    43a4:	4313      	orrs	r3, r2
    43a6:	2600      	movs	r6, #0
    43a8:	e7b0      	b.n	430c <__aeabi_d2f+0x38>
    43aa:	2400      	movs	r4, #0
    43ac:	e7d5      	b.n	435a <__aeabi_d2f+0x86>
    43ae:	2202      	movs	r2, #2
    43b0:	4252      	negs	r2, r2
    43b2:	1b96      	subs	r6, r2, r6
    43b4:	001a      	movs	r2, r3
    43b6:	40f2      	lsrs	r2, r6
    43b8:	2f20      	cmp	r7, #32
    43ba:	d009      	beq.n	43d0 <__aeabi_d2f+0xfc>
    43bc:	4809      	ldr	r0, [pc, #36]	; (43e4 <__aeabi_d2f+0x110>)
    43be:	4684      	mov	ip, r0
    43c0:	4464      	add	r4, ip
    43c2:	40a3      	lsls	r3, r4
    43c4:	432b      	orrs	r3, r5
    43c6:	1e5d      	subs	r5, r3, #1
    43c8:	41ab      	sbcs	r3, r5
    43ca:	2600      	movs	r6, #0
    43cc:	4313      	orrs	r3, r2
    43ce:	e79d      	b.n	430c <__aeabi_d2f+0x38>
    43d0:	2300      	movs	r3, #0
    43d2:	e7f7      	b.n	43c4 <__aeabi_d2f+0xf0>
    43d4:	2300      	movs	r3, #0
    43d6:	e7ad      	b.n	4334 <__aeabi_d2f+0x60>
    43d8:	0034      	movs	r4, r6
    43da:	e7bf      	b.n	435c <__aeabi_d2f+0x88>
    43dc:	fffffc80 	.word	0xfffffc80
    43e0:	fffffc82 	.word	0xfffffc82
    43e4:	fffffca2 	.word	0xfffffca2

000043e8 <__aeabi_cdrcmple>:
    43e8:	4684      	mov	ip, r0
    43ea:	1c10      	adds	r0, r2, #0
    43ec:	4662      	mov	r2, ip
    43ee:	468c      	mov	ip, r1
    43f0:	1c19      	adds	r1, r3, #0
    43f2:	4663      	mov	r3, ip
    43f4:	e000      	b.n	43f8 <__aeabi_cdcmpeq>
    43f6:	46c0      	nop			; (mov r8, r8)

000043f8 <__aeabi_cdcmpeq>:
    43f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    43fa:	f000 f8fb 	bl	45f4 <__ledf2>
    43fe:	2800      	cmp	r0, #0
    4400:	d401      	bmi.n	4406 <__aeabi_cdcmpeq+0xe>
    4402:	2100      	movs	r1, #0
    4404:	42c8      	cmn	r0, r1
    4406:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00004408 <__aeabi_dcmpeq>:
    4408:	b510      	push	{r4, lr}
    440a:	f000 f855 	bl	44b8 <__eqdf2>
    440e:	4240      	negs	r0, r0
    4410:	3001      	adds	r0, #1
    4412:	bd10      	pop	{r4, pc}

00004414 <__aeabi_dcmplt>:
    4414:	b510      	push	{r4, lr}
    4416:	f000 f8ed 	bl	45f4 <__ledf2>
    441a:	2800      	cmp	r0, #0
    441c:	db01      	blt.n	4422 <__aeabi_dcmplt+0xe>
    441e:	2000      	movs	r0, #0
    4420:	bd10      	pop	{r4, pc}
    4422:	2001      	movs	r0, #1
    4424:	bd10      	pop	{r4, pc}
    4426:	46c0      	nop			; (mov r8, r8)

00004428 <__aeabi_dcmple>:
    4428:	b510      	push	{r4, lr}
    442a:	f000 f8e3 	bl	45f4 <__ledf2>
    442e:	2800      	cmp	r0, #0
    4430:	dd01      	ble.n	4436 <__aeabi_dcmple+0xe>
    4432:	2000      	movs	r0, #0
    4434:	bd10      	pop	{r4, pc}
    4436:	2001      	movs	r0, #1
    4438:	bd10      	pop	{r4, pc}
    443a:	46c0      	nop			; (mov r8, r8)

0000443c <__aeabi_dcmpgt>:
    443c:	b510      	push	{r4, lr}
    443e:	f000 f875 	bl	452c <__gedf2>
    4442:	2800      	cmp	r0, #0
    4444:	dc01      	bgt.n	444a <__aeabi_dcmpgt+0xe>
    4446:	2000      	movs	r0, #0
    4448:	bd10      	pop	{r4, pc}
    444a:	2001      	movs	r0, #1
    444c:	bd10      	pop	{r4, pc}
    444e:	46c0      	nop			; (mov r8, r8)

00004450 <__aeabi_dcmpge>:
    4450:	b510      	push	{r4, lr}
    4452:	f000 f86b 	bl	452c <__gedf2>
    4456:	2800      	cmp	r0, #0
    4458:	da01      	bge.n	445e <__aeabi_dcmpge+0xe>
    445a:	2000      	movs	r0, #0
    445c:	bd10      	pop	{r4, pc}
    445e:	2001      	movs	r0, #1
    4460:	bd10      	pop	{r4, pc}
    4462:	46c0      	nop			; (mov r8, r8)

00004464 <__clzsi2>:
    4464:	211c      	movs	r1, #28
    4466:	2301      	movs	r3, #1
    4468:	041b      	lsls	r3, r3, #16
    446a:	4298      	cmp	r0, r3
    446c:	d301      	bcc.n	4472 <__clzsi2+0xe>
    446e:	0c00      	lsrs	r0, r0, #16
    4470:	3910      	subs	r1, #16
    4472:	0a1b      	lsrs	r3, r3, #8
    4474:	4298      	cmp	r0, r3
    4476:	d301      	bcc.n	447c <__clzsi2+0x18>
    4478:	0a00      	lsrs	r0, r0, #8
    447a:	3908      	subs	r1, #8
    447c:	091b      	lsrs	r3, r3, #4
    447e:	4298      	cmp	r0, r3
    4480:	d301      	bcc.n	4486 <__clzsi2+0x22>
    4482:	0900      	lsrs	r0, r0, #4
    4484:	3904      	subs	r1, #4
    4486:	a202      	add	r2, pc, #8	; (adr r2, 4490 <__clzsi2+0x2c>)
    4488:	5c10      	ldrb	r0, [r2, r0]
    448a:	1840      	adds	r0, r0, r1
    448c:	4770      	bx	lr
    448e:	46c0      	nop			; (mov r8, r8)
    4490:	02020304 	.word	0x02020304
    4494:	01010101 	.word	0x01010101
	...

000044a0 <__clzdi2>:
    44a0:	b510      	push	{r4, lr}
    44a2:	2900      	cmp	r1, #0
    44a4:	d103      	bne.n	44ae <__clzdi2+0xe>
    44a6:	f7ff ffdd 	bl	4464 <__clzsi2>
    44aa:	3020      	adds	r0, #32
    44ac:	e002      	b.n	44b4 <__clzdi2+0x14>
    44ae:	1c08      	adds	r0, r1, #0
    44b0:	f7ff ffd8 	bl	4464 <__clzsi2>
    44b4:	bd10      	pop	{r4, pc}
    44b6:	46c0      	nop			; (mov r8, r8)

000044b8 <__eqdf2>:
    44b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    44ba:	464f      	mov	r7, r9
    44bc:	4646      	mov	r6, r8
    44be:	46d6      	mov	lr, sl
    44c0:	005c      	lsls	r4, r3, #1
    44c2:	b5c0      	push	{r6, r7, lr}
    44c4:	031f      	lsls	r7, r3, #12
    44c6:	0fdb      	lsrs	r3, r3, #31
    44c8:	469a      	mov	sl, r3
    44ca:	4b17      	ldr	r3, [pc, #92]	; (4528 <__eqdf2+0x70>)
    44cc:	030e      	lsls	r6, r1, #12
    44ce:	004d      	lsls	r5, r1, #1
    44d0:	4684      	mov	ip, r0
    44d2:	4680      	mov	r8, r0
    44d4:	0b36      	lsrs	r6, r6, #12
    44d6:	0d6d      	lsrs	r5, r5, #21
    44d8:	0fc9      	lsrs	r1, r1, #31
    44da:	4691      	mov	r9, r2
    44dc:	0b3f      	lsrs	r7, r7, #12
    44de:	0d64      	lsrs	r4, r4, #21
    44e0:	2001      	movs	r0, #1
    44e2:	429d      	cmp	r5, r3
    44e4:	d008      	beq.n	44f8 <__eqdf2+0x40>
    44e6:	429c      	cmp	r4, r3
    44e8:	d001      	beq.n	44ee <__eqdf2+0x36>
    44ea:	42a5      	cmp	r5, r4
    44ec:	d00b      	beq.n	4506 <__eqdf2+0x4e>
    44ee:	bc1c      	pop	{r2, r3, r4}
    44f0:	4690      	mov	r8, r2
    44f2:	4699      	mov	r9, r3
    44f4:	46a2      	mov	sl, r4
    44f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    44f8:	4663      	mov	r3, ip
    44fa:	4333      	orrs	r3, r6
    44fc:	d1f7      	bne.n	44ee <__eqdf2+0x36>
    44fe:	42ac      	cmp	r4, r5
    4500:	d1f5      	bne.n	44ee <__eqdf2+0x36>
    4502:	433a      	orrs	r2, r7
    4504:	d1f3      	bne.n	44ee <__eqdf2+0x36>
    4506:	2001      	movs	r0, #1
    4508:	42be      	cmp	r6, r7
    450a:	d1f0      	bne.n	44ee <__eqdf2+0x36>
    450c:	45c8      	cmp	r8, r9
    450e:	d1ee      	bne.n	44ee <__eqdf2+0x36>
    4510:	4551      	cmp	r1, sl
    4512:	d007      	beq.n	4524 <__eqdf2+0x6c>
    4514:	2d00      	cmp	r5, #0
    4516:	d1ea      	bne.n	44ee <__eqdf2+0x36>
    4518:	4663      	mov	r3, ip
    451a:	431e      	orrs	r6, r3
    451c:	0030      	movs	r0, r6
    451e:	1e46      	subs	r6, r0, #1
    4520:	41b0      	sbcs	r0, r6
    4522:	e7e4      	b.n	44ee <__eqdf2+0x36>
    4524:	2000      	movs	r0, #0
    4526:	e7e2      	b.n	44ee <__eqdf2+0x36>
    4528:	000007ff 	.word	0x000007ff

0000452c <__gedf2>:
    452c:	b5f0      	push	{r4, r5, r6, r7, lr}
    452e:	4645      	mov	r5, r8
    4530:	46de      	mov	lr, fp
    4532:	4657      	mov	r7, sl
    4534:	464e      	mov	r6, r9
    4536:	b5e0      	push	{r5, r6, r7, lr}
    4538:	031f      	lsls	r7, r3, #12
    453a:	0b3d      	lsrs	r5, r7, #12
    453c:	4f2c      	ldr	r7, [pc, #176]	; (45f0 <__gedf2+0xc4>)
    453e:	030e      	lsls	r6, r1, #12
    4540:	004c      	lsls	r4, r1, #1
    4542:	46ab      	mov	fp, r5
    4544:	005d      	lsls	r5, r3, #1
    4546:	4684      	mov	ip, r0
    4548:	0b36      	lsrs	r6, r6, #12
    454a:	0d64      	lsrs	r4, r4, #21
    454c:	0fc9      	lsrs	r1, r1, #31
    454e:	4690      	mov	r8, r2
    4550:	0d6d      	lsrs	r5, r5, #21
    4552:	0fdb      	lsrs	r3, r3, #31
    4554:	42bc      	cmp	r4, r7
    4556:	d02a      	beq.n	45ae <__gedf2+0x82>
    4558:	4f25      	ldr	r7, [pc, #148]	; (45f0 <__gedf2+0xc4>)
    455a:	42bd      	cmp	r5, r7
    455c:	d02d      	beq.n	45ba <__gedf2+0x8e>
    455e:	2c00      	cmp	r4, #0
    4560:	d10f      	bne.n	4582 <__gedf2+0x56>
    4562:	4330      	orrs	r0, r6
    4564:	0007      	movs	r7, r0
    4566:	4681      	mov	r9, r0
    4568:	4278      	negs	r0, r7
    456a:	4178      	adcs	r0, r7
    456c:	b2c0      	uxtb	r0, r0
    456e:	2d00      	cmp	r5, #0
    4570:	d117      	bne.n	45a2 <__gedf2+0x76>
    4572:	465f      	mov	r7, fp
    4574:	433a      	orrs	r2, r7
    4576:	d114      	bne.n	45a2 <__gedf2+0x76>
    4578:	464b      	mov	r3, r9
    457a:	2000      	movs	r0, #0
    457c:	2b00      	cmp	r3, #0
    457e:	d00a      	beq.n	4596 <__gedf2+0x6a>
    4580:	e006      	b.n	4590 <__gedf2+0x64>
    4582:	2d00      	cmp	r5, #0
    4584:	d102      	bne.n	458c <__gedf2+0x60>
    4586:	4658      	mov	r0, fp
    4588:	4302      	orrs	r2, r0
    458a:	d001      	beq.n	4590 <__gedf2+0x64>
    458c:	4299      	cmp	r1, r3
    458e:	d018      	beq.n	45c2 <__gedf2+0x96>
    4590:	4248      	negs	r0, r1
    4592:	2101      	movs	r1, #1
    4594:	4308      	orrs	r0, r1
    4596:	bc3c      	pop	{r2, r3, r4, r5}
    4598:	4690      	mov	r8, r2
    459a:	4699      	mov	r9, r3
    459c:	46a2      	mov	sl, r4
    459e:	46ab      	mov	fp, r5
    45a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    45a2:	2800      	cmp	r0, #0
    45a4:	d0f2      	beq.n	458c <__gedf2+0x60>
    45a6:	2001      	movs	r0, #1
    45a8:	3b01      	subs	r3, #1
    45aa:	4318      	orrs	r0, r3
    45ac:	e7f3      	b.n	4596 <__gedf2+0x6a>
    45ae:	0037      	movs	r7, r6
    45b0:	4307      	orrs	r7, r0
    45b2:	d0d1      	beq.n	4558 <__gedf2+0x2c>
    45b4:	2002      	movs	r0, #2
    45b6:	4240      	negs	r0, r0
    45b8:	e7ed      	b.n	4596 <__gedf2+0x6a>
    45ba:	465f      	mov	r7, fp
    45bc:	4317      	orrs	r7, r2
    45be:	d0ce      	beq.n	455e <__gedf2+0x32>
    45c0:	e7f8      	b.n	45b4 <__gedf2+0x88>
    45c2:	42ac      	cmp	r4, r5
    45c4:	dce4      	bgt.n	4590 <__gedf2+0x64>
    45c6:	da03      	bge.n	45d0 <__gedf2+0xa4>
    45c8:	1e48      	subs	r0, r1, #1
    45ca:	2101      	movs	r1, #1
    45cc:	4308      	orrs	r0, r1
    45ce:	e7e2      	b.n	4596 <__gedf2+0x6a>
    45d0:	455e      	cmp	r6, fp
    45d2:	d8dd      	bhi.n	4590 <__gedf2+0x64>
    45d4:	d006      	beq.n	45e4 <__gedf2+0xb8>
    45d6:	2000      	movs	r0, #0
    45d8:	455e      	cmp	r6, fp
    45da:	d2dc      	bcs.n	4596 <__gedf2+0x6a>
    45dc:	2301      	movs	r3, #1
    45de:	1e48      	subs	r0, r1, #1
    45e0:	4318      	orrs	r0, r3
    45e2:	e7d8      	b.n	4596 <__gedf2+0x6a>
    45e4:	45c4      	cmp	ip, r8
    45e6:	d8d3      	bhi.n	4590 <__gedf2+0x64>
    45e8:	2000      	movs	r0, #0
    45ea:	45c4      	cmp	ip, r8
    45ec:	d3f6      	bcc.n	45dc <__gedf2+0xb0>
    45ee:	e7d2      	b.n	4596 <__gedf2+0x6a>
    45f0:	000007ff 	.word	0x000007ff

000045f4 <__ledf2>:
    45f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    45f6:	464e      	mov	r6, r9
    45f8:	4645      	mov	r5, r8
    45fa:	46de      	mov	lr, fp
    45fc:	4657      	mov	r7, sl
    45fe:	005c      	lsls	r4, r3, #1
    4600:	b5e0      	push	{r5, r6, r7, lr}
    4602:	031f      	lsls	r7, r3, #12
    4604:	0fdb      	lsrs	r3, r3, #31
    4606:	4699      	mov	r9, r3
    4608:	4b2a      	ldr	r3, [pc, #168]	; (46b4 <__ledf2+0xc0>)
    460a:	030e      	lsls	r6, r1, #12
    460c:	004d      	lsls	r5, r1, #1
    460e:	0fc9      	lsrs	r1, r1, #31
    4610:	4684      	mov	ip, r0
    4612:	0b36      	lsrs	r6, r6, #12
    4614:	0d6d      	lsrs	r5, r5, #21
    4616:	468b      	mov	fp, r1
    4618:	4690      	mov	r8, r2
    461a:	0b3f      	lsrs	r7, r7, #12
    461c:	0d64      	lsrs	r4, r4, #21
    461e:	429d      	cmp	r5, r3
    4620:	d020      	beq.n	4664 <__ledf2+0x70>
    4622:	4b24      	ldr	r3, [pc, #144]	; (46b4 <__ledf2+0xc0>)
    4624:	429c      	cmp	r4, r3
    4626:	d022      	beq.n	466e <__ledf2+0x7a>
    4628:	2d00      	cmp	r5, #0
    462a:	d112      	bne.n	4652 <__ledf2+0x5e>
    462c:	4330      	orrs	r0, r6
    462e:	4243      	negs	r3, r0
    4630:	4143      	adcs	r3, r0
    4632:	b2db      	uxtb	r3, r3
    4634:	2c00      	cmp	r4, #0
    4636:	d01f      	beq.n	4678 <__ledf2+0x84>
    4638:	2b00      	cmp	r3, #0
    463a:	d00c      	beq.n	4656 <__ledf2+0x62>
    463c:	464b      	mov	r3, r9
    463e:	2001      	movs	r0, #1
    4640:	3b01      	subs	r3, #1
    4642:	4303      	orrs	r3, r0
    4644:	0018      	movs	r0, r3
    4646:	bc3c      	pop	{r2, r3, r4, r5}
    4648:	4690      	mov	r8, r2
    464a:	4699      	mov	r9, r3
    464c:	46a2      	mov	sl, r4
    464e:	46ab      	mov	fp, r5
    4650:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4652:	2c00      	cmp	r4, #0
    4654:	d016      	beq.n	4684 <__ledf2+0x90>
    4656:	45cb      	cmp	fp, r9
    4658:	d017      	beq.n	468a <__ledf2+0x96>
    465a:	465b      	mov	r3, fp
    465c:	4259      	negs	r1, r3
    465e:	2301      	movs	r3, #1
    4660:	430b      	orrs	r3, r1
    4662:	e7ef      	b.n	4644 <__ledf2+0x50>
    4664:	0031      	movs	r1, r6
    4666:	2302      	movs	r3, #2
    4668:	4301      	orrs	r1, r0
    466a:	d1eb      	bne.n	4644 <__ledf2+0x50>
    466c:	e7d9      	b.n	4622 <__ledf2+0x2e>
    466e:	0039      	movs	r1, r7
    4670:	2302      	movs	r3, #2
    4672:	4311      	orrs	r1, r2
    4674:	d1e6      	bne.n	4644 <__ledf2+0x50>
    4676:	e7d7      	b.n	4628 <__ledf2+0x34>
    4678:	433a      	orrs	r2, r7
    467a:	d1dd      	bne.n	4638 <__ledf2+0x44>
    467c:	2300      	movs	r3, #0
    467e:	2800      	cmp	r0, #0
    4680:	d0e0      	beq.n	4644 <__ledf2+0x50>
    4682:	e7ea      	b.n	465a <__ledf2+0x66>
    4684:	433a      	orrs	r2, r7
    4686:	d1e6      	bne.n	4656 <__ledf2+0x62>
    4688:	e7e7      	b.n	465a <__ledf2+0x66>
    468a:	42a5      	cmp	r5, r4
    468c:	dce5      	bgt.n	465a <__ledf2+0x66>
    468e:	db05      	blt.n	469c <__ledf2+0xa8>
    4690:	42be      	cmp	r6, r7
    4692:	d8e2      	bhi.n	465a <__ledf2+0x66>
    4694:	d007      	beq.n	46a6 <__ledf2+0xb2>
    4696:	2300      	movs	r3, #0
    4698:	42be      	cmp	r6, r7
    469a:	d2d3      	bcs.n	4644 <__ledf2+0x50>
    469c:	4659      	mov	r1, fp
    469e:	2301      	movs	r3, #1
    46a0:	3901      	subs	r1, #1
    46a2:	430b      	orrs	r3, r1
    46a4:	e7ce      	b.n	4644 <__ledf2+0x50>
    46a6:	45c4      	cmp	ip, r8
    46a8:	d8d7      	bhi.n	465a <__ledf2+0x66>
    46aa:	2300      	movs	r3, #0
    46ac:	45c4      	cmp	ip, r8
    46ae:	d3f5      	bcc.n	469c <__ledf2+0xa8>
    46b0:	e7c8      	b.n	4644 <__ledf2+0x50>
    46b2:	46c0      	nop			; (mov r8, r8)
    46b4:	000007ff 	.word	0x000007ff

000046b8 <__libc_init_array>:
    46b8:	b570      	push	{r4, r5, r6, lr}
    46ba:	4e0d      	ldr	r6, [pc, #52]	; (46f0 <__libc_init_array+0x38>)
    46bc:	4d0d      	ldr	r5, [pc, #52]	; (46f4 <__libc_init_array+0x3c>)
    46be:	2400      	movs	r4, #0
    46c0:	1bad      	subs	r5, r5, r6
    46c2:	10ad      	asrs	r5, r5, #2
    46c4:	d005      	beq.n	46d2 <__libc_init_array+0x1a>
    46c6:	00a3      	lsls	r3, r4, #2
    46c8:	58f3      	ldr	r3, [r6, r3]
    46ca:	3401      	adds	r4, #1
    46cc:	4798      	blx	r3
    46ce:	42a5      	cmp	r5, r4
    46d0:	d1f9      	bne.n	46c6 <__libc_init_array+0xe>
    46d2:	f005 ff15 	bl	a500 <_init>
    46d6:	4e08      	ldr	r6, [pc, #32]	; (46f8 <__libc_init_array+0x40>)
    46d8:	4d08      	ldr	r5, [pc, #32]	; (46fc <__libc_init_array+0x44>)
    46da:	2400      	movs	r4, #0
    46dc:	1bad      	subs	r5, r5, r6
    46de:	10ad      	asrs	r5, r5, #2
    46e0:	d005      	beq.n	46ee <__libc_init_array+0x36>
    46e2:	00a3      	lsls	r3, r4, #2
    46e4:	58f3      	ldr	r3, [r6, r3]
    46e6:	3401      	adds	r4, #1
    46e8:	4798      	blx	r3
    46ea:	42a5      	cmp	r5, r4
    46ec:	d1f9      	bne.n	46e2 <__libc_init_array+0x2a>
    46ee:	bd70      	pop	{r4, r5, r6, pc}
    46f0:	0000a50c 	.word	0x0000a50c
    46f4:	0000a50c 	.word	0x0000a50c
    46f8:	0000a50c 	.word	0x0000a50c
    46fc:	0000a514 	.word	0x0000a514

00004700 <memcpy>:
    4700:	b5f0      	push	{r4, r5, r6, r7, lr}
    4702:	0005      	movs	r5, r0
    4704:	2a0f      	cmp	r2, #15
    4706:	d92f      	bls.n	4768 <memcpy+0x68>
    4708:	000b      	movs	r3, r1
    470a:	4303      	orrs	r3, r0
    470c:	079b      	lsls	r3, r3, #30
    470e:	d134      	bne.n	477a <memcpy+0x7a>
    4710:	0016      	movs	r6, r2
    4712:	000c      	movs	r4, r1
    4714:	0003      	movs	r3, r0
    4716:	3e10      	subs	r6, #16
    4718:	0935      	lsrs	r5, r6, #4
    471a:	3501      	adds	r5, #1
    471c:	012d      	lsls	r5, r5, #4
    471e:	1945      	adds	r5, r0, r5
    4720:	6827      	ldr	r7, [r4, #0]
    4722:	601f      	str	r7, [r3, #0]
    4724:	6867      	ldr	r7, [r4, #4]
    4726:	605f      	str	r7, [r3, #4]
    4728:	68a7      	ldr	r7, [r4, #8]
    472a:	609f      	str	r7, [r3, #8]
    472c:	68e7      	ldr	r7, [r4, #12]
    472e:	3410      	adds	r4, #16
    4730:	60df      	str	r7, [r3, #12]
    4732:	3310      	adds	r3, #16
    4734:	429d      	cmp	r5, r3
    4736:	d1f3      	bne.n	4720 <memcpy+0x20>
    4738:	230f      	movs	r3, #15
    473a:	439e      	bics	r6, r3
    473c:	3610      	adds	r6, #16
    473e:	1985      	adds	r5, r0, r6
    4740:	1989      	adds	r1, r1, r6
    4742:	4013      	ands	r3, r2
    4744:	2b03      	cmp	r3, #3
    4746:	d91a      	bls.n	477e <memcpy+0x7e>
    4748:	1f1e      	subs	r6, r3, #4
    474a:	2300      	movs	r3, #0
    474c:	08b4      	lsrs	r4, r6, #2
    474e:	3401      	adds	r4, #1
    4750:	00a4      	lsls	r4, r4, #2
    4752:	58cf      	ldr	r7, [r1, r3]
    4754:	50ef      	str	r7, [r5, r3]
    4756:	3304      	adds	r3, #4
    4758:	42a3      	cmp	r3, r4
    475a:	d1fa      	bne.n	4752 <memcpy+0x52>
    475c:	2403      	movs	r4, #3
    475e:	43a6      	bics	r6, r4
    4760:	1d33      	adds	r3, r6, #4
    4762:	4022      	ands	r2, r4
    4764:	18c9      	adds	r1, r1, r3
    4766:	18ed      	adds	r5, r5, r3
    4768:	2a00      	cmp	r2, #0
    476a:	d005      	beq.n	4778 <memcpy+0x78>
    476c:	2300      	movs	r3, #0
    476e:	5ccc      	ldrb	r4, [r1, r3]
    4770:	54ec      	strb	r4, [r5, r3]
    4772:	3301      	adds	r3, #1
    4774:	4293      	cmp	r3, r2
    4776:	d1fa      	bne.n	476e <memcpy+0x6e>
    4778:	bdf0      	pop	{r4, r5, r6, r7, pc}
    477a:	0005      	movs	r5, r0
    477c:	e7f6      	b.n	476c <memcpy+0x6c>
    477e:	001a      	movs	r2, r3
    4780:	e7f2      	b.n	4768 <memcpy+0x68>
    4782:	46c0      	nop			; (mov r8, r8)

00004784 <memset>:
    4784:	b5f0      	push	{r4, r5, r6, r7, lr}
    4786:	0783      	lsls	r3, r0, #30
    4788:	d043      	beq.n	4812 <memset+0x8e>
    478a:	1e54      	subs	r4, r2, #1
    478c:	2a00      	cmp	r2, #0
    478e:	d03f      	beq.n	4810 <memset+0x8c>
    4790:	b2ce      	uxtb	r6, r1
    4792:	0002      	movs	r2, r0
    4794:	2503      	movs	r5, #3
    4796:	e002      	b.n	479e <memset+0x1a>
    4798:	001a      	movs	r2, r3
    479a:	3c01      	subs	r4, #1
    479c:	d338      	bcc.n	4810 <memset+0x8c>
    479e:	1c53      	adds	r3, r2, #1
    47a0:	7016      	strb	r6, [r2, #0]
    47a2:	422b      	tst	r3, r5
    47a4:	d1f8      	bne.n	4798 <memset+0x14>
    47a6:	2c03      	cmp	r4, #3
    47a8:	d92a      	bls.n	4800 <memset+0x7c>
    47aa:	22ff      	movs	r2, #255	; 0xff
    47ac:	400a      	ands	r2, r1
    47ae:	0215      	lsls	r5, r2, #8
    47b0:	4315      	orrs	r5, r2
    47b2:	042a      	lsls	r2, r5, #16
    47b4:	4315      	orrs	r5, r2
    47b6:	2c0f      	cmp	r4, #15
    47b8:	d914      	bls.n	47e4 <memset+0x60>
    47ba:	0027      	movs	r7, r4
    47bc:	001a      	movs	r2, r3
    47be:	3f10      	subs	r7, #16
    47c0:	093e      	lsrs	r6, r7, #4
    47c2:	3601      	adds	r6, #1
    47c4:	0136      	lsls	r6, r6, #4
    47c6:	199e      	adds	r6, r3, r6
    47c8:	6015      	str	r5, [r2, #0]
    47ca:	6055      	str	r5, [r2, #4]
    47cc:	6095      	str	r5, [r2, #8]
    47ce:	60d5      	str	r5, [r2, #12]
    47d0:	3210      	adds	r2, #16
    47d2:	4296      	cmp	r6, r2
    47d4:	d1f8      	bne.n	47c8 <memset+0x44>
    47d6:	220f      	movs	r2, #15
    47d8:	4397      	bics	r7, r2
    47da:	3710      	adds	r7, #16
    47dc:	19db      	adds	r3, r3, r7
    47de:	4014      	ands	r4, r2
    47e0:	2c03      	cmp	r4, #3
    47e2:	d90d      	bls.n	4800 <memset+0x7c>
    47e4:	001a      	movs	r2, r3
    47e6:	1f27      	subs	r7, r4, #4
    47e8:	08be      	lsrs	r6, r7, #2
    47ea:	3601      	adds	r6, #1
    47ec:	00b6      	lsls	r6, r6, #2
    47ee:	199e      	adds	r6, r3, r6
    47f0:	c220      	stmia	r2!, {r5}
    47f2:	42b2      	cmp	r2, r6
    47f4:	d1fc      	bne.n	47f0 <memset+0x6c>
    47f6:	2203      	movs	r2, #3
    47f8:	4397      	bics	r7, r2
    47fa:	3704      	adds	r7, #4
    47fc:	19db      	adds	r3, r3, r7
    47fe:	4014      	ands	r4, r2
    4800:	2c00      	cmp	r4, #0
    4802:	d005      	beq.n	4810 <memset+0x8c>
    4804:	b2c9      	uxtb	r1, r1
    4806:	191c      	adds	r4, r3, r4
    4808:	7019      	strb	r1, [r3, #0]
    480a:	3301      	adds	r3, #1
    480c:	429c      	cmp	r4, r3
    480e:	d1fb      	bne.n	4808 <memset+0x84>
    4810:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4812:	0014      	movs	r4, r2
    4814:	0003      	movs	r3, r0
    4816:	e7c6      	b.n	47a6 <memset+0x22>

00004818 <printf>:
    4818:	b40f      	push	{r0, r1, r2, r3}
    481a:	b500      	push	{lr}
    481c:	4906      	ldr	r1, [pc, #24]	; (4838 <printf+0x20>)
    481e:	b083      	sub	sp, #12
    4820:	ab04      	add	r3, sp, #16
    4822:	6808      	ldr	r0, [r1, #0]
    4824:	cb04      	ldmia	r3!, {r2}
    4826:	6881      	ldr	r1, [r0, #8]
    4828:	9301      	str	r3, [sp, #4]
    482a:	f000 f913 	bl	4a54 <_vfprintf_r>
    482e:	b003      	add	sp, #12
    4830:	bc08      	pop	{r3}
    4832:	b004      	add	sp, #16
    4834:	4718      	bx	r3
    4836:	46c0      	nop			; (mov r8, r8)
    4838:	2000007c 	.word	0x2000007c

0000483c <setbuf>:
    483c:	424a      	negs	r2, r1
    483e:	414a      	adcs	r2, r1
    4840:	2380      	movs	r3, #128	; 0x80
    4842:	b510      	push	{r4, lr}
    4844:	0052      	lsls	r2, r2, #1
    4846:	00db      	lsls	r3, r3, #3
    4848:	f000 f802 	bl	4850 <setvbuf>
    484c:	bd10      	pop	{r4, pc}
    484e:	46c0      	nop			; (mov r8, r8)

00004850 <setvbuf>:
    4850:	b5f0      	push	{r4, r5, r6, r7, lr}
    4852:	4647      	mov	r7, r8
    4854:	46ce      	mov	lr, r9
    4856:	b580      	push	{r7, lr}
    4858:	001f      	movs	r7, r3
    485a:	4b63      	ldr	r3, [pc, #396]	; (49e8 <setvbuf+0x198>)
    485c:	b083      	sub	sp, #12
    485e:	681d      	ldr	r5, [r3, #0]
    4860:	0004      	movs	r4, r0
    4862:	4688      	mov	r8, r1
    4864:	0016      	movs	r6, r2
    4866:	2d00      	cmp	r5, #0
    4868:	d002      	beq.n	4870 <setvbuf+0x20>
    486a:	6bab      	ldr	r3, [r5, #56]	; 0x38
    486c:	2b00      	cmp	r3, #0
    486e:	d066      	beq.n	493e <setvbuf+0xee>
    4870:	2e02      	cmp	r6, #2
    4872:	d005      	beq.n	4880 <setvbuf+0x30>
    4874:	2e01      	cmp	r6, #1
    4876:	d900      	bls.n	487a <setvbuf+0x2a>
    4878:	e0a1      	b.n	49be <setvbuf+0x16e>
    487a:	2f00      	cmp	r7, #0
    487c:	da00      	bge.n	4880 <setvbuf+0x30>
    487e:	e09e      	b.n	49be <setvbuf+0x16e>
    4880:	6e63      	ldr	r3, [r4, #100]	; 0x64
    4882:	07db      	lsls	r3, r3, #31
    4884:	d533      	bpl.n	48ee <setvbuf+0x9e>
    4886:	0021      	movs	r1, r4
    4888:	0028      	movs	r0, r5
    488a:	f002 fe27 	bl	74dc <_fflush_r>
    488e:	6b21      	ldr	r1, [r4, #48]	; 0x30
    4890:	2900      	cmp	r1, #0
    4892:	d008      	beq.n	48a6 <setvbuf+0x56>
    4894:	0023      	movs	r3, r4
    4896:	3340      	adds	r3, #64	; 0x40
    4898:	4299      	cmp	r1, r3
    489a:	d002      	beq.n	48a2 <setvbuf+0x52>
    489c:	0028      	movs	r0, r5
    489e:	f002 ff21 	bl	76e4 <_free_r>
    48a2:	2300      	movs	r3, #0
    48a4:	6323      	str	r3, [r4, #48]	; 0x30
    48a6:	2300      	movs	r3, #0
    48a8:	61a3      	str	r3, [r4, #24]
    48aa:	6063      	str	r3, [r4, #4]
    48ac:	220c      	movs	r2, #12
    48ae:	5ea3      	ldrsh	r3, [r4, r2]
    48b0:	061a      	lsls	r2, r3, #24
    48b2:	d43d      	bmi.n	4930 <setvbuf+0xe0>
    48b4:	4a4d      	ldr	r2, [pc, #308]	; (49ec <setvbuf+0x19c>)
    48b6:	4013      	ands	r3, r2
    48b8:	81a3      	strh	r3, [r4, #12]
    48ba:	2e02      	cmp	r6, #2
    48bc:	d01e      	beq.n	48fc <setvbuf+0xac>
    48be:	ab01      	add	r3, sp, #4
    48c0:	466a      	mov	r2, sp
    48c2:	0021      	movs	r1, r4
    48c4:	0028      	movs	r0, r5
    48c6:	f003 f9a9 	bl	7c1c <__swhatbuf_r>
    48ca:	89a3      	ldrh	r3, [r4, #12]
    48cc:	4318      	orrs	r0, r3
    48ce:	81a0      	strh	r0, [r4, #12]
    48d0:	2f00      	cmp	r7, #0
    48d2:	d138      	bne.n	4946 <setvbuf+0xf6>
    48d4:	9f00      	ldr	r7, [sp, #0]
    48d6:	0038      	movs	r0, r7
    48d8:	f003 fa18 	bl	7d0c <malloc>
    48dc:	4680      	mov	r8, r0
    48de:	2800      	cmp	r0, #0
    48e0:	d100      	bne.n	48e4 <setvbuf+0x94>
    48e2:	e06f      	b.n	49c4 <setvbuf+0x174>
    48e4:	2280      	movs	r2, #128	; 0x80
    48e6:	89a3      	ldrh	r3, [r4, #12]
    48e8:	4313      	orrs	r3, r2
    48ea:	81a3      	strh	r3, [r4, #12]
    48ec:	e02e      	b.n	494c <setvbuf+0xfc>
    48ee:	89a3      	ldrh	r3, [r4, #12]
    48f0:	059b      	lsls	r3, r3, #22
    48f2:	d4c8      	bmi.n	4886 <setvbuf+0x36>
    48f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    48f6:	f003 f98d 	bl	7c14 <__retarget_lock_acquire_recursive>
    48fa:	e7c4      	b.n	4886 <setvbuf+0x36>
    48fc:	2500      	movs	r5, #0
    48fe:	2202      	movs	r2, #2
    4900:	4313      	orrs	r3, r2
    4902:	2200      	movs	r2, #0
    4904:	60a2      	str	r2, [r4, #8]
    4906:	0022      	movs	r2, r4
    4908:	3243      	adds	r2, #67	; 0x43
    490a:	6022      	str	r2, [r4, #0]
    490c:	6122      	str	r2, [r4, #16]
    490e:	2201      	movs	r2, #1
    4910:	6e61      	ldr	r1, [r4, #100]	; 0x64
    4912:	81a3      	strh	r3, [r4, #12]
    4914:	6162      	str	r2, [r4, #20]
    4916:	4211      	tst	r1, r2
    4918:	d104      	bne.n	4924 <setvbuf+0xd4>
    491a:	059b      	lsls	r3, r3, #22
    491c:	d402      	bmi.n	4924 <setvbuf+0xd4>
    491e:	6da0      	ldr	r0, [r4, #88]	; 0x58
    4920:	f003 f97a 	bl	7c18 <__retarget_lock_release_recursive>
    4924:	0028      	movs	r0, r5
    4926:	b003      	add	sp, #12
    4928:	bc0c      	pop	{r2, r3}
    492a:	4690      	mov	r8, r2
    492c:	4699      	mov	r9, r3
    492e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4930:	6921      	ldr	r1, [r4, #16]
    4932:	0028      	movs	r0, r5
    4934:	f002 fed6 	bl	76e4 <_free_r>
    4938:	220c      	movs	r2, #12
    493a:	5ea3      	ldrsh	r3, [r4, r2]
    493c:	e7ba      	b.n	48b4 <setvbuf+0x64>
    493e:	0028      	movs	r0, r5
    4940:	f002 fe26 	bl	7590 <__sinit>
    4944:	e794      	b.n	4870 <setvbuf+0x20>
    4946:	4643      	mov	r3, r8
    4948:	2b00      	cmp	r3, #0
    494a:	d0c4      	beq.n	48d6 <setvbuf+0x86>
    494c:	6bab      	ldr	r3, [r5, #56]	; 0x38
    494e:	2b00      	cmp	r3, #0
    4950:	d027      	beq.n	49a2 <setvbuf+0x152>
    4952:	9b00      	ldr	r3, [sp, #0]
    4954:	429f      	cmp	r7, r3
    4956:	d02a      	beq.n	49ae <setvbuf+0x15e>
    4958:	2380      	movs	r3, #128	; 0x80
    495a:	89a2      	ldrh	r2, [r4, #12]
    495c:	011b      	lsls	r3, r3, #4
    495e:	4313      	orrs	r3, r2
    4960:	b21b      	sxth	r3, r3
    4962:	81a3      	strh	r3, [r4, #12]
    4964:	2e01      	cmp	r6, #1
    4966:	d026      	beq.n	49b6 <setvbuf+0x166>
    4968:	4642      	mov	r2, r8
    496a:	6022      	str	r2, [r4, #0]
    496c:	6122      	str	r2, [r4, #16]
    496e:	2208      	movs	r2, #8
    4970:	b29b      	uxth	r3, r3
    4972:	6167      	str	r7, [r4, #20]
    4974:	401a      	ands	r2, r3
    4976:	d00b      	beq.n	4990 <setvbuf+0x140>
    4978:	07da      	lsls	r2, r3, #31
    497a:	d510      	bpl.n	499e <setvbuf+0x14e>
    497c:	2200      	movs	r2, #0
    497e:	2501      	movs	r5, #1
    4980:	60a2      	str	r2, [r4, #8]
    4982:	6e62      	ldr	r2, [r4, #100]	; 0x64
    4984:	427f      	negs	r7, r7
    4986:	61a7      	str	r7, [r4, #24]
    4988:	4015      	ands	r5, r2
    498a:	d0c6      	beq.n	491a <setvbuf+0xca>
    498c:	2500      	movs	r5, #0
    498e:	e7c9      	b.n	4924 <setvbuf+0xd4>
    4990:	60a2      	str	r2, [r4, #8]
    4992:	2501      	movs	r5, #1
    4994:	6e62      	ldr	r2, [r4, #100]	; 0x64
    4996:	4015      	ands	r5, r2
    4998:	d0bf      	beq.n	491a <setvbuf+0xca>
    499a:	2500      	movs	r5, #0
    499c:	e7c2      	b.n	4924 <setvbuf+0xd4>
    499e:	60a7      	str	r7, [r4, #8]
    49a0:	e7f7      	b.n	4992 <setvbuf+0x142>
    49a2:	0028      	movs	r0, r5
    49a4:	f002 fdf4 	bl	7590 <__sinit>
    49a8:	9b00      	ldr	r3, [sp, #0]
    49aa:	429f      	cmp	r7, r3
    49ac:	d1d4      	bne.n	4958 <setvbuf+0x108>
    49ae:	220c      	movs	r2, #12
    49b0:	5ea3      	ldrsh	r3, [r4, r2]
    49b2:	2e01      	cmp	r6, #1
    49b4:	d1d8      	bne.n	4968 <setvbuf+0x118>
    49b6:	2201      	movs	r2, #1
    49b8:	4313      	orrs	r3, r2
    49ba:	81a3      	strh	r3, [r4, #12]
    49bc:	e7d4      	b.n	4968 <setvbuf+0x118>
    49be:	2501      	movs	r5, #1
    49c0:	426d      	negs	r5, r5
    49c2:	e7af      	b.n	4924 <setvbuf+0xd4>
    49c4:	9b00      	ldr	r3, [sp, #0]
    49c6:	4699      	mov	r9, r3
    49c8:	42bb      	cmp	r3, r7
    49ca:	d005      	beq.n	49d8 <setvbuf+0x188>
    49cc:	0018      	movs	r0, r3
    49ce:	f003 f99d 	bl	7d0c <malloc>
    49d2:	4680      	mov	r8, r0
    49d4:	2800      	cmp	r0, #0
    49d6:	d104      	bne.n	49e2 <setvbuf+0x192>
    49d8:	2501      	movs	r5, #1
    49da:	220c      	movs	r2, #12
    49dc:	5ea3      	ldrsh	r3, [r4, r2]
    49de:	426d      	negs	r5, r5
    49e0:	e78d      	b.n	48fe <setvbuf+0xae>
    49e2:	464f      	mov	r7, r9
    49e4:	e77e      	b.n	48e4 <setvbuf+0x94>
    49e6:	46c0      	nop			; (mov r8, r8)
    49e8:	2000007c 	.word	0x2000007c
    49ec:	fffff35c 	.word	0xfffff35c

000049f0 <strlen>:
    49f0:	b510      	push	{r4, lr}
    49f2:	0783      	lsls	r3, r0, #30
    49f4:	d025      	beq.n	4a42 <strlen+0x52>
    49f6:	7803      	ldrb	r3, [r0, #0]
    49f8:	2b00      	cmp	r3, #0
    49fa:	d024      	beq.n	4a46 <strlen+0x56>
    49fc:	0003      	movs	r3, r0
    49fe:	2103      	movs	r1, #3
    4a00:	e002      	b.n	4a08 <strlen+0x18>
    4a02:	781a      	ldrb	r2, [r3, #0]
    4a04:	2a00      	cmp	r2, #0
    4a06:	d01a      	beq.n	4a3e <strlen+0x4e>
    4a08:	3301      	adds	r3, #1
    4a0a:	420b      	tst	r3, r1
    4a0c:	d1f9      	bne.n	4a02 <strlen+0x12>
    4a0e:	6819      	ldr	r1, [r3, #0]
    4a10:	4a0e      	ldr	r2, [pc, #56]	; (4a4c <strlen+0x5c>)
    4a12:	4c0f      	ldr	r4, [pc, #60]	; (4a50 <strlen+0x60>)
    4a14:	188a      	adds	r2, r1, r2
    4a16:	438a      	bics	r2, r1
    4a18:	4222      	tst	r2, r4
    4a1a:	d106      	bne.n	4a2a <strlen+0x3a>
    4a1c:	3304      	adds	r3, #4
    4a1e:	6819      	ldr	r1, [r3, #0]
    4a20:	4a0a      	ldr	r2, [pc, #40]	; (4a4c <strlen+0x5c>)
    4a22:	188a      	adds	r2, r1, r2
    4a24:	438a      	bics	r2, r1
    4a26:	4222      	tst	r2, r4
    4a28:	d0f8      	beq.n	4a1c <strlen+0x2c>
    4a2a:	001a      	movs	r2, r3
    4a2c:	781b      	ldrb	r3, [r3, #0]
    4a2e:	2b00      	cmp	r3, #0
    4a30:	d003      	beq.n	4a3a <strlen+0x4a>
    4a32:	3201      	adds	r2, #1
    4a34:	7811      	ldrb	r1, [r2, #0]
    4a36:	2900      	cmp	r1, #0
    4a38:	d1fb      	bne.n	4a32 <strlen+0x42>
    4a3a:	1a10      	subs	r0, r2, r0
    4a3c:	bd10      	pop	{r4, pc}
    4a3e:	1a18      	subs	r0, r3, r0
    4a40:	e7fc      	b.n	4a3c <strlen+0x4c>
    4a42:	0003      	movs	r3, r0
    4a44:	e7e3      	b.n	4a0e <strlen+0x1e>
    4a46:	2000      	movs	r0, #0
    4a48:	e7f8      	b.n	4a3c <strlen+0x4c>
    4a4a:	46c0      	nop			; (mov r8, r8)
    4a4c:	fefefeff 	.word	0xfefefeff
    4a50:	80808080 	.word	0x80808080

00004a54 <_vfprintf_r>:
    4a54:	b5f0      	push	{r4, r5, r6, r7, lr}
    4a56:	46de      	mov	lr, fp
    4a58:	464e      	mov	r6, r9
    4a5a:	4645      	mov	r5, r8
    4a5c:	4657      	mov	r7, sl
    4a5e:	b5e0      	push	{r5, r6, r7, lr}
    4a60:	b0c3      	sub	sp, #268	; 0x10c
    4a62:	4689      	mov	r9, r1
    4a64:	0014      	movs	r4, r2
    4a66:	001d      	movs	r5, r3
    4a68:	930f      	str	r3, [sp, #60]	; 0x3c
    4a6a:	0006      	movs	r6, r0
    4a6c:	9006      	str	r0, [sp, #24]
    4a6e:	f003 f8bf 	bl	7bf0 <_localeconv_r>
    4a72:	6803      	ldr	r3, [r0, #0]
    4a74:	0018      	movs	r0, r3
    4a76:	9318      	str	r3, [sp, #96]	; 0x60
    4a78:	f7ff ffba 	bl	49f0 <strlen>
    4a7c:	9017      	str	r0, [sp, #92]	; 0x5c
    4a7e:	2e00      	cmp	r6, #0
    4a80:	d004      	beq.n	4a8c <_vfprintf_r+0x38>
    4a82:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    4a84:	9307      	str	r3, [sp, #28]
    4a86:	2b00      	cmp	r3, #0
    4a88:	d100      	bne.n	4a8c <_vfprintf_r+0x38>
    4a8a:	e0a7      	b.n	4bdc <_vfprintf_r+0x188>
    4a8c:	464b      	mov	r3, r9
    4a8e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    4a90:	07db      	lsls	r3, r3, #31
    4a92:	d478      	bmi.n	4b86 <_vfprintf_r+0x132>
    4a94:	464b      	mov	r3, r9
    4a96:	210c      	movs	r1, #12
    4a98:	5e59      	ldrsh	r1, [r3, r1]
    4a9a:	b28b      	uxth	r3, r1
    4a9c:	059a      	lsls	r2, r3, #22
    4a9e:	d56e      	bpl.n	4b7e <_vfprintf_r+0x12a>
    4aa0:	2280      	movs	r2, #128	; 0x80
    4aa2:	0192      	lsls	r2, r2, #6
    4aa4:	4213      	tst	r3, r2
    4aa6:	d109      	bne.n	4abc <_vfprintf_r+0x68>
    4aa8:	430a      	orrs	r2, r1
    4aaa:	464b      	mov	r3, r9
    4aac:	4649      	mov	r1, r9
    4aae:	819a      	strh	r2, [r3, #12]
    4ab0:	6e49      	ldr	r1, [r1, #100]	; 0x64
    4ab2:	4bcc      	ldr	r3, [pc, #816]	; (4de4 <_vfprintf_r+0x390>)
    4ab4:	400b      	ands	r3, r1
    4ab6:	4649      	mov	r1, r9
    4ab8:	664b      	str	r3, [r1, #100]	; 0x64
    4aba:	b293      	uxth	r3, r2
    4abc:	071a      	lsls	r2, r3, #28
    4abe:	d567      	bpl.n	4b90 <_vfprintf_r+0x13c>
    4ac0:	464a      	mov	r2, r9
    4ac2:	6912      	ldr	r2, [r2, #16]
    4ac4:	2a00      	cmp	r2, #0
    4ac6:	d063      	beq.n	4b90 <_vfprintf_r+0x13c>
    4ac8:	221a      	movs	r2, #26
    4aca:	401a      	ands	r2, r3
    4acc:	2a0a      	cmp	r2, #10
    4ace:	d100      	bne.n	4ad2 <_vfprintf_r+0x7e>
    4ad0:	e088      	b.n	4be4 <_vfprintf_r+0x190>
    4ad2:	ab32      	add	r3, sp, #200	; 0xc8
    4ad4:	9325      	str	r3, [sp, #148]	; 0x94
    4ad6:	2300      	movs	r3, #0
    4ad8:	46cb      	mov	fp, r9
    4ada:	af25      	add	r7, sp, #148	; 0x94
    4adc:	60bb      	str	r3, [r7, #8]
    4ade:	607b      	str	r3, [r7, #4]
    4ae0:	9407      	str	r4, [sp, #28]
    4ae2:	9314      	str	r3, [sp, #80]	; 0x50
    4ae4:	9316      	str	r3, [sp, #88]	; 0x58
    4ae6:	9315      	str	r3, [sp, #84]	; 0x54
    4ae8:	ae32      	add	r6, sp, #200	; 0xc8
    4aea:	9319      	str	r3, [sp, #100]	; 0x64
    4aec:	931a      	str	r3, [sp, #104]	; 0x68
    4aee:	930a      	str	r3, [sp, #40]	; 0x28
    4af0:	9c07      	ldr	r4, [sp, #28]
    4af2:	7823      	ldrb	r3, [r4, #0]
    4af4:	2b00      	cmp	r3, #0
    4af6:	d101      	bne.n	4afc <_vfprintf_r+0xa8>
    4af8:	f000 fd9e 	bl	5638 <_vfprintf_r+0xbe4>
    4afc:	2b25      	cmp	r3, #37	; 0x25
    4afe:	d103      	bne.n	4b08 <_vfprintf_r+0xb4>
    4b00:	f000 fd9a 	bl	5638 <_vfprintf_r+0xbe4>
    4b04:	2b25      	cmp	r3, #37	; 0x25
    4b06:	d003      	beq.n	4b10 <_vfprintf_r+0xbc>
    4b08:	3401      	adds	r4, #1
    4b0a:	7823      	ldrb	r3, [r4, #0]
    4b0c:	2b00      	cmp	r3, #0
    4b0e:	d1f9      	bne.n	4b04 <_vfprintf_r+0xb0>
    4b10:	9b07      	ldr	r3, [sp, #28]
    4b12:	1ae5      	subs	r5, r4, r3
    4b14:	d010      	beq.n	4b38 <_vfprintf_r+0xe4>
    4b16:	9b07      	ldr	r3, [sp, #28]
    4b18:	6075      	str	r5, [r6, #4]
    4b1a:	6033      	str	r3, [r6, #0]
    4b1c:	68bb      	ldr	r3, [r7, #8]
    4b1e:	195b      	adds	r3, r3, r5
    4b20:	60bb      	str	r3, [r7, #8]
    4b22:	687b      	ldr	r3, [r7, #4]
    4b24:	3301      	adds	r3, #1
    4b26:	607b      	str	r3, [r7, #4]
    4b28:	2b07      	cmp	r3, #7
    4b2a:	dc4c      	bgt.n	4bc6 <_vfprintf_r+0x172>
    4b2c:	3608      	adds	r6, #8
    4b2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4b30:	469c      	mov	ip, r3
    4b32:	44ac      	add	ip, r5
    4b34:	4663      	mov	r3, ip
    4b36:	930a      	str	r3, [sp, #40]	; 0x28
    4b38:	7823      	ldrb	r3, [r4, #0]
    4b3a:	2b00      	cmp	r3, #0
    4b3c:	d101      	bne.n	4b42 <_vfprintf_r+0xee>
    4b3e:	f000 fc99 	bl	5474 <_vfprintf_r+0xa20>
    4b42:	1c63      	adds	r3, r4, #1
    4b44:	9307      	str	r3, [sp, #28]
    4b46:	2300      	movs	r3, #0
    4b48:	aa16      	add	r2, sp, #88	; 0x58
    4b4a:	77d3      	strb	r3, [r2, #31]
    4b4c:	2201      	movs	r2, #1
    4b4e:	4252      	negs	r2, r2
    4b50:	4692      	mov	sl, r2
    4b52:	2200      	movs	r2, #0
    4b54:	920b      	str	r2, [sp, #44]	; 0x2c
    4b56:	3220      	adds	r2, #32
    4b58:	4691      	mov	r9, r2
    4b5a:	3220      	adds	r2, #32
    4b5c:	7863      	ldrb	r3, [r4, #1]
    4b5e:	2100      	movs	r1, #0
    4b60:	2000      	movs	r0, #0
    4b62:	2400      	movs	r4, #0
    4b64:	4694      	mov	ip, r2
    4b66:	9a07      	ldr	r2, [sp, #28]
    4b68:	3201      	adds	r2, #1
    4b6a:	9207      	str	r2, [sp, #28]
    4b6c:	001a      	movs	r2, r3
    4b6e:	3a20      	subs	r2, #32
    4b70:	2a58      	cmp	r2, #88	; 0x58
    4b72:	d900      	bls.n	4b76 <_vfprintf_r+0x122>
    4b74:	e2e7      	b.n	5146 <_vfprintf_r+0x6f2>
    4b76:	4d9c      	ldr	r5, [pc, #624]	; (4de8 <_vfprintf_r+0x394>)
    4b78:	0092      	lsls	r2, r2, #2
    4b7a:	58aa      	ldr	r2, [r5, r2]
    4b7c:	4697      	mov	pc, r2
    4b7e:	464b      	mov	r3, r9
    4b80:	6d98      	ldr	r0, [r3, #88]	; 0x58
    4b82:	f003 f847 	bl	7c14 <__retarget_lock_acquire_recursive>
    4b86:	464b      	mov	r3, r9
    4b88:	210c      	movs	r1, #12
    4b8a:	5e59      	ldrsh	r1, [r3, r1]
    4b8c:	b28b      	uxth	r3, r1
    4b8e:	e787      	b.n	4aa0 <_vfprintf_r+0x4c>
    4b90:	4649      	mov	r1, r9
    4b92:	9806      	ldr	r0, [sp, #24]
    4b94:	f001 fb0e 	bl	61b4 <__swsetup_r>
    4b98:	464b      	mov	r3, r9
    4b9a:	2800      	cmp	r0, #0
    4b9c:	d03a      	beq.n	4c14 <_vfprintf_r+0x1c0>
    4b9e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    4ba0:	07db      	lsls	r3, r3, #31
    4ba2:	d405      	bmi.n	4bb0 <_vfprintf_r+0x15c>
    4ba4:	464b      	mov	r3, r9
    4ba6:	899b      	ldrh	r3, [r3, #12]
    4ba8:	059b      	lsls	r3, r3, #22
    4baa:	d401      	bmi.n	4bb0 <_vfprintf_r+0x15c>
    4bac:	f000 ffcf 	bl	5b4e <_vfprintf_r+0x10fa>
    4bb0:	2301      	movs	r3, #1
    4bb2:	425b      	negs	r3, r3
    4bb4:	930a      	str	r3, [sp, #40]	; 0x28
    4bb6:	980a      	ldr	r0, [sp, #40]	; 0x28
    4bb8:	b043      	add	sp, #268	; 0x10c
    4bba:	bc3c      	pop	{r2, r3, r4, r5}
    4bbc:	4690      	mov	r8, r2
    4bbe:	4699      	mov	r9, r3
    4bc0:	46a2      	mov	sl, r4
    4bc2:	46ab      	mov	fp, r5
    4bc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4bc6:	003a      	movs	r2, r7
    4bc8:	4659      	mov	r1, fp
    4bca:	9806      	ldr	r0, [sp, #24]
    4bcc:	f004 f9a4 	bl	8f18 <__sprint_r>
    4bd0:	2800      	cmp	r0, #0
    4bd2:	d001      	beq.n	4bd8 <_vfprintf_r+0x184>
    4bd4:	f000 fcce 	bl	5574 <_vfprintf_r+0xb20>
    4bd8:	ae32      	add	r6, sp, #200	; 0xc8
    4bda:	e7a8      	b.n	4b2e <_vfprintf_r+0xda>
    4bdc:	9806      	ldr	r0, [sp, #24]
    4bde:	f002 fcd7 	bl	7590 <__sinit>
    4be2:	e753      	b.n	4a8c <_vfprintf_r+0x38>
    4be4:	464a      	mov	r2, r9
    4be6:	210e      	movs	r1, #14
    4be8:	5e52      	ldrsh	r2, [r2, r1]
    4bea:	2a00      	cmp	r2, #0
    4bec:	da00      	bge.n	4bf0 <_vfprintf_r+0x19c>
    4bee:	e770      	b.n	4ad2 <_vfprintf_r+0x7e>
    4bf0:	464a      	mov	r2, r9
    4bf2:	6e52      	ldr	r2, [r2, #100]	; 0x64
    4bf4:	07d2      	lsls	r2, r2, #31
    4bf6:	d405      	bmi.n	4c04 <_vfprintf_r+0x1b0>
    4bf8:	059b      	lsls	r3, r3, #22
    4bfa:	d403      	bmi.n	4c04 <_vfprintf_r+0x1b0>
    4bfc:	464b      	mov	r3, r9
    4bfe:	6d98      	ldr	r0, [r3, #88]	; 0x58
    4c00:	f003 f80a 	bl	7c18 <__retarget_lock_release_recursive>
    4c04:	002b      	movs	r3, r5
    4c06:	0022      	movs	r2, r4
    4c08:	4649      	mov	r1, r9
    4c0a:	9806      	ldr	r0, [sp, #24]
    4c0c:	f001 fa8e 	bl	612c <__sbprintf>
    4c10:	900a      	str	r0, [sp, #40]	; 0x28
    4c12:	e7d0      	b.n	4bb6 <_vfprintf_r+0x162>
    4c14:	899b      	ldrh	r3, [r3, #12]
    4c16:	e757      	b.n	4ac8 <_vfprintf_r+0x74>
    4c18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4c1a:	920f      	str	r2, [sp, #60]	; 0x3c
    4c1c:	425b      	negs	r3, r3
    4c1e:	930b      	str	r3, [sp, #44]	; 0x2c
    4c20:	2304      	movs	r3, #4
    4c22:	431c      	orrs	r4, r3
    4c24:	9b07      	ldr	r3, [sp, #28]
    4c26:	781b      	ldrb	r3, [r3, #0]
    4c28:	e79d      	b.n	4b66 <_vfprintf_r+0x112>
    4c2a:	9b07      	ldr	r3, [sp, #28]
    4c2c:	2101      	movs	r1, #1
    4c2e:	781b      	ldrb	r3, [r3, #0]
    4c30:	202b      	movs	r0, #43	; 0x2b
    4c32:	e798      	b.n	4b66 <_vfprintf_r+0x112>
    4c34:	9b07      	ldr	r3, [sp, #28]
    4c36:	1c5a      	adds	r2, r3, #1
    4c38:	781b      	ldrb	r3, [r3, #0]
    4c3a:	4690      	mov	r8, r2
    4c3c:	2b2a      	cmp	r3, #42	; 0x2a
    4c3e:	d101      	bne.n	4c44 <_vfprintf_r+0x1f0>
    4c40:	f001 fa38 	bl	60b4 <_vfprintf_r+0x1660>
    4c44:	001a      	movs	r2, r3
    4c46:	2500      	movs	r5, #0
    4c48:	3a30      	subs	r2, #48	; 0x30
    4c4a:	46aa      	mov	sl, r5
    4c4c:	2a09      	cmp	r2, #9
    4c4e:	d901      	bls.n	4c54 <_vfprintf_r+0x200>
    4c50:	f001 f96d 	bl	5f2e <_vfprintf_r+0x14da>
    4c54:	0025      	movs	r5, r4
    4c56:	4643      	mov	r3, r8
    4c58:	4654      	mov	r4, sl
    4c5a:	4688      	mov	r8, r1
    4c5c:	4682      	mov	sl, r0
    4c5e:	00a1      	lsls	r1, r4, #2
    4c60:	190c      	adds	r4, r1, r4
    4c62:	7818      	ldrb	r0, [r3, #0]
    4c64:	0064      	lsls	r4, r4, #1
    4c66:	18a4      	adds	r4, r4, r2
    4c68:	0002      	movs	r2, r0
    4c6a:	1c59      	adds	r1, r3, #1
    4c6c:	3a30      	subs	r2, #48	; 0x30
    4c6e:	000b      	movs	r3, r1
    4c70:	2a09      	cmp	r2, #9
    4c72:	d9f4      	bls.n	4c5e <_vfprintf_r+0x20a>
    4c74:	9107      	str	r1, [sp, #28]
    4c76:	0003      	movs	r3, r0
    4c78:	4641      	mov	r1, r8
    4c7a:	4650      	mov	r0, sl
    4c7c:	46a2      	mov	sl, r4
    4c7e:	002c      	movs	r4, r5
    4c80:	e774      	b.n	4b6c <_vfprintf_r+0x118>
    4c82:	9312      	str	r3, [sp, #72]	; 0x48
    4c84:	2900      	cmp	r1, #0
    4c86:	d001      	beq.n	4c8c <_vfprintf_r+0x238>
    4c88:	f001 fa2e 	bl	60e8 <_vfprintf_r+0x1694>
    4c8c:	4b57      	ldr	r3, [pc, #348]	; (4dec <_vfprintf_r+0x398>)
    4c8e:	9319      	str	r3, [sp, #100]	; 0x64
    4c90:	06a3      	lsls	r3, r4, #26
    4c92:	d501      	bpl.n	4c98 <_vfprintf_r+0x244>
    4c94:	f000 fe9a 	bl	59cc <_vfprintf_r+0xf78>
    4c98:	06e3      	lsls	r3, r4, #27
    4c9a:	d501      	bpl.n	4ca0 <_vfprintf_r+0x24c>
    4c9c:	f000 fd9a 	bl	57d4 <_vfprintf_r+0xd80>
    4ca0:	0663      	lsls	r3, r4, #25
    4ca2:	d401      	bmi.n	4ca8 <_vfprintf_r+0x254>
    4ca4:	f000 fd96 	bl	57d4 <_vfprintf_r+0xd80>
    4ca8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4caa:	881a      	ldrh	r2, [r3, #0]
    4cac:	920c      	str	r2, [sp, #48]	; 0x30
    4cae:	2200      	movs	r2, #0
    4cb0:	3304      	adds	r3, #4
    4cb2:	920d      	str	r2, [sp, #52]	; 0x34
    4cb4:	930f      	str	r3, [sp, #60]	; 0x3c
    4cb6:	07e3      	lsls	r3, r4, #31
    4cb8:	d401      	bmi.n	4cbe <_vfprintf_r+0x26a>
    4cba:	f000 fd76 	bl	57aa <_vfprintf_r+0xd56>
    4cbe:	990c      	ldr	r1, [sp, #48]	; 0x30
    4cc0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4cc2:	000b      	movs	r3, r1
    4cc4:	4313      	orrs	r3, r2
    4cc6:	001a      	movs	r2, r3
    4cc8:	2302      	movs	r3, #2
    4cca:	2a00      	cmp	r2, #0
    4ccc:	d008      	beq.n	4ce0 <_vfprintf_r+0x28c>
    4cce:	2030      	movs	r0, #48	; 0x30
    4cd0:	a91e      	add	r1, sp, #120	; 0x78
    4cd2:	7008      	strb	r0, [r1, #0]
    4cd4:	2548      	movs	r5, #72	; 0x48
    4cd6:	4668      	mov	r0, sp
    4cd8:	1940      	adds	r0, r0, r5
    4cda:	7800      	ldrb	r0, [r0, #0]
    4cdc:	431c      	orrs	r4, r3
    4cde:	7048      	strb	r0, [r1, #1]
    4ce0:	2100      	movs	r1, #0
    4ce2:	4688      	mov	r8, r1
    4ce4:	a816      	add	r0, sp, #88	; 0x58
    4ce6:	77c1      	strb	r1, [r0, #31]
    4ce8:	4651      	mov	r1, sl
    4cea:	3101      	adds	r1, #1
    4cec:	d100      	bne.n	4cf0 <_vfprintf_r+0x29c>
    4cee:	e0e6      	b.n	4ebe <_vfprintf_r+0x46a>
    4cf0:	2180      	movs	r1, #128	; 0x80
    4cf2:	0020      	movs	r0, r4
    4cf4:	4388      	bics	r0, r1
    4cf6:	9009      	str	r0, [sp, #36]	; 0x24
    4cf8:	2a00      	cmp	r2, #0
    4cfa:	d000      	beq.n	4cfe <_vfprintf_r+0x2aa>
    4cfc:	e0e3      	b.n	4ec6 <_vfprintf_r+0x472>
    4cfe:	4652      	mov	r2, sl
    4d00:	2a00      	cmp	r2, #0
    4d02:	d001      	beq.n	4d08 <_vfprintf_r+0x2b4>
    4d04:	f000 fc38 	bl	5578 <_vfprintf_r+0xb24>
    4d08:	2b00      	cmp	r3, #0
    4d0a:	d001      	beq.n	4d10 <_vfprintf_r+0x2bc>
    4d0c:	f000 fd0c 	bl	5728 <_vfprintf_r+0xcd4>
    4d10:	2001      	movs	r0, #1
    4d12:	ab32      	add	r3, sp, #200	; 0xc8
    4d14:	4020      	ands	r0, r4
    4d16:	900e      	str	r0, [sp, #56]	; 0x38
    4d18:	9311      	str	r3, [sp, #68]	; 0x44
    4d1a:	d008      	beq.n	4d2e <_vfprintf_r+0x2da>
    4d1c:	2327      	movs	r3, #39	; 0x27
    4d1e:	2130      	movs	r1, #48	; 0x30
    4d20:	aa28      	add	r2, sp, #160	; 0xa0
    4d22:	54d1      	strb	r1, [r2, r3]
    4d24:	aa16      	add	r2, sp, #88	; 0x58
    4d26:	4694      	mov	ip, r2
    4d28:	3348      	adds	r3, #72	; 0x48
    4d2a:	4463      	add	r3, ip
    4d2c:	9311      	str	r3, [sp, #68]	; 0x44
    4d2e:	4653      	mov	r3, sl
    4d30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4d32:	9308      	str	r3, [sp, #32]
    4d34:	4592      	cmp	sl, r2
    4d36:	da00      	bge.n	4d3a <_vfprintf_r+0x2e6>
    4d38:	9208      	str	r2, [sp, #32]
    4d3a:	2300      	movs	r3, #0
    4d3c:	9313      	str	r3, [sp, #76]	; 0x4c
    4d3e:	4643      	mov	r3, r8
    4d40:	2b00      	cmp	r3, #0
    4d42:	d002      	beq.n	4d4a <_vfprintf_r+0x2f6>
    4d44:	9b08      	ldr	r3, [sp, #32]
    4d46:	3301      	adds	r3, #1
    4d48:	9308      	str	r3, [sp, #32]
    4d4a:	2302      	movs	r3, #2
    4d4c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4d4e:	401a      	ands	r2, r3
    4d50:	4691      	mov	r9, r2
    4d52:	d002      	beq.n	4d5a <_vfprintf_r+0x306>
    4d54:	9b08      	ldr	r3, [sp, #32]
    4d56:	3302      	adds	r3, #2
    4d58:	9308      	str	r3, [sp, #32]
    4d5a:	2384      	movs	r3, #132	; 0x84
    4d5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4d5e:	401a      	ands	r2, r3
    4d60:	9210      	str	r2, [sp, #64]	; 0x40
    4d62:	d000      	beq.n	4d66 <_vfprintf_r+0x312>
    4d64:	e207      	b.n	5176 <_vfprintf_r+0x722>
    4d66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4d68:	9a08      	ldr	r2, [sp, #32]
    4d6a:	1a9c      	subs	r4, r3, r2
    4d6c:	2c00      	cmp	r4, #0
    4d6e:	dc00      	bgt.n	4d72 <_vfprintf_r+0x31e>
    4d70:	e201      	b.n	5176 <_vfprintf_r+0x722>
    4d72:	491f      	ldr	r1, [pc, #124]	; (4df0 <_vfprintf_r+0x39c>)
    4d74:	68ba      	ldr	r2, [r7, #8]
    4d76:	687b      	ldr	r3, [r7, #4]
    4d78:	4688      	mov	r8, r1
    4d7a:	2c10      	cmp	r4, #16
    4d7c:	dd21      	ble.n	4dc2 <_vfprintf_r+0x36e>
    4d7e:	0031      	movs	r1, r6
    4d80:	2510      	movs	r5, #16
    4d82:	465e      	mov	r6, fp
    4d84:	e003      	b.n	4d8e <_vfprintf_r+0x33a>
    4d86:	3c10      	subs	r4, #16
    4d88:	3108      	adds	r1, #8
    4d8a:	2c10      	cmp	r4, #16
    4d8c:	dd17      	ble.n	4dbe <_vfprintf_r+0x36a>
    4d8e:	4640      	mov	r0, r8
    4d90:	3210      	adds	r2, #16
    4d92:	3301      	adds	r3, #1
    4d94:	6008      	str	r0, [r1, #0]
    4d96:	604d      	str	r5, [r1, #4]
    4d98:	60ba      	str	r2, [r7, #8]
    4d9a:	607b      	str	r3, [r7, #4]
    4d9c:	2b07      	cmp	r3, #7
    4d9e:	ddf2      	ble.n	4d86 <_vfprintf_r+0x332>
    4da0:	003a      	movs	r2, r7
    4da2:	0031      	movs	r1, r6
    4da4:	9806      	ldr	r0, [sp, #24]
    4da6:	f004 f8b7 	bl	8f18 <__sprint_r>
    4daa:	2800      	cmp	r0, #0
    4dac:	d001      	beq.n	4db2 <_vfprintf_r+0x35e>
    4dae:	f000 fccf 	bl	5750 <_vfprintf_r+0xcfc>
    4db2:	3c10      	subs	r4, #16
    4db4:	68ba      	ldr	r2, [r7, #8]
    4db6:	687b      	ldr	r3, [r7, #4]
    4db8:	a932      	add	r1, sp, #200	; 0xc8
    4dba:	2c10      	cmp	r4, #16
    4dbc:	dce7      	bgt.n	4d8e <_vfprintf_r+0x33a>
    4dbe:	46b3      	mov	fp, r6
    4dc0:	000e      	movs	r6, r1
    4dc2:	4641      	mov	r1, r8
    4dc4:	6074      	str	r4, [r6, #4]
    4dc6:	3301      	adds	r3, #1
    4dc8:	18a4      	adds	r4, r4, r2
    4dca:	6031      	str	r1, [r6, #0]
    4dcc:	60bc      	str	r4, [r7, #8]
    4dce:	607b      	str	r3, [r7, #4]
    4dd0:	2b07      	cmp	r3, #7
    4dd2:	dd01      	ble.n	4dd8 <_vfprintf_r+0x384>
    4dd4:	f000 fcae 	bl	5734 <_vfprintf_r+0xce0>
    4dd8:	ab16      	add	r3, sp, #88	; 0x58
    4dda:	7fdb      	ldrb	r3, [r3, #31]
    4ddc:	3608      	adds	r6, #8
    4dde:	4698      	mov	r8, r3
    4de0:	e1ca      	b.n	5178 <_vfprintf_r+0x724>
    4de2:	46c0      	nop			; (mov r8, r8)
    4de4:	ffffdfff 	.word	0xffffdfff
    4de8:	0000a114 	.word	0x0000a114
    4dec:	0000a29c 	.word	0x0000a29c
    4df0:	0000a2bc 	.word	0x0000a2bc
    4df4:	2200      	movs	r2, #0
    4df6:	9d07      	ldr	r5, [sp, #28]
    4df8:	3b30      	subs	r3, #48	; 0x30
    4dfa:	46a8      	mov	r8, r5
    4dfc:	920b      	str	r2, [sp, #44]	; 0x2c
    4dfe:	001a      	movs	r2, r3
    4e00:	9408      	str	r4, [sp, #32]
    4e02:	002c      	movs	r4, r5
    4e04:	4655      	mov	r5, sl
    4e06:	4682      	mov	sl, r0
    4e08:	4640      	mov	r0, r8
    4e0a:	4688      	mov	r8, r1
    4e0c:	0011      	movs	r1, r2
    4e0e:	2200      	movs	r2, #0
    4e10:	0093      	lsls	r3, r2, #2
    4e12:	189a      	adds	r2, r3, r2
    4e14:	7803      	ldrb	r3, [r0, #0]
    4e16:	0052      	lsls	r2, r2, #1
    4e18:	188a      	adds	r2, r1, r2
    4e1a:	0019      	movs	r1, r3
    4e1c:	3401      	adds	r4, #1
    4e1e:	3930      	subs	r1, #48	; 0x30
    4e20:	0020      	movs	r0, r4
    4e22:	2909      	cmp	r1, #9
    4e24:	d9f4      	bls.n	4e10 <_vfprintf_r+0x3bc>
    4e26:	9407      	str	r4, [sp, #28]
    4e28:	4650      	mov	r0, sl
    4e2a:	9c08      	ldr	r4, [sp, #32]
    4e2c:	920b      	str	r2, [sp, #44]	; 0x2c
    4e2e:	4641      	mov	r1, r8
    4e30:	46aa      	mov	sl, r5
    4e32:	e69b      	b.n	4b6c <_vfprintf_r+0x118>
    4e34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4e36:	9312      	str	r3, [sp, #72]	; 0x48
    4e38:	6813      	ldr	r3, [r2, #0]
    4e3a:	2120      	movs	r1, #32
    4e3c:	9308      	str	r3, [sp, #32]
    4e3e:	466b      	mov	r3, sp
    4e40:	185b      	adds	r3, r3, r1
    4e42:	781b      	ldrb	r3, [r3, #0]
    4e44:	ad28      	add	r5, sp, #160	; 0xa0
    4e46:	702b      	strb	r3, [r5, #0]
    4e48:	2300      	movs	r3, #0
    4e4a:	a916      	add	r1, sp, #88	; 0x58
    4e4c:	77cb      	strb	r3, [r1, #31]
    4e4e:	0013      	movs	r3, r2
    4e50:	3304      	adds	r3, #4
    4e52:	930f      	str	r3, [sp, #60]	; 0x3c
    4e54:	2300      	movs	r3, #0
    4e56:	9409      	str	r4, [sp, #36]	; 0x24
    4e58:	4698      	mov	r8, r3
    4e5a:	3301      	adds	r3, #1
    4e5c:	9308      	str	r3, [sp, #32]
    4e5e:	930e      	str	r3, [sp, #56]	; 0x38
    4e60:	2300      	movs	r3, #0
    4e62:	9511      	str	r5, [sp, #68]	; 0x44
    4e64:	469a      	mov	sl, r3
    4e66:	9313      	str	r3, [sp, #76]	; 0x4c
    4e68:	e76f      	b.n	4d4a <_vfprintf_r+0x2f6>
    4e6a:	9312      	str	r3, [sp, #72]	; 0x48
    4e6c:	2900      	cmp	r1, #0
    4e6e:	d001      	beq.n	4e74 <_vfprintf_r+0x420>
    4e70:	f001 f94d 	bl	610e <_vfprintf_r+0x16ba>
    4e74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4e76:	06a3      	lsls	r3, r4, #26
    4e78:	d501      	bpl.n	4e7e <_vfprintf_r+0x42a>
    4e7a:	f000 fd5a 	bl	5932 <_vfprintf_r+0xede>
    4e7e:	06e3      	lsls	r3, r4, #27
    4e80:	d501      	bpl.n	4e86 <_vfprintf_r+0x432>
    4e82:	f000 fcab 	bl	57dc <_vfprintf_r+0xd88>
    4e86:	0663      	lsls	r3, r4, #25
    4e88:	d401      	bmi.n	4e8e <_vfprintf_r+0x43a>
    4e8a:	f000 fca7 	bl	57dc <_vfprintf_r+0xd88>
    4e8e:	2100      	movs	r1, #0
    4e90:	5e53      	ldrsh	r3, [r2, r1]
    4e92:	930c      	str	r3, [sp, #48]	; 0x30
    4e94:	3204      	adds	r2, #4
    4e96:	17db      	asrs	r3, r3, #31
    4e98:	930d      	str	r3, [sp, #52]	; 0x34
    4e9a:	920f      	str	r2, [sp, #60]	; 0x3c
    4e9c:	2b00      	cmp	r3, #0
    4e9e:	da01      	bge.n	4ea4 <_vfprintf_r+0x450>
    4ea0:	f000 fdb2 	bl	5a08 <_vfprintf_r+0xfb4>
    4ea4:	990c      	ldr	r1, [sp, #48]	; 0x30
    4ea6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4ea8:	0008      	movs	r0, r1
    4eaa:	4651      	mov	r1, sl
    4eac:	ab16      	add	r3, sp, #88	; 0x58
    4eae:	7fdb      	ldrb	r3, [r3, #31]
    4eb0:	4310      	orrs	r0, r2
    4eb2:	4698      	mov	r8, r3
    4eb4:	0002      	movs	r2, r0
    4eb6:	2301      	movs	r3, #1
    4eb8:	3101      	adds	r1, #1
    4eba:	d000      	beq.n	4ebe <_vfprintf_r+0x46a>
    4ebc:	e718      	b.n	4cf0 <_vfprintf_r+0x29c>
    4ebe:	2a00      	cmp	r2, #0
    4ec0:	d100      	bne.n	4ec4 <_vfprintf_r+0x470>
    4ec2:	e35a      	b.n	557a <_vfprintf_r+0xb26>
    4ec4:	9409      	str	r4, [sp, #36]	; 0x24
    4ec6:	2b01      	cmp	r3, #1
    4ec8:	d101      	bne.n	4ece <_vfprintf_r+0x47a>
    4eca:	f000 fc06 	bl	56da <_vfprintf_r+0xc86>
    4ece:	2b02      	cmp	r3, #2
    4ed0:	d000      	beq.n	4ed4 <_vfprintf_r+0x480>
    4ed2:	e380      	b.n	55d6 <_vfprintf_r+0xb82>
    4ed4:	9c19      	ldr	r4, [sp, #100]	; 0x64
    4ed6:	200f      	movs	r0, #15
    4ed8:	46a1      	mov	r9, r4
    4eda:	46b4      	mov	ip, r6
    4edc:	ab32      	add	r3, sp, #200	; 0xc8
    4ede:	0019      	movs	r1, r3
    4ee0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4ee2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4ee4:	0004      	movs	r4, r0
    4ee6:	464d      	mov	r5, r9
    4ee8:	4014      	ands	r4, r2
    4eea:	5d2c      	ldrb	r4, [r5, r4]
    4eec:	071e      	lsls	r6, r3, #28
    4eee:	0915      	lsrs	r5, r2, #4
    4ef0:	3901      	subs	r1, #1
    4ef2:	432e      	orrs	r6, r5
    4ef4:	700c      	strb	r4, [r1, #0]
    4ef6:	091c      	lsrs	r4, r3, #4
    4ef8:	0023      	movs	r3, r4
    4efa:	0034      	movs	r4, r6
    4efc:	0032      	movs	r2, r6
    4efe:	431c      	orrs	r4, r3
    4f00:	d1f0      	bne.n	4ee4 <_vfprintf_r+0x490>
    4f02:	920c      	str	r2, [sp, #48]	; 0x30
    4f04:	930d      	str	r3, [sp, #52]	; 0x34
    4f06:	ab32      	add	r3, sp, #200	; 0xc8
    4f08:	1a5b      	subs	r3, r3, r1
    4f0a:	9111      	str	r1, [sp, #68]	; 0x44
    4f0c:	4666      	mov	r6, ip
    4f0e:	930e      	str	r3, [sp, #56]	; 0x38
    4f10:	e70d      	b.n	4d2e <_vfprintf_r+0x2da>
    4f12:	4663      	mov	r3, ip
    4f14:	431c      	orrs	r4, r3
    4f16:	9b07      	ldr	r3, [sp, #28]
    4f18:	781b      	ldrb	r3, [r3, #0]
    4f1a:	e624      	b.n	4b66 <_vfprintf_r+0x112>
    4f1c:	9b07      	ldr	r3, [sp, #28]
    4f1e:	781b      	ldrb	r3, [r3, #0]
    4f20:	2b6c      	cmp	r3, #108	; 0x6c
    4f22:	d101      	bne.n	4f28 <_vfprintf_r+0x4d4>
    4f24:	f000 fe8c 	bl	5c40 <_vfprintf_r+0x11ec>
    4f28:	2210      	movs	r2, #16
    4f2a:	4314      	orrs	r4, r2
    4f2c:	e61b      	b.n	4b66 <_vfprintf_r+0x112>
    4f2e:	2900      	cmp	r1, #0
    4f30:	d001      	beq.n	4f36 <_vfprintf_r+0x4e2>
    4f32:	f001 f8d5 	bl	60e0 <_vfprintf_r+0x168c>
    4f36:	06a3      	lsls	r3, r4, #26
    4f38:	d501      	bpl.n	4f3e <_vfprintf_r+0x4ea>
    4f3a:	f000 fe76 	bl	5c2a <_vfprintf_r+0x11d6>
    4f3e:	06e3      	lsls	r3, r4, #27
    4f40:	d500      	bpl.n	4f44 <_vfprintf_r+0x4f0>
    4f42:	e110      	b.n	5166 <_vfprintf_r+0x712>
    4f44:	0663      	lsls	r3, r4, #25
    4f46:	d400      	bmi.n	4f4a <_vfprintf_r+0x4f6>
    4f48:	e10d      	b.n	5166 <_vfprintf_r+0x712>
    4f4a:	4669      	mov	r1, sp
    4f4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4f4e:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    4f50:	681a      	ldr	r2, [r3, #0]
    4f52:	3304      	adds	r3, #4
    4f54:	9208      	str	r2, [sp, #32]
    4f56:	8011      	strh	r1, [r2, #0]
    4f58:	930f      	str	r3, [sp, #60]	; 0x3c
    4f5a:	e5c9      	b.n	4af0 <_vfprintf_r+0x9c>
    4f5c:	990f      	ldr	r1, [sp, #60]	; 0x3c
    4f5e:	2230      	movs	r2, #48	; 0x30
    4f60:	680b      	ldr	r3, [r1, #0]
    4f62:	930c      	str	r3, [sp, #48]	; 0x30
    4f64:	2300      	movs	r3, #0
    4f66:	930d      	str	r3, [sp, #52]	; 0x34
    4f68:	3302      	adds	r3, #2
    4f6a:	431c      	orrs	r4, r3
    4f6c:	ab1e      	add	r3, sp, #120	; 0x78
    4f6e:	701a      	strb	r2, [r3, #0]
    4f70:	3248      	adds	r2, #72	; 0x48
    4f72:	705a      	strb	r2, [r3, #1]
    4f74:	000b      	movs	r3, r1
    4f76:	3304      	adds	r3, #4
    4f78:	930f      	str	r3, [sp, #60]	; 0x3c
    4f7a:	4bc1      	ldr	r3, [pc, #772]	; (5280 <_vfprintf_r+0x82c>)
    4f7c:	9212      	str	r2, [sp, #72]	; 0x48
    4f7e:	9319      	str	r3, [sp, #100]	; 0x64
    4f80:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4f82:	2302      	movs	r3, #2
    4f84:	e6ac      	b.n	4ce0 <_vfprintf_r+0x28c>
    4f86:	464b      	mov	r3, r9
    4f88:	431c      	orrs	r4, r3
    4f8a:	9b07      	ldr	r3, [sp, #28]
    4f8c:	781b      	ldrb	r3, [r3, #0]
    4f8e:	e5ea      	b.n	4b66 <_vfprintf_r+0x112>
    4f90:	9312      	str	r3, [sp, #72]	; 0x48
    4f92:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4f94:	a916      	add	r1, sp, #88	; 0x58
    4f96:	1d1d      	adds	r5, r3, #4
    4f98:	681b      	ldr	r3, [r3, #0]
    4f9a:	001a      	movs	r2, r3
    4f9c:	9311      	str	r3, [sp, #68]	; 0x44
    4f9e:	2300      	movs	r3, #0
    4fa0:	77cb      	strb	r3, [r1, #31]
    4fa2:	2a00      	cmp	r2, #0
    4fa4:	d101      	bne.n	4faa <_vfprintf_r+0x556>
    4fa6:	f000 ff01 	bl	5dac <_vfprintf_r+0x1358>
    4faa:	4653      	mov	r3, sl
    4fac:	3301      	adds	r3, #1
    4fae:	d101      	bne.n	4fb4 <_vfprintf_r+0x560>
    4fb0:	f000 fe64 	bl	5c7c <_vfprintf_r+0x1228>
    4fb4:	4652      	mov	r2, sl
    4fb6:	2100      	movs	r1, #0
    4fb8:	9811      	ldr	r0, [sp, #68]	; 0x44
    4fba:	f003 f965 	bl	8288 <memchr>
    4fbe:	2800      	cmp	r0, #0
    4fc0:	d101      	bne.n	4fc6 <_vfprintf_r+0x572>
    4fc2:	f000 ff78 	bl	5eb6 <_vfprintf_r+0x1462>
    4fc6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4fc8:	1ac3      	subs	r3, r0, r3
    4fca:	001a      	movs	r2, r3
    4fcc:	930e      	str	r3, [sp, #56]	; 0x38
    4fce:	43db      	mvns	r3, r3
    4fd0:	17db      	asrs	r3, r3, #31
    4fd2:	401a      	ands	r2, r3
    4fd4:	ab16      	add	r3, sp, #88	; 0x58
    4fd6:	7fdb      	ldrb	r3, [r3, #31]
    4fd8:	9208      	str	r2, [sp, #32]
    4fda:	4698      	mov	r8, r3
    4fdc:	2300      	movs	r3, #0
    4fde:	950f      	str	r5, [sp, #60]	; 0x3c
    4fe0:	9409      	str	r4, [sp, #36]	; 0x24
    4fe2:	469a      	mov	sl, r3
    4fe4:	9313      	str	r3, [sp, #76]	; 0x4c
    4fe6:	e6aa      	b.n	4d3e <_vfprintf_r+0x2ea>
    4fe8:	2308      	movs	r3, #8
    4fea:	431c      	orrs	r4, r3
    4fec:	9b07      	ldr	r3, [sp, #28]
    4fee:	781b      	ldrb	r3, [r3, #0]
    4ff0:	e5b9      	b.n	4b66 <_vfprintf_r+0x112>
    4ff2:	9312      	str	r3, [sp, #72]	; 0x48
    4ff4:	2310      	movs	r3, #16
    4ff6:	431c      	orrs	r4, r3
    4ff8:	06a3      	lsls	r3, r4, #26
    4ffa:	d501      	bpl.n	5000 <_vfprintf_r+0x5ac>
    4ffc:	f000 fca7 	bl	594e <_vfprintf_r+0xefa>
    5000:	06e3      	lsls	r3, r4, #27
    5002:	d500      	bpl.n	5006 <_vfprintf_r+0x5b2>
    5004:	e3ee      	b.n	57e4 <_vfprintf_r+0xd90>
    5006:	0663      	lsls	r3, r4, #25
    5008:	d400      	bmi.n	500c <_vfprintf_r+0x5b8>
    500a:	e3eb      	b.n	57e4 <_vfprintf_r+0xd90>
    500c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    500e:	881a      	ldrh	r2, [r3, #0]
    5010:	920c      	str	r2, [sp, #48]	; 0x30
    5012:	2200      	movs	r2, #0
    5014:	3304      	adds	r3, #4
    5016:	920d      	str	r2, [sp, #52]	; 0x34
    5018:	930f      	str	r3, [sp, #60]	; 0x3c
    501a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    501c:	2300      	movs	r3, #0
    501e:	e65f      	b.n	4ce0 <_vfprintf_r+0x28c>
    5020:	9312      	str	r3, [sp, #72]	; 0x48
    5022:	2310      	movs	r3, #16
    5024:	431c      	orrs	r4, r3
    5026:	06a3      	lsls	r3, r4, #26
    5028:	d501      	bpl.n	502e <_vfprintf_r+0x5da>
    502a:	f000 fcba 	bl	59a2 <_vfprintf_r+0xf4e>
    502e:	06e3      	lsls	r3, r4, #27
    5030:	d500      	bpl.n	5034 <_vfprintf_r+0x5e0>
    5032:	e3da      	b.n	57ea <_vfprintf_r+0xd96>
    5034:	0663      	lsls	r3, r4, #25
    5036:	d400      	bmi.n	503a <_vfprintf_r+0x5e6>
    5038:	e3d7      	b.n	57ea <_vfprintf_r+0xd96>
    503a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    503c:	881a      	ldrh	r2, [r3, #0]
    503e:	920c      	str	r2, [sp, #48]	; 0x30
    5040:	2200      	movs	r2, #0
    5042:	3304      	adds	r3, #4
    5044:	920d      	str	r2, [sp, #52]	; 0x34
    5046:	930f      	str	r3, [sp, #60]	; 0x3c
    5048:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    504a:	2301      	movs	r3, #1
    504c:	e648      	b.n	4ce0 <_vfprintf_r+0x28c>
    504e:	9312      	str	r3, [sp, #72]	; 0x48
    5050:	2900      	cmp	r1, #0
    5052:	d001      	beq.n	5058 <_vfprintf_r+0x604>
    5054:	f001 f857 	bl	6106 <_vfprintf_r+0x16b2>
    5058:	4b8a      	ldr	r3, [pc, #552]	; (5284 <_vfprintf_r+0x830>)
    505a:	9319      	str	r3, [sp, #100]	; 0x64
    505c:	e618      	b.n	4c90 <_vfprintf_r+0x23c>
    505e:	2301      	movs	r3, #1
    5060:	431c      	orrs	r4, r3
    5062:	9b07      	ldr	r3, [sp, #28]
    5064:	781b      	ldrb	r3, [r3, #0]
    5066:	e57e      	b.n	4b66 <_vfprintf_r+0x112>
    5068:	2380      	movs	r3, #128	; 0x80
    506a:	431c      	orrs	r4, r3
    506c:	9b07      	ldr	r3, [sp, #28]
    506e:	781b      	ldrb	r3, [r3, #0]
    5070:	e579      	b.n	4b66 <_vfprintf_r+0x112>
    5072:	9b07      	ldr	r3, [sp, #28]
    5074:	781b      	ldrb	r3, [r3, #0]
    5076:	2800      	cmp	r0, #0
    5078:	d000      	beq.n	507c <_vfprintf_r+0x628>
    507a:	e574      	b.n	4b66 <_vfprintf_r+0x112>
    507c:	2101      	movs	r1, #1
    507e:	3020      	adds	r0, #32
    5080:	e571      	b.n	4b66 <_vfprintf_r+0x112>
    5082:	9312      	str	r3, [sp, #72]	; 0x48
    5084:	2900      	cmp	r1, #0
    5086:	d001      	beq.n	508c <_vfprintf_r+0x638>
    5088:	f001 f839 	bl	60fe <_vfprintf_r+0x16aa>
    508c:	2207      	movs	r2, #7
    508e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5090:	3307      	adds	r3, #7
    5092:	4393      	bics	r3, r2
    5094:	3201      	adds	r2, #1
    5096:	4694      	mov	ip, r2
    5098:	449c      	add	ip, r3
    509a:	4662      	mov	r2, ip
    509c:	920f      	str	r2, [sp, #60]	; 0x3c
    509e:	681a      	ldr	r2, [r3, #0]
    50a0:	9216      	str	r2, [sp, #88]	; 0x58
    50a2:	685b      	ldr	r3, [r3, #4]
    50a4:	2201      	movs	r2, #1
    50a6:	9315      	str	r3, [sp, #84]	; 0x54
    50a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
    50aa:	9d16      	ldr	r5, [sp, #88]	; 0x58
    50ac:	005b      	lsls	r3, r3, #1
    50ae:	085b      	lsrs	r3, r3, #1
    50b0:	4698      	mov	r8, r3
    50b2:	4252      	negs	r2, r2
    50b4:	4b74      	ldr	r3, [pc, #464]	; (5288 <_vfprintf_r+0x834>)
    50b6:	0028      	movs	r0, r5
    50b8:	4641      	mov	r1, r8
    50ba:	f004 fde7 	bl	9c8c <__aeabi_dcmpun>
    50be:	2800      	cmp	r0, #0
    50c0:	d001      	beq.n	50c6 <_vfprintf_r+0x672>
    50c2:	f000 fcb4 	bl	5a2e <_vfprintf_r+0xfda>
    50c6:	2201      	movs	r2, #1
    50c8:	4b6f      	ldr	r3, [pc, #444]	; (5288 <_vfprintf_r+0x834>)
    50ca:	4252      	negs	r2, r2
    50cc:	0028      	movs	r0, r5
    50ce:	4641      	mov	r1, r8
    50d0:	f7ff f9aa 	bl	4428 <__aeabi_dcmple>
    50d4:	2800      	cmp	r0, #0
    50d6:	d001      	beq.n	50dc <_vfprintf_r+0x688>
    50d8:	f000 fca9 	bl	5a2e <_vfprintf_r+0xfda>
    50dc:	2200      	movs	r2, #0
    50de:	2300      	movs	r3, #0
    50e0:	9816      	ldr	r0, [sp, #88]	; 0x58
    50e2:	9915      	ldr	r1, [sp, #84]	; 0x54
    50e4:	f7ff f996 	bl	4414 <__aeabi_dcmplt>
    50e8:	2800      	cmp	r0, #0
    50ea:	d001      	beq.n	50f0 <_vfprintf_r+0x69c>
    50ec:	f000 fd55 	bl	5b9a <_vfprintf_r+0x1146>
    50f0:	ab16      	add	r3, sp, #88	; 0x58
    50f2:	7fdb      	ldrb	r3, [r3, #31]
    50f4:	4698      	mov	r8, r3
    50f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    50f8:	2b47      	cmp	r3, #71	; 0x47
    50fa:	dd01      	ble.n	5100 <_vfprintf_r+0x6ac>
    50fc:	f000 fdb4 	bl	5c68 <_vfprintf_r+0x1214>
    5100:	4b62      	ldr	r3, [pc, #392]	; (528c <_vfprintf_r+0x838>)
    5102:	9311      	str	r3, [sp, #68]	; 0x44
    5104:	2380      	movs	r3, #128	; 0x80
    5106:	439c      	bics	r4, r3
    5108:	3b7d      	subs	r3, #125	; 0x7d
    510a:	9308      	str	r3, [sp, #32]
    510c:	930e      	str	r3, [sp, #56]	; 0x38
    510e:	2300      	movs	r3, #0
    5110:	9409      	str	r4, [sp, #36]	; 0x24
    5112:	469a      	mov	sl, r3
    5114:	9313      	str	r3, [sp, #76]	; 0x4c
    5116:	e612      	b.n	4d3e <_vfprintf_r+0x2ea>
    5118:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    511a:	1d1a      	adds	r2, r3, #4
    511c:	681b      	ldr	r3, [r3, #0]
    511e:	930b      	str	r3, [sp, #44]	; 0x2c
    5120:	2b00      	cmp	r3, #0
    5122:	da00      	bge.n	5126 <_vfprintf_r+0x6d2>
    5124:	e578      	b.n	4c18 <_vfprintf_r+0x1c4>
    5126:	9b07      	ldr	r3, [sp, #28]
    5128:	920f      	str	r2, [sp, #60]	; 0x3c
    512a:	781b      	ldrb	r3, [r3, #0]
    512c:	e51b      	b.n	4b66 <_vfprintf_r+0x112>
    512e:	9312      	str	r3, [sp, #72]	; 0x48
    5130:	2900      	cmp	r1, #0
    5132:	d001      	beq.n	5138 <_vfprintf_r+0x6e4>
    5134:	f000 ffcc 	bl	60d0 <_vfprintf_r+0x167c>
    5138:	2310      	movs	r3, #16
    513a:	431c      	orrs	r4, r3
    513c:	e69a      	b.n	4e74 <_vfprintf_r+0x420>
    513e:	9312      	str	r3, [sp, #72]	; 0x48
    5140:	e771      	b.n	5026 <_vfprintf_r+0x5d2>
    5142:	9312      	str	r3, [sp, #72]	; 0x48
    5144:	e758      	b.n	4ff8 <_vfprintf_r+0x5a4>
    5146:	9312      	str	r3, [sp, #72]	; 0x48
    5148:	2900      	cmp	r1, #0
    514a:	d001      	beq.n	5150 <_vfprintf_r+0x6fc>
    514c:	f000 ffd3 	bl	60f6 <_vfprintf_r+0x16a2>
    5150:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5152:	2b00      	cmp	r3, #0
    5154:	d100      	bne.n	5158 <_vfprintf_r+0x704>
    5156:	e18d      	b.n	5474 <_vfprintf_r+0xa20>
    5158:	ad28      	add	r5, sp, #160	; 0xa0
    515a:	702b      	strb	r3, [r5, #0]
    515c:	2300      	movs	r3, #0
    515e:	aa16      	add	r2, sp, #88	; 0x58
    5160:	77d3      	strb	r3, [r2, #31]
    5162:	9409      	str	r4, [sp, #36]	; 0x24
    5164:	e678      	b.n	4e58 <_vfprintf_r+0x404>
    5166:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    5168:	990a      	ldr	r1, [sp, #40]	; 0x28
    516a:	6813      	ldr	r3, [r2, #0]
    516c:	6019      	str	r1, [r3, #0]
    516e:	0013      	movs	r3, r2
    5170:	3304      	adds	r3, #4
    5172:	930f      	str	r3, [sp, #60]	; 0x3c
    5174:	e4bc      	b.n	4af0 <_vfprintf_r+0x9c>
    5176:	68bc      	ldr	r4, [r7, #8]
    5178:	4643      	mov	r3, r8
    517a:	2b00      	cmp	r3, #0
    517c:	d00f      	beq.n	519e <_vfprintf_r+0x74a>
    517e:	aa16      	add	r2, sp, #88	; 0x58
    5180:	231f      	movs	r3, #31
    5182:	4694      	mov	ip, r2
    5184:	4463      	add	r3, ip
    5186:	6033      	str	r3, [r6, #0]
    5188:	2301      	movs	r3, #1
    518a:	6073      	str	r3, [r6, #4]
    518c:	687b      	ldr	r3, [r7, #4]
    518e:	3401      	adds	r4, #1
    5190:	3301      	adds	r3, #1
    5192:	60bc      	str	r4, [r7, #8]
    5194:	607b      	str	r3, [r7, #4]
    5196:	2b07      	cmp	r3, #7
    5198:	dd00      	ble.n	519c <_vfprintf_r+0x748>
    519a:	e203      	b.n	55a4 <_vfprintf_r+0xb50>
    519c:	3608      	adds	r6, #8
    519e:	464b      	mov	r3, r9
    51a0:	2b00      	cmp	r3, #0
    51a2:	d00c      	beq.n	51be <_vfprintf_r+0x76a>
    51a4:	ab1e      	add	r3, sp, #120	; 0x78
    51a6:	6033      	str	r3, [r6, #0]
    51a8:	2302      	movs	r3, #2
    51aa:	6073      	str	r3, [r6, #4]
    51ac:	687b      	ldr	r3, [r7, #4]
    51ae:	3402      	adds	r4, #2
    51b0:	3301      	adds	r3, #1
    51b2:	60bc      	str	r4, [r7, #8]
    51b4:	607b      	str	r3, [r7, #4]
    51b6:	2b07      	cmp	r3, #7
    51b8:	dd00      	ble.n	51bc <_vfprintf_r+0x768>
    51ba:	e1fd      	b.n	55b8 <_vfprintf_r+0xb64>
    51bc:	3608      	adds	r6, #8
    51be:	9b10      	ldr	r3, [sp, #64]	; 0x40
    51c0:	2b80      	cmp	r3, #128	; 0x80
    51c2:	d100      	bne.n	51c6 <_vfprintf_r+0x772>
    51c4:	e173      	b.n	54ae <_vfprintf_r+0xa5a>
    51c6:	4653      	mov	r3, sl
    51c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    51ca:	1a9d      	subs	r5, r3, r2
    51cc:	2d00      	cmp	r5, #0
    51ce:	dd32      	ble.n	5236 <_vfprintf_r+0x7e2>
    51d0:	4a2f      	ldr	r2, [pc, #188]	; (5290 <_vfprintf_r+0x83c>)
    51d2:	687b      	ldr	r3, [r7, #4]
    51d4:	4691      	mov	r9, r2
    51d6:	2d10      	cmp	r5, #16
    51d8:	dd22      	ble.n	5220 <_vfprintf_r+0x7cc>
    51da:	2210      	movs	r2, #16
    51dc:	4692      	mov	sl, r2
    51de:	0022      	movs	r2, r4
    51e0:	465c      	mov	r4, fp
    51e2:	e003      	b.n	51ec <_vfprintf_r+0x798>
    51e4:	3d10      	subs	r5, #16
    51e6:	3608      	adds	r6, #8
    51e8:	2d10      	cmp	r5, #16
    51ea:	dd17      	ble.n	521c <_vfprintf_r+0x7c8>
    51ec:	4649      	mov	r1, r9
    51ee:	6031      	str	r1, [r6, #0]
    51f0:	4651      	mov	r1, sl
    51f2:	3210      	adds	r2, #16
    51f4:	3301      	adds	r3, #1
    51f6:	6071      	str	r1, [r6, #4]
    51f8:	60ba      	str	r2, [r7, #8]
    51fa:	607b      	str	r3, [r7, #4]
    51fc:	2b07      	cmp	r3, #7
    51fe:	ddf1      	ble.n	51e4 <_vfprintf_r+0x790>
    5200:	003a      	movs	r2, r7
    5202:	0021      	movs	r1, r4
    5204:	9806      	ldr	r0, [sp, #24]
    5206:	f003 fe87 	bl	8f18 <__sprint_r>
    520a:	2800      	cmp	r0, #0
    520c:	d000      	beq.n	5210 <_vfprintf_r+0x7bc>
    520e:	e18a      	b.n	5526 <_vfprintf_r+0xad2>
    5210:	3d10      	subs	r5, #16
    5212:	68ba      	ldr	r2, [r7, #8]
    5214:	687b      	ldr	r3, [r7, #4]
    5216:	ae32      	add	r6, sp, #200	; 0xc8
    5218:	2d10      	cmp	r5, #16
    521a:	dce7      	bgt.n	51ec <_vfprintf_r+0x798>
    521c:	46a3      	mov	fp, r4
    521e:	0014      	movs	r4, r2
    5220:	464a      	mov	r2, r9
    5222:	1964      	adds	r4, r4, r5
    5224:	3301      	adds	r3, #1
    5226:	6032      	str	r2, [r6, #0]
    5228:	6075      	str	r5, [r6, #4]
    522a:	60bc      	str	r4, [r7, #8]
    522c:	607b      	str	r3, [r7, #4]
    522e:	2b07      	cmp	r3, #7
    5230:	dd00      	ble.n	5234 <_vfprintf_r+0x7e0>
    5232:	e1ad      	b.n	5590 <_vfprintf_r+0xb3c>
    5234:	3608      	adds	r6, #8
    5236:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5238:	05db      	lsls	r3, r3, #23
    523a:	d500      	bpl.n	523e <_vfprintf_r+0x7ea>
    523c:	e0be      	b.n	53bc <_vfprintf_r+0x968>
    523e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5240:	6033      	str	r3, [r6, #0]
    5242:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5244:	469c      	mov	ip, r3
    5246:	6073      	str	r3, [r6, #4]
    5248:	687b      	ldr	r3, [r7, #4]
    524a:	4464      	add	r4, ip
    524c:	3301      	adds	r3, #1
    524e:	60bc      	str	r4, [r7, #8]
    5250:	607b      	str	r3, [r7, #4]
    5252:	2b07      	cmp	r3, #7
    5254:	dd00      	ble.n	5258 <_vfprintf_r+0x804>
    5256:	e0a6      	b.n	53a6 <_vfprintf_r+0x952>
    5258:	3608      	adds	r6, #8
    525a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    525c:	075b      	lsls	r3, r3, #29
    525e:	d54a      	bpl.n	52f6 <_vfprintf_r+0x8a2>
    5260:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5262:	9a08      	ldr	r2, [sp, #32]
    5264:	1a9d      	subs	r5, r3, r2
    5266:	2d00      	cmp	r5, #0
    5268:	dd45      	ble.n	52f6 <_vfprintf_r+0x8a2>
    526a:	4a0a      	ldr	r2, [pc, #40]	; (5294 <_vfprintf_r+0x840>)
    526c:	687b      	ldr	r3, [r7, #4]
    526e:	4690      	mov	r8, r2
    5270:	2d10      	cmp	r5, #16
    5272:	dd2f      	ble.n	52d4 <_vfprintf_r+0x880>
    5274:	2210      	movs	r2, #16
    5276:	4691      	mov	r9, r2
    5278:	0022      	movs	r2, r4
    527a:	465c      	mov	r4, fp
    527c:	e010      	b.n	52a0 <_vfprintf_r+0x84c>
    527e:	46c0      	nop			; (mov r8, r8)
    5280:	0000a29c 	.word	0x0000a29c
    5284:	0000a288 	.word	0x0000a288
    5288:	7fefffff 	.word	0x7fefffff
    528c:	0000a278 	.word	0x0000a278
    5290:	0000a2cc 	.word	0x0000a2cc
    5294:	0000a2bc 	.word	0x0000a2bc
    5298:	3d10      	subs	r5, #16
    529a:	3608      	adds	r6, #8
    529c:	2d10      	cmp	r5, #16
    529e:	dd17      	ble.n	52d0 <_vfprintf_r+0x87c>
    52a0:	49d1      	ldr	r1, [pc, #836]	; (55e8 <_vfprintf_r+0xb94>)
    52a2:	3210      	adds	r2, #16
    52a4:	6031      	str	r1, [r6, #0]
    52a6:	4649      	mov	r1, r9
    52a8:	3301      	adds	r3, #1
    52aa:	6071      	str	r1, [r6, #4]
    52ac:	60ba      	str	r2, [r7, #8]
    52ae:	607b      	str	r3, [r7, #4]
    52b0:	2b07      	cmp	r3, #7
    52b2:	ddf1      	ble.n	5298 <_vfprintf_r+0x844>
    52b4:	003a      	movs	r2, r7
    52b6:	0021      	movs	r1, r4
    52b8:	9806      	ldr	r0, [sp, #24]
    52ba:	f003 fe2d 	bl	8f18 <__sprint_r>
    52be:	2800      	cmp	r0, #0
    52c0:	d000      	beq.n	52c4 <_vfprintf_r+0x870>
    52c2:	e130      	b.n	5526 <_vfprintf_r+0xad2>
    52c4:	3d10      	subs	r5, #16
    52c6:	68ba      	ldr	r2, [r7, #8]
    52c8:	687b      	ldr	r3, [r7, #4]
    52ca:	ae32      	add	r6, sp, #200	; 0xc8
    52cc:	2d10      	cmp	r5, #16
    52ce:	dce7      	bgt.n	52a0 <_vfprintf_r+0x84c>
    52d0:	46a3      	mov	fp, r4
    52d2:	0014      	movs	r4, r2
    52d4:	4642      	mov	r2, r8
    52d6:	1964      	adds	r4, r4, r5
    52d8:	3301      	adds	r3, #1
    52da:	c624      	stmia	r6!, {r2, r5}
    52dc:	60bc      	str	r4, [r7, #8]
    52de:	607b      	str	r3, [r7, #4]
    52e0:	2b07      	cmp	r3, #7
    52e2:	dd08      	ble.n	52f6 <_vfprintf_r+0x8a2>
    52e4:	003a      	movs	r2, r7
    52e6:	4659      	mov	r1, fp
    52e8:	9806      	ldr	r0, [sp, #24]
    52ea:	f003 fe15 	bl	8f18 <__sprint_r>
    52ee:	2800      	cmp	r0, #0
    52f0:	d000      	beq.n	52f4 <_vfprintf_r+0x8a0>
    52f2:	e13f      	b.n	5574 <_vfprintf_r+0xb20>
    52f4:	68bc      	ldr	r4, [r7, #8]
    52f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    52f8:	9908      	ldr	r1, [sp, #32]
    52fa:	428b      	cmp	r3, r1
    52fc:	da00      	bge.n	5300 <_vfprintf_r+0x8ac>
    52fe:	000b      	movs	r3, r1
    5300:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5302:	4694      	mov	ip, r2
    5304:	449c      	add	ip, r3
    5306:	4663      	mov	r3, ip
    5308:	930a      	str	r3, [sp, #40]	; 0x28
    530a:	2c00      	cmp	r4, #0
    530c:	d000      	beq.n	5310 <_vfprintf_r+0x8bc>
    530e:	e129      	b.n	5564 <_vfprintf_r+0xb10>
    5310:	2300      	movs	r3, #0
    5312:	ae32      	add	r6, sp, #200	; 0xc8
    5314:	607b      	str	r3, [r7, #4]
    5316:	f7ff fbeb 	bl	4af0 <_vfprintf_r+0x9c>
    531a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    531c:	2b01      	cmp	r3, #1
    531e:	dc00      	bgt.n	5322 <_vfprintf_r+0x8ce>
    5320:	e103      	b.n	552a <_vfprintf_r+0xad6>
    5322:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5324:	3401      	adds	r4, #1
    5326:	6033      	str	r3, [r6, #0]
    5328:	2301      	movs	r3, #1
    532a:	6073      	str	r3, [r6, #4]
    532c:	687b      	ldr	r3, [r7, #4]
    532e:	60bc      	str	r4, [r7, #8]
    5330:	3301      	adds	r3, #1
    5332:	607b      	str	r3, [r7, #4]
    5334:	2b07      	cmp	r3, #7
    5336:	dd00      	ble.n	533a <_vfprintf_r+0x8e6>
    5338:	e2ef      	b.n	591a <_vfprintf_r+0xec6>
    533a:	3608      	adds	r6, #8
    533c:	9a18      	ldr	r2, [sp, #96]	; 0x60
    533e:	3301      	adds	r3, #1
    5340:	6032      	str	r2, [r6, #0]
    5342:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5344:	4698      	mov	r8, r3
    5346:	4694      	mov	ip, r2
    5348:	4464      	add	r4, ip
    534a:	6072      	str	r2, [r6, #4]
    534c:	60bc      	str	r4, [r7, #8]
    534e:	607b      	str	r3, [r7, #4]
    5350:	2b07      	cmp	r3, #7
    5352:	dd00      	ble.n	5356 <_vfprintf_r+0x902>
    5354:	e318      	b.n	5988 <_vfprintf_r+0xf34>
    5356:	3608      	adds	r6, #8
    5358:	2200      	movs	r2, #0
    535a:	2300      	movs	r3, #0
    535c:	9816      	ldr	r0, [sp, #88]	; 0x58
    535e:	9915      	ldr	r1, [sp, #84]	; 0x54
    5360:	f7ff f852 	bl	4408 <__aeabi_dcmpeq>
    5364:	2800      	cmp	r0, #0
    5366:	d000      	beq.n	536a <_vfprintf_r+0x916>
    5368:	e1f4      	b.n	5754 <_vfprintf_r+0xd00>
    536a:	9d11      	ldr	r5, [sp, #68]	; 0x44
    536c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    536e:	3501      	adds	r5, #1
    5370:	3b01      	subs	r3, #1
    5372:	6035      	str	r5, [r6, #0]
    5374:	6073      	str	r3, [r6, #4]
    5376:	18e4      	adds	r4, r4, r3
    5378:	2301      	movs	r3, #1
    537a:	469c      	mov	ip, r3
    537c:	44e0      	add	r8, ip
    537e:	4643      	mov	r3, r8
    5380:	60bc      	str	r4, [r7, #8]
    5382:	607b      	str	r3, [r7, #4]
    5384:	2b07      	cmp	r3, #7
    5386:	dd00      	ble.n	538a <_vfprintf_r+0x936>
    5388:	e0e0      	b.n	554c <_vfprintf_r+0xaf8>
    538a:	3608      	adds	r6, #8
    538c:	ab21      	add	r3, sp, #132	; 0x84
    538e:	6033      	str	r3, [r6, #0]
    5390:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    5392:	469c      	mov	ip, r3
    5394:	6073      	str	r3, [r6, #4]
    5396:	4643      	mov	r3, r8
    5398:	4464      	add	r4, ip
    539a:	3301      	adds	r3, #1
    539c:	60bc      	str	r4, [r7, #8]
    539e:	607b      	str	r3, [r7, #4]
    53a0:	2b07      	cmp	r3, #7
    53a2:	dc00      	bgt.n	53a6 <_vfprintf_r+0x952>
    53a4:	e758      	b.n	5258 <_vfprintf_r+0x804>
    53a6:	003a      	movs	r2, r7
    53a8:	4659      	mov	r1, fp
    53aa:	9806      	ldr	r0, [sp, #24]
    53ac:	f003 fdb4 	bl	8f18 <__sprint_r>
    53b0:	2800      	cmp	r0, #0
    53b2:	d000      	beq.n	53b6 <_vfprintf_r+0x962>
    53b4:	e0de      	b.n	5574 <_vfprintf_r+0xb20>
    53b6:	68bc      	ldr	r4, [r7, #8]
    53b8:	ae32      	add	r6, sp, #200	; 0xc8
    53ba:	e74e      	b.n	525a <_vfprintf_r+0x806>
    53bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    53be:	2b65      	cmp	r3, #101	; 0x65
    53c0:	ddab      	ble.n	531a <_vfprintf_r+0x8c6>
    53c2:	2200      	movs	r2, #0
    53c4:	2300      	movs	r3, #0
    53c6:	9816      	ldr	r0, [sp, #88]	; 0x58
    53c8:	9915      	ldr	r1, [sp, #84]	; 0x54
    53ca:	f7ff f81d 	bl	4408 <__aeabi_dcmpeq>
    53ce:	2800      	cmp	r0, #0
    53d0:	d100      	bne.n	53d4 <_vfprintf_r+0x980>
    53d2:	e134      	b.n	563e <_vfprintf_r+0xbea>
    53d4:	4b85      	ldr	r3, [pc, #532]	; (55ec <_vfprintf_r+0xb98>)
    53d6:	3401      	adds	r4, #1
    53d8:	6033      	str	r3, [r6, #0]
    53da:	2301      	movs	r3, #1
    53dc:	6073      	str	r3, [r6, #4]
    53de:	687b      	ldr	r3, [r7, #4]
    53e0:	60bc      	str	r4, [r7, #8]
    53e2:	3301      	adds	r3, #1
    53e4:	607b      	str	r3, [r7, #4]
    53e6:	2b07      	cmp	r3, #7
    53e8:	dd00      	ble.n	53ec <_vfprintf_r+0x998>
    53ea:	e3dc      	b.n	5ba6 <_vfprintf_r+0x1152>
    53ec:	3608      	adds	r6, #8
    53ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    53f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
    53f2:	4293      	cmp	r3, r2
    53f4:	db03      	blt.n	53fe <_vfprintf_r+0x9aa>
    53f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    53f8:	07db      	lsls	r3, r3, #31
    53fa:	d400      	bmi.n	53fe <_vfprintf_r+0x9aa>
    53fc:	e3b7      	b.n	5b6e <_vfprintf_r+0x111a>
    53fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5400:	68ba      	ldr	r2, [r7, #8]
    5402:	6033      	str	r3, [r6, #0]
    5404:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    5406:	469c      	mov	ip, r3
    5408:	6073      	str	r3, [r6, #4]
    540a:	687b      	ldr	r3, [r7, #4]
    540c:	4462      	add	r2, ip
    540e:	3301      	adds	r3, #1
    5410:	0014      	movs	r4, r2
    5412:	60ba      	str	r2, [r7, #8]
    5414:	607b      	str	r3, [r7, #4]
    5416:	2b07      	cmp	r3, #7
    5418:	dd01      	ble.n	541e <_vfprintf_r+0x9ca>
    541a:	f000 fc19 	bl	5c50 <_vfprintf_r+0x11fc>
    541e:	3608      	adds	r6, #8
    5420:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5422:	1e5d      	subs	r5, r3, #1
    5424:	2d00      	cmp	r5, #0
    5426:	dc00      	bgt.n	542a <_vfprintf_r+0x9d6>
    5428:	e717      	b.n	525a <_vfprintf_r+0x806>
    542a:	4a71      	ldr	r2, [pc, #452]	; (55f0 <_vfprintf_r+0xb9c>)
    542c:	687b      	ldr	r3, [r7, #4]
    542e:	4691      	mov	r9, r2
    5430:	2d10      	cmp	r5, #16
    5432:	dc00      	bgt.n	5436 <_vfprintf_r+0x9e2>
    5434:	e1c3      	b.n	57be <_vfprintf_r+0xd6a>
    5436:	2210      	movs	r2, #16
    5438:	4690      	mov	r8, r2
    543a:	0022      	movs	r2, r4
    543c:	464c      	mov	r4, r9
    543e:	46d9      	mov	r9, fp
    5440:	e004      	b.n	544c <_vfprintf_r+0x9f8>
    5442:	3608      	adds	r6, #8
    5444:	3d10      	subs	r5, #16
    5446:	2d10      	cmp	r5, #16
    5448:	dc00      	bgt.n	544c <_vfprintf_r+0x9f8>
    544a:	e37c      	b.n	5b46 <_vfprintf_r+0x10f2>
    544c:	4641      	mov	r1, r8
    544e:	3210      	adds	r2, #16
    5450:	3301      	adds	r3, #1
    5452:	6034      	str	r4, [r6, #0]
    5454:	6071      	str	r1, [r6, #4]
    5456:	60ba      	str	r2, [r7, #8]
    5458:	607b      	str	r3, [r7, #4]
    545a:	2b07      	cmp	r3, #7
    545c:	ddf1      	ble.n	5442 <_vfprintf_r+0x9ee>
    545e:	003a      	movs	r2, r7
    5460:	4649      	mov	r1, r9
    5462:	9806      	ldr	r0, [sp, #24]
    5464:	f003 fd58 	bl	8f18 <__sprint_r>
    5468:	2800      	cmp	r0, #0
    546a:	d10b      	bne.n	5484 <_vfprintf_r+0xa30>
    546c:	68ba      	ldr	r2, [r7, #8]
    546e:	687b      	ldr	r3, [r7, #4]
    5470:	ae32      	add	r6, sp, #200	; 0xc8
    5472:	e7e7      	b.n	5444 <_vfprintf_r+0x9f0>
    5474:	68bb      	ldr	r3, [r7, #8]
    5476:	46d9      	mov	r9, fp
    5478:	2b00      	cmp	r3, #0
    547a:	d001      	beq.n	5480 <_vfprintf_r+0xa2c>
    547c:	f000 fd4c 	bl	5f18 <_vfprintf_r+0x14c4>
    5480:	2300      	movs	r3, #0
    5482:	607b      	str	r3, [r7, #4]
    5484:	464b      	mov	r3, r9
    5486:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    5488:	07db      	lsls	r3, r3, #31
    548a:	d40d      	bmi.n	54a8 <_vfprintf_r+0xa54>
    548c:	464b      	mov	r3, r9
    548e:	899b      	ldrh	r3, [r3, #12]
    5490:	059a      	lsls	r2, r3, #22
    5492:	d505      	bpl.n	54a0 <_vfprintf_r+0xa4c>
    5494:	065b      	lsls	r3, r3, #25
    5496:	d401      	bmi.n	549c <_vfprintf_r+0xa48>
    5498:	f7ff fb8d 	bl	4bb6 <_vfprintf_r+0x162>
    549c:	f7ff fb88 	bl	4bb0 <_vfprintf_r+0x15c>
    54a0:	464b      	mov	r3, r9
    54a2:	6d98      	ldr	r0, [r3, #88]	; 0x58
    54a4:	f002 fbb8 	bl	7c18 <__retarget_lock_release_recursive>
    54a8:	464b      	mov	r3, r9
    54aa:	899b      	ldrh	r3, [r3, #12]
    54ac:	e7f2      	b.n	5494 <_vfprintf_r+0xa40>
    54ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    54b0:	9a08      	ldr	r2, [sp, #32]
    54b2:	1a9d      	subs	r5, r3, r2
    54b4:	2d00      	cmp	r5, #0
    54b6:	dc00      	bgt.n	54ba <_vfprintf_r+0xa66>
    54b8:	e685      	b.n	51c6 <_vfprintf_r+0x772>
    54ba:	4a4d      	ldr	r2, [pc, #308]	; (55f0 <_vfprintf_r+0xb9c>)
    54bc:	687b      	ldr	r3, [r7, #4]
    54be:	4691      	mov	r9, r2
    54c0:	2d10      	cmp	r5, #16
    54c2:	dd24      	ble.n	550e <_vfprintf_r+0xaba>
    54c4:	2210      	movs	r2, #16
    54c6:	0021      	movs	r1, r4
    54c8:	4690      	mov	r8, r2
    54ca:	465c      	mov	r4, fp
    54cc:	0032      	movs	r2, r6
    54ce:	464e      	mov	r6, r9
    54d0:	e003      	b.n	54da <_vfprintf_r+0xa86>
    54d2:	3d10      	subs	r5, #16
    54d4:	3208      	adds	r2, #8
    54d6:	2d10      	cmp	r5, #16
    54d8:	dd15      	ble.n	5506 <_vfprintf_r+0xab2>
    54da:	4640      	mov	r0, r8
    54dc:	3110      	adds	r1, #16
    54de:	3301      	adds	r3, #1
    54e0:	6016      	str	r6, [r2, #0]
    54e2:	6050      	str	r0, [r2, #4]
    54e4:	60b9      	str	r1, [r7, #8]
    54e6:	607b      	str	r3, [r7, #4]
    54e8:	2b07      	cmp	r3, #7
    54ea:	ddf2      	ble.n	54d2 <_vfprintf_r+0xa7e>
    54ec:	003a      	movs	r2, r7
    54ee:	0021      	movs	r1, r4
    54f0:	9806      	ldr	r0, [sp, #24]
    54f2:	f003 fd11 	bl	8f18 <__sprint_r>
    54f6:	2800      	cmp	r0, #0
    54f8:	d115      	bne.n	5526 <_vfprintf_r+0xad2>
    54fa:	3d10      	subs	r5, #16
    54fc:	68b9      	ldr	r1, [r7, #8]
    54fe:	687b      	ldr	r3, [r7, #4]
    5500:	aa32      	add	r2, sp, #200	; 0xc8
    5502:	2d10      	cmp	r5, #16
    5504:	dce9      	bgt.n	54da <_vfprintf_r+0xa86>
    5506:	46a3      	mov	fp, r4
    5508:	46b1      	mov	r9, r6
    550a:	000c      	movs	r4, r1
    550c:	0016      	movs	r6, r2
    550e:	464a      	mov	r2, r9
    5510:	1964      	adds	r4, r4, r5
    5512:	3301      	adds	r3, #1
    5514:	6032      	str	r2, [r6, #0]
    5516:	6075      	str	r5, [r6, #4]
    5518:	60bc      	str	r4, [r7, #8]
    551a:	607b      	str	r3, [r7, #4]
    551c:	2b07      	cmp	r3, #7
    551e:	dd00      	ble.n	5522 <_vfprintf_r+0xace>
    5520:	e263      	b.n	59ea <_vfprintf_r+0xf96>
    5522:	3608      	adds	r6, #8
    5524:	e64f      	b.n	51c6 <_vfprintf_r+0x772>
    5526:	46a1      	mov	r9, r4
    5528:	e7ac      	b.n	5484 <_vfprintf_r+0xa30>
    552a:	2301      	movs	r3, #1
    552c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    552e:	4213      	tst	r3, r2
    5530:	d000      	beq.n	5534 <_vfprintf_r+0xae0>
    5532:	e6f6      	b.n	5322 <_vfprintf_r+0x8ce>
    5534:	6073      	str	r3, [r6, #4]
    5536:	687b      	ldr	r3, [r7, #4]
    5538:	9a11      	ldr	r2, [sp, #68]	; 0x44
    553a:	3301      	adds	r3, #1
    553c:	3401      	adds	r4, #1
    553e:	6032      	str	r2, [r6, #0]
    5540:	60bc      	str	r4, [r7, #8]
    5542:	4698      	mov	r8, r3
    5544:	607b      	str	r3, [r7, #4]
    5546:	2b07      	cmp	r3, #7
    5548:	dc00      	bgt.n	554c <_vfprintf_r+0xaf8>
    554a:	e71e      	b.n	538a <_vfprintf_r+0x936>
    554c:	003a      	movs	r2, r7
    554e:	4659      	mov	r1, fp
    5550:	9806      	ldr	r0, [sp, #24]
    5552:	f003 fce1 	bl	8f18 <__sprint_r>
    5556:	2800      	cmp	r0, #0
    5558:	d10c      	bne.n	5574 <_vfprintf_r+0xb20>
    555a:	687b      	ldr	r3, [r7, #4]
    555c:	68bc      	ldr	r4, [r7, #8]
    555e:	4698      	mov	r8, r3
    5560:	ae32      	add	r6, sp, #200	; 0xc8
    5562:	e713      	b.n	538c <_vfprintf_r+0x938>
    5564:	003a      	movs	r2, r7
    5566:	4659      	mov	r1, fp
    5568:	9806      	ldr	r0, [sp, #24]
    556a:	f003 fcd5 	bl	8f18 <__sprint_r>
    556e:	2800      	cmp	r0, #0
    5570:	d100      	bne.n	5574 <_vfprintf_r+0xb20>
    5572:	e6cd      	b.n	5310 <_vfprintf_r+0x8bc>
    5574:	46d9      	mov	r9, fp
    5576:	e785      	b.n	5484 <_vfprintf_r+0xa30>
    5578:	9c09      	ldr	r4, [sp, #36]	; 0x24
    557a:	2b01      	cmp	r3, #1
    557c:	d100      	bne.n	5580 <_vfprintf_r+0xb2c>
    557e:	e148      	b.n	5812 <_vfprintf_r+0xdbe>
    5580:	2b02      	cmp	r3, #2
    5582:	d123      	bne.n	55cc <_vfprintf_r+0xb78>
    5584:	9409      	str	r4, [sp, #36]	; 0x24
    5586:	2300      	movs	r3, #0
    5588:	2400      	movs	r4, #0
    558a:	930c      	str	r3, [sp, #48]	; 0x30
    558c:	940d      	str	r4, [sp, #52]	; 0x34
    558e:	e4a1      	b.n	4ed4 <_vfprintf_r+0x480>
    5590:	003a      	movs	r2, r7
    5592:	4659      	mov	r1, fp
    5594:	9806      	ldr	r0, [sp, #24]
    5596:	f003 fcbf 	bl	8f18 <__sprint_r>
    559a:	2800      	cmp	r0, #0
    559c:	d1ea      	bne.n	5574 <_vfprintf_r+0xb20>
    559e:	68bc      	ldr	r4, [r7, #8]
    55a0:	ae32      	add	r6, sp, #200	; 0xc8
    55a2:	e648      	b.n	5236 <_vfprintf_r+0x7e2>
    55a4:	003a      	movs	r2, r7
    55a6:	4659      	mov	r1, fp
    55a8:	9806      	ldr	r0, [sp, #24]
    55aa:	f003 fcb5 	bl	8f18 <__sprint_r>
    55ae:	2800      	cmp	r0, #0
    55b0:	d1e0      	bne.n	5574 <_vfprintf_r+0xb20>
    55b2:	68bc      	ldr	r4, [r7, #8]
    55b4:	ae32      	add	r6, sp, #200	; 0xc8
    55b6:	e5f2      	b.n	519e <_vfprintf_r+0x74a>
    55b8:	003a      	movs	r2, r7
    55ba:	4659      	mov	r1, fp
    55bc:	9806      	ldr	r0, [sp, #24]
    55be:	f003 fcab 	bl	8f18 <__sprint_r>
    55c2:	2800      	cmp	r0, #0
    55c4:	d1d6      	bne.n	5574 <_vfprintf_r+0xb20>
    55c6:	68bc      	ldr	r4, [r7, #8]
    55c8:	ae32      	add	r6, sp, #200	; 0xc8
    55ca:	e5f8      	b.n	51be <_vfprintf_r+0x76a>
    55cc:	9409      	str	r4, [sp, #36]	; 0x24
    55ce:	2300      	movs	r3, #0
    55d0:	2400      	movs	r4, #0
    55d2:	930c      	str	r3, [sp, #48]	; 0x30
    55d4:	940d      	str	r4, [sp, #52]	; 0x34
    55d6:	980c      	ldr	r0, [sp, #48]	; 0x30
    55d8:	990d      	ldr	r1, [sp, #52]	; 0x34
    55da:	4653      	mov	r3, sl
    55dc:	aa32      	add	r2, sp, #200	; 0xc8
    55de:	4691      	mov	r9, r2
    55e0:	9308      	str	r3, [sp, #32]
    55e2:	46b2      	mov	sl, r6
    55e4:	e007      	b.n	55f6 <_vfprintf_r+0xba2>
    55e6:	46c0      	nop			; (mov r8, r8)
    55e8:	0000a2bc 	.word	0x0000a2bc
    55ec:	0000a2b8 	.word	0x0000a2b8
    55f0:	0000a2cc 	.word	0x0000a2cc
    55f4:	46a1      	mov	r9, r4
    55f6:	074a      	lsls	r2, r1, #29
    55f8:	4694      	mov	ip, r2
    55fa:	464b      	mov	r3, r9
    55fc:	4665      	mov	r5, ip
    55fe:	1e5c      	subs	r4, r3, #1
    5600:	08c6      	lsrs	r6, r0, #3
    5602:	2307      	movs	r3, #7
    5604:	08ca      	lsrs	r2, r1, #3
    5606:	4335      	orrs	r5, r6
    5608:	0011      	movs	r1, r2
    560a:	002a      	movs	r2, r5
    560c:	4003      	ands	r3, r0
    560e:	3330      	adds	r3, #48	; 0x30
    5610:	7023      	strb	r3, [r4, #0]
    5612:	0028      	movs	r0, r5
    5614:	430a      	orrs	r2, r1
    5616:	d1ed      	bne.n	55f4 <_vfprintf_r+0xba0>
    5618:	900c      	str	r0, [sp, #48]	; 0x30
    561a:	910d      	str	r1, [sp, #52]	; 0x34
    561c:	9908      	ldr	r1, [sp, #32]
    561e:	4656      	mov	r6, sl
    5620:	468a      	mov	sl, r1
    5622:	9909      	ldr	r1, [sp, #36]	; 0x24
    5624:	464a      	mov	r2, r9
    5626:	9411      	str	r4, [sp, #68]	; 0x44
    5628:	07c9      	lsls	r1, r1, #31
    562a:	d500      	bpl.n	562e <_vfprintf_r+0xbda>
    562c:	e0e0      	b.n	57f0 <_vfprintf_r+0xd9c>
    562e:	ab32      	add	r3, sp, #200	; 0xc8
    5630:	1b1b      	subs	r3, r3, r4
    5632:	930e      	str	r3, [sp, #56]	; 0x38
    5634:	f7ff fb7b 	bl	4d2e <_vfprintf_r+0x2da>
    5638:	9c07      	ldr	r4, [sp, #28]
    563a:	f7ff fa7d 	bl	4b38 <_vfprintf_r+0xe4>
    563e:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5640:	2800      	cmp	r0, #0
    5642:	dc00      	bgt.n	5646 <_vfprintf_r+0xbf2>
    5644:	e2b9      	b.n	5bba <_vfprintf_r+0x1166>
    5646:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5648:	9914      	ldr	r1, [sp, #80]	; 0x50
    564a:	0013      	movs	r3, r2
    564c:	4690      	mov	r8, r2
    564e:	428b      	cmp	r3, r1
    5650:	dd00      	ble.n	5654 <_vfprintf_r+0xc00>
    5652:	4688      	mov	r8, r1
    5654:	4643      	mov	r3, r8
    5656:	2b00      	cmp	r3, #0
    5658:	dd0c      	ble.n	5674 <_vfprintf_r+0xc20>
    565a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    565c:	4444      	add	r4, r8
    565e:	6033      	str	r3, [r6, #0]
    5660:	4643      	mov	r3, r8
    5662:	6073      	str	r3, [r6, #4]
    5664:	687b      	ldr	r3, [r7, #4]
    5666:	60bc      	str	r4, [r7, #8]
    5668:	3301      	adds	r3, #1
    566a:	607b      	str	r3, [r7, #4]
    566c:	2b07      	cmp	r3, #7
    566e:	dd00      	ble.n	5672 <_vfprintf_r+0xc1e>
    5670:	e389      	b.n	5d86 <_vfprintf_r+0x1332>
    5672:	3608      	adds	r6, #8
    5674:	4643      	mov	r3, r8
    5676:	43db      	mvns	r3, r3
    5678:	4642      	mov	r2, r8
    567a:	17db      	asrs	r3, r3, #31
    567c:	4013      	ands	r3, r2
    567e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5680:	1ad3      	subs	r3, r2, r3
    5682:	4698      	mov	r8, r3
    5684:	2b00      	cmp	r3, #0
    5686:	dc00      	bgt.n	568a <_vfprintf_r+0xc36>
    5688:	e0eb      	b.n	5862 <_vfprintf_r+0xe0e>
    568a:	2b10      	cmp	r3, #16
    568c:	dc01      	bgt.n	5692 <_vfprintf_r+0xc3e>
    568e:	f000 fcd9 	bl	6044 <_vfprintf_r+0x15f0>
    5692:	4adc      	ldr	r2, [pc, #880]	; (5a04 <_vfprintf_r+0xfb0>)
    5694:	687b      	ldr	r3, [r7, #4]
    5696:	4691      	mov	r9, r2
    5698:	2210      	movs	r2, #16
    569a:	464d      	mov	r5, r9
    569c:	4692      	mov	sl, r2
    569e:	0022      	movs	r2, r4
    56a0:	4644      	mov	r4, r8
    56a2:	46d8      	mov	r8, fp
    56a4:	e004      	b.n	56b0 <_vfprintf_r+0xc5c>
    56a6:	3608      	adds	r6, #8
    56a8:	3c10      	subs	r4, #16
    56aa:	2c10      	cmp	r4, #16
    56ac:	dc00      	bgt.n	56b0 <_vfprintf_r+0xc5c>
    56ae:	e0bf      	b.n	5830 <_vfprintf_r+0xddc>
    56b0:	4651      	mov	r1, sl
    56b2:	3210      	adds	r2, #16
    56b4:	3301      	adds	r3, #1
    56b6:	6035      	str	r5, [r6, #0]
    56b8:	6071      	str	r1, [r6, #4]
    56ba:	60ba      	str	r2, [r7, #8]
    56bc:	607b      	str	r3, [r7, #4]
    56be:	2b07      	cmp	r3, #7
    56c0:	ddf1      	ble.n	56a6 <_vfprintf_r+0xc52>
    56c2:	003a      	movs	r2, r7
    56c4:	4641      	mov	r1, r8
    56c6:	9806      	ldr	r0, [sp, #24]
    56c8:	f003 fc26 	bl	8f18 <__sprint_r>
    56cc:	2800      	cmp	r0, #0
    56ce:	d000      	beq.n	56d2 <_vfprintf_r+0xc7e>
    56d0:	e3b6      	b.n	5e40 <_vfprintf_r+0x13ec>
    56d2:	68ba      	ldr	r2, [r7, #8]
    56d4:	687b      	ldr	r3, [r7, #4]
    56d6:	ae32      	add	r6, sp, #200	; 0xc8
    56d8:	e7e6      	b.n	56a8 <_vfprintf_r+0xc54>
    56da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    56dc:	2b00      	cmp	r3, #0
    56de:	d100      	bne.n	56e2 <_vfprintf_r+0xc8e>
    56e0:	e092      	b.n	5808 <_vfprintf_r+0xdb4>
    56e2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    56e4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    56e6:	ab32      	add	r3, sp, #200	; 0xc8
    56e8:	46b1      	mov	r9, r6
    56ea:	001e      	movs	r6, r3
    56ec:	0020      	movs	r0, r4
    56ee:	0029      	movs	r1, r5
    56f0:	220a      	movs	r2, #10
    56f2:	2300      	movs	r3, #0
    56f4:	f7fd f9b2 	bl	2a5c <__aeabi_uldivmod>
    56f8:	3e01      	subs	r6, #1
    56fa:	3230      	adds	r2, #48	; 0x30
    56fc:	7032      	strb	r2, [r6, #0]
    56fe:	2300      	movs	r3, #0
    5700:	0020      	movs	r0, r4
    5702:	0029      	movs	r1, r5
    5704:	220a      	movs	r2, #10
    5706:	f7fd f9a9 	bl	2a5c <__aeabi_uldivmod>
    570a:	0003      	movs	r3, r0
    570c:	0004      	movs	r4, r0
    570e:	000d      	movs	r5, r1
    5710:	430b      	orrs	r3, r1
    5712:	d1eb      	bne.n	56ec <_vfprintf_r+0xc98>
    5714:	0032      	movs	r2, r6
    5716:	ab32      	add	r3, sp, #200	; 0xc8
    5718:	1a9b      	subs	r3, r3, r2
    571a:	9611      	str	r6, [sp, #68]	; 0x44
    571c:	940c      	str	r4, [sp, #48]	; 0x30
    571e:	950d      	str	r5, [sp, #52]	; 0x34
    5720:	464e      	mov	r6, r9
    5722:	930e      	str	r3, [sp, #56]	; 0x38
    5724:	f7ff fb03 	bl	4d2e <_vfprintf_r+0x2da>
    5728:	2300      	movs	r3, #0
    572a:	930e      	str	r3, [sp, #56]	; 0x38
    572c:	ab32      	add	r3, sp, #200	; 0xc8
    572e:	9311      	str	r3, [sp, #68]	; 0x44
    5730:	f7ff fafd 	bl	4d2e <_vfprintf_r+0x2da>
    5734:	003a      	movs	r2, r7
    5736:	4659      	mov	r1, fp
    5738:	9806      	ldr	r0, [sp, #24]
    573a:	f003 fbed 	bl	8f18 <__sprint_r>
    573e:	2800      	cmp	r0, #0
    5740:	d000      	beq.n	5744 <_vfprintf_r+0xcf0>
    5742:	e717      	b.n	5574 <_vfprintf_r+0xb20>
    5744:	ab16      	add	r3, sp, #88	; 0x58
    5746:	7fdb      	ldrb	r3, [r3, #31]
    5748:	68bc      	ldr	r4, [r7, #8]
    574a:	4698      	mov	r8, r3
    574c:	ae32      	add	r6, sp, #200	; 0xc8
    574e:	e513      	b.n	5178 <_vfprintf_r+0x724>
    5750:	46b1      	mov	r9, r6
    5752:	e697      	b.n	5484 <_vfprintf_r+0xa30>
    5754:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5756:	1e5d      	subs	r5, r3, #1
    5758:	2d00      	cmp	r5, #0
    575a:	dc00      	bgt.n	575e <_vfprintf_r+0xd0a>
    575c:	e616      	b.n	538c <_vfprintf_r+0x938>
    575e:	4ba9      	ldr	r3, [pc, #676]	; (5a04 <_vfprintf_r+0xfb0>)
    5760:	4699      	mov	r9, r3
    5762:	2d10      	cmp	r5, #16
    5764:	dc00      	bgt.n	5768 <_vfprintf_r+0xd14>
    5766:	e10a      	b.n	597e <_vfprintf_r+0xf2a>
    5768:	2310      	movs	r3, #16
    576a:	0022      	movs	r2, r4
    576c:	469a      	mov	sl, r3
    576e:	465c      	mov	r4, fp
    5770:	4643      	mov	r3, r8
    5772:	e004      	b.n	577e <_vfprintf_r+0xd2a>
    5774:	3608      	adds	r6, #8
    5776:	3d10      	subs	r5, #16
    5778:	2d10      	cmp	r5, #16
    577a:	dc00      	bgt.n	577e <_vfprintf_r+0xd2a>
    577c:	e0fc      	b.n	5978 <_vfprintf_r+0xf24>
    577e:	4649      	mov	r1, r9
    5780:	6031      	str	r1, [r6, #0]
    5782:	4651      	mov	r1, sl
    5784:	3210      	adds	r2, #16
    5786:	3301      	adds	r3, #1
    5788:	6071      	str	r1, [r6, #4]
    578a:	60ba      	str	r2, [r7, #8]
    578c:	607b      	str	r3, [r7, #4]
    578e:	2b07      	cmp	r3, #7
    5790:	ddf0      	ble.n	5774 <_vfprintf_r+0xd20>
    5792:	003a      	movs	r2, r7
    5794:	0021      	movs	r1, r4
    5796:	9806      	ldr	r0, [sp, #24]
    5798:	f003 fbbe 	bl	8f18 <__sprint_r>
    579c:	2800      	cmp	r0, #0
    579e:	d000      	beq.n	57a2 <_vfprintf_r+0xd4e>
    57a0:	e6c1      	b.n	5526 <_vfprintf_r+0xad2>
    57a2:	68ba      	ldr	r2, [r7, #8]
    57a4:	687b      	ldr	r3, [r7, #4]
    57a6:	ae32      	add	r6, sp, #200	; 0xc8
    57a8:	e7e5      	b.n	5776 <_vfprintf_r+0xd22>
    57aa:	990c      	ldr	r1, [sp, #48]	; 0x30
    57ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    57ae:	0008      	movs	r0, r1
    57b0:	4310      	orrs	r0, r2
    57b2:	2302      	movs	r3, #2
    57b4:	0002      	movs	r2, r0
    57b6:	f7ff fa93 	bl	4ce0 <_vfprintf_r+0x28c>
    57ba:	46a3      	mov	fp, r4
    57bc:	0014      	movs	r4, r2
    57be:	464a      	mov	r2, r9
    57c0:	1964      	adds	r4, r4, r5
    57c2:	3301      	adds	r3, #1
    57c4:	6032      	str	r2, [r6, #0]
    57c6:	6075      	str	r5, [r6, #4]
    57c8:	60bc      	str	r4, [r7, #8]
    57ca:	607b      	str	r3, [r7, #4]
    57cc:	2b07      	cmp	r3, #7
    57ce:	dc00      	bgt.n	57d2 <_vfprintf_r+0xd7e>
    57d0:	e542      	b.n	5258 <_vfprintf_r+0x804>
    57d2:	e5e8      	b.n	53a6 <_vfprintf_r+0x952>
    57d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    57d6:	681a      	ldr	r2, [r3, #0]
    57d8:	f7ff fa68 	bl	4cac <_vfprintf_r+0x258>
    57dc:	6813      	ldr	r3, [r2, #0]
    57de:	9308      	str	r3, [sp, #32]
    57e0:	f7ff fb57 	bl	4e92 <_vfprintf_r+0x43e>
    57e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    57e6:	681a      	ldr	r2, [r3, #0]
    57e8:	e412      	b.n	5010 <_vfprintf_r+0x5bc>
    57ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    57ec:	681a      	ldr	r2, [r3, #0]
    57ee:	e426      	b.n	503e <_vfprintf_r+0x5ea>
    57f0:	2b30      	cmp	r3, #48	; 0x30
    57f2:	d100      	bne.n	57f6 <_vfprintf_r+0xda2>
    57f4:	e23c      	b.n	5c70 <_vfprintf_r+0x121c>
    57f6:	2330      	movs	r3, #48	; 0x30
    57f8:	3a02      	subs	r2, #2
    57fa:	7013      	strb	r3, [r2, #0]
    57fc:	ab32      	add	r3, sp, #200	; 0xc8
    57fe:	1a9b      	subs	r3, r3, r2
    5800:	930e      	str	r3, [sp, #56]	; 0x38
    5802:	9211      	str	r2, [sp, #68]	; 0x44
    5804:	f7ff fa93 	bl	4d2e <_vfprintf_r+0x2da>
    5808:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    580a:	2b09      	cmp	r3, #9
    580c:	d900      	bls.n	5810 <_vfprintf_r+0xdbc>
    580e:	e768      	b.n	56e2 <_vfprintf_r+0xc8e>
    5810:	9c09      	ldr	r4, [sp, #36]	; 0x24
    5812:	2227      	movs	r2, #39	; 0x27
    5814:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5816:	a928      	add	r1, sp, #160	; 0xa0
    5818:	3330      	adds	r3, #48	; 0x30
    581a:	548b      	strb	r3, [r1, r2]
    581c:	2301      	movs	r3, #1
    581e:	aa16      	add	r2, sp, #88	; 0x58
    5820:	4694      	mov	ip, r2
    5822:	930e      	str	r3, [sp, #56]	; 0x38
    5824:	336e      	adds	r3, #110	; 0x6e
    5826:	4463      	add	r3, ip
    5828:	9409      	str	r4, [sp, #36]	; 0x24
    582a:	9311      	str	r3, [sp, #68]	; 0x44
    582c:	f7ff fa7f 	bl	4d2e <_vfprintf_r+0x2da>
    5830:	46c3      	mov	fp, r8
    5832:	46a9      	mov	r9, r5
    5834:	46a0      	mov	r8, r4
    5836:	0014      	movs	r4, r2
    5838:	464a      	mov	r2, r9
    583a:	6032      	str	r2, [r6, #0]
    583c:	4642      	mov	r2, r8
    583e:	4444      	add	r4, r8
    5840:	3301      	adds	r3, #1
    5842:	6072      	str	r2, [r6, #4]
    5844:	60bc      	str	r4, [r7, #8]
    5846:	607b      	str	r3, [r7, #4]
    5848:	2b07      	cmp	r3, #7
    584a:	dc00      	bgt.n	584e <_vfprintf_r+0xdfa>
    584c:	e18d      	b.n	5b6a <_vfprintf_r+0x1116>
    584e:	003a      	movs	r2, r7
    5850:	4659      	mov	r1, fp
    5852:	9806      	ldr	r0, [sp, #24]
    5854:	f003 fb60 	bl	8f18 <__sprint_r>
    5858:	2800      	cmp	r0, #0
    585a:	d000      	beq.n	585e <_vfprintf_r+0xe0a>
    585c:	e68a      	b.n	5574 <_vfprintf_r+0xb20>
    585e:	68bc      	ldr	r4, [r7, #8]
    5860:	ae32      	add	r6, sp, #200	; 0xc8
    5862:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5864:	9a14      	ldr	r2, [sp, #80]	; 0x50
    5866:	4293      	cmp	r3, r2
    5868:	db00      	blt.n	586c <_vfprintf_r+0xe18>
    586a:	e179      	b.n	5b60 <_vfprintf_r+0x110c>
    586c:	9a18      	ldr	r2, [sp, #96]	; 0x60
    586e:	6032      	str	r2, [r6, #0]
    5870:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5872:	4694      	mov	ip, r2
    5874:	6072      	str	r2, [r6, #4]
    5876:	687a      	ldr	r2, [r7, #4]
    5878:	4464      	add	r4, ip
    587a:	3201      	adds	r2, #1
    587c:	60bc      	str	r4, [r7, #8]
    587e:	607a      	str	r2, [r7, #4]
    5880:	2a07      	cmp	r2, #7
    5882:	dd00      	ble.n	5886 <_vfprintf_r+0xe32>
    5884:	e176      	b.n	5b74 <_vfprintf_r+0x1120>
    5886:	3608      	adds	r6, #8
    5888:	9a14      	ldr	r2, [sp, #80]	; 0x50
    588a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    588c:	1ad3      	subs	r3, r2, r3
    588e:	1a52      	subs	r2, r2, r1
    5890:	4690      	mov	r8, r2
    5892:	429a      	cmp	r2, r3
    5894:	dd00      	ble.n	5898 <_vfprintf_r+0xe44>
    5896:	4698      	mov	r8, r3
    5898:	4642      	mov	r2, r8
    589a:	2a00      	cmp	r2, #0
    589c:	dd0f      	ble.n	58be <_vfprintf_r+0xe6a>
    589e:	9913      	ldr	r1, [sp, #76]	; 0x4c
    58a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
    58a2:	468c      	mov	ip, r1
    58a4:	4462      	add	r2, ip
    58a6:	6032      	str	r2, [r6, #0]
    58a8:	4642      	mov	r2, r8
    58aa:	6072      	str	r2, [r6, #4]
    58ac:	687a      	ldr	r2, [r7, #4]
    58ae:	4444      	add	r4, r8
    58b0:	3201      	adds	r2, #1
    58b2:	60bc      	str	r4, [r7, #8]
    58b4:	607a      	str	r2, [r7, #4]
    58b6:	2a07      	cmp	r2, #7
    58b8:	dd00      	ble.n	58bc <_vfprintf_r+0xe68>
    58ba:	e289      	b.n	5dd0 <_vfprintf_r+0x137c>
    58bc:	3608      	adds	r6, #8
    58be:	4642      	mov	r2, r8
    58c0:	43d5      	mvns	r5, r2
    58c2:	17ed      	asrs	r5, r5, #31
    58c4:	4015      	ands	r5, r2
    58c6:	1b5d      	subs	r5, r3, r5
    58c8:	2d00      	cmp	r5, #0
    58ca:	dc00      	bgt.n	58ce <_vfprintf_r+0xe7a>
    58cc:	e4c5      	b.n	525a <_vfprintf_r+0x806>
    58ce:	4a4d      	ldr	r2, [pc, #308]	; (5a04 <_vfprintf_r+0xfb0>)
    58d0:	687b      	ldr	r3, [r7, #4]
    58d2:	4691      	mov	r9, r2
    58d4:	2d10      	cmp	r5, #16
    58d6:	dc00      	bgt.n	58da <_vfprintf_r+0xe86>
    58d8:	e771      	b.n	57be <_vfprintf_r+0xd6a>
    58da:	2210      	movs	r2, #16
    58dc:	4690      	mov	r8, r2
    58de:	0022      	movs	r2, r4
    58e0:	465c      	mov	r4, fp
    58e2:	e004      	b.n	58ee <_vfprintf_r+0xe9a>
    58e4:	3608      	adds	r6, #8
    58e6:	3d10      	subs	r5, #16
    58e8:	2d10      	cmp	r5, #16
    58ea:	dc00      	bgt.n	58ee <_vfprintf_r+0xe9a>
    58ec:	e765      	b.n	57ba <_vfprintf_r+0xd66>
    58ee:	4649      	mov	r1, r9
    58f0:	6031      	str	r1, [r6, #0]
    58f2:	4641      	mov	r1, r8
    58f4:	3210      	adds	r2, #16
    58f6:	3301      	adds	r3, #1
    58f8:	6071      	str	r1, [r6, #4]
    58fa:	60ba      	str	r2, [r7, #8]
    58fc:	607b      	str	r3, [r7, #4]
    58fe:	2b07      	cmp	r3, #7
    5900:	ddf0      	ble.n	58e4 <_vfprintf_r+0xe90>
    5902:	003a      	movs	r2, r7
    5904:	0021      	movs	r1, r4
    5906:	9806      	ldr	r0, [sp, #24]
    5908:	f003 fb06 	bl	8f18 <__sprint_r>
    590c:	2800      	cmp	r0, #0
    590e:	d000      	beq.n	5912 <_vfprintf_r+0xebe>
    5910:	e609      	b.n	5526 <_vfprintf_r+0xad2>
    5912:	68ba      	ldr	r2, [r7, #8]
    5914:	687b      	ldr	r3, [r7, #4]
    5916:	ae32      	add	r6, sp, #200	; 0xc8
    5918:	e7e5      	b.n	58e6 <_vfprintf_r+0xe92>
    591a:	003a      	movs	r2, r7
    591c:	4659      	mov	r1, fp
    591e:	9806      	ldr	r0, [sp, #24]
    5920:	f003 fafa 	bl	8f18 <__sprint_r>
    5924:	2800      	cmp	r0, #0
    5926:	d000      	beq.n	592a <_vfprintf_r+0xed6>
    5928:	e624      	b.n	5574 <_vfprintf_r+0xb20>
    592a:	68bc      	ldr	r4, [r7, #8]
    592c:	687b      	ldr	r3, [r7, #4]
    592e:	ae32      	add	r6, sp, #200	; 0xc8
    5930:	e504      	b.n	533c <_vfprintf_r+0x8e8>
    5932:	2307      	movs	r3, #7
    5934:	3207      	adds	r2, #7
    5936:	439a      	bics	r2, r3
    5938:	3301      	adds	r3, #1
    593a:	469c      	mov	ip, r3
    593c:	4494      	add	ip, r2
    593e:	4663      	mov	r3, ip
    5940:	930f      	str	r3, [sp, #60]	; 0x3c
    5942:	6853      	ldr	r3, [r2, #4]
    5944:	6812      	ldr	r2, [r2, #0]
    5946:	930d      	str	r3, [sp, #52]	; 0x34
    5948:	920c      	str	r2, [sp, #48]	; 0x30
    594a:	f7ff faa7 	bl	4e9c <_vfprintf_r+0x448>
    594e:	2207      	movs	r2, #7
    5950:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5952:	3307      	adds	r3, #7
    5954:	4393      	bics	r3, r2
    5956:	3201      	adds	r2, #1
    5958:	4694      	mov	ip, r2
    595a:	449c      	add	ip, r3
    595c:	4662      	mov	r2, ip
    595e:	920f      	str	r2, [sp, #60]	; 0x3c
    5960:	681a      	ldr	r2, [r3, #0]
    5962:	685b      	ldr	r3, [r3, #4]
    5964:	0011      	movs	r1, r2
    5966:	001a      	movs	r2, r3
    5968:	0008      	movs	r0, r1
    596a:	4310      	orrs	r0, r2
    596c:	910c      	str	r1, [sp, #48]	; 0x30
    596e:	920d      	str	r2, [sp, #52]	; 0x34
    5970:	2300      	movs	r3, #0
    5972:	0002      	movs	r2, r0
    5974:	f7ff f9b4 	bl	4ce0 <_vfprintf_r+0x28c>
    5978:	46a3      	mov	fp, r4
    597a:	4698      	mov	r8, r3
    597c:	0014      	movs	r4, r2
    597e:	464b      	mov	r3, r9
    5980:	6075      	str	r5, [r6, #4]
    5982:	6033      	str	r3, [r6, #0]
    5984:	1964      	adds	r4, r4, r5
    5986:	e4f7      	b.n	5378 <_vfprintf_r+0x924>
    5988:	003a      	movs	r2, r7
    598a:	4659      	mov	r1, fp
    598c:	9806      	ldr	r0, [sp, #24]
    598e:	f003 fac3 	bl	8f18 <__sprint_r>
    5992:	2800      	cmp	r0, #0
    5994:	d000      	beq.n	5998 <_vfprintf_r+0xf44>
    5996:	e5ed      	b.n	5574 <_vfprintf_r+0xb20>
    5998:	687b      	ldr	r3, [r7, #4]
    599a:	68bc      	ldr	r4, [r7, #8]
    599c:	4698      	mov	r8, r3
    599e:	ae32      	add	r6, sp, #200	; 0xc8
    59a0:	e4da      	b.n	5358 <_vfprintf_r+0x904>
    59a2:	2207      	movs	r2, #7
    59a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    59a6:	3307      	adds	r3, #7
    59a8:	4393      	bics	r3, r2
    59aa:	3201      	adds	r2, #1
    59ac:	4694      	mov	ip, r2
    59ae:	449c      	add	ip, r3
    59b0:	4662      	mov	r2, ip
    59b2:	920f      	str	r2, [sp, #60]	; 0x3c
    59b4:	681a      	ldr	r2, [r3, #0]
    59b6:	685b      	ldr	r3, [r3, #4]
    59b8:	0011      	movs	r1, r2
    59ba:	001a      	movs	r2, r3
    59bc:	0008      	movs	r0, r1
    59be:	4310      	orrs	r0, r2
    59c0:	910c      	str	r1, [sp, #48]	; 0x30
    59c2:	920d      	str	r2, [sp, #52]	; 0x34
    59c4:	2301      	movs	r3, #1
    59c6:	0002      	movs	r2, r0
    59c8:	f7ff f98a 	bl	4ce0 <_vfprintf_r+0x28c>
    59cc:	2207      	movs	r2, #7
    59ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    59d0:	3307      	adds	r3, #7
    59d2:	4393      	bics	r3, r2
    59d4:	3201      	adds	r2, #1
    59d6:	4694      	mov	ip, r2
    59d8:	449c      	add	ip, r3
    59da:	4662      	mov	r2, ip
    59dc:	920f      	str	r2, [sp, #60]	; 0x3c
    59de:	681a      	ldr	r2, [r3, #0]
    59e0:	685b      	ldr	r3, [r3, #4]
    59e2:	920c      	str	r2, [sp, #48]	; 0x30
    59e4:	930d      	str	r3, [sp, #52]	; 0x34
    59e6:	f7ff f966 	bl	4cb6 <_vfprintf_r+0x262>
    59ea:	003a      	movs	r2, r7
    59ec:	4659      	mov	r1, fp
    59ee:	9806      	ldr	r0, [sp, #24]
    59f0:	f003 fa92 	bl	8f18 <__sprint_r>
    59f4:	2800      	cmp	r0, #0
    59f6:	d000      	beq.n	59fa <_vfprintf_r+0xfa6>
    59f8:	e5bc      	b.n	5574 <_vfprintf_r+0xb20>
    59fa:	68bc      	ldr	r4, [r7, #8]
    59fc:	ae32      	add	r6, sp, #200	; 0xc8
    59fe:	f7ff fbe2 	bl	51c6 <_vfprintf_r+0x772>
    5a02:	46c0      	nop			; (mov r8, r8)
    5a04:	0000a2cc 	.word	0x0000a2cc
    5a08:	980c      	ldr	r0, [sp, #48]	; 0x30
    5a0a:	990d      	ldr	r1, [sp, #52]	; 0x34
    5a0c:	2300      	movs	r3, #0
    5a0e:	4242      	negs	r2, r0
    5a10:	418b      	sbcs	r3, r1
    5a12:	0011      	movs	r1, r2
    5a14:	001a      	movs	r2, r3
    5a16:	232d      	movs	r3, #45	; 0x2d
    5a18:	a816      	add	r0, sp, #88	; 0x58
    5a1a:	77c3      	strb	r3, [r0, #31]
    5a1c:	0008      	movs	r0, r1
    5a1e:	4310      	orrs	r0, r2
    5a20:	910c      	str	r1, [sp, #48]	; 0x30
    5a22:	920d      	str	r2, [sp, #52]	; 0x34
    5a24:	4698      	mov	r8, r3
    5a26:	0002      	movs	r2, r0
    5a28:	3b2c      	subs	r3, #44	; 0x2c
    5a2a:	f7ff f95d 	bl	4ce8 <_vfprintf_r+0x294>
    5a2e:	9916      	ldr	r1, [sp, #88]	; 0x58
    5a30:	9d15      	ldr	r5, [sp, #84]	; 0x54
    5a32:	000a      	movs	r2, r1
    5a34:	0008      	movs	r0, r1
    5a36:	002b      	movs	r3, r5
    5a38:	0029      	movs	r1, r5
    5a3a:	f004 f927 	bl	9c8c <__aeabi_dcmpun>
    5a3e:	2800      	cmp	r0, #0
    5a40:	d000      	beq.n	5a44 <_vfprintf_r+0xff0>
    5a42:	e2c6      	b.n	5fd2 <_vfprintf_r+0x157e>
    5a44:	4653      	mov	r3, sl
    5a46:	3301      	adds	r3, #1
    5a48:	d100      	bne.n	5a4c <_vfprintf_r+0xff8>
    5a4a:	e09f      	b.n	5b8c <_vfprintf_r+0x1138>
    5a4c:	2320      	movs	r3, #32
    5a4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5a50:	439a      	bics	r2, r3
    5a52:	920e      	str	r2, [sp, #56]	; 0x38
    5a54:	2a47      	cmp	r2, #71	; 0x47
    5a56:	d100      	bne.n	5a5a <_vfprintf_r+0x1006>
    5a58:	e1a1      	b.n	5d9e <_vfprintf_r+0x134a>
    5a5a:	2380      	movs	r3, #128	; 0x80
    5a5c:	005b      	lsls	r3, r3, #1
    5a5e:	4323      	orrs	r3, r4
    5a60:	9309      	str	r3, [sp, #36]	; 0x24
    5a62:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5a64:	2b00      	cmp	r3, #0
    5a66:	da00      	bge.n	5a6a <_vfprintf_r+0x1016>
    5a68:	e1ed      	b.n	5e46 <_vfprintf_r+0x13f2>
    5a6a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    5a6c:	9308      	str	r3, [sp, #32]
    5a6e:	2300      	movs	r3, #0
    5a70:	4691      	mov	r9, r2
    5a72:	9310      	str	r3, [sp, #64]	; 0x40
    5a74:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5a76:	2b66      	cmp	r3, #102	; 0x66
    5a78:	d100      	bne.n	5a7c <_vfprintf_r+0x1028>
    5a7a:	e1b8      	b.n	5dee <_vfprintf_r+0x139a>
    5a7c:	2b46      	cmp	r3, #70	; 0x46
    5a7e:	d100      	bne.n	5a82 <_vfprintf_r+0x102e>
    5a80:	e237      	b.n	5ef2 <_vfprintf_r+0x149e>
    5a82:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5a84:	9806      	ldr	r0, [sp, #24]
    5a86:	3a45      	subs	r2, #69	; 0x45
    5a88:	0013      	movs	r3, r2
    5a8a:	4259      	negs	r1, r3
    5a8c:	4159      	adcs	r1, r3
    5a8e:	ab20      	add	r3, sp, #128	; 0x80
    5a90:	000d      	movs	r5, r1
    5a92:	9303      	str	r3, [sp, #12]
    5a94:	ab1f      	add	r3, sp, #124	; 0x7c
    5a96:	9302      	str	r3, [sp, #8]
    5a98:	2302      	movs	r3, #2
    5a9a:	aa23      	add	r2, sp, #140	; 0x8c
    5a9c:	4455      	add	r5, sl
    5a9e:	921b      	str	r2, [sp, #108]	; 0x6c
    5aa0:	9204      	str	r2, [sp, #16]
    5aa2:	9300      	str	r3, [sp, #0]
    5aa4:	9501      	str	r5, [sp, #4]
    5aa6:	9b08      	ldr	r3, [sp, #32]
    5aa8:	464a      	mov	r2, r9
    5aaa:	f000 fcab 	bl	6404 <_dtoa_r>
    5aae:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5ab0:	9011      	str	r0, [sp, #68]	; 0x44
    5ab2:	2b67      	cmp	r3, #103	; 0x67
    5ab4:	d000      	beq.n	5ab8 <_vfprintf_r+0x1064>
    5ab6:	e20b      	b.n	5ed0 <_vfprintf_r+0x147c>
    5ab8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5aba:	4698      	mov	r8, r3
    5abc:	44a8      	add	r8, r5
    5abe:	07e3      	lsls	r3, r4, #31
    5ac0:	d400      	bmi.n	5ac4 <_vfprintf_r+0x1070>
    5ac2:	e277      	b.n	5fb4 <_vfprintf_r+0x1560>
    5ac4:	2300      	movs	r3, #0
    5ac6:	2200      	movs	r2, #0
    5ac8:	4648      	mov	r0, r9
    5aca:	9908      	ldr	r1, [sp, #32]
    5acc:	f7fe fc9c 	bl	4408 <__aeabi_dcmpeq>
    5ad0:	4643      	mov	r3, r8
    5ad2:	2800      	cmp	r0, #0
    5ad4:	d10a      	bne.n	5aec <_vfprintf_r+0x1098>
    5ad6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5ad8:	4543      	cmp	r3, r8
    5ada:	d207      	bcs.n	5aec <_vfprintf_r+0x1098>
    5adc:	2130      	movs	r1, #48	; 0x30
    5ade:	4640      	mov	r0, r8
    5ae0:	1c5a      	adds	r2, r3, #1
    5ae2:	9223      	str	r2, [sp, #140]	; 0x8c
    5ae4:	7019      	strb	r1, [r3, #0]
    5ae6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5ae8:	4298      	cmp	r0, r3
    5aea:	d8f9      	bhi.n	5ae0 <_vfprintf_r+0x108c>
    5aec:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5aee:	1a9b      	subs	r3, r3, r2
    5af0:	9314      	str	r3, [sp, #80]	; 0x50
    5af2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5af4:	2b47      	cmp	r3, #71	; 0x47
    5af6:	d100      	bne.n	5afa <_vfprintf_r+0x10a6>
    5af8:	e0d0      	b.n	5c9c <_vfprintf_r+0x1248>
    5afa:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5afc:	2b65      	cmp	r3, #101	; 0x65
    5afe:	dc00      	bgt.n	5b02 <_vfprintf_r+0x10ae>
    5b00:	e2d5      	b.n	60ae <_vfprintf_r+0x165a>
    5b02:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5b04:	2b66      	cmp	r3, #102	; 0x66
    5b06:	d100      	bne.n	5b0a <_vfprintf_r+0x10b6>
    5b08:	e1c6      	b.n	5e98 <_vfprintf_r+0x1444>
    5b0a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5b0c:	9313      	str	r3, [sp, #76]	; 0x4c
    5b0e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5b10:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5b12:	0019      	movs	r1, r3
    5b14:	4291      	cmp	r1, r2
    5b16:	dd00      	ble.n	5b1a <_vfprintf_r+0x10c6>
    5b18:	e1a0      	b.n	5e5c <_vfprintf_r+0x1408>
    5b1a:	07e3      	lsls	r3, r4, #31
    5b1c:	d500      	bpl.n	5b20 <_vfprintf_r+0x10cc>
    5b1e:	e242      	b.n	5fa6 <_vfprintf_r+0x1552>
    5b20:	43d3      	mvns	r3, r2
    5b22:	17db      	asrs	r3, r3, #31
    5b24:	0011      	movs	r1, r2
    5b26:	401a      	ands	r2, r3
    5b28:	2367      	movs	r3, #103	; 0x67
    5b2a:	9208      	str	r2, [sp, #32]
    5b2c:	910e      	str	r1, [sp, #56]	; 0x38
    5b2e:	9312      	str	r3, [sp, #72]	; 0x48
    5b30:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5b32:	2b00      	cmp	r3, #0
    5b34:	d000      	beq.n	5b38 <_vfprintf_r+0x10e4>
    5b36:	e0a9      	b.n	5c8c <_vfprintf_r+0x1238>
    5b38:	ab16      	add	r3, sp, #88	; 0x58
    5b3a:	7fdb      	ldrb	r3, [r3, #31]
    5b3c:	4698      	mov	r8, r3
    5b3e:	2300      	movs	r3, #0
    5b40:	469a      	mov	sl, r3
    5b42:	f7ff f8fc 	bl	4d3e <_vfprintf_r+0x2ea>
    5b46:	46cb      	mov	fp, r9
    5b48:	46a1      	mov	r9, r4
    5b4a:	0014      	movs	r4, r2
    5b4c:	e637      	b.n	57be <_vfprintf_r+0xd6a>
    5b4e:	464b      	mov	r3, r9
    5b50:	6d98      	ldr	r0, [r3, #88]	; 0x58
    5b52:	f002 f861 	bl	7c18 <__retarget_lock_release_recursive>
    5b56:	2301      	movs	r3, #1
    5b58:	425b      	negs	r3, r3
    5b5a:	930a      	str	r3, [sp, #40]	; 0x28
    5b5c:	f7ff f82b 	bl	4bb6 <_vfprintf_r+0x162>
    5b60:	9a09      	ldr	r2, [sp, #36]	; 0x24
    5b62:	07d2      	lsls	r2, r2, #31
    5b64:	d400      	bmi.n	5b68 <_vfprintf_r+0x1114>
    5b66:	e68f      	b.n	5888 <_vfprintf_r+0xe34>
    5b68:	e680      	b.n	586c <_vfprintf_r+0xe18>
    5b6a:	3608      	adds	r6, #8
    5b6c:	e679      	b.n	5862 <_vfprintf_r+0xe0e>
    5b6e:	68bc      	ldr	r4, [r7, #8]
    5b70:	f7ff fb73 	bl	525a <_vfprintf_r+0x806>
    5b74:	003a      	movs	r2, r7
    5b76:	4659      	mov	r1, fp
    5b78:	9806      	ldr	r0, [sp, #24]
    5b7a:	f003 f9cd 	bl	8f18 <__sprint_r>
    5b7e:	2800      	cmp	r0, #0
    5b80:	d000      	beq.n	5b84 <_vfprintf_r+0x1130>
    5b82:	e4f7      	b.n	5574 <_vfprintf_r+0xb20>
    5b84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5b86:	68bc      	ldr	r4, [r7, #8]
    5b88:	ae32      	add	r6, sp, #200	; 0xc8
    5b8a:	e67d      	b.n	5888 <_vfprintf_r+0xe34>
    5b8c:	2320      	movs	r3, #32
    5b8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5b90:	439a      	bics	r2, r3
    5b92:	3b1a      	subs	r3, #26
    5b94:	920e      	str	r2, [sp, #56]	; 0x38
    5b96:	469a      	mov	sl, r3
    5b98:	e75f      	b.n	5a5a <_vfprintf_r+0x1006>
    5b9a:	232d      	movs	r3, #45	; 0x2d
    5b9c:	aa16      	add	r2, sp, #88	; 0x58
    5b9e:	77d3      	strb	r3, [r2, #31]
    5ba0:	4698      	mov	r8, r3
    5ba2:	f7ff faa8 	bl	50f6 <_vfprintf_r+0x6a2>
    5ba6:	003a      	movs	r2, r7
    5ba8:	4659      	mov	r1, fp
    5baa:	9806      	ldr	r0, [sp, #24]
    5bac:	f003 f9b4 	bl	8f18 <__sprint_r>
    5bb0:	2800      	cmp	r0, #0
    5bb2:	d000      	beq.n	5bb6 <_vfprintf_r+0x1162>
    5bb4:	e4de      	b.n	5574 <_vfprintf_r+0xb20>
    5bb6:	ae32      	add	r6, sp, #200	; 0xc8
    5bb8:	e419      	b.n	53ee <_vfprintf_r+0x99a>
    5bba:	4be3      	ldr	r3, [pc, #908]	; (5f48 <_vfprintf_r+0x14f4>)
    5bbc:	3401      	adds	r4, #1
    5bbe:	6033      	str	r3, [r6, #0]
    5bc0:	2301      	movs	r3, #1
    5bc2:	6073      	str	r3, [r6, #4]
    5bc4:	687b      	ldr	r3, [r7, #4]
    5bc6:	60bc      	str	r4, [r7, #8]
    5bc8:	3301      	adds	r3, #1
    5bca:	607b      	str	r3, [r7, #4]
    5bcc:	2b07      	cmp	r3, #7
    5bce:	dd00      	ble.n	5bd2 <_vfprintf_r+0x117e>
    5bd0:	e155      	b.n	5e7e <_vfprintf_r+0x142a>
    5bd2:	3608      	adds	r6, #8
    5bd4:	2800      	cmp	r0, #0
    5bd6:	d107      	bne.n	5be8 <_vfprintf_r+0x1194>
    5bd8:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5bda:	2b00      	cmp	r3, #0
    5bdc:	d104      	bne.n	5be8 <_vfprintf_r+0x1194>
    5bde:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5be0:	07db      	lsls	r3, r3, #31
    5be2:	d401      	bmi.n	5be8 <_vfprintf_r+0x1194>
    5be4:	f7ff fb39 	bl	525a <_vfprintf_r+0x806>
    5be8:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5bea:	6033      	str	r3, [r6, #0]
    5bec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    5bee:	1919      	adds	r1, r3, r4
    5bf0:	6073      	str	r3, [r6, #4]
    5bf2:	687b      	ldr	r3, [r7, #4]
    5bf4:	60b9      	str	r1, [r7, #8]
    5bf6:	3301      	adds	r3, #1
    5bf8:	607b      	str	r3, [r7, #4]
    5bfa:	2b07      	cmp	r3, #7
    5bfc:	dd00      	ble.n	5c00 <_vfprintf_r+0x11ac>
    5bfe:	e1c4      	b.n	5f8a <_vfprintf_r+0x1536>
    5c00:	0032      	movs	r2, r6
    5c02:	3208      	adds	r2, #8
    5c04:	2800      	cmp	r0, #0
    5c06:	da00      	bge.n	5c0a <_vfprintf_r+0x11b6>
    5c08:	e195      	b.n	5f36 <_vfprintf_r+0x14e2>
    5c0a:	9811      	ldr	r0, [sp, #68]	; 0x44
    5c0c:	3301      	adds	r3, #1
    5c0e:	6010      	str	r0, [r2, #0]
    5c10:	9814      	ldr	r0, [sp, #80]	; 0x50
    5c12:	607b      	str	r3, [r7, #4]
    5c14:	1844      	adds	r4, r0, r1
    5c16:	6050      	str	r0, [r2, #4]
    5c18:	60bc      	str	r4, [r7, #8]
    5c1a:	2b07      	cmp	r3, #7
    5c1c:	dd01      	ble.n	5c22 <_vfprintf_r+0x11ce>
    5c1e:	f7ff fbc2 	bl	53a6 <_vfprintf_r+0x952>
    5c22:	3208      	adds	r2, #8
    5c24:	0016      	movs	r6, r2
    5c26:	f7ff fb18 	bl	525a <_vfprintf_r+0x806>
    5c2a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    5c2c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5c2e:	680b      	ldr	r3, [r1, #0]
    5c30:	601a      	str	r2, [r3, #0]
    5c32:	17d2      	asrs	r2, r2, #31
    5c34:	605a      	str	r2, [r3, #4]
    5c36:	000b      	movs	r3, r1
    5c38:	3304      	adds	r3, #4
    5c3a:	930f      	str	r3, [sp, #60]	; 0x3c
    5c3c:	f7fe ff58 	bl	4af0 <_vfprintf_r+0x9c>
    5c40:	464b      	mov	r3, r9
    5c42:	9a07      	ldr	r2, [sp, #28]
    5c44:	431c      	orrs	r4, r3
    5c46:	3201      	adds	r2, #1
    5c48:	7813      	ldrb	r3, [r2, #0]
    5c4a:	9207      	str	r2, [sp, #28]
    5c4c:	f7fe ff8b 	bl	4b66 <_vfprintf_r+0x112>
    5c50:	003a      	movs	r2, r7
    5c52:	4659      	mov	r1, fp
    5c54:	9806      	ldr	r0, [sp, #24]
    5c56:	f003 f95f 	bl	8f18 <__sprint_r>
    5c5a:	2800      	cmp	r0, #0
    5c5c:	d000      	beq.n	5c60 <_vfprintf_r+0x120c>
    5c5e:	e489      	b.n	5574 <_vfprintf_r+0xb20>
    5c60:	68bc      	ldr	r4, [r7, #8]
    5c62:	ae32      	add	r6, sp, #200	; 0xc8
    5c64:	f7ff fbdc 	bl	5420 <_vfprintf_r+0x9cc>
    5c68:	4bb8      	ldr	r3, [pc, #736]	; (5f4c <_vfprintf_r+0x14f8>)
    5c6a:	9311      	str	r3, [sp, #68]	; 0x44
    5c6c:	f7ff fa4a 	bl	5104 <_vfprintf_r+0x6b0>
    5c70:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5c72:	ab32      	add	r3, sp, #200	; 0xc8
    5c74:	1a9b      	subs	r3, r3, r2
    5c76:	930e      	str	r3, [sp, #56]	; 0x38
    5c78:	f7ff f859 	bl	4d2e <_vfprintf_r+0x2da>
    5c7c:	9811      	ldr	r0, [sp, #68]	; 0x44
    5c7e:	f7fe feb7 	bl	49f0 <strlen>
    5c82:	0002      	movs	r2, r0
    5c84:	900e      	str	r0, [sp, #56]	; 0x38
    5c86:	0003      	movs	r3, r0
    5c88:	f7ff f9a1 	bl	4fce <_vfprintf_r+0x57a>
    5c8c:	232d      	movs	r3, #45	; 0x2d
    5c8e:	aa16      	add	r2, sp, #88	; 0x58
    5c90:	77d3      	strb	r3, [r2, #31]
    5c92:	4698      	mov	r8, r3
    5c94:	2300      	movs	r3, #0
    5c96:	469a      	mov	sl, r3
    5c98:	f7ff f854 	bl	4d44 <_vfprintf_r+0x2f0>
    5c9c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5c9e:	9313      	str	r3, [sp, #76]	; 0x4c
    5ca0:	1cda      	adds	r2, r3, #3
    5ca2:	db02      	blt.n	5caa <_vfprintf_r+0x1256>
    5ca4:	459a      	cmp	sl, r3
    5ca6:	db00      	blt.n	5caa <_vfprintf_r+0x1256>
    5ca8:	e731      	b.n	5b0e <_vfprintf_r+0x10ba>
    5caa:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5cac:	3b02      	subs	r3, #2
    5cae:	9312      	str	r3, [sp, #72]	; 0x48
    5cb0:	222c      	movs	r2, #44	; 0x2c
    5cb2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5cb4:	2148      	movs	r1, #72	; 0x48
    5cb6:	1e5d      	subs	r5, r3, #1
    5cb8:	ab16      	add	r3, sp, #88	; 0x58
    5cba:	189b      	adds	r3, r3, r2
    5cbc:	466a      	mov	r2, sp
    5cbe:	1852      	adds	r2, r2, r1
    5cc0:	7812      	ldrb	r2, [r2, #0]
    5cc2:	951f      	str	r5, [sp, #124]	; 0x7c
    5cc4:	701a      	strb	r2, [r3, #0]
    5cc6:	2d00      	cmp	r5, #0
    5cc8:	da00      	bge.n	5ccc <_vfprintf_r+0x1278>
    5cca:	e1cb      	b.n	6064 <_vfprintf_r+0x1610>
    5ccc:	212d      	movs	r1, #45	; 0x2d
    5cce:	232b      	movs	r3, #43	; 0x2b
    5cd0:	aa16      	add	r2, sp, #88	; 0x58
    5cd2:	1852      	adds	r2, r2, r1
    5cd4:	7013      	strb	r3, [r2, #0]
    5cd6:	2d09      	cmp	r5, #9
    5cd8:	dc00      	bgt.n	5cdc <_vfprintf_r+0x1288>
    5cda:	e16d      	b.n	5fb8 <_vfprintf_r+0x1564>
    5cdc:	aa16      	add	r2, sp, #88	; 0x58
    5cde:	233b      	movs	r3, #59	; 0x3b
    5ce0:	4694      	mov	ip, r2
    5ce2:	4463      	add	r3, ip
    5ce4:	469a      	mov	sl, r3
    5ce6:	46b1      	mov	r9, r6
    5ce8:	46a0      	mov	r8, r4
    5cea:	4656      	mov	r6, sl
    5cec:	e000      	b.n	5cf0 <_vfprintf_r+0x129c>
    5cee:	0026      	movs	r6, r4
    5cf0:	0028      	movs	r0, r5
    5cf2:	210a      	movs	r1, #10
    5cf4:	f003 fcb6 	bl	9664 <__aeabi_idivmod>
    5cf8:	1e74      	subs	r4, r6, #1
    5cfa:	3130      	adds	r1, #48	; 0x30
    5cfc:	7021      	strb	r1, [r4, #0]
    5cfe:	0028      	movs	r0, r5
    5d00:	210a      	movs	r1, #10
    5d02:	f003 fbc9 	bl	9498 <__divsi3>
    5d06:	0005      	movs	r5, r0
    5d08:	2809      	cmp	r0, #9
    5d0a:	dcf0      	bgt.n	5cee <_vfprintf_r+0x129a>
    5d0c:	0023      	movs	r3, r4
    5d0e:	4644      	mov	r4, r8
    5d10:	46b0      	mov	r8, r6
    5d12:	464e      	mov	r6, r9
    5d14:	4699      	mov	r9, r3
    5d16:	0003      	movs	r3, r0
    5d18:	3330      	adds	r3, #48	; 0x30
    5d1a:	b2d8      	uxtb	r0, r3
    5d1c:	4643      	mov	r3, r8
    5d1e:	3b02      	subs	r3, #2
    5d20:	7018      	strb	r0, [r3, #0]
    5d22:	459a      	cmp	sl, r3
    5d24:	d800      	bhi.n	5d28 <_vfprintf_r+0x12d4>
    5d26:	e1f6      	b.n	6116 <_vfprintf_r+0x16c2>
    5d28:	4642      	mov	r2, r8
    5d2a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5d2c:	4645      	mov	r5, r8
    5d2e:	1a99      	subs	r1, r3, r2
    5d30:	2301      	movs	r3, #1
    5d32:	3107      	adds	r1, #7
    5d34:	425b      	negs	r3, r3
    5d36:	e001      	b.n	5d3c <_vfprintf_r+0x12e8>
    5d38:	5ce8      	ldrb	r0, [r5, r3]
    5d3a:	3301      	adds	r3, #1
    5d3c:	aa21      	add	r2, sp, #132	; 0x84
    5d3e:	18d2      	adds	r2, r2, r3
    5d40:	70d0      	strb	r0, [r2, #3]
    5d42:	428b      	cmp	r3, r1
    5d44:	d1f8      	bne.n	5d38 <_vfprintf_r+0x12e4>
    5d46:	a916      	add	r1, sp, #88	; 0x58
    5d48:	468c      	mov	ip, r1
    5d4a:	222e      	movs	r2, #46	; 0x2e
    5d4c:	464b      	mov	r3, r9
    5d4e:	4462      	add	r2, ip
    5d50:	4694      	mov	ip, r2
    5d52:	1afb      	subs	r3, r7, r3
    5d54:	4463      	add	r3, ip
    5d56:	aa21      	add	r2, sp, #132	; 0x84
    5d58:	9914      	ldr	r1, [sp, #80]	; 0x50
    5d5a:	1a9b      	subs	r3, r3, r2
    5d5c:	469c      	mov	ip, r3
    5d5e:	000a      	movs	r2, r1
    5d60:	4462      	add	r2, ip
    5d62:	931a      	str	r3, [sp, #104]	; 0x68
    5d64:	920e      	str	r2, [sp, #56]	; 0x38
    5d66:	2901      	cmp	r1, #1
    5d68:	dc00      	bgt.n	5d6c <_vfprintf_r+0x1318>
    5d6a:	e170      	b.n	604e <_vfprintf_r+0x15fa>
    5d6c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5d6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5d70:	4694      	mov	ip, r2
    5d72:	4463      	add	r3, ip
    5d74:	001a      	movs	r2, r3
    5d76:	930e      	str	r3, [sp, #56]	; 0x38
    5d78:	43db      	mvns	r3, r3
    5d7a:	17db      	asrs	r3, r3, #31
    5d7c:	401a      	ands	r2, r3
    5d7e:	2300      	movs	r3, #0
    5d80:	9208      	str	r2, [sp, #32]
    5d82:	9313      	str	r3, [sp, #76]	; 0x4c
    5d84:	e6d4      	b.n	5b30 <_vfprintf_r+0x10dc>
    5d86:	003a      	movs	r2, r7
    5d88:	4659      	mov	r1, fp
    5d8a:	9806      	ldr	r0, [sp, #24]
    5d8c:	f003 f8c4 	bl	8f18 <__sprint_r>
    5d90:	2800      	cmp	r0, #0
    5d92:	d001      	beq.n	5d98 <_vfprintf_r+0x1344>
    5d94:	f7ff fbee 	bl	5574 <_vfprintf_r+0xb20>
    5d98:	68bc      	ldr	r4, [r7, #8]
    5d9a:	ae32      	add	r6, sp, #200	; 0xc8
    5d9c:	e46a      	b.n	5674 <_vfprintf_r+0xc20>
    5d9e:	4653      	mov	r3, sl
    5da0:	2b00      	cmp	r3, #0
    5da2:	d000      	beq.n	5da6 <_vfprintf_r+0x1352>
    5da4:	e659      	b.n	5a5a <_vfprintf_r+0x1006>
    5da6:	3301      	adds	r3, #1
    5da8:	469a      	mov	sl, r3
    5daa:	e656      	b.n	5a5a <_vfprintf_r+0x1006>
    5dac:	4653      	mov	r3, sl
    5dae:	9308      	str	r3, [sp, #32]
    5db0:	2b06      	cmp	r3, #6
    5db2:	d901      	bls.n	5db8 <_vfprintf_r+0x1364>
    5db4:	2306      	movs	r3, #6
    5db6:	9308      	str	r3, [sp, #32]
    5db8:	9b08      	ldr	r3, [sp, #32]
    5dba:	950f      	str	r5, [sp, #60]	; 0x3c
    5dbc:	930e      	str	r3, [sp, #56]	; 0x38
    5dbe:	2300      	movs	r3, #0
    5dc0:	4698      	mov	r8, r3
    5dc2:	469a      	mov	sl, r3
    5dc4:	9313      	str	r3, [sp, #76]	; 0x4c
    5dc6:	4b62      	ldr	r3, [pc, #392]	; (5f50 <_vfprintf_r+0x14fc>)
    5dc8:	9409      	str	r4, [sp, #36]	; 0x24
    5dca:	9311      	str	r3, [sp, #68]	; 0x44
    5dcc:	f7fe ffbd 	bl	4d4a <_vfprintf_r+0x2f6>
    5dd0:	003a      	movs	r2, r7
    5dd2:	4659      	mov	r1, fp
    5dd4:	9806      	ldr	r0, [sp, #24]
    5dd6:	f003 f89f 	bl	8f18 <__sprint_r>
    5dda:	2800      	cmp	r0, #0
    5ddc:	d001      	beq.n	5de2 <_vfprintf_r+0x138e>
    5dde:	f7ff fbc9 	bl	5574 <_vfprintf_r+0xb20>
    5de2:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5de4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    5de6:	68bc      	ldr	r4, [r7, #8]
    5de8:	1a9b      	subs	r3, r3, r2
    5dea:	ae32      	add	r6, sp, #200	; 0xc8
    5dec:	e567      	b.n	58be <_vfprintf_r+0xe6a>
    5dee:	ab23      	add	r3, sp, #140	; 0x8c
    5df0:	931b      	str	r3, [sp, #108]	; 0x6c
    5df2:	9304      	str	r3, [sp, #16]
    5df4:	ab20      	add	r3, sp, #128	; 0x80
    5df6:	9303      	str	r3, [sp, #12]
    5df8:	ab1f      	add	r3, sp, #124	; 0x7c
    5dfa:	9302      	str	r3, [sp, #8]
    5dfc:	4653      	mov	r3, sl
    5dfe:	9301      	str	r3, [sp, #4]
    5e00:	2303      	movs	r3, #3
    5e02:	464a      	mov	r2, r9
    5e04:	9300      	str	r3, [sp, #0]
    5e06:	9806      	ldr	r0, [sp, #24]
    5e08:	9b08      	ldr	r3, [sp, #32]
    5e0a:	f000 fafb 	bl	6404 <_dtoa_r>
    5e0e:	0003      	movs	r3, r0
    5e10:	4453      	add	r3, sl
    5e12:	4698      	mov	r8, r3
    5e14:	4655      	mov	r5, sl
    5e16:	9011      	str	r0, [sp, #68]	; 0x44
    5e18:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5e1a:	781b      	ldrb	r3, [r3, #0]
    5e1c:	2b30      	cmp	r3, #48	; 0x30
    5e1e:	d002      	beq.n	5e26 <_vfprintf_r+0x13d2>
    5e20:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5e22:	4498      	add	r8, r3
    5e24:	e64e      	b.n	5ac4 <_vfprintf_r+0x1070>
    5e26:	2200      	movs	r2, #0
    5e28:	2300      	movs	r3, #0
    5e2a:	4648      	mov	r0, r9
    5e2c:	9908      	ldr	r1, [sp, #32]
    5e2e:	f7fe faeb 	bl	4408 <__aeabi_dcmpeq>
    5e32:	2800      	cmp	r0, #0
    5e34:	d1f4      	bne.n	5e20 <_vfprintf_r+0x13cc>
    5e36:	2301      	movs	r3, #1
    5e38:	1b5b      	subs	r3, r3, r5
    5e3a:	931f      	str	r3, [sp, #124]	; 0x7c
    5e3c:	4498      	add	r8, r3
    5e3e:	e641      	b.n	5ac4 <_vfprintf_r+0x1070>
    5e40:	46c1      	mov	r9, r8
    5e42:	f7ff fb1f 	bl	5484 <_vfprintf_r+0xa30>
    5e46:	2280      	movs	r2, #128	; 0x80
    5e48:	0612      	lsls	r2, r2, #24
    5e4a:	4694      	mov	ip, r2
    5e4c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    5e4e:	4699      	mov	r9, r3
    5e50:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5e52:	4463      	add	r3, ip
    5e54:	9308      	str	r3, [sp, #32]
    5e56:	232d      	movs	r3, #45	; 0x2d
    5e58:	9310      	str	r3, [sp, #64]	; 0x40
    5e5a:	e60b      	b.n	5a74 <_vfprintf_r+0x1020>
    5e5c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5e5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5e60:	4694      	mov	ip, r2
    5e62:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5e64:	4463      	add	r3, ip
    5e66:	930e      	str	r3, [sp, #56]	; 0x38
    5e68:	2a00      	cmp	r2, #0
    5e6a:	dc00      	bgt.n	5e6e <_vfprintf_r+0x141a>
    5e6c:	e0e3      	b.n	6036 <_vfprintf_r+0x15e2>
    5e6e:	001a      	movs	r2, r3
    5e70:	43db      	mvns	r3, r3
    5e72:	17db      	asrs	r3, r3, #31
    5e74:	401a      	ands	r2, r3
    5e76:	2367      	movs	r3, #103	; 0x67
    5e78:	9208      	str	r2, [sp, #32]
    5e7a:	9312      	str	r3, [sp, #72]	; 0x48
    5e7c:	e658      	b.n	5b30 <_vfprintf_r+0x10dc>
    5e7e:	003a      	movs	r2, r7
    5e80:	4659      	mov	r1, fp
    5e82:	9806      	ldr	r0, [sp, #24]
    5e84:	f003 f848 	bl	8f18 <__sprint_r>
    5e88:	2800      	cmp	r0, #0
    5e8a:	d001      	beq.n	5e90 <_vfprintf_r+0x143c>
    5e8c:	f7ff fb72 	bl	5574 <_vfprintf_r+0xb20>
    5e90:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5e92:	68bc      	ldr	r4, [r7, #8]
    5e94:	ae32      	add	r6, sp, #200	; 0xc8
    5e96:	e69d      	b.n	5bd4 <_vfprintf_r+0x1180>
    5e98:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5e9a:	9313      	str	r3, [sp, #76]	; 0x4c
    5e9c:	2b00      	cmp	r3, #0
    5e9e:	dc00      	bgt.n	5ea2 <_vfprintf_r+0x144e>
    5ea0:	e0f2      	b.n	6088 <_vfprintf_r+0x1634>
    5ea2:	4652      	mov	r2, sl
    5ea4:	2a00      	cmp	r2, #0
    5ea6:	d000      	beq.n	5eaa <_vfprintf_r+0x1456>
    5ea8:	e0a0      	b.n	5fec <_vfprintf_r+0x1598>
    5eaa:	07e2      	lsls	r2, r4, #31
    5eac:	d500      	bpl.n	5eb0 <_vfprintf_r+0x145c>
    5eae:	e09d      	b.n	5fec <_vfprintf_r+0x1598>
    5eb0:	9308      	str	r3, [sp, #32]
    5eb2:	930e      	str	r3, [sp, #56]	; 0x38
    5eb4:	e63c      	b.n	5b30 <_vfprintf_r+0x10dc>
    5eb6:	ab16      	add	r3, sp, #88	; 0x58
    5eb8:	7fdb      	ldrb	r3, [r3, #31]
    5eba:	950f      	str	r5, [sp, #60]	; 0x3c
    5ebc:	4698      	mov	r8, r3
    5ebe:	4653      	mov	r3, sl
    5ec0:	9308      	str	r3, [sp, #32]
    5ec2:	930e      	str	r3, [sp, #56]	; 0x38
    5ec4:	2300      	movs	r3, #0
    5ec6:	9409      	str	r4, [sp, #36]	; 0x24
    5ec8:	469a      	mov	sl, r3
    5eca:	9313      	str	r3, [sp, #76]	; 0x4c
    5ecc:	f7fe ff37 	bl	4d3e <_vfprintf_r+0x2ea>
    5ed0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5ed2:	4698      	mov	r8, r3
    5ed4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5ed6:	44a8      	add	r8, r5
    5ed8:	2b47      	cmp	r3, #71	; 0x47
    5eda:	d000      	beq.n	5ede <_vfprintf_r+0x148a>
    5edc:	e5f2      	b.n	5ac4 <_vfprintf_r+0x1070>
    5ede:	07e3      	lsls	r3, r4, #31
    5ee0:	d400      	bmi.n	5ee4 <_vfprintf_r+0x1490>
    5ee2:	e0dc      	b.n	609e <_vfprintf_r+0x164a>
    5ee4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5ee6:	4698      	mov	r8, r3
    5ee8:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5eea:	44a8      	add	r8, r5
    5eec:	2b46      	cmp	r3, #70	; 0x46
    5eee:	d093      	beq.n	5e18 <_vfprintf_r+0x13c4>
    5ef0:	e5e8      	b.n	5ac4 <_vfprintf_r+0x1070>
    5ef2:	ab23      	add	r3, sp, #140	; 0x8c
    5ef4:	931b      	str	r3, [sp, #108]	; 0x6c
    5ef6:	9304      	str	r3, [sp, #16]
    5ef8:	ab20      	add	r3, sp, #128	; 0x80
    5efa:	9303      	str	r3, [sp, #12]
    5efc:	ab1f      	add	r3, sp, #124	; 0x7c
    5efe:	9302      	str	r3, [sp, #8]
    5f00:	4653      	mov	r3, sl
    5f02:	9301      	str	r3, [sp, #4]
    5f04:	2303      	movs	r3, #3
    5f06:	464a      	mov	r2, r9
    5f08:	9300      	str	r3, [sp, #0]
    5f0a:	9806      	ldr	r0, [sp, #24]
    5f0c:	9b08      	ldr	r3, [sp, #32]
    5f0e:	f000 fa79 	bl	6404 <_dtoa_r>
    5f12:	4655      	mov	r5, sl
    5f14:	9011      	str	r0, [sp, #68]	; 0x44
    5f16:	e7e5      	b.n	5ee4 <_vfprintf_r+0x1490>
    5f18:	003a      	movs	r2, r7
    5f1a:	4659      	mov	r1, fp
    5f1c:	9806      	ldr	r0, [sp, #24]
    5f1e:	f002 fffb 	bl	8f18 <__sprint_r>
    5f22:	2800      	cmp	r0, #0
    5f24:	d101      	bne.n	5f2a <_vfprintf_r+0x14d6>
    5f26:	f7ff faab 	bl	5480 <_vfprintf_r+0xa2c>
    5f2a:	f7ff faab 	bl	5484 <_vfprintf_r+0xa30>
    5f2e:	4642      	mov	r2, r8
    5f30:	9207      	str	r2, [sp, #28]
    5f32:	f7fe fe1b 	bl	4b6c <_vfprintf_r+0x118>
    5f36:	4244      	negs	r4, r0
    5f38:	3010      	adds	r0, #16
    5f3a:	db00      	blt.n	5f3e <_vfprintf_r+0x14ea>
    5f3c:	e0d8      	b.n	60f0 <_vfprintf_r+0x169c>
    5f3e:	4805      	ldr	r0, [pc, #20]	; (5f54 <_vfprintf_r+0x1500>)
    5f40:	2610      	movs	r6, #16
    5f42:	0005      	movs	r5, r0
    5f44:	e00c      	b.n	5f60 <_vfprintf_r+0x150c>
    5f46:	46c0      	nop			; (mov r8, r8)
    5f48:	0000a2b8 	.word	0x0000a2b8
    5f4c:	0000a27c 	.word	0x0000a27c
    5f50:	0000a2b0 	.word	0x0000a2b0
    5f54:	0000a2cc 	.word	0x0000a2cc
    5f58:	3208      	adds	r2, #8
    5f5a:	3c10      	subs	r4, #16
    5f5c:	2c10      	cmp	r4, #16
    5f5e:	dd51      	ble.n	6004 <_vfprintf_r+0x15b0>
    5f60:	3110      	adds	r1, #16
    5f62:	3301      	adds	r3, #1
    5f64:	6015      	str	r5, [r2, #0]
    5f66:	6056      	str	r6, [r2, #4]
    5f68:	60b9      	str	r1, [r7, #8]
    5f6a:	607b      	str	r3, [r7, #4]
    5f6c:	2b07      	cmp	r3, #7
    5f6e:	ddf3      	ble.n	5f58 <_vfprintf_r+0x1504>
    5f70:	003a      	movs	r2, r7
    5f72:	4659      	mov	r1, fp
    5f74:	9806      	ldr	r0, [sp, #24]
    5f76:	f002 ffcf 	bl	8f18 <__sprint_r>
    5f7a:	2800      	cmp	r0, #0
    5f7c:	d001      	beq.n	5f82 <_vfprintf_r+0x152e>
    5f7e:	f7ff faf9 	bl	5574 <_vfprintf_r+0xb20>
    5f82:	68b9      	ldr	r1, [r7, #8]
    5f84:	687b      	ldr	r3, [r7, #4]
    5f86:	aa32      	add	r2, sp, #200	; 0xc8
    5f88:	e7e7      	b.n	5f5a <_vfprintf_r+0x1506>
    5f8a:	003a      	movs	r2, r7
    5f8c:	4659      	mov	r1, fp
    5f8e:	9806      	ldr	r0, [sp, #24]
    5f90:	f002 ffc2 	bl	8f18 <__sprint_r>
    5f94:	2800      	cmp	r0, #0
    5f96:	d001      	beq.n	5f9c <_vfprintf_r+0x1548>
    5f98:	f7ff faec 	bl	5574 <_vfprintf_r+0xb20>
    5f9c:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5f9e:	68b9      	ldr	r1, [r7, #8]
    5fa0:	687b      	ldr	r3, [r7, #4]
    5fa2:	aa32      	add	r2, sp, #200	; 0xc8
    5fa4:	e62e      	b.n	5c04 <_vfprintf_r+0x11b0>
    5fa6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5fa8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5faa:	4694      	mov	ip, r2
    5fac:	4463      	add	r3, ip
    5fae:	001a      	movs	r2, r3
    5fb0:	930e      	str	r3, [sp, #56]	; 0x38
    5fb2:	e75d      	b.n	5e70 <_vfprintf_r+0x141c>
    5fb4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5fb6:	e599      	b.n	5aec <_vfprintf_r+0x1098>
    5fb8:	212e      	movs	r1, #46	; 0x2e
    5fba:	2330      	movs	r3, #48	; 0x30
    5fbc:	aa16      	add	r2, sp, #88	; 0x58
    5fbe:	1852      	adds	r2, r2, r1
    5fc0:	7013      	strb	r3, [r2, #0]
    5fc2:	002b      	movs	r3, r5
    5fc4:	aa16      	add	r2, sp, #88	; 0x58
    5fc6:	3101      	adds	r1, #1
    5fc8:	3330      	adds	r3, #48	; 0x30
    5fca:	1852      	adds	r2, r2, r1
    5fcc:	7013      	strb	r3, [r2, #0]
    5fce:	ab22      	add	r3, sp, #136	; 0x88
    5fd0:	e6c1      	b.n	5d56 <_vfprintf_r+0x1302>
    5fd2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5fd4:	2b00      	cmp	r3, #0
    5fd6:	db52      	blt.n	607e <_vfprintf_r+0x162a>
    5fd8:	ab16      	add	r3, sp, #88	; 0x58
    5fda:	7fdb      	ldrb	r3, [r3, #31]
    5fdc:	4698      	mov	r8, r3
    5fde:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5fe0:	2b47      	cmp	r3, #71	; 0x47
    5fe2:	dc48      	bgt.n	6076 <_vfprintf_r+0x1622>
    5fe4:	4b4e      	ldr	r3, [pc, #312]	; (6120 <_vfprintf_r+0x16cc>)
    5fe6:	9311      	str	r3, [sp, #68]	; 0x44
    5fe8:	f7ff f88c 	bl	5104 <_vfprintf_r+0x6b0>
    5fec:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    5fee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5ff0:	4694      	mov	ip, r2
    5ff2:	4463      	add	r3, ip
    5ff4:	4453      	add	r3, sl
    5ff6:	001a      	movs	r2, r3
    5ff8:	930e      	str	r3, [sp, #56]	; 0x38
    5ffa:	43db      	mvns	r3, r3
    5ffc:	17db      	asrs	r3, r3, #31
    5ffe:	401a      	ands	r2, r3
    6000:	9208      	str	r2, [sp, #32]
    6002:	e595      	b.n	5b30 <_vfprintf_r+0x10dc>
    6004:	46a9      	mov	r9, r5
    6006:	4648      	mov	r0, r9
    6008:	1909      	adds	r1, r1, r4
    600a:	3301      	adds	r3, #1
    600c:	6010      	str	r0, [r2, #0]
    600e:	6054      	str	r4, [r2, #4]
    6010:	60b9      	str	r1, [r7, #8]
    6012:	3208      	adds	r2, #8
    6014:	607b      	str	r3, [r7, #4]
    6016:	2b07      	cmp	r3, #7
    6018:	dc00      	bgt.n	601c <_vfprintf_r+0x15c8>
    601a:	e5f6      	b.n	5c0a <_vfprintf_r+0x11b6>
    601c:	003a      	movs	r2, r7
    601e:	4659      	mov	r1, fp
    6020:	9806      	ldr	r0, [sp, #24]
    6022:	f002 ff79 	bl	8f18 <__sprint_r>
    6026:	2800      	cmp	r0, #0
    6028:	d001      	beq.n	602e <_vfprintf_r+0x15da>
    602a:	f7ff faa3 	bl	5574 <_vfprintf_r+0xb20>
    602e:	68b9      	ldr	r1, [r7, #8]
    6030:	687b      	ldr	r3, [r7, #4]
    6032:	aa32      	add	r2, sp, #200	; 0xc8
    6034:	e5e9      	b.n	5c0a <_vfprintf_r+0x11b6>
    6036:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6038:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    603a:	1a98      	subs	r0, r3, r2
    603c:	1c43      	adds	r3, r0, #1
    603e:	001a      	movs	r2, r3
    6040:	930e      	str	r3, [sp, #56]	; 0x38
    6042:	e715      	b.n	5e70 <_vfprintf_r+0x141c>
    6044:	4a37      	ldr	r2, [pc, #220]	; (6124 <_vfprintf_r+0x16d0>)
    6046:	687b      	ldr	r3, [r7, #4]
    6048:	4691      	mov	r9, r2
    604a:	f7ff fbf5 	bl	5838 <_vfprintf_r+0xde4>
    604e:	2301      	movs	r3, #1
    6050:	4023      	ands	r3, r4
    6052:	9313      	str	r3, [sp, #76]	; 0x4c
    6054:	d000      	beq.n	6058 <_vfprintf_r+0x1604>
    6056:	e689      	b.n	5d6c <_vfprintf_r+0x1318>
    6058:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    605a:	43d3      	mvns	r3, r2
    605c:	17db      	asrs	r3, r3, #31
    605e:	401a      	ands	r2, r3
    6060:	9208      	str	r2, [sp, #32]
    6062:	e565      	b.n	5b30 <_vfprintf_r+0x10dc>
    6064:	2301      	movs	r3, #1
    6066:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6068:	391b      	subs	r1, #27
    606a:	1a9d      	subs	r5, r3, r2
    606c:	aa16      	add	r2, sp, #88	; 0x58
    606e:	332c      	adds	r3, #44	; 0x2c
    6070:	1852      	adds	r2, r2, r1
    6072:	7013      	strb	r3, [r2, #0]
    6074:	e62f      	b.n	5cd6 <_vfprintf_r+0x1282>
    6076:	4b2c      	ldr	r3, [pc, #176]	; (6128 <_vfprintf_r+0x16d4>)
    6078:	9311      	str	r3, [sp, #68]	; 0x44
    607a:	f7ff f843 	bl	5104 <_vfprintf_r+0x6b0>
    607e:	232d      	movs	r3, #45	; 0x2d
    6080:	aa16      	add	r2, sp, #88	; 0x58
    6082:	77d3      	strb	r3, [r2, #31]
    6084:	4698      	mov	r8, r3
    6086:	e7aa      	b.n	5fde <_vfprintf_r+0x158a>
    6088:	4653      	mov	r3, sl
    608a:	2b00      	cmp	r3, #0
    608c:	d101      	bne.n	6092 <_vfprintf_r+0x163e>
    608e:	07e3      	lsls	r3, r4, #31
    6090:	d503      	bpl.n	609a <_vfprintf_r+0x1646>
    6092:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6094:	1c58      	adds	r0, r3, #1
    6096:	0003      	movs	r3, r0
    6098:	e7ac      	b.n	5ff4 <_vfprintf_r+0x15a0>
    609a:	2301      	movs	r3, #1
    609c:	e708      	b.n	5eb0 <_vfprintf_r+0x145c>
    609e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    60a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
    60a2:	1a9b      	subs	r3, r3, r2
    60a4:	9314      	str	r3, [sp, #80]	; 0x50
    60a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    60a8:	2b47      	cmp	r3, #71	; 0x47
    60aa:	d100      	bne.n	60ae <_vfprintf_r+0x165a>
    60ac:	e5f6      	b.n	5c9c <_vfprintf_r+0x1248>
    60ae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    60b0:	9313      	str	r3, [sp, #76]	; 0x4c
    60b2:	e5fd      	b.n	5cb0 <_vfprintf_r+0x125c>
    60b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    60b6:	1d1d      	adds	r5, r3, #4
    60b8:	681b      	ldr	r3, [r3, #0]
    60ba:	46a8      	mov	r8, r5
    60bc:	469a      	mov	sl, r3
    60be:	2b00      	cmp	r3, #0
    60c0:	db0a      	blt.n	60d8 <_vfprintf_r+0x1684>
    60c2:	4645      	mov	r5, r8
    60c4:	9b07      	ldr	r3, [sp, #28]
    60c6:	950f      	str	r5, [sp, #60]	; 0x3c
    60c8:	785b      	ldrb	r3, [r3, #1]
    60ca:	9207      	str	r2, [sp, #28]
    60cc:	f7fe fd4b 	bl	4b66 <_vfprintf_r+0x112>
    60d0:	ab16      	add	r3, sp, #88	; 0x58
    60d2:	77d8      	strb	r0, [r3, #31]
    60d4:	f7ff f830 	bl	5138 <_vfprintf_r+0x6e4>
    60d8:	2301      	movs	r3, #1
    60da:	425b      	negs	r3, r3
    60dc:	469a      	mov	sl, r3
    60de:	e7f0      	b.n	60c2 <_vfprintf_r+0x166e>
    60e0:	ab16      	add	r3, sp, #88	; 0x58
    60e2:	77d8      	strb	r0, [r3, #31]
    60e4:	f7fe ff27 	bl	4f36 <_vfprintf_r+0x4e2>
    60e8:	ab16      	add	r3, sp, #88	; 0x58
    60ea:	77d8      	strb	r0, [r3, #31]
    60ec:	f7fe fdce 	bl	4c8c <_vfprintf_r+0x238>
    60f0:	480c      	ldr	r0, [pc, #48]	; (6124 <_vfprintf_r+0x16d0>)
    60f2:	4681      	mov	r9, r0
    60f4:	e787      	b.n	6006 <_vfprintf_r+0x15b2>
    60f6:	ab16      	add	r3, sp, #88	; 0x58
    60f8:	77d8      	strb	r0, [r3, #31]
    60fa:	f7ff f829 	bl	5150 <_vfprintf_r+0x6fc>
    60fe:	ab16      	add	r3, sp, #88	; 0x58
    6100:	77d8      	strb	r0, [r3, #31]
    6102:	f7fe ffc3 	bl	508c <_vfprintf_r+0x638>
    6106:	ab16      	add	r3, sp, #88	; 0x58
    6108:	77d8      	strb	r0, [r3, #31]
    610a:	f7fe ffa5 	bl	5058 <_vfprintf_r+0x604>
    610e:	ab16      	add	r3, sp, #88	; 0x58
    6110:	77d8      	strb	r0, [r3, #31]
    6112:	f7fe feaf 	bl	4e74 <_vfprintf_r+0x420>
    6116:	aa16      	add	r2, sp, #88	; 0x58
    6118:	232e      	movs	r3, #46	; 0x2e
    611a:	4694      	mov	ip, r2
    611c:	4463      	add	r3, ip
    611e:	e61a      	b.n	5d56 <_vfprintf_r+0x1302>
    6120:	0000a280 	.word	0x0000a280
    6124:	0000a2cc 	.word	0x0000a2cc
    6128:	0000a284 	.word	0x0000a284

0000612c <__sbprintf>:
    612c:	b5f0      	push	{r4, r5, r6, r7, lr}
    612e:	0015      	movs	r5, r2
    6130:	2202      	movs	r2, #2
    6132:	4c1e      	ldr	r4, [pc, #120]	; (61ac <__sbprintf+0x80>)
    6134:	001f      	movs	r7, r3
    6136:	898b      	ldrh	r3, [r1, #12]
    6138:	44a5      	add	sp, r4
    613a:	4393      	bics	r3, r2
    613c:	466a      	mov	r2, sp
    613e:	8193      	strh	r3, [r2, #12]
    6140:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    6142:	0006      	movs	r6, r0
    6144:	9319      	str	r3, [sp, #100]	; 0x64
    6146:	89cb      	ldrh	r3, [r1, #14]
    6148:	a816      	add	r0, sp, #88	; 0x58
    614a:	81d3      	strh	r3, [r2, #14]
    614c:	69cb      	ldr	r3, [r1, #28]
    614e:	000c      	movs	r4, r1
    6150:	9307      	str	r3, [sp, #28]
    6152:	6a4b      	ldr	r3, [r1, #36]	; 0x24
    6154:	9309      	str	r3, [sp, #36]	; 0x24
    6156:	ab1a      	add	r3, sp, #104	; 0x68
    6158:	9300      	str	r3, [sp, #0]
    615a:	9304      	str	r3, [sp, #16]
    615c:	2380      	movs	r3, #128	; 0x80
    615e:	00db      	lsls	r3, r3, #3
    6160:	9302      	str	r3, [sp, #8]
    6162:	9305      	str	r3, [sp, #20]
    6164:	2300      	movs	r3, #0
    6166:	9306      	str	r3, [sp, #24]
    6168:	f001 fd50 	bl	7c0c <__retarget_lock_init_recursive>
    616c:	002a      	movs	r2, r5
    616e:	003b      	movs	r3, r7
    6170:	4669      	mov	r1, sp
    6172:	0030      	movs	r0, r6
    6174:	f7fe fc6e 	bl	4a54 <_vfprintf_r>
    6178:	1e05      	subs	r5, r0, #0
    617a:	db05      	blt.n	6188 <__sbprintf+0x5c>
    617c:	4669      	mov	r1, sp
    617e:	0030      	movs	r0, r6
    6180:	f001 f9ac 	bl	74dc <_fflush_r>
    6184:	2800      	cmp	r0, #0
    6186:	d10e      	bne.n	61a6 <__sbprintf+0x7a>
    6188:	466b      	mov	r3, sp
    618a:	899b      	ldrh	r3, [r3, #12]
    618c:	065b      	lsls	r3, r3, #25
    618e:	d503      	bpl.n	6198 <__sbprintf+0x6c>
    6190:	2240      	movs	r2, #64	; 0x40
    6192:	89a3      	ldrh	r3, [r4, #12]
    6194:	4313      	orrs	r3, r2
    6196:	81a3      	strh	r3, [r4, #12]
    6198:	9816      	ldr	r0, [sp, #88]	; 0x58
    619a:	f001 fd39 	bl	7c10 <__retarget_lock_close_recursive>
    619e:	0028      	movs	r0, r5
    61a0:	4b03      	ldr	r3, [pc, #12]	; (61b0 <__sbprintf+0x84>)
    61a2:	449d      	add	sp, r3
    61a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    61a6:	2501      	movs	r5, #1
    61a8:	426d      	negs	r5, r5
    61aa:	e7ed      	b.n	6188 <__sbprintf+0x5c>
    61ac:	fffffb94 	.word	0xfffffb94
    61b0:	0000046c 	.word	0x0000046c

000061b4 <__swsetup_r>:
    61b4:	4b33      	ldr	r3, [pc, #204]	; (6284 <__swsetup_r+0xd0>)
    61b6:	b570      	push	{r4, r5, r6, lr}
    61b8:	0005      	movs	r5, r0
    61ba:	6818      	ldr	r0, [r3, #0]
    61bc:	000c      	movs	r4, r1
    61be:	2800      	cmp	r0, #0
    61c0:	d002      	beq.n	61c8 <__swsetup_r+0x14>
    61c2:	6b83      	ldr	r3, [r0, #56]	; 0x38
    61c4:	2b00      	cmp	r3, #0
    61c6:	d03c      	beq.n	6242 <__swsetup_r+0x8e>
    61c8:	230c      	movs	r3, #12
    61ca:	5ee2      	ldrsh	r2, [r4, r3]
    61cc:	b293      	uxth	r3, r2
    61ce:	0719      	lsls	r1, r3, #28
    61d0:	d50d      	bpl.n	61ee <__swsetup_r+0x3a>
    61d2:	6921      	ldr	r1, [r4, #16]
    61d4:	2900      	cmp	r1, #0
    61d6:	d015      	beq.n	6204 <__swsetup_r+0x50>
    61d8:	07da      	lsls	r2, r3, #31
    61da:	d521      	bpl.n	6220 <__swsetup_r+0x6c>
    61dc:	2300      	movs	r3, #0
    61de:	60a3      	str	r3, [r4, #8]
    61e0:	6963      	ldr	r3, [r4, #20]
    61e2:	2000      	movs	r0, #0
    61e4:	425b      	negs	r3, r3
    61e6:	61a3      	str	r3, [r4, #24]
    61e8:	2900      	cmp	r1, #0
    61ea:	d021      	beq.n	6230 <__swsetup_r+0x7c>
    61ec:	bd70      	pop	{r4, r5, r6, pc}
    61ee:	06d9      	lsls	r1, r3, #27
    61f0:	d53f      	bpl.n	6272 <__swsetup_r+0xbe>
    61f2:	075b      	lsls	r3, r3, #29
    61f4:	d428      	bmi.n	6248 <__swsetup_r+0x94>
    61f6:	6921      	ldr	r1, [r4, #16]
    61f8:	2308      	movs	r3, #8
    61fa:	4313      	orrs	r3, r2
    61fc:	81a3      	strh	r3, [r4, #12]
    61fe:	b29b      	uxth	r3, r3
    6200:	2900      	cmp	r1, #0
    6202:	d1e9      	bne.n	61d8 <__swsetup_r+0x24>
    6204:	22a0      	movs	r2, #160	; 0xa0
    6206:	2080      	movs	r0, #128	; 0x80
    6208:	0092      	lsls	r2, r2, #2
    620a:	0080      	lsls	r0, r0, #2
    620c:	401a      	ands	r2, r3
    620e:	4282      	cmp	r2, r0
    6210:	d0e2      	beq.n	61d8 <__swsetup_r+0x24>
    6212:	0021      	movs	r1, r4
    6214:	0028      	movs	r0, r5
    6216:	f001 fd31 	bl	7c7c <__smakebuf_r>
    621a:	89a3      	ldrh	r3, [r4, #12]
    621c:	6921      	ldr	r1, [r4, #16]
    621e:	e7db      	b.n	61d8 <__swsetup_r+0x24>
    6220:	2200      	movs	r2, #0
    6222:	079b      	lsls	r3, r3, #30
    6224:	d400      	bmi.n	6228 <__swsetup_r+0x74>
    6226:	6962      	ldr	r2, [r4, #20]
    6228:	60a2      	str	r2, [r4, #8]
    622a:	2000      	movs	r0, #0
    622c:	2900      	cmp	r1, #0
    622e:	d1dd      	bne.n	61ec <__swsetup_r+0x38>
    6230:	220c      	movs	r2, #12
    6232:	5ea3      	ldrsh	r3, [r4, r2]
    6234:	061a      	lsls	r2, r3, #24
    6236:	d5d9      	bpl.n	61ec <__swsetup_r+0x38>
    6238:	2240      	movs	r2, #64	; 0x40
    623a:	4313      	orrs	r3, r2
    623c:	81a3      	strh	r3, [r4, #12]
    623e:	3801      	subs	r0, #1
    6240:	e7d4      	b.n	61ec <__swsetup_r+0x38>
    6242:	f001 f9a5 	bl	7590 <__sinit>
    6246:	e7bf      	b.n	61c8 <__swsetup_r+0x14>
    6248:	6b21      	ldr	r1, [r4, #48]	; 0x30
    624a:	2900      	cmp	r1, #0
    624c:	d00a      	beq.n	6264 <__swsetup_r+0xb0>
    624e:	0023      	movs	r3, r4
    6250:	3340      	adds	r3, #64	; 0x40
    6252:	4299      	cmp	r1, r3
    6254:	d004      	beq.n	6260 <__swsetup_r+0xac>
    6256:	0028      	movs	r0, r5
    6258:	f001 fa44 	bl	76e4 <_free_r>
    625c:	230c      	movs	r3, #12
    625e:	5ee2      	ldrsh	r2, [r4, r3]
    6260:	2300      	movs	r3, #0
    6262:	6323      	str	r3, [r4, #48]	; 0x30
    6264:	2324      	movs	r3, #36	; 0x24
    6266:	439a      	bics	r2, r3
    6268:	2300      	movs	r3, #0
    626a:	6921      	ldr	r1, [r4, #16]
    626c:	6063      	str	r3, [r4, #4]
    626e:	6021      	str	r1, [r4, #0]
    6270:	e7c2      	b.n	61f8 <__swsetup_r+0x44>
    6272:	2309      	movs	r3, #9
    6274:	602b      	str	r3, [r5, #0]
    6276:	2340      	movs	r3, #64	; 0x40
    6278:	2001      	movs	r0, #1
    627a:	431a      	orrs	r2, r3
    627c:	81a2      	strh	r2, [r4, #12]
    627e:	4240      	negs	r0, r0
    6280:	e7b4      	b.n	61ec <__swsetup_r+0x38>
    6282:	46c0      	nop			; (mov r8, r8)
    6284:	2000007c 	.word	0x2000007c

00006288 <register_fini>:
    6288:	4b03      	ldr	r3, [pc, #12]	; (6298 <register_fini+0x10>)
    628a:	b510      	push	{r4, lr}
    628c:	2b00      	cmp	r3, #0
    628e:	d002      	beq.n	6296 <register_fini+0xe>
    6290:	4802      	ldr	r0, [pc, #8]	; (629c <register_fini+0x14>)
    6292:	f000 f805 	bl	62a0 <atexit>
    6296:	bd10      	pop	{r4, pc}
    6298:	00000000 	.word	0x00000000
    629c:	00007611 	.word	0x00007611

000062a0 <atexit>:
    62a0:	b510      	push	{r4, lr}
    62a2:	0001      	movs	r1, r0
    62a4:	2300      	movs	r3, #0
    62a6:	2200      	movs	r2, #0
    62a8:	2000      	movs	r0, #0
    62aa:	f002 fe53 	bl	8f54 <__register_exitproc>
    62ae:	bd10      	pop	{r4, pc}

000062b0 <quorem>:
    62b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    62b2:	4645      	mov	r5, r8
    62b4:	4680      	mov	r8, r0
    62b6:	46de      	mov	lr, fp
    62b8:	4657      	mov	r7, sl
    62ba:	464e      	mov	r6, r9
    62bc:	4642      	mov	r2, r8
    62be:	b5e0      	push	{r5, r6, r7, lr}
    62c0:	690c      	ldr	r4, [r1, #16]
    62c2:	6912      	ldr	r2, [r2, #16]
    62c4:	b085      	sub	sp, #20
    62c6:	000b      	movs	r3, r1
    62c8:	9102      	str	r1, [sp, #8]
    62ca:	2000      	movs	r0, #0
    62cc:	4294      	cmp	r4, r2
    62ce:	dd00      	ble.n	62d2 <quorem+0x22>
    62d0:	e090      	b.n	63f4 <quorem+0x144>
    62d2:	2214      	movs	r2, #20
    62d4:	4694      	mov	ip, r2
    62d6:	4463      	add	r3, ip
    62d8:	4699      	mov	r9, r3
    62da:	464a      	mov	r2, r9
    62dc:	3c01      	subs	r4, #1
    62de:	00a3      	lsls	r3, r4, #2
    62e0:	18d6      	adds	r6, r2, r3
    62e2:	2214      	movs	r2, #20
    62e4:	4442      	add	r2, r8
    62e6:	4693      	mov	fp, r2
    62e8:	449b      	add	fp, r3
    62ea:	6833      	ldr	r3, [r6, #0]
    62ec:	0015      	movs	r5, r2
    62ee:	1c59      	adds	r1, r3, #1
    62f0:	465b      	mov	r3, fp
    62f2:	6818      	ldr	r0, [r3, #0]
    62f4:	9201      	str	r2, [sp, #4]
    62f6:	f7fc fb25 	bl	2944 <__udivsi3>
    62fa:	1e03      	subs	r3, r0, #0
    62fc:	9000      	str	r0, [sp, #0]
    62fe:	d042      	beq.n	6386 <quorem+0xd6>
    6300:	0029      	movs	r1, r5
    6302:	2700      	movs	r7, #0
    6304:	464d      	mov	r5, r9
    6306:	2000      	movs	r0, #0
    6308:	46b1      	mov	r9, r6
    630a:	46a2      	mov	sl, r4
    630c:	003e      	movs	r6, r7
    630e:	0004      	movs	r4, r0
    6310:	469c      	mov	ip, r3
    6312:	002f      	movs	r7, r5
    6314:	0008      	movs	r0, r1
    6316:	9503      	str	r5, [sp, #12]
    6318:	4663      	mov	r3, ip
    631a:	cf04      	ldmia	r7!, {r2}
    631c:	0415      	lsls	r5, r2, #16
    631e:	0c2d      	lsrs	r5, r5, #16
    6320:	435d      	muls	r5, r3
    6322:	0c12      	lsrs	r2, r2, #16
    6324:	435a      	muls	r2, r3
    6326:	19ad      	adds	r5, r5, r6
    6328:	0c2b      	lsrs	r3, r5, #16
    632a:	18d2      	adds	r2, r2, r3
    632c:	6803      	ldr	r3, [r0, #0]
    632e:	042d      	lsls	r5, r5, #16
    6330:	0419      	lsls	r1, r3, #16
    6332:	0c09      	lsrs	r1, r1, #16
    6334:	1909      	adds	r1, r1, r4
    6336:	0c16      	lsrs	r6, r2, #16
    6338:	0c2d      	lsrs	r5, r5, #16
    633a:	0412      	lsls	r2, r2, #16
    633c:	1b49      	subs	r1, r1, r5
    633e:	0c12      	lsrs	r2, r2, #16
    6340:	0c1b      	lsrs	r3, r3, #16
    6342:	1a9b      	subs	r3, r3, r2
    6344:	140a      	asrs	r2, r1, #16
    6346:	189b      	adds	r3, r3, r2
    6348:	0409      	lsls	r1, r1, #16
    634a:	141c      	asrs	r4, r3, #16
    634c:	0c09      	lsrs	r1, r1, #16
    634e:	041b      	lsls	r3, r3, #16
    6350:	4319      	orrs	r1, r3
    6352:	c002      	stmia	r0!, {r1}
    6354:	45b9      	cmp	r9, r7
    6356:	d2df      	bcs.n	6318 <quorem+0x68>
    6358:	9b03      	ldr	r3, [sp, #12]
    635a:	464e      	mov	r6, r9
    635c:	4699      	mov	r9, r3
    635e:	465b      	mov	r3, fp
    6360:	681b      	ldr	r3, [r3, #0]
    6362:	4654      	mov	r4, sl
    6364:	2b00      	cmp	r3, #0
    6366:	d10e      	bne.n	6386 <quorem+0xd6>
    6368:	465b      	mov	r3, fp
    636a:	9a01      	ldr	r2, [sp, #4]
    636c:	3b04      	subs	r3, #4
    636e:	429a      	cmp	r2, r3
    6370:	d304      	bcc.n	637c <quorem+0xcc>
    6372:	e006      	b.n	6382 <quorem+0xd2>
    6374:	3b04      	subs	r3, #4
    6376:	3c01      	subs	r4, #1
    6378:	429a      	cmp	r2, r3
    637a:	d202      	bcs.n	6382 <quorem+0xd2>
    637c:	6819      	ldr	r1, [r3, #0]
    637e:	2900      	cmp	r1, #0
    6380:	d0f8      	beq.n	6374 <quorem+0xc4>
    6382:	4643      	mov	r3, r8
    6384:	611c      	str	r4, [r3, #16]
    6386:	9902      	ldr	r1, [sp, #8]
    6388:	4640      	mov	r0, r8
    638a:	f002 fa51 	bl	8830 <__mcmp>
    638e:	2800      	cmp	r0, #0
    6390:	db2f      	blt.n	63f2 <quorem+0x142>
    6392:	464f      	mov	r7, r9
    6394:	2000      	movs	r0, #0
    6396:	9b00      	ldr	r3, [sp, #0]
    6398:	9d01      	ldr	r5, [sp, #4]
    639a:	3301      	adds	r3, #1
    639c:	9300      	str	r3, [sp, #0]
    639e:	682b      	ldr	r3, [r5, #0]
    63a0:	cf02      	ldmia	r7!, {r1}
    63a2:	041a      	lsls	r2, r3, #16
    63a4:	0c12      	lsrs	r2, r2, #16
    63a6:	1810      	adds	r0, r2, r0
    63a8:	040a      	lsls	r2, r1, #16
    63aa:	0c12      	lsrs	r2, r2, #16
    63ac:	1a82      	subs	r2, r0, r2
    63ae:	0c09      	lsrs	r1, r1, #16
    63b0:	0c1b      	lsrs	r3, r3, #16
    63b2:	1a5b      	subs	r3, r3, r1
    63b4:	1411      	asrs	r1, r2, #16
    63b6:	185b      	adds	r3, r3, r1
    63b8:	0412      	lsls	r2, r2, #16
    63ba:	1418      	asrs	r0, r3, #16
    63bc:	0c12      	lsrs	r2, r2, #16
    63be:	041b      	lsls	r3, r3, #16
    63c0:	4313      	orrs	r3, r2
    63c2:	c508      	stmia	r5!, {r3}
    63c4:	42be      	cmp	r6, r7
    63c6:	d2ea      	bcs.n	639e <quorem+0xee>
    63c8:	9901      	ldr	r1, [sp, #4]
    63ca:	00a3      	lsls	r3, r4, #2
    63cc:	468c      	mov	ip, r1
    63ce:	4463      	add	r3, ip
    63d0:	681a      	ldr	r2, [r3, #0]
    63d2:	2a00      	cmp	r2, #0
    63d4:	d10d      	bne.n	63f2 <quorem+0x142>
    63d6:	3b04      	subs	r3, #4
    63d8:	000a      	movs	r2, r1
    63da:	4299      	cmp	r1, r3
    63dc:	d304      	bcc.n	63e8 <quorem+0x138>
    63de:	e006      	b.n	63ee <quorem+0x13e>
    63e0:	3b04      	subs	r3, #4
    63e2:	3c01      	subs	r4, #1
    63e4:	429a      	cmp	r2, r3
    63e6:	d202      	bcs.n	63ee <quorem+0x13e>
    63e8:	6819      	ldr	r1, [r3, #0]
    63ea:	2900      	cmp	r1, #0
    63ec:	d0f8      	beq.n	63e0 <quorem+0x130>
    63ee:	4643      	mov	r3, r8
    63f0:	611c      	str	r4, [r3, #16]
    63f2:	9800      	ldr	r0, [sp, #0]
    63f4:	b005      	add	sp, #20
    63f6:	bc3c      	pop	{r2, r3, r4, r5}
    63f8:	4690      	mov	r8, r2
    63fa:	4699      	mov	r9, r3
    63fc:	46a2      	mov	sl, r4
    63fe:	46ab      	mov	fp, r5
    6400:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6402:	46c0      	nop			; (mov r8, r8)

00006404 <_dtoa_r>:
    6404:	b5f0      	push	{r4, r5, r6, r7, lr}
    6406:	4657      	mov	r7, sl
    6408:	464e      	mov	r6, r9
    640a:	4645      	mov	r5, r8
    640c:	46de      	mov	lr, fp
    640e:	b5e0      	push	{r5, r6, r7, lr}
    6410:	6c01      	ldr	r1, [r0, #64]	; 0x40
    6412:	b099      	sub	sp, #100	; 0x64
    6414:	4682      	mov	sl, r0
    6416:	001d      	movs	r5, r3
    6418:	0016      	movs	r6, r2
    641a:	001f      	movs	r7, r3
    641c:	2900      	cmp	r1, #0
    641e:	d009      	beq.n	6434 <_dtoa_r+0x30>
    6420:	2301      	movs	r3, #1
    6422:	6c42      	ldr	r2, [r0, #68]	; 0x44
    6424:	4093      	lsls	r3, r2
    6426:	604a      	str	r2, [r1, #4]
    6428:	608b      	str	r3, [r1, #8]
    642a:	f001 fff5 	bl	8418 <_Bfree>
    642e:	2300      	movs	r3, #0
    6430:	4652      	mov	r2, sl
    6432:	6413      	str	r3, [r2, #64]	; 0x40
    6434:	46b8      	mov	r8, r7
    6436:	2f00      	cmp	r7, #0
    6438:	db37      	blt.n	64aa <_dtoa_r+0xa6>
    643a:	2300      	movs	r3, #0
    643c:	9a25      	ldr	r2, [sp, #148]	; 0x94
    643e:	6013      	str	r3, [r2, #0]
    6440:	4642      	mov	r2, r8
    6442:	4bd6      	ldr	r3, [pc, #856]	; (679c <_dtoa_r+0x398>)
    6444:	401a      	ands	r2, r3
    6446:	429a      	cmp	r2, r3
    6448:	d018      	beq.n	647c <_dtoa_r+0x78>
    644a:	2200      	movs	r2, #0
    644c:	2300      	movs	r3, #0
    644e:	0030      	movs	r0, r6
    6450:	0039      	movs	r1, r7
    6452:	f7fd ffd9 	bl	4408 <__aeabi_dcmpeq>
    6456:	2800      	cmp	r0, #0
    6458:	d02f      	beq.n	64ba <_dtoa_r+0xb6>
    645a:	2301      	movs	r3, #1
    645c:	9a24      	ldr	r2, [sp, #144]	; 0x90
    645e:	6013      	str	r3, [r2, #0]
    6460:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6462:	2b00      	cmp	r3, #0
    6464:	d100      	bne.n	6468 <_dtoa_r+0x64>
    6466:	e22a      	b.n	68be <_dtoa_r+0x4ba>
    6468:	48cd      	ldr	r0, [pc, #820]	; (67a0 <_dtoa_r+0x39c>)
    646a:	6018      	str	r0, [r3, #0]
    646c:	3801      	subs	r0, #1
    646e:	b019      	add	sp, #100	; 0x64
    6470:	bc3c      	pop	{r2, r3, r4, r5}
    6472:	4690      	mov	r8, r2
    6474:	4699      	mov	r9, r3
    6476:	46a2      	mov	sl, r4
    6478:	46ab      	mov	fp, r5
    647a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    647c:	4bc9      	ldr	r3, [pc, #804]	; (67a4 <_dtoa_r+0x3a0>)
    647e:	9a24      	ldr	r2, [sp, #144]	; 0x90
    6480:	6013      	str	r3, [r2, #0]
    6482:	2e00      	cmp	r6, #0
    6484:	d10b      	bne.n	649e <_dtoa_r+0x9a>
    6486:	4643      	mov	r3, r8
    6488:	0318      	lsls	r0, r3, #12
    648a:	d108      	bne.n	649e <_dtoa_r+0x9a>
    648c:	9b26      	ldr	r3, [sp, #152]	; 0x98
    648e:	48c6      	ldr	r0, [pc, #792]	; (67a8 <_dtoa_r+0x3a4>)
    6490:	2b00      	cmp	r3, #0
    6492:	d0ec      	beq.n	646e <_dtoa_r+0x6a>
    6494:	0003      	movs	r3, r0
    6496:	3308      	adds	r3, #8
    6498:	9a26      	ldr	r2, [sp, #152]	; 0x98
    649a:	6013      	str	r3, [r2, #0]
    649c:	e7e7      	b.n	646e <_dtoa_r+0x6a>
    649e:	9b26      	ldr	r3, [sp, #152]	; 0x98
    64a0:	48c2      	ldr	r0, [pc, #776]	; (67ac <_dtoa_r+0x3a8>)
    64a2:	2b00      	cmp	r3, #0
    64a4:	d0e3      	beq.n	646e <_dtoa_r+0x6a>
    64a6:	1cc3      	adds	r3, r0, #3
    64a8:	e7f6      	b.n	6498 <_dtoa_r+0x94>
    64aa:	2301      	movs	r3, #1
    64ac:	9a25      	ldr	r2, [sp, #148]	; 0x94
    64ae:	0068      	lsls	r0, r5, #1
    64b0:	6013      	str	r3, [r2, #0]
    64b2:	0843      	lsrs	r3, r0, #1
    64b4:	4698      	mov	r8, r3
    64b6:	001f      	movs	r7, r3
    64b8:	e7c2      	b.n	6440 <_dtoa_r+0x3c>
    64ba:	ab16      	add	r3, sp, #88	; 0x58
    64bc:	9301      	str	r3, [sp, #4]
    64be:	ab17      	add	r3, sp, #92	; 0x5c
    64c0:	9300      	str	r3, [sp, #0]
    64c2:	0032      	movs	r2, r6
    64c4:	003b      	movs	r3, r7
    64c6:	4650      	mov	r0, sl
    64c8:	f002 fa68 	bl	899c <__d2b>
    64cc:	4643      	mov	r3, r8
    64ce:	4683      	mov	fp, r0
    64d0:	0d1a      	lsrs	r2, r3, #20
    64d2:	d100      	bne.n	64d6 <_dtoa_r+0xd2>
    64d4:	e1d6      	b.n	6884 <_dtoa_r+0x480>
    64d6:	033b      	lsls	r3, r7, #12
    64d8:	4cb5      	ldr	r4, [pc, #724]	; (67b0 <_dtoa_r+0x3ac>)
    64da:	0b1b      	lsrs	r3, r3, #12
    64dc:	431c      	orrs	r4, r3
    64de:	4bb5      	ldr	r3, [pc, #724]	; (67b4 <_dtoa_r+0x3b0>)
    64e0:	0030      	movs	r0, r6
    64e2:	4698      	mov	r8, r3
    64e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
    64e6:	0021      	movs	r1, r4
    64e8:	4699      	mov	r9, r3
    64ea:	2300      	movs	r3, #0
    64ec:	4490      	add	r8, r2
    64ee:	930f      	str	r3, [sp, #60]	; 0x3c
    64f0:	2200      	movs	r2, #0
    64f2:	4bb1      	ldr	r3, [pc, #708]	; (67b8 <_dtoa_r+0x3b4>)
    64f4:	f7fd fad8 	bl	3aa8 <__aeabi_dsub>
    64f8:	4ab0      	ldr	r2, [pc, #704]	; (67bc <_dtoa_r+0x3b8>)
    64fa:	4bb1      	ldr	r3, [pc, #708]	; (67c0 <_dtoa_r+0x3bc>)
    64fc:	f7fd f854 	bl	35a8 <__aeabi_dmul>
    6500:	4ab0      	ldr	r2, [pc, #704]	; (67c4 <_dtoa_r+0x3c0>)
    6502:	4bb1      	ldr	r3, [pc, #708]	; (67c8 <_dtoa_r+0x3c4>)
    6504:	f003 f8b2 	bl	966c <__aeabi_dadd>
    6508:	0004      	movs	r4, r0
    650a:	4640      	mov	r0, r8
    650c:	000d      	movs	r5, r1
    650e:	f7fd fe15 	bl	413c <__aeabi_i2d>
    6512:	4aae      	ldr	r2, [pc, #696]	; (67cc <_dtoa_r+0x3c8>)
    6514:	4bae      	ldr	r3, [pc, #696]	; (67d0 <_dtoa_r+0x3cc>)
    6516:	f7fd f847 	bl	35a8 <__aeabi_dmul>
    651a:	0002      	movs	r2, r0
    651c:	000b      	movs	r3, r1
    651e:	0020      	movs	r0, r4
    6520:	0029      	movs	r1, r5
    6522:	f003 f8a3 	bl	966c <__aeabi_dadd>
    6526:	0004      	movs	r4, r0
    6528:	000d      	movs	r5, r1
    652a:	f7fd fdd3 	bl	40d4 <__aeabi_d2iz>
    652e:	2200      	movs	r2, #0
    6530:	9003      	str	r0, [sp, #12]
    6532:	2300      	movs	r3, #0
    6534:	0020      	movs	r0, r4
    6536:	0029      	movs	r1, r5
    6538:	f7fd ff6c 	bl	4414 <__aeabi_dcmplt>
    653c:	2800      	cmp	r0, #0
    653e:	d000      	beq.n	6542 <_dtoa_r+0x13e>
    6540:	e2b1      	b.n	6aa6 <_dtoa_r+0x6a2>
    6542:	2301      	movs	r3, #1
    6544:	9c03      	ldr	r4, [sp, #12]
    6546:	930c      	str	r3, [sp, #48]	; 0x30
    6548:	2c16      	cmp	r4, #22
    654a:	d810      	bhi.n	656e <_dtoa_r+0x16a>
    654c:	49a1      	ldr	r1, [pc, #644]	; (67d4 <_dtoa_r+0x3d0>)
    654e:	00e3      	lsls	r3, r4, #3
    6550:	18c9      	adds	r1, r1, r3
    6552:	0032      	movs	r2, r6
    6554:	6808      	ldr	r0, [r1, #0]
    6556:	6849      	ldr	r1, [r1, #4]
    6558:	003b      	movs	r3, r7
    655a:	f7fd ff6f 	bl	443c <__aeabi_dcmpgt>
    655e:	2800      	cmp	r0, #0
    6560:	d100      	bne.n	6564 <_dtoa_r+0x160>
    6562:	e31d      	b.n	6ba0 <_dtoa_r+0x79c>
    6564:	0023      	movs	r3, r4
    6566:	3b01      	subs	r3, #1
    6568:	9303      	str	r3, [sp, #12]
    656a:	2300      	movs	r3, #0
    656c:	930c      	str	r3, [sp, #48]	; 0x30
    656e:	464b      	mov	r3, r9
    6570:	4642      	mov	r2, r8
    6572:	1a9a      	subs	r2, r3, r2
    6574:	2300      	movs	r3, #0
    6576:	9306      	str	r3, [sp, #24]
    6578:	0013      	movs	r3, r2
    657a:	3b01      	subs	r3, #1
    657c:	9304      	str	r3, [sp, #16]
    657e:	d500      	bpl.n	6582 <_dtoa_r+0x17e>
    6580:	e2a1      	b.n	6ac6 <_dtoa_r+0x6c2>
    6582:	9b03      	ldr	r3, [sp, #12]
    6584:	2b00      	cmp	r3, #0
    6586:	da00      	bge.n	658a <_dtoa_r+0x186>
    6588:	e284      	b.n	6a94 <_dtoa_r+0x690>
    658a:	469c      	mov	ip, r3
    658c:	930d      	str	r3, [sp, #52]	; 0x34
    658e:	2300      	movs	r3, #0
    6590:	9a04      	ldr	r2, [sp, #16]
    6592:	4699      	mov	r9, r3
    6594:	0011      	movs	r1, r2
    6596:	4461      	add	r1, ip
    6598:	9104      	str	r1, [sp, #16]
    659a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    659c:	2b09      	cmp	r3, #9
    659e:	d900      	bls.n	65a2 <_dtoa_r+0x19e>
    65a0:	e18f      	b.n	68c2 <_dtoa_r+0x4be>
    65a2:	2401      	movs	r4, #1
    65a4:	2b05      	cmp	r3, #5
    65a6:	dd02      	ble.n	65ae <_dtoa_r+0x1aa>
    65a8:	2400      	movs	r4, #0
    65aa:	3b04      	subs	r3, #4
    65ac:	9322      	str	r3, [sp, #136]	; 0x88
    65ae:	9b22      	ldr	r3, [sp, #136]	; 0x88
    65b0:	2b03      	cmp	r3, #3
    65b2:	d101      	bne.n	65b8 <_dtoa_r+0x1b4>
    65b4:	f000 fcce 	bl	6f54 <_dtoa_r+0xb50>
    65b8:	dc01      	bgt.n	65be <_dtoa_r+0x1ba>
    65ba:	f000 fc92 	bl	6ee2 <_dtoa_r+0xade>
    65be:	9b22      	ldr	r3, [sp, #136]	; 0x88
    65c0:	2b04      	cmp	r3, #4
    65c2:	d101      	bne.n	65c8 <_dtoa_r+0x1c4>
    65c4:	f000 fc40 	bl	6e48 <_dtoa_r+0xa44>
    65c8:	2301      	movs	r3, #1
    65ca:	930b      	str	r3, [sp, #44]	; 0x2c
    65cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
    65ce:	2b05      	cmp	r3, #5
    65d0:	d001      	beq.n	65d6 <_dtoa_r+0x1d2>
    65d2:	f000 fc8b 	bl	6eec <_dtoa_r+0xae8>
    65d6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    65d8:	9b03      	ldr	r3, [sp, #12]
    65da:	4694      	mov	ip, r2
    65dc:	4463      	add	r3, ip
    65de:	930e      	str	r3, [sp, #56]	; 0x38
    65e0:	3301      	adds	r3, #1
    65e2:	9307      	str	r3, [sp, #28]
    65e4:	1e1d      	subs	r5, r3, #0
    65e6:	dc01      	bgt.n	65ec <_dtoa_r+0x1e8>
    65e8:	f000 fd49 	bl	707e <_dtoa_r+0xc7a>
    65ec:	9b07      	ldr	r3, [sp, #28]
    65ee:	4698      	mov	r8, r3
    65f0:	2300      	movs	r3, #0
    65f2:	4652      	mov	r2, sl
    65f4:	2100      	movs	r1, #0
    65f6:	6453      	str	r3, [r2, #68]	; 0x44
    65f8:	2d17      	cmp	r5, #23
    65fa:	d90a      	bls.n	6612 <_dtoa_r+0x20e>
    65fc:	2201      	movs	r2, #1
    65fe:	3304      	adds	r3, #4
    6600:	005b      	lsls	r3, r3, #1
    6602:	0018      	movs	r0, r3
    6604:	3014      	adds	r0, #20
    6606:	0011      	movs	r1, r2
    6608:	3201      	adds	r2, #1
    660a:	4285      	cmp	r5, r0
    660c:	d2f8      	bcs.n	6600 <_dtoa_r+0x1fc>
    660e:	4653      	mov	r3, sl
    6610:	6459      	str	r1, [r3, #68]	; 0x44
    6612:	4650      	mov	r0, sl
    6614:	f001 fed8 	bl	83c8 <_Balloc>
    6618:	4653      	mov	r3, sl
    661a:	6418      	str	r0, [r3, #64]	; 0x40
    661c:	4643      	mov	r3, r8
    661e:	900a      	str	r0, [sp, #40]	; 0x28
    6620:	2b0e      	cmp	r3, #14
    6622:	d900      	bls.n	6626 <_dtoa_r+0x222>
    6624:	e161      	b.n	68ea <_dtoa_r+0x4e6>
    6626:	2c00      	cmp	r4, #0
    6628:	d100      	bne.n	662c <_dtoa_r+0x228>
    662a:	e15e      	b.n	68ea <_dtoa_r+0x4e6>
    662c:	9610      	str	r6, [sp, #64]	; 0x40
    662e:	9711      	str	r7, [sp, #68]	; 0x44
    6630:	9e03      	ldr	r6, [sp, #12]
    6632:	2e00      	cmp	r6, #0
    6634:	dc01      	bgt.n	663a <_dtoa_r+0x236>
    6636:	f000 fd25 	bl	7084 <_dtoa_r+0xc80>
    663a:	0032      	movs	r2, r6
    663c:	210f      	movs	r1, #15
    663e:	4b65      	ldr	r3, [pc, #404]	; (67d4 <_dtoa_r+0x3d0>)
    6640:	400a      	ands	r2, r1
    6642:	00d2      	lsls	r2, r2, #3
    6644:	189b      	adds	r3, r3, r2
    6646:	1136      	asrs	r6, r6, #4
    6648:	681c      	ldr	r4, [r3, #0]
    664a:	685d      	ldr	r5, [r3, #4]
    664c:	06f3      	lsls	r3, r6, #27
    664e:	d401      	bmi.n	6654 <_dtoa_r+0x250>
    6650:	f000 fcca 	bl	6fe8 <_dtoa_r+0xbe4>
    6654:	4b60      	ldr	r3, [pc, #384]	; (67d8 <_dtoa_r+0x3d4>)
    6656:	400e      	ands	r6, r1
    6658:	6a1a      	ldr	r2, [r3, #32]
    665a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    665c:	9810      	ldr	r0, [sp, #64]	; 0x40
    665e:	9911      	ldr	r1, [sp, #68]	; 0x44
    6660:	f7fc fc6e 	bl	2f40 <__aeabi_ddiv>
    6664:	2303      	movs	r3, #3
    6666:	4698      	mov	r8, r3
    6668:	9008      	str	r0, [sp, #32]
    666a:	9109      	str	r1, [sp, #36]	; 0x24
    666c:	2e00      	cmp	r6, #0
    666e:	d011      	beq.n	6694 <_dtoa_r+0x290>
    6670:	4f59      	ldr	r7, [pc, #356]	; (67d8 <_dtoa_r+0x3d4>)
    6672:	2301      	movs	r3, #1
    6674:	4233      	tst	r3, r6
    6676:	d009      	beq.n	668c <_dtoa_r+0x288>
    6678:	469c      	mov	ip, r3
    667a:	683a      	ldr	r2, [r7, #0]
    667c:	687b      	ldr	r3, [r7, #4]
    667e:	0020      	movs	r0, r4
    6680:	0029      	movs	r1, r5
    6682:	44e0      	add	r8, ip
    6684:	f7fc ff90 	bl	35a8 <__aeabi_dmul>
    6688:	0004      	movs	r4, r0
    668a:	000d      	movs	r5, r1
    668c:	1076      	asrs	r6, r6, #1
    668e:	3708      	adds	r7, #8
    6690:	2e00      	cmp	r6, #0
    6692:	d1ee      	bne.n	6672 <_dtoa_r+0x26e>
    6694:	0022      	movs	r2, r4
    6696:	9808      	ldr	r0, [sp, #32]
    6698:	9909      	ldr	r1, [sp, #36]	; 0x24
    669a:	002b      	movs	r3, r5
    669c:	f7fc fc50 	bl	2f40 <__aeabi_ddiv>
    66a0:	0006      	movs	r6, r0
    66a2:	000f      	movs	r7, r1
    66a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    66a6:	2b00      	cmp	r3, #0
    66a8:	d009      	beq.n	66be <_dtoa_r+0x2ba>
    66aa:	2200      	movs	r2, #0
    66ac:	4b40      	ldr	r3, [pc, #256]	; (67b0 <_dtoa_r+0x3ac>)
    66ae:	0030      	movs	r0, r6
    66b0:	0039      	movs	r1, r7
    66b2:	f7fd feaf 	bl	4414 <__aeabi_dcmplt>
    66b6:	2800      	cmp	r0, #0
    66b8:	d001      	beq.n	66be <_dtoa_r+0x2ba>
    66ba:	f000 fdc2 	bl	7242 <_dtoa_r+0xe3e>
    66be:	4640      	mov	r0, r8
    66c0:	f7fd fd3c 	bl	413c <__aeabi_i2d>
    66c4:	0032      	movs	r2, r6
    66c6:	003b      	movs	r3, r7
    66c8:	f7fc ff6e 	bl	35a8 <__aeabi_dmul>
    66cc:	2200      	movs	r2, #0
    66ce:	4b43      	ldr	r3, [pc, #268]	; (67dc <_dtoa_r+0x3d8>)
    66d0:	f002 ffcc 	bl	966c <__aeabi_dadd>
    66d4:	4a42      	ldr	r2, [pc, #264]	; (67e0 <_dtoa_r+0x3dc>)
    66d6:	000b      	movs	r3, r1
    66d8:	4694      	mov	ip, r2
    66da:	4463      	add	r3, ip
    66dc:	9008      	str	r0, [sp, #32]
    66de:	9109      	str	r1, [sp, #36]	; 0x24
    66e0:	9309      	str	r3, [sp, #36]	; 0x24
    66e2:	9b07      	ldr	r3, [sp, #28]
    66e4:	2b00      	cmp	r3, #0
    66e6:	d101      	bne.n	66ec <_dtoa_r+0x2e8>
    66e8:	f000 fc50 	bl	6f8c <_dtoa_r+0xb88>
    66ec:	9b03      	ldr	r3, [sp, #12]
    66ee:	9313      	str	r3, [sp, #76]	; 0x4c
    66f0:	9b07      	ldr	r3, [sp, #28]
    66f2:	9312      	str	r3, [sp, #72]	; 0x48
    66f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    66f6:	2b00      	cmp	r3, #0
    66f8:	d101      	bne.n	66fe <_dtoa_r+0x2fa>
    66fa:	f000 fd1d 	bl	7138 <_dtoa_r+0xd34>
    66fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6700:	2000      	movs	r0, #0
    6702:	1e5a      	subs	r2, r3, #1
    6704:	4b33      	ldr	r3, [pc, #204]	; (67d4 <_dtoa_r+0x3d0>)
    6706:	00d2      	lsls	r2, r2, #3
    6708:	189b      	adds	r3, r3, r2
    670a:	681a      	ldr	r2, [r3, #0]
    670c:	685b      	ldr	r3, [r3, #4]
    670e:	4935      	ldr	r1, [pc, #212]	; (67e4 <_dtoa_r+0x3e0>)
    6710:	f7fc fc16 	bl	2f40 <__aeabi_ddiv>
    6714:	9a08      	ldr	r2, [sp, #32]
    6716:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6718:	f7fd f9c6 	bl	3aa8 <__aeabi_dsub>
    671c:	9008      	str	r0, [sp, #32]
    671e:	9109      	str	r1, [sp, #36]	; 0x24
    6720:	0039      	movs	r1, r7
    6722:	0030      	movs	r0, r6
    6724:	f7fd fcd6 	bl	40d4 <__aeabi_d2iz>
    6728:	0004      	movs	r4, r0
    672a:	f7fd fd07 	bl	413c <__aeabi_i2d>
    672e:	0002      	movs	r2, r0
    6730:	000b      	movs	r3, r1
    6732:	0030      	movs	r0, r6
    6734:	0039      	movs	r1, r7
    6736:	f7fd f9b7 	bl	3aa8 <__aeabi_dsub>
    673a:	0005      	movs	r5, r0
    673c:	000e      	movs	r6, r1
    673e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6740:	3430      	adds	r4, #48	; 0x30
    6742:	1c51      	adds	r1, r2, #1
    6744:	b2e7      	uxtb	r7, r4
    6746:	9114      	str	r1, [sp, #80]	; 0x50
    6748:	7017      	strb	r7, [r2, #0]
    674a:	0033      	movs	r3, r6
    674c:	9808      	ldr	r0, [sp, #32]
    674e:	9909      	ldr	r1, [sp, #36]	; 0x24
    6750:	002a      	movs	r2, r5
    6752:	f7fd fe73 	bl	443c <__aeabi_dcmpgt>
    6756:	2800      	cmp	r0, #0
    6758:	d001      	beq.n	675e <_dtoa_r+0x35a>
    675a:	f000 fdfe 	bl	735a <_dtoa_r+0xf56>
    675e:	002a      	movs	r2, r5
    6760:	0033      	movs	r3, r6
    6762:	2000      	movs	r0, #0
    6764:	4912      	ldr	r1, [pc, #72]	; (67b0 <_dtoa_r+0x3ac>)
    6766:	f7fd f99f 	bl	3aa8 <__aeabi_dsub>
    676a:	0002      	movs	r2, r0
    676c:	000b      	movs	r3, r1
    676e:	9808      	ldr	r0, [sp, #32]
    6770:	9909      	ldr	r1, [sp, #36]	; 0x24
    6772:	f7fd fe63 	bl	443c <__aeabi_dcmpgt>
    6776:	2800      	cmp	r0, #0
    6778:	d001      	beq.n	677e <_dtoa_r+0x37a>
    677a:	f000 fde7 	bl	734c <_dtoa_r+0xf48>
    677e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6780:	2b01      	cmp	r3, #1
    6782:	d101      	bne.n	6788 <_dtoa_r+0x384>
    6784:	f000 fc78 	bl	7078 <_dtoa_r+0xc74>
    6788:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    678a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    678c:	4694      	mov	ip, r2
    678e:	4463      	add	r3, ip
    6790:	4698      	mov	r8, r3
    6792:	464b      	mov	r3, r9
    6794:	9312      	str	r3, [sp, #72]	; 0x48
    6796:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6798:	4699      	mov	r9, r3
    679a:	e038      	b.n	680e <_dtoa_r+0x40a>
    679c:	7ff00000 	.word	0x7ff00000
    67a0:	0000a2b9 	.word	0x0000a2b9
    67a4:	0000270f 	.word	0x0000270f
    67a8:	0000a2dc 	.word	0x0000a2dc
    67ac:	0000a2e8 	.word	0x0000a2e8
    67b0:	3ff00000 	.word	0x3ff00000
    67b4:	fffffc01 	.word	0xfffffc01
    67b8:	3ff80000 	.word	0x3ff80000
    67bc:	636f4361 	.word	0x636f4361
    67c0:	3fd287a7 	.word	0x3fd287a7
    67c4:	8b60c8b3 	.word	0x8b60c8b3
    67c8:	3fc68a28 	.word	0x3fc68a28
    67cc:	509f79fb 	.word	0x509f79fb
    67d0:	3fd34413 	.word	0x3fd34413
    67d4:	0000a318 	.word	0x0000a318
    67d8:	0000a2f0 	.word	0x0000a2f0
    67dc:	401c0000 	.word	0x401c0000
    67e0:	fcc00000 	.word	0xfcc00000
    67e4:	3fe00000 	.word	0x3fe00000
    67e8:	002a      	movs	r2, r5
    67ea:	0033      	movs	r3, r6
    67ec:	2000      	movs	r0, #0
    67ee:	49b9      	ldr	r1, [pc, #740]	; (6ad4 <_dtoa_r+0x6d0>)
    67f0:	f7fd f95a 	bl	3aa8 <__aeabi_dsub>
    67f4:	9a08      	ldr	r2, [sp, #32]
    67f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    67f8:	f7fd fe0c 	bl	4414 <__aeabi_dcmplt>
    67fc:	2800      	cmp	r0, #0
    67fe:	d001      	beq.n	6804 <_dtoa_r+0x400>
    6800:	f000 fd74 	bl	72ec <_dtoa_r+0xee8>
    6804:	46a1      	mov	r9, r4
    6806:	4544      	cmp	r4, r8
    6808:	d101      	bne.n	680e <_dtoa_r+0x40a>
    680a:	f000 fc33 	bl	7074 <_dtoa_r+0xc70>
    680e:	9808      	ldr	r0, [sp, #32]
    6810:	9909      	ldr	r1, [sp, #36]	; 0x24
    6812:	2200      	movs	r2, #0
    6814:	4bb0      	ldr	r3, [pc, #704]	; (6ad8 <_dtoa_r+0x6d4>)
    6816:	f7fc fec7 	bl	35a8 <__aeabi_dmul>
    681a:	2200      	movs	r2, #0
    681c:	4bae      	ldr	r3, [pc, #696]	; (6ad8 <_dtoa_r+0x6d4>)
    681e:	9008      	str	r0, [sp, #32]
    6820:	9109      	str	r1, [sp, #36]	; 0x24
    6822:	0028      	movs	r0, r5
    6824:	0031      	movs	r1, r6
    6826:	f7fc febf 	bl	35a8 <__aeabi_dmul>
    682a:	000d      	movs	r5, r1
    682c:	0004      	movs	r4, r0
    682e:	f7fd fc51 	bl	40d4 <__aeabi_d2iz>
    6832:	0007      	movs	r7, r0
    6834:	f7fd fc82 	bl	413c <__aeabi_i2d>
    6838:	0002      	movs	r2, r0
    683a:	000b      	movs	r3, r1
    683c:	0020      	movs	r0, r4
    683e:	0029      	movs	r1, r5
    6840:	f7fd f932 	bl	3aa8 <__aeabi_dsub>
    6844:	464b      	mov	r3, r9
    6846:	3730      	adds	r7, #48	; 0x30
    6848:	b2ff      	uxtb	r7, r7
    684a:	1c5c      	adds	r4, r3, #1
    684c:	701f      	strb	r7, [r3, #0]
    684e:	9a08      	ldr	r2, [sp, #32]
    6850:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6852:	0005      	movs	r5, r0
    6854:	000e      	movs	r6, r1
    6856:	f7fd fddd 	bl	4414 <__aeabi_dcmplt>
    685a:	2800      	cmp	r0, #0
    685c:	d0c4      	beq.n	67e8 <_dtoa_r+0x3e4>
    685e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6860:	9303      	str	r3, [sp, #12]
    6862:	4659      	mov	r1, fp
    6864:	4650      	mov	r0, sl
    6866:	f001 fdd7 	bl	8418 <_Bfree>
    686a:	2300      	movs	r3, #0
    686c:	7023      	strb	r3, [r4, #0]
    686e:	9b03      	ldr	r3, [sp, #12]
    6870:	9a24      	ldr	r2, [sp, #144]	; 0x90
    6872:	3301      	adds	r3, #1
    6874:	6013      	str	r3, [r2, #0]
    6876:	9b26      	ldr	r3, [sp, #152]	; 0x98
    6878:	2b00      	cmp	r3, #0
    687a:	d100      	bne.n	687e <_dtoa_r+0x47a>
    687c:	e3a8      	b.n	6fd0 <_dtoa_r+0xbcc>
    687e:	601c      	str	r4, [r3, #0]
    6880:	980a      	ldr	r0, [sp, #40]	; 0x28
    6882:	e5f4      	b.n	646e <_dtoa_r+0x6a>
    6884:	9b16      	ldr	r3, [sp, #88]	; 0x58
    6886:	4699      	mov	r9, r3
    6888:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    688a:	444b      	add	r3, r9
    688c:	001c      	movs	r4, r3
    688e:	4b93      	ldr	r3, [pc, #588]	; (6adc <_dtoa_r+0x6d8>)
    6890:	18e3      	adds	r3, r4, r3
    6892:	2b20      	cmp	r3, #32
    6894:	dc00      	bgt.n	6898 <_dtoa_r+0x494>
    6896:	e17e      	b.n	6b96 <_dtoa_r+0x792>
    6898:	0031      	movs	r1, r6
    689a:	4a91      	ldr	r2, [pc, #580]	; (6ae0 <_dtoa_r+0x6dc>)
    689c:	4640      	mov	r0, r8
    689e:	18a2      	adds	r2, r4, r2
    68a0:	40d1      	lsrs	r1, r2
    68a2:	000a      	movs	r2, r1
    68a4:	2140      	movs	r1, #64	; 0x40
    68a6:	1acb      	subs	r3, r1, r3
    68a8:	4098      	lsls	r0, r3
    68aa:	4310      	orrs	r0, r2
    68ac:	f7fd fc88 	bl	41c0 <__aeabi_ui2d>
    68b0:	1e63      	subs	r3, r4, #1
    68b2:	4698      	mov	r8, r3
    68b4:	2301      	movs	r3, #1
    68b6:	4d8b      	ldr	r5, [pc, #556]	; (6ae4 <_dtoa_r+0x6e0>)
    68b8:	930f      	str	r3, [sp, #60]	; 0x3c
    68ba:	1949      	adds	r1, r1, r5
    68bc:	e618      	b.n	64f0 <_dtoa_r+0xec>
    68be:	488a      	ldr	r0, [pc, #552]	; (6ae8 <_dtoa_r+0x6e4>)
    68c0:	e5d5      	b.n	646e <_dtoa_r+0x6a>
    68c2:	2300      	movs	r3, #0
    68c4:	4652      	mov	r2, sl
    68c6:	2100      	movs	r1, #0
    68c8:	6453      	str	r3, [r2, #68]	; 0x44
    68ca:	4650      	mov	r0, sl
    68cc:	f001 fd7c 	bl	83c8 <_Balloc>
    68d0:	4653      	mov	r3, sl
    68d2:	6418      	str	r0, [r3, #64]	; 0x40
    68d4:	2301      	movs	r3, #1
    68d6:	425b      	negs	r3, r3
    68d8:	9307      	str	r3, [sp, #28]
    68da:	930e      	str	r3, [sp, #56]	; 0x38
    68dc:	3302      	adds	r3, #2
    68de:	2200      	movs	r2, #0
    68e0:	930b      	str	r3, [sp, #44]	; 0x2c
    68e2:	2300      	movs	r3, #0
    68e4:	900a      	str	r0, [sp, #40]	; 0x28
    68e6:	9223      	str	r2, [sp, #140]	; 0x8c
    68e8:	9322      	str	r3, [sp, #136]	; 0x88
    68ea:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    68ec:	2b00      	cmp	r3, #0
    68ee:	da00      	bge.n	68f2 <_dtoa_r+0x4ee>
    68f0:	e0ab      	b.n	6a4a <_dtoa_r+0x646>
    68f2:	9a03      	ldr	r2, [sp, #12]
    68f4:	2a0e      	cmp	r2, #14
    68f6:	dd00      	ble.n	68fa <_dtoa_r+0x4f6>
    68f8:	e0a7      	b.n	6a4a <_dtoa_r+0x646>
    68fa:	4b7c      	ldr	r3, [pc, #496]	; (6aec <_dtoa_r+0x6e8>)
    68fc:	00d2      	lsls	r2, r2, #3
    68fe:	189b      	adds	r3, r3, r2
    6900:	685c      	ldr	r4, [r3, #4]
    6902:	681b      	ldr	r3, [r3, #0]
    6904:	9304      	str	r3, [sp, #16]
    6906:	9405      	str	r4, [sp, #20]
    6908:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    690a:	2b00      	cmp	r3, #0
    690c:	da00      	bge.n	6910 <_dtoa_r+0x50c>
    690e:	e2a7      	b.n	6e60 <_dtoa_r+0xa5c>
    6910:	9c04      	ldr	r4, [sp, #16]
    6912:	9d05      	ldr	r5, [sp, #20]
    6914:	0030      	movs	r0, r6
    6916:	0022      	movs	r2, r4
    6918:	002b      	movs	r3, r5
    691a:	0039      	movs	r1, r7
    691c:	f7fc fb10 	bl	2f40 <__aeabi_ddiv>
    6920:	f7fd fbd8 	bl	40d4 <__aeabi_d2iz>
    6924:	4680      	mov	r8, r0
    6926:	f7fd fc09 	bl	413c <__aeabi_i2d>
    692a:	0022      	movs	r2, r4
    692c:	002b      	movs	r3, r5
    692e:	f7fc fe3b 	bl	35a8 <__aeabi_dmul>
    6932:	0002      	movs	r2, r0
    6934:	000b      	movs	r3, r1
    6936:	0030      	movs	r0, r6
    6938:	0039      	movs	r1, r7
    693a:	f7fd f8b5 	bl	3aa8 <__aeabi_dsub>
    693e:	4643      	mov	r3, r8
    6940:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6942:	3330      	adds	r3, #48	; 0x30
    6944:	7013      	strb	r3, [r2, #0]
    6946:	9b07      	ldr	r3, [sp, #28]
    6948:	0006      	movs	r6, r0
    694a:	000f      	movs	r7, r1
    694c:	1c54      	adds	r4, r2, #1
    694e:	2b01      	cmp	r3, #1
    6950:	d04e      	beq.n	69f0 <_dtoa_r+0x5ec>
    6952:	2200      	movs	r2, #0
    6954:	4b60      	ldr	r3, [pc, #384]	; (6ad8 <_dtoa_r+0x6d4>)
    6956:	f7fc fe27 	bl	35a8 <__aeabi_dmul>
    695a:	2200      	movs	r2, #0
    695c:	2300      	movs	r3, #0
    695e:	0006      	movs	r6, r0
    6960:	000f      	movs	r7, r1
    6962:	f7fd fd51 	bl	4408 <__aeabi_dcmpeq>
    6966:	2800      	cmp	r0, #0
    6968:	d000      	beq.n	696c <_dtoa_r+0x568>
    696a:	e77a      	b.n	6862 <_dtoa_r+0x45e>
    696c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    696e:	9a07      	ldr	r2, [sp, #28]
    6970:	1c9d      	adds	r5, r3, #2
    6972:	469c      	mov	ip, r3
    6974:	465b      	mov	r3, fp
    6976:	9306      	str	r3, [sp, #24]
    6978:	4653      	mov	r3, sl
    697a:	4462      	add	r2, ip
    697c:	46aa      	mov	sl, r5
    697e:	9c04      	ldr	r4, [sp, #16]
    6980:	9d05      	ldr	r5, [sp, #20]
    6982:	4691      	mov	r9, r2
    6984:	9307      	str	r3, [sp, #28]
    6986:	e00f      	b.n	69a8 <_dtoa_r+0x5a4>
    6988:	2200      	movs	r2, #0
    698a:	4b53      	ldr	r3, [pc, #332]	; (6ad8 <_dtoa_r+0x6d4>)
    698c:	f7fc fe0c 	bl	35a8 <__aeabi_dmul>
    6990:	2301      	movs	r3, #1
    6992:	469c      	mov	ip, r3
    6994:	2200      	movs	r2, #0
    6996:	2300      	movs	r3, #0
    6998:	0006      	movs	r6, r0
    699a:	000f      	movs	r7, r1
    699c:	44e2      	add	sl, ip
    699e:	f7fd fd33 	bl	4408 <__aeabi_dcmpeq>
    69a2:	2800      	cmp	r0, #0
    69a4:	d000      	beq.n	69a8 <_dtoa_r+0x5a4>
    69a6:	e2d9      	b.n	6f5c <_dtoa_r+0xb58>
    69a8:	0022      	movs	r2, r4
    69aa:	002b      	movs	r3, r5
    69ac:	0030      	movs	r0, r6
    69ae:	0039      	movs	r1, r7
    69b0:	f7fc fac6 	bl	2f40 <__aeabi_ddiv>
    69b4:	f7fd fb8e 	bl	40d4 <__aeabi_d2iz>
    69b8:	4680      	mov	r8, r0
    69ba:	f7fd fbbf 	bl	413c <__aeabi_i2d>
    69be:	0022      	movs	r2, r4
    69c0:	002b      	movs	r3, r5
    69c2:	f7fc fdf1 	bl	35a8 <__aeabi_dmul>
    69c6:	0002      	movs	r2, r0
    69c8:	000b      	movs	r3, r1
    69ca:	0030      	movs	r0, r6
    69cc:	0039      	movs	r1, r7
    69ce:	f7fd f86b 	bl	3aa8 <__aeabi_dsub>
    69d2:	4653      	mov	r3, sl
    69d4:	4642      	mov	r2, r8
    69d6:	3b01      	subs	r3, #1
    69d8:	3230      	adds	r2, #48	; 0x30
    69da:	0006      	movs	r6, r0
    69dc:	000f      	movs	r7, r1
    69de:	46d3      	mov	fp, sl
    69e0:	701a      	strb	r2, [r3, #0]
    69e2:	45d1      	cmp	r9, sl
    69e4:	d1d0      	bne.n	6988 <_dtoa_r+0x584>
    69e6:	9b06      	ldr	r3, [sp, #24]
    69e8:	4654      	mov	r4, sl
    69ea:	469b      	mov	fp, r3
    69ec:	9b07      	ldr	r3, [sp, #28]
    69ee:	469a      	mov	sl, r3
    69f0:	0032      	movs	r2, r6
    69f2:	003b      	movs	r3, r7
    69f4:	0030      	movs	r0, r6
    69f6:	0039      	movs	r1, r7
    69f8:	f002 fe38 	bl	966c <__aeabi_dadd>
    69fc:	0006      	movs	r6, r0
    69fe:	000f      	movs	r7, r1
    6a00:	0002      	movs	r2, r0
    6a02:	000b      	movs	r3, r1
    6a04:	9804      	ldr	r0, [sp, #16]
    6a06:	9905      	ldr	r1, [sp, #20]
    6a08:	f7fd fd04 	bl	4414 <__aeabi_dcmplt>
    6a0c:	2800      	cmp	r0, #0
    6a0e:	d10c      	bne.n	6a2a <_dtoa_r+0x626>
    6a10:	9804      	ldr	r0, [sp, #16]
    6a12:	9905      	ldr	r1, [sp, #20]
    6a14:	0032      	movs	r2, r6
    6a16:	003b      	movs	r3, r7
    6a18:	f7fd fcf6 	bl	4408 <__aeabi_dcmpeq>
    6a1c:	2800      	cmp	r0, #0
    6a1e:	d100      	bne.n	6a22 <_dtoa_r+0x61e>
    6a20:	e71f      	b.n	6862 <_dtoa_r+0x45e>
    6a22:	4643      	mov	r3, r8
    6a24:	07db      	lsls	r3, r3, #31
    6a26:	d400      	bmi.n	6a2a <_dtoa_r+0x626>
    6a28:	e71b      	b.n	6862 <_dtoa_r+0x45e>
    6a2a:	1e65      	subs	r5, r4, #1
    6a2c:	782f      	ldrb	r7, [r5, #0]
    6a2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6a30:	e006      	b.n	6a40 <_dtoa_r+0x63c>
    6a32:	429d      	cmp	r5, r3
    6a34:	d100      	bne.n	6a38 <_dtoa_r+0x634>
    6a36:	e351      	b.n	70dc <_dtoa_r+0xcd8>
    6a38:	3c02      	subs	r4, #2
    6a3a:	7827      	ldrb	r7, [r4, #0]
    6a3c:	002c      	movs	r4, r5
    6a3e:	3d01      	subs	r5, #1
    6a40:	2f39      	cmp	r7, #57	; 0x39
    6a42:	d0f6      	beq.n	6a32 <_dtoa_r+0x62e>
    6a44:	3701      	adds	r7, #1
    6a46:	702f      	strb	r7, [r5, #0]
    6a48:	e70b      	b.n	6862 <_dtoa_r+0x45e>
    6a4a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    6a4c:	2a00      	cmp	r2, #0
    6a4e:	d04f      	beq.n	6af0 <_dtoa_r+0x6ec>
    6a50:	9a22      	ldr	r2, [sp, #136]	; 0x88
    6a52:	2a01      	cmp	r2, #1
    6a54:	dc00      	bgt.n	6a58 <_dtoa_r+0x654>
    6a56:	e22c      	b.n	6eb2 <_dtoa_r+0xaae>
    6a58:	9b07      	ldr	r3, [sp, #28]
    6a5a:	1e5c      	subs	r4, r3, #1
    6a5c:	464b      	mov	r3, r9
    6a5e:	45a1      	cmp	r9, r4
    6a60:	da00      	bge.n	6a64 <_dtoa_r+0x660>
    6a62:	e2b8      	b.n	6fd6 <_dtoa_r+0xbd2>
    6a64:	1b1c      	subs	r4, r3, r4
    6a66:	9b07      	ldr	r3, [sp, #28]
    6a68:	2b00      	cmp	r3, #0
    6a6a:	da00      	bge.n	6a6e <_dtoa_r+0x66a>
    6a6c:	e3d4      	b.n	7218 <_dtoa_r+0xe14>
    6a6e:	9b06      	ldr	r3, [sp, #24]
    6a70:	9308      	str	r3, [sp, #32]
    6a72:	9b07      	ldr	r3, [sp, #28]
    6a74:	9a06      	ldr	r2, [sp, #24]
    6a76:	2101      	movs	r1, #1
    6a78:	4694      	mov	ip, r2
    6a7a:	449c      	add	ip, r3
    6a7c:	4662      	mov	r2, ip
    6a7e:	9206      	str	r2, [sp, #24]
    6a80:	9a04      	ldr	r2, [sp, #16]
    6a82:	4650      	mov	r0, sl
    6a84:	4694      	mov	ip, r2
    6a86:	449c      	add	ip, r3
    6a88:	4663      	mov	r3, ip
    6a8a:	9304      	str	r3, [sp, #16]
    6a8c:	f001 fd5c 	bl	8548 <__i2b>
    6a90:	4680      	mov	r8, r0
    6a92:	e032      	b.n	6afa <_dtoa_r+0x6f6>
    6a94:	9a06      	ldr	r2, [sp, #24]
    6a96:	9b03      	ldr	r3, [sp, #12]
    6a98:	1ad2      	subs	r2, r2, r3
    6a9a:	425b      	negs	r3, r3
    6a9c:	4699      	mov	r9, r3
    6a9e:	2300      	movs	r3, #0
    6aa0:	9206      	str	r2, [sp, #24]
    6aa2:	930d      	str	r3, [sp, #52]	; 0x34
    6aa4:	e579      	b.n	659a <_dtoa_r+0x196>
    6aa6:	9803      	ldr	r0, [sp, #12]
    6aa8:	f7fd fb48 	bl	413c <__aeabi_i2d>
    6aac:	000b      	movs	r3, r1
    6aae:	0002      	movs	r2, r0
    6ab0:	0029      	movs	r1, r5
    6ab2:	0020      	movs	r0, r4
    6ab4:	f7fd fca8 	bl	4408 <__aeabi_dcmpeq>
    6ab8:	0002      	movs	r2, r0
    6aba:	4250      	negs	r0, r2
    6abc:	4150      	adcs	r0, r2
    6abe:	9b03      	ldr	r3, [sp, #12]
    6ac0:	1a1b      	subs	r3, r3, r0
    6ac2:	9303      	str	r3, [sp, #12]
    6ac4:	e53d      	b.n	6542 <_dtoa_r+0x13e>
    6ac6:	2301      	movs	r3, #1
    6ac8:	1a9b      	subs	r3, r3, r2
    6aca:	9306      	str	r3, [sp, #24]
    6acc:	2300      	movs	r3, #0
    6ace:	9304      	str	r3, [sp, #16]
    6ad0:	e557      	b.n	6582 <_dtoa_r+0x17e>
    6ad2:	46c0      	nop			; (mov r8, r8)
    6ad4:	3ff00000 	.word	0x3ff00000
    6ad8:	40240000 	.word	0x40240000
    6adc:	00000432 	.word	0x00000432
    6ae0:	00000412 	.word	0x00000412
    6ae4:	fe100000 	.word	0xfe100000
    6ae8:	0000a2b8 	.word	0x0000a2b8
    6aec:	0000a318 	.word	0x0000a318
    6af0:	9b06      	ldr	r3, [sp, #24]
    6af2:	464c      	mov	r4, r9
    6af4:	9308      	str	r3, [sp, #32]
    6af6:	2300      	movs	r3, #0
    6af8:	4698      	mov	r8, r3
    6afa:	9908      	ldr	r1, [sp, #32]
    6afc:	1e0b      	subs	r3, r1, #0
    6afe:	dd0e      	ble.n	6b1e <_dtoa_r+0x71a>
    6b00:	9a04      	ldr	r2, [sp, #16]
    6b02:	2a00      	cmp	r2, #0
    6b04:	dd0b      	ble.n	6b1e <_dtoa_r+0x71a>
    6b06:	4293      	cmp	r3, r2
    6b08:	dd00      	ble.n	6b0c <_dtoa_r+0x708>
    6b0a:	e187      	b.n	6e1c <_dtoa_r+0xa18>
    6b0c:	9a06      	ldr	r2, [sp, #24]
    6b0e:	1ad2      	subs	r2, r2, r3
    6b10:	9206      	str	r2, [sp, #24]
    6b12:	9a08      	ldr	r2, [sp, #32]
    6b14:	1ad2      	subs	r2, r2, r3
    6b16:	9208      	str	r2, [sp, #32]
    6b18:	9a04      	ldr	r2, [sp, #16]
    6b1a:	1ad3      	subs	r3, r2, r3
    6b1c:	9304      	str	r3, [sp, #16]
    6b1e:	464b      	mov	r3, r9
    6b20:	2b00      	cmp	r3, #0
    6b22:	d01a      	beq.n	6b5a <_dtoa_r+0x756>
    6b24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6b26:	2b00      	cmp	r3, #0
    6b28:	d100      	bne.n	6b2c <_dtoa_r+0x728>
    6b2a:	e1bb      	b.n	6ea4 <_dtoa_r+0xaa0>
    6b2c:	2c00      	cmp	r4, #0
    6b2e:	dd10      	ble.n	6b52 <_dtoa_r+0x74e>
    6b30:	4641      	mov	r1, r8
    6b32:	0022      	movs	r2, r4
    6b34:	4650      	mov	r0, sl
    6b36:	f001 fdbb 	bl	86b0 <__pow5mult>
    6b3a:	465a      	mov	r2, fp
    6b3c:	0001      	movs	r1, r0
    6b3e:	4680      	mov	r8, r0
    6b40:	4650      	mov	r0, sl
    6b42:	f001 fd0b 	bl	855c <__multiply>
    6b46:	0005      	movs	r5, r0
    6b48:	4659      	mov	r1, fp
    6b4a:	4650      	mov	r0, sl
    6b4c:	f001 fc64 	bl	8418 <_Bfree>
    6b50:	46ab      	mov	fp, r5
    6b52:	464b      	mov	r3, r9
    6b54:	1b1a      	subs	r2, r3, r4
    6b56:	d000      	beq.n	6b5a <_dtoa_r+0x756>
    6b58:	e1a5      	b.n	6ea6 <_dtoa_r+0xaa2>
    6b5a:	2101      	movs	r1, #1
    6b5c:	4650      	mov	r0, sl
    6b5e:	f001 fcf3 	bl	8548 <__i2b>
    6b62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6b64:	4681      	mov	r9, r0
    6b66:	2b00      	cmp	r3, #0
    6b68:	dd1d      	ble.n	6ba6 <_dtoa_r+0x7a2>
    6b6a:	001a      	movs	r2, r3
    6b6c:	0001      	movs	r1, r0
    6b6e:	4650      	mov	r0, sl
    6b70:	f001 fd9e 	bl	86b0 <__pow5mult>
    6b74:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6b76:	4681      	mov	r9, r0
    6b78:	2b01      	cmp	r3, #1
    6b7a:	dc00      	bgt.n	6b7e <_dtoa_r+0x77a>
    6b7c:	e150      	b.n	6e20 <_dtoa_r+0xa1c>
    6b7e:	2400      	movs	r4, #0
    6b80:	464b      	mov	r3, r9
    6b82:	691b      	ldr	r3, [r3, #16]
    6b84:	3303      	adds	r3, #3
    6b86:	009b      	lsls	r3, r3, #2
    6b88:	444b      	add	r3, r9
    6b8a:	6858      	ldr	r0, [r3, #4]
    6b8c:	f001 fc94 	bl	84b8 <__hi0bits>
    6b90:	2320      	movs	r3, #32
    6b92:	1a1b      	subs	r3, r3, r0
    6b94:	e010      	b.n	6bb8 <_dtoa_r+0x7b4>
    6b96:	2220      	movs	r2, #32
    6b98:	0030      	movs	r0, r6
    6b9a:	1ad3      	subs	r3, r2, r3
    6b9c:	4098      	lsls	r0, r3
    6b9e:	e685      	b.n	68ac <_dtoa_r+0x4a8>
    6ba0:	2300      	movs	r3, #0
    6ba2:	930c      	str	r3, [sp, #48]	; 0x30
    6ba4:	e4e3      	b.n	656e <_dtoa_r+0x16a>
    6ba6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6ba8:	2400      	movs	r4, #0
    6baa:	2b01      	cmp	r3, #1
    6bac:	dc00      	bgt.n	6bb0 <_dtoa_r+0x7ac>
    6bae:	e18b      	b.n	6ec8 <_dtoa_r+0xac4>
    6bb0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6bb2:	2301      	movs	r3, #1
    6bb4:	2a00      	cmp	r2, #0
    6bb6:	d1e3      	bne.n	6b80 <_dtoa_r+0x77c>
    6bb8:	9904      	ldr	r1, [sp, #16]
    6bba:	201f      	movs	r0, #31
    6bbc:	468c      	mov	ip, r1
    6bbe:	4463      	add	r3, ip
    6bc0:	4018      	ands	r0, r3
    6bc2:	d100      	bne.n	6bc6 <_dtoa_r+0x7c2>
    6bc4:	e0ae      	b.n	6d24 <_dtoa_r+0x920>
    6bc6:	2320      	movs	r3, #32
    6bc8:	1a1b      	subs	r3, r3, r0
    6bca:	2b04      	cmp	r3, #4
    6bcc:	dc00      	bgt.n	6bd0 <_dtoa_r+0x7cc>
    6bce:	e3cc      	b.n	736a <_dtoa_r+0xf66>
    6bd0:	231c      	movs	r3, #28
    6bd2:	1a18      	subs	r0, r3, r0
    6bd4:	9b06      	ldr	r3, [sp, #24]
    6bd6:	469c      	mov	ip, r3
    6bd8:	4484      	add	ip, r0
    6bda:	4663      	mov	r3, ip
    6bdc:	9306      	str	r3, [sp, #24]
    6bde:	9b08      	ldr	r3, [sp, #32]
    6be0:	469c      	mov	ip, r3
    6be2:	4484      	add	ip, r0
    6be4:	4663      	mov	r3, ip
    6be6:	468c      	mov	ip, r1
    6be8:	4484      	add	ip, r0
    6bea:	9308      	str	r3, [sp, #32]
    6bec:	4663      	mov	r3, ip
    6bee:	9304      	str	r3, [sp, #16]
    6bf0:	9b06      	ldr	r3, [sp, #24]
    6bf2:	2b00      	cmp	r3, #0
    6bf4:	dd05      	ble.n	6c02 <_dtoa_r+0x7fe>
    6bf6:	4659      	mov	r1, fp
    6bf8:	001a      	movs	r2, r3
    6bfa:	4650      	mov	r0, sl
    6bfc:	f001 fdb8 	bl	8770 <__lshift>
    6c00:	4683      	mov	fp, r0
    6c02:	9b04      	ldr	r3, [sp, #16]
    6c04:	2b00      	cmp	r3, #0
    6c06:	dd05      	ble.n	6c14 <_dtoa_r+0x810>
    6c08:	4649      	mov	r1, r9
    6c0a:	001a      	movs	r2, r3
    6c0c:	4650      	mov	r0, sl
    6c0e:	f001 fdaf 	bl	8770 <__lshift>
    6c12:	4681      	mov	r9, r0
    6c14:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6c16:	2b00      	cmp	r3, #0
    6c18:	d000      	beq.n	6c1c <_dtoa_r+0x818>
    6c1a:	e094      	b.n	6d46 <_dtoa_r+0x942>
    6c1c:	9b07      	ldr	r3, [sp, #28]
    6c1e:	2b00      	cmp	r3, #0
    6c20:	dc00      	bgt.n	6c24 <_dtoa_r+0x820>
    6c22:	e175      	b.n	6f10 <_dtoa_r+0xb0c>
    6c24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6c26:	2b00      	cmp	r3, #0
    6c28:	d100      	bne.n	6c2c <_dtoa_r+0x828>
    6c2a:	e0a6      	b.n	6d7a <_dtoa_r+0x976>
    6c2c:	9b08      	ldr	r3, [sp, #32]
    6c2e:	2b00      	cmp	r3, #0
    6c30:	dd05      	ble.n	6c3e <_dtoa_r+0x83a>
    6c32:	4641      	mov	r1, r8
    6c34:	001a      	movs	r2, r3
    6c36:	4650      	mov	r0, sl
    6c38:	f001 fd9a 	bl	8770 <__lshift>
    6c3c:	4680      	mov	r8, r0
    6c3e:	4643      	mov	r3, r8
    6c40:	930c      	str	r3, [sp, #48]	; 0x30
    6c42:	2c00      	cmp	r4, #0
    6c44:	d000      	beq.n	6c48 <_dtoa_r+0x844>
    6c46:	e250      	b.n	70ea <_dtoa_r+0xce6>
    6c48:	9c07      	ldr	r4, [sp, #28]
    6c4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6c4c:	3c01      	subs	r4, #1
    6c4e:	0023      	movs	r3, r4
    6c50:	4694      	mov	ip, r2
    6c52:	4463      	add	r3, ip
    6c54:	9308      	str	r3, [sp, #32]
    6c56:	2301      	movs	r3, #1
    6c58:	4033      	ands	r3, r6
    6c5a:	9307      	str	r3, [sp, #28]
    6c5c:	464b      	mov	r3, r9
    6c5e:	9306      	str	r3, [sp, #24]
    6c60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6c62:	4657      	mov	r7, sl
    6c64:	4645      	mov	r5, r8
    6c66:	465e      	mov	r6, fp
    6c68:	4692      	mov	sl, r2
    6c6a:	4698      	mov	r8, r3
    6c6c:	9b06      	ldr	r3, [sp, #24]
    6c6e:	0030      	movs	r0, r6
    6c70:	0019      	movs	r1, r3
    6c72:	4699      	mov	r9, r3
    6c74:	f7ff fb1c 	bl	62b0 <quorem>
    6c78:	0003      	movs	r3, r0
    6c7a:	900b      	str	r0, [sp, #44]	; 0x2c
    6c7c:	3330      	adds	r3, #48	; 0x30
    6c7e:	0029      	movs	r1, r5
    6c80:	0030      	movs	r0, r6
    6c82:	9304      	str	r3, [sp, #16]
    6c84:	f001 fdd4 	bl	8830 <__mcmp>
    6c88:	4649      	mov	r1, r9
    6c8a:	0004      	movs	r4, r0
    6c8c:	4642      	mov	r2, r8
    6c8e:	0038      	movs	r0, r7
    6c90:	f001 fde8 	bl	8864 <__mdiff>
    6c94:	68c3      	ldr	r3, [r0, #12]
    6c96:	4681      	mov	r9, r0
    6c98:	2b00      	cmp	r3, #0
    6c9a:	d000      	beq.n	6c9e <_dtoa_r+0x89a>
    6c9c:	e11e      	b.n	6edc <_dtoa_r+0xad8>
    6c9e:	0001      	movs	r1, r0
    6ca0:	0030      	movs	r0, r6
    6ca2:	f001 fdc5 	bl	8830 <__mcmp>
    6ca6:	4683      	mov	fp, r0
    6ca8:	4649      	mov	r1, r9
    6caa:	0038      	movs	r0, r7
    6cac:	f001 fbb4 	bl	8418 <_Bfree>
    6cb0:	465b      	mov	r3, fp
    6cb2:	9a22      	ldr	r2, [sp, #136]	; 0x88
    6cb4:	4313      	orrs	r3, r2
    6cb6:	d103      	bne.n	6cc0 <_dtoa_r+0x8bc>
    6cb8:	9b07      	ldr	r3, [sp, #28]
    6cba:	2b00      	cmp	r3, #0
    6cbc:	d100      	bne.n	6cc0 <_dtoa_r+0x8bc>
    6cbe:	e306      	b.n	72ce <_dtoa_r+0xeca>
    6cc0:	2c00      	cmp	r4, #0
    6cc2:	da00      	bge.n	6cc6 <_dtoa_r+0x8c2>
    6cc4:	e1a8      	b.n	7018 <_dtoa_r+0xc14>
    6cc6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6cc8:	431c      	orrs	r4, r3
    6cca:	d103      	bne.n	6cd4 <_dtoa_r+0x8d0>
    6ccc:	9b07      	ldr	r3, [sp, #28]
    6cce:	2b00      	cmp	r3, #0
    6cd0:	d100      	bne.n	6cd4 <_dtoa_r+0x8d0>
    6cd2:	e1a1      	b.n	7018 <_dtoa_r+0xc14>
    6cd4:	465b      	mov	r3, fp
    6cd6:	2b00      	cmp	r3, #0
    6cd8:	dd00      	ble.n	6cdc <_dtoa_r+0x8d8>
    6cda:	e282      	b.n	71e2 <_dtoa_r+0xdde>
    6cdc:	4669      	mov	r1, sp
    6cde:	4652      	mov	r2, sl
    6ce0:	4653      	mov	r3, sl
    6ce2:	7c09      	ldrb	r1, [r1, #16]
    6ce4:	1c5c      	adds	r4, r3, #1
    6ce6:	7011      	strb	r1, [r2, #0]
    6ce8:	9a08      	ldr	r2, [sp, #32]
    6cea:	4552      	cmp	r2, sl
    6cec:	d100      	bne.n	6cf0 <_dtoa_r+0x8ec>
    6cee:	e28a      	b.n	7206 <_dtoa_r+0xe02>
    6cf0:	0031      	movs	r1, r6
    6cf2:	2300      	movs	r3, #0
    6cf4:	220a      	movs	r2, #10
    6cf6:	0038      	movs	r0, r7
    6cf8:	f001 fb98 	bl	842c <__multadd>
    6cfc:	2300      	movs	r3, #0
    6cfe:	0006      	movs	r6, r0
    6d00:	220a      	movs	r2, #10
    6d02:	0029      	movs	r1, r5
    6d04:	0038      	movs	r0, r7
    6d06:	4545      	cmp	r5, r8
    6d08:	d100      	bne.n	6d0c <_dtoa_r+0x908>
    6d0a:	e0e1      	b.n	6ed0 <_dtoa_r+0xacc>
    6d0c:	f001 fb8e 	bl	842c <__multadd>
    6d10:	4641      	mov	r1, r8
    6d12:	0005      	movs	r5, r0
    6d14:	2300      	movs	r3, #0
    6d16:	220a      	movs	r2, #10
    6d18:	0038      	movs	r0, r7
    6d1a:	f001 fb87 	bl	842c <__multadd>
    6d1e:	46a2      	mov	sl, r4
    6d20:	4680      	mov	r8, r0
    6d22:	e7a3      	b.n	6c6c <_dtoa_r+0x868>
    6d24:	201c      	movs	r0, #28
    6d26:	9b06      	ldr	r3, [sp, #24]
    6d28:	469c      	mov	ip, r3
    6d2a:	4484      	add	ip, r0
    6d2c:	4663      	mov	r3, ip
    6d2e:	9306      	str	r3, [sp, #24]
    6d30:	9b08      	ldr	r3, [sp, #32]
    6d32:	469c      	mov	ip, r3
    6d34:	4484      	add	ip, r0
    6d36:	4663      	mov	r3, ip
    6d38:	9308      	str	r3, [sp, #32]
    6d3a:	9b04      	ldr	r3, [sp, #16]
    6d3c:	469c      	mov	ip, r3
    6d3e:	4484      	add	ip, r0
    6d40:	4663      	mov	r3, ip
    6d42:	9304      	str	r3, [sp, #16]
    6d44:	e754      	b.n	6bf0 <_dtoa_r+0x7ec>
    6d46:	4649      	mov	r1, r9
    6d48:	4658      	mov	r0, fp
    6d4a:	f001 fd71 	bl	8830 <__mcmp>
    6d4e:	2800      	cmp	r0, #0
    6d50:	db00      	blt.n	6d54 <_dtoa_r+0x950>
    6d52:	e763      	b.n	6c1c <_dtoa_r+0x818>
    6d54:	9b03      	ldr	r3, [sp, #12]
    6d56:	4659      	mov	r1, fp
    6d58:	3b01      	subs	r3, #1
    6d5a:	9303      	str	r3, [sp, #12]
    6d5c:	220a      	movs	r2, #10
    6d5e:	2300      	movs	r3, #0
    6d60:	4650      	mov	r0, sl
    6d62:	f001 fb63 	bl	842c <__multadd>
    6d66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6d68:	4683      	mov	fp, r0
    6d6a:	2b00      	cmp	r3, #0
    6d6c:	d000      	beq.n	6d70 <_dtoa_r+0x96c>
    6d6e:	e2ca      	b.n	7306 <_dtoa_r+0xf02>
    6d70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6d72:	2b00      	cmp	r3, #0
    6d74:	dc00      	bgt.n	6d78 <_dtoa_r+0x974>
    6d76:	e2d8      	b.n	732a <_dtoa_r+0xf26>
    6d78:	9307      	str	r3, [sp, #28]
    6d7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6d7c:	465d      	mov	r5, fp
    6d7e:	2400      	movs	r4, #0
    6d80:	9f07      	ldr	r7, [sp, #28]
    6d82:	469b      	mov	fp, r3
    6d84:	e006      	b.n	6d94 <_dtoa_r+0x990>
    6d86:	0029      	movs	r1, r5
    6d88:	2300      	movs	r3, #0
    6d8a:	220a      	movs	r2, #10
    6d8c:	4650      	mov	r0, sl
    6d8e:	f001 fb4d 	bl	842c <__multadd>
    6d92:	0005      	movs	r5, r0
    6d94:	4649      	mov	r1, r9
    6d96:	0028      	movs	r0, r5
    6d98:	f7ff fa8a 	bl	62b0 <quorem>
    6d9c:	465b      	mov	r3, fp
    6d9e:	3030      	adds	r0, #48	; 0x30
    6da0:	5518      	strb	r0, [r3, r4]
    6da2:	3401      	adds	r4, #1
    6da4:	42bc      	cmp	r4, r7
    6da6:	dbee      	blt.n	6d86 <_dtoa_r+0x982>
    6da8:	46ab      	mov	fp, r5
    6daa:	0006      	movs	r6, r0
    6dac:	9c07      	ldr	r4, [sp, #28]
    6dae:	2c00      	cmp	r4, #0
    6db0:	dc00      	bgt.n	6db4 <_dtoa_r+0x9b0>
    6db2:	e237      	b.n	7224 <_dtoa_r+0xe20>
    6db4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6db6:	2700      	movs	r7, #0
    6db8:	469c      	mov	ip, r3
    6dba:	4464      	add	r4, ip
    6dbc:	4659      	mov	r1, fp
    6dbe:	2201      	movs	r2, #1
    6dc0:	4650      	mov	r0, sl
    6dc2:	f001 fcd5 	bl	8770 <__lshift>
    6dc6:	4649      	mov	r1, r9
    6dc8:	4683      	mov	fp, r0
    6dca:	f001 fd31 	bl	8830 <__mcmp>
    6dce:	2800      	cmp	r0, #0
    6dd0:	dc00      	bgt.n	6dd4 <_dtoa_r+0x9d0>
    6dd2:	e144      	b.n	705e <_dtoa_r+0xc5a>
    6dd4:	1e65      	subs	r5, r4, #1
    6dd6:	782b      	ldrb	r3, [r5, #0]
    6dd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6dda:	e006      	b.n	6dea <_dtoa_r+0x9e6>
    6ddc:	4295      	cmp	r5, r2
    6dde:	d100      	bne.n	6de2 <_dtoa_r+0x9de>
    6de0:	e0b1      	b.n	6f46 <_dtoa_r+0xb42>
    6de2:	3c02      	subs	r4, #2
    6de4:	7823      	ldrb	r3, [r4, #0]
    6de6:	002c      	movs	r4, r5
    6de8:	3d01      	subs	r5, #1
    6dea:	2b39      	cmp	r3, #57	; 0x39
    6dec:	d0f6      	beq.n	6ddc <_dtoa_r+0x9d8>
    6dee:	3301      	adds	r3, #1
    6df0:	702b      	strb	r3, [r5, #0]
    6df2:	4649      	mov	r1, r9
    6df4:	4650      	mov	r0, sl
    6df6:	f001 fb0f 	bl	8418 <_Bfree>
    6dfa:	4643      	mov	r3, r8
    6dfc:	2b00      	cmp	r3, #0
    6dfe:	d100      	bne.n	6e02 <_dtoa_r+0x9fe>
    6e00:	e52f      	b.n	6862 <_dtoa_r+0x45e>
    6e02:	2f00      	cmp	r7, #0
    6e04:	d005      	beq.n	6e12 <_dtoa_r+0xa0e>
    6e06:	4547      	cmp	r7, r8
    6e08:	d003      	beq.n	6e12 <_dtoa_r+0xa0e>
    6e0a:	0039      	movs	r1, r7
    6e0c:	4650      	mov	r0, sl
    6e0e:	f001 fb03 	bl	8418 <_Bfree>
    6e12:	4641      	mov	r1, r8
    6e14:	4650      	mov	r0, sl
    6e16:	f001 faff 	bl	8418 <_Bfree>
    6e1a:	e522      	b.n	6862 <_dtoa_r+0x45e>
    6e1c:	0013      	movs	r3, r2
    6e1e:	e675      	b.n	6b0c <_dtoa_r+0x708>
    6e20:	2e00      	cmp	r6, #0
    6e22:	d000      	beq.n	6e26 <_dtoa_r+0xa22>
    6e24:	e6ab      	b.n	6b7e <_dtoa_r+0x77a>
    6e26:	033b      	lsls	r3, r7, #12
    6e28:	2400      	movs	r4, #0
    6e2a:	2b00      	cmp	r3, #0
    6e2c:	d000      	beq.n	6e30 <_dtoa_r+0xa2c>
    6e2e:	e6bf      	b.n	6bb0 <_dtoa_r+0x7ac>
    6e30:	4bba      	ldr	r3, [pc, #744]	; (711c <_dtoa_r+0xd18>)
    6e32:	423b      	tst	r3, r7
    6e34:	d100      	bne.n	6e38 <_dtoa_r+0xa34>
    6e36:	e6bb      	b.n	6bb0 <_dtoa_r+0x7ac>
    6e38:	9b06      	ldr	r3, [sp, #24]
    6e3a:	3401      	adds	r4, #1
    6e3c:	3301      	adds	r3, #1
    6e3e:	9306      	str	r3, [sp, #24]
    6e40:	9b04      	ldr	r3, [sp, #16]
    6e42:	3301      	adds	r3, #1
    6e44:	9304      	str	r3, [sp, #16]
    6e46:	e6b3      	b.n	6bb0 <_dtoa_r+0x7ac>
    6e48:	2301      	movs	r3, #1
    6e4a:	930b      	str	r3, [sp, #44]	; 0x2c
    6e4c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6e4e:	2b00      	cmp	r3, #0
    6e50:	dc00      	bgt.n	6e54 <_dtoa_r+0xa50>
    6e52:	e0d1      	b.n	6ff8 <_dtoa_r+0xbf4>
    6e54:	001d      	movs	r5, r3
    6e56:	4698      	mov	r8, r3
    6e58:	930e      	str	r3, [sp, #56]	; 0x38
    6e5a:	9307      	str	r3, [sp, #28]
    6e5c:	f7ff fbc8 	bl	65f0 <_dtoa_r+0x1ec>
    6e60:	9b07      	ldr	r3, [sp, #28]
    6e62:	2b00      	cmp	r3, #0
    6e64:	dd00      	ble.n	6e68 <_dtoa_r+0xa64>
    6e66:	e553      	b.n	6910 <_dtoa_r+0x50c>
    6e68:	d000      	beq.n	6e6c <_dtoa_r+0xa68>
    6e6a:	e0ad      	b.n	6fc8 <_dtoa_r+0xbc4>
    6e6c:	9804      	ldr	r0, [sp, #16]
    6e6e:	9905      	ldr	r1, [sp, #20]
    6e70:	2200      	movs	r2, #0
    6e72:	4bab      	ldr	r3, [pc, #684]	; (7120 <_dtoa_r+0xd1c>)
    6e74:	f7fc fb98 	bl	35a8 <__aeabi_dmul>
    6e78:	003b      	movs	r3, r7
    6e7a:	0032      	movs	r2, r6
    6e7c:	f7fd fae8 	bl	4450 <__aeabi_dcmpge>
    6e80:	2300      	movs	r3, #0
    6e82:	4699      	mov	r9, r3
    6e84:	4698      	mov	r8, r3
    6e86:	2800      	cmp	r0, #0
    6e88:	d055      	beq.n	6f36 <_dtoa_r+0xb32>
    6e8a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6e8c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    6e8e:	43db      	mvns	r3, r3
    6e90:	9303      	str	r3, [sp, #12]
    6e92:	4649      	mov	r1, r9
    6e94:	4650      	mov	r0, sl
    6e96:	f001 fabf 	bl	8418 <_Bfree>
    6e9a:	4643      	mov	r3, r8
    6e9c:	2b00      	cmp	r3, #0
    6e9e:	d100      	bne.n	6ea2 <_dtoa_r+0xa9e>
    6ea0:	e4df      	b.n	6862 <_dtoa_r+0x45e>
    6ea2:	e7b6      	b.n	6e12 <_dtoa_r+0xa0e>
    6ea4:	464a      	mov	r2, r9
    6ea6:	4659      	mov	r1, fp
    6ea8:	4650      	mov	r0, sl
    6eaa:	f001 fc01 	bl	86b0 <__pow5mult>
    6eae:	4683      	mov	fp, r0
    6eb0:	e653      	b.n	6b5a <_dtoa_r+0x756>
    6eb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6eb4:	2a00      	cmp	r2, #0
    6eb6:	d100      	bne.n	6eba <_dtoa_r+0xab6>
    6eb8:	e1b6      	b.n	7228 <_dtoa_r+0xe24>
    6eba:	4a9a      	ldr	r2, [pc, #616]	; (7124 <_dtoa_r+0xd20>)
    6ebc:	464c      	mov	r4, r9
    6ebe:	4694      	mov	ip, r2
    6ec0:	9a06      	ldr	r2, [sp, #24]
    6ec2:	4463      	add	r3, ip
    6ec4:	9208      	str	r2, [sp, #32]
    6ec6:	e5d5      	b.n	6a74 <_dtoa_r+0x670>
    6ec8:	2e00      	cmp	r6, #0
    6eca:	d000      	beq.n	6ece <_dtoa_r+0xaca>
    6ecc:	e670      	b.n	6bb0 <_dtoa_r+0x7ac>
    6ece:	e7aa      	b.n	6e26 <_dtoa_r+0xa22>
    6ed0:	f001 faac 	bl	842c <__multadd>
    6ed4:	46a2      	mov	sl, r4
    6ed6:	0005      	movs	r5, r0
    6ed8:	4680      	mov	r8, r0
    6eda:	e6c7      	b.n	6c6c <_dtoa_r+0x868>
    6edc:	2301      	movs	r3, #1
    6ede:	469b      	mov	fp, r3
    6ee0:	e6e2      	b.n	6ca8 <_dtoa_r+0x8a4>
    6ee2:	2300      	movs	r3, #0
    6ee4:	930b      	str	r3, [sp, #44]	; 0x2c
    6ee6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6ee8:	2b02      	cmp	r3, #2
    6eea:	d0af      	beq.n	6e4c <_dtoa_r+0xa48>
    6eec:	2400      	movs	r4, #0
    6eee:	4653      	mov	r3, sl
    6ef0:	0021      	movs	r1, r4
    6ef2:	645c      	str	r4, [r3, #68]	; 0x44
    6ef4:	4650      	mov	r0, sl
    6ef6:	f001 fa67 	bl	83c8 <_Balloc>
    6efa:	4653      	mov	r3, sl
    6efc:	6418      	str	r0, [r3, #64]	; 0x40
    6efe:	2301      	movs	r3, #1
    6f00:	425b      	negs	r3, r3
    6f02:	9307      	str	r3, [sp, #28]
    6f04:	930e      	str	r3, [sp, #56]	; 0x38
    6f06:	3302      	adds	r3, #2
    6f08:	900a      	str	r0, [sp, #40]	; 0x28
    6f0a:	9423      	str	r4, [sp, #140]	; 0x8c
    6f0c:	930b      	str	r3, [sp, #44]	; 0x2c
    6f0e:	e4ec      	b.n	68ea <_dtoa_r+0x4e6>
    6f10:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6f12:	2b02      	cmp	r3, #2
    6f14:	dc00      	bgt.n	6f18 <_dtoa_r+0xb14>
    6f16:	e685      	b.n	6c24 <_dtoa_r+0x820>
    6f18:	9b07      	ldr	r3, [sp, #28]
    6f1a:	2b00      	cmp	r3, #0
    6f1c:	d1b5      	bne.n	6e8a <_dtoa_r+0xa86>
    6f1e:	4649      	mov	r1, r9
    6f20:	2205      	movs	r2, #5
    6f22:	4650      	mov	r0, sl
    6f24:	f001 fa82 	bl	842c <__multadd>
    6f28:	4681      	mov	r9, r0
    6f2a:	0001      	movs	r1, r0
    6f2c:	4658      	mov	r0, fp
    6f2e:	f001 fc7f 	bl	8830 <__mcmp>
    6f32:	2800      	cmp	r0, #0
    6f34:	dda9      	ble.n	6e8a <_dtoa_r+0xa86>
    6f36:	2331      	movs	r3, #49	; 0x31
    6f38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6f3a:	7013      	strb	r3, [r2, #0]
    6f3c:	9b03      	ldr	r3, [sp, #12]
    6f3e:	1c54      	adds	r4, r2, #1
    6f40:	3301      	adds	r3, #1
    6f42:	9303      	str	r3, [sp, #12]
    6f44:	e7a5      	b.n	6e92 <_dtoa_r+0xa8e>
    6f46:	9b03      	ldr	r3, [sp, #12]
    6f48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6f4a:	3301      	adds	r3, #1
    6f4c:	9303      	str	r3, [sp, #12]
    6f4e:	2331      	movs	r3, #49	; 0x31
    6f50:	7013      	strb	r3, [r2, #0]
    6f52:	e74e      	b.n	6df2 <_dtoa_r+0x9ee>
    6f54:	2300      	movs	r3, #0
    6f56:	930b      	str	r3, [sp, #44]	; 0x2c
    6f58:	f7ff fb3d 	bl	65d6 <_dtoa_r+0x1d2>
    6f5c:	9b06      	ldr	r3, [sp, #24]
    6f5e:	465c      	mov	r4, fp
    6f60:	469b      	mov	fp, r3
    6f62:	9b07      	ldr	r3, [sp, #28]
    6f64:	469a      	mov	sl, r3
    6f66:	e47c      	b.n	6862 <_dtoa_r+0x45e>
    6f68:	4640      	mov	r0, r8
    6f6a:	f7fd f8e7 	bl	413c <__aeabi_i2d>
    6f6e:	0032      	movs	r2, r6
    6f70:	003b      	movs	r3, r7
    6f72:	f7fc fb19 	bl	35a8 <__aeabi_dmul>
    6f76:	2200      	movs	r2, #0
    6f78:	4b6b      	ldr	r3, [pc, #428]	; (7128 <_dtoa_r+0xd24>)
    6f7a:	f002 fb77 	bl	966c <__aeabi_dadd>
    6f7e:	4a6b      	ldr	r2, [pc, #428]	; (712c <_dtoa_r+0xd28>)
    6f80:	000b      	movs	r3, r1
    6f82:	4694      	mov	ip, r2
    6f84:	4463      	add	r3, ip
    6f86:	9008      	str	r0, [sp, #32]
    6f88:	9109      	str	r1, [sp, #36]	; 0x24
    6f8a:	9309      	str	r3, [sp, #36]	; 0x24
    6f8c:	2200      	movs	r2, #0
    6f8e:	4b64      	ldr	r3, [pc, #400]	; (7120 <_dtoa_r+0xd1c>)
    6f90:	0030      	movs	r0, r6
    6f92:	0039      	movs	r1, r7
    6f94:	f7fc fd88 	bl	3aa8 <__aeabi_dsub>
    6f98:	9e08      	ldr	r6, [sp, #32]
    6f9a:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6f9c:	0032      	movs	r2, r6
    6f9e:	003b      	movs	r3, r7
    6fa0:	0004      	movs	r4, r0
    6fa2:	000d      	movs	r5, r1
    6fa4:	f7fd fa4a 	bl	443c <__aeabi_dcmpgt>
    6fa8:	2800      	cmp	r0, #0
    6faa:	d000      	beq.n	6fae <_dtoa_r+0xbaa>
    6fac:	e0b2      	b.n	7114 <_dtoa_r+0xd10>
    6fae:	2080      	movs	r0, #128	; 0x80
    6fb0:	0600      	lsls	r0, r0, #24
    6fb2:	4684      	mov	ip, r0
    6fb4:	0039      	movs	r1, r7
    6fb6:	4461      	add	r1, ip
    6fb8:	000b      	movs	r3, r1
    6fba:	0032      	movs	r2, r6
    6fbc:	0020      	movs	r0, r4
    6fbe:	0029      	movs	r1, r5
    6fc0:	f7fd fa28 	bl	4414 <__aeabi_dcmplt>
    6fc4:	2800      	cmp	r0, #0
    6fc6:	d057      	beq.n	7078 <_dtoa_r+0xc74>
    6fc8:	2300      	movs	r3, #0
    6fca:	4699      	mov	r9, r3
    6fcc:	4698      	mov	r8, r3
    6fce:	e75c      	b.n	6e8a <_dtoa_r+0xa86>
    6fd0:	980a      	ldr	r0, [sp, #40]	; 0x28
    6fd2:	f7ff fa4c 	bl	646e <_dtoa_r+0x6a>
    6fd6:	1ae2      	subs	r2, r4, r3
    6fd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6fda:	46a1      	mov	r9, r4
    6fdc:	469c      	mov	ip, r3
    6fde:	4494      	add	ip, r2
    6fe0:	4663      	mov	r3, ip
    6fe2:	2400      	movs	r4, #0
    6fe4:	930d      	str	r3, [sp, #52]	; 0x34
    6fe6:	e53e      	b.n	6a66 <_dtoa_r+0x662>
    6fe8:	9a10      	ldr	r2, [sp, #64]	; 0x40
    6fea:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6fec:	9208      	str	r2, [sp, #32]
    6fee:	9309      	str	r3, [sp, #36]	; 0x24
    6ff0:	2302      	movs	r3, #2
    6ff2:	4698      	mov	r8, r3
    6ff4:	f7ff fb3a 	bl	666c <_dtoa_r+0x268>
    6ff8:	2300      	movs	r3, #0
    6ffa:	4652      	mov	r2, sl
    6ffc:	2100      	movs	r1, #0
    6ffe:	6453      	str	r3, [r2, #68]	; 0x44
    7000:	4650      	mov	r0, sl
    7002:	f001 f9e1 	bl	83c8 <_Balloc>
    7006:	4653      	mov	r3, sl
    7008:	6418      	str	r0, [r3, #64]	; 0x40
    700a:	2301      	movs	r3, #1
    700c:	900a      	str	r0, [sp, #40]	; 0x28
    700e:	9307      	str	r3, [sp, #28]
    7010:	9323      	str	r3, [sp, #140]	; 0x8c
    7012:	930e      	str	r3, [sp, #56]	; 0x38
    7014:	f7ff fb07 	bl	6626 <_dtoa_r+0x222>
    7018:	4643      	mov	r3, r8
    701a:	930c      	str	r3, [sp, #48]	; 0x30
    701c:	465b      	mov	r3, fp
    701e:	9a06      	ldr	r2, [sp, #24]
    7020:	46a8      	mov	r8, r5
    7022:	46b3      	mov	fp, r6
    7024:	4655      	mov	r5, sl
    7026:	9e04      	ldr	r6, [sp, #16]
    7028:	4691      	mov	r9, r2
    702a:	46ba      	mov	sl, r7
    702c:	2b00      	cmp	r3, #0
    702e:	dd10      	ble.n	7052 <_dtoa_r+0xc4e>
    7030:	4659      	mov	r1, fp
    7032:	2201      	movs	r2, #1
    7034:	0038      	movs	r0, r7
    7036:	f001 fb9b 	bl	8770 <__lshift>
    703a:	4649      	mov	r1, r9
    703c:	4683      	mov	fp, r0
    703e:	f001 fbf7 	bl	8830 <__mcmp>
    7042:	2800      	cmp	r0, #0
    7044:	dc00      	bgt.n	7048 <_dtoa_r+0xc44>
    7046:	e157      	b.n	72f8 <_dtoa_r+0xef4>
    7048:	2e39      	cmp	r6, #57	; 0x39
    704a:	d100      	bne.n	704e <_dtoa_r+0xc4a>
    704c:	e122      	b.n	7294 <_dtoa_r+0xe90>
    704e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    7050:	3631      	adds	r6, #49	; 0x31
    7052:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7054:	4647      	mov	r7, r8
    7056:	1c6c      	adds	r4, r5, #1
    7058:	702e      	strb	r6, [r5, #0]
    705a:	4698      	mov	r8, r3
    705c:	e6c9      	b.n	6df2 <_dtoa_r+0x9ee>
    705e:	2800      	cmp	r0, #0
    7060:	d103      	bne.n	706a <_dtoa_r+0xc66>
    7062:	07f3      	lsls	r3, r6, #31
    7064:	d501      	bpl.n	706a <_dtoa_r+0xc66>
    7066:	e6b5      	b.n	6dd4 <_dtoa_r+0x9d0>
    7068:	001c      	movs	r4, r3
    706a:	1e63      	subs	r3, r4, #1
    706c:	781a      	ldrb	r2, [r3, #0]
    706e:	2a30      	cmp	r2, #48	; 0x30
    7070:	d0fa      	beq.n	7068 <_dtoa_r+0xc64>
    7072:	e6be      	b.n	6df2 <_dtoa_r+0x9ee>
    7074:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7076:	4699      	mov	r9, r3
    7078:	9e10      	ldr	r6, [sp, #64]	; 0x40
    707a:	9f11      	ldr	r7, [sp, #68]	; 0x44
    707c:	e435      	b.n	68ea <_dtoa_r+0x4e6>
    707e:	2501      	movs	r5, #1
    7080:	f7ff fab4 	bl	65ec <_dtoa_r+0x1e8>
    7084:	9b03      	ldr	r3, [sp, #12]
    7086:	2b00      	cmp	r3, #0
    7088:	d100      	bne.n	708c <_dtoa_r+0xc88>
    708a:	e0d4      	b.n	7236 <_dtoa_r+0xe32>
    708c:	9810      	ldr	r0, [sp, #64]	; 0x40
    708e:	9911      	ldr	r1, [sp, #68]	; 0x44
    7090:	425c      	negs	r4, r3
    7092:	230f      	movs	r3, #15
    7094:	4a26      	ldr	r2, [pc, #152]	; (7130 <_dtoa_r+0xd2c>)
    7096:	4023      	ands	r3, r4
    7098:	00db      	lsls	r3, r3, #3
    709a:	18d3      	adds	r3, r2, r3
    709c:	681a      	ldr	r2, [r3, #0]
    709e:	685b      	ldr	r3, [r3, #4]
    70a0:	f7fc fa82 	bl	35a8 <__aeabi_dmul>
    70a4:	1124      	asrs	r4, r4, #4
    70a6:	0006      	movs	r6, r0
    70a8:	000f      	movs	r7, r1
    70aa:	2c00      	cmp	r4, #0
    70ac:	d100      	bne.n	70b0 <_dtoa_r+0xcac>
    70ae:	e149      	b.n	7344 <_dtoa_r+0xf40>
    70b0:	2302      	movs	r3, #2
    70b2:	4698      	mov	r8, r3
    70b4:	4d1f      	ldr	r5, [pc, #124]	; (7134 <_dtoa_r+0xd30>)
    70b6:	2301      	movs	r3, #1
    70b8:	4223      	tst	r3, r4
    70ba:	d009      	beq.n	70d0 <_dtoa_r+0xccc>
    70bc:	469c      	mov	ip, r3
    70be:	682a      	ldr	r2, [r5, #0]
    70c0:	686b      	ldr	r3, [r5, #4]
    70c2:	0030      	movs	r0, r6
    70c4:	0039      	movs	r1, r7
    70c6:	44e0      	add	r8, ip
    70c8:	f7fc fa6e 	bl	35a8 <__aeabi_dmul>
    70cc:	0006      	movs	r6, r0
    70ce:	000f      	movs	r7, r1
    70d0:	1064      	asrs	r4, r4, #1
    70d2:	3508      	adds	r5, #8
    70d4:	2c00      	cmp	r4, #0
    70d6:	d1ee      	bne.n	70b6 <_dtoa_r+0xcb2>
    70d8:	f7ff fae4 	bl	66a4 <_dtoa_r+0x2a0>
    70dc:	9b03      	ldr	r3, [sp, #12]
    70de:	2730      	movs	r7, #48	; 0x30
    70e0:	3301      	adds	r3, #1
    70e2:	9303      	str	r3, [sp, #12]
    70e4:	2330      	movs	r3, #48	; 0x30
    70e6:	702b      	strb	r3, [r5, #0]
    70e8:	e4ac      	b.n	6a44 <_dtoa_r+0x640>
    70ea:	6859      	ldr	r1, [r3, #4]
    70ec:	4650      	mov	r0, sl
    70ee:	f001 f96b 	bl	83c8 <_Balloc>
    70f2:	4643      	mov	r3, r8
    70f4:	4641      	mov	r1, r8
    70f6:	0004      	movs	r4, r0
    70f8:	691b      	ldr	r3, [r3, #16]
    70fa:	310c      	adds	r1, #12
    70fc:	1c9a      	adds	r2, r3, #2
    70fe:	0092      	lsls	r2, r2, #2
    7100:	300c      	adds	r0, #12
    7102:	f7fd fafd 	bl	4700 <memcpy>
    7106:	2201      	movs	r2, #1
    7108:	0021      	movs	r1, r4
    710a:	4650      	mov	r0, sl
    710c:	f001 fb30 	bl	8770 <__lshift>
    7110:	900c      	str	r0, [sp, #48]	; 0x30
    7112:	e599      	b.n	6c48 <_dtoa_r+0x844>
    7114:	2300      	movs	r3, #0
    7116:	4699      	mov	r9, r3
    7118:	4698      	mov	r8, r3
    711a:	e70c      	b.n	6f36 <_dtoa_r+0xb32>
    711c:	7ff00000 	.word	0x7ff00000
    7120:	40140000 	.word	0x40140000
    7124:	00000433 	.word	0x00000433
    7128:	401c0000 	.word	0x401c0000
    712c:	fcc00000 	.word	0xfcc00000
    7130:	0000a318 	.word	0x0000a318
    7134:	0000a2f0 	.word	0x0000a2f0
    7138:	9b12      	ldr	r3, [sp, #72]	; 0x48
    713a:	498f      	ldr	r1, [pc, #572]	; (7378 <_dtoa_r+0xf74>)
    713c:	3b01      	subs	r3, #1
    713e:	00db      	lsls	r3, r3, #3
    7140:	18c9      	adds	r1, r1, r3
    7142:	6808      	ldr	r0, [r1, #0]
    7144:	6849      	ldr	r1, [r1, #4]
    7146:	9a08      	ldr	r2, [sp, #32]
    7148:	9b09      	ldr	r3, [sp, #36]	; 0x24
    714a:	f7fc fa2d 	bl	35a8 <__aeabi_dmul>
    714e:	9014      	str	r0, [sp, #80]	; 0x50
    7150:	9115      	str	r1, [sp, #84]	; 0x54
    7152:	0039      	movs	r1, r7
    7154:	0030      	movs	r0, r6
    7156:	f7fc ffbd 	bl	40d4 <__aeabi_d2iz>
    715a:	0005      	movs	r5, r0
    715c:	f7fc ffee 	bl	413c <__aeabi_i2d>
    7160:	0002      	movs	r2, r0
    7162:	000b      	movs	r3, r1
    7164:	0030      	movs	r0, r6
    7166:	0039      	movs	r1, r7
    7168:	f7fc fc9e 	bl	3aa8 <__aeabi_dsub>
    716c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    716e:	9008      	str	r0, [sp, #32]
    7170:	9109      	str	r1, [sp, #36]	; 0x24
    7172:	990a      	ldr	r1, [sp, #40]	; 0x28
    7174:	001a      	movs	r2, r3
    7176:	468c      	mov	ip, r1
    7178:	3530      	adds	r5, #48	; 0x30
    717a:	4462      	add	r2, ip
    717c:	1c4c      	adds	r4, r1, #1
    717e:	700d      	strb	r5, [r1, #0]
    7180:	4690      	mov	r8, r2
    7182:	2b01      	cmp	r3, #1
    7184:	d01b      	beq.n	71be <_dtoa_r+0xdba>
    7186:	9808      	ldr	r0, [sp, #32]
    7188:	9909      	ldr	r1, [sp, #36]	; 0x24
    718a:	0025      	movs	r5, r4
    718c:	2200      	movs	r2, #0
    718e:	4b7b      	ldr	r3, [pc, #492]	; (737c <_dtoa_r+0xf78>)
    7190:	f7fc fa0a 	bl	35a8 <__aeabi_dmul>
    7194:	000f      	movs	r7, r1
    7196:	0006      	movs	r6, r0
    7198:	f7fc ff9c 	bl	40d4 <__aeabi_d2iz>
    719c:	0004      	movs	r4, r0
    719e:	f7fc ffcd 	bl	413c <__aeabi_i2d>
    71a2:	3430      	adds	r4, #48	; 0x30
    71a4:	0002      	movs	r2, r0
    71a6:	000b      	movs	r3, r1
    71a8:	0030      	movs	r0, r6
    71aa:	0039      	movs	r1, r7
    71ac:	f7fc fc7c 	bl	3aa8 <__aeabi_dsub>
    71b0:	702c      	strb	r4, [r5, #0]
    71b2:	3501      	adds	r5, #1
    71b4:	45a8      	cmp	r8, r5
    71b6:	d1e9      	bne.n	718c <_dtoa_r+0xd88>
    71b8:	4644      	mov	r4, r8
    71ba:	9008      	str	r0, [sp, #32]
    71bc:	9109      	str	r1, [sp, #36]	; 0x24
    71be:	9814      	ldr	r0, [sp, #80]	; 0x50
    71c0:	9915      	ldr	r1, [sp, #84]	; 0x54
    71c2:	2200      	movs	r2, #0
    71c4:	4b6e      	ldr	r3, [pc, #440]	; (7380 <_dtoa_r+0xf7c>)
    71c6:	f002 fa51 	bl	966c <__aeabi_dadd>
    71ca:	9a08      	ldr	r2, [sp, #32]
    71cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    71ce:	f7fd f921 	bl	4414 <__aeabi_dcmplt>
    71d2:	2800      	cmp	r0, #0
    71d4:	d067      	beq.n	72a6 <_dtoa_r+0xea2>
    71d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    71d8:	1e65      	subs	r5, r4, #1
    71da:	9303      	str	r3, [sp, #12]
    71dc:	782f      	ldrb	r7, [r5, #0]
    71de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    71e0:	e42e      	b.n	6a40 <_dtoa_r+0x63c>
    71e2:	4643      	mov	r3, r8
    71e4:	46b3      	mov	fp, r6
    71e6:	930c      	str	r3, [sp, #48]	; 0x30
    71e8:	9e04      	ldr	r6, [sp, #16]
    71ea:	9b06      	ldr	r3, [sp, #24]
    71ec:	46a8      	mov	r8, r5
    71ee:	4699      	mov	r9, r3
    71f0:	4655      	mov	r5, sl
    71f2:	46ba      	mov	sl, r7
    71f4:	2e39      	cmp	r6, #57	; 0x39
    71f6:	d04d      	beq.n	7294 <_dtoa_r+0xe90>
    71f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    71fa:	3601      	adds	r6, #1
    71fc:	4647      	mov	r7, r8
    71fe:	1c6c      	adds	r4, r5, #1
    7200:	702e      	strb	r6, [r5, #0]
    7202:	4698      	mov	r8, r3
    7204:	e5f5      	b.n	6df2 <_dtoa_r+0x9ee>
    7206:	4642      	mov	r2, r8
    7208:	9b06      	ldr	r3, [sp, #24]
    720a:	46b3      	mov	fp, r6
    720c:	46ba      	mov	sl, r7
    720e:	9e04      	ldr	r6, [sp, #16]
    7210:	4699      	mov	r9, r3
    7212:	002f      	movs	r7, r5
    7214:	4690      	mov	r8, r2
    7216:	e5d1      	b.n	6dbc <_dtoa_r+0x9b8>
    7218:	9b06      	ldr	r3, [sp, #24]
    721a:	9a07      	ldr	r2, [sp, #28]
    721c:	1a9b      	subs	r3, r3, r2
    721e:	9308      	str	r3, [sp, #32]
    7220:	2300      	movs	r3, #0
    7222:	e427      	b.n	6a74 <_dtoa_r+0x670>
    7224:	2401      	movs	r4, #1
    7226:	e5c5      	b.n	6db4 <_dtoa_r+0x9b0>
    7228:	2336      	movs	r3, #54	; 0x36
    722a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    722c:	464c      	mov	r4, r9
    722e:	1a9b      	subs	r3, r3, r2
    7230:	9a06      	ldr	r2, [sp, #24]
    7232:	9208      	str	r2, [sp, #32]
    7234:	e41e      	b.n	6a74 <_dtoa_r+0x670>
    7236:	2302      	movs	r3, #2
    7238:	9e10      	ldr	r6, [sp, #64]	; 0x40
    723a:	9f11      	ldr	r7, [sp, #68]	; 0x44
    723c:	4698      	mov	r8, r3
    723e:	f7ff fa31 	bl	66a4 <_dtoa_r+0x2a0>
    7242:	9b07      	ldr	r3, [sp, #28]
    7244:	2b00      	cmp	r3, #0
    7246:	d100      	bne.n	724a <_dtoa_r+0xe46>
    7248:	e68e      	b.n	6f68 <_dtoa_r+0xb64>
    724a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    724c:	2c00      	cmp	r4, #0
    724e:	dc00      	bgt.n	7252 <_dtoa_r+0xe4e>
    7250:	e712      	b.n	7078 <_dtoa_r+0xc74>
    7252:	9b03      	ldr	r3, [sp, #12]
    7254:	2200      	movs	r2, #0
    7256:	3b01      	subs	r3, #1
    7258:	9313      	str	r3, [sp, #76]	; 0x4c
    725a:	0030      	movs	r0, r6
    725c:	4b47      	ldr	r3, [pc, #284]	; (737c <_dtoa_r+0xf78>)
    725e:	0039      	movs	r1, r7
    7260:	f7fc f9a2 	bl	35a8 <__aeabi_dmul>
    7264:	0006      	movs	r6, r0
    7266:	4640      	mov	r0, r8
    7268:	000f      	movs	r7, r1
    726a:	3001      	adds	r0, #1
    726c:	f7fc ff66 	bl	413c <__aeabi_i2d>
    7270:	0032      	movs	r2, r6
    7272:	003b      	movs	r3, r7
    7274:	f7fc f998 	bl	35a8 <__aeabi_dmul>
    7278:	2200      	movs	r2, #0
    727a:	4b42      	ldr	r3, [pc, #264]	; (7384 <_dtoa_r+0xf80>)
    727c:	f002 f9f6 	bl	966c <__aeabi_dadd>
    7280:	4a41      	ldr	r2, [pc, #260]	; (7388 <_dtoa_r+0xf84>)
    7282:	000b      	movs	r3, r1
    7284:	4694      	mov	ip, r2
    7286:	4463      	add	r3, ip
    7288:	9008      	str	r0, [sp, #32]
    728a:	9109      	str	r1, [sp, #36]	; 0x24
    728c:	9412      	str	r4, [sp, #72]	; 0x48
    728e:	9309      	str	r3, [sp, #36]	; 0x24
    7290:	f7ff fa30 	bl	66f4 <_dtoa_r+0x2f0>
    7294:	2339      	movs	r3, #57	; 0x39
    7296:	702b      	strb	r3, [r5, #0]
    7298:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    729a:	4647      	mov	r7, r8
    729c:	1c6c      	adds	r4, r5, #1
    729e:	4698      	mov	r8, r3
    72a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    72a2:	2339      	movs	r3, #57	; 0x39
    72a4:	e5a1      	b.n	6dea <_dtoa_r+0x9e6>
    72a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
    72a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
    72aa:	2000      	movs	r0, #0
    72ac:	4934      	ldr	r1, [pc, #208]	; (7380 <_dtoa_r+0xf7c>)
    72ae:	f7fc fbfb 	bl	3aa8 <__aeabi_dsub>
    72b2:	9a08      	ldr	r2, [sp, #32]
    72b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    72b6:	f7fd f8c1 	bl	443c <__aeabi_dcmpgt>
    72ba:	2800      	cmp	r0, #0
    72bc:	d101      	bne.n	72c2 <_dtoa_r+0xebe>
    72be:	e6db      	b.n	7078 <_dtoa_r+0xc74>
    72c0:	001c      	movs	r4, r3
    72c2:	1e63      	subs	r3, r4, #1
    72c4:	781a      	ldrb	r2, [r3, #0]
    72c6:	2a30      	cmp	r2, #48	; 0x30
    72c8:	d0fa      	beq.n	72c0 <_dtoa_r+0xebc>
    72ca:	f7ff fac8 	bl	685e <_dtoa_r+0x45a>
    72ce:	4643      	mov	r3, r8
    72d0:	46b3      	mov	fp, r6
    72d2:	930c      	str	r3, [sp, #48]	; 0x30
    72d4:	9e04      	ldr	r6, [sp, #16]
    72d6:	9b06      	ldr	r3, [sp, #24]
    72d8:	46a8      	mov	r8, r5
    72da:	4699      	mov	r9, r3
    72dc:	4655      	mov	r5, sl
    72de:	46ba      	mov	sl, r7
    72e0:	2e39      	cmp	r6, #57	; 0x39
    72e2:	d0d7      	beq.n	7294 <_dtoa_r+0xe90>
    72e4:	2c00      	cmp	r4, #0
    72e6:	dd00      	ble.n	72ea <_dtoa_r+0xee6>
    72e8:	e6b1      	b.n	704e <_dtoa_r+0xc4a>
    72ea:	e6b2      	b.n	7052 <_dtoa_r+0xc4e>
    72ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    72ee:	464d      	mov	r5, r9
    72f0:	9203      	str	r2, [sp, #12]
    72f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    72f4:	f7ff fba4 	bl	6a40 <_dtoa_r+0x63c>
    72f8:	2800      	cmp	r0, #0
    72fa:	d000      	beq.n	72fe <_dtoa_r+0xefa>
    72fc:	e6a9      	b.n	7052 <_dtoa_r+0xc4e>
    72fe:	07f3      	lsls	r3, r6, #31
    7300:	d400      	bmi.n	7304 <_dtoa_r+0xf00>
    7302:	e6a6      	b.n	7052 <_dtoa_r+0xc4e>
    7304:	e6a0      	b.n	7048 <_dtoa_r+0xc44>
    7306:	2300      	movs	r3, #0
    7308:	4641      	mov	r1, r8
    730a:	220a      	movs	r2, #10
    730c:	4650      	mov	r0, sl
    730e:	f001 f88d 	bl	842c <__multadd>
    7312:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7314:	4680      	mov	r8, r0
    7316:	2b00      	cmp	r3, #0
    7318:	dd01      	ble.n	731e <_dtoa_r+0xf1a>
    731a:	9307      	str	r3, [sp, #28]
    731c:	e486      	b.n	6c2c <_dtoa_r+0x828>
    731e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    7320:	2b02      	cmp	r3, #2
    7322:	dc1f      	bgt.n	7364 <_dtoa_r+0xf60>
    7324:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7326:	9307      	str	r3, [sp, #28]
    7328:	e480      	b.n	6c2c <_dtoa_r+0x828>
    732a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    732c:	2b02      	cmp	r3, #2
    732e:	dc19      	bgt.n	7364 <_dtoa_r+0xf60>
    7330:	4649      	mov	r1, r9
    7332:	f7fe ffbd 	bl	62b0 <quorem>
    7336:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7338:	3030      	adds	r0, #48	; 0x30
    733a:	7018      	strb	r0, [r3, #0]
    733c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    733e:	0006      	movs	r6, r0
    7340:	9307      	str	r3, [sp, #28]
    7342:	e533      	b.n	6dac <_dtoa_r+0x9a8>
    7344:	2302      	movs	r3, #2
    7346:	4698      	mov	r8, r3
    7348:	f7ff f9ac 	bl	66a4 <_dtoa_r+0x2a0>
    734c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    734e:	9c14      	ldr	r4, [sp, #80]	; 0x50
    7350:	9303      	str	r3, [sp, #12]
    7352:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7354:	001d      	movs	r5, r3
    7356:	f7ff fb73 	bl	6a40 <_dtoa_r+0x63c>
    735a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    735c:	9c14      	ldr	r4, [sp, #80]	; 0x50
    735e:	9303      	str	r3, [sp, #12]
    7360:	f7ff fa7f 	bl	6862 <_dtoa_r+0x45e>
    7364:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7366:	9307      	str	r3, [sp, #28]
    7368:	e5d6      	b.n	6f18 <_dtoa_r+0xb14>
    736a:	2b04      	cmp	r3, #4
    736c:	d100      	bne.n	7370 <_dtoa_r+0xf6c>
    736e:	e43f      	b.n	6bf0 <_dtoa_r+0x7ec>
    7370:	233c      	movs	r3, #60	; 0x3c
    7372:	1a18      	subs	r0, r3, r0
    7374:	e4d7      	b.n	6d26 <_dtoa_r+0x922>
    7376:	46c0      	nop			; (mov r8, r8)
    7378:	0000a318 	.word	0x0000a318
    737c:	40240000 	.word	0x40240000
    7380:	3fe00000 	.word	0x3fe00000
    7384:	401c0000 	.word	0x401c0000
    7388:	fcc00000 	.word	0xfcc00000

0000738c <__sflush_r>:
    738c:	b5f0      	push	{r4, r5, r6, r7, lr}
    738e:	46c6      	mov	lr, r8
    7390:	b500      	push	{lr}
    7392:	230c      	movs	r3, #12
    7394:	5eca      	ldrsh	r2, [r1, r3]
    7396:	4680      	mov	r8, r0
    7398:	b293      	uxth	r3, r2
    739a:	000c      	movs	r4, r1
    739c:	0719      	lsls	r1, r3, #28
    739e:	d440      	bmi.n	7422 <__sflush_r+0x96>
    73a0:	2380      	movs	r3, #128	; 0x80
    73a2:	011b      	lsls	r3, r3, #4
    73a4:	4313      	orrs	r3, r2
    73a6:	6862      	ldr	r2, [r4, #4]
    73a8:	81a3      	strh	r3, [r4, #12]
    73aa:	2a00      	cmp	r2, #0
    73ac:	dc00      	bgt.n	73b0 <__sflush_r+0x24>
    73ae:	e070      	b.n	7492 <__sflush_r+0x106>
    73b0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    73b2:	2e00      	cmp	r6, #0
    73b4:	d031      	beq.n	741a <__sflush_r+0x8e>
    73b6:	4642      	mov	r2, r8
    73b8:	4641      	mov	r1, r8
    73ba:	6815      	ldr	r5, [r2, #0]
    73bc:	2200      	movs	r2, #0
    73be:	b29b      	uxth	r3, r3
    73c0:	600a      	str	r2, [r1, #0]
    73c2:	04da      	lsls	r2, r3, #19
    73c4:	d400      	bmi.n	73c8 <__sflush_r+0x3c>
    73c6:	e069      	b.n	749c <__sflush_r+0x110>
    73c8:	6d22      	ldr	r2, [r4, #80]	; 0x50
    73ca:	075b      	lsls	r3, r3, #29
    73cc:	d506      	bpl.n	73dc <__sflush_r+0x50>
    73ce:	6863      	ldr	r3, [r4, #4]
    73d0:	1ad2      	subs	r2, r2, r3
    73d2:	6b23      	ldr	r3, [r4, #48]	; 0x30
    73d4:	2b00      	cmp	r3, #0
    73d6:	d001      	beq.n	73dc <__sflush_r+0x50>
    73d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    73da:	1ad2      	subs	r2, r2, r3
    73dc:	2300      	movs	r3, #0
    73de:	69e1      	ldr	r1, [r4, #28]
    73e0:	4640      	mov	r0, r8
    73e2:	47b0      	blx	r6
    73e4:	1c43      	adds	r3, r0, #1
    73e6:	d03d      	beq.n	7464 <__sflush_r+0xd8>
    73e8:	89a3      	ldrh	r3, [r4, #12]
    73ea:	4a3a      	ldr	r2, [pc, #232]	; (74d4 <__sflush_r+0x148>)
    73ec:	4013      	ands	r3, r2
    73ee:	2200      	movs	r2, #0
    73f0:	6062      	str	r2, [r4, #4]
    73f2:	6922      	ldr	r2, [r4, #16]
    73f4:	b21b      	sxth	r3, r3
    73f6:	81a3      	strh	r3, [r4, #12]
    73f8:	6022      	str	r2, [r4, #0]
    73fa:	04db      	lsls	r3, r3, #19
    73fc:	d447      	bmi.n	748e <__sflush_r+0x102>
    73fe:	4643      	mov	r3, r8
    7400:	6b21      	ldr	r1, [r4, #48]	; 0x30
    7402:	601d      	str	r5, [r3, #0]
    7404:	2900      	cmp	r1, #0
    7406:	d008      	beq.n	741a <__sflush_r+0x8e>
    7408:	0023      	movs	r3, r4
    740a:	3340      	adds	r3, #64	; 0x40
    740c:	4299      	cmp	r1, r3
    740e:	d002      	beq.n	7416 <__sflush_r+0x8a>
    7410:	4640      	mov	r0, r8
    7412:	f000 f967 	bl	76e4 <_free_r>
    7416:	2300      	movs	r3, #0
    7418:	6323      	str	r3, [r4, #48]	; 0x30
    741a:	2000      	movs	r0, #0
    741c:	bc04      	pop	{r2}
    741e:	4690      	mov	r8, r2
    7420:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7422:	6926      	ldr	r6, [r4, #16]
    7424:	2e00      	cmp	r6, #0
    7426:	d0f8      	beq.n	741a <__sflush_r+0x8e>
    7428:	6822      	ldr	r2, [r4, #0]
    742a:	6026      	str	r6, [r4, #0]
    742c:	1b95      	subs	r5, r2, r6
    742e:	2200      	movs	r2, #0
    7430:	079b      	lsls	r3, r3, #30
    7432:	d100      	bne.n	7436 <__sflush_r+0xaa>
    7434:	6962      	ldr	r2, [r4, #20]
    7436:	60a2      	str	r2, [r4, #8]
    7438:	2d00      	cmp	r5, #0
    743a:	dc04      	bgt.n	7446 <__sflush_r+0xba>
    743c:	e7ed      	b.n	741a <__sflush_r+0x8e>
    743e:	1836      	adds	r6, r6, r0
    7440:	1a2d      	subs	r5, r5, r0
    7442:	2d00      	cmp	r5, #0
    7444:	dde9      	ble.n	741a <__sflush_r+0x8e>
    7446:	002b      	movs	r3, r5
    7448:	0032      	movs	r2, r6
    744a:	69e1      	ldr	r1, [r4, #28]
    744c:	4640      	mov	r0, r8
    744e:	6a67      	ldr	r7, [r4, #36]	; 0x24
    7450:	47b8      	blx	r7
    7452:	2800      	cmp	r0, #0
    7454:	dcf3      	bgt.n	743e <__sflush_r+0xb2>
    7456:	2240      	movs	r2, #64	; 0x40
    7458:	2001      	movs	r0, #1
    745a:	89a3      	ldrh	r3, [r4, #12]
    745c:	4240      	negs	r0, r0
    745e:	4313      	orrs	r3, r2
    7460:	81a3      	strh	r3, [r4, #12]
    7462:	e7db      	b.n	741c <__sflush_r+0x90>
    7464:	4643      	mov	r3, r8
    7466:	6819      	ldr	r1, [r3, #0]
    7468:	291d      	cmp	r1, #29
    746a:	d8f4      	bhi.n	7456 <__sflush_r+0xca>
    746c:	4b1a      	ldr	r3, [pc, #104]	; (74d8 <__sflush_r+0x14c>)
    746e:	2201      	movs	r2, #1
    7470:	40cb      	lsrs	r3, r1
    7472:	439a      	bics	r2, r3
    7474:	d1ef      	bne.n	7456 <__sflush_r+0xca>
    7476:	89a3      	ldrh	r3, [r4, #12]
    7478:	4e16      	ldr	r6, [pc, #88]	; (74d4 <__sflush_r+0x148>)
    747a:	6062      	str	r2, [r4, #4]
    747c:	4033      	ands	r3, r6
    747e:	6922      	ldr	r2, [r4, #16]
    7480:	b21b      	sxth	r3, r3
    7482:	81a3      	strh	r3, [r4, #12]
    7484:	6022      	str	r2, [r4, #0]
    7486:	04db      	lsls	r3, r3, #19
    7488:	d5b9      	bpl.n	73fe <__sflush_r+0x72>
    748a:	2900      	cmp	r1, #0
    748c:	d1b7      	bne.n	73fe <__sflush_r+0x72>
    748e:	6520      	str	r0, [r4, #80]	; 0x50
    7490:	e7b5      	b.n	73fe <__sflush_r+0x72>
    7492:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    7494:	2a00      	cmp	r2, #0
    7496:	dd00      	ble.n	749a <__sflush_r+0x10e>
    7498:	e78a      	b.n	73b0 <__sflush_r+0x24>
    749a:	e7be      	b.n	741a <__sflush_r+0x8e>
    749c:	2200      	movs	r2, #0
    749e:	2301      	movs	r3, #1
    74a0:	69e1      	ldr	r1, [r4, #28]
    74a2:	4640      	mov	r0, r8
    74a4:	47b0      	blx	r6
    74a6:	0002      	movs	r2, r0
    74a8:	1c43      	adds	r3, r0, #1
    74aa:	d002      	beq.n	74b2 <__sflush_r+0x126>
    74ac:	89a3      	ldrh	r3, [r4, #12]
    74ae:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    74b0:	e78b      	b.n	73ca <__sflush_r+0x3e>
    74b2:	4643      	mov	r3, r8
    74b4:	681b      	ldr	r3, [r3, #0]
    74b6:	2b00      	cmp	r3, #0
    74b8:	d0f8      	beq.n	74ac <__sflush_r+0x120>
    74ba:	2b1d      	cmp	r3, #29
    74bc:	d001      	beq.n	74c2 <__sflush_r+0x136>
    74be:	2b16      	cmp	r3, #22
    74c0:	d103      	bne.n	74ca <__sflush_r+0x13e>
    74c2:	4643      	mov	r3, r8
    74c4:	2000      	movs	r0, #0
    74c6:	601d      	str	r5, [r3, #0]
    74c8:	e7a8      	b.n	741c <__sflush_r+0x90>
    74ca:	2140      	movs	r1, #64	; 0x40
    74cc:	89a3      	ldrh	r3, [r4, #12]
    74ce:	430b      	orrs	r3, r1
    74d0:	81a3      	strh	r3, [r4, #12]
    74d2:	e7a3      	b.n	741c <__sflush_r+0x90>
    74d4:	fffff7ff 	.word	0xfffff7ff
    74d8:	20400001 	.word	0x20400001

000074dc <_fflush_r>:
    74dc:	b570      	push	{r4, r5, r6, lr}
    74de:	0005      	movs	r5, r0
    74e0:	000c      	movs	r4, r1
    74e2:	2800      	cmp	r0, #0
    74e4:	d002      	beq.n	74ec <_fflush_r+0x10>
    74e6:	6b83      	ldr	r3, [r0, #56]	; 0x38
    74e8:	2b00      	cmp	r3, #0
    74ea:	d016      	beq.n	751a <_fflush_r+0x3e>
    74ec:	220c      	movs	r2, #12
    74ee:	5ea3      	ldrsh	r3, [r4, r2]
    74f0:	2600      	movs	r6, #0
    74f2:	2b00      	cmp	r3, #0
    74f4:	d00f      	beq.n	7516 <_fflush_r+0x3a>
    74f6:	6e62      	ldr	r2, [r4, #100]	; 0x64
    74f8:	07d2      	lsls	r2, r2, #31
    74fa:	d401      	bmi.n	7500 <_fflush_r+0x24>
    74fc:	059b      	lsls	r3, r3, #22
    74fe:	d513      	bpl.n	7528 <_fflush_r+0x4c>
    7500:	0021      	movs	r1, r4
    7502:	0028      	movs	r0, r5
    7504:	f7ff ff42 	bl	738c <__sflush_r>
    7508:	6e63      	ldr	r3, [r4, #100]	; 0x64
    750a:	0006      	movs	r6, r0
    750c:	07db      	lsls	r3, r3, #31
    750e:	d402      	bmi.n	7516 <_fflush_r+0x3a>
    7510:	89a3      	ldrh	r3, [r4, #12]
    7512:	059b      	lsls	r3, r3, #22
    7514:	d504      	bpl.n	7520 <_fflush_r+0x44>
    7516:	0030      	movs	r0, r6
    7518:	bd70      	pop	{r4, r5, r6, pc}
    751a:	f000 f839 	bl	7590 <__sinit>
    751e:	e7e5      	b.n	74ec <_fflush_r+0x10>
    7520:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7522:	f000 fb79 	bl	7c18 <__retarget_lock_release_recursive>
    7526:	e7f6      	b.n	7516 <_fflush_r+0x3a>
    7528:	6da0      	ldr	r0, [r4, #88]	; 0x58
    752a:	f000 fb73 	bl	7c14 <__retarget_lock_acquire_recursive>
    752e:	e7e7      	b.n	7500 <_fflush_r+0x24>

00007530 <_cleanup_r>:
    7530:	b510      	push	{r4, lr}
    7532:	4902      	ldr	r1, [pc, #8]	; (753c <_cleanup_r+0xc>)
    7534:	f000 fb36 	bl	7ba4 <_fwalk_reent>
    7538:	bd10      	pop	{r4, pc}
    753a:	46c0      	nop			; (mov r8, r8)
    753c:	000090c5 	.word	0x000090c5

00007540 <std.isra.0>:
    7540:	2300      	movs	r3, #0
    7542:	b510      	push	{r4, lr}
    7544:	0004      	movs	r4, r0
    7546:	6003      	str	r3, [r0, #0]
    7548:	6043      	str	r3, [r0, #4]
    754a:	6083      	str	r3, [r0, #8]
    754c:	8181      	strh	r1, [r0, #12]
    754e:	6643      	str	r3, [r0, #100]	; 0x64
    7550:	81c2      	strh	r2, [r0, #14]
    7552:	6103      	str	r3, [r0, #16]
    7554:	6143      	str	r3, [r0, #20]
    7556:	6183      	str	r3, [r0, #24]
    7558:	2208      	movs	r2, #8
    755a:	2100      	movs	r1, #0
    755c:	305c      	adds	r0, #92	; 0x5c
    755e:	f7fd f911 	bl	4784 <memset>
    7562:	0020      	movs	r0, r4
    7564:	4b06      	ldr	r3, [pc, #24]	; (7580 <std.isra.0+0x40>)
    7566:	61e4      	str	r4, [r4, #28]
    7568:	6223      	str	r3, [r4, #32]
    756a:	4b06      	ldr	r3, [pc, #24]	; (7584 <std.isra.0+0x44>)
    756c:	3058      	adds	r0, #88	; 0x58
    756e:	6263      	str	r3, [r4, #36]	; 0x24
    7570:	4b05      	ldr	r3, [pc, #20]	; (7588 <std.isra.0+0x48>)
    7572:	62a3      	str	r3, [r4, #40]	; 0x28
    7574:	4b05      	ldr	r3, [pc, #20]	; (758c <std.isra.0+0x4c>)
    7576:	62e3      	str	r3, [r4, #44]	; 0x2c
    7578:	f000 fb48 	bl	7c0c <__retarget_lock_init_recursive>
    757c:	bd10      	pop	{r4, pc}
    757e:	46c0      	nop			; (mov r8, r8)
    7580:	00008df9 	.word	0x00008df9
    7584:	00008e21 	.word	0x00008e21
    7588:	00008e5d 	.word	0x00008e5d
    758c:	00008e89 	.word	0x00008e89

00007590 <__sinit>:
    7590:	b570      	push	{r4, r5, r6, lr}
    7592:	0004      	movs	r4, r0
    7594:	4d14      	ldr	r5, [pc, #80]	; (75e8 <__sinit+0x58>)
    7596:	0028      	movs	r0, r5
    7598:	f000 fb3c 	bl	7c14 <__retarget_lock_acquire_recursive>
    759c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    759e:	2b00      	cmp	r3, #0
    75a0:	d11d      	bne.n	75de <__sinit+0x4e>
    75a2:	4a12      	ldr	r2, [pc, #72]	; (75ec <__sinit+0x5c>)
    75a4:	2104      	movs	r1, #4
    75a6:	63e2      	str	r2, [r4, #60]	; 0x3c
    75a8:	22b8      	movs	r2, #184	; 0xb8
    75aa:	0092      	lsls	r2, r2, #2
    75ac:	50a3      	str	r3, [r4, r2]
    75ae:	23b9      	movs	r3, #185	; 0xb9
    75b0:	2203      	movs	r2, #3
    75b2:	009b      	lsls	r3, r3, #2
    75b4:	50e2      	str	r2, [r4, r3]
    75b6:	3308      	adds	r3, #8
    75b8:	18e2      	adds	r2, r4, r3
    75ba:	3b04      	subs	r3, #4
    75bc:	50e2      	str	r2, [r4, r3]
    75be:	6860      	ldr	r0, [r4, #4]
    75c0:	2200      	movs	r2, #0
    75c2:	f7ff ffbd 	bl	7540 <std.isra.0>
    75c6:	2201      	movs	r2, #1
    75c8:	2109      	movs	r1, #9
    75ca:	68a0      	ldr	r0, [r4, #8]
    75cc:	f7ff ffb8 	bl	7540 <std.isra.0>
    75d0:	2202      	movs	r2, #2
    75d2:	2112      	movs	r1, #18
    75d4:	68e0      	ldr	r0, [r4, #12]
    75d6:	f7ff ffb3 	bl	7540 <std.isra.0>
    75da:	2301      	movs	r3, #1
    75dc:	63a3      	str	r3, [r4, #56]	; 0x38
    75de:	0028      	movs	r0, r5
    75e0:	f000 fb1a 	bl	7c18 <__retarget_lock_release_recursive>
    75e4:	bd70      	pop	{r4, r5, r6, pc}
    75e6:	46c0      	nop			; (mov r8, r8)
    75e8:	20000b98 	.word	0x20000b98
    75ec:	00007531 	.word	0x00007531

000075f0 <__sfp_lock_acquire>:
    75f0:	b510      	push	{r4, lr}
    75f2:	4802      	ldr	r0, [pc, #8]	; (75fc <__sfp_lock_acquire+0xc>)
    75f4:	f000 fb0e 	bl	7c14 <__retarget_lock_acquire_recursive>
    75f8:	bd10      	pop	{r4, pc}
    75fa:	46c0      	nop			; (mov r8, r8)
    75fc:	20000bac 	.word	0x20000bac

00007600 <__sfp_lock_release>:
    7600:	b510      	push	{r4, lr}
    7602:	4802      	ldr	r0, [pc, #8]	; (760c <__sfp_lock_release+0xc>)
    7604:	f000 fb08 	bl	7c18 <__retarget_lock_release_recursive>
    7608:	bd10      	pop	{r4, pc}
    760a:	46c0      	nop			; (mov r8, r8)
    760c:	20000bac 	.word	0x20000bac

00007610 <__libc_fini_array>:
    7610:	b570      	push	{r4, r5, r6, lr}
    7612:	4b09      	ldr	r3, [pc, #36]	; (7638 <__libc_fini_array+0x28>)
    7614:	4c09      	ldr	r4, [pc, #36]	; (763c <__libc_fini_array+0x2c>)
    7616:	1ae4      	subs	r4, r4, r3
    7618:	10a4      	asrs	r4, r4, #2
    761a:	d009      	beq.n	7630 <__libc_fini_array+0x20>
    761c:	4a08      	ldr	r2, [pc, #32]	; (7640 <__libc_fini_array+0x30>)
    761e:	18a5      	adds	r5, r4, r2
    7620:	00ad      	lsls	r5, r5, #2
    7622:	18ed      	adds	r5, r5, r3
    7624:	682b      	ldr	r3, [r5, #0]
    7626:	3c01      	subs	r4, #1
    7628:	4798      	blx	r3
    762a:	3d04      	subs	r5, #4
    762c:	2c00      	cmp	r4, #0
    762e:	d1f9      	bne.n	7624 <__libc_fini_array+0x14>
    7630:	f002 ff70 	bl	a514 <_fini>
    7634:	bd70      	pop	{r4, r5, r6, pc}
    7636:	46c0      	nop			; (mov r8, r8)
    7638:	0000a520 	.word	0x0000a520
    763c:	0000a524 	.word	0x0000a524
    7640:	3fffffff 	.word	0x3fffffff

00007644 <_malloc_trim_r>:
    7644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7646:	000c      	movs	r4, r1
    7648:	0006      	movs	r6, r0
    764a:	f000 fead 	bl	83a8 <__malloc_lock>
    764e:	4f20      	ldr	r7, [pc, #128]	; (76d0 <_malloc_trim_r+0x8c>)
    7650:	68bb      	ldr	r3, [r7, #8]
    7652:	685d      	ldr	r5, [r3, #4]
    7654:	2303      	movs	r3, #3
    7656:	439d      	bics	r5, r3
    7658:	4b1e      	ldr	r3, [pc, #120]	; (76d4 <_malloc_trim_r+0x90>)
    765a:	1b2c      	subs	r4, r5, r4
    765c:	469c      	mov	ip, r3
    765e:	4464      	add	r4, ip
    7660:	0b24      	lsrs	r4, r4, #12
    7662:	4b1d      	ldr	r3, [pc, #116]	; (76d8 <_malloc_trim_r+0x94>)
    7664:	3c01      	subs	r4, #1
    7666:	0324      	lsls	r4, r4, #12
    7668:	429c      	cmp	r4, r3
    766a:	dd07      	ble.n	767c <_malloc_trim_r+0x38>
    766c:	2100      	movs	r1, #0
    766e:	0030      	movs	r0, r6
    7670:	f001 fbb0 	bl	8dd4 <_sbrk_r>
    7674:	68bb      	ldr	r3, [r7, #8]
    7676:	195b      	adds	r3, r3, r5
    7678:	4298      	cmp	r0, r3
    767a:	d004      	beq.n	7686 <_malloc_trim_r+0x42>
    767c:	0030      	movs	r0, r6
    767e:	f000 fe9b 	bl	83b8 <__malloc_unlock>
    7682:	2000      	movs	r0, #0
    7684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7686:	4261      	negs	r1, r4
    7688:	0030      	movs	r0, r6
    768a:	f001 fba3 	bl	8dd4 <_sbrk_r>
    768e:	1c43      	adds	r3, r0, #1
    7690:	d00d      	beq.n	76ae <_malloc_trim_r+0x6a>
    7692:	2201      	movs	r2, #1
    7694:	68bb      	ldr	r3, [r7, #8]
    7696:	1b2d      	subs	r5, r5, r4
    7698:	4315      	orrs	r5, r2
    769a:	605d      	str	r5, [r3, #4]
    769c:	4b0f      	ldr	r3, [pc, #60]	; (76dc <_malloc_trim_r+0x98>)
    769e:	0030      	movs	r0, r6
    76a0:	681a      	ldr	r2, [r3, #0]
    76a2:	1b14      	subs	r4, r2, r4
    76a4:	601c      	str	r4, [r3, #0]
    76a6:	f000 fe87 	bl	83b8 <__malloc_unlock>
    76aa:	2001      	movs	r0, #1
    76ac:	e7ea      	b.n	7684 <_malloc_trim_r+0x40>
    76ae:	2100      	movs	r1, #0
    76b0:	0030      	movs	r0, r6
    76b2:	f001 fb8f 	bl	8dd4 <_sbrk_r>
    76b6:	68ba      	ldr	r2, [r7, #8]
    76b8:	1a83      	subs	r3, r0, r2
    76ba:	2b0f      	cmp	r3, #15
    76bc:	ddde      	ble.n	767c <_malloc_trim_r+0x38>
    76be:	4908      	ldr	r1, [pc, #32]	; (76e0 <_malloc_trim_r+0x9c>)
    76c0:	6809      	ldr	r1, [r1, #0]
    76c2:	1a40      	subs	r0, r0, r1
    76c4:	4905      	ldr	r1, [pc, #20]	; (76dc <_malloc_trim_r+0x98>)
    76c6:	6008      	str	r0, [r1, #0]
    76c8:	2101      	movs	r1, #1
    76ca:	430b      	orrs	r3, r1
    76cc:	6053      	str	r3, [r2, #4]
    76ce:	e7d5      	b.n	767c <_malloc_trim_r+0x38>
    76d0:	200004ac 	.word	0x200004ac
    76d4:	00000fef 	.word	0x00000fef
    76d8:	00000fff 	.word	0x00000fff
    76dc:	20000a90 	.word	0x20000a90
    76e0:	200008b4 	.word	0x200008b4

000076e4 <_free_r>:
    76e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    76e6:	0004      	movs	r4, r0
    76e8:	1e0d      	subs	r5, r1, #0
    76ea:	d03c      	beq.n	7766 <_free_r+0x82>
    76ec:	f000 fe5c 	bl	83a8 <__malloc_lock>
    76f0:	0029      	movs	r1, r5
    76f2:	3908      	subs	r1, #8
    76f4:	6848      	ldr	r0, [r1, #4]
    76f6:	2301      	movs	r3, #1
    76f8:	0005      	movs	r5, r0
    76fa:	2603      	movs	r6, #3
    76fc:	439d      	bics	r5, r3
    76fe:	194a      	adds	r2, r1, r5
    7700:	469c      	mov	ip, r3
    7702:	4f61      	ldr	r7, [pc, #388]	; (7888 <_free_r+0x1a4>)
    7704:	6853      	ldr	r3, [r2, #4]
    7706:	43b3      	bics	r3, r6
    7708:	68be      	ldr	r6, [r7, #8]
    770a:	42b2      	cmp	r2, r6
    770c:	d056      	beq.n	77bc <_free_r+0xd8>
    770e:	4666      	mov	r6, ip
    7710:	6053      	str	r3, [r2, #4]
    7712:	4206      	tst	r6, r0
    7714:	d10a      	bne.n	772c <_free_r+0x48>
    7716:	003e      	movs	r6, r7
    7718:	6808      	ldr	r0, [r1, #0]
    771a:	3608      	adds	r6, #8
    771c:	1a09      	subs	r1, r1, r0
    771e:	182d      	adds	r5, r5, r0
    7720:	6888      	ldr	r0, [r1, #8]
    7722:	42b0      	cmp	r0, r6
    7724:	d065      	beq.n	77f2 <_free_r+0x10e>
    7726:	68ce      	ldr	r6, [r1, #12]
    7728:	60c6      	str	r6, [r0, #12]
    772a:	60b0      	str	r0, [r6, #8]
    772c:	2001      	movs	r0, #1
    772e:	18d6      	adds	r6, r2, r3
    7730:	6876      	ldr	r6, [r6, #4]
    7732:	4206      	tst	r6, r0
    7734:	d033      	beq.n	779e <_free_r+0xba>
    7736:	4b55      	ldr	r3, [pc, #340]	; (788c <_free_r+0x1a8>)
    7738:	4328      	orrs	r0, r5
    773a:	6048      	str	r0, [r1, #4]
    773c:	514d      	str	r5, [r1, r5]
    773e:	429d      	cmp	r5, r3
    7740:	d812      	bhi.n	7768 <_free_r+0x84>
    7742:	08ed      	lsrs	r5, r5, #3
    7744:	3bff      	subs	r3, #255	; 0xff
    7746:	10aa      	asrs	r2, r5, #2
    7748:	3bff      	subs	r3, #255	; 0xff
    774a:	4093      	lsls	r3, r2
    774c:	687a      	ldr	r2, [r7, #4]
    774e:	00ed      	lsls	r5, r5, #3
    7750:	4313      	orrs	r3, r2
    7752:	607b      	str	r3, [r7, #4]
    7754:	19ef      	adds	r7, r5, r7
    7756:	68bb      	ldr	r3, [r7, #8]
    7758:	60cf      	str	r7, [r1, #12]
    775a:	608b      	str	r3, [r1, #8]
    775c:	60b9      	str	r1, [r7, #8]
    775e:	60d9      	str	r1, [r3, #12]
    7760:	0020      	movs	r0, r4
    7762:	f000 fe29 	bl	83b8 <__malloc_unlock>
    7766:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7768:	0a68      	lsrs	r0, r5, #9
    776a:	2804      	cmp	r0, #4
    776c:	d850      	bhi.n	7810 <_free_r+0x12c>
    776e:	09a8      	lsrs	r0, r5, #6
    7770:	0002      	movs	r2, r0
    7772:	3039      	adds	r0, #57	; 0x39
    7774:	3238      	adds	r2, #56	; 0x38
    7776:	00c0      	lsls	r0, r0, #3
    7778:	1838      	adds	r0, r7, r0
    777a:	3808      	subs	r0, #8
    777c:	6883      	ldr	r3, [r0, #8]
    777e:	2603      	movs	r6, #3
    7780:	4298      	cmp	r0, r3
    7782:	d04c      	beq.n	781e <_free_r+0x13a>
    7784:	685a      	ldr	r2, [r3, #4]
    7786:	43b2      	bics	r2, r6
    7788:	4295      	cmp	r5, r2
    778a:	d230      	bcs.n	77ee <_free_r+0x10a>
    778c:	689b      	ldr	r3, [r3, #8]
    778e:	4298      	cmp	r0, r3
    7790:	d1f8      	bne.n	7784 <_free_r+0xa0>
    7792:	68c3      	ldr	r3, [r0, #12]
    7794:	60cb      	str	r3, [r1, #12]
    7796:	6088      	str	r0, [r1, #8]
    7798:	6099      	str	r1, [r3, #8]
    779a:	60c1      	str	r1, [r0, #12]
    779c:	e7e0      	b.n	7760 <_free_r+0x7c>
    779e:	18ed      	adds	r5, r5, r3
    77a0:	4e3b      	ldr	r6, [pc, #236]	; (7890 <_free_r+0x1ac>)
    77a2:	6893      	ldr	r3, [r2, #8]
    77a4:	42b3      	cmp	r3, r6
    77a6:	d042      	beq.n	782e <_free_r+0x14a>
    77a8:	68d2      	ldr	r2, [r2, #12]
    77aa:	4328      	orrs	r0, r5
    77ac:	60da      	str	r2, [r3, #12]
    77ae:	6093      	str	r3, [r2, #8]
    77b0:	4b36      	ldr	r3, [pc, #216]	; (788c <_free_r+0x1a8>)
    77b2:	6048      	str	r0, [r1, #4]
    77b4:	514d      	str	r5, [r1, r5]
    77b6:	429d      	cmp	r5, r3
    77b8:	d8d6      	bhi.n	7768 <_free_r+0x84>
    77ba:	e7c2      	b.n	7742 <_free_r+0x5e>
    77bc:	4662      	mov	r2, ip
    77be:	18eb      	adds	r3, r5, r3
    77c0:	4202      	tst	r2, r0
    77c2:	d106      	bne.n	77d2 <_free_r+0xee>
    77c4:	680a      	ldr	r2, [r1, #0]
    77c6:	1a89      	subs	r1, r1, r2
    77c8:	6888      	ldr	r0, [r1, #8]
    77ca:	189b      	adds	r3, r3, r2
    77cc:	68ca      	ldr	r2, [r1, #12]
    77ce:	60c2      	str	r2, [r0, #12]
    77d0:	6090      	str	r0, [r2, #8]
    77d2:	2201      	movs	r2, #1
    77d4:	431a      	orrs	r2, r3
    77d6:	604a      	str	r2, [r1, #4]
    77d8:	4a2e      	ldr	r2, [pc, #184]	; (7894 <_free_r+0x1b0>)
    77da:	60b9      	str	r1, [r7, #8]
    77dc:	6812      	ldr	r2, [r2, #0]
    77de:	4293      	cmp	r3, r2
    77e0:	d3be      	bcc.n	7760 <_free_r+0x7c>
    77e2:	4b2d      	ldr	r3, [pc, #180]	; (7898 <_free_r+0x1b4>)
    77e4:	0020      	movs	r0, r4
    77e6:	6819      	ldr	r1, [r3, #0]
    77e8:	f7ff ff2c 	bl	7644 <_malloc_trim_r>
    77ec:	e7b8      	b.n	7760 <_free_r+0x7c>
    77ee:	0018      	movs	r0, r3
    77f0:	e7cf      	b.n	7792 <_free_r+0xae>
    77f2:	4666      	mov	r6, ip
    77f4:	18d0      	adds	r0, r2, r3
    77f6:	6840      	ldr	r0, [r0, #4]
    77f8:	4230      	tst	r0, r6
    77fa:	d13f      	bne.n	787c <_free_r+0x198>
    77fc:	6890      	ldr	r0, [r2, #8]
    77fe:	195d      	adds	r5, r3, r5
    7800:	68d3      	ldr	r3, [r2, #12]
    7802:	60c3      	str	r3, [r0, #12]
    7804:	6098      	str	r0, [r3, #8]
    7806:	4663      	mov	r3, ip
    7808:	432b      	orrs	r3, r5
    780a:	604b      	str	r3, [r1, #4]
    780c:	514d      	str	r5, [r1, r5]
    780e:	e7a7      	b.n	7760 <_free_r+0x7c>
    7810:	2814      	cmp	r0, #20
    7812:	d814      	bhi.n	783e <_free_r+0x15a>
    7814:	0002      	movs	r2, r0
    7816:	305c      	adds	r0, #92	; 0x5c
    7818:	325b      	adds	r2, #91	; 0x5b
    781a:	00c0      	lsls	r0, r0, #3
    781c:	e7ac      	b.n	7778 <_free_r+0x94>
    781e:	2301      	movs	r3, #1
    7820:	1092      	asrs	r2, r2, #2
    7822:	4093      	lsls	r3, r2
    7824:	687a      	ldr	r2, [r7, #4]
    7826:	4313      	orrs	r3, r2
    7828:	607b      	str	r3, [r7, #4]
    782a:	0003      	movs	r3, r0
    782c:	e7b2      	b.n	7794 <_free_r+0xb0>
    782e:	4328      	orrs	r0, r5
    7830:	60d9      	str	r1, [r3, #12]
    7832:	6099      	str	r1, [r3, #8]
    7834:	60cb      	str	r3, [r1, #12]
    7836:	608b      	str	r3, [r1, #8]
    7838:	6048      	str	r0, [r1, #4]
    783a:	514d      	str	r5, [r1, r5]
    783c:	e790      	b.n	7760 <_free_r+0x7c>
    783e:	2854      	cmp	r0, #84	; 0x54
    7840:	d805      	bhi.n	784e <_free_r+0x16a>
    7842:	0b28      	lsrs	r0, r5, #12
    7844:	0002      	movs	r2, r0
    7846:	306f      	adds	r0, #111	; 0x6f
    7848:	326e      	adds	r2, #110	; 0x6e
    784a:	00c0      	lsls	r0, r0, #3
    784c:	e794      	b.n	7778 <_free_r+0x94>
    784e:	22aa      	movs	r2, #170	; 0xaa
    7850:	0052      	lsls	r2, r2, #1
    7852:	4290      	cmp	r0, r2
    7854:	d805      	bhi.n	7862 <_free_r+0x17e>
    7856:	0be8      	lsrs	r0, r5, #15
    7858:	0002      	movs	r2, r0
    785a:	3078      	adds	r0, #120	; 0x78
    785c:	3277      	adds	r2, #119	; 0x77
    785e:	00c0      	lsls	r0, r0, #3
    7860:	e78a      	b.n	7778 <_free_r+0x94>
    7862:	4a0e      	ldr	r2, [pc, #56]	; (789c <_free_r+0x1b8>)
    7864:	4290      	cmp	r0, r2
    7866:	d805      	bhi.n	7874 <_free_r+0x190>
    7868:	0ca8      	lsrs	r0, r5, #18
    786a:	0002      	movs	r2, r0
    786c:	307d      	adds	r0, #125	; 0x7d
    786e:	327c      	adds	r2, #124	; 0x7c
    7870:	00c0      	lsls	r0, r0, #3
    7872:	e781      	b.n	7778 <_free_r+0x94>
    7874:	20fe      	movs	r0, #254	; 0xfe
    7876:	227e      	movs	r2, #126	; 0x7e
    7878:	0080      	lsls	r0, r0, #2
    787a:	e77d      	b.n	7778 <_free_r+0x94>
    787c:	4663      	mov	r3, ip
    787e:	432b      	orrs	r3, r5
    7880:	604b      	str	r3, [r1, #4]
    7882:	6015      	str	r5, [r2, #0]
    7884:	e76c      	b.n	7760 <_free_r+0x7c>
    7886:	46c0      	nop			; (mov r8, r8)
    7888:	200004ac 	.word	0x200004ac
    788c:	000001ff 	.word	0x000001ff
    7890:	200004b4 	.word	0x200004b4
    7894:	200008b8 	.word	0x200008b8
    7898:	20000ac0 	.word	0x20000ac0
    789c:	00000554 	.word	0x00000554

000078a0 <__sfvwrite_r>:
    78a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    78a2:	464e      	mov	r6, r9
    78a4:	46de      	mov	lr, fp
    78a6:	4657      	mov	r7, sl
    78a8:	4645      	mov	r5, r8
    78aa:	b5e0      	push	{r5, r6, r7, lr}
    78ac:	6893      	ldr	r3, [r2, #8]
    78ae:	b083      	sub	sp, #12
    78b0:	9000      	str	r0, [sp, #0]
    78b2:	000c      	movs	r4, r1
    78b4:	0016      	movs	r6, r2
    78b6:	2b00      	cmp	r3, #0
    78b8:	d025      	beq.n	7906 <__sfvwrite_r+0x66>
    78ba:	898b      	ldrh	r3, [r1, #12]
    78bc:	071a      	lsls	r2, r3, #28
    78be:	d52a      	bpl.n	7916 <__sfvwrite_r+0x76>
    78c0:	690a      	ldr	r2, [r1, #16]
    78c2:	2a00      	cmp	r2, #0
    78c4:	d027      	beq.n	7916 <__sfvwrite_r+0x76>
    78c6:	6832      	ldr	r2, [r6, #0]
    78c8:	4693      	mov	fp, r2
    78ca:	079a      	lsls	r2, r3, #30
    78cc:	d52f      	bpl.n	792e <__sfvwrite_r+0x8e>
    78ce:	4bb2      	ldr	r3, [pc, #712]	; (7b98 <__sfvwrite_r+0x2f8>)
    78d0:	2700      	movs	r7, #0
    78d2:	2500      	movs	r5, #0
    78d4:	4698      	mov	r8, r3
    78d6:	46b1      	mov	r9, r6
    78d8:	2d00      	cmp	r5, #0
    78da:	d100      	bne.n	78de <__sfvwrite_r+0x3e>
    78dc:	e072      	b.n	79c4 <__sfvwrite_r+0x124>
    78de:	002b      	movs	r3, r5
    78e0:	4545      	cmp	r5, r8
    78e2:	d900      	bls.n	78e6 <__sfvwrite_r+0x46>
    78e4:	4bac      	ldr	r3, [pc, #688]	; (7b98 <__sfvwrite_r+0x2f8>)
    78e6:	003a      	movs	r2, r7
    78e8:	69e1      	ldr	r1, [r4, #28]
    78ea:	9800      	ldr	r0, [sp, #0]
    78ec:	6a66      	ldr	r6, [r4, #36]	; 0x24
    78ee:	47b0      	blx	r6
    78f0:	2800      	cmp	r0, #0
    78f2:	dc00      	bgt.n	78f6 <__sfvwrite_r+0x56>
    78f4:	e073      	b.n	79de <__sfvwrite_r+0x13e>
    78f6:	464b      	mov	r3, r9
    78f8:	689b      	ldr	r3, [r3, #8]
    78fa:	183f      	adds	r7, r7, r0
    78fc:	1a2d      	subs	r5, r5, r0
    78fe:	1a18      	subs	r0, r3, r0
    7900:	464b      	mov	r3, r9
    7902:	6098      	str	r0, [r3, #8]
    7904:	d1e8      	bne.n	78d8 <__sfvwrite_r+0x38>
    7906:	2000      	movs	r0, #0
    7908:	b003      	add	sp, #12
    790a:	bc3c      	pop	{r2, r3, r4, r5}
    790c:	4690      	mov	r8, r2
    790e:	4699      	mov	r9, r3
    7910:	46a2      	mov	sl, r4
    7912:	46ab      	mov	fp, r5
    7914:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7916:	0021      	movs	r1, r4
    7918:	9800      	ldr	r0, [sp, #0]
    791a:	f7fe fc4b 	bl	61b4 <__swsetup_r>
    791e:	2800      	cmp	r0, #0
    7920:	d000      	beq.n	7924 <__sfvwrite_r+0x84>
    7922:	e130      	b.n	7b86 <__sfvwrite_r+0x2e6>
    7924:	6832      	ldr	r2, [r6, #0]
    7926:	89a3      	ldrh	r3, [r4, #12]
    7928:	4693      	mov	fp, r2
    792a:	079a      	lsls	r2, r3, #30
    792c:	d4cf      	bmi.n	78ce <__sfvwrite_r+0x2e>
    792e:	07da      	lsls	r2, r3, #31
    7930:	d55d      	bpl.n	79ee <__sfvwrite_r+0x14e>
    7932:	2300      	movs	r3, #0
    7934:	2000      	movs	r0, #0
    7936:	469a      	mov	sl, r3
    7938:	2700      	movs	r7, #0
    793a:	001d      	movs	r5, r3
    793c:	46b1      	mov	r9, r6
    793e:	e029      	b.n	7994 <__sfvwrite_r+0xf4>
    7940:	2800      	cmp	r0, #0
    7942:	d033      	beq.n	79ac <__sfvwrite_r+0x10c>
    7944:	46a8      	mov	r8, r5
    7946:	42bd      	cmp	r5, r7
    7948:	d900      	bls.n	794c <__sfvwrite_r+0xac>
    794a:	46b8      	mov	r8, r7
    794c:	6820      	ldr	r0, [r4, #0]
    794e:	6922      	ldr	r2, [r4, #16]
    7950:	4646      	mov	r6, r8
    7952:	6963      	ldr	r3, [r4, #20]
    7954:	4290      	cmp	r0, r2
    7956:	d907      	bls.n	7968 <__sfvwrite_r+0xc8>
    7958:	68a2      	ldr	r2, [r4, #8]
    795a:	4694      	mov	ip, r2
    795c:	449c      	add	ip, r3
    795e:	4662      	mov	r2, ip
    7960:	9201      	str	r2, [sp, #4]
    7962:	45e0      	cmp	r8, ip
    7964:	dd00      	ble.n	7968 <__sfvwrite_r+0xc8>
    7966:	e0e9      	b.n	7b3c <__sfvwrite_r+0x29c>
    7968:	4598      	cmp	r8, r3
    796a:	da00      	bge.n	796e <__sfvwrite_r+0xce>
    796c:	e08f      	b.n	7a8e <__sfvwrite_r+0x1ee>
    796e:	6a66      	ldr	r6, [r4, #36]	; 0x24
    7970:	4652      	mov	r2, sl
    7972:	69e1      	ldr	r1, [r4, #28]
    7974:	9800      	ldr	r0, [sp, #0]
    7976:	47b0      	blx	r6
    7978:	1e06      	subs	r6, r0, #0
    797a:	dd30      	ble.n	79de <__sfvwrite_r+0x13e>
    797c:	1bad      	subs	r5, r5, r6
    797e:	2001      	movs	r0, #1
    7980:	2d00      	cmp	r5, #0
    7982:	d026      	beq.n	79d2 <__sfvwrite_r+0x132>
    7984:	464b      	mov	r3, r9
    7986:	689b      	ldr	r3, [r3, #8]
    7988:	44b2      	add	sl, r6
    798a:	1bbf      	subs	r7, r7, r6
    798c:	1b9e      	subs	r6, r3, r6
    798e:	464b      	mov	r3, r9
    7990:	609e      	str	r6, [r3, #8]
    7992:	d0b8      	beq.n	7906 <__sfvwrite_r+0x66>
    7994:	2f00      	cmp	r7, #0
    7996:	d1d3      	bne.n	7940 <__sfvwrite_r+0xa0>
    7998:	465b      	mov	r3, fp
    799a:	681b      	ldr	r3, [r3, #0]
    799c:	469a      	mov	sl, r3
    799e:	465b      	mov	r3, fp
    79a0:	685f      	ldr	r7, [r3, #4]
    79a2:	2308      	movs	r3, #8
    79a4:	469c      	mov	ip, r3
    79a6:	44e3      	add	fp, ip
    79a8:	2f00      	cmp	r7, #0
    79aa:	d0f5      	beq.n	7998 <__sfvwrite_r+0xf8>
    79ac:	003a      	movs	r2, r7
    79ae:	210a      	movs	r1, #10
    79b0:	4650      	mov	r0, sl
    79b2:	f000 fc69 	bl	8288 <memchr>
    79b6:	2800      	cmp	r0, #0
    79b8:	d100      	bne.n	79bc <__sfvwrite_r+0x11c>
    79ba:	e0e2      	b.n	7b82 <__sfvwrite_r+0x2e2>
    79bc:	4653      	mov	r3, sl
    79be:	3001      	adds	r0, #1
    79c0:	1ac5      	subs	r5, r0, r3
    79c2:	e7bf      	b.n	7944 <__sfvwrite_r+0xa4>
    79c4:	465b      	mov	r3, fp
    79c6:	681f      	ldr	r7, [r3, #0]
    79c8:	685d      	ldr	r5, [r3, #4]
    79ca:	2308      	movs	r3, #8
    79cc:	469c      	mov	ip, r3
    79ce:	44e3      	add	fp, ip
    79d0:	e782      	b.n	78d8 <__sfvwrite_r+0x38>
    79d2:	0021      	movs	r1, r4
    79d4:	9800      	ldr	r0, [sp, #0]
    79d6:	f7ff fd81 	bl	74dc <_fflush_r>
    79da:	2800      	cmp	r0, #0
    79dc:	d0d2      	beq.n	7984 <__sfvwrite_r+0xe4>
    79de:	220c      	movs	r2, #12
    79e0:	5ea3      	ldrsh	r3, [r4, r2]
    79e2:	2240      	movs	r2, #64	; 0x40
    79e4:	2001      	movs	r0, #1
    79e6:	4313      	orrs	r3, r2
    79e8:	81a3      	strh	r3, [r4, #12]
    79ea:	4240      	negs	r0, r0
    79ec:	e78c      	b.n	7908 <__sfvwrite_r+0x68>
    79ee:	2200      	movs	r2, #0
    79f0:	4691      	mov	r9, r2
    79f2:	464d      	mov	r5, r9
    79f4:	2d00      	cmp	r5, #0
    79f6:	d023      	beq.n	7a40 <__sfvwrite_r+0x1a0>
    79f8:	68a2      	ldr	r2, [r4, #8]
    79fa:	4690      	mov	r8, r2
    79fc:	2280      	movs	r2, #128	; 0x80
    79fe:	0092      	lsls	r2, r2, #2
    7a00:	4213      	tst	r3, r2
    7a02:	d026      	beq.n	7a52 <__sfvwrite_r+0x1b2>
    7a04:	46c2      	mov	sl, r8
    7a06:	4545      	cmp	r5, r8
    7a08:	d34d      	bcc.n	7aa6 <__sfvwrite_r+0x206>
    7a0a:	2290      	movs	r2, #144	; 0x90
    7a0c:	00d2      	lsls	r2, r2, #3
    7a0e:	4213      	tst	r3, r2
    7a10:	d14e      	bne.n	7ab0 <__sfvwrite_r+0x210>
    7a12:	002f      	movs	r7, r5
    7a14:	6820      	ldr	r0, [r4, #0]
    7a16:	4652      	mov	r2, sl
    7a18:	4649      	mov	r1, r9
    7a1a:	f000 fc75 	bl	8308 <memmove>
    7a1e:	4642      	mov	r2, r8
    7a20:	68a3      	ldr	r3, [r4, #8]
    7a22:	1a98      	subs	r0, r3, r2
    7a24:	6823      	ldr	r3, [r4, #0]
    7a26:	60a0      	str	r0, [r4, #8]
    7a28:	4453      	add	r3, sl
    7a2a:	6023      	str	r3, [r4, #0]
    7a2c:	68b3      	ldr	r3, [r6, #8]
    7a2e:	44b9      	add	r9, r7
    7a30:	1bed      	subs	r5, r5, r7
    7a32:	1bdf      	subs	r7, r3, r7
    7a34:	60b7      	str	r7, [r6, #8]
    7a36:	d100      	bne.n	7a3a <__sfvwrite_r+0x19a>
    7a38:	e765      	b.n	7906 <__sfvwrite_r+0x66>
    7a3a:	89a3      	ldrh	r3, [r4, #12]
    7a3c:	2d00      	cmp	r5, #0
    7a3e:	d1db      	bne.n	79f8 <__sfvwrite_r+0x158>
    7a40:	465a      	mov	r2, fp
    7a42:	6812      	ldr	r2, [r2, #0]
    7a44:	4691      	mov	r9, r2
    7a46:	465a      	mov	r2, fp
    7a48:	6855      	ldr	r5, [r2, #4]
    7a4a:	2208      	movs	r2, #8
    7a4c:	4694      	mov	ip, r2
    7a4e:	44e3      	add	fp, ip
    7a50:	e7d0      	b.n	79f4 <__sfvwrite_r+0x154>
    7a52:	6820      	ldr	r0, [r4, #0]
    7a54:	6923      	ldr	r3, [r4, #16]
    7a56:	4298      	cmp	r0, r3
    7a58:	d802      	bhi.n	7a60 <__sfvwrite_r+0x1c0>
    7a5a:	6967      	ldr	r7, [r4, #20]
    7a5c:	42bd      	cmp	r5, r7
    7a5e:	d259      	bcs.n	7b14 <__sfvwrite_r+0x274>
    7a60:	4647      	mov	r7, r8
    7a62:	42af      	cmp	r7, r5
    7a64:	d900      	bls.n	7a68 <__sfvwrite_r+0x1c8>
    7a66:	002f      	movs	r7, r5
    7a68:	003a      	movs	r2, r7
    7a6a:	4649      	mov	r1, r9
    7a6c:	f000 fc4c 	bl	8308 <memmove>
    7a70:	68a3      	ldr	r3, [r4, #8]
    7a72:	6822      	ldr	r2, [r4, #0]
    7a74:	1bdb      	subs	r3, r3, r7
    7a76:	19d2      	adds	r2, r2, r7
    7a78:	60a3      	str	r3, [r4, #8]
    7a7a:	6022      	str	r2, [r4, #0]
    7a7c:	2b00      	cmp	r3, #0
    7a7e:	d1d5      	bne.n	7a2c <__sfvwrite_r+0x18c>
    7a80:	0021      	movs	r1, r4
    7a82:	9800      	ldr	r0, [sp, #0]
    7a84:	f7ff fd2a 	bl	74dc <_fflush_r>
    7a88:	2800      	cmp	r0, #0
    7a8a:	d0cf      	beq.n	7a2c <__sfvwrite_r+0x18c>
    7a8c:	e7a7      	b.n	79de <__sfvwrite_r+0x13e>
    7a8e:	4642      	mov	r2, r8
    7a90:	4651      	mov	r1, sl
    7a92:	f000 fc39 	bl	8308 <memmove>
    7a96:	4642      	mov	r2, r8
    7a98:	68a3      	ldr	r3, [r4, #8]
    7a9a:	1a9b      	subs	r3, r3, r2
    7a9c:	60a3      	str	r3, [r4, #8]
    7a9e:	6823      	ldr	r3, [r4, #0]
    7aa0:	4443      	add	r3, r8
    7aa2:	6023      	str	r3, [r4, #0]
    7aa4:	e76a      	b.n	797c <__sfvwrite_r+0xdc>
    7aa6:	46a8      	mov	r8, r5
    7aa8:	6820      	ldr	r0, [r4, #0]
    7aaa:	002f      	movs	r7, r5
    7aac:	46aa      	mov	sl, r5
    7aae:	e7b2      	b.n	7a16 <__sfvwrite_r+0x176>
    7ab0:	6921      	ldr	r1, [r4, #16]
    7ab2:	6822      	ldr	r2, [r4, #0]
    7ab4:	1a52      	subs	r2, r2, r1
    7ab6:	4692      	mov	sl, r2
    7ab8:	6962      	ldr	r2, [r4, #20]
    7aba:	0057      	lsls	r7, r2, #1
    7abc:	18bf      	adds	r7, r7, r2
    7abe:	0ffa      	lsrs	r2, r7, #31
    7ac0:	19d7      	adds	r7, r2, r7
    7ac2:	4652      	mov	r2, sl
    7ac4:	1c50      	adds	r0, r2, #1
    7ac6:	107f      	asrs	r7, r7, #1
    7ac8:	1940      	adds	r0, r0, r5
    7aca:	003a      	movs	r2, r7
    7acc:	42b8      	cmp	r0, r7
    7ace:	d901      	bls.n	7ad4 <__sfvwrite_r+0x234>
    7ad0:	0007      	movs	r7, r0
    7ad2:	0002      	movs	r2, r0
    7ad4:	055b      	lsls	r3, r3, #21
    7ad6:	d542      	bpl.n	7b5e <__sfvwrite_r+0x2be>
    7ad8:	0011      	movs	r1, r2
    7ada:	9800      	ldr	r0, [sp, #0]
    7adc:	f000 f920 	bl	7d20 <_malloc_r>
    7ae0:	4680      	mov	r8, r0
    7ae2:	1e03      	subs	r3, r0, #0
    7ae4:	d052      	beq.n	7b8c <__sfvwrite_r+0x2ec>
    7ae6:	4652      	mov	r2, sl
    7ae8:	6921      	ldr	r1, [r4, #16]
    7aea:	f7fc fe09 	bl	4700 <memcpy>
    7aee:	89a3      	ldrh	r3, [r4, #12]
    7af0:	4a2a      	ldr	r2, [pc, #168]	; (7b9c <__sfvwrite_r+0x2fc>)
    7af2:	4013      	ands	r3, r2
    7af4:	2280      	movs	r2, #128	; 0x80
    7af6:	4313      	orrs	r3, r2
    7af8:	81a3      	strh	r3, [r4, #12]
    7afa:	4643      	mov	r3, r8
    7afc:	4640      	mov	r0, r8
    7afe:	6123      	str	r3, [r4, #16]
    7b00:	4653      	mov	r3, sl
    7b02:	4450      	add	r0, sl
    7b04:	6167      	str	r7, [r4, #20]
    7b06:	1aff      	subs	r7, r7, r3
    7b08:	60a7      	str	r7, [r4, #8]
    7b0a:	6020      	str	r0, [r4, #0]
    7b0c:	46a8      	mov	r8, r5
    7b0e:	002f      	movs	r7, r5
    7b10:	46aa      	mov	sl, r5
    7b12:	e780      	b.n	7a16 <__sfvwrite_r+0x176>
    7b14:	4b22      	ldr	r3, [pc, #136]	; (7ba0 <__sfvwrite_r+0x300>)
    7b16:	0028      	movs	r0, r5
    7b18:	429d      	cmp	r5, r3
    7b1a:	d900      	bls.n	7b1e <__sfvwrite_r+0x27e>
    7b1c:	0018      	movs	r0, r3
    7b1e:	0039      	movs	r1, r7
    7b20:	f001 fcba 	bl	9498 <__divsi3>
    7b24:	003b      	movs	r3, r7
    7b26:	464a      	mov	r2, r9
    7b28:	4343      	muls	r3, r0
    7b2a:	69e1      	ldr	r1, [r4, #28]
    7b2c:	9800      	ldr	r0, [sp, #0]
    7b2e:	6a67      	ldr	r7, [r4, #36]	; 0x24
    7b30:	47b8      	blx	r7
    7b32:	2800      	cmp	r0, #0
    7b34:	dc00      	bgt.n	7b38 <__sfvwrite_r+0x298>
    7b36:	e752      	b.n	79de <__sfvwrite_r+0x13e>
    7b38:	0007      	movs	r7, r0
    7b3a:	e777      	b.n	7a2c <__sfvwrite_r+0x18c>
    7b3c:	4666      	mov	r6, ip
    7b3e:	4651      	mov	r1, sl
    7b40:	f000 fbe2 	bl	8308 <memmove>
    7b44:	46b4      	mov	ip, r6
    7b46:	6823      	ldr	r3, [r4, #0]
    7b48:	0021      	movs	r1, r4
    7b4a:	4463      	add	r3, ip
    7b4c:	6023      	str	r3, [r4, #0]
    7b4e:	9800      	ldr	r0, [sp, #0]
    7b50:	f7ff fcc4 	bl	74dc <_fflush_r>
    7b54:	2800      	cmp	r0, #0
    7b56:	d000      	beq.n	7b5a <__sfvwrite_r+0x2ba>
    7b58:	e741      	b.n	79de <__sfvwrite_r+0x13e>
    7b5a:	9e01      	ldr	r6, [sp, #4]
    7b5c:	e70e      	b.n	797c <__sfvwrite_r+0xdc>
    7b5e:	9800      	ldr	r0, [sp, #0]
    7b60:	f000 ff7a 	bl	8a58 <_realloc_r>
    7b64:	4680      	mov	r8, r0
    7b66:	2800      	cmp	r0, #0
    7b68:	d1c7      	bne.n	7afa <__sfvwrite_r+0x25a>
    7b6a:	9d00      	ldr	r5, [sp, #0]
    7b6c:	6921      	ldr	r1, [r4, #16]
    7b6e:	0028      	movs	r0, r5
    7b70:	f7ff fdb8 	bl	76e4 <_free_r>
    7b74:	2280      	movs	r2, #128	; 0x80
    7b76:	89a3      	ldrh	r3, [r4, #12]
    7b78:	4393      	bics	r3, r2
    7b7a:	3a74      	subs	r2, #116	; 0x74
    7b7c:	b21b      	sxth	r3, r3
    7b7e:	602a      	str	r2, [r5, #0]
    7b80:	e72f      	b.n	79e2 <__sfvwrite_r+0x142>
    7b82:	1c7d      	adds	r5, r7, #1
    7b84:	e6de      	b.n	7944 <__sfvwrite_r+0xa4>
    7b86:	2001      	movs	r0, #1
    7b88:	4240      	negs	r0, r0
    7b8a:	e6bd      	b.n	7908 <__sfvwrite_r+0x68>
    7b8c:	9a00      	ldr	r2, [sp, #0]
    7b8e:	330c      	adds	r3, #12
    7b90:	6013      	str	r3, [r2, #0]
    7b92:	220c      	movs	r2, #12
    7b94:	5ea3      	ldrsh	r3, [r4, r2]
    7b96:	e724      	b.n	79e2 <__sfvwrite_r+0x142>
    7b98:	7ffffc00 	.word	0x7ffffc00
    7b9c:	fffffb7f 	.word	0xfffffb7f
    7ba0:	7fffffff 	.word	0x7fffffff

00007ba4 <_fwalk_reent>:
    7ba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7ba6:	4647      	mov	r7, r8
    7ba8:	46ce      	mov	lr, r9
    7baa:	b580      	push	{r7, lr}
    7bac:	27b8      	movs	r7, #184	; 0xb8
    7bae:	4680      	mov	r8, r0
    7bb0:	00bf      	lsls	r7, r7, #2
    7bb2:	4447      	add	r7, r8
    7bb4:	4689      	mov	r9, r1
    7bb6:	2600      	movs	r6, #0
    7bb8:	2f00      	cmp	r7, #0
    7bba:	d014      	beq.n	7be6 <_fwalk_reent+0x42>
    7bbc:	687b      	ldr	r3, [r7, #4]
    7bbe:	68bc      	ldr	r4, [r7, #8]
    7bc0:	1e5d      	subs	r5, r3, #1
    7bc2:	d40d      	bmi.n	7be0 <_fwalk_reent+0x3c>
    7bc4:	89a3      	ldrh	r3, [r4, #12]
    7bc6:	2b01      	cmp	r3, #1
    7bc8:	d907      	bls.n	7bda <_fwalk_reent+0x36>
    7bca:	220e      	movs	r2, #14
    7bcc:	5ea3      	ldrsh	r3, [r4, r2]
    7bce:	3301      	adds	r3, #1
    7bd0:	d003      	beq.n	7bda <_fwalk_reent+0x36>
    7bd2:	0021      	movs	r1, r4
    7bd4:	4640      	mov	r0, r8
    7bd6:	47c8      	blx	r9
    7bd8:	4306      	orrs	r6, r0
    7bda:	3468      	adds	r4, #104	; 0x68
    7bdc:	3d01      	subs	r5, #1
    7bde:	d2f1      	bcs.n	7bc4 <_fwalk_reent+0x20>
    7be0:	683f      	ldr	r7, [r7, #0]
    7be2:	2f00      	cmp	r7, #0
    7be4:	d1ea      	bne.n	7bbc <_fwalk_reent+0x18>
    7be6:	0030      	movs	r0, r6
    7be8:	bc0c      	pop	{r2, r3}
    7bea:	4690      	mov	r8, r2
    7bec:	4699      	mov	r9, r3
    7bee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00007bf0 <_localeconv_r>:
    7bf0:	4b04      	ldr	r3, [pc, #16]	; (7c04 <_localeconv_r+0x14>)
    7bf2:	681b      	ldr	r3, [r3, #0]
    7bf4:	6b58      	ldr	r0, [r3, #52]	; 0x34
    7bf6:	2800      	cmp	r0, #0
    7bf8:	d001      	beq.n	7bfe <_localeconv_r+0xe>
    7bfa:	30f0      	adds	r0, #240	; 0xf0
    7bfc:	4770      	bx	lr
    7bfe:	4802      	ldr	r0, [pc, #8]	; (7c08 <_localeconv_r+0x18>)
    7c00:	e7fb      	b.n	7bfa <_localeconv_r+0xa>
    7c02:	46c0      	nop			; (mov r8, r8)
    7c04:	2000007c 	.word	0x2000007c
    7c08:	200008bc 	.word	0x200008bc

00007c0c <__retarget_lock_init_recursive>:
    7c0c:	4770      	bx	lr
    7c0e:	46c0      	nop			; (mov r8, r8)

00007c10 <__retarget_lock_close_recursive>:
    7c10:	4770      	bx	lr
    7c12:	46c0      	nop			; (mov r8, r8)

00007c14 <__retarget_lock_acquire_recursive>:
    7c14:	4770      	bx	lr
    7c16:	46c0      	nop			; (mov r8, r8)

00007c18 <__retarget_lock_release_recursive>:
    7c18:	4770      	bx	lr
    7c1a:	46c0      	nop			; (mov r8, r8)

00007c1c <__swhatbuf_r>:
    7c1c:	b570      	push	{r4, r5, r6, lr}
    7c1e:	000c      	movs	r4, r1
    7c20:	001e      	movs	r6, r3
    7c22:	230e      	movs	r3, #14
    7c24:	5ec9      	ldrsh	r1, [r1, r3]
    7c26:	b090      	sub	sp, #64	; 0x40
    7c28:	0015      	movs	r5, r2
    7c2a:	2900      	cmp	r1, #0
    7c2c:	db15      	blt.n	7c5a <__swhatbuf_r+0x3e>
    7c2e:	aa01      	add	r2, sp, #4
    7c30:	f001 fb28 	bl	9284 <_fstat_r>
    7c34:	2800      	cmp	r0, #0
    7c36:	db10      	blt.n	7c5a <__swhatbuf_r+0x3e>
    7c38:	22f0      	movs	r2, #240	; 0xf0
    7c3a:	9b02      	ldr	r3, [sp, #8]
    7c3c:	0212      	lsls	r2, r2, #8
    7c3e:	4013      	ands	r3, r2
    7c40:	4a0d      	ldr	r2, [pc, #52]	; (7c78 <__swhatbuf_r+0x5c>)
    7c42:	2080      	movs	r0, #128	; 0x80
    7c44:	4694      	mov	ip, r2
    7c46:	4463      	add	r3, ip
    7c48:	425a      	negs	r2, r3
    7c4a:	4153      	adcs	r3, r2
    7c4c:	6033      	str	r3, [r6, #0]
    7c4e:	2380      	movs	r3, #128	; 0x80
    7c50:	00db      	lsls	r3, r3, #3
    7c52:	602b      	str	r3, [r5, #0]
    7c54:	0100      	lsls	r0, r0, #4
    7c56:	b010      	add	sp, #64	; 0x40
    7c58:	bd70      	pop	{r4, r5, r6, pc}
    7c5a:	2300      	movs	r3, #0
    7c5c:	6033      	str	r3, [r6, #0]
    7c5e:	89a3      	ldrh	r3, [r4, #12]
    7c60:	061b      	lsls	r3, r3, #24
    7c62:	d503      	bpl.n	7c6c <__swhatbuf_r+0x50>
    7c64:	2340      	movs	r3, #64	; 0x40
    7c66:	2000      	movs	r0, #0
    7c68:	602b      	str	r3, [r5, #0]
    7c6a:	e7f4      	b.n	7c56 <__swhatbuf_r+0x3a>
    7c6c:	2380      	movs	r3, #128	; 0x80
    7c6e:	00db      	lsls	r3, r3, #3
    7c70:	602b      	str	r3, [r5, #0]
    7c72:	2000      	movs	r0, #0
    7c74:	e7ef      	b.n	7c56 <__swhatbuf_r+0x3a>
    7c76:	46c0      	nop			; (mov r8, r8)
    7c78:	ffffe000 	.word	0xffffe000

00007c7c <__smakebuf_r>:
    7c7c:	b570      	push	{r4, r5, r6, lr}
    7c7e:	898b      	ldrh	r3, [r1, #12]
    7c80:	b082      	sub	sp, #8
    7c82:	0006      	movs	r6, r0
    7c84:	000c      	movs	r4, r1
    7c86:	079b      	lsls	r3, r3, #30
    7c88:	d507      	bpl.n	7c9a <__smakebuf_r+0x1e>
    7c8a:	0023      	movs	r3, r4
    7c8c:	3343      	adds	r3, #67	; 0x43
    7c8e:	6023      	str	r3, [r4, #0]
    7c90:	6123      	str	r3, [r4, #16]
    7c92:	2301      	movs	r3, #1
    7c94:	6163      	str	r3, [r4, #20]
    7c96:	b002      	add	sp, #8
    7c98:	bd70      	pop	{r4, r5, r6, pc}
    7c9a:	ab01      	add	r3, sp, #4
    7c9c:	466a      	mov	r2, sp
    7c9e:	f7ff ffbd 	bl	7c1c <__swhatbuf_r>
    7ca2:	9900      	ldr	r1, [sp, #0]
    7ca4:	0005      	movs	r5, r0
    7ca6:	0030      	movs	r0, r6
    7ca8:	f000 f83a 	bl	7d20 <_malloc_r>
    7cac:	2800      	cmp	r0, #0
    7cae:	d01e      	beq.n	7cee <__smakebuf_r+0x72>
    7cb0:	2280      	movs	r2, #128	; 0x80
    7cb2:	4b15      	ldr	r3, [pc, #84]	; (7d08 <__smakebuf_r+0x8c>)
    7cb4:	63f3      	str	r3, [r6, #60]	; 0x3c
    7cb6:	89a3      	ldrh	r3, [r4, #12]
    7cb8:	6020      	str	r0, [r4, #0]
    7cba:	4313      	orrs	r3, r2
    7cbc:	9a00      	ldr	r2, [sp, #0]
    7cbe:	b21b      	sxth	r3, r3
    7cc0:	6162      	str	r2, [r4, #20]
    7cc2:	9a01      	ldr	r2, [sp, #4]
    7cc4:	81a3      	strh	r3, [r4, #12]
    7cc6:	6120      	str	r0, [r4, #16]
    7cc8:	2a00      	cmp	r2, #0
    7cca:	d102      	bne.n	7cd2 <__smakebuf_r+0x56>
    7ccc:	432b      	orrs	r3, r5
    7cce:	81a3      	strh	r3, [r4, #12]
    7cd0:	e7e1      	b.n	7c96 <__smakebuf_r+0x1a>
    7cd2:	230e      	movs	r3, #14
    7cd4:	5ee1      	ldrsh	r1, [r4, r3]
    7cd6:	0030      	movs	r0, r6
    7cd8:	f001 fae8 	bl	92ac <_isatty_r>
    7cdc:	2800      	cmp	r0, #0
    7cde:	d010      	beq.n	7d02 <__smakebuf_r+0x86>
    7ce0:	2203      	movs	r2, #3
    7ce2:	89a3      	ldrh	r3, [r4, #12]
    7ce4:	4393      	bics	r3, r2
    7ce6:	2201      	movs	r2, #1
    7ce8:	4313      	orrs	r3, r2
    7cea:	b21b      	sxth	r3, r3
    7cec:	e7ee      	b.n	7ccc <__smakebuf_r+0x50>
    7cee:	220c      	movs	r2, #12
    7cf0:	5ea3      	ldrsh	r3, [r4, r2]
    7cf2:	059a      	lsls	r2, r3, #22
    7cf4:	d4cf      	bmi.n	7c96 <__smakebuf_r+0x1a>
    7cf6:	2203      	movs	r2, #3
    7cf8:	4393      	bics	r3, r2
    7cfa:	2202      	movs	r2, #2
    7cfc:	4313      	orrs	r3, r2
    7cfe:	81a3      	strh	r3, [r4, #12]
    7d00:	e7c3      	b.n	7c8a <__smakebuf_r+0xe>
    7d02:	220c      	movs	r2, #12
    7d04:	5ea3      	ldrsh	r3, [r4, r2]
    7d06:	e7e1      	b.n	7ccc <__smakebuf_r+0x50>
    7d08:	00007531 	.word	0x00007531

00007d0c <malloc>:
    7d0c:	b510      	push	{r4, lr}
    7d0e:	4b03      	ldr	r3, [pc, #12]	; (7d1c <malloc+0x10>)
    7d10:	0001      	movs	r1, r0
    7d12:	6818      	ldr	r0, [r3, #0]
    7d14:	f000 f804 	bl	7d20 <_malloc_r>
    7d18:	bd10      	pop	{r4, pc}
    7d1a:	46c0      	nop			; (mov r8, r8)
    7d1c:	2000007c 	.word	0x2000007c

00007d20 <_malloc_r>:
    7d20:	b5f0      	push	{r4, r5, r6, r7, lr}
    7d22:	4657      	mov	r7, sl
    7d24:	4645      	mov	r5, r8
    7d26:	46de      	mov	lr, fp
    7d28:	464e      	mov	r6, r9
    7d2a:	b5e0      	push	{r5, r6, r7, lr}
    7d2c:	000d      	movs	r5, r1
    7d2e:	350b      	adds	r5, #11
    7d30:	b083      	sub	sp, #12
    7d32:	0007      	movs	r7, r0
    7d34:	2d16      	cmp	r5, #22
    7d36:	d800      	bhi.n	7d3a <_malloc_r+0x1a>
    7d38:	e09f      	b.n	7e7a <_malloc_r+0x15a>
    7d3a:	2307      	movs	r3, #7
    7d3c:	439d      	bics	r5, r3
    7d3e:	d500      	bpl.n	7d42 <_malloc_r+0x22>
    7d40:	e0c4      	b.n	7ecc <_malloc_r+0x1ac>
    7d42:	42a9      	cmp	r1, r5
    7d44:	d900      	bls.n	7d48 <_malloc_r+0x28>
    7d46:	e0c1      	b.n	7ecc <_malloc_r+0x1ac>
    7d48:	f000 fb2e 	bl	83a8 <__malloc_lock>
    7d4c:	23f8      	movs	r3, #248	; 0xf8
    7d4e:	33ff      	adds	r3, #255	; 0xff
    7d50:	429d      	cmp	r5, r3
    7d52:	d800      	bhi.n	7d56 <_malloc_r+0x36>
    7d54:	e28f      	b.n	8276 <_malloc_r+0x556>
    7d56:	0a68      	lsrs	r0, r5, #9
    7d58:	d100      	bne.n	7d5c <_malloc_r+0x3c>
    7d5a:	e0bb      	b.n	7ed4 <_malloc_r+0x1b4>
    7d5c:	2804      	cmp	r0, #4
    7d5e:	d900      	bls.n	7d62 <_malloc_r+0x42>
    7d60:	e162      	b.n	8028 <_malloc_r+0x308>
    7d62:	2338      	movs	r3, #56	; 0x38
    7d64:	4698      	mov	r8, r3
    7d66:	09a8      	lsrs	r0, r5, #6
    7d68:	4480      	add	r8, r0
    7d6a:	3039      	adds	r0, #57	; 0x39
    7d6c:	00c1      	lsls	r1, r0, #3
    7d6e:	4ed2      	ldr	r6, [pc, #840]	; (80b8 <_malloc_r+0x398>)
    7d70:	1871      	adds	r1, r6, r1
    7d72:	3908      	subs	r1, #8
    7d74:	68cc      	ldr	r4, [r1, #12]
    7d76:	42a1      	cmp	r1, r4
    7d78:	d019      	beq.n	7dae <_malloc_r+0x8e>
    7d7a:	2303      	movs	r3, #3
    7d7c:	6862      	ldr	r2, [r4, #4]
    7d7e:	439a      	bics	r2, r3
    7d80:	0013      	movs	r3, r2
    7d82:	1b52      	subs	r2, r2, r5
    7d84:	2a0f      	cmp	r2, #15
    7d86:	dd00      	ble.n	7d8a <_malloc_r+0x6a>
    7d88:	e0aa      	b.n	7ee0 <_malloc_r+0x1c0>
    7d8a:	2a00      	cmp	r2, #0
    7d8c:	db00      	blt.n	7d90 <_malloc_r+0x70>
    7d8e:	e088      	b.n	7ea2 <_malloc_r+0x182>
    7d90:	2303      	movs	r3, #3
    7d92:	469c      	mov	ip, r3
    7d94:	e008      	b.n	7da8 <_malloc_r+0x88>
    7d96:	4662      	mov	r2, ip
    7d98:	6863      	ldr	r3, [r4, #4]
    7d9a:	4393      	bics	r3, r2
    7d9c:	1b5a      	subs	r2, r3, r5
    7d9e:	2a0f      	cmp	r2, #15
    7da0:	dd00      	ble.n	7da4 <_malloc_r+0x84>
    7da2:	e09d      	b.n	7ee0 <_malloc_r+0x1c0>
    7da4:	2a00      	cmp	r2, #0
    7da6:	da7c      	bge.n	7ea2 <_malloc_r+0x182>
    7da8:	68e4      	ldr	r4, [r4, #12]
    7daa:	42a1      	cmp	r1, r4
    7dac:	d1f3      	bne.n	7d96 <_malloc_r+0x76>
    7dae:	0032      	movs	r2, r6
    7db0:	6934      	ldr	r4, [r6, #16]
    7db2:	3208      	adds	r2, #8
    7db4:	4294      	cmp	r4, r2
    7db6:	d100      	bne.n	7dba <_malloc_r+0x9a>
    7db8:	e190      	b.n	80dc <_malloc_r+0x3bc>
    7dba:	2303      	movs	r3, #3
    7dbc:	6861      	ldr	r1, [r4, #4]
    7dbe:	4399      	bics	r1, r3
    7dc0:	4689      	mov	r9, r1
    7dc2:	1b49      	subs	r1, r1, r5
    7dc4:	290f      	cmp	r1, #15
    7dc6:	dd00      	ble.n	7dca <_malloc_r+0xaa>
    7dc8:	e162      	b.n	8090 <_malloc_r+0x370>
    7dca:	6172      	str	r2, [r6, #20]
    7dcc:	6132      	str	r2, [r6, #16]
    7dce:	2900      	cmp	r1, #0
    7dd0:	db00      	blt.n	7dd4 <_malloc_r+0xb4>
    7dd2:	e087      	b.n	7ee4 <_malloc_r+0x1c4>
    7dd4:	4ab9      	ldr	r2, [pc, #740]	; (80bc <_malloc_r+0x39c>)
    7dd6:	464b      	mov	r3, r9
    7dd8:	4591      	cmp	r9, r2
    7dda:	d900      	bls.n	7dde <_malloc_r+0xbe>
    7ddc:	e130      	b.n	8040 <_malloc_r+0x320>
    7dde:	08db      	lsrs	r3, r3, #3
    7de0:	3aff      	subs	r2, #255	; 0xff
    7de2:	1099      	asrs	r1, r3, #2
    7de4:	3aff      	subs	r2, #255	; 0xff
    7de6:	408a      	lsls	r2, r1
    7de8:	00db      	lsls	r3, r3, #3
    7dea:	6871      	ldr	r1, [r6, #4]
    7dec:	199b      	adds	r3, r3, r6
    7dee:	430a      	orrs	r2, r1
    7df0:	6899      	ldr	r1, [r3, #8]
    7df2:	6072      	str	r2, [r6, #4]
    7df4:	60e3      	str	r3, [r4, #12]
    7df6:	60a1      	str	r1, [r4, #8]
    7df8:	609c      	str	r4, [r3, #8]
    7dfa:	0013      	movs	r3, r2
    7dfc:	60cc      	str	r4, [r1, #12]
    7dfe:	2101      	movs	r1, #1
    7e00:	1082      	asrs	r2, r0, #2
    7e02:	4091      	lsls	r1, r2
    7e04:	4299      	cmp	r1, r3
    7e06:	d86f      	bhi.n	7ee8 <_malloc_r+0x1c8>
    7e08:	420b      	tst	r3, r1
    7e0a:	d105      	bne.n	7e18 <_malloc_r+0xf8>
    7e0c:	2203      	movs	r2, #3
    7e0e:	4390      	bics	r0, r2
    7e10:	0049      	lsls	r1, r1, #1
    7e12:	3004      	adds	r0, #4
    7e14:	420b      	tst	r3, r1
    7e16:	d0fb      	beq.n	7e10 <_malloc_r+0xf0>
    7e18:	2303      	movs	r3, #3
    7e1a:	4698      	mov	r8, r3
    7e1c:	00c3      	lsls	r3, r0, #3
    7e1e:	4699      	mov	r9, r3
    7e20:	44b1      	add	r9, r6
    7e22:	46cc      	mov	ip, r9
    7e24:	4682      	mov	sl, r0
    7e26:	4663      	mov	r3, ip
    7e28:	68dc      	ldr	r4, [r3, #12]
    7e2a:	45a4      	cmp	ip, r4
    7e2c:	d107      	bne.n	7e3e <_malloc_r+0x11e>
    7e2e:	e157      	b.n	80e0 <_malloc_r+0x3c0>
    7e30:	2a00      	cmp	r2, #0
    7e32:	db00      	blt.n	7e36 <_malloc_r+0x116>
    7e34:	e166      	b.n	8104 <_malloc_r+0x3e4>
    7e36:	68e4      	ldr	r4, [r4, #12]
    7e38:	45a4      	cmp	ip, r4
    7e3a:	d100      	bne.n	7e3e <_malloc_r+0x11e>
    7e3c:	e150      	b.n	80e0 <_malloc_r+0x3c0>
    7e3e:	4642      	mov	r2, r8
    7e40:	6863      	ldr	r3, [r4, #4]
    7e42:	4393      	bics	r3, r2
    7e44:	1b5a      	subs	r2, r3, r5
    7e46:	2a0f      	cmp	r2, #15
    7e48:	ddf2      	ble.n	7e30 <_malloc_r+0x110>
    7e4a:	2001      	movs	r0, #1
    7e4c:	4680      	mov	r8, r0
    7e4e:	1961      	adds	r1, r4, r5
    7e50:	4305      	orrs	r5, r0
    7e52:	6065      	str	r5, [r4, #4]
    7e54:	68a0      	ldr	r0, [r4, #8]
    7e56:	68e5      	ldr	r5, [r4, #12]
    7e58:	3608      	adds	r6, #8
    7e5a:	60c5      	str	r5, [r0, #12]
    7e5c:	60a8      	str	r0, [r5, #8]
    7e5e:	4640      	mov	r0, r8
    7e60:	60f1      	str	r1, [r6, #12]
    7e62:	60b1      	str	r1, [r6, #8]
    7e64:	4310      	orrs	r0, r2
    7e66:	6048      	str	r0, [r1, #4]
    7e68:	60ce      	str	r6, [r1, #12]
    7e6a:	608e      	str	r6, [r1, #8]
    7e6c:	0038      	movs	r0, r7
    7e6e:	50e2      	str	r2, [r4, r3]
    7e70:	f000 faa2 	bl	83b8 <__malloc_unlock>
    7e74:	0020      	movs	r0, r4
    7e76:	3008      	adds	r0, #8
    7e78:	e021      	b.n	7ebe <_malloc_r+0x19e>
    7e7a:	2910      	cmp	r1, #16
    7e7c:	d826      	bhi.n	7ecc <_malloc_r+0x1ac>
    7e7e:	0038      	movs	r0, r7
    7e80:	f000 fa92 	bl	83a8 <__malloc_lock>
    7e84:	2510      	movs	r5, #16
    7e86:	2318      	movs	r3, #24
    7e88:	2002      	movs	r0, #2
    7e8a:	4e8b      	ldr	r6, [pc, #556]	; (80b8 <_malloc_r+0x398>)
    7e8c:	18f3      	adds	r3, r6, r3
    7e8e:	001a      	movs	r2, r3
    7e90:	685c      	ldr	r4, [r3, #4]
    7e92:	3a08      	subs	r2, #8
    7e94:	4294      	cmp	r4, r2
    7e96:	d100      	bne.n	7e9a <_malloc_r+0x17a>
    7e98:	e12e      	b.n	80f8 <_malloc_r+0x3d8>
    7e9a:	2303      	movs	r3, #3
    7e9c:	6862      	ldr	r2, [r4, #4]
    7e9e:	439a      	bics	r2, r3
    7ea0:	0013      	movs	r3, r2
    7ea2:	68e2      	ldr	r2, [r4, #12]
    7ea4:	68a1      	ldr	r1, [r4, #8]
    7ea6:	60ca      	str	r2, [r1, #12]
    7ea8:	6091      	str	r1, [r2, #8]
    7eaa:	2201      	movs	r2, #1
    7eac:	18e3      	adds	r3, r4, r3
    7eae:	6859      	ldr	r1, [r3, #4]
    7eb0:	0038      	movs	r0, r7
    7eb2:	430a      	orrs	r2, r1
    7eb4:	605a      	str	r2, [r3, #4]
    7eb6:	f000 fa7f 	bl	83b8 <__malloc_unlock>
    7eba:	0020      	movs	r0, r4
    7ebc:	3008      	adds	r0, #8
    7ebe:	b003      	add	sp, #12
    7ec0:	bc3c      	pop	{r2, r3, r4, r5}
    7ec2:	4690      	mov	r8, r2
    7ec4:	4699      	mov	r9, r3
    7ec6:	46a2      	mov	sl, r4
    7ec8:	46ab      	mov	fp, r5
    7eca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7ecc:	230c      	movs	r3, #12
    7ece:	2000      	movs	r0, #0
    7ed0:	603b      	str	r3, [r7, #0]
    7ed2:	e7f4      	b.n	7ebe <_malloc_r+0x19e>
    7ed4:	2180      	movs	r1, #128	; 0x80
    7ed6:	233f      	movs	r3, #63	; 0x3f
    7ed8:	2040      	movs	r0, #64	; 0x40
    7eda:	0089      	lsls	r1, r1, #2
    7edc:	4698      	mov	r8, r3
    7ede:	e746      	b.n	7d6e <_malloc_r+0x4e>
    7ee0:	4640      	mov	r0, r8
    7ee2:	e764      	b.n	7dae <_malloc_r+0x8e>
    7ee4:	464b      	mov	r3, r9
    7ee6:	e7e0      	b.n	7eaa <_malloc_r+0x18a>
    7ee8:	2303      	movs	r3, #3
    7eea:	68b4      	ldr	r4, [r6, #8]
    7eec:	6862      	ldr	r2, [r4, #4]
    7eee:	439a      	bics	r2, r3
    7ef0:	4690      	mov	r8, r2
    7ef2:	42aa      	cmp	r2, r5
    7ef4:	d303      	bcc.n	7efe <_malloc_r+0x1de>
    7ef6:	1b53      	subs	r3, r2, r5
    7ef8:	2b0f      	cmp	r3, #15
    7efa:	dd00      	ble.n	7efe <_malloc_r+0x1de>
    7efc:	e086      	b.n	800c <_malloc_r+0x2ec>
    7efe:	0023      	movs	r3, r4
    7f00:	4443      	add	r3, r8
    7f02:	4a6f      	ldr	r2, [pc, #444]	; (80c0 <_malloc_r+0x3a0>)
    7f04:	9301      	str	r3, [sp, #4]
    7f06:	4b6f      	ldr	r3, [pc, #444]	; (80c4 <_malloc_r+0x3a4>)
    7f08:	4693      	mov	fp, r2
    7f0a:	681b      	ldr	r3, [r3, #0]
    7f0c:	6812      	ldr	r2, [r2, #0]
    7f0e:	18eb      	adds	r3, r5, r3
    7f10:	3201      	adds	r2, #1
    7f12:	d100      	bne.n	7f16 <_malloc_r+0x1f6>
    7f14:	e168      	b.n	81e8 <_malloc_r+0x4c8>
    7f16:	4a6c      	ldr	r2, [pc, #432]	; (80c8 <_malloc_r+0x3a8>)
    7f18:	4694      	mov	ip, r2
    7f1a:	4463      	add	r3, ip
    7f1c:	0b1b      	lsrs	r3, r3, #12
    7f1e:	031b      	lsls	r3, r3, #12
    7f20:	9300      	str	r3, [sp, #0]
    7f22:	9900      	ldr	r1, [sp, #0]
    7f24:	0038      	movs	r0, r7
    7f26:	f000 ff55 	bl	8dd4 <_sbrk_r>
    7f2a:	0003      	movs	r3, r0
    7f2c:	4681      	mov	r9, r0
    7f2e:	3301      	adds	r3, #1
    7f30:	d061      	beq.n	7ff6 <_malloc_r+0x2d6>
    7f32:	9b01      	ldr	r3, [sp, #4]
    7f34:	4283      	cmp	r3, r0
    7f36:	d900      	bls.n	7f3a <_malloc_r+0x21a>
    7f38:	e0ff      	b.n	813a <_malloc_r+0x41a>
    7f3a:	4b64      	ldr	r3, [pc, #400]	; (80cc <_malloc_r+0x3ac>)
    7f3c:	9a00      	ldr	r2, [sp, #0]
    7f3e:	469a      	mov	sl, r3
    7f40:	681b      	ldr	r3, [r3, #0]
    7f42:	469c      	mov	ip, r3
    7f44:	4653      	mov	r3, sl
    7f46:	4462      	add	r2, ip
    7f48:	601a      	str	r2, [r3, #0]
    7f4a:	9b01      	ldr	r3, [sp, #4]
    7f4c:	0011      	movs	r1, r2
    7f4e:	4283      	cmp	r3, r0
    7f50:	d100      	bne.n	7f54 <_malloc_r+0x234>
    7f52:	e155      	b.n	8200 <_malloc_r+0x4e0>
    7f54:	465b      	mov	r3, fp
    7f56:	681b      	ldr	r3, [r3, #0]
    7f58:	3301      	adds	r3, #1
    7f5a:	d100      	bne.n	7f5e <_malloc_r+0x23e>
    7f5c:	e16c      	b.n	8238 <_malloc_r+0x518>
    7f5e:	464b      	mov	r3, r9
    7f60:	9a01      	ldr	r2, [sp, #4]
    7f62:	1a9b      	subs	r3, r3, r2
    7f64:	1859      	adds	r1, r3, r1
    7f66:	4653      	mov	r3, sl
    7f68:	6019      	str	r1, [r3, #0]
    7f6a:	2307      	movs	r3, #7
    7f6c:	464a      	mov	r2, r9
    7f6e:	4013      	ands	r3, r2
    7f70:	d100      	bne.n	7f74 <_malloc_r+0x254>
    7f72:	e124      	b.n	81be <_malloc_r+0x49e>
    7f74:	2108      	movs	r1, #8
    7f76:	4689      	mov	r9, r1
    7f78:	4955      	ldr	r1, [pc, #340]	; (80d0 <_malloc_r+0x3b0>)
    7f7a:	1ad2      	subs	r2, r2, r3
    7f7c:	4491      	add	r9, r2
    7f7e:	1acb      	subs	r3, r1, r3
    7f80:	9a00      	ldr	r2, [sp, #0]
    7f82:	0038      	movs	r0, r7
    7f84:	444a      	add	r2, r9
    7f86:	0511      	lsls	r1, r2, #20
    7f88:	0d09      	lsrs	r1, r1, #20
    7f8a:	1a5b      	subs	r3, r3, r1
    7f8c:	0019      	movs	r1, r3
    7f8e:	469b      	mov	fp, r3
    7f90:	f000 ff20 	bl	8dd4 <_sbrk_r>
    7f94:	1c43      	adds	r3, r0, #1
    7f96:	d100      	bne.n	7f9a <_malloc_r+0x27a>
    7f98:	e142      	b.n	8220 <_malloc_r+0x500>
    7f9a:	464b      	mov	r3, r9
    7f9c:	1ac0      	subs	r0, r0, r3
    7f9e:	2301      	movs	r3, #1
    7fa0:	4458      	add	r0, fp
    7fa2:	4318      	orrs	r0, r3
    7fa4:	4653      	mov	r3, sl
    7fa6:	681b      	ldr	r3, [r3, #0]
    7fa8:	445b      	add	r3, fp
    7faa:	0019      	movs	r1, r3
    7fac:	4653      	mov	r3, sl
    7fae:	6019      	str	r1, [r3, #0]
    7fb0:	464b      	mov	r3, r9
    7fb2:	60b3      	str	r3, [r6, #8]
    7fb4:	6058      	str	r0, [r3, #4]
    7fb6:	42b4      	cmp	r4, r6
    7fb8:	d013      	beq.n	7fe2 <_malloc_r+0x2c2>
    7fba:	4643      	mov	r3, r8
    7fbc:	2b0f      	cmp	r3, #15
    7fbe:	d800      	bhi.n	7fc2 <_malloc_r+0x2a2>
    7fc0:	e0e8      	b.n	8194 <_malloc_r+0x474>
    7fc2:	4643      	mov	r3, r8
    7fc4:	2207      	movs	r2, #7
    7fc6:	6860      	ldr	r0, [r4, #4]
    7fc8:	3b0c      	subs	r3, #12
    7fca:	4393      	bics	r3, r2
    7fcc:	3a06      	subs	r2, #6
    7fce:	4002      	ands	r2, r0
    7fd0:	2005      	movs	r0, #5
    7fd2:	431a      	orrs	r2, r3
    7fd4:	6062      	str	r2, [r4, #4]
    7fd6:	18e2      	adds	r2, r4, r3
    7fd8:	6050      	str	r0, [r2, #4]
    7fda:	6090      	str	r0, [r2, #8]
    7fdc:	2b0f      	cmp	r3, #15
    7fde:	d900      	bls.n	7fe2 <_malloc_r+0x2c2>
    7fe0:	e122      	b.n	8228 <_malloc_r+0x508>
    7fe2:	4b3c      	ldr	r3, [pc, #240]	; (80d4 <_malloc_r+0x3b4>)
    7fe4:	681a      	ldr	r2, [r3, #0]
    7fe6:	4291      	cmp	r1, r2
    7fe8:	d900      	bls.n	7fec <_malloc_r+0x2cc>
    7fea:	6019      	str	r1, [r3, #0]
    7fec:	4b3a      	ldr	r3, [pc, #232]	; (80d8 <_malloc_r+0x3b8>)
    7fee:	681a      	ldr	r2, [r3, #0]
    7ff0:	4291      	cmp	r1, r2
    7ff2:	d900      	bls.n	7ff6 <_malloc_r+0x2d6>
    7ff4:	6019      	str	r1, [r3, #0]
    7ff6:	2303      	movs	r3, #3
    7ff8:	68b4      	ldr	r4, [r6, #8]
    7ffa:	6862      	ldr	r2, [r4, #4]
    7ffc:	439a      	bics	r2, r3
    7ffe:	1b53      	subs	r3, r2, r5
    8000:	4295      	cmp	r5, r2
    8002:	d900      	bls.n	8006 <_malloc_r+0x2e6>
    8004:	e0c9      	b.n	819a <_malloc_r+0x47a>
    8006:	2b0f      	cmp	r3, #15
    8008:	dc00      	bgt.n	800c <_malloc_r+0x2ec>
    800a:	e0c6      	b.n	819a <_malloc_r+0x47a>
    800c:	2201      	movs	r2, #1
    800e:	0029      	movs	r1, r5
    8010:	4313      	orrs	r3, r2
    8012:	4311      	orrs	r1, r2
    8014:	1965      	adds	r5, r4, r5
    8016:	6061      	str	r1, [r4, #4]
    8018:	0038      	movs	r0, r7
    801a:	60b5      	str	r5, [r6, #8]
    801c:	606b      	str	r3, [r5, #4]
    801e:	f000 f9cb 	bl	83b8 <__malloc_unlock>
    8022:	0020      	movs	r0, r4
    8024:	3008      	adds	r0, #8
    8026:	e74a      	b.n	7ebe <_malloc_r+0x19e>
    8028:	2814      	cmp	r0, #20
    802a:	d97a      	bls.n	8122 <_malloc_r+0x402>
    802c:	2854      	cmp	r0, #84	; 0x54
    802e:	d900      	bls.n	8032 <_malloc_r+0x312>
    8030:	e0ba      	b.n	81a8 <_malloc_r+0x488>
    8032:	236e      	movs	r3, #110	; 0x6e
    8034:	4698      	mov	r8, r3
    8036:	0b28      	lsrs	r0, r5, #12
    8038:	4480      	add	r8, r0
    803a:	306f      	adds	r0, #111	; 0x6f
    803c:	00c1      	lsls	r1, r0, #3
    803e:	e696      	b.n	7d6e <_malloc_r+0x4e>
    8040:	0a5a      	lsrs	r2, r3, #9
    8042:	2a04      	cmp	r2, #4
    8044:	d973      	bls.n	812e <_malloc_r+0x40e>
    8046:	2a14      	cmp	r2, #20
    8048:	d900      	bls.n	804c <_malloc_r+0x32c>
    804a:	e0d0      	b.n	81ee <_malloc_r+0x4ce>
    804c:	0011      	movs	r1, r2
    804e:	325c      	adds	r2, #92	; 0x5c
    8050:	315b      	adds	r1, #91	; 0x5b
    8052:	00d2      	lsls	r2, r2, #3
    8054:	2308      	movs	r3, #8
    8056:	425b      	negs	r3, r3
    8058:	469c      	mov	ip, r3
    805a:	18b2      	adds	r2, r6, r2
    805c:	4494      	add	ip, r2
    805e:	4663      	mov	r3, ip
    8060:	689a      	ldr	r2, [r3, #8]
    8062:	2303      	movs	r3, #3
    8064:	4698      	mov	r8, r3
    8066:	4594      	cmp	ip, r2
    8068:	d100      	bne.n	806c <_malloc_r+0x34c>
    806a:	e0ab      	b.n	81c4 <_malloc_r+0x4a4>
    806c:	4643      	mov	r3, r8
    806e:	6851      	ldr	r1, [r2, #4]
    8070:	4399      	bics	r1, r3
    8072:	4589      	cmp	r9, r1
    8074:	d300      	bcc.n	8078 <_malloc_r+0x358>
    8076:	e095      	b.n	81a4 <_malloc_r+0x484>
    8078:	6892      	ldr	r2, [r2, #8]
    807a:	4594      	cmp	ip, r2
    807c:	d1f6      	bne.n	806c <_malloc_r+0x34c>
    807e:	4663      	mov	r3, ip
    8080:	68da      	ldr	r2, [r3, #12]
    8082:	6873      	ldr	r3, [r6, #4]
    8084:	4661      	mov	r1, ip
    8086:	60e2      	str	r2, [r4, #12]
    8088:	60a1      	str	r1, [r4, #8]
    808a:	6094      	str	r4, [r2, #8]
    808c:	60cc      	str	r4, [r1, #12]
    808e:	e6b6      	b.n	7dfe <_malloc_r+0xde>
    8090:	2301      	movs	r3, #1
    8092:	1960      	adds	r0, r4, r5
    8094:	431d      	orrs	r5, r3
    8096:	6065      	str	r5, [r4, #4]
    8098:	6170      	str	r0, [r6, #20]
    809a:	6130      	str	r0, [r6, #16]
    809c:	60c2      	str	r2, [r0, #12]
    809e:	6082      	str	r2, [r0, #8]
    80a0:	001a      	movs	r2, r3
    80a2:	464b      	mov	r3, r9
    80a4:	430a      	orrs	r2, r1
    80a6:	6042      	str	r2, [r0, #4]
    80a8:	0038      	movs	r0, r7
    80aa:	50e1      	str	r1, [r4, r3]
    80ac:	f000 f984 	bl	83b8 <__malloc_unlock>
    80b0:	0020      	movs	r0, r4
    80b2:	3008      	adds	r0, #8
    80b4:	e703      	b.n	7ebe <_malloc_r+0x19e>
    80b6:	46c0      	nop			; (mov r8, r8)
    80b8:	200004ac 	.word	0x200004ac
    80bc:	000001ff 	.word	0x000001ff
    80c0:	200008b4 	.word	0x200008b4
    80c4:	20000ac0 	.word	0x20000ac0
    80c8:	0000100f 	.word	0x0000100f
    80cc:	20000a90 	.word	0x20000a90
    80d0:	00001008 	.word	0x00001008
    80d4:	20000ab8 	.word	0x20000ab8
    80d8:	20000abc 	.word	0x20000abc
    80dc:	6873      	ldr	r3, [r6, #4]
    80de:	e68e      	b.n	7dfe <_malloc_r+0xde>
    80e0:	2308      	movs	r3, #8
    80e2:	469b      	mov	fp, r3
    80e4:	3b07      	subs	r3, #7
    80e6:	44dc      	add	ip, fp
    80e8:	469b      	mov	fp, r3
    80ea:	44da      	add	sl, fp
    80ec:	4643      	mov	r3, r8
    80ee:	4652      	mov	r2, sl
    80f0:	4213      	tst	r3, r2
    80f2:	d000      	beq.n	80f6 <_malloc_r+0x3d6>
    80f4:	e697      	b.n	7e26 <_malloc_r+0x106>
    80f6:	e037      	b.n	8168 <_malloc_r+0x448>
    80f8:	68dc      	ldr	r4, [r3, #12]
    80fa:	3002      	adds	r0, #2
    80fc:	42a3      	cmp	r3, r4
    80fe:	d100      	bne.n	8102 <_malloc_r+0x3e2>
    8100:	e655      	b.n	7dae <_malloc_r+0x8e>
    8102:	e6ca      	b.n	7e9a <_malloc_r+0x17a>
    8104:	2201      	movs	r2, #1
    8106:	18e3      	adds	r3, r4, r3
    8108:	6859      	ldr	r1, [r3, #4]
    810a:	0038      	movs	r0, r7
    810c:	430a      	orrs	r2, r1
    810e:	605a      	str	r2, [r3, #4]
    8110:	68e3      	ldr	r3, [r4, #12]
    8112:	68a2      	ldr	r2, [r4, #8]
    8114:	60d3      	str	r3, [r2, #12]
    8116:	609a      	str	r2, [r3, #8]
    8118:	f000 f94e 	bl	83b8 <__malloc_unlock>
    811c:	0020      	movs	r0, r4
    811e:	3008      	adds	r0, #8
    8120:	e6cd      	b.n	7ebe <_malloc_r+0x19e>
    8122:	235b      	movs	r3, #91	; 0x5b
    8124:	4698      	mov	r8, r3
    8126:	4480      	add	r8, r0
    8128:	305c      	adds	r0, #92	; 0x5c
    812a:	00c1      	lsls	r1, r0, #3
    812c:	e61f      	b.n	7d6e <_malloc_r+0x4e>
    812e:	099a      	lsrs	r2, r3, #6
    8130:	0011      	movs	r1, r2
    8132:	3239      	adds	r2, #57	; 0x39
    8134:	3138      	adds	r1, #56	; 0x38
    8136:	00d2      	lsls	r2, r2, #3
    8138:	e78c      	b.n	8054 <_malloc_r+0x334>
    813a:	42b4      	cmp	r4, r6
    813c:	d000      	beq.n	8140 <_malloc_r+0x420>
    813e:	e75a      	b.n	7ff6 <_malloc_r+0x2d6>
    8140:	4b4f      	ldr	r3, [pc, #316]	; (8280 <_malloc_r+0x560>)
    8142:	9a00      	ldr	r2, [sp, #0]
    8144:	469a      	mov	sl, r3
    8146:	681b      	ldr	r3, [r3, #0]
    8148:	469c      	mov	ip, r3
    814a:	4653      	mov	r3, sl
    814c:	4462      	add	r2, ip
    814e:	0011      	movs	r1, r2
    8150:	601a      	str	r2, [r3, #0]
    8152:	e6ff      	b.n	7f54 <_malloc_r+0x234>
    8154:	2308      	movs	r3, #8
    8156:	425b      	negs	r3, r3
    8158:	469c      	mov	ip, r3
    815a:	44e1      	add	r9, ip
    815c:	464b      	mov	r3, r9
    815e:	689b      	ldr	r3, [r3, #8]
    8160:	3801      	subs	r0, #1
    8162:	4599      	cmp	r9, r3
    8164:	d000      	beq.n	8168 <_malloc_r+0x448>
    8166:	e084      	b.n	8272 <_malloc_r+0x552>
    8168:	4643      	mov	r3, r8
    816a:	4203      	tst	r3, r0
    816c:	d1f2      	bne.n	8154 <_malloc_r+0x434>
    816e:	6873      	ldr	r3, [r6, #4]
    8170:	438b      	bics	r3, r1
    8172:	6073      	str	r3, [r6, #4]
    8174:	0049      	lsls	r1, r1, #1
    8176:	4299      	cmp	r1, r3
    8178:	d900      	bls.n	817c <_malloc_r+0x45c>
    817a:	e6b5      	b.n	7ee8 <_malloc_r+0x1c8>
    817c:	2900      	cmp	r1, #0
    817e:	d100      	bne.n	8182 <_malloc_r+0x462>
    8180:	e6b2      	b.n	7ee8 <_malloc_r+0x1c8>
    8182:	4650      	mov	r0, sl
    8184:	420b      	tst	r3, r1
    8186:	d000      	beq.n	818a <_malloc_r+0x46a>
    8188:	e648      	b.n	7e1c <_malloc_r+0xfc>
    818a:	0049      	lsls	r1, r1, #1
    818c:	3004      	adds	r0, #4
    818e:	420b      	tst	r3, r1
    8190:	d0fb      	beq.n	818a <_malloc_r+0x46a>
    8192:	e643      	b.n	7e1c <_malloc_r+0xfc>
    8194:	2301      	movs	r3, #1
    8196:	464a      	mov	r2, r9
    8198:	6053      	str	r3, [r2, #4]
    819a:	0038      	movs	r0, r7
    819c:	f000 f90c 	bl	83b8 <__malloc_unlock>
    81a0:	2000      	movs	r0, #0
    81a2:	e68c      	b.n	7ebe <_malloc_r+0x19e>
    81a4:	4694      	mov	ip, r2
    81a6:	e76a      	b.n	807e <_malloc_r+0x35e>
    81a8:	23aa      	movs	r3, #170	; 0xaa
    81aa:	005b      	lsls	r3, r3, #1
    81ac:	4298      	cmp	r0, r3
    81ae:	d811      	bhi.n	81d4 <_malloc_r+0x4b4>
    81b0:	3bdd      	subs	r3, #221	; 0xdd
    81b2:	4698      	mov	r8, r3
    81b4:	0be8      	lsrs	r0, r5, #15
    81b6:	4480      	add	r8, r0
    81b8:	3078      	adds	r0, #120	; 0x78
    81ba:	00c1      	lsls	r1, r0, #3
    81bc:	e5d7      	b.n	7d6e <_malloc_r+0x4e>
    81be:	2380      	movs	r3, #128	; 0x80
    81c0:	015b      	lsls	r3, r3, #5
    81c2:	e6dd      	b.n	7f80 <_malloc_r+0x260>
    81c4:	1089      	asrs	r1, r1, #2
    81c6:	3b02      	subs	r3, #2
    81c8:	408b      	lsls	r3, r1
    81ca:	6872      	ldr	r2, [r6, #4]
    81cc:	4313      	orrs	r3, r2
    81ce:	6073      	str	r3, [r6, #4]
    81d0:	4662      	mov	r2, ip
    81d2:	e757      	b.n	8084 <_malloc_r+0x364>
    81d4:	4b2b      	ldr	r3, [pc, #172]	; (8284 <_malloc_r+0x564>)
    81d6:	4298      	cmp	r0, r3
    81d8:	d81c      	bhi.n	8214 <_malloc_r+0x4f4>
    81da:	237c      	movs	r3, #124	; 0x7c
    81dc:	4698      	mov	r8, r3
    81de:	0ca8      	lsrs	r0, r5, #18
    81e0:	4480      	add	r8, r0
    81e2:	307d      	adds	r0, #125	; 0x7d
    81e4:	00c1      	lsls	r1, r0, #3
    81e6:	e5c2      	b.n	7d6e <_malloc_r+0x4e>
    81e8:	3310      	adds	r3, #16
    81ea:	9300      	str	r3, [sp, #0]
    81ec:	e699      	b.n	7f22 <_malloc_r+0x202>
    81ee:	2a54      	cmp	r2, #84	; 0x54
    81f0:	d826      	bhi.n	8240 <_malloc_r+0x520>
    81f2:	464b      	mov	r3, r9
    81f4:	0b1a      	lsrs	r2, r3, #12
    81f6:	0011      	movs	r1, r2
    81f8:	326f      	adds	r2, #111	; 0x6f
    81fa:	316e      	adds	r1, #110	; 0x6e
    81fc:	00d2      	lsls	r2, r2, #3
    81fe:	e729      	b.n	8054 <_malloc_r+0x334>
    8200:	051b      	lsls	r3, r3, #20
    8202:	d000      	beq.n	8206 <_malloc_r+0x4e6>
    8204:	e6a6      	b.n	7f54 <_malloc_r+0x234>
    8206:	2001      	movs	r0, #1
    8208:	9b00      	ldr	r3, [sp, #0]
    820a:	68b2      	ldr	r2, [r6, #8]
    820c:	4443      	add	r3, r8
    820e:	4303      	orrs	r3, r0
    8210:	6053      	str	r3, [r2, #4]
    8212:	e6e6      	b.n	7fe2 <_malloc_r+0x2c2>
    8214:	21fe      	movs	r1, #254	; 0xfe
    8216:	237e      	movs	r3, #126	; 0x7e
    8218:	207f      	movs	r0, #127	; 0x7f
    821a:	0089      	lsls	r1, r1, #2
    821c:	4698      	mov	r8, r3
    821e:	e5a6      	b.n	7d6e <_malloc_r+0x4e>
    8220:	2300      	movs	r3, #0
    8222:	2001      	movs	r0, #1
    8224:	469b      	mov	fp, r3
    8226:	e6bd      	b.n	7fa4 <_malloc_r+0x284>
    8228:	0021      	movs	r1, r4
    822a:	0038      	movs	r0, r7
    822c:	3108      	adds	r1, #8
    822e:	f7ff fa59 	bl	76e4 <_free_r>
    8232:	4653      	mov	r3, sl
    8234:	6819      	ldr	r1, [r3, #0]
    8236:	e6d4      	b.n	7fe2 <_malloc_r+0x2c2>
    8238:	465b      	mov	r3, fp
    823a:	464a      	mov	r2, r9
    823c:	601a      	str	r2, [r3, #0]
    823e:	e694      	b.n	7f6a <_malloc_r+0x24a>
    8240:	21aa      	movs	r1, #170	; 0xaa
    8242:	0049      	lsls	r1, r1, #1
    8244:	428a      	cmp	r2, r1
    8246:	d806      	bhi.n	8256 <_malloc_r+0x536>
    8248:	464b      	mov	r3, r9
    824a:	0bda      	lsrs	r2, r3, #15
    824c:	0011      	movs	r1, r2
    824e:	3278      	adds	r2, #120	; 0x78
    8250:	3177      	adds	r1, #119	; 0x77
    8252:	00d2      	lsls	r2, r2, #3
    8254:	e6fe      	b.n	8054 <_malloc_r+0x334>
    8256:	490b      	ldr	r1, [pc, #44]	; (8284 <_malloc_r+0x564>)
    8258:	428a      	cmp	r2, r1
    825a:	d806      	bhi.n	826a <_malloc_r+0x54a>
    825c:	464b      	mov	r3, r9
    825e:	0c9a      	lsrs	r2, r3, #18
    8260:	0011      	movs	r1, r2
    8262:	327d      	adds	r2, #125	; 0x7d
    8264:	317c      	adds	r1, #124	; 0x7c
    8266:	00d2      	lsls	r2, r2, #3
    8268:	e6f4      	b.n	8054 <_malloc_r+0x334>
    826a:	22fe      	movs	r2, #254	; 0xfe
    826c:	217e      	movs	r1, #126	; 0x7e
    826e:	0092      	lsls	r2, r2, #2
    8270:	e6f0      	b.n	8054 <_malloc_r+0x334>
    8272:	6873      	ldr	r3, [r6, #4]
    8274:	e77e      	b.n	8174 <_malloc_r+0x454>
    8276:	002b      	movs	r3, r5
    8278:	08e8      	lsrs	r0, r5, #3
    827a:	3308      	adds	r3, #8
    827c:	e605      	b.n	7e8a <_malloc_r+0x16a>
    827e:	46c0      	nop			; (mov r8, r8)
    8280:	20000a90 	.word	0x20000a90
    8284:	00000554 	.word	0x00000554

00008288 <memchr>:
    8288:	b570      	push	{r4, r5, r6, lr}
    828a:	b2cd      	uxtb	r5, r1
    828c:	0783      	lsls	r3, r0, #30
    828e:	d034      	beq.n	82fa <memchr+0x72>
    8290:	1e54      	subs	r4, r2, #1
    8292:	2a00      	cmp	r2, #0
    8294:	d01b      	beq.n	82ce <memchr+0x46>
    8296:	7803      	ldrb	r3, [r0, #0]
    8298:	42ab      	cmp	r3, r5
    829a:	d019      	beq.n	82d0 <memchr+0x48>
    829c:	2203      	movs	r2, #3
    829e:	e004      	b.n	82aa <memchr+0x22>
    82a0:	3c01      	subs	r4, #1
    82a2:	d314      	bcc.n	82ce <memchr+0x46>
    82a4:	7803      	ldrb	r3, [r0, #0]
    82a6:	42ab      	cmp	r3, r5
    82a8:	d012      	beq.n	82d0 <memchr+0x48>
    82aa:	3001      	adds	r0, #1
    82ac:	4210      	tst	r0, r2
    82ae:	d1f7      	bne.n	82a0 <memchr+0x18>
    82b0:	2c03      	cmp	r4, #3
    82b2:	d80e      	bhi.n	82d2 <memchr+0x4a>
    82b4:	2c00      	cmp	r4, #0
    82b6:	d00a      	beq.n	82ce <memchr+0x46>
    82b8:	7803      	ldrb	r3, [r0, #0]
    82ba:	42ab      	cmp	r3, r5
    82bc:	d008      	beq.n	82d0 <memchr+0x48>
    82be:	1904      	adds	r4, r0, r4
    82c0:	e002      	b.n	82c8 <memchr+0x40>
    82c2:	7803      	ldrb	r3, [r0, #0]
    82c4:	42ab      	cmp	r3, r5
    82c6:	d003      	beq.n	82d0 <memchr+0x48>
    82c8:	3001      	adds	r0, #1
    82ca:	4284      	cmp	r4, r0
    82cc:	d1f9      	bne.n	82c2 <memchr+0x3a>
    82ce:	2000      	movs	r0, #0
    82d0:	bd70      	pop	{r4, r5, r6, pc}
    82d2:	22ff      	movs	r2, #255	; 0xff
    82d4:	060b      	lsls	r3, r1, #24
    82d6:	0c1b      	lsrs	r3, r3, #16
    82d8:	4011      	ands	r1, r2
    82da:	4319      	orrs	r1, r3
    82dc:	040b      	lsls	r3, r1, #16
    82de:	4e08      	ldr	r6, [pc, #32]	; (8300 <memchr+0x78>)
    82e0:	4319      	orrs	r1, r3
    82e2:	6803      	ldr	r3, [r0, #0]
    82e4:	4a07      	ldr	r2, [pc, #28]	; (8304 <memchr+0x7c>)
    82e6:	404b      	eors	r3, r1
    82e8:	189a      	adds	r2, r3, r2
    82ea:	439a      	bics	r2, r3
    82ec:	4232      	tst	r2, r6
    82ee:	d1e3      	bne.n	82b8 <memchr+0x30>
    82f0:	3c04      	subs	r4, #4
    82f2:	3004      	adds	r0, #4
    82f4:	2c03      	cmp	r4, #3
    82f6:	d8f4      	bhi.n	82e2 <memchr+0x5a>
    82f8:	e7dc      	b.n	82b4 <memchr+0x2c>
    82fa:	0014      	movs	r4, r2
    82fc:	e7d8      	b.n	82b0 <memchr+0x28>
    82fe:	46c0      	nop			; (mov r8, r8)
    8300:	80808080 	.word	0x80808080
    8304:	fefefeff 	.word	0xfefefeff

00008308 <memmove>:
    8308:	b5f0      	push	{r4, r5, r6, r7, lr}
    830a:	4288      	cmp	r0, r1
    830c:	d90a      	bls.n	8324 <memmove+0x1c>
    830e:	188b      	adds	r3, r1, r2
    8310:	4298      	cmp	r0, r3
    8312:	d207      	bcs.n	8324 <memmove+0x1c>
    8314:	1e53      	subs	r3, r2, #1
    8316:	2a00      	cmp	r2, #0
    8318:	d003      	beq.n	8322 <memmove+0x1a>
    831a:	5cca      	ldrb	r2, [r1, r3]
    831c:	54c2      	strb	r2, [r0, r3]
    831e:	3b01      	subs	r3, #1
    8320:	d2fb      	bcs.n	831a <memmove+0x12>
    8322:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8324:	0005      	movs	r5, r0
    8326:	2a0f      	cmp	r2, #15
    8328:	d808      	bhi.n	833c <memmove+0x34>
    832a:	2a00      	cmp	r2, #0
    832c:	d0f9      	beq.n	8322 <memmove+0x1a>
    832e:	2300      	movs	r3, #0
    8330:	5ccc      	ldrb	r4, [r1, r3]
    8332:	54ec      	strb	r4, [r5, r3]
    8334:	3301      	adds	r3, #1
    8336:	4293      	cmp	r3, r2
    8338:	d1fa      	bne.n	8330 <memmove+0x28>
    833a:	e7f2      	b.n	8322 <memmove+0x1a>
    833c:	000b      	movs	r3, r1
    833e:	4303      	orrs	r3, r0
    8340:	079b      	lsls	r3, r3, #30
    8342:	d12d      	bne.n	83a0 <memmove+0x98>
    8344:	0015      	movs	r5, r2
    8346:	000c      	movs	r4, r1
    8348:	0003      	movs	r3, r0
    834a:	3d10      	subs	r5, #16
    834c:	092f      	lsrs	r7, r5, #4
    834e:	3701      	adds	r7, #1
    8350:	013f      	lsls	r7, r7, #4
    8352:	19c7      	adds	r7, r0, r7
    8354:	6826      	ldr	r6, [r4, #0]
    8356:	601e      	str	r6, [r3, #0]
    8358:	6866      	ldr	r6, [r4, #4]
    835a:	605e      	str	r6, [r3, #4]
    835c:	68a6      	ldr	r6, [r4, #8]
    835e:	609e      	str	r6, [r3, #8]
    8360:	68e6      	ldr	r6, [r4, #12]
    8362:	3410      	adds	r4, #16
    8364:	60de      	str	r6, [r3, #12]
    8366:	3310      	adds	r3, #16
    8368:	429f      	cmp	r7, r3
    836a:	d1f3      	bne.n	8354 <memmove+0x4c>
    836c:	240f      	movs	r4, #15
    836e:	43a5      	bics	r5, r4
    8370:	3510      	adds	r5, #16
    8372:	1949      	adds	r1, r1, r5
    8374:	4014      	ands	r4, r2
    8376:	1945      	adds	r5, r0, r5
    8378:	2c03      	cmp	r4, #3
    837a:	d913      	bls.n	83a4 <memmove+0x9c>
    837c:	2300      	movs	r3, #0
    837e:	1f27      	subs	r7, r4, #4
    8380:	08be      	lsrs	r6, r7, #2
    8382:	3601      	adds	r6, #1
    8384:	00b6      	lsls	r6, r6, #2
    8386:	58cc      	ldr	r4, [r1, r3]
    8388:	50ec      	str	r4, [r5, r3]
    838a:	3304      	adds	r3, #4
    838c:	42b3      	cmp	r3, r6
    838e:	d1fa      	bne.n	8386 <memmove+0x7e>
    8390:	2603      	movs	r6, #3
    8392:	43b7      	bics	r7, r6
    8394:	1d3c      	adds	r4, r7, #4
    8396:	1909      	adds	r1, r1, r4
    8398:	192d      	adds	r5, r5, r4
    839a:	4032      	ands	r2, r6
    839c:	d1c7      	bne.n	832e <memmove+0x26>
    839e:	e7c0      	b.n	8322 <memmove+0x1a>
    83a0:	0005      	movs	r5, r0
    83a2:	e7c4      	b.n	832e <memmove+0x26>
    83a4:	0022      	movs	r2, r4
    83a6:	e7c0      	b.n	832a <memmove+0x22>

000083a8 <__malloc_lock>:
    83a8:	b510      	push	{r4, lr}
    83aa:	4802      	ldr	r0, [pc, #8]	; (83b4 <__malloc_lock+0xc>)
    83ac:	f7ff fc32 	bl	7c14 <__retarget_lock_acquire_recursive>
    83b0:	bd10      	pop	{r4, pc}
    83b2:	46c0      	nop			; (mov r8, r8)
    83b4:	20000b9c 	.word	0x20000b9c

000083b8 <__malloc_unlock>:
    83b8:	b510      	push	{r4, lr}
    83ba:	4802      	ldr	r0, [pc, #8]	; (83c4 <__malloc_unlock+0xc>)
    83bc:	f7ff fc2c 	bl	7c18 <__retarget_lock_release_recursive>
    83c0:	bd10      	pop	{r4, pc}
    83c2:	46c0      	nop			; (mov r8, r8)
    83c4:	20000b9c 	.word	0x20000b9c

000083c8 <_Balloc>:
    83c8:	b570      	push	{r4, r5, r6, lr}
    83ca:	0004      	movs	r4, r0
    83cc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    83ce:	000d      	movs	r5, r1
    83d0:	2800      	cmp	r0, #0
    83d2:	d00a      	beq.n	83ea <_Balloc+0x22>
    83d4:	00ab      	lsls	r3, r5, #2
    83d6:	18c3      	adds	r3, r0, r3
    83d8:	6818      	ldr	r0, [r3, #0]
    83da:	2800      	cmp	r0, #0
    83dc:	d00f      	beq.n	83fe <_Balloc+0x36>
    83de:	6802      	ldr	r2, [r0, #0]
    83e0:	601a      	str	r2, [r3, #0]
    83e2:	2300      	movs	r3, #0
    83e4:	6103      	str	r3, [r0, #16]
    83e6:	60c3      	str	r3, [r0, #12]
    83e8:	bd70      	pop	{r4, r5, r6, pc}
    83ea:	2221      	movs	r2, #33	; 0x21
    83ec:	2104      	movs	r1, #4
    83ee:	0020      	movs	r0, r4
    83f0:	f000 fe2a 	bl	9048 <_calloc_r>
    83f4:	64e0      	str	r0, [r4, #76]	; 0x4c
    83f6:	2800      	cmp	r0, #0
    83f8:	d1ec      	bne.n	83d4 <_Balloc+0xc>
    83fa:	2000      	movs	r0, #0
    83fc:	e7f4      	b.n	83e8 <_Balloc+0x20>
    83fe:	2601      	movs	r6, #1
    8400:	40ae      	lsls	r6, r5
    8402:	1d72      	adds	r2, r6, #5
    8404:	0092      	lsls	r2, r2, #2
    8406:	2101      	movs	r1, #1
    8408:	0020      	movs	r0, r4
    840a:	f000 fe1d 	bl	9048 <_calloc_r>
    840e:	2800      	cmp	r0, #0
    8410:	d0f3      	beq.n	83fa <_Balloc+0x32>
    8412:	6045      	str	r5, [r0, #4]
    8414:	6086      	str	r6, [r0, #8]
    8416:	e7e4      	b.n	83e2 <_Balloc+0x1a>

00008418 <_Bfree>:
    8418:	2900      	cmp	r1, #0
    841a:	d006      	beq.n	842a <_Bfree+0x12>
    841c:	684b      	ldr	r3, [r1, #4]
    841e:	009a      	lsls	r2, r3, #2
    8420:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    8422:	189b      	adds	r3, r3, r2
    8424:	681a      	ldr	r2, [r3, #0]
    8426:	600a      	str	r2, [r1, #0]
    8428:	6019      	str	r1, [r3, #0]
    842a:	4770      	bx	lr

0000842c <__multadd>:
    842c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    842e:	46ce      	mov	lr, r9
    8430:	4647      	mov	r7, r8
    8432:	4681      	mov	r9, r0
    8434:	0008      	movs	r0, r1
    8436:	b580      	push	{r7, lr}
    8438:	000d      	movs	r5, r1
    843a:	690c      	ldr	r4, [r1, #16]
    843c:	001f      	movs	r7, r3
    843e:	2100      	movs	r1, #0
    8440:	3014      	adds	r0, #20
    8442:	6803      	ldr	r3, [r0, #0]
    8444:	3101      	adds	r1, #1
    8446:	041e      	lsls	r6, r3, #16
    8448:	0c36      	lsrs	r6, r6, #16
    844a:	4356      	muls	r6, r2
    844c:	0c1b      	lsrs	r3, r3, #16
    844e:	4353      	muls	r3, r2
    8450:	19f6      	adds	r6, r6, r7
    8452:	0c37      	lsrs	r7, r6, #16
    8454:	19db      	adds	r3, r3, r7
    8456:	0436      	lsls	r6, r6, #16
    8458:	0c1f      	lsrs	r7, r3, #16
    845a:	0c36      	lsrs	r6, r6, #16
    845c:	041b      	lsls	r3, r3, #16
    845e:	199b      	adds	r3, r3, r6
    8460:	c008      	stmia	r0!, {r3}
    8462:	428c      	cmp	r4, r1
    8464:	dced      	bgt.n	8442 <__multadd+0x16>
    8466:	2f00      	cmp	r7, #0
    8468:	d008      	beq.n	847c <__multadd+0x50>
    846a:	68ab      	ldr	r3, [r5, #8]
    846c:	429c      	cmp	r4, r3
    846e:	da0a      	bge.n	8486 <__multadd+0x5a>
    8470:	1d23      	adds	r3, r4, #4
    8472:	009b      	lsls	r3, r3, #2
    8474:	18eb      	adds	r3, r5, r3
    8476:	3401      	adds	r4, #1
    8478:	605f      	str	r7, [r3, #4]
    847a:	612c      	str	r4, [r5, #16]
    847c:	0028      	movs	r0, r5
    847e:	bc0c      	pop	{r2, r3}
    8480:	4690      	mov	r8, r2
    8482:	4699      	mov	r9, r3
    8484:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8486:	686b      	ldr	r3, [r5, #4]
    8488:	4648      	mov	r0, r9
    848a:	1c59      	adds	r1, r3, #1
    848c:	f7ff ff9c 	bl	83c8 <_Balloc>
    8490:	0029      	movs	r1, r5
    8492:	692b      	ldr	r3, [r5, #16]
    8494:	4680      	mov	r8, r0
    8496:	1c9a      	adds	r2, r3, #2
    8498:	0092      	lsls	r2, r2, #2
    849a:	310c      	adds	r1, #12
    849c:	300c      	adds	r0, #12
    849e:	f7fc f92f 	bl	4700 <memcpy>
    84a2:	686b      	ldr	r3, [r5, #4]
    84a4:	009a      	lsls	r2, r3, #2
    84a6:	464b      	mov	r3, r9
    84a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    84aa:	189b      	adds	r3, r3, r2
    84ac:	681a      	ldr	r2, [r3, #0]
    84ae:	602a      	str	r2, [r5, #0]
    84b0:	601d      	str	r5, [r3, #0]
    84b2:	4645      	mov	r5, r8
    84b4:	e7dc      	b.n	8470 <__multadd+0x44>
    84b6:	46c0      	nop			; (mov r8, r8)

000084b8 <__hi0bits>:
    84b8:	0003      	movs	r3, r0
    84ba:	0c02      	lsrs	r2, r0, #16
    84bc:	2000      	movs	r0, #0
    84be:	2a00      	cmp	r2, #0
    84c0:	d101      	bne.n	84c6 <__hi0bits+0xe>
    84c2:	041b      	lsls	r3, r3, #16
    84c4:	3010      	adds	r0, #16
    84c6:	0e1a      	lsrs	r2, r3, #24
    84c8:	d101      	bne.n	84ce <__hi0bits+0x16>
    84ca:	3008      	adds	r0, #8
    84cc:	021b      	lsls	r3, r3, #8
    84ce:	0f1a      	lsrs	r2, r3, #28
    84d0:	d101      	bne.n	84d6 <__hi0bits+0x1e>
    84d2:	3004      	adds	r0, #4
    84d4:	011b      	lsls	r3, r3, #4
    84d6:	0f9a      	lsrs	r2, r3, #30
    84d8:	d101      	bne.n	84de <__hi0bits+0x26>
    84da:	3002      	adds	r0, #2
    84dc:	009b      	lsls	r3, r3, #2
    84de:	2b00      	cmp	r3, #0
    84e0:	db03      	blt.n	84ea <__hi0bits+0x32>
    84e2:	3001      	adds	r0, #1
    84e4:	005b      	lsls	r3, r3, #1
    84e6:	d400      	bmi.n	84ea <__hi0bits+0x32>
    84e8:	2020      	movs	r0, #32
    84ea:	4770      	bx	lr

000084ec <__lo0bits>:
    84ec:	6803      	ldr	r3, [r0, #0]
    84ee:	075a      	lsls	r2, r3, #29
    84f0:	d009      	beq.n	8506 <__lo0bits+0x1a>
    84f2:	2200      	movs	r2, #0
    84f4:	07d9      	lsls	r1, r3, #31
    84f6:	d404      	bmi.n	8502 <__lo0bits+0x16>
    84f8:	079a      	lsls	r2, r3, #30
    84fa:	d420      	bmi.n	853e <__lo0bits+0x52>
    84fc:	2202      	movs	r2, #2
    84fe:	089b      	lsrs	r3, r3, #2
    8500:	6003      	str	r3, [r0, #0]
    8502:	0010      	movs	r0, r2
    8504:	4770      	bx	lr
    8506:	0419      	lsls	r1, r3, #16
    8508:	2200      	movs	r2, #0
    850a:	2900      	cmp	r1, #0
    850c:	d101      	bne.n	8512 <__lo0bits+0x26>
    850e:	0c1b      	lsrs	r3, r3, #16
    8510:	3210      	adds	r2, #16
    8512:	21ff      	movs	r1, #255	; 0xff
    8514:	4219      	tst	r1, r3
    8516:	d101      	bne.n	851c <__lo0bits+0x30>
    8518:	3208      	adds	r2, #8
    851a:	0a1b      	lsrs	r3, r3, #8
    851c:	0719      	lsls	r1, r3, #28
    851e:	d101      	bne.n	8524 <__lo0bits+0x38>
    8520:	3204      	adds	r2, #4
    8522:	091b      	lsrs	r3, r3, #4
    8524:	0799      	lsls	r1, r3, #30
    8526:	d101      	bne.n	852c <__lo0bits+0x40>
    8528:	3202      	adds	r2, #2
    852a:	089b      	lsrs	r3, r3, #2
    852c:	07d9      	lsls	r1, r3, #31
    852e:	d404      	bmi.n	853a <__lo0bits+0x4e>
    8530:	085b      	lsrs	r3, r3, #1
    8532:	d101      	bne.n	8538 <__lo0bits+0x4c>
    8534:	2220      	movs	r2, #32
    8536:	e7e4      	b.n	8502 <__lo0bits+0x16>
    8538:	3201      	adds	r2, #1
    853a:	6003      	str	r3, [r0, #0]
    853c:	e7e1      	b.n	8502 <__lo0bits+0x16>
    853e:	085b      	lsrs	r3, r3, #1
    8540:	6003      	str	r3, [r0, #0]
    8542:	2201      	movs	r2, #1
    8544:	e7dd      	b.n	8502 <__lo0bits+0x16>
    8546:	46c0      	nop			; (mov r8, r8)

00008548 <__i2b>:
    8548:	b510      	push	{r4, lr}
    854a:	000c      	movs	r4, r1
    854c:	2101      	movs	r1, #1
    854e:	f7ff ff3b 	bl	83c8 <_Balloc>
    8552:	2301      	movs	r3, #1
    8554:	6144      	str	r4, [r0, #20]
    8556:	6103      	str	r3, [r0, #16]
    8558:	bd10      	pop	{r4, pc}
    855a:	46c0      	nop			; (mov r8, r8)

0000855c <__multiply>:
    855c:	b5f0      	push	{r4, r5, r6, r7, lr}
    855e:	4657      	mov	r7, sl
    8560:	464e      	mov	r6, r9
    8562:	4645      	mov	r5, r8
    8564:	46de      	mov	lr, fp
    8566:	b5e0      	push	{r5, r6, r7, lr}
    8568:	6914      	ldr	r4, [r2, #16]
    856a:	690e      	ldr	r6, [r1, #16]
    856c:	b085      	sub	sp, #20
    856e:	000f      	movs	r7, r1
    8570:	0015      	movs	r5, r2
    8572:	42a6      	cmp	r6, r4
    8574:	da04      	bge.n	8580 <__multiply+0x24>
    8576:	0033      	movs	r3, r6
    8578:	0017      	movs	r7, r2
    857a:	0026      	movs	r6, r4
    857c:	000d      	movs	r5, r1
    857e:	001c      	movs	r4, r3
    8580:	1933      	adds	r3, r6, r4
    8582:	4698      	mov	r8, r3
    8584:	68bb      	ldr	r3, [r7, #8]
    8586:	6879      	ldr	r1, [r7, #4]
    8588:	4598      	cmp	r8, r3
    858a:	dd00      	ble.n	858e <__multiply+0x32>
    858c:	3101      	adds	r1, #1
    858e:	f7ff ff1b 	bl	83c8 <_Balloc>
    8592:	2214      	movs	r2, #20
    8594:	0003      	movs	r3, r0
    8596:	4694      	mov	ip, r2
    8598:	4463      	add	r3, ip
    859a:	469b      	mov	fp, r3
    859c:	4643      	mov	r3, r8
    859e:	009b      	lsls	r3, r3, #2
    85a0:	445b      	add	r3, fp
    85a2:	0019      	movs	r1, r3
    85a4:	9302      	str	r3, [sp, #8]
    85a6:	9003      	str	r0, [sp, #12]
    85a8:	465b      	mov	r3, fp
    85aa:	2200      	movs	r2, #0
    85ac:	458b      	cmp	fp, r1
    85ae:	d203      	bcs.n	85b8 <__multiply+0x5c>
    85b0:	9902      	ldr	r1, [sp, #8]
    85b2:	c304      	stmia	r3!, {r2}
    85b4:	4299      	cmp	r1, r3
    85b6:	d8fc      	bhi.n	85b2 <__multiply+0x56>
    85b8:	2314      	movs	r3, #20
    85ba:	00a4      	lsls	r4, r4, #2
    85bc:	469a      	mov	sl, r3
    85be:	3714      	adds	r7, #20
    85c0:	0023      	movs	r3, r4
    85c2:	46bc      	mov	ip, r7
    85c4:	44aa      	add	sl, r5
    85c6:	00b6      	lsls	r6, r6, #2
    85c8:	4453      	add	r3, sl
    85ca:	9700      	str	r7, [sp, #0]
    85cc:	44b4      	add	ip, r6
    85ce:	9301      	str	r3, [sp, #4]
    85d0:	459a      	cmp	sl, r3
    85d2:	d24f      	bcs.n	8674 <__multiply+0x118>
    85d4:	4653      	mov	r3, sl
    85d6:	681b      	ldr	r3, [r3, #0]
    85d8:	041e      	lsls	r6, r3, #16
    85da:	0c36      	lsrs	r6, r6, #16
    85dc:	d020      	beq.n	8620 <__multiply+0xc4>
    85de:	465c      	mov	r4, fp
    85e0:	2700      	movs	r7, #0
    85e2:	9d00      	ldr	r5, [sp, #0]
    85e4:	0021      	movs	r1, r4
    85e6:	cc08      	ldmia	r4!, {r3}
    85e8:	cd04      	ldmia	r5!, {r2}
    85ea:	4699      	mov	r9, r3
    85ec:	4648      	mov	r0, r9
    85ee:	0413      	lsls	r3, r2, #16
    85f0:	0c1b      	lsrs	r3, r3, #16
    85f2:	4373      	muls	r3, r6
    85f4:	0400      	lsls	r0, r0, #16
    85f6:	0c00      	lsrs	r0, r0, #16
    85f8:	181b      	adds	r3, r3, r0
    85fa:	19d8      	adds	r0, r3, r7
    85fc:	0c13      	lsrs	r3, r2, #16
    85fe:	464a      	mov	r2, r9
    8600:	4373      	muls	r3, r6
    8602:	0c12      	lsrs	r2, r2, #16
    8604:	189b      	adds	r3, r3, r2
    8606:	0c02      	lsrs	r2, r0, #16
    8608:	189b      	adds	r3, r3, r2
    860a:	0402      	lsls	r2, r0, #16
    860c:	0c1f      	lsrs	r7, r3, #16
    860e:	0c12      	lsrs	r2, r2, #16
    8610:	041b      	lsls	r3, r3, #16
    8612:	4313      	orrs	r3, r2
    8614:	600b      	str	r3, [r1, #0]
    8616:	45ac      	cmp	ip, r5
    8618:	d8e4      	bhi.n	85e4 <__multiply+0x88>
    861a:	4653      	mov	r3, sl
    861c:	6027      	str	r7, [r4, #0]
    861e:	681b      	ldr	r3, [r3, #0]
    8620:	0c1e      	lsrs	r6, r3, #16
    8622:	d020      	beq.n	8666 <__multiply+0x10a>
    8624:	465b      	mov	r3, fp
    8626:	2100      	movs	r1, #0
    8628:	681b      	ldr	r3, [r3, #0]
    862a:	465c      	mov	r4, fp
    862c:	0018      	movs	r0, r3
    862e:	000f      	movs	r7, r1
    8630:	4662      	mov	r2, ip
    8632:	9d00      	ldr	r5, [sp, #0]
    8634:	8829      	ldrh	r1, [r5, #0]
    8636:	0c00      	lsrs	r0, r0, #16
    8638:	4371      	muls	r1, r6
    863a:	1809      	adds	r1, r1, r0
    863c:	19c9      	adds	r1, r1, r7
    863e:	041b      	lsls	r3, r3, #16
    8640:	0408      	lsls	r0, r1, #16
    8642:	0c1b      	lsrs	r3, r3, #16
    8644:	4303      	orrs	r3, r0
    8646:	6023      	str	r3, [r4, #0]
    8648:	cd08      	ldmia	r5!, {r3}
    864a:	6860      	ldr	r0, [r4, #4]
    864c:	0c1b      	lsrs	r3, r3, #16
    864e:	4373      	muls	r3, r6
    8650:	0407      	lsls	r7, r0, #16
    8652:	0c3f      	lsrs	r7, r7, #16
    8654:	19db      	adds	r3, r3, r7
    8656:	0c09      	lsrs	r1, r1, #16
    8658:	185b      	adds	r3, r3, r1
    865a:	0c1f      	lsrs	r7, r3, #16
    865c:	3404      	adds	r4, #4
    865e:	42aa      	cmp	r2, r5
    8660:	d8e8      	bhi.n	8634 <__multiply+0xd8>
    8662:	4694      	mov	ip, r2
    8664:	6023      	str	r3, [r4, #0]
    8666:	2304      	movs	r3, #4
    8668:	4699      	mov	r9, r3
    866a:	9b01      	ldr	r3, [sp, #4]
    866c:	44ca      	add	sl, r9
    866e:	44cb      	add	fp, r9
    8670:	4553      	cmp	r3, sl
    8672:	d8af      	bhi.n	85d4 <__multiply+0x78>
    8674:	4643      	mov	r3, r8
    8676:	2b00      	cmp	r3, #0
    8678:	dd0e      	ble.n	8698 <__multiply+0x13c>
    867a:	9b02      	ldr	r3, [sp, #8]
    867c:	3b04      	subs	r3, #4
    867e:	681a      	ldr	r2, [r3, #0]
    8680:	2a00      	cmp	r2, #0
    8682:	d109      	bne.n	8698 <__multiply+0x13c>
    8684:	4642      	mov	r2, r8
    8686:	e003      	b.n	8690 <__multiply+0x134>
    8688:	3b04      	subs	r3, #4
    868a:	6819      	ldr	r1, [r3, #0]
    868c:	2900      	cmp	r1, #0
    868e:	d102      	bne.n	8696 <__multiply+0x13a>
    8690:	3a01      	subs	r2, #1
    8692:	2a00      	cmp	r2, #0
    8694:	d1f8      	bne.n	8688 <__multiply+0x12c>
    8696:	4690      	mov	r8, r2
    8698:	9b03      	ldr	r3, [sp, #12]
    869a:	4642      	mov	r2, r8
    869c:	0018      	movs	r0, r3
    869e:	611a      	str	r2, [r3, #16]
    86a0:	b005      	add	sp, #20
    86a2:	bc3c      	pop	{r2, r3, r4, r5}
    86a4:	4690      	mov	r8, r2
    86a6:	4699      	mov	r9, r3
    86a8:	46a2      	mov	sl, r4
    86aa:	46ab      	mov	fp, r5
    86ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    86ae:	46c0      	nop			; (mov r8, r8)

000086b0 <__pow5mult>:
    86b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    86b2:	4647      	mov	r7, r8
    86b4:	46ce      	mov	lr, r9
    86b6:	2303      	movs	r3, #3
    86b8:	b580      	push	{r7, lr}
    86ba:	4680      	mov	r8, r0
    86bc:	000f      	movs	r7, r1
    86be:	0014      	movs	r4, r2
    86c0:	4013      	ands	r3, r2
    86c2:	d13a      	bne.n	873a <__pow5mult+0x8a>
    86c4:	10a4      	asrs	r4, r4, #2
    86c6:	003e      	movs	r6, r7
    86c8:	2c00      	cmp	r4, #0
    86ca:	d025      	beq.n	8718 <__pow5mult+0x68>
    86cc:	4643      	mov	r3, r8
    86ce:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    86d0:	2d00      	cmp	r5, #0
    86d2:	d03b      	beq.n	874c <__pow5mult+0x9c>
    86d4:	003e      	movs	r6, r7
    86d6:	2300      	movs	r3, #0
    86d8:	2701      	movs	r7, #1
    86da:	4699      	mov	r9, r3
    86dc:	4227      	tst	r7, r4
    86de:	d107      	bne.n	86f0 <__pow5mult+0x40>
    86e0:	1064      	asrs	r4, r4, #1
    86e2:	d019      	beq.n	8718 <__pow5mult+0x68>
    86e4:	6828      	ldr	r0, [r5, #0]
    86e6:	2800      	cmp	r0, #0
    86e8:	d01b      	beq.n	8722 <__pow5mult+0x72>
    86ea:	0005      	movs	r5, r0
    86ec:	4227      	tst	r7, r4
    86ee:	d0f7      	beq.n	86e0 <__pow5mult+0x30>
    86f0:	002a      	movs	r2, r5
    86f2:	0031      	movs	r1, r6
    86f4:	4640      	mov	r0, r8
    86f6:	f7ff ff31 	bl	855c <__multiply>
    86fa:	2e00      	cmp	r6, #0
    86fc:	d01b      	beq.n	8736 <__pow5mult+0x86>
    86fe:	4642      	mov	r2, r8
    8700:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    8702:	6873      	ldr	r3, [r6, #4]
    8704:	4694      	mov	ip, r2
    8706:	009b      	lsls	r3, r3, #2
    8708:	4463      	add	r3, ip
    870a:	681a      	ldr	r2, [r3, #0]
    870c:	1064      	asrs	r4, r4, #1
    870e:	6032      	str	r2, [r6, #0]
    8710:	601e      	str	r6, [r3, #0]
    8712:	0006      	movs	r6, r0
    8714:	2c00      	cmp	r4, #0
    8716:	d1e5      	bne.n	86e4 <__pow5mult+0x34>
    8718:	0030      	movs	r0, r6
    871a:	bc0c      	pop	{r2, r3}
    871c:	4690      	mov	r8, r2
    871e:	4699      	mov	r9, r3
    8720:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8722:	002a      	movs	r2, r5
    8724:	0029      	movs	r1, r5
    8726:	4640      	mov	r0, r8
    8728:	f7ff ff18 	bl	855c <__multiply>
    872c:	464b      	mov	r3, r9
    872e:	6028      	str	r0, [r5, #0]
    8730:	6003      	str	r3, [r0, #0]
    8732:	0005      	movs	r5, r0
    8734:	e7da      	b.n	86ec <__pow5mult+0x3c>
    8736:	0006      	movs	r6, r0
    8738:	e7d2      	b.n	86e0 <__pow5mult+0x30>
    873a:	4a0b      	ldr	r2, [pc, #44]	; (8768 <__pow5mult+0xb8>)
    873c:	3b01      	subs	r3, #1
    873e:	009b      	lsls	r3, r3, #2
    8740:	589a      	ldr	r2, [r3, r2]
    8742:	2300      	movs	r3, #0
    8744:	f7ff fe72 	bl	842c <__multadd>
    8748:	0007      	movs	r7, r0
    874a:	e7bb      	b.n	86c4 <__pow5mult+0x14>
    874c:	2101      	movs	r1, #1
    874e:	4640      	mov	r0, r8
    8750:	f7ff fe3a 	bl	83c8 <_Balloc>
    8754:	4b05      	ldr	r3, [pc, #20]	; (876c <__pow5mult+0xbc>)
    8756:	0005      	movs	r5, r0
    8758:	6143      	str	r3, [r0, #20]
    875a:	2301      	movs	r3, #1
    875c:	6103      	str	r3, [r0, #16]
    875e:	4643      	mov	r3, r8
    8760:	6498      	str	r0, [r3, #72]	; 0x48
    8762:	2300      	movs	r3, #0
    8764:	6003      	str	r3, [r0, #0]
    8766:	e7b5      	b.n	86d4 <__pow5mult+0x24>
    8768:	0000a3e0 	.word	0x0000a3e0
    876c:	00000271 	.word	0x00000271

00008770 <__lshift>:
    8770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8772:	464e      	mov	r6, r9
    8774:	4645      	mov	r5, r8
    8776:	46de      	mov	lr, fp
    8778:	4657      	mov	r7, sl
    877a:	b5e0      	push	{r5, r6, r7, lr}
    877c:	000e      	movs	r6, r1
    877e:	6933      	ldr	r3, [r6, #16]
    8780:	1154      	asrs	r4, r2, #5
    8782:	4698      	mov	r8, r3
    8784:	44a0      	add	r8, r4
    8786:	4643      	mov	r3, r8
    8788:	1c5d      	adds	r5, r3, #1
    878a:	68b3      	ldr	r3, [r6, #8]
    878c:	4683      	mov	fp, r0
    878e:	4691      	mov	r9, r2
    8790:	6849      	ldr	r1, [r1, #4]
    8792:	429d      	cmp	r5, r3
    8794:	dd03      	ble.n	879e <__lshift+0x2e>
    8796:	3101      	adds	r1, #1
    8798:	005b      	lsls	r3, r3, #1
    879a:	429d      	cmp	r5, r3
    879c:	dcfb      	bgt.n	8796 <__lshift+0x26>
    879e:	4658      	mov	r0, fp
    87a0:	f7ff fe12 	bl	83c8 <_Balloc>
    87a4:	0003      	movs	r3, r0
    87a6:	4684      	mov	ip, r0
    87a8:	3314      	adds	r3, #20
    87aa:	2c00      	cmp	r4, #0
    87ac:	dd06      	ble.n	87bc <__lshift+0x4c>
    87ae:	2100      	movs	r1, #0
    87b0:	00a4      	lsls	r4, r4, #2
    87b2:	001a      	movs	r2, r3
    87b4:	191b      	adds	r3, r3, r4
    87b6:	c202      	stmia	r2!, {r1}
    87b8:	4293      	cmp	r3, r2
    87ba:	d1fc      	bne.n	87b6 <__lshift+0x46>
    87bc:	6932      	ldr	r2, [r6, #16]
    87be:	4648      	mov	r0, r9
    87c0:	0097      	lsls	r7, r2, #2
    87c2:	0031      	movs	r1, r6
    87c4:	221f      	movs	r2, #31
    87c6:	3114      	adds	r1, #20
    87c8:	4010      	ands	r0, r2
    87ca:	19cf      	adds	r7, r1, r7
    87cc:	4681      	mov	r9, r0
    87ce:	2800      	cmp	r0, #0
    87d0:	d025      	beq.n	881e <__lshift+0xae>
    87d2:	2220      	movs	r2, #32
    87d4:	1a12      	subs	r2, r2, r0
    87d6:	4692      	mov	sl, r2
    87d8:	2200      	movs	r2, #0
    87da:	4648      	mov	r0, r9
    87dc:	680c      	ldr	r4, [r1, #0]
    87de:	4084      	lsls	r4, r0
    87e0:	4650      	mov	r0, sl
    87e2:	4314      	orrs	r4, r2
    87e4:	601c      	str	r4, [r3, #0]
    87e6:	c904      	ldmia	r1!, {r2}
    87e8:	3304      	adds	r3, #4
    87ea:	40c2      	lsrs	r2, r0
    87ec:	428f      	cmp	r7, r1
    87ee:	d8f4      	bhi.n	87da <__lshift+0x6a>
    87f0:	601a      	str	r2, [r3, #0]
    87f2:	2a00      	cmp	r2, #0
    87f4:	d001      	beq.n	87fa <__lshift+0x8a>
    87f6:	4645      	mov	r5, r8
    87f8:	3502      	adds	r5, #2
    87fa:	4663      	mov	r3, ip
    87fc:	3d01      	subs	r5, #1
    87fe:	611d      	str	r5, [r3, #16]
    8800:	6873      	ldr	r3, [r6, #4]
    8802:	4660      	mov	r0, ip
    8804:	009a      	lsls	r2, r3, #2
    8806:	465b      	mov	r3, fp
    8808:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    880a:	189b      	adds	r3, r3, r2
    880c:	681a      	ldr	r2, [r3, #0]
    880e:	6032      	str	r2, [r6, #0]
    8810:	601e      	str	r6, [r3, #0]
    8812:	bc3c      	pop	{r2, r3, r4, r5}
    8814:	4690      	mov	r8, r2
    8816:	4699      	mov	r9, r3
    8818:	46a2      	mov	sl, r4
    881a:	46ab      	mov	fp, r5
    881c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    881e:	c904      	ldmia	r1!, {r2}
    8820:	c304      	stmia	r3!, {r2}
    8822:	428f      	cmp	r7, r1
    8824:	d9e9      	bls.n	87fa <__lshift+0x8a>
    8826:	c904      	ldmia	r1!, {r2}
    8828:	c304      	stmia	r3!, {r2}
    882a:	428f      	cmp	r7, r1
    882c:	d8f7      	bhi.n	881e <__lshift+0xae>
    882e:	e7e4      	b.n	87fa <__lshift+0x8a>

00008830 <__mcmp>:
    8830:	690a      	ldr	r2, [r1, #16]
    8832:	6903      	ldr	r3, [r0, #16]
    8834:	b530      	push	{r4, r5, lr}
    8836:	0005      	movs	r5, r0
    8838:	1a98      	subs	r0, r3, r2
    883a:	d111      	bne.n	8860 <__mcmp+0x30>
    883c:	0092      	lsls	r2, r2, #2
    883e:	3514      	adds	r5, #20
    8840:	3114      	adds	r1, #20
    8842:	18ab      	adds	r3, r5, r2
    8844:	1889      	adds	r1, r1, r2
    8846:	e001      	b.n	884c <__mcmp+0x1c>
    8848:	429d      	cmp	r5, r3
    884a:	d209      	bcs.n	8860 <__mcmp+0x30>
    884c:	3b04      	subs	r3, #4
    884e:	3904      	subs	r1, #4
    8850:	681c      	ldr	r4, [r3, #0]
    8852:	680a      	ldr	r2, [r1, #0]
    8854:	4294      	cmp	r4, r2
    8856:	d0f7      	beq.n	8848 <__mcmp+0x18>
    8858:	4294      	cmp	r4, r2
    885a:	4180      	sbcs	r0, r0
    885c:	2201      	movs	r2, #1
    885e:	4310      	orrs	r0, r2
    8860:	bd30      	pop	{r4, r5, pc}
    8862:	46c0      	nop			; (mov r8, r8)

00008864 <__mdiff>:
    8864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8866:	4645      	mov	r5, r8
    8868:	46de      	mov	lr, fp
    886a:	4657      	mov	r7, sl
    886c:	464e      	mov	r6, r9
    886e:	0014      	movs	r4, r2
    8870:	690b      	ldr	r3, [r1, #16]
    8872:	6912      	ldr	r2, [r2, #16]
    8874:	b5e0      	push	{r5, r6, r7, lr}
    8876:	4688      	mov	r8, r1
    8878:	1a9d      	subs	r5, r3, r2
    887a:	d11a      	bne.n	88b2 <__mdiff+0x4e>
    887c:	000f      	movs	r7, r1
    887e:	2114      	movs	r1, #20
    8880:	468c      	mov	ip, r1
    8882:	0092      	lsls	r2, r2, #2
    8884:	3714      	adds	r7, #20
    8886:	44a4      	add	ip, r4
    8888:	18bb      	adds	r3, r7, r2
    888a:	4462      	add	r2, ip
    888c:	e002      	b.n	8894 <__mdiff+0x30>
    888e:	429f      	cmp	r7, r3
    8890:	d300      	bcc.n	8894 <__mdiff+0x30>
    8892:	e070      	b.n	8976 <__mdiff+0x112>
    8894:	3b04      	subs	r3, #4
    8896:	3a04      	subs	r2, #4
    8898:	681e      	ldr	r6, [r3, #0]
    889a:	6811      	ldr	r1, [r2, #0]
    889c:	428e      	cmp	r6, r1
    889e:	d0f6      	beq.n	888e <__mdiff+0x2a>
    88a0:	d300      	bcc.n	88a4 <__mdiff+0x40>
    88a2:	e071      	b.n	8988 <__mdiff+0x124>
    88a4:	4643      	mov	r3, r8
    88a6:	003e      	movs	r6, r7
    88a8:	46a0      	mov	r8, r4
    88aa:	4667      	mov	r7, ip
    88ac:	001c      	movs	r4, r3
    88ae:	2501      	movs	r5, #1
    88b0:	e006      	b.n	88c0 <__mdiff+0x5c>
    88b2:	2d00      	cmp	r5, #0
    88b4:	db6a      	blt.n	898c <__mdiff+0x128>
    88b6:	4647      	mov	r7, r8
    88b8:	0026      	movs	r6, r4
    88ba:	2500      	movs	r5, #0
    88bc:	3714      	adds	r7, #20
    88be:	3614      	adds	r6, #20
    88c0:	4643      	mov	r3, r8
    88c2:	6859      	ldr	r1, [r3, #4]
    88c4:	f7ff fd80 	bl	83c8 <_Balloc>
    88c8:	4643      	mov	r3, r8
    88ca:	4681      	mov	r9, r0
    88cc:	60c5      	str	r5, [r0, #12]
    88ce:	6918      	ldr	r0, [r3, #16]
    88d0:	464d      	mov	r5, r9
    88d2:	0083      	lsls	r3, r0, #2
    88d4:	469c      	mov	ip, r3
    88d6:	6923      	ldr	r3, [r4, #16]
    88d8:	44bc      	add	ip, r7
    88da:	009b      	lsls	r3, r3, #2
    88dc:	4698      	mov	r8, r3
    88de:	2300      	movs	r3, #0
    88e0:	44b0      	add	r8, r6
    88e2:	3514      	adds	r5, #20
    88e4:	469a      	mov	sl, r3
    88e6:	e000      	b.n	88ea <__mdiff+0x86>
    88e8:	0027      	movs	r7, r4
    88ea:	ce04      	ldmia	r6!, {r2}
    88ec:	003c      	movs	r4, r7
    88ee:	4693      	mov	fp, r2
    88f0:	4659      	mov	r1, fp
    88f2:	cc08      	ldmia	r4!, {r3}
    88f4:	0409      	lsls	r1, r1, #16
    88f6:	041a      	lsls	r2, r3, #16
    88f8:	0c12      	lsrs	r2, r2, #16
    88fa:	4452      	add	r2, sl
    88fc:	0c09      	lsrs	r1, r1, #16
    88fe:	1a52      	subs	r2, r2, r1
    8900:	0c19      	lsrs	r1, r3, #16
    8902:	465b      	mov	r3, fp
    8904:	0c1b      	lsrs	r3, r3, #16
    8906:	1acb      	subs	r3, r1, r3
    8908:	1411      	asrs	r1, r2, #16
    890a:	185b      	adds	r3, r3, r1
    890c:	0412      	lsls	r2, r2, #16
    890e:	1419      	asrs	r1, r3, #16
    8910:	0c12      	lsrs	r2, r2, #16
    8912:	041b      	lsls	r3, r3, #16
    8914:	468a      	mov	sl, r1
    8916:	4313      	orrs	r3, r2
    8918:	1d29      	adds	r1, r5, #4
    891a:	602b      	str	r3, [r5, #0]
    891c:	000d      	movs	r5, r1
    891e:	45b0      	cmp	r8, r6
    8920:	d8e2      	bhi.n	88e8 <__mdiff+0x84>
    8922:	45a4      	cmp	ip, r4
    8924:	d916      	bls.n	8954 <__mdiff+0xf0>
    8926:	cc08      	ldmia	r4!, {r3}
    8928:	041a      	lsls	r2, r3, #16
    892a:	0c12      	lsrs	r2, r2, #16
    892c:	4452      	add	r2, sl
    892e:	1416      	asrs	r6, r2, #16
    8930:	0c1b      	lsrs	r3, r3, #16
    8932:	199b      	adds	r3, r3, r6
    8934:	0412      	lsls	r2, r2, #16
    8936:	141e      	asrs	r6, r3, #16
    8938:	0c12      	lsrs	r2, r2, #16
    893a:	041b      	lsls	r3, r3, #16
    893c:	4313      	orrs	r3, r2
    893e:	46b2      	mov	sl, r6
    8940:	c508      	stmia	r5!, {r3}
    8942:	45a4      	cmp	ip, r4
    8944:	d8ef      	bhi.n	8926 <__mdiff+0xc2>
    8946:	4662      	mov	r2, ip
    8948:	2403      	movs	r4, #3
    894a:	1bd2      	subs	r2, r2, r7
    894c:	3a05      	subs	r2, #5
    894e:	43a2      	bics	r2, r4
    8950:	3204      	adds	r2, #4
    8952:	1889      	adds	r1, r1, r2
    8954:	3904      	subs	r1, #4
    8956:	2b00      	cmp	r3, #0
    8958:	d104      	bne.n	8964 <__mdiff+0x100>
    895a:	3904      	subs	r1, #4
    895c:	680b      	ldr	r3, [r1, #0]
    895e:	3801      	subs	r0, #1
    8960:	2b00      	cmp	r3, #0
    8962:	d0fa      	beq.n	895a <__mdiff+0xf6>
    8964:	464b      	mov	r3, r9
    8966:	6118      	str	r0, [r3, #16]
    8968:	4648      	mov	r0, r9
    896a:	bc3c      	pop	{r2, r3, r4, r5}
    896c:	4690      	mov	r8, r2
    896e:	4699      	mov	r9, r3
    8970:	46a2      	mov	sl, r4
    8972:	46ab      	mov	fp, r5
    8974:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8976:	2100      	movs	r1, #0
    8978:	f7ff fd26 	bl	83c8 <_Balloc>
    897c:	2301      	movs	r3, #1
    897e:	6103      	str	r3, [r0, #16]
    8980:	2300      	movs	r3, #0
    8982:	4681      	mov	r9, r0
    8984:	6143      	str	r3, [r0, #20]
    8986:	e7ef      	b.n	8968 <__mdiff+0x104>
    8988:	4666      	mov	r6, ip
    898a:	e799      	b.n	88c0 <__mdiff+0x5c>
    898c:	0027      	movs	r7, r4
    898e:	000e      	movs	r6, r1
    8990:	46a0      	mov	r8, r4
    8992:	3714      	adds	r7, #20
    8994:	3614      	adds	r6, #20
    8996:	000c      	movs	r4, r1
    8998:	2501      	movs	r5, #1
    899a:	e791      	b.n	88c0 <__mdiff+0x5c>

0000899c <__d2b>:
    899c:	b5f0      	push	{r4, r5, r6, r7, lr}
    899e:	2101      	movs	r1, #1
    89a0:	001c      	movs	r4, r3
    89a2:	b083      	sub	sp, #12
    89a4:	9e08      	ldr	r6, [sp, #32]
    89a6:	0015      	movs	r5, r2
    89a8:	f7ff fd0e 	bl	83c8 <_Balloc>
    89ac:	0323      	lsls	r3, r4, #12
    89ae:	0064      	lsls	r4, r4, #1
    89b0:	0007      	movs	r7, r0
    89b2:	0b1b      	lsrs	r3, r3, #12
    89b4:	0d64      	lsrs	r4, r4, #21
    89b6:	d002      	beq.n	89be <__d2b+0x22>
    89b8:	2280      	movs	r2, #128	; 0x80
    89ba:	0352      	lsls	r2, r2, #13
    89bc:	4313      	orrs	r3, r2
    89be:	9301      	str	r3, [sp, #4]
    89c0:	2d00      	cmp	r5, #0
    89c2:	d019      	beq.n	89f8 <__d2b+0x5c>
    89c4:	4668      	mov	r0, sp
    89c6:	9500      	str	r5, [sp, #0]
    89c8:	f7ff fd90 	bl	84ec <__lo0bits>
    89cc:	2800      	cmp	r0, #0
    89ce:	d130      	bne.n	8a32 <__d2b+0x96>
    89d0:	9b00      	ldr	r3, [sp, #0]
    89d2:	617b      	str	r3, [r7, #20]
    89d4:	9b01      	ldr	r3, [sp, #4]
    89d6:	61bb      	str	r3, [r7, #24]
    89d8:	1e5a      	subs	r2, r3, #1
    89da:	4193      	sbcs	r3, r2
    89dc:	1c5d      	adds	r5, r3, #1
    89de:	613d      	str	r5, [r7, #16]
    89e0:	2c00      	cmp	r4, #0
    89e2:	d014      	beq.n	8a0e <__d2b+0x72>
    89e4:	4b19      	ldr	r3, [pc, #100]	; (8a4c <__d2b+0xb0>)
    89e6:	469c      	mov	ip, r3
    89e8:	2335      	movs	r3, #53	; 0x35
    89ea:	4464      	add	r4, ip
    89ec:	1824      	adds	r4, r4, r0
    89ee:	1a18      	subs	r0, r3, r0
    89f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    89f2:	6034      	str	r4, [r6, #0]
    89f4:	6018      	str	r0, [r3, #0]
    89f6:	e019      	b.n	8a2c <__d2b+0x90>
    89f8:	a801      	add	r0, sp, #4
    89fa:	f7ff fd77 	bl	84ec <__lo0bits>
    89fe:	9b01      	ldr	r3, [sp, #4]
    8a00:	3020      	adds	r0, #32
    8a02:	617b      	str	r3, [r7, #20]
    8a04:	2301      	movs	r3, #1
    8a06:	2501      	movs	r5, #1
    8a08:	613b      	str	r3, [r7, #16]
    8a0a:	2c00      	cmp	r4, #0
    8a0c:	d1ea      	bne.n	89e4 <__d2b+0x48>
    8a0e:	4b10      	ldr	r3, [pc, #64]	; (8a50 <__d2b+0xb4>)
    8a10:	469c      	mov	ip, r3
    8a12:	4b10      	ldr	r3, [pc, #64]	; (8a54 <__d2b+0xb8>)
    8a14:	4460      	add	r0, ip
    8a16:	18eb      	adds	r3, r5, r3
    8a18:	009b      	lsls	r3, r3, #2
    8a1a:	18fb      	adds	r3, r7, r3
    8a1c:	6030      	str	r0, [r6, #0]
    8a1e:	6958      	ldr	r0, [r3, #20]
    8a20:	f7ff fd4a 	bl	84b8 <__hi0bits>
    8a24:	016b      	lsls	r3, r5, #5
    8a26:	1a18      	subs	r0, r3, r0
    8a28:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8a2a:	6018      	str	r0, [r3, #0]
    8a2c:	0038      	movs	r0, r7
    8a2e:	b003      	add	sp, #12
    8a30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8a32:	9b01      	ldr	r3, [sp, #4]
    8a34:	2220      	movs	r2, #32
    8a36:	0019      	movs	r1, r3
    8a38:	1a12      	subs	r2, r2, r0
    8a3a:	4091      	lsls	r1, r2
    8a3c:	000a      	movs	r2, r1
    8a3e:	40c3      	lsrs	r3, r0
    8a40:	9900      	ldr	r1, [sp, #0]
    8a42:	9301      	str	r3, [sp, #4]
    8a44:	430a      	orrs	r2, r1
    8a46:	617a      	str	r2, [r7, #20]
    8a48:	e7c5      	b.n	89d6 <__d2b+0x3a>
    8a4a:	46c0      	nop			; (mov r8, r8)
    8a4c:	fffffbcd 	.word	0xfffffbcd
    8a50:	fffffbce 	.word	0xfffffbce
    8a54:	3fffffff 	.word	0x3fffffff

00008a58 <_realloc_r>:
    8a58:	b5f0      	push	{r4, r5, r6, r7, lr}
    8a5a:	464e      	mov	r6, r9
    8a5c:	4645      	mov	r5, r8
    8a5e:	46de      	mov	lr, fp
    8a60:	4657      	mov	r7, sl
    8a62:	b5e0      	push	{r5, r6, r7, lr}
    8a64:	b085      	sub	sp, #20
    8a66:	9001      	str	r0, [sp, #4]
    8a68:	000e      	movs	r6, r1
    8a6a:	0015      	movs	r5, r2
    8a6c:	2900      	cmp	r1, #0
    8a6e:	d100      	bne.n	8a72 <_realloc_r+0x1a>
    8a70:	e09e      	b.n	8bb0 <_realloc_r+0x158>
    8a72:	0037      	movs	r7, r6
    8a74:	9801      	ldr	r0, [sp, #4]
    8a76:	3f08      	subs	r7, #8
    8a78:	f7ff fc96 	bl	83a8 <__malloc_lock>
    8a7c:	687a      	ldr	r2, [r7, #4]
    8a7e:	2303      	movs	r3, #3
    8a80:	0014      	movs	r4, r2
    8a82:	439c      	bics	r4, r3
    8a84:	002b      	movs	r3, r5
    8a86:	330b      	adds	r3, #11
    8a88:	46b9      	mov	r9, r7
    8a8a:	2b16      	cmp	r3, #22
    8a8c:	d847      	bhi.n	8b1e <_realloc_r+0xc6>
    8a8e:	2110      	movs	r1, #16
    8a90:	2310      	movs	r3, #16
    8a92:	4688      	mov	r8, r1
    8a94:	4545      	cmp	r5, r8
    8a96:	d846      	bhi.n	8b26 <_realloc_r+0xce>
    8a98:	429c      	cmp	r4, r3
    8a9a:	da49      	bge.n	8b30 <_realloc_r+0xd8>
    8a9c:	49cc      	ldr	r1, [pc, #816]	; (8dd0 <_realloc_r+0x378>)
    8a9e:	1938      	adds	r0, r7, r4
    8aa0:	468b      	mov	fp, r1
    8aa2:	6889      	ldr	r1, [r1, #8]
    8aa4:	9002      	str	r0, [sp, #8]
    8aa6:	4288      	cmp	r0, r1
    8aa8:	d100      	bne.n	8aac <_realloc_r+0x54>
    8aaa:	e0c2      	b.n	8c32 <_realloc_r+0x1da>
    8aac:	2101      	movs	r1, #1
    8aae:	468a      	mov	sl, r1
    8ab0:	6840      	ldr	r0, [r0, #4]
    8ab2:	0001      	movs	r1, r0
    8ab4:	9003      	str	r0, [sp, #12]
    8ab6:	4650      	mov	r0, sl
    8ab8:	4381      	bics	r1, r0
    8aba:	468c      	mov	ip, r1
    8abc:	9902      	ldr	r1, [sp, #8]
    8abe:	468b      	mov	fp, r1
    8ac0:	44dc      	add	ip, fp
    8ac2:	4661      	mov	r1, ip
    8ac4:	6849      	ldr	r1, [r1, #4]
    8ac6:	4201      	tst	r1, r0
    8ac8:	d04d      	beq.n	8b66 <_realloc_r+0x10e>
    8aca:	4210      	tst	r0, r2
    8acc:	d100      	bne.n	8ad0 <_realloc_r+0x78>
    8ace:	e0a2      	b.n	8c16 <_realloc_r+0x1be>
    8ad0:	0029      	movs	r1, r5
    8ad2:	9801      	ldr	r0, [sp, #4]
    8ad4:	f7ff f924 	bl	7d20 <_malloc_r>
    8ad8:	1e05      	subs	r5, r0, #0
    8ada:	d039      	beq.n	8b50 <_realloc_r+0xf8>
    8adc:	2301      	movs	r3, #1
    8ade:	0002      	movs	r2, r0
    8ae0:	6879      	ldr	r1, [r7, #4]
    8ae2:	3a08      	subs	r2, #8
    8ae4:	4399      	bics	r1, r3
    8ae6:	187f      	adds	r7, r7, r1
    8ae8:	42ba      	cmp	r2, r7
    8aea:	d100      	bne.n	8aee <_realloc_r+0x96>
    8aec:	e12e      	b.n	8d4c <_realloc_r+0x2f4>
    8aee:	1f22      	subs	r2, r4, #4
    8af0:	2a24      	cmp	r2, #36	; 0x24
    8af2:	d900      	bls.n	8af6 <_realloc_r+0x9e>
    8af4:	e114      	b.n	8d20 <_realloc_r+0x2c8>
    8af6:	2a13      	cmp	r2, #19
    8af8:	d900      	bls.n	8afc <_realloc_r+0xa4>
    8afa:	e0e8      	b.n	8cce <_realloc_r+0x276>
    8afc:	0003      	movs	r3, r0
    8afe:	0032      	movs	r2, r6
    8b00:	6811      	ldr	r1, [r2, #0]
    8b02:	6019      	str	r1, [r3, #0]
    8b04:	6851      	ldr	r1, [r2, #4]
    8b06:	6059      	str	r1, [r3, #4]
    8b08:	6892      	ldr	r2, [r2, #8]
    8b0a:	609a      	str	r2, [r3, #8]
    8b0c:	9c01      	ldr	r4, [sp, #4]
    8b0e:	0031      	movs	r1, r6
    8b10:	0020      	movs	r0, r4
    8b12:	f7fe fde7 	bl	76e4 <_free_r>
    8b16:	0020      	movs	r0, r4
    8b18:	f7ff fc4e 	bl	83b8 <__malloc_unlock>
    8b1c:	e01b      	b.n	8b56 <_realloc_r+0xfe>
    8b1e:	2107      	movs	r1, #7
    8b20:	438b      	bics	r3, r1
    8b22:	4698      	mov	r8, r3
    8b24:	d5b6      	bpl.n	8a94 <_realloc_r+0x3c>
    8b26:	230c      	movs	r3, #12
    8b28:	9a01      	ldr	r2, [sp, #4]
    8b2a:	2500      	movs	r5, #0
    8b2c:	6013      	str	r3, [r2, #0]
    8b2e:	e012      	b.n	8b56 <_realloc_r+0xfe>
    8b30:	0035      	movs	r5, r6
    8b32:	4643      	mov	r3, r8
    8b34:	1ae3      	subs	r3, r4, r3
    8b36:	2b0f      	cmp	r3, #15
    8b38:	d825      	bhi.n	8b86 <_realloc_r+0x12e>
    8b3a:	464b      	mov	r3, r9
    8b3c:	2201      	movs	r2, #1
    8b3e:	4649      	mov	r1, r9
    8b40:	685b      	ldr	r3, [r3, #4]
    8b42:	4013      	ands	r3, r2
    8b44:	4323      	orrs	r3, r4
    8b46:	604b      	str	r3, [r1, #4]
    8b48:	444c      	add	r4, r9
    8b4a:	6863      	ldr	r3, [r4, #4]
    8b4c:	431a      	orrs	r2, r3
    8b4e:	6062      	str	r2, [r4, #4]
    8b50:	9801      	ldr	r0, [sp, #4]
    8b52:	f7ff fc31 	bl	83b8 <__malloc_unlock>
    8b56:	0028      	movs	r0, r5
    8b58:	b005      	add	sp, #20
    8b5a:	bc3c      	pop	{r2, r3, r4, r5}
    8b5c:	4690      	mov	r8, r2
    8b5e:	4699      	mov	r9, r3
    8b60:	46a2      	mov	sl, r4
    8b62:	46ab      	mov	fp, r5
    8b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8b66:	2103      	movs	r1, #3
    8b68:	9803      	ldr	r0, [sp, #12]
    8b6a:	468c      	mov	ip, r1
    8b6c:	4388      	bics	r0, r1
    8b6e:	1821      	adds	r1, r4, r0
    8b70:	468b      	mov	fp, r1
    8b72:	4299      	cmp	r1, r3
    8b74:	db21      	blt.n	8bba <_realloc_r+0x162>
    8b76:	9a02      	ldr	r2, [sp, #8]
    8b78:	0035      	movs	r5, r6
    8b7a:	68d3      	ldr	r3, [r2, #12]
    8b7c:	6892      	ldr	r2, [r2, #8]
    8b7e:	465c      	mov	r4, fp
    8b80:	60d3      	str	r3, [r2, #12]
    8b82:	609a      	str	r2, [r3, #8]
    8b84:	e7d5      	b.n	8b32 <_realloc_r+0xda>
    8b86:	464a      	mov	r2, r9
    8b88:	2001      	movs	r0, #1
    8b8a:	4646      	mov	r6, r8
    8b8c:	6852      	ldr	r2, [r2, #4]
    8b8e:	4649      	mov	r1, r9
    8b90:	4002      	ands	r2, r0
    8b92:	4332      	orrs	r2, r6
    8b94:	464e      	mov	r6, r9
    8b96:	4441      	add	r1, r8
    8b98:	4303      	orrs	r3, r0
    8b9a:	6072      	str	r2, [r6, #4]
    8b9c:	444c      	add	r4, r9
    8b9e:	604b      	str	r3, [r1, #4]
    8ba0:	6863      	ldr	r3, [r4, #4]
    8ba2:	3108      	adds	r1, #8
    8ba4:	4318      	orrs	r0, r3
    8ba6:	6060      	str	r0, [r4, #4]
    8ba8:	9801      	ldr	r0, [sp, #4]
    8baa:	f7fe fd9b 	bl	76e4 <_free_r>
    8bae:	e7cf      	b.n	8b50 <_realloc_r+0xf8>
    8bb0:	0011      	movs	r1, r2
    8bb2:	f7ff f8b5 	bl	7d20 <_malloc_r>
    8bb6:	0005      	movs	r5, r0
    8bb8:	e7cd      	b.n	8b56 <_realloc_r+0xfe>
    8bba:	4651      	mov	r1, sl
    8bbc:	4211      	tst	r1, r2
    8bbe:	d000      	beq.n	8bc2 <_realloc_r+0x16a>
    8bc0:	e786      	b.n	8ad0 <_realloc_r+0x78>
    8bc2:	4661      	mov	r1, ip
    8bc4:	683a      	ldr	r2, [r7, #0]
    8bc6:	1aba      	subs	r2, r7, r2
    8bc8:	4692      	mov	sl, r2
    8bca:	6852      	ldr	r2, [r2, #4]
    8bcc:	438a      	bics	r2, r1
    8bce:	1880      	adds	r0, r0, r2
    8bd0:	4683      	mov	fp, r0
    8bd2:	44a3      	add	fp, r4
    8bd4:	459b      	cmp	fp, r3
    8bd6:	db26      	blt.n	8c26 <_realloc_r+0x1ce>
    8bd8:	9a02      	ldr	r2, [sp, #8]
    8bda:	68d3      	ldr	r3, [r2, #12]
    8bdc:	6892      	ldr	r2, [r2, #8]
    8bde:	60d3      	str	r3, [r2, #12]
    8be0:	609a      	str	r2, [r3, #8]
    8be2:	4653      	mov	r3, sl
    8be4:	4652      	mov	r2, sl
    8be6:	4655      	mov	r5, sl
    8be8:	6892      	ldr	r2, [r2, #8]
    8bea:	68db      	ldr	r3, [r3, #12]
    8bec:	3508      	adds	r5, #8
    8bee:	60d3      	str	r3, [r2, #12]
    8bf0:	609a      	str	r2, [r3, #8]
    8bf2:	1f22      	subs	r2, r4, #4
    8bf4:	2a24      	cmp	r2, #36	; 0x24
    8bf6:	d900      	bls.n	8bfa <_realloc_r+0x1a2>
    8bf8:	e096      	b.n	8d28 <_realloc_r+0x2d0>
    8bfa:	2a13      	cmp	r2, #19
    8bfc:	d972      	bls.n	8ce4 <_realloc_r+0x28c>
    8bfe:	4653      	mov	r3, sl
    8c00:	6831      	ldr	r1, [r6, #0]
    8c02:	6099      	str	r1, [r3, #8]
    8c04:	6871      	ldr	r1, [r6, #4]
    8c06:	60d9      	str	r1, [r3, #12]
    8c08:	2a1b      	cmp	r2, #27
    8c0a:	d900      	bls.n	8c0e <_realloc_r+0x1b6>
    8c0c:	e0a4      	b.n	8d58 <_realloc_r+0x300>
    8c0e:	0032      	movs	r2, r6
    8c10:	3310      	adds	r3, #16
    8c12:	3208      	adds	r2, #8
    8c14:	e068      	b.n	8ce8 <_realloc_r+0x290>
    8c16:	683a      	ldr	r2, [r7, #0]
    8c18:	1aba      	subs	r2, r7, r2
    8c1a:	4692      	mov	sl, r2
    8c1c:	4651      	mov	r1, sl
    8c1e:	2203      	movs	r2, #3
    8c20:	6849      	ldr	r1, [r1, #4]
    8c22:	4391      	bics	r1, r2
    8c24:	000a      	movs	r2, r1
    8c26:	4693      	mov	fp, r2
    8c28:	44a3      	add	fp, r4
    8c2a:	459b      	cmp	fp, r3
    8c2c:	da00      	bge.n	8c30 <_realloc_r+0x1d8>
    8c2e:	e74f      	b.n	8ad0 <_realloc_r+0x78>
    8c30:	e7d7      	b.n	8be2 <_realloc_r+0x18a>
    8c32:	2003      	movs	r0, #3
    8c34:	9902      	ldr	r1, [sp, #8]
    8c36:	4684      	mov	ip, r0
    8c38:	6849      	ldr	r1, [r1, #4]
    8c3a:	4381      	bics	r1, r0
    8c3c:	4640      	mov	r0, r8
    8c3e:	1909      	adds	r1, r1, r4
    8c40:	3010      	adds	r0, #16
    8c42:	9002      	str	r0, [sp, #8]
    8c44:	4281      	cmp	r1, r0
    8c46:	da58      	bge.n	8cfa <_realloc_r+0x2a2>
    8c48:	07d2      	lsls	r2, r2, #31
    8c4a:	d500      	bpl.n	8c4e <_realloc_r+0x1f6>
    8c4c:	e740      	b.n	8ad0 <_realloc_r+0x78>
    8c4e:	4660      	mov	r0, ip
    8c50:	683a      	ldr	r2, [r7, #0]
    8c52:	1aba      	subs	r2, r7, r2
    8c54:	4692      	mov	sl, r2
    8c56:	6852      	ldr	r2, [r2, #4]
    8c58:	4382      	bics	r2, r0
    8c5a:	9802      	ldr	r0, [sp, #8]
    8c5c:	1851      	adds	r1, r2, r1
    8c5e:	9103      	str	r1, [sp, #12]
    8c60:	4288      	cmp	r0, r1
    8c62:	dce0      	bgt.n	8c26 <_realloc_r+0x1ce>
    8c64:	4653      	mov	r3, sl
    8c66:	4652      	mov	r2, sl
    8c68:	4655      	mov	r5, sl
    8c6a:	6892      	ldr	r2, [r2, #8]
    8c6c:	68db      	ldr	r3, [r3, #12]
    8c6e:	3508      	adds	r5, #8
    8c70:	60d3      	str	r3, [r2, #12]
    8c72:	609a      	str	r2, [r3, #8]
    8c74:	1f22      	subs	r2, r4, #4
    8c76:	2a24      	cmp	r2, #36	; 0x24
    8c78:	d900      	bls.n	8c7c <_realloc_r+0x224>
    8c7a:	e08e      	b.n	8d9a <_realloc_r+0x342>
    8c7c:	2a13      	cmp	r2, #19
    8c7e:	d800      	bhi.n	8c82 <_realloc_r+0x22a>
    8c80:	e088      	b.n	8d94 <_realloc_r+0x33c>
    8c82:	4653      	mov	r3, sl
    8c84:	6831      	ldr	r1, [r6, #0]
    8c86:	6099      	str	r1, [r3, #8]
    8c88:	6871      	ldr	r1, [r6, #4]
    8c8a:	60d9      	str	r1, [r3, #12]
    8c8c:	2a1b      	cmp	r2, #27
    8c8e:	d900      	bls.n	8c92 <_realloc_r+0x23a>
    8c90:	e088      	b.n	8da4 <_realloc_r+0x34c>
    8c92:	0032      	movs	r2, r6
    8c94:	3310      	adds	r3, #16
    8c96:	3208      	adds	r2, #8
    8c98:	6811      	ldr	r1, [r2, #0]
    8c9a:	6019      	str	r1, [r3, #0]
    8c9c:	6851      	ldr	r1, [r2, #4]
    8c9e:	6059      	str	r1, [r3, #4]
    8ca0:	6892      	ldr	r2, [r2, #8]
    8ca2:	609a      	str	r2, [r3, #8]
    8ca4:	4651      	mov	r1, sl
    8ca6:	465b      	mov	r3, fp
    8ca8:	4642      	mov	r2, r8
    8caa:	4441      	add	r1, r8
    8cac:	6099      	str	r1, [r3, #8]
    8cae:	9b03      	ldr	r3, [sp, #12]
    8cb0:	9801      	ldr	r0, [sp, #4]
    8cb2:	1a9a      	subs	r2, r3, r2
    8cb4:	2301      	movs	r3, #1
    8cb6:	431a      	orrs	r2, r3
    8cb8:	604a      	str	r2, [r1, #4]
    8cba:	4652      	mov	r2, sl
    8cbc:	6852      	ldr	r2, [r2, #4]
    8cbe:	4013      	ands	r3, r2
    8cc0:	4642      	mov	r2, r8
    8cc2:	4313      	orrs	r3, r2
    8cc4:	4652      	mov	r2, sl
    8cc6:	6053      	str	r3, [r2, #4]
    8cc8:	f7ff fb76 	bl	83b8 <__malloc_unlock>
    8ccc:	e743      	b.n	8b56 <_realloc_r+0xfe>
    8cce:	6833      	ldr	r3, [r6, #0]
    8cd0:	6003      	str	r3, [r0, #0]
    8cd2:	6873      	ldr	r3, [r6, #4]
    8cd4:	6043      	str	r3, [r0, #4]
    8cd6:	2a1b      	cmp	r2, #27
    8cd8:	d82d      	bhi.n	8d36 <_realloc_r+0x2de>
    8cda:	0003      	movs	r3, r0
    8cdc:	0032      	movs	r2, r6
    8cde:	3308      	adds	r3, #8
    8ce0:	3208      	adds	r2, #8
    8ce2:	e70d      	b.n	8b00 <_realloc_r+0xa8>
    8ce4:	002b      	movs	r3, r5
    8ce6:	0032      	movs	r2, r6
    8ce8:	6811      	ldr	r1, [r2, #0]
    8cea:	465c      	mov	r4, fp
    8cec:	6019      	str	r1, [r3, #0]
    8cee:	6851      	ldr	r1, [r2, #4]
    8cf0:	46d1      	mov	r9, sl
    8cf2:	6059      	str	r1, [r3, #4]
    8cf4:	6892      	ldr	r2, [r2, #8]
    8cf6:	609a      	str	r2, [r3, #8]
    8cf8:	e71b      	b.n	8b32 <_realloc_r+0xda>
    8cfa:	4643      	mov	r3, r8
    8cfc:	18fa      	adds	r2, r7, r3
    8cfe:	465b      	mov	r3, fp
    8d00:	609a      	str	r2, [r3, #8]
    8d02:	4643      	mov	r3, r8
    8d04:	1ac9      	subs	r1, r1, r3
    8d06:	2301      	movs	r3, #1
    8d08:	4319      	orrs	r1, r3
    8d0a:	6051      	str	r1, [r2, #4]
    8d0c:	687a      	ldr	r2, [r7, #4]
    8d0e:	9801      	ldr	r0, [sp, #4]
    8d10:	4013      	ands	r3, r2
    8d12:	4642      	mov	r2, r8
    8d14:	4313      	orrs	r3, r2
    8d16:	607b      	str	r3, [r7, #4]
    8d18:	f7ff fb4e 	bl	83b8 <__malloc_unlock>
    8d1c:	0035      	movs	r5, r6
    8d1e:	e71a      	b.n	8b56 <_realloc_r+0xfe>
    8d20:	0031      	movs	r1, r6
    8d22:	f7ff faf1 	bl	8308 <memmove>
    8d26:	e6f1      	b.n	8b0c <_realloc_r+0xb4>
    8d28:	0031      	movs	r1, r6
    8d2a:	0028      	movs	r0, r5
    8d2c:	f7ff faec 	bl	8308 <memmove>
    8d30:	465c      	mov	r4, fp
    8d32:	46d1      	mov	r9, sl
    8d34:	e6fd      	b.n	8b32 <_realloc_r+0xda>
    8d36:	68b3      	ldr	r3, [r6, #8]
    8d38:	6083      	str	r3, [r0, #8]
    8d3a:	68f3      	ldr	r3, [r6, #12]
    8d3c:	60c3      	str	r3, [r0, #12]
    8d3e:	2a24      	cmp	r2, #36	; 0x24
    8d40:	d015      	beq.n	8d6e <_realloc_r+0x316>
    8d42:	0003      	movs	r3, r0
    8d44:	0032      	movs	r2, r6
    8d46:	3310      	adds	r3, #16
    8d48:	3210      	adds	r2, #16
    8d4a:	e6d9      	b.n	8b00 <_realloc_r+0xa8>
    8d4c:	6853      	ldr	r3, [r2, #4]
    8d4e:	2203      	movs	r2, #3
    8d50:	4393      	bics	r3, r2
    8d52:	18e4      	adds	r4, r4, r3
    8d54:	0035      	movs	r5, r6
    8d56:	e6ec      	b.n	8b32 <_realloc_r+0xda>
    8d58:	4653      	mov	r3, sl
    8d5a:	68b1      	ldr	r1, [r6, #8]
    8d5c:	6119      	str	r1, [r3, #16]
    8d5e:	68f1      	ldr	r1, [r6, #12]
    8d60:	6159      	str	r1, [r3, #20]
    8d62:	2a24      	cmp	r2, #36	; 0x24
    8d64:	d00c      	beq.n	8d80 <_realloc_r+0x328>
    8d66:	0032      	movs	r2, r6
    8d68:	3318      	adds	r3, #24
    8d6a:	3210      	adds	r2, #16
    8d6c:	e7bc      	b.n	8ce8 <_realloc_r+0x290>
    8d6e:	6933      	ldr	r3, [r6, #16]
    8d70:	0032      	movs	r2, r6
    8d72:	6103      	str	r3, [r0, #16]
    8d74:	0003      	movs	r3, r0
    8d76:	6971      	ldr	r1, [r6, #20]
    8d78:	3318      	adds	r3, #24
    8d7a:	3218      	adds	r2, #24
    8d7c:	6141      	str	r1, [r0, #20]
    8d7e:	e6bf      	b.n	8b00 <_realloc_r+0xa8>
    8d80:	4653      	mov	r3, sl
    8d82:	6932      	ldr	r2, [r6, #16]
    8d84:	4651      	mov	r1, sl
    8d86:	619a      	str	r2, [r3, #24]
    8d88:	0032      	movs	r2, r6
    8d8a:	6970      	ldr	r0, [r6, #20]
    8d8c:	3320      	adds	r3, #32
    8d8e:	3218      	adds	r2, #24
    8d90:	61c8      	str	r0, [r1, #28]
    8d92:	e7a9      	b.n	8ce8 <_realloc_r+0x290>
    8d94:	002b      	movs	r3, r5
    8d96:	0032      	movs	r2, r6
    8d98:	e77e      	b.n	8c98 <_realloc_r+0x240>
    8d9a:	0031      	movs	r1, r6
    8d9c:	0028      	movs	r0, r5
    8d9e:	f7ff fab3 	bl	8308 <memmove>
    8da2:	e77f      	b.n	8ca4 <_realloc_r+0x24c>
    8da4:	4653      	mov	r3, sl
    8da6:	68b1      	ldr	r1, [r6, #8]
    8da8:	6119      	str	r1, [r3, #16]
    8daa:	68f1      	ldr	r1, [r6, #12]
    8dac:	6159      	str	r1, [r3, #20]
    8dae:	2a24      	cmp	r2, #36	; 0x24
    8db0:	d003      	beq.n	8dba <_realloc_r+0x362>
    8db2:	0032      	movs	r2, r6
    8db4:	3318      	adds	r3, #24
    8db6:	3210      	adds	r2, #16
    8db8:	e76e      	b.n	8c98 <_realloc_r+0x240>
    8dba:	4653      	mov	r3, sl
    8dbc:	6932      	ldr	r2, [r6, #16]
    8dbe:	4651      	mov	r1, sl
    8dc0:	619a      	str	r2, [r3, #24]
    8dc2:	0032      	movs	r2, r6
    8dc4:	6970      	ldr	r0, [r6, #20]
    8dc6:	3320      	adds	r3, #32
    8dc8:	3218      	adds	r2, #24
    8dca:	61c8      	str	r0, [r1, #28]
    8dcc:	e764      	b.n	8c98 <_realloc_r+0x240>
    8dce:	46c0      	nop			; (mov r8, r8)
    8dd0:	200004ac 	.word	0x200004ac

00008dd4 <_sbrk_r>:
    8dd4:	2300      	movs	r3, #0
    8dd6:	b570      	push	{r4, r5, r6, lr}
    8dd8:	4c06      	ldr	r4, [pc, #24]	; (8df4 <_sbrk_r+0x20>)
    8dda:	0005      	movs	r5, r0
    8ddc:	0008      	movs	r0, r1
    8dde:	6023      	str	r3, [r4, #0]
    8de0:	f7f8 f956 	bl	1090 <_sbrk>
    8de4:	1c43      	adds	r3, r0, #1
    8de6:	d000      	beq.n	8dea <_sbrk_r+0x16>
    8de8:	bd70      	pop	{r4, r5, r6, pc}
    8dea:	6823      	ldr	r3, [r4, #0]
    8dec:	2b00      	cmp	r3, #0
    8dee:	d0fb      	beq.n	8de8 <_sbrk_r+0x14>
    8df0:	602b      	str	r3, [r5, #0]
    8df2:	e7f9      	b.n	8de8 <_sbrk_r+0x14>
    8df4:	20000bb0 	.word	0x20000bb0

00008df8 <__sread>:
    8df8:	b570      	push	{r4, r5, r6, lr}
    8dfa:	000c      	movs	r4, r1
    8dfc:	250e      	movs	r5, #14
    8dfe:	5f49      	ldrsh	r1, [r1, r5]
    8e00:	f000 faa0 	bl	9344 <_read_r>
    8e04:	2800      	cmp	r0, #0
    8e06:	db03      	blt.n	8e10 <__sread+0x18>
    8e08:	6d23      	ldr	r3, [r4, #80]	; 0x50
    8e0a:	181b      	adds	r3, r3, r0
    8e0c:	6523      	str	r3, [r4, #80]	; 0x50
    8e0e:	bd70      	pop	{r4, r5, r6, pc}
    8e10:	89a3      	ldrh	r3, [r4, #12]
    8e12:	4a02      	ldr	r2, [pc, #8]	; (8e1c <__sread+0x24>)
    8e14:	4013      	ands	r3, r2
    8e16:	81a3      	strh	r3, [r4, #12]
    8e18:	e7f9      	b.n	8e0e <__sread+0x16>
    8e1a:	46c0      	nop			; (mov r8, r8)
    8e1c:	ffffefff 	.word	0xffffefff

00008e20 <__swrite>:
    8e20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8e22:	0016      	movs	r6, r2
    8e24:	001f      	movs	r7, r3
    8e26:	220c      	movs	r2, #12
    8e28:	5e8b      	ldrsh	r3, [r1, r2]
    8e2a:	0005      	movs	r5, r0
    8e2c:	000c      	movs	r4, r1
    8e2e:	05da      	lsls	r2, r3, #23
    8e30:	d507      	bpl.n	8e42 <__swrite+0x22>
    8e32:	230e      	movs	r3, #14
    8e34:	5ec9      	ldrsh	r1, [r1, r3]
    8e36:	2200      	movs	r2, #0
    8e38:	2302      	movs	r3, #2
    8e3a:	f000 fa59 	bl	92f0 <_lseek_r>
    8e3e:	220c      	movs	r2, #12
    8e40:	5ea3      	ldrsh	r3, [r4, r2]
    8e42:	4a05      	ldr	r2, [pc, #20]	; (8e58 <__swrite+0x38>)
    8e44:	0028      	movs	r0, r5
    8e46:	4013      	ands	r3, r2
    8e48:	81a3      	strh	r3, [r4, #12]
    8e4a:	0032      	movs	r2, r6
    8e4c:	230e      	movs	r3, #14
    8e4e:	5ee1      	ldrsh	r1, [r4, r3]
    8e50:	003b      	movs	r3, r7
    8e52:	f000 f86b 	bl	8f2c <_write_r>
    8e56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8e58:	ffffefff 	.word	0xffffefff

00008e5c <__sseek>:
    8e5c:	b570      	push	{r4, r5, r6, lr}
    8e5e:	000c      	movs	r4, r1
    8e60:	250e      	movs	r5, #14
    8e62:	5f49      	ldrsh	r1, [r1, r5]
    8e64:	f000 fa44 	bl	92f0 <_lseek_r>
    8e68:	1c43      	adds	r3, r0, #1
    8e6a:	d006      	beq.n	8e7a <__sseek+0x1e>
    8e6c:	2380      	movs	r3, #128	; 0x80
    8e6e:	89a2      	ldrh	r2, [r4, #12]
    8e70:	015b      	lsls	r3, r3, #5
    8e72:	4313      	orrs	r3, r2
    8e74:	81a3      	strh	r3, [r4, #12]
    8e76:	6520      	str	r0, [r4, #80]	; 0x50
    8e78:	bd70      	pop	{r4, r5, r6, pc}
    8e7a:	89a3      	ldrh	r3, [r4, #12]
    8e7c:	4a01      	ldr	r2, [pc, #4]	; (8e84 <__sseek+0x28>)
    8e7e:	4013      	ands	r3, r2
    8e80:	81a3      	strh	r3, [r4, #12]
    8e82:	e7f9      	b.n	8e78 <__sseek+0x1c>
    8e84:	ffffefff 	.word	0xffffefff

00008e88 <__sclose>:
    8e88:	b510      	push	{r4, lr}
    8e8a:	230e      	movs	r3, #14
    8e8c:	5ec9      	ldrsh	r1, [r1, r3]
    8e8e:	f000 f907 	bl	90a0 <_close_r>
    8e92:	bd10      	pop	{r4, pc}

00008e94 <__sprint_r.part.0>:
    8e94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8e96:	464e      	mov	r6, r9
    8e98:	4645      	mov	r5, r8
    8e9a:	46de      	mov	lr, fp
    8e9c:	4657      	mov	r7, sl
    8e9e:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    8ea0:	b5e0      	push	{r5, r6, r7, lr}
    8ea2:	4680      	mov	r8, r0
    8ea4:	000e      	movs	r6, r1
    8ea6:	4691      	mov	r9, r2
    8ea8:	049b      	lsls	r3, r3, #18
    8eaa:	d531      	bpl.n	8f10 <__sprint_r.part.0+0x7c>
    8eac:	6813      	ldr	r3, [r2, #0]
    8eae:	469a      	mov	sl, r3
    8eb0:	6893      	ldr	r3, [r2, #8]
    8eb2:	2b00      	cmp	r3, #0
    8eb4:	d02a      	beq.n	8f0c <__sprint_r.part.0+0x78>
    8eb6:	4652      	mov	r2, sl
    8eb8:	6852      	ldr	r2, [r2, #4]
    8eba:	2500      	movs	r5, #0
    8ebc:	4693      	mov	fp, r2
    8ebe:	0897      	lsrs	r7, r2, #2
    8ec0:	4652      	mov	r2, sl
    8ec2:	6814      	ldr	r4, [r2, #0]
    8ec4:	d104      	bne.n	8ed0 <__sprint_r.part.0+0x3c>
    8ec6:	e016      	b.n	8ef6 <__sprint_r.part.0+0x62>
    8ec8:	3501      	adds	r5, #1
    8eca:	3404      	adds	r4, #4
    8ecc:	42af      	cmp	r7, r5
    8ece:	d010      	beq.n	8ef2 <__sprint_r.part.0+0x5e>
    8ed0:	0032      	movs	r2, r6
    8ed2:	6821      	ldr	r1, [r4, #0]
    8ed4:	4640      	mov	r0, r8
    8ed6:	f000 f9a7 	bl	9228 <_fputwc_r>
    8eda:	1c43      	adds	r3, r0, #1
    8edc:	d1f4      	bne.n	8ec8 <__sprint_r.part.0+0x34>
    8ede:	464a      	mov	r2, r9
    8ee0:	2300      	movs	r3, #0
    8ee2:	6093      	str	r3, [r2, #8]
    8ee4:	6053      	str	r3, [r2, #4]
    8ee6:	bc3c      	pop	{r2, r3, r4, r5}
    8ee8:	4690      	mov	r8, r2
    8eea:	4699      	mov	r9, r3
    8eec:	46a2      	mov	sl, r4
    8eee:	46ab      	mov	fp, r5
    8ef0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8ef2:	464b      	mov	r3, r9
    8ef4:	689b      	ldr	r3, [r3, #8]
    8ef6:	465a      	mov	r2, fp
    8ef8:	2103      	movs	r1, #3
    8efa:	438a      	bics	r2, r1
    8efc:	1a9b      	subs	r3, r3, r2
    8efe:	464a      	mov	r2, r9
    8f00:	6093      	str	r3, [r2, #8]
    8f02:	2208      	movs	r2, #8
    8f04:	4694      	mov	ip, r2
    8f06:	44e2      	add	sl, ip
    8f08:	2b00      	cmp	r3, #0
    8f0a:	d1d4      	bne.n	8eb6 <__sprint_r.part.0+0x22>
    8f0c:	2000      	movs	r0, #0
    8f0e:	e7e6      	b.n	8ede <__sprint_r.part.0+0x4a>
    8f10:	f7fe fcc6 	bl	78a0 <__sfvwrite_r>
    8f14:	e7e3      	b.n	8ede <__sprint_r.part.0+0x4a>
    8f16:	46c0      	nop			; (mov r8, r8)

00008f18 <__sprint_r>:
    8f18:	6893      	ldr	r3, [r2, #8]
    8f1a:	b510      	push	{r4, lr}
    8f1c:	2b00      	cmp	r3, #0
    8f1e:	d002      	beq.n	8f26 <__sprint_r+0xe>
    8f20:	f7ff ffb8 	bl	8e94 <__sprint_r.part.0>
    8f24:	bd10      	pop	{r4, pc}
    8f26:	6053      	str	r3, [r2, #4]
    8f28:	2000      	movs	r0, #0
    8f2a:	e7fb      	b.n	8f24 <__sprint_r+0xc>

00008f2c <_write_r>:
    8f2c:	b570      	push	{r4, r5, r6, lr}
    8f2e:	0005      	movs	r5, r0
    8f30:	0008      	movs	r0, r1
    8f32:	0011      	movs	r1, r2
    8f34:	2200      	movs	r2, #0
    8f36:	4c06      	ldr	r4, [pc, #24]	; (8f50 <_write_r+0x24>)
    8f38:	6022      	str	r2, [r4, #0]
    8f3a:	001a      	movs	r2, r3
    8f3c:	f7f9 fa48 	bl	23d0 <_write>
    8f40:	1c43      	adds	r3, r0, #1
    8f42:	d000      	beq.n	8f46 <_write_r+0x1a>
    8f44:	bd70      	pop	{r4, r5, r6, pc}
    8f46:	6823      	ldr	r3, [r4, #0]
    8f48:	2b00      	cmp	r3, #0
    8f4a:	d0fb      	beq.n	8f44 <_write_r+0x18>
    8f4c:	602b      	str	r3, [r5, #0]
    8f4e:	e7f9      	b.n	8f44 <_write_r+0x18>
    8f50:	20000bb0 	.word	0x20000bb0

00008f54 <__register_exitproc>:
    8f54:	b5f0      	push	{r4, r5, r6, r7, lr}
    8f56:	464e      	mov	r6, r9
    8f58:	4645      	mov	r5, r8
    8f5a:	46de      	mov	lr, fp
    8f5c:	4657      	mov	r7, sl
    8f5e:	b5e0      	push	{r5, r6, r7, lr}
    8f60:	4d36      	ldr	r5, [pc, #216]	; (903c <__register_exitproc+0xe8>)
    8f62:	b083      	sub	sp, #12
    8f64:	0006      	movs	r6, r0
    8f66:	6828      	ldr	r0, [r5, #0]
    8f68:	4698      	mov	r8, r3
    8f6a:	000f      	movs	r7, r1
    8f6c:	4691      	mov	r9, r2
    8f6e:	f7fe fe51 	bl	7c14 <__retarget_lock_acquire_recursive>
    8f72:	4b33      	ldr	r3, [pc, #204]	; (9040 <__register_exitproc+0xec>)
    8f74:	681c      	ldr	r4, [r3, #0]
    8f76:	23a4      	movs	r3, #164	; 0xa4
    8f78:	005b      	lsls	r3, r3, #1
    8f7a:	58e0      	ldr	r0, [r4, r3]
    8f7c:	2800      	cmp	r0, #0
    8f7e:	d052      	beq.n	9026 <__register_exitproc+0xd2>
    8f80:	6843      	ldr	r3, [r0, #4]
    8f82:	2b1f      	cmp	r3, #31
    8f84:	dc13      	bgt.n	8fae <__register_exitproc+0x5a>
    8f86:	1c5a      	adds	r2, r3, #1
    8f88:	9201      	str	r2, [sp, #4]
    8f8a:	2e00      	cmp	r6, #0
    8f8c:	d128      	bne.n	8fe0 <__register_exitproc+0x8c>
    8f8e:	9a01      	ldr	r2, [sp, #4]
    8f90:	3302      	adds	r3, #2
    8f92:	009b      	lsls	r3, r3, #2
    8f94:	6042      	str	r2, [r0, #4]
    8f96:	501f      	str	r7, [r3, r0]
    8f98:	6828      	ldr	r0, [r5, #0]
    8f9a:	f7fe fe3d 	bl	7c18 <__retarget_lock_release_recursive>
    8f9e:	2000      	movs	r0, #0
    8fa0:	b003      	add	sp, #12
    8fa2:	bc3c      	pop	{r2, r3, r4, r5}
    8fa4:	4690      	mov	r8, r2
    8fa6:	4699      	mov	r9, r3
    8fa8:	46a2      	mov	sl, r4
    8faa:	46ab      	mov	fp, r5
    8fac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8fae:	4b25      	ldr	r3, [pc, #148]	; (9044 <__register_exitproc+0xf0>)
    8fb0:	2b00      	cmp	r3, #0
    8fb2:	d03d      	beq.n	9030 <__register_exitproc+0xdc>
    8fb4:	20c8      	movs	r0, #200	; 0xc8
    8fb6:	0040      	lsls	r0, r0, #1
    8fb8:	f7fe fea8 	bl	7d0c <malloc>
    8fbc:	2800      	cmp	r0, #0
    8fbe:	d037      	beq.n	9030 <__register_exitproc+0xdc>
    8fc0:	22a4      	movs	r2, #164	; 0xa4
    8fc2:	2300      	movs	r3, #0
    8fc4:	0052      	lsls	r2, r2, #1
    8fc6:	58a1      	ldr	r1, [r4, r2]
    8fc8:	6043      	str	r3, [r0, #4]
    8fca:	6001      	str	r1, [r0, #0]
    8fcc:	50a0      	str	r0, [r4, r2]
    8fce:	3240      	adds	r2, #64	; 0x40
    8fd0:	5083      	str	r3, [r0, r2]
    8fd2:	3204      	adds	r2, #4
    8fd4:	5083      	str	r3, [r0, r2]
    8fd6:	3301      	adds	r3, #1
    8fd8:	9301      	str	r3, [sp, #4]
    8fda:	2300      	movs	r3, #0
    8fdc:	2e00      	cmp	r6, #0
    8fde:	d0d6      	beq.n	8f8e <__register_exitproc+0x3a>
    8fe0:	009a      	lsls	r2, r3, #2
    8fe2:	4692      	mov	sl, r2
    8fe4:	4482      	add	sl, r0
    8fe6:	464a      	mov	r2, r9
    8fe8:	2188      	movs	r1, #136	; 0x88
    8fea:	4654      	mov	r4, sl
    8fec:	5062      	str	r2, [r4, r1]
    8fee:	22c4      	movs	r2, #196	; 0xc4
    8ff0:	0052      	lsls	r2, r2, #1
    8ff2:	4691      	mov	r9, r2
    8ff4:	4481      	add	r9, r0
    8ff6:	464a      	mov	r2, r9
    8ff8:	3987      	subs	r1, #135	; 0x87
    8ffa:	4099      	lsls	r1, r3
    8ffc:	6812      	ldr	r2, [r2, #0]
    8ffe:	468b      	mov	fp, r1
    9000:	430a      	orrs	r2, r1
    9002:	4694      	mov	ip, r2
    9004:	464a      	mov	r2, r9
    9006:	4661      	mov	r1, ip
    9008:	6011      	str	r1, [r2, #0]
    900a:	2284      	movs	r2, #132	; 0x84
    900c:	4641      	mov	r1, r8
    900e:	0052      	lsls	r2, r2, #1
    9010:	50a1      	str	r1, [r4, r2]
    9012:	2e02      	cmp	r6, #2
    9014:	d1bb      	bne.n	8f8e <__register_exitproc+0x3a>
    9016:	0002      	movs	r2, r0
    9018:	465c      	mov	r4, fp
    901a:	328d      	adds	r2, #141	; 0x8d
    901c:	32ff      	adds	r2, #255	; 0xff
    901e:	6811      	ldr	r1, [r2, #0]
    9020:	430c      	orrs	r4, r1
    9022:	6014      	str	r4, [r2, #0]
    9024:	e7b3      	b.n	8f8e <__register_exitproc+0x3a>
    9026:	0020      	movs	r0, r4
    9028:	304d      	adds	r0, #77	; 0x4d
    902a:	30ff      	adds	r0, #255	; 0xff
    902c:	50e0      	str	r0, [r4, r3]
    902e:	e7a7      	b.n	8f80 <__register_exitproc+0x2c>
    9030:	6828      	ldr	r0, [r5, #0]
    9032:	f7fe fdf1 	bl	7c18 <__retarget_lock_release_recursive>
    9036:	2001      	movs	r0, #1
    9038:	4240      	negs	r0, r0
    903a:	e7b1      	b.n	8fa0 <__register_exitproc+0x4c>
    903c:	200004a8 	.word	0x200004a8
    9040:	0000a110 	.word	0x0000a110
    9044:	00007d0d 	.word	0x00007d0d

00009048 <_calloc_r>:
    9048:	b510      	push	{r4, lr}
    904a:	4351      	muls	r1, r2
    904c:	f7fe fe68 	bl	7d20 <_malloc_r>
    9050:	1e04      	subs	r4, r0, #0
    9052:	d01c      	beq.n	908e <_calloc_r+0x46>
    9054:	0003      	movs	r3, r0
    9056:	3b08      	subs	r3, #8
    9058:	685a      	ldr	r2, [r3, #4]
    905a:	2303      	movs	r3, #3
    905c:	439a      	bics	r2, r3
    905e:	3a04      	subs	r2, #4
    9060:	2a24      	cmp	r2, #36	; 0x24
    9062:	d816      	bhi.n	9092 <_calloc_r+0x4a>
    9064:	0003      	movs	r3, r0
    9066:	2a13      	cmp	r2, #19
    9068:	d90d      	bls.n	9086 <_calloc_r+0x3e>
    906a:	2100      	movs	r1, #0
    906c:	3308      	adds	r3, #8
    906e:	6001      	str	r1, [r0, #0]
    9070:	6041      	str	r1, [r0, #4]
    9072:	2a1b      	cmp	r2, #27
    9074:	d907      	bls.n	9086 <_calloc_r+0x3e>
    9076:	6081      	str	r1, [r0, #8]
    9078:	60c1      	str	r1, [r0, #12]
    907a:	2a24      	cmp	r2, #36	; 0x24
    907c:	d10d      	bne.n	909a <_calloc_r+0x52>
    907e:	0003      	movs	r3, r0
    9080:	6101      	str	r1, [r0, #16]
    9082:	3318      	adds	r3, #24
    9084:	6141      	str	r1, [r0, #20]
    9086:	2200      	movs	r2, #0
    9088:	601a      	str	r2, [r3, #0]
    908a:	605a      	str	r2, [r3, #4]
    908c:	609a      	str	r2, [r3, #8]
    908e:	0020      	movs	r0, r4
    9090:	bd10      	pop	{r4, pc}
    9092:	2100      	movs	r1, #0
    9094:	f7fb fb76 	bl	4784 <memset>
    9098:	e7f9      	b.n	908e <_calloc_r+0x46>
    909a:	0003      	movs	r3, r0
    909c:	3310      	adds	r3, #16
    909e:	e7f2      	b.n	9086 <_calloc_r+0x3e>

000090a0 <_close_r>:
    90a0:	2300      	movs	r3, #0
    90a2:	b570      	push	{r4, r5, r6, lr}
    90a4:	4c06      	ldr	r4, [pc, #24]	; (90c0 <_close_r+0x20>)
    90a6:	0005      	movs	r5, r0
    90a8:	0008      	movs	r0, r1
    90aa:	6023      	str	r3, [r4, #0]
    90ac:	f7f8 f802 	bl	10b4 <_close>
    90b0:	1c43      	adds	r3, r0, #1
    90b2:	d000      	beq.n	90b6 <_close_r+0x16>
    90b4:	bd70      	pop	{r4, r5, r6, pc}
    90b6:	6823      	ldr	r3, [r4, #0]
    90b8:	2b00      	cmp	r3, #0
    90ba:	d0fb      	beq.n	90b4 <_close_r+0x14>
    90bc:	602b      	str	r3, [r5, #0]
    90be:	e7f9      	b.n	90b4 <_close_r+0x14>
    90c0:	20000bb0 	.word	0x20000bb0

000090c4 <_fclose_r>:
    90c4:	b570      	push	{r4, r5, r6, lr}
    90c6:	0005      	movs	r5, r0
    90c8:	1e0c      	subs	r4, r1, #0
    90ca:	d040      	beq.n	914e <_fclose_r+0x8a>
    90cc:	2800      	cmp	r0, #0
    90ce:	d002      	beq.n	90d6 <_fclose_r+0x12>
    90d0:	6b83      	ldr	r3, [r0, #56]	; 0x38
    90d2:	2b00      	cmp	r3, #0
    90d4:	d03e      	beq.n	9154 <_fclose_r+0x90>
    90d6:	2601      	movs	r6, #1
    90d8:	6e63      	ldr	r3, [r4, #100]	; 0x64
    90da:	4233      	tst	r3, r6
    90dc:	d133      	bne.n	9146 <_fclose_r+0x82>
    90de:	89a3      	ldrh	r3, [r4, #12]
    90e0:	059b      	lsls	r3, r3, #22
    90e2:	d543      	bpl.n	916c <_fclose_r+0xa8>
    90e4:	0021      	movs	r1, r4
    90e6:	0028      	movs	r0, r5
    90e8:	f7fe f950 	bl	738c <__sflush_r>
    90ec:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    90ee:	0006      	movs	r6, r0
    90f0:	2b00      	cmp	r3, #0
    90f2:	d004      	beq.n	90fe <_fclose_r+0x3a>
    90f4:	69e1      	ldr	r1, [r4, #28]
    90f6:	0028      	movs	r0, r5
    90f8:	4798      	blx	r3
    90fa:	2800      	cmp	r0, #0
    90fc:	db44      	blt.n	9188 <_fclose_r+0xc4>
    90fe:	89a3      	ldrh	r3, [r4, #12]
    9100:	061b      	lsls	r3, r3, #24
    9102:	d42a      	bmi.n	915a <_fclose_r+0x96>
    9104:	6b21      	ldr	r1, [r4, #48]	; 0x30
    9106:	2900      	cmp	r1, #0
    9108:	d008      	beq.n	911c <_fclose_r+0x58>
    910a:	0023      	movs	r3, r4
    910c:	3340      	adds	r3, #64	; 0x40
    910e:	4299      	cmp	r1, r3
    9110:	d002      	beq.n	9118 <_fclose_r+0x54>
    9112:	0028      	movs	r0, r5
    9114:	f7fe fae6 	bl	76e4 <_free_r>
    9118:	2300      	movs	r3, #0
    911a:	6323      	str	r3, [r4, #48]	; 0x30
    911c:	6c61      	ldr	r1, [r4, #68]	; 0x44
    911e:	2900      	cmp	r1, #0
    9120:	d004      	beq.n	912c <_fclose_r+0x68>
    9122:	0028      	movs	r0, r5
    9124:	f7fe fade 	bl	76e4 <_free_r>
    9128:	2300      	movs	r3, #0
    912a:	6463      	str	r3, [r4, #68]	; 0x44
    912c:	f7fe fa60 	bl	75f0 <__sfp_lock_acquire>
    9130:	2300      	movs	r3, #0
    9132:	81a3      	strh	r3, [r4, #12]
    9134:	6e63      	ldr	r3, [r4, #100]	; 0x64
    9136:	07db      	lsls	r3, r3, #31
    9138:	d514      	bpl.n	9164 <_fclose_r+0xa0>
    913a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    913c:	f7fe fd68 	bl	7c10 <__retarget_lock_close_recursive>
    9140:	f7fe fa5e 	bl	7600 <__sfp_lock_release>
    9144:	e004      	b.n	9150 <_fclose_r+0x8c>
    9146:	220c      	movs	r2, #12
    9148:	5ea3      	ldrsh	r3, [r4, r2]
    914a:	2b00      	cmp	r3, #0
    914c:	d1ca      	bne.n	90e4 <_fclose_r+0x20>
    914e:	2600      	movs	r6, #0
    9150:	0030      	movs	r0, r6
    9152:	bd70      	pop	{r4, r5, r6, pc}
    9154:	f7fe fa1c 	bl	7590 <__sinit>
    9158:	e7bd      	b.n	90d6 <_fclose_r+0x12>
    915a:	6921      	ldr	r1, [r4, #16]
    915c:	0028      	movs	r0, r5
    915e:	f7fe fac1 	bl	76e4 <_free_r>
    9162:	e7cf      	b.n	9104 <_fclose_r+0x40>
    9164:	6da0      	ldr	r0, [r4, #88]	; 0x58
    9166:	f7fe fd57 	bl	7c18 <__retarget_lock_release_recursive>
    916a:	e7e6      	b.n	913a <_fclose_r+0x76>
    916c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    916e:	f7fe fd51 	bl	7c14 <__retarget_lock_acquire_recursive>
    9172:	220c      	movs	r2, #12
    9174:	5ea3      	ldrsh	r3, [r4, r2]
    9176:	2b00      	cmp	r3, #0
    9178:	d1b4      	bne.n	90e4 <_fclose_r+0x20>
    917a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    917c:	401e      	ands	r6, r3
    917e:	d1e6      	bne.n	914e <_fclose_r+0x8a>
    9180:	6da0      	ldr	r0, [r4, #88]	; 0x58
    9182:	f7fe fd49 	bl	7c18 <__retarget_lock_release_recursive>
    9186:	e7e3      	b.n	9150 <_fclose_r+0x8c>
    9188:	2601      	movs	r6, #1
    918a:	4276      	negs	r6, r6
    918c:	e7b7      	b.n	90fe <_fclose_r+0x3a>
    918e:	46c0      	nop			; (mov r8, r8)

00009190 <__fputwc>:
    9190:	b5f0      	push	{r4, r5, r6, r7, lr}
    9192:	46ce      	mov	lr, r9
    9194:	4647      	mov	r7, r8
    9196:	b580      	push	{r7, lr}
    9198:	b085      	sub	sp, #20
    919a:	4680      	mov	r8, r0
    919c:	4689      	mov	r9, r1
    919e:	0014      	movs	r4, r2
    91a0:	f000 f896 	bl	92d0 <__locale_mb_cur_max>
    91a4:	2801      	cmp	r0, #1
    91a6:	d031      	beq.n	920c <__fputwc+0x7c>
    91a8:	0023      	movs	r3, r4
    91aa:	af03      	add	r7, sp, #12
    91ac:	335c      	adds	r3, #92	; 0x5c
    91ae:	464a      	mov	r2, r9
    91b0:	0039      	movs	r1, r7
    91b2:	4640      	mov	r0, r8
    91b4:	f000 f938 	bl	9428 <_wcrtomb_r>
    91b8:	0006      	movs	r6, r0
    91ba:	1c43      	adds	r3, r0, #1
    91bc:	d021      	beq.n	9202 <__fputwc+0x72>
    91be:	2800      	cmp	r0, #0
    91c0:	d030      	beq.n	9224 <__fputwc+0x94>
    91c2:	7839      	ldrb	r1, [r7, #0]
    91c4:	2500      	movs	r5, #0
    91c6:	e007      	b.n	91d8 <__fputwc+0x48>
    91c8:	6823      	ldr	r3, [r4, #0]
    91ca:	1c5a      	adds	r2, r3, #1
    91cc:	6022      	str	r2, [r4, #0]
    91ce:	7019      	strb	r1, [r3, #0]
    91d0:	3501      	adds	r5, #1
    91d2:	42b5      	cmp	r5, r6
    91d4:	d226      	bcs.n	9224 <__fputwc+0x94>
    91d6:	5d79      	ldrb	r1, [r7, r5]
    91d8:	68a3      	ldr	r3, [r4, #8]
    91da:	3b01      	subs	r3, #1
    91dc:	60a3      	str	r3, [r4, #8]
    91de:	2b00      	cmp	r3, #0
    91e0:	daf2      	bge.n	91c8 <__fputwc+0x38>
    91e2:	69a2      	ldr	r2, [r4, #24]
    91e4:	4293      	cmp	r3, r2
    91e6:	db01      	blt.n	91ec <__fputwc+0x5c>
    91e8:	290a      	cmp	r1, #10
    91ea:	d1ed      	bne.n	91c8 <__fputwc+0x38>
    91ec:	0022      	movs	r2, r4
    91ee:	4640      	mov	r0, r8
    91f0:	f000 f8bc 	bl	936c <__swbuf_r>
    91f4:	1c43      	adds	r3, r0, #1
    91f6:	d1eb      	bne.n	91d0 <__fputwc+0x40>
    91f8:	b005      	add	sp, #20
    91fa:	bc0c      	pop	{r2, r3}
    91fc:	4690      	mov	r8, r2
    91fe:	4699      	mov	r9, r3
    9200:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9202:	2240      	movs	r2, #64	; 0x40
    9204:	89a3      	ldrh	r3, [r4, #12]
    9206:	4313      	orrs	r3, r2
    9208:	81a3      	strh	r3, [r4, #12]
    920a:	e7f5      	b.n	91f8 <__fputwc+0x68>
    920c:	464b      	mov	r3, r9
    920e:	3b01      	subs	r3, #1
    9210:	2bfe      	cmp	r3, #254	; 0xfe
    9212:	d8c9      	bhi.n	91a8 <__fputwc+0x18>
    9214:	466a      	mov	r2, sp
    9216:	464b      	mov	r3, r9
    9218:	71d3      	strb	r3, [r2, #7]
    921a:	79d1      	ldrb	r1, [r2, #7]
    921c:	af03      	add	r7, sp, #12
    921e:	7039      	strb	r1, [r7, #0]
    9220:	2601      	movs	r6, #1
    9222:	e7cf      	b.n	91c4 <__fputwc+0x34>
    9224:	4648      	mov	r0, r9
    9226:	e7e7      	b.n	91f8 <__fputwc+0x68>

00009228 <_fputwc_r>:
    9228:	6e53      	ldr	r3, [r2, #100]	; 0x64
    922a:	b570      	push	{r4, r5, r6, lr}
    922c:	0005      	movs	r5, r0
    922e:	000e      	movs	r6, r1
    9230:	0014      	movs	r4, r2
    9232:	07db      	lsls	r3, r3, #31
    9234:	d41e      	bmi.n	9274 <_fputwc_r+0x4c>
    9236:	230c      	movs	r3, #12
    9238:	5ed2      	ldrsh	r2, [r2, r3]
    923a:	b291      	uxth	r1, r2
    923c:	058b      	lsls	r3, r1, #22
    923e:	d516      	bpl.n	926e <_fputwc_r+0x46>
    9240:	2380      	movs	r3, #128	; 0x80
    9242:	019b      	lsls	r3, r3, #6
    9244:	4219      	tst	r1, r3
    9246:	d104      	bne.n	9252 <_fputwc_r+0x2a>
    9248:	431a      	orrs	r2, r3
    924a:	81a2      	strh	r2, [r4, #12]
    924c:	6e62      	ldr	r2, [r4, #100]	; 0x64
    924e:	4313      	orrs	r3, r2
    9250:	6663      	str	r3, [r4, #100]	; 0x64
    9252:	0028      	movs	r0, r5
    9254:	0022      	movs	r2, r4
    9256:	0031      	movs	r1, r6
    9258:	f7ff ff9a 	bl	9190 <__fputwc>
    925c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    925e:	0005      	movs	r5, r0
    9260:	07db      	lsls	r3, r3, #31
    9262:	d402      	bmi.n	926a <_fputwc_r+0x42>
    9264:	89a3      	ldrh	r3, [r4, #12]
    9266:	059b      	lsls	r3, r3, #22
    9268:	d508      	bpl.n	927c <_fputwc_r+0x54>
    926a:	0028      	movs	r0, r5
    926c:	bd70      	pop	{r4, r5, r6, pc}
    926e:	6da0      	ldr	r0, [r4, #88]	; 0x58
    9270:	f7fe fcd0 	bl	7c14 <__retarget_lock_acquire_recursive>
    9274:	230c      	movs	r3, #12
    9276:	5ee2      	ldrsh	r2, [r4, r3]
    9278:	b291      	uxth	r1, r2
    927a:	e7e1      	b.n	9240 <_fputwc_r+0x18>
    927c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    927e:	f7fe fccb 	bl	7c18 <__retarget_lock_release_recursive>
    9282:	e7f2      	b.n	926a <_fputwc_r+0x42>

00009284 <_fstat_r>:
    9284:	2300      	movs	r3, #0
    9286:	b570      	push	{r4, r5, r6, lr}
    9288:	4c07      	ldr	r4, [pc, #28]	; (92a8 <_fstat_r+0x24>)
    928a:	0005      	movs	r5, r0
    928c:	0008      	movs	r0, r1
    928e:	0011      	movs	r1, r2
    9290:	6023      	str	r3, [r4, #0]
    9292:	f7f7 ff12 	bl	10ba <_fstat>
    9296:	1c43      	adds	r3, r0, #1
    9298:	d000      	beq.n	929c <_fstat_r+0x18>
    929a:	bd70      	pop	{r4, r5, r6, pc}
    929c:	6823      	ldr	r3, [r4, #0]
    929e:	2b00      	cmp	r3, #0
    92a0:	d0fb      	beq.n	929a <_fstat_r+0x16>
    92a2:	602b      	str	r3, [r5, #0]
    92a4:	e7f9      	b.n	929a <_fstat_r+0x16>
    92a6:	46c0      	nop			; (mov r8, r8)
    92a8:	20000bb0 	.word	0x20000bb0

000092ac <_isatty_r>:
    92ac:	2300      	movs	r3, #0
    92ae:	b570      	push	{r4, r5, r6, lr}
    92b0:	4c06      	ldr	r4, [pc, #24]	; (92cc <_isatty_r+0x20>)
    92b2:	0005      	movs	r5, r0
    92b4:	0008      	movs	r0, r1
    92b6:	6023      	str	r3, [r4, #0]
    92b8:	f7f7 ff04 	bl	10c4 <_isatty>
    92bc:	1c43      	adds	r3, r0, #1
    92be:	d000      	beq.n	92c2 <_isatty_r+0x16>
    92c0:	bd70      	pop	{r4, r5, r6, pc}
    92c2:	6823      	ldr	r3, [r4, #0]
    92c4:	2b00      	cmp	r3, #0
    92c6:	d0fb      	beq.n	92c0 <_isatty_r+0x14>
    92c8:	602b      	str	r3, [r5, #0]
    92ca:	e7f9      	b.n	92c0 <_isatty_r+0x14>
    92cc:	20000bb0 	.word	0x20000bb0

000092d0 <__locale_mb_cur_max>:
    92d0:	4b05      	ldr	r3, [pc, #20]	; (92e8 <__locale_mb_cur_max+0x18>)
    92d2:	681b      	ldr	r3, [r3, #0]
    92d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    92d6:	2b00      	cmp	r3, #0
    92d8:	d003      	beq.n	92e2 <__locale_mb_cur_max+0x12>
    92da:	2294      	movs	r2, #148	; 0x94
    92dc:	0052      	lsls	r2, r2, #1
    92de:	5c98      	ldrb	r0, [r3, r2]
    92e0:	4770      	bx	lr
    92e2:	4b02      	ldr	r3, [pc, #8]	; (92ec <__locale_mb_cur_max+0x1c>)
    92e4:	e7f9      	b.n	92da <__locale_mb_cur_max+0xa>
    92e6:	46c0      	nop			; (mov r8, r8)
    92e8:	2000007c 	.word	0x2000007c
    92ec:	200008bc 	.word	0x200008bc

000092f0 <_lseek_r>:
    92f0:	b570      	push	{r4, r5, r6, lr}
    92f2:	0005      	movs	r5, r0
    92f4:	0008      	movs	r0, r1
    92f6:	0011      	movs	r1, r2
    92f8:	2200      	movs	r2, #0
    92fa:	4c06      	ldr	r4, [pc, #24]	; (9314 <_lseek_r+0x24>)
    92fc:	6022      	str	r2, [r4, #0]
    92fe:	001a      	movs	r2, r3
    9300:	f7f7 fee2 	bl	10c8 <_lseek>
    9304:	1c43      	adds	r3, r0, #1
    9306:	d000      	beq.n	930a <_lseek_r+0x1a>
    9308:	bd70      	pop	{r4, r5, r6, pc}
    930a:	6823      	ldr	r3, [r4, #0]
    930c:	2b00      	cmp	r3, #0
    930e:	d0fb      	beq.n	9308 <_lseek_r+0x18>
    9310:	602b      	str	r3, [r5, #0]
    9312:	e7f9      	b.n	9308 <_lseek_r+0x18>
    9314:	20000bb0 	.word	0x20000bb0

00009318 <__ascii_mbtowc>:
    9318:	b082      	sub	sp, #8
    931a:	2900      	cmp	r1, #0
    931c:	d00a      	beq.n	9334 <__ascii_mbtowc+0x1c>
    931e:	2a00      	cmp	r2, #0
    9320:	d00b      	beq.n	933a <__ascii_mbtowc+0x22>
    9322:	2b00      	cmp	r3, #0
    9324:	d00b      	beq.n	933e <__ascii_mbtowc+0x26>
    9326:	7813      	ldrb	r3, [r2, #0]
    9328:	600b      	str	r3, [r1, #0]
    932a:	7810      	ldrb	r0, [r2, #0]
    932c:	1e43      	subs	r3, r0, #1
    932e:	4198      	sbcs	r0, r3
    9330:	b002      	add	sp, #8
    9332:	4770      	bx	lr
    9334:	a901      	add	r1, sp, #4
    9336:	2a00      	cmp	r2, #0
    9338:	d1f3      	bne.n	9322 <__ascii_mbtowc+0xa>
    933a:	2000      	movs	r0, #0
    933c:	e7f8      	b.n	9330 <__ascii_mbtowc+0x18>
    933e:	2002      	movs	r0, #2
    9340:	4240      	negs	r0, r0
    9342:	e7f5      	b.n	9330 <__ascii_mbtowc+0x18>

00009344 <_read_r>:
    9344:	b570      	push	{r4, r5, r6, lr}
    9346:	0005      	movs	r5, r0
    9348:	0008      	movs	r0, r1
    934a:	0011      	movs	r1, r2
    934c:	2200      	movs	r2, #0
    934e:	4c06      	ldr	r4, [pc, #24]	; (9368 <_read_r+0x24>)
    9350:	6022      	str	r2, [r4, #0]
    9352:	001a      	movs	r2, r3
    9354:	f7f9 f828 	bl	23a8 <_read>
    9358:	1c43      	adds	r3, r0, #1
    935a:	d000      	beq.n	935e <_read_r+0x1a>
    935c:	bd70      	pop	{r4, r5, r6, pc}
    935e:	6823      	ldr	r3, [r4, #0]
    9360:	2b00      	cmp	r3, #0
    9362:	d0fb      	beq.n	935c <_read_r+0x18>
    9364:	602b      	str	r3, [r5, #0]
    9366:	e7f9      	b.n	935c <_read_r+0x18>
    9368:	20000bb0 	.word	0x20000bb0

0000936c <__swbuf_r>:
    936c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    936e:	0006      	movs	r6, r0
    9370:	000d      	movs	r5, r1
    9372:	0014      	movs	r4, r2
    9374:	2800      	cmp	r0, #0
    9376:	d002      	beq.n	937e <__swbuf_r+0x12>
    9378:	6b83      	ldr	r3, [r0, #56]	; 0x38
    937a:	2b00      	cmp	r3, #0
    937c:	d04e      	beq.n	941c <__swbuf_r+0xb0>
    937e:	69a3      	ldr	r3, [r4, #24]
    9380:	60a3      	str	r3, [r4, #8]
    9382:	230c      	movs	r3, #12
    9384:	5ee0      	ldrsh	r0, [r4, r3]
    9386:	b281      	uxth	r1, r0
    9388:	070b      	lsls	r3, r1, #28
    938a:	d53c      	bpl.n	9406 <__swbuf_r+0x9a>
    938c:	6923      	ldr	r3, [r4, #16]
    938e:	2b00      	cmp	r3, #0
    9390:	d039      	beq.n	9406 <__swbuf_r+0x9a>
    9392:	22ff      	movs	r2, #255	; 0xff
    9394:	b2ef      	uxtb	r7, r5
    9396:	4015      	ands	r5, r2
    9398:	2280      	movs	r2, #128	; 0x80
    939a:	0192      	lsls	r2, r2, #6
    939c:	4211      	tst	r1, r2
    939e:	d015      	beq.n	93cc <__swbuf_r+0x60>
    93a0:	6822      	ldr	r2, [r4, #0]
    93a2:	6961      	ldr	r1, [r4, #20]
    93a4:	1ad3      	subs	r3, r2, r3
    93a6:	428b      	cmp	r3, r1
    93a8:	da1b      	bge.n	93e2 <__swbuf_r+0x76>
    93aa:	3301      	adds	r3, #1
    93ac:	68a1      	ldr	r1, [r4, #8]
    93ae:	3901      	subs	r1, #1
    93b0:	60a1      	str	r1, [r4, #8]
    93b2:	1c51      	adds	r1, r2, #1
    93b4:	6021      	str	r1, [r4, #0]
    93b6:	7017      	strb	r7, [r2, #0]
    93b8:	6962      	ldr	r2, [r4, #20]
    93ba:	429a      	cmp	r2, r3
    93bc:	d01a      	beq.n	93f4 <__swbuf_r+0x88>
    93be:	89a3      	ldrh	r3, [r4, #12]
    93c0:	07db      	lsls	r3, r3, #31
    93c2:	d501      	bpl.n	93c8 <__swbuf_r+0x5c>
    93c4:	2d0a      	cmp	r5, #10
    93c6:	d015      	beq.n	93f4 <__swbuf_r+0x88>
    93c8:	0028      	movs	r0, r5
    93ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    93cc:	4302      	orrs	r2, r0
    93ce:	6e61      	ldr	r1, [r4, #100]	; 0x64
    93d0:	81a2      	strh	r2, [r4, #12]
    93d2:	4a14      	ldr	r2, [pc, #80]	; (9424 <__swbuf_r+0xb8>)
    93d4:	400a      	ands	r2, r1
    93d6:	6662      	str	r2, [r4, #100]	; 0x64
    93d8:	6961      	ldr	r1, [r4, #20]
    93da:	6822      	ldr	r2, [r4, #0]
    93dc:	1ad3      	subs	r3, r2, r3
    93de:	428b      	cmp	r3, r1
    93e0:	dbe3      	blt.n	93aa <__swbuf_r+0x3e>
    93e2:	0021      	movs	r1, r4
    93e4:	0030      	movs	r0, r6
    93e6:	f7fe f879 	bl	74dc <_fflush_r>
    93ea:	2800      	cmp	r0, #0
    93ec:	d108      	bne.n	9400 <__swbuf_r+0x94>
    93ee:	6822      	ldr	r2, [r4, #0]
    93f0:	2301      	movs	r3, #1
    93f2:	e7db      	b.n	93ac <__swbuf_r+0x40>
    93f4:	0021      	movs	r1, r4
    93f6:	0030      	movs	r0, r6
    93f8:	f7fe f870 	bl	74dc <_fflush_r>
    93fc:	2800      	cmp	r0, #0
    93fe:	d0e3      	beq.n	93c8 <__swbuf_r+0x5c>
    9400:	2501      	movs	r5, #1
    9402:	426d      	negs	r5, r5
    9404:	e7e0      	b.n	93c8 <__swbuf_r+0x5c>
    9406:	0021      	movs	r1, r4
    9408:	0030      	movs	r0, r6
    940a:	f7fc fed3 	bl	61b4 <__swsetup_r>
    940e:	2800      	cmp	r0, #0
    9410:	d1f6      	bne.n	9400 <__swbuf_r+0x94>
    9412:	230c      	movs	r3, #12
    9414:	5ee0      	ldrsh	r0, [r4, r3]
    9416:	6923      	ldr	r3, [r4, #16]
    9418:	b281      	uxth	r1, r0
    941a:	e7ba      	b.n	9392 <__swbuf_r+0x26>
    941c:	f7fe f8b8 	bl	7590 <__sinit>
    9420:	e7ad      	b.n	937e <__swbuf_r+0x12>
    9422:	46c0      	nop			; (mov r8, r8)
    9424:	ffffdfff 	.word	0xffffdfff

00009428 <_wcrtomb_r>:
    9428:	b570      	push	{r4, r5, r6, lr}
    942a:	001d      	movs	r5, r3
    942c:	4b11      	ldr	r3, [pc, #68]	; (9474 <_wcrtomb_r+0x4c>)
    942e:	b084      	sub	sp, #16
    9430:	681b      	ldr	r3, [r3, #0]
    9432:	0004      	movs	r4, r0
    9434:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9436:	2900      	cmp	r1, #0
    9438:	d00e      	beq.n	9458 <_wcrtomb_r+0x30>
    943a:	2b00      	cmp	r3, #0
    943c:	d016      	beq.n	946c <_wcrtomb_r+0x44>
    943e:	20e0      	movs	r0, #224	; 0xe0
    9440:	581e      	ldr	r6, [r3, r0]
    9442:	002b      	movs	r3, r5
    9444:	0020      	movs	r0, r4
    9446:	47b0      	blx	r6
    9448:	1c43      	adds	r3, r0, #1
    944a:	d103      	bne.n	9454 <_wcrtomb_r+0x2c>
    944c:	2300      	movs	r3, #0
    944e:	602b      	str	r3, [r5, #0]
    9450:	338a      	adds	r3, #138	; 0x8a
    9452:	6023      	str	r3, [r4, #0]
    9454:	b004      	add	sp, #16
    9456:	bd70      	pop	{r4, r5, r6, pc}
    9458:	2b00      	cmp	r3, #0
    945a:	d009      	beq.n	9470 <_wcrtomb_r+0x48>
    945c:	22e0      	movs	r2, #224	; 0xe0
    945e:	a901      	add	r1, sp, #4
    9460:	589e      	ldr	r6, [r3, r2]
    9462:	0020      	movs	r0, r4
    9464:	002b      	movs	r3, r5
    9466:	2200      	movs	r2, #0
    9468:	47b0      	blx	r6
    946a:	e7ed      	b.n	9448 <_wcrtomb_r+0x20>
    946c:	4b02      	ldr	r3, [pc, #8]	; (9478 <_wcrtomb_r+0x50>)
    946e:	e7e6      	b.n	943e <_wcrtomb_r+0x16>
    9470:	4b01      	ldr	r3, [pc, #4]	; (9478 <_wcrtomb_r+0x50>)
    9472:	e7f3      	b.n	945c <_wcrtomb_r+0x34>
    9474:	2000007c 	.word	0x2000007c
    9478:	200008bc 	.word	0x200008bc

0000947c <__ascii_wctomb>:
    947c:	2900      	cmp	r1, #0
    947e:	d004      	beq.n	948a <__ascii_wctomb+0xe>
    9480:	2aff      	cmp	r2, #255	; 0xff
    9482:	d804      	bhi.n	948e <__ascii_wctomb+0x12>
    9484:	2001      	movs	r0, #1
    9486:	700a      	strb	r2, [r1, #0]
    9488:	4770      	bx	lr
    948a:	2000      	movs	r0, #0
    948c:	e7fc      	b.n	9488 <__ascii_wctomb+0xc>
    948e:	238a      	movs	r3, #138	; 0x8a
    9490:	6003      	str	r3, [r0, #0]
    9492:	2001      	movs	r0, #1
    9494:	4240      	negs	r0, r0
    9496:	e7f7      	b.n	9488 <__ascii_wctomb+0xc>

00009498 <__divsi3>:
    9498:	4603      	mov	r3, r0
    949a:	430b      	orrs	r3, r1
    949c:	d47f      	bmi.n	959e <__divsi3+0x106>
    949e:	2200      	movs	r2, #0
    94a0:	0843      	lsrs	r3, r0, #1
    94a2:	428b      	cmp	r3, r1
    94a4:	d374      	bcc.n	9590 <__divsi3+0xf8>
    94a6:	0903      	lsrs	r3, r0, #4
    94a8:	428b      	cmp	r3, r1
    94aa:	d35f      	bcc.n	956c <__divsi3+0xd4>
    94ac:	0a03      	lsrs	r3, r0, #8
    94ae:	428b      	cmp	r3, r1
    94b0:	d344      	bcc.n	953c <__divsi3+0xa4>
    94b2:	0b03      	lsrs	r3, r0, #12
    94b4:	428b      	cmp	r3, r1
    94b6:	d328      	bcc.n	950a <__divsi3+0x72>
    94b8:	0c03      	lsrs	r3, r0, #16
    94ba:	428b      	cmp	r3, r1
    94bc:	d30d      	bcc.n	94da <__divsi3+0x42>
    94be:	22ff      	movs	r2, #255	; 0xff
    94c0:	0209      	lsls	r1, r1, #8
    94c2:	ba12      	rev	r2, r2
    94c4:	0c03      	lsrs	r3, r0, #16
    94c6:	428b      	cmp	r3, r1
    94c8:	d302      	bcc.n	94d0 <__divsi3+0x38>
    94ca:	1212      	asrs	r2, r2, #8
    94cc:	0209      	lsls	r1, r1, #8
    94ce:	d065      	beq.n	959c <__divsi3+0x104>
    94d0:	0b03      	lsrs	r3, r0, #12
    94d2:	428b      	cmp	r3, r1
    94d4:	d319      	bcc.n	950a <__divsi3+0x72>
    94d6:	e000      	b.n	94da <__divsi3+0x42>
    94d8:	0a09      	lsrs	r1, r1, #8
    94da:	0bc3      	lsrs	r3, r0, #15
    94dc:	428b      	cmp	r3, r1
    94de:	d301      	bcc.n	94e4 <__divsi3+0x4c>
    94e0:	03cb      	lsls	r3, r1, #15
    94e2:	1ac0      	subs	r0, r0, r3
    94e4:	4152      	adcs	r2, r2
    94e6:	0b83      	lsrs	r3, r0, #14
    94e8:	428b      	cmp	r3, r1
    94ea:	d301      	bcc.n	94f0 <__divsi3+0x58>
    94ec:	038b      	lsls	r3, r1, #14
    94ee:	1ac0      	subs	r0, r0, r3
    94f0:	4152      	adcs	r2, r2
    94f2:	0b43      	lsrs	r3, r0, #13
    94f4:	428b      	cmp	r3, r1
    94f6:	d301      	bcc.n	94fc <__divsi3+0x64>
    94f8:	034b      	lsls	r3, r1, #13
    94fa:	1ac0      	subs	r0, r0, r3
    94fc:	4152      	adcs	r2, r2
    94fe:	0b03      	lsrs	r3, r0, #12
    9500:	428b      	cmp	r3, r1
    9502:	d301      	bcc.n	9508 <__divsi3+0x70>
    9504:	030b      	lsls	r3, r1, #12
    9506:	1ac0      	subs	r0, r0, r3
    9508:	4152      	adcs	r2, r2
    950a:	0ac3      	lsrs	r3, r0, #11
    950c:	428b      	cmp	r3, r1
    950e:	d301      	bcc.n	9514 <__divsi3+0x7c>
    9510:	02cb      	lsls	r3, r1, #11
    9512:	1ac0      	subs	r0, r0, r3
    9514:	4152      	adcs	r2, r2
    9516:	0a83      	lsrs	r3, r0, #10
    9518:	428b      	cmp	r3, r1
    951a:	d301      	bcc.n	9520 <__divsi3+0x88>
    951c:	028b      	lsls	r3, r1, #10
    951e:	1ac0      	subs	r0, r0, r3
    9520:	4152      	adcs	r2, r2
    9522:	0a43      	lsrs	r3, r0, #9
    9524:	428b      	cmp	r3, r1
    9526:	d301      	bcc.n	952c <__divsi3+0x94>
    9528:	024b      	lsls	r3, r1, #9
    952a:	1ac0      	subs	r0, r0, r3
    952c:	4152      	adcs	r2, r2
    952e:	0a03      	lsrs	r3, r0, #8
    9530:	428b      	cmp	r3, r1
    9532:	d301      	bcc.n	9538 <__divsi3+0xa0>
    9534:	020b      	lsls	r3, r1, #8
    9536:	1ac0      	subs	r0, r0, r3
    9538:	4152      	adcs	r2, r2
    953a:	d2cd      	bcs.n	94d8 <__divsi3+0x40>
    953c:	09c3      	lsrs	r3, r0, #7
    953e:	428b      	cmp	r3, r1
    9540:	d301      	bcc.n	9546 <__divsi3+0xae>
    9542:	01cb      	lsls	r3, r1, #7
    9544:	1ac0      	subs	r0, r0, r3
    9546:	4152      	adcs	r2, r2
    9548:	0983      	lsrs	r3, r0, #6
    954a:	428b      	cmp	r3, r1
    954c:	d301      	bcc.n	9552 <__divsi3+0xba>
    954e:	018b      	lsls	r3, r1, #6
    9550:	1ac0      	subs	r0, r0, r3
    9552:	4152      	adcs	r2, r2
    9554:	0943      	lsrs	r3, r0, #5
    9556:	428b      	cmp	r3, r1
    9558:	d301      	bcc.n	955e <__divsi3+0xc6>
    955a:	014b      	lsls	r3, r1, #5
    955c:	1ac0      	subs	r0, r0, r3
    955e:	4152      	adcs	r2, r2
    9560:	0903      	lsrs	r3, r0, #4
    9562:	428b      	cmp	r3, r1
    9564:	d301      	bcc.n	956a <__divsi3+0xd2>
    9566:	010b      	lsls	r3, r1, #4
    9568:	1ac0      	subs	r0, r0, r3
    956a:	4152      	adcs	r2, r2
    956c:	08c3      	lsrs	r3, r0, #3
    956e:	428b      	cmp	r3, r1
    9570:	d301      	bcc.n	9576 <__divsi3+0xde>
    9572:	00cb      	lsls	r3, r1, #3
    9574:	1ac0      	subs	r0, r0, r3
    9576:	4152      	adcs	r2, r2
    9578:	0883      	lsrs	r3, r0, #2
    957a:	428b      	cmp	r3, r1
    957c:	d301      	bcc.n	9582 <__divsi3+0xea>
    957e:	008b      	lsls	r3, r1, #2
    9580:	1ac0      	subs	r0, r0, r3
    9582:	4152      	adcs	r2, r2
    9584:	0843      	lsrs	r3, r0, #1
    9586:	428b      	cmp	r3, r1
    9588:	d301      	bcc.n	958e <__divsi3+0xf6>
    958a:	004b      	lsls	r3, r1, #1
    958c:	1ac0      	subs	r0, r0, r3
    958e:	4152      	adcs	r2, r2
    9590:	1a41      	subs	r1, r0, r1
    9592:	d200      	bcs.n	9596 <__divsi3+0xfe>
    9594:	4601      	mov	r1, r0
    9596:	4152      	adcs	r2, r2
    9598:	4610      	mov	r0, r2
    959a:	4770      	bx	lr
    959c:	e05d      	b.n	965a <__divsi3+0x1c2>
    959e:	0fca      	lsrs	r2, r1, #31
    95a0:	d000      	beq.n	95a4 <__divsi3+0x10c>
    95a2:	4249      	negs	r1, r1
    95a4:	1003      	asrs	r3, r0, #32
    95a6:	d300      	bcc.n	95aa <__divsi3+0x112>
    95a8:	4240      	negs	r0, r0
    95aa:	4053      	eors	r3, r2
    95ac:	2200      	movs	r2, #0
    95ae:	469c      	mov	ip, r3
    95b0:	0903      	lsrs	r3, r0, #4
    95b2:	428b      	cmp	r3, r1
    95b4:	d32d      	bcc.n	9612 <__divsi3+0x17a>
    95b6:	0a03      	lsrs	r3, r0, #8
    95b8:	428b      	cmp	r3, r1
    95ba:	d312      	bcc.n	95e2 <__divsi3+0x14a>
    95bc:	22fc      	movs	r2, #252	; 0xfc
    95be:	0189      	lsls	r1, r1, #6
    95c0:	ba12      	rev	r2, r2
    95c2:	0a03      	lsrs	r3, r0, #8
    95c4:	428b      	cmp	r3, r1
    95c6:	d30c      	bcc.n	95e2 <__divsi3+0x14a>
    95c8:	0189      	lsls	r1, r1, #6
    95ca:	1192      	asrs	r2, r2, #6
    95cc:	428b      	cmp	r3, r1
    95ce:	d308      	bcc.n	95e2 <__divsi3+0x14a>
    95d0:	0189      	lsls	r1, r1, #6
    95d2:	1192      	asrs	r2, r2, #6
    95d4:	428b      	cmp	r3, r1
    95d6:	d304      	bcc.n	95e2 <__divsi3+0x14a>
    95d8:	0189      	lsls	r1, r1, #6
    95da:	d03a      	beq.n	9652 <__divsi3+0x1ba>
    95dc:	1192      	asrs	r2, r2, #6
    95de:	e000      	b.n	95e2 <__divsi3+0x14a>
    95e0:	0989      	lsrs	r1, r1, #6
    95e2:	09c3      	lsrs	r3, r0, #7
    95e4:	428b      	cmp	r3, r1
    95e6:	d301      	bcc.n	95ec <__divsi3+0x154>
    95e8:	01cb      	lsls	r3, r1, #7
    95ea:	1ac0      	subs	r0, r0, r3
    95ec:	4152      	adcs	r2, r2
    95ee:	0983      	lsrs	r3, r0, #6
    95f0:	428b      	cmp	r3, r1
    95f2:	d301      	bcc.n	95f8 <__divsi3+0x160>
    95f4:	018b      	lsls	r3, r1, #6
    95f6:	1ac0      	subs	r0, r0, r3
    95f8:	4152      	adcs	r2, r2
    95fa:	0943      	lsrs	r3, r0, #5
    95fc:	428b      	cmp	r3, r1
    95fe:	d301      	bcc.n	9604 <__divsi3+0x16c>
    9600:	014b      	lsls	r3, r1, #5
    9602:	1ac0      	subs	r0, r0, r3
    9604:	4152      	adcs	r2, r2
    9606:	0903      	lsrs	r3, r0, #4
    9608:	428b      	cmp	r3, r1
    960a:	d301      	bcc.n	9610 <__divsi3+0x178>
    960c:	010b      	lsls	r3, r1, #4
    960e:	1ac0      	subs	r0, r0, r3
    9610:	4152      	adcs	r2, r2
    9612:	08c3      	lsrs	r3, r0, #3
    9614:	428b      	cmp	r3, r1
    9616:	d301      	bcc.n	961c <__divsi3+0x184>
    9618:	00cb      	lsls	r3, r1, #3
    961a:	1ac0      	subs	r0, r0, r3
    961c:	4152      	adcs	r2, r2
    961e:	0883      	lsrs	r3, r0, #2
    9620:	428b      	cmp	r3, r1
    9622:	d301      	bcc.n	9628 <__divsi3+0x190>
    9624:	008b      	lsls	r3, r1, #2
    9626:	1ac0      	subs	r0, r0, r3
    9628:	4152      	adcs	r2, r2
    962a:	d2d9      	bcs.n	95e0 <__divsi3+0x148>
    962c:	0843      	lsrs	r3, r0, #1
    962e:	428b      	cmp	r3, r1
    9630:	d301      	bcc.n	9636 <__divsi3+0x19e>
    9632:	004b      	lsls	r3, r1, #1
    9634:	1ac0      	subs	r0, r0, r3
    9636:	4152      	adcs	r2, r2
    9638:	1a41      	subs	r1, r0, r1
    963a:	d200      	bcs.n	963e <__divsi3+0x1a6>
    963c:	4601      	mov	r1, r0
    963e:	4663      	mov	r3, ip
    9640:	4152      	adcs	r2, r2
    9642:	105b      	asrs	r3, r3, #1
    9644:	4610      	mov	r0, r2
    9646:	d301      	bcc.n	964c <__divsi3+0x1b4>
    9648:	4240      	negs	r0, r0
    964a:	2b00      	cmp	r3, #0
    964c:	d500      	bpl.n	9650 <__divsi3+0x1b8>
    964e:	4249      	negs	r1, r1
    9650:	4770      	bx	lr
    9652:	4663      	mov	r3, ip
    9654:	105b      	asrs	r3, r3, #1
    9656:	d300      	bcc.n	965a <__divsi3+0x1c2>
    9658:	4240      	negs	r0, r0
    965a:	b501      	push	{r0, lr}
    965c:	2000      	movs	r0, #0
    965e:	f7f9 f9fb 	bl	2a58 <__aeabi_idiv0>
    9662:	bd02      	pop	{r1, pc}

00009664 <__aeabi_idivmod>:
    9664:	2900      	cmp	r1, #0
    9666:	d0f8      	beq.n	965a <__divsi3+0x1c2>
    9668:	e716      	b.n	9498 <__divsi3>
    966a:	4770      	bx	lr

0000966c <__aeabi_dadd>:
    966c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    966e:	4645      	mov	r5, r8
    9670:	46de      	mov	lr, fp
    9672:	4657      	mov	r7, sl
    9674:	464e      	mov	r6, r9
    9676:	030c      	lsls	r4, r1, #12
    9678:	b5e0      	push	{r5, r6, r7, lr}
    967a:	004e      	lsls	r6, r1, #1
    967c:	0fc9      	lsrs	r1, r1, #31
    967e:	4688      	mov	r8, r1
    9680:	000d      	movs	r5, r1
    9682:	0a61      	lsrs	r1, r4, #9
    9684:	0f44      	lsrs	r4, r0, #29
    9686:	430c      	orrs	r4, r1
    9688:	00c7      	lsls	r7, r0, #3
    968a:	0319      	lsls	r1, r3, #12
    968c:	0058      	lsls	r0, r3, #1
    968e:	0fdb      	lsrs	r3, r3, #31
    9690:	469b      	mov	fp, r3
    9692:	0a4b      	lsrs	r3, r1, #9
    9694:	0f51      	lsrs	r1, r2, #29
    9696:	430b      	orrs	r3, r1
    9698:	0d76      	lsrs	r6, r6, #21
    969a:	0d40      	lsrs	r0, r0, #21
    969c:	0019      	movs	r1, r3
    969e:	00d2      	lsls	r2, r2, #3
    96a0:	45d8      	cmp	r8, fp
    96a2:	d100      	bne.n	96a6 <__aeabi_dadd+0x3a>
    96a4:	e0ae      	b.n	9804 <__aeabi_dadd+0x198>
    96a6:	1a35      	subs	r5, r6, r0
    96a8:	2d00      	cmp	r5, #0
    96aa:	dc00      	bgt.n	96ae <__aeabi_dadd+0x42>
    96ac:	e0f6      	b.n	989c <__aeabi_dadd+0x230>
    96ae:	2800      	cmp	r0, #0
    96b0:	d10f      	bne.n	96d2 <__aeabi_dadd+0x66>
    96b2:	4313      	orrs	r3, r2
    96b4:	d100      	bne.n	96b8 <__aeabi_dadd+0x4c>
    96b6:	e0db      	b.n	9870 <__aeabi_dadd+0x204>
    96b8:	1e6b      	subs	r3, r5, #1
    96ba:	2b00      	cmp	r3, #0
    96bc:	d000      	beq.n	96c0 <__aeabi_dadd+0x54>
    96be:	e137      	b.n	9930 <__aeabi_dadd+0x2c4>
    96c0:	1aba      	subs	r2, r7, r2
    96c2:	4297      	cmp	r7, r2
    96c4:	41bf      	sbcs	r7, r7
    96c6:	1a64      	subs	r4, r4, r1
    96c8:	427f      	negs	r7, r7
    96ca:	1be4      	subs	r4, r4, r7
    96cc:	2601      	movs	r6, #1
    96ce:	0017      	movs	r7, r2
    96d0:	e024      	b.n	971c <__aeabi_dadd+0xb0>
    96d2:	4bc6      	ldr	r3, [pc, #792]	; (99ec <__aeabi_dadd+0x380>)
    96d4:	429e      	cmp	r6, r3
    96d6:	d04d      	beq.n	9774 <__aeabi_dadd+0x108>
    96d8:	2380      	movs	r3, #128	; 0x80
    96da:	041b      	lsls	r3, r3, #16
    96dc:	4319      	orrs	r1, r3
    96de:	2d38      	cmp	r5, #56	; 0x38
    96e0:	dd00      	ble.n	96e4 <__aeabi_dadd+0x78>
    96e2:	e107      	b.n	98f4 <__aeabi_dadd+0x288>
    96e4:	2d1f      	cmp	r5, #31
    96e6:	dd00      	ble.n	96ea <__aeabi_dadd+0x7e>
    96e8:	e138      	b.n	995c <__aeabi_dadd+0x2f0>
    96ea:	2020      	movs	r0, #32
    96ec:	1b43      	subs	r3, r0, r5
    96ee:	469a      	mov	sl, r3
    96f0:	000b      	movs	r3, r1
    96f2:	4650      	mov	r0, sl
    96f4:	4083      	lsls	r3, r0
    96f6:	4699      	mov	r9, r3
    96f8:	0013      	movs	r3, r2
    96fa:	4648      	mov	r0, r9
    96fc:	40eb      	lsrs	r3, r5
    96fe:	4318      	orrs	r0, r3
    9700:	0003      	movs	r3, r0
    9702:	4650      	mov	r0, sl
    9704:	4082      	lsls	r2, r0
    9706:	1e50      	subs	r0, r2, #1
    9708:	4182      	sbcs	r2, r0
    970a:	40e9      	lsrs	r1, r5
    970c:	431a      	orrs	r2, r3
    970e:	1aba      	subs	r2, r7, r2
    9710:	1a61      	subs	r1, r4, r1
    9712:	4297      	cmp	r7, r2
    9714:	41a4      	sbcs	r4, r4
    9716:	0017      	movs	r7, r2
    9718:	4264      	negs	r4, r4
    971a:	1b0c      	subs	r4, r1, r4
    971c:	0223      	lsls	r3, r4, #8
    971e:	d562      	bpl.n	97e6 <__aeabi_dadd+0x17a>
    9720:	0264      	lsls	r4, r4, #9
    9722:	0a65      	lsrs	r5, r4, #9
    9724:	2d00      	cmp	r5, #0
    9726:	d100      	bne.n	972a <__aeabi_dadd+0xbe>
    9728:	e0df      	b.n	98ea <__aeabi_dadd+0x27e>
    972a:	0028      	movs	r0, r5
    972c:	f7fa fe9a 	bl	4464 <__clzsi2>
    9730:	0003      	movs	r3, r0
    9732:	3b08      	subs	r3, #8
    9734:	2b1f      	cmp	r3, #31
    9736:	dd00      	ble.n	973a <__aeabi_dadd+0xce>
    9738:	e0d2      	b.n	98e0 <__aeabi_dadd+0x274>
    973a:	2220      	movs	r2, #32
    973c:	003c      	movs	r4, r7
    973e:	1ad2      	subs	r2, r2, r3
    9740:	409d      	lsls	r5, r3
    9742:	40d4      	lsrs	r4, r2
    9744:	409f      	lsls	r7, r3
    9746:	4325      	orrs	r5, r4
    9748:	429e      	cmp	r6, r3
    974a:	dd00      	ble.n	974e <__aeabi_dadd+0xe2>
    974c:	e0c4      	b.n	98d8 <__aeabi_dadd+0x26c>
    974e:	1b9e      	subs	r6, r3, r6
    9750:	1c73      	adds	r3, r6, #1
    9752:	2b1f      	cmp	r3, #31
    9754:	dd00      	ble.n	9758 <__aeabi_dadd+0xec>
    9756:	e0f1      	b.n	993c <__aeabi_dadd+0x2d0>
    9758:	2220      	movs	r2, #32
    975a:	0038      	movs	r0, r7
    975c:	0029      	movs	r1, r5
    975e:	1ad2      	subs	r2, r2, r3
    9760:	40d8      	lsrs	r0, r3
    9762:	4091      	lsls	r1, r2
    9764:	4097      	lsls	r7, r2
    9766:	002c      	movs	r4, r5
    9768:	4301      	orrs	r1, r0
    976a:	1e78      	subs	r0, r7, #1
    976c:	4187      	sbcs	r7, r0
    976e:	40dc      	lsrs	r4, r3
    9770:	2600      	movs	r6, #0
    9772:	430f      	orrs	r7, r1
    9774:	077b      	lsls	r3, r7, #29
    9776:	d009      	beq.n	978c <__aeabi_dadd+0x120>
    9778:	230f      	movs	r3, #15
    977a:	403b      	ands	r3, r7
    977c:	2b04      	cmp	r3, #4
    977e:	d005      	beq.n	978c <__aeabi_dadd+0x120>
    9780:	1d3b      	adds	r3, r7, #4
    9782:	42bb      	cmp	r3, r7
    9784:	41bf      	sbcs	r7, r7
    9786:	427f      	negs	r7, r7
    9788:	19e4      	adds	r4, r4, r7
    978a:	001f      	movs	r7, r3
    978c:	0223      	lsls	r3, r4, #8
    978e:	d52c      	bpl.n	97ea <__aeabi_dadd+0x17e>
    9790:	4b96      	ldr	r3, [pc, #600]	; (99ec <__aeabi_dadd+0x380>)
    9792:	3601      	adds	r6, #1
    9794:	429e      	cmp	r6, r3
    9796:	d100      	bne.n	979a <__aeabi_dadd+0x12e>
    9798:	e09a      	b.n	98d0 <__aeabi_dadd+0x264>
    979a:	4645      	mov	r5, r8
    979c:	4b94      	ldr	r3, [pc, #592]	; (99f0 <__aeabi_dadd+0x384>)
    979e:	08ff      	lsrs	r7, r7, #3
    97a0:	401c      	ands	r4, r3
    97a2:	0760      	lsls	r0, r4, #29
    97a4:	0576      	lsls	r6, r6, #21
    97a6:	0264      	lsls	r4, r4, #9
    97a8:	4307      	orrs	r7, r0
    97aa:	0b24      	lsrs	r4, r4, #12
    97ac:	0d76      	lsrs	r6, r6, #21
    97ae:	2100      	movs	r1, #0
    97b0:	0324      	lsls	r4, r4, #12
    97b2:	0b23      	lsrs	r3, r4, #12
    97b4:	0d0c      	lsrs	r4, r1, #20
    97b6:	4a8f      	ldr	r2, [pc, #572]	; (99f4 <__aeabi_dadd+0x388>)
    97b8:	0524      	lsls	r4, r4, #20
    97ba:	431c      	orrs	r4, r3
    97bc:	4014      	ands	r4, r2
    97be:	0533      	lsls	r3, r6, #20
    97c0:	4323      	orrs	r3, r4
    97c2:	005b      	lsls	r3, r3, #1
    97c4:	07ed      	lsls	r5, r5, #31
    97c6:	085b      	lsrs	r3, r3, #1
    97c8:	432b      	orrs	r3, r5
    97ca:	0038      	movs	r0, r7
    97cc:	0019      	movs	r1, r3
    97ce:	bc3c      	pop	{r2, r3, r4, r5}
    97d0:	4690      	mov	r8, r2
    97d2:	4699      	mov	r9, r3
    97d4:	46a2      	mov	sl, r4
    97d6:	46ab      	mov	fp, r5
    97d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    97da:	4664      	mov	r4, ip
    97dc:	4304      	orrs	r4, r0
    97de:	d100      	bne.n	97e2 <__aeabi_dadd+0x176>
    97e0:	e211      	b.n	9c06 <__aeabi_dadd+0x59a>
    97e2:	0004      	movs	r4, r0
    97e4:	4667      	mov	r7, ip
    97e6:	077b      	lsls	r3, r7, #29
    97e8:	d1c6      	bne.n	9778 <__aeabi_dadd+0x10c>
    97ea:	4645      	mov	r5, r8
    97ec:	0760      	lsls	r0, r4, #29
    97ee:	08ff      	lsrs	r7, r7, #3
    97f0:	4307      	orrs	r7, r0
    97f2:	08e4      	lsrs	r4, r4, #3
    97f4:	4b7d      	ldr	r3, [pc, #500]	; (99ec <__aeabi_dadd+0x380>)
    97f6:	429e      	cmp	r6, r3
    97f8:	d030      	beq.n	985c <__aeabi_dadd+0x1f0>
    97fa:	0324      	lsls	r4, r4, #12
    97fc:	0576      	lsls	r6, r6, #21
    97fe:	0b24      	lsrs	r4, r4, #12
    9800:	0d76      	lsrs	r6, r6, #21
    9802:	e7d4      	b.n	97ae <__aeabi_dadd+0x142>
    9804:	1a33      	subs	r3, r6, r0
    9806:	469a      	mov	sl, r3
    9808:	2b00      	cmp	r3, #0
    980a:	dd78      	ble.n	98fe <__aeabi_dadd+0x292>
    980c:	2800      	cmp	r0, #0
    980e:	d031      	beq.n	9874 <__aeabi_dadd+0x208>
    9810:	4876      	ldr	r0, [pc, #472]	; (99ec <__aeabi_dadd+0x380>)
    9812:	4286      	cmp	r6, r0
    9814:	d0ae      	beq.n	9774 <__aeabi_dadd+0x108>
    9816:	2080      	movs	r0, #128	; 0x80
    9818:	0400      	lsls	r0, r0, #16
    981a:	4301      	orrs	r1, r0
    981c:	4653      	mov	r3, sl
    981e:	2b38      	cmp	r3, #56	; 0x38
    9820:	dc00      	bgt.n	9824 <__aeabi_dadd+0x1b8>
    9822:	e0e9      	b.n	99f8 <__aeabi_dadd+0x38c>
    9824:	430a      	orrs	r2, r1
    9826:	1e51      	subs	r1, r2, #1
    9828:	418a      	sbcs	r2, r1
    982a:	2100      	movs	r1, #0
    982c:	19d2      	adds	r2, r2, r7
    982e:	42ba      	cmp	r2, r7
    9830:	41bf      	sbcs	r7, r7
    9832:	1909      	adds	r1, r1, r4
    9834:	427c      	negs	r4, r7
    9836:	0017      	movs	r7, r2
    9838:	190c      	adds	r4, r1, r4
    983a:	0223      	lsls	r3, r4, #8
    983c:	d5d3      	bpl.n	97e6 <__aeabi_dadd+0x17a>
    983e:	4b6b      	ldr	r3, [pc, #428]	; (99ec <__aeabi_dadd+0x380>)
    9840:	3601      	adds	r6, #1
    9842:	429e      	cmp	r6, r3
    9844:	d100      	bne.n	9848 <__aeabi_dadd+0x1dc>
    9846:	e13a      	b.n	9abe <__aeabi_dadd+0x452>
    9848:	2001      	movs	r0, #1
    984a:	4b69      	ldr	r3, [pc, #420]	; (99f0 <__aeabi_dadd+0x384>)
    984c:	401c      	ands	r4, r3
    984e:	087b      	lsrs	r3, r7, #1
    9850:	4007      	ands	r7, r0
    9852:	431f      	orrs	r7, r3
    9854:	07e0      	lsls	r0, r4, #31
    9856:	4307      	orrs	r7, r0
    9858:	0864      	lsrs	r4, r4, #1
    985a:	e78b      	b.n	9774 <__aeabi_dadd+0x108>
    985c:	0023      	movs	r3, r4
    985e:	433b      	orrs	r3, r7
    9860:	d100      	bne.n	9864 <__aeabi_dadd+0x1f8>
    9862:	e1cb      	b.n	9bfc <__aeabi_dadd+0x590>
    9864:	2280      	movs	r2, #128	; 0x80
    9866:	0312      	lsls	r2, r2, #12
    9868:	4314      	orrs	r4, r2
    986a:	0324      	lsls	r4, r4, #12
    986c:	0b24      	lsrs	r4, r4, #12
    986e:	e79e      	b.n	97ae <__aeabi_dadd+0x142>
    9870:	002e      	movs	r6, r5
    9872:	e77f      	b.n	9774 <__aeabi_dadd+0x108>
    9874:	0008      	movs	r0, r1
    9876:	4310      	orrs	r0, r2
    9878:	d100      	bne.n	987c <__aeabi_dadd+0x210>
    987a:	e0b4      	b.n	99e6 <__aeabi_dadd+0x37a>
    987c:	1e58      	subs	r0, r3, #1
    987e:	2800      	cmp	r0, #0
    9880:	d000      	beq.n	9884 <__aeabi_dadd+0x218>
    9882:	e0de      	b.n	9a42 <__aeabi_dadd+0x3d6>
    9884:	18ba      	adds	r2, r7, r2
    9886:	42ba      	cmp	r2, r7
    9888:	419b      	sbcs	r3, r3
    988a:	1864      	adds	r4, r4, r1
    988c:	425b      	negs	r3, r3
    988e:	18e4      	adds	r4, r4, r3
    9890:	0017      	movs	r7, r2
    9892:	2601      	movs	r6, #1
    9894:	0223      	lsls	r3, r4, #8
    9896:	d5a6      	bpl.n	97e6 <__aeabi_dadd+0x17a>
    9898:	2602      	movs	r6, #2
    989a:	e7d5      	b.n	9848 <__aeabi_dadd+0x1dc>
    989c:	2d00      	cmp	r5, #0
    989e:	d16e      	bne.n	997e <__aeabi_dadd+0x312>
    98a0:	1c70      	adds	r0, r6, #1
    98a2:	0540      	lsls	r0, r0, #21
    98a4:	0d40      	lsrs	r0, r0, #21
    98a6:	2801      	cmp	r0, #1
    98a8:	dc00      	bgt.n	98ac <__aeabi_dadd+0x240>
    98aa:	e0f9      	b.n	9aa0 <__aeabi_dadd+0x434>
    98ac:	1ab8      	subs	r0, r7, r2
    98ae:	4684      	mov	ip, r0
    98b0:	4287      	cmp	r7, r0
    98b2:	4180      	sbcs	r0, r0
    98b4:	1ae5      	subs	r5, r4, r3
    98b6:	4240      	negs	r0, r0
    98b8:	1a2d      	subs	r5, r5, r0
    98ba:	0228      	lsls	r0, r5, #8
    98bc:	d400      	bmi.n	98c0 <__aeabi_dadd+0x254>
    98be:	e089      	b.n	99d4 <__aeabi_dadd+0x368>
    98c0:	1bd7      	subs	r7, r2, r7
    98c2:	42ba      	cmp	r2, r7
    98c4:	4192      	sbcs	r2, r2
    98c6:	1b1c      	subs	r4, r3, r4
    98c8:	4252      	negs	r2, r2
    98ca:	1aa5      	subs	r5, r4, r2
    98cc:	46d8      	mov	r8, fp
    98ce:	e729      	b.n	9724 <__aeabi_dadd+0xb8>
    98d0:	4645      	mov	r5, r8
    98d2:	2400      	movs	r4, #0
    98d4:	2700      	movs	r7, #0
    98d6:	e76a      	b.n	97ae <__aeabi_dadd+0x142>
    98d8:	4c45      	ldr	r4, [pc, #276]	; (99f0 <__aeabi_dadd+0x384>)
    98da:	1af6      	subs	r6, r6, r3
    98dc:	402c      	ands	r4, r5
    98de:	e749      	b.n	9774 <__aeabi_dadd+0x108>
    98e0:	003d      	movs	r5, r7
    98e2:	3828      	subs	r0, #40	; 0x28
    98e4:	4085      	lsls	r5, r0
    98e6:	2700      	movs	r7, #0
    98e8:	e72e      	b.n	9748 <__aeabi_dadd+0xdc>
    98ea:	0038      	movs	r0, r7
    98ec:	f7fa fdba 	bl	4464 <__clzsi2>
    98f0:	3020      	adds	r0, #32
    98f2:	e71d      	b.n	9730 <__aeabi_dadd+0xc4>
    98f4:	430a      	orrs	r2, r1
    98f6:	1e51      	subs	r1, r2, #1
    98f8:	418a      	sbcs	r2, r1
    98fa:	2100      	movs	r1, #0
    98fc:	e707      	b.n	970e <__aeabi_dadd+0xa2>
    98fe:	2b00      	cmp	r3, #0
    9900:	d000      	beq.n	9904 <__aeabi_dadd+0x298>
    9902:	e0f3      	b.n	9aec <__aeabi_dadd+0x480>
    9904:	1c70      	adds	r0, r6, #1
    9906:	0543      	lsls	r3, r0, #21
    9908:	0d5b      	lsrs	r3, r3, #21
    990a:	2b01      	cmp	r3, #1
    990c:	dc00      	bgt.n	9910 <__aeabi_dadd+0x2a4>
    990e:	e0ad      	b.n	9a6c <__aeabi_dadd+0x400>
    9910:	4b36      	ldr	r3, [pc, #216]	; (99ec <__aeabi_dadd+0x380>)
    9912:	4298      	cmp	r0, r3
    9914:	d100      	bne.n	9918 <__aeabi_dadd+0x2ac>
    9916:	e0d1      	b.n	9abc <__aeabi_dadd+0x450>
    9918:	18ba      	adds	r2, r7, r2
    991a:	42ba      	cmp	r2, r7
    991c:	41bf      	sbcs	r7, r7
    991e:	1864      	adds	r4, r4, r1
    9920:	427f      	negs	r7, r7
    9922:	19e4      	adds	r4, r4, r7
    9924:	07e7      	lsls	r7, r4, #31
    9926:	0852      	lsrs	r2, r2, #1
    9928:	4317      	orrs	r7, r2
    992a:	0864      	lsrs	r4, r4, #1
    992c:	0006      	movs	r6, r0
    992e:	e721      	b.n	9774 <__aeabi_dadd+0x108>
    9930:	482e      	ldr	r0, [pc, #184]	; (99ec <__aeabi_dadd+0x380>)
    9932:	4285      	cmp	r5, r0
    9934:	d100      	bne.n	9938 <__aeabi_dadd+0x2cc>
    9936:	e093      	b.n	9a60 <__aeabi_dadd+0x3f4>
    9938:	001d      	movs	r5, r3
    993a:	e6d0      	b.n	96de <__aeabi_dadd+0x72>
    993c:	0029      	movs	r1, r5
    993e:	3e1f      	subs	r6, #31
    9940:	40f1      	lsrs	r1, r6
    9942:	2b20      	cmp	r3, #32
    9944:	d100      	bne.n	9948 <__aeabi_dadd+0x2dc>
    9946:	e08d      	b.n	9a64 <__aeabi_dadd+0x3f8>
    9948:	2240      	movs	r2, #64	; 0x40
    994a:	1ad3      	subs	r3, r2, r3
    994c:	409d      	lsls	r5, r3
    994e:	432f      	orrs	r7, r5
    9950:	1e7d      	subs	r5, r7, #1
    9952:	41af      	sbcs	r7, r5
    9954:	2400      	movs	r4, #0
    9956:	430f      	orrs	r7, r1
    9958:	2600      	movs	r6, #0
    995a:	e744      	b.n	97e6 <__aeabi_dadd+0x17a>
    995c:	002b      	movs	r3, r5
    995e:	0008      	movs	r0, r1
    9960:	3b20      	subs	r3, #32
    9962:	40d8      	lsrs	r0, r3
    9964:	0003      	movs	r3, r0
    9966:	2d20      	cmp	r5, #32
    9968:	d100      	bne.n	996c <__aeabi_dadd+0x300>
    996a:	e07d      	b.n	9a68 <__aeabi_dadd+0x3fc>
    996c:	2040      	movs	r0, #64	; 0x40
    996e:	1b45      	subs	r5, r0, r5
    9970:	40a9      	lsls	r1, r5
    9972:	430a      	orrs	r2, r1
    9974:	1e51      	subs	r1, r2, #1
    9976:	418a      	sbcs	r2, r1
    9978:	2100      	movs	r1, #0
    997a:	431a      	orrs	r2, r3
    997c:	e6c7      	b.n	970e <__aeabi_dadd+0xa2>
    997e:	2e00      	cmp	r6, #0
    9980:	d050      	beq.n	9a24 <__aeabi_dadd+0x3b8>
    9982:	4e1a      	ldr	r6, [pc, #104]	; (99ec <__aeabi_dadd+0x380>)
    9984:	42b0      	cmp	r0, r6
    9986:	d057      	beq.n	9a38 <__aeabi_dadd+0x3cc>
    9988:	2680      	movs	r6, #128	; 0x80
    998a:	426b      	negs	r3, r5
    998c:	4699      	mov	r9, r3
    998e:	0436      	lsls	r6, r6, #16
    9990:	4334      	orrs	r4, r6
    9992:	464b      	mov	r3, r9
    9994:	2b38      	cmp	r3, #56	; 0x38
    9996:	dd00      	ble.n	999a <__aeabi_dadd+0x32e>
    9998:	e0d6      	b.n	9b48 <__aeabi_dadd+0x4dc>
    999a:	2b1f      	cmp	r3, #31
    999c:	dd00      	ble.n	99a0 <__aeabi_dadd+0x334>
    999e:	e135      	b.n	9c0c <__aeabi_dadd+0x5a0>
    99a0:	2620      	movs	r6, #32
    99a2:	1af5      	subs	r5, r6, r3
    99a4:	0026      	movs	r6, r4
    99a6:	40ae      	lsls	r6, r5
    99a8:	46b2      	mov	sl, r6
    99aa:	003e      	movs	r6, r7
    99ac:	40de      	lsrs	r6, r3
    99ae:	46ac      	mov	ip, r5
    99b0:	0035      	movs	r5, r6
    99b2:	4656      	mov	r6, sl
    99b4:	432e      	orrs	r6, r5
    99b6:	4665      	mov	r5, ip
    99b8:	40af      	lsls	r7, r5
    99ba:	1e7d      	subs	r5, r7, #1
    99bc:	41af      	sbcs	r7, r5
    99be:	40dc      	lsrs	r4, r3
    99c0:	4337      	orrs	r7, r6
    99c2:	1bd7      	subs	r7, r2, r7
    99c4:	42ba      	cmp	r2, r7
    99c6:	4192      	sbcs	r2, r2
    99c8:	1b0c      	subs	r4, r1, r4
    99ca:	4252      	negs	r2, r2
    99cc:	1aa4      	subs	r4, r4, r2
    99ce:	0006      	movs	r6, r0
    99d0:	46d8      	mov	r8, fp
    99d2:	e6a3      	b.n	971c <__aeabi_dadd+0xb0>
    99d4:	4664      	mov	r4, ip
    99d6:	4667      	mov	r7, ip
    99d8:	432c      	orrs	r4, r5
    99da:	d000      	beq.n	99de <__aeabi_dadd+0x372>
    99dc:	e6a2      	b.n	9724 <__aeabi_dadd+0xb8>
    99de:	2500      	movs	r5, #0
    99e0:	2600      	movs	r6, #0
    99e2:	2700      	movs	r7, #0
    99e4:	e706      	b.n	97f4 <__aeabi_dadd+0x188>
    99e6:	001e      	movs	r6, r3
    99e8:	e6c4      	b.n	9774 <__aeabi_dadd+0x108>
    99ea:	46c0      	nop			; (mov r8, r8)
    99ec:	000007ff 	.word	0x000007ff
    99f0:	ff7fffff 	.word	0xff7fffff
    99f4:	800fffff 	.word	0x800fffff
    99f8:	2b1f      	cmp	r3, #31
    99fa:	dc63      	bgt.n	9ac4 <__aeabi_dadd+0x458>
    99fc:	2020      	movs	r0, #32
    99fe:	1ac3      	subs	r3, r0, r3
    9a00:	0008      	movs	r0, r1
    9a02:	4098      	lsls	r0, r3
    9a04:	469c      	mov	ip, r3
    9a06:	4683      	mov	fp, r0
    9a08:	4653      	mov	r3, sl
    9a0a:	0010      	movs	r0, r2
    9a0c:	40d8      	lsrs	r0, r3
    9a0e:	0003      	movs	r3, r0
    9a10:	4658      	mov	r0, fp
    9a12:	4318      	orrs	r0, r3
    9a14:	4663      	mov	r3, ip
    9a16:	409a      	lsls	r2, r3
    9a18:	1e53      	subs	r3, r2, #1
    9a1a:	419a      	sbcs	r2, r3
    9a1c:	4653      	mov	r3, sl
    9a1e:	4302      	orrs	r2, r0
    9a20:	40d9      	lsrs	r1, r3
    9a22:	e703      	b.n	982c <__aeabi_dadd+0x1c0>
    9a24:	0026      	movs	r6, r4
    9a26:	433e      	orrs	r6, r7
    9a28:	d006      	beq.n	9a38 <__aeabi_dadd+0x3cc>
    9a2a:	43eb      	mvns	r3, r5
    9a2c:	4699      	mov	r9, r3
    9a2e:	2b00      	cmp	r3, #0
    9a30:	d0c7      	beq.n	99c2 <__aeabi_dadd+0x356>
    9a32:	4e94      	ldr	r6, [pc, #592]	; (9c84 <__aeabi_dadd+0x618>)
    9a34:	42b0      	cmp	r0, r6
    9a36:	d1ac      	bne.n	9992 <__aeabi_dadd+0x326>
    9a38:	000c      	movs	r4, r1
    9a3a:	0017      	movs	r7, r2
    9a3c:	0006      	movs	r6, r0
    9a3e:	46d8      	mov	r8, fp
    9a40:	e698      	b.n	9774 <__aeabi_dadd+0x108>
    9a42:	4b90      	ldr	r3, [pc, #576]	; (9c84 <__aeabi_dadd+0x618>)
    9a44:	459a      	cmp	sl, r3
    9a46:	d00b      	beq.n	9a60 <__aeabi_dadd+0x3f4>
    9a48:	4682      	mov	sl, r0
    9a4a:	e6e7      	b.n	981c <__aeabi_dadd+0x1b0>
    9a4c:	2800      	cmp	r0, #0
    9a4e:	d000      	beq.n	9a52 <__aeabi_dadd+0x3e6>
    9a50:	e09e      	b.n	9b90 <__aeabi_dadd+0x524>
    9a52:	0018      	movs	r0, r3
    9a54:	4310      	orrs	r0, r2
    9a56:	d100      	bne.n	9a5a <__aeabi_dadd+0x3ee>
    9a58:	e0e9      	b.n	9c2e <__aeabi_dadd+0x5c2>
    9a5a:	001c      	movs	r4, r3
    9a5c:	0017      	movs	r7, r2
    9a5e:	46d8      	mov	r8, fp
    9a60:	4e88      	ldr	r6, [pc, #544]	; (9c84 <__aeabi_dadd+0x618>)
    9a62:	e687      	b.n	9774 <__aeabi_dadd+0x108>
    9a64:	2500      	movs	r5, #0
    9a66:	e772      	b.n	994e <__aeabi_dadd+0x2e2>
    9a68:	2100      	movs	r1, #0
    9a6a:	e782      	b.n	9972 <__aeabi_dadd+0x306>
    9a6c:	0023      	movs	r3, r4
    9a6e:	433b      	orrs	r3, r7
    9a70:	2e00      	cmp	r6, #0
    9a72:	d000      	beq.n	9a76 <__aeabi_dadd+0x40a>
    9a74:	e0ab      	b.n	9bce <__aeabi_dadd+0x562>
    9a76:	2b00      	cmp	r3, #0
    9a78:	d100      	bne.n	9a7c <__aeabi_dadd+0x410>
    9a7a:	e0e7      	b.n	9c4c <__aeabi_dadd+0x5e0>
    9a7c:	000b      	movs	r3, r1
    9a7e:	4313      	orrs	r3, r2
    9a80:	d100      	bne.n	9a84 <__aeabi_dadd+0x418>
    9a82:	e677      	b.n	9774 <__aeabi_dadd+0x108>
    9a84:	18ba      	adds	r2, r7, r2
    9a86:	42ba      	cmp	r2, r7
    9a88:	41bf      	sbcs	r7, r7
    9a8a:	1864      	adds	r4, r4, r1
    9a8c:	427f      	negs	r7, r7
    9a8e:	19e4      	adds	r4, r4, r7
    9a90:	0223      	lsls	r3, r4, #8
    9a92:	d400      	bmi.n	9a96 <__aeabi_dadd+0x42a>
    9a94:	e0f2      	b.n	9c7c <__aeabi_dadd+0x610>
    9a96:	4b7c      	ldr	r3, [pc, #496]	; (9c88 <__aeabi_dadd+0x61c>)
    9a98:	0017      	movs	r7, r2
    9a9a:	401c      	ands	r4, r3
    9a9c:	0006      	movs	r6, r0
    9a9e:	e669      	b.n	9774 <__aeabi_dadd+0x108>
    9aa0:	0020      	movs	r0, r4
    9aa2:	4338      	orrs	r0, r7
    9aa4:	2e00      	cmp	r6, #0
    9aa6:	d1d1      	bne.n	9a4c <__aeabi_dadd+0x3e0>
    9aa8:	2800      	cmp	r0, #0
    9aaa:	d15b      	bne.n	9b64 <__aeabi_dadd+0x4f8>
    9aac:	001c      	movs	r4, r3
    9aae:	4314      	orrs	r4, r2
    9ab0:	d100      	bne.n	9ab4 <__aeabi_dadd+0x448>
    9ab2:	e0a8      	b.n	9c06 <__aeabi_dadd+0x59a>
    9ab4:	001c      	movs	r4, r3
    9ab6:	0017      	movs	r7, r2
    9ab8:	46d8      	mov	r8, fp
    9aba:	e65b      	b.n	9774 <__aeabi_dadd+0x108>
    9abc:	0006      	movs	r6, r0
    9abe:	2400      	movs	r4, #0
    9ac0:	2700      	movs	r7, #0
    9ac2:	e697      	b.n	97f4 <__aeabi_dadd+0x188>
    9ac4:	4650      	mov	r0, sl
    9ac6:	000b      	movs	r3, r1
    9ac8:	3820      	subs	r0, #32
    9aca:	40c3      	lsrs	r3, r0
    9acc:	4699      	mov	r9, r3
    9ace:	4653      	mov	r3, sl
    9ad0:	2b20      	cmp	r3, #32
    9ad2:	d100      	bne.n	9ad6 <__aeabi_dadd+0x46a>
    9ad4:	e095      	b.n	9c02 <__aeabi_dadd+0x596>
    9ad6:	2340      	movs	r3, #64	; 0x40
    9ad8:	4650      	mov	r0, sl
    9ada:	1a1b      	subs	r3, r3, r0
    9adc:	4099      	lsls	r1, r3
    9ade:	430a      	orrs	r2, r1
    9ae0:	1e51      	subs	r1, r2, #1
    9ae2:	418a      	sbcs	r2, r1
    9ae4:	464b      	mov	r3, r9
    9ae6:	2100      	movs	r1, #0
    9ae8:	431a      	orrs	r2, r3
    9aea:	e69f      	b.n	982c <__aeabi_dadd+0x1c0>
    9aec:	2e00      	cmp	r6, #0
    9aee:	d130      	bne.n	9b52 <__aeabi_dadd+0x4e6>
    9af0:	0026      	movs	r6, r4
    9af2:	433e      	orrs	r6, r7
    9af4:	d067      	beq.n	9bc6 <__aeabi_dadd+0x55a>
    9af6:	43db      	mvns	r3, r3
    9af8:	469a      	mov	sl, r3
    9afa:	2b00      	cmp	r3, #0
    9afc:	d01c      	beq.n	9b38 <__aeabi_dadd+0x4cc>
    9afe:	4e61      	ldr	r6, [pc, #388]	; (9c84 <__aeabi_dadd+0x618>)
    9b00:	42b0      	cmp	r0, r6
    9b02:	d060      	beq.n	9bc6 <__aeabi_dadd+0x55a>
    9b04:	4653      	mov	r3, sl
    9b06:	2b38      	cmp	r3, #56	; 0x38
    9b08:	dd00      	ble.n	9b0c <__aeabi_dadd+0x4a0>
    9b0a:	e096      	b.n	9c3a <__aeabi_dadd+0x5ce>
    9b0c:	2b1f      	cmp	r3, #31
    9b0e:	dd00      	ble.n	9b12 <__aeabi_dadd+0x4a6>
    9b10:	e09f      	b.n	9c52 <__aeabi_dadd+0x5e6>
    9b12:	2620      	movs	r6, #32
    9b14:	1af3      	subs	r3, r6, r3
    9b16:	0026      	movs	r6, r4
    9b18:	409e      	lsls	r6, r3
    9b1a:	469c      	mov	ip, r3
    9b1c:	46b3      	mov	fp, r6
    9b1e:	4653      	mov	r3, sl
    9b20:	003e      	movs	r6, r7
    9b22:	40de      	lsrs	r6, r3
    9b24:	0033      	movs	r3, r6
    9b26:	465e      	mov	r6, fp
    9b28:	431e      	orrs	r6, r3
    9b2a:	4663      	mov	r3, ip
    9b2c:	409f      	lsls	r7, r3
    9b2e:	1e7b      	subs	r3, r7, #1
    9b30:	419f      	sbcs	r7, r3
    9b32:	4653      	mov	r3, sl
    9b34:	40dc      	lsrs	r4, r3
    9b36:	4337      	orrs	r7, r6
    9b38:	18bf      	adds	r7, r7, r2
    9b3a:	4297      	cmp	r7, r2
    9b3c:	4192      	sbcs	r2, r2
    9b3e:	1864      	adds	r4, r4, r1
    9b40:	4252      	negs	r2, r2
    9b42:	18a4      	adds	r4, r4, r2
    9b44:	0006      	movs	r6, r0
    9b46:	e678      	b.n	983a <__aeabi_dadd+0x1ce>
    9b48:	4327      	orrs	r7, r4
    9b4a:	1e7c      	subs	r4, r7, #1
    9b4c:	41a7      	sbcs	r7, r4
    9b4e:	2400      	movs	r4, #0
    9b50:	e737      	b.n	99c2 <__aeabi_dadd+0x356>
    9b52:	4e4c      	ldr	r6, [pc, #304]	; (9c84 <__aeabi_dadd+0x618>)
    9b54:	42b0      	cmp	r0, r6
    9b56:	d036      	beq.n	9bc6 <__aeabi_dadd+0x55a>
    9b58:	2680      	movs	r6, #128	; 0x80
    9b5a:	425b      	negs	r3, r3
    9b5c:	0436      	lsls	r6, r6, #16
    9b5e:	469a      	mov	sl, r3
    9b60:	4334      	orrs	r4, r6
    9b62:	e7cf      	b.n	9b04 <__aeabi_dadd+0x498>
    9b64:	0018      	movs	r0, r3
    9b66:	4310      	orrs	r0, r2
    9b68:	d100      	bne.n	9b6c <__aeabi_dadd+0x500>
    9b6a:	e603      	b.n	9774 <__aeabi_dadd+0x108>
    9b6c:	1ab8      	subs	r0, r7, r2
    9b6e:	4684      	mov	ip, r0
    9b70:	4567      	cmp	r7, ip
    9b72:	41ad      	sbcs	r5, r5
    9b74:	1ae0      	subs	r0, r4, r3
    9b76:	426d      	negs	r5, r5
    9b78:	1b40      	subs	r0, r0, r5
    9b7a:	0205      	lsls	r5, r0, #8
    9b7c:	d400      	bmi.n	9b80 <__aeabi_dadd+0x514>
    9b7e:	e62c      	b.n	97da <__aeabi_dadd+0x16e>
    9b80:	1bd7      	subs	r7, r2, r7
    9b82:	42ba      	cmp	r2, r7
    9b84:	4192      	sbcs	r2, r2
    9b86:	1b1c      	subs	r4, r3, r4
    9b88:	4252      	negs	r2, r2
    9b8a:	1aa4      	subs	r4, r4, r2
    9b8c:	46d8      	mov	r8, fp
    9b8e:	e5f1      	b.n	9774 <__aeabi_dadd+0x108>
    9b90:	0018      	movs	r0, r3
    9b92:	4310      	orrs	r0, r2
    9b94:	d100      	bne.n	9b98 <__aeabi_dadd+0x52c>
    9b96:	e763      	b.n	9a60 <__aeabi_dadd+0x3f4>
    9b98:	08f8      	lsrs	r0, r7, #3
    9b9a:	0767      	lsls	r7, r4, #29
    9b9c:	4307      	orrs	r7, r0
    9b9e:	2080      	movs	r0, #128	; 0x80
    9ba0:	08e4      	lsrs	r4, r4, #3
    9ba2:	0300      	lsls	r0, r0, #12
    9ba4:	4204      	tst	r4, r0
    9ba6:	d008      	beq.n	9bba <__aeabi_dadd+0x54e>
    9ba8:	08dd      	lsrs	r5, r3, #3
    9baa:	4205      	tst	r5, r0
    9bac:	d105      	bne.n	9bba <__aeabi_dadd+0x54e>
    9bae:	08d2      	lsrs	r2, r2, #3
    9bb0:	0759      	lsls	r1, r3, #29
    9bb2:	4311      	orrs	r1, r2
    9bb4:	000f      	movs	r7, r1
    9bb6:	002c      	movs	r4, r5
    9bb8:	46d8      	mov	r8, fp
    9bba:	0f7b      	lsrs	r3, r7, #29
    9bbc:	00e4      	lsls	r4, r4, #3
    9bbe:	431c      	orrs	r4, r3
    9bc0:	00ff      	lsls	r7, r7, #3
    9bc2:	4e30      	ldr	r6, [pc, #192]	; (9c84 <__aeabi_dadd+0x618>)
    9bc4:	e5d6      	b.n	9774 <__aeabi_dadd+0x108>
    9bc6:	000c      	movs	r4, r1
    9bc8:	0017      	movs	r7, r2
    9bca:	0006      	movs	r6, r0
    9bcc:	e5d2      	b.n	9774 <__aeabi_dadd+0x108>
    9bce:	2b00      	cmp	r3, #0
    9bd0:	d038      	beq.n	9c44 <__aeabi_dadd+0x5d8>
    9bd2:	000b      	movs	r3, r1
    9bd4:	4313      	orrs	r3, r2
    9bd6:	d100      	bne.n	9bda <__aeabi_dadd+0x56e>
    9bd8:	e742      	b.n	9a60 <__aeabi_dadd+0x3f4>
    9bda:	08f8      	lsrs	r0, r7, #3
    9bdc:	0767      	lsls	r7, r4, #29
    9bde:	4307      	orrs	r7, r0
    9be0:	2080      	movs	r0, #128	; 0x80
    9be2:	08e4      	lsrs	r4, r4, #3
    9be4:	0300      	lsls	r0, r0, #12
    9be6:	4204      	tst	r4, r0
    9be8:	d0e7      	beq.n	9bba <__aeabi_dadd+0x54e>
    9bea:	08cb      	lsrs	r3, r1, #3
    9bec:	4203      	tst	r3, r0
    9bee:	d1e4      	bne.n	9bba <__aeabi_dadd+0x54e>
    9bf0:	08d2      	lsrs	r2, r2, #3
    9bf2:	0749      	lsls	r1, r1, #29
    9bf4:	4311      	orrs	r1, r2
    9bf6:	000f      	movs	r7, r1
    9bf8:	001c      	movs	r4, r3
    9bfa:	e7de      	b.n	9bba <__aeabi_dadd+0x54e>
    9bfc:	2700      	movs	r7, #0
    9bfe:	2400      	movs	r4, #0
    9c00:	e5d5      	b.n	97ae <__aeabi_dadd+0x142>
    9c02:	2100      	movs	r1, #0
    9c04:	e76b      	b.n	9ade <__aeabi_dadd+0x472>
    9c06:	2500      	movs	r5, #0
    9c08:	2700      	movs	r7, #0
    9c0a:	e5f3      	b.n	97f4 <__aeabi_dadd+0x188>
    9c0c:	464e      	mov	r6, r9
    9c0e:	0025      	movs	r5, r4
    9c10:	3e20      	subs	r6, #32
    9c12:	40f5      	lsrs	r5, r6
    9c14:	464b      	mov	r3, r9
    9c16:	002e      	movs	r6, r5
    9c18:	2b20      	cmp	r3, #32
    9c1a:	d02d      	beq.n	9c78 <__aeabi_dadd+0x60c>
    9c1c:	2540      	movs	r5, #64	; 0x40
    9c1e:	1aed      	subs	r5, r5, r3
    9c20:	40ac      	lsls	r4, r5
    9c22:	4327      	orrs	r7, r4
    9c24:	1e7c      	subs	r4, r7, #1
    9c26:	41a7      	sbcs	r7, r4
    9c28:	2400      	movs	r4, #0
    9c2a:	4337      	orrs	r7, r6
    9c2c:	e6c9      	b.n	99c2 <__aeabi_dadd+0x356>
    9c2e:	2480      	movs	r4, #128	; 0x80
    9c30:	2500      	movs	r5, #0
    9c32:	0324      	lsls	r4, r4, #12
    9c34:	4e13      	ldr	r6, [pc, #76]	; (9c84 <__aeabi_dadd+0x618>)
    9c36:	2700      	movs	r7, #0
    9c38:	e5dc      	b.n	97f4 <__aeabi_dadd+0x188>
    9c3a:	4327      	orrs	r7, r4
    9c3c:	1e7c      	subs	r4, r7, #1
    9c3e:	41a7      	sbcs	r7, r4
    9c40:	2400      	movs	r4, #0
    9c42:	e779      	b.n	9b38 <__aeabi_dadd+0x4cc>
    9c44:	000c      	movs	r4, r1
    9c46:	0017      	movs	r7, r2
    9c48:	4e0e      	ldr	r6, [pc, #56]	; (9c84 <__aeabi_dadd+0x618>)
    9c4a:	e593      	b.n	9774 <__aeabi_dadd+0x108>
    9c4c:	000c      	movs	r4, r1
    9c4e:	0017      	movs	r7, r2
    9c50:	e590      	b.n	9774 <__aeabi_dadd+0x108>
    9c52:	4656      	mov	r6, sl
    9c54:	0023      	movs	r3, r4
    9c56:	3e20      	subs	r6, #32
    9c58:	40f3      	lsrs	r3, r6
    9c5a:	4699      	mov	r9, r3
    9c5c:	4653      	mov	r3, sl
    9c5e:	2b20      	cmp	r3, #32
    9c60:	d00e      	beq.n	9c80 <__aeabi_dadd+0x614>
    9c62:	2340      	movs	r3, #64	; 0x40
    9c64:	4656      	mov	r6, sl
    9c66:	1b9b      	subs	r3, r3, r6
    9c68:	409c      	lsls	r4, r3
    9c6a:	4327      	orrs	r7, r4
    9c6c:	1e7c      	subs	r4, r7, #1
    9c6e:	41a7      	sbcs	r7, r4
    9c70:	464b      	mov	r3, r9
    9c72:	2400      	movs	r4, #0
    9c74:	431f      	orrs	r7, r3
    9c76:	e75f      	b.n	9b38 <__aeabi_dadd+0x4cc>
    9c78:	2400      	movs	r4, #0
    9c7a:	e7d2      	b.n	9c22 <__aeabi_dadd+0x5b6>
    9c7c:	0017      	movs	r7, r2
    9c7e:	e5b2      	b.n	97e6 <__aeabi_dadd+0x17a>
    9c80:	2400      	movs	r4, #0
    9c82:	e7f2      	b.n	9c6a <__aeabi_dadd+0x5fe>
    9c84:	000007ff 	.word	0x000007ff
    9c88:	ff7fffff 	.word	0xff7fffff

00009c8c <__aeabi_dcmpun>:
    9c8c:	b570      	push	{r4, r5, r6, lr}
    9c8e:	4e0e      	ldr	r6, [pc, #56]	; (9cc8 <__aeabi_dcmpun+0x3c>)
    9c90:	030d      	lsls	r5, r1, #12
    9c92:	031c      	lsls	r4, r3, #12
    9c94:	0049      	lsls	r1, r1, #1
    9c96:	005b      	lsls	r3, r3, #1
    9c98:	0b2d      	lsrs	r5, r5, #12
    9c9a:	0d49      	lsrs	r1, r1, #21
    9c9c:	0b24      	lsrs	r4, r4, #12
    9c9e:	0d5b      	lsrs	r3, r3, #21
    9ca0:	42b1      	cmp	r1, r6
    9ca2:	d004      	beq.n	9cae <__aeabi_dcmpun+0x22>
    9ca4:	4908      	ldr	r1, [pc, #32]	; (9cc8 <__aeabi_dcmpun+0x3c>)
    9ca6:	2000      	movs	r0, #0
    9ca8:	428b      	cmp	r3, r1
    9caa:	d008      	beq.n	9cbe <__aeabi_dcmpun+0x32>
    9cac:	bd70      	pop	{r4, r5, r6, pc}
    9cae:	4305      	orrs	r5, r0
    9cb0:	2001      	movs	r0, #1
    9cb2:	2d00      	cmp	r5, #0
    9cb4:	d1fa      	bne.n	9cac <__aeabi_dcmpun+0x20>
    9cb6:	4904      	ldr	r1, [pc, #16]	; (9cc8 <__aeabi_dcmpun+0x3c>)
    9cb8:	2000      	movs	r0, #0
    9cba:	428b      	cmp	r3, r1
    9cbc:	d1f6      	bne.n	9cac <__aeabi_dcmpun+0x20>
    9cbe:	4314      	orrs	r4, r2
    9cc0:	0020      	movs	r0, r4
    9cc2:	1e44      	subs	r4, r0, #1
    9cc4:	41a0      	sbcs	r0, r4
    9cc6:	e7f1      	b.n	9cac <__aeabi_dcmpun+0x20>
    9cc8:	000007ff 	.word	0x000007ff
    9ccc:	682f2e2e 	.word	0x682f2e2e
    9cd0:	732f6c61 	.word	0x732f6c61
    9cd4:	682f6372 	.word	0x682f6372
    9cd8:	695f6c61 	.word	0x695f6c61
    9cdc:	6d5f6332 	.word	0x6d5f6332
    9ce0:	6e79735f 	.word	0x6e79735f
    9ce4:	00632e63 	.word	0x00632e63
    9ce8:	682f2e2e 	.word	0x682f2e2e
    9cec:	732f6c61 	.word	0x732f6c61
    9cf0:	682f6372 	.word	0x682f6372
    9cf4:	695f6c61 	.word	0x695f6c61
    9cf8:	00632e6f 	.word	0x00632e6f
    9cfc:	682f2e2e 	.word	0x682f2e2e
    9d00:	732f6c61 	.word	0x732f6c61
    9d04:	682f6372 	.word	0x682f6372
    9d08:	735f6c61 	.word	0x735f6c61
    9d0c:	5f64636c 	.word	0x5f64636c
    9d10:	636e7973 	.word	0x636e7973
    9d14:	0000632e 	.word	0x0000632e
    9d18:	682f2e2e 	.word	0x682f2e2e
    9d1c:	732f6c61 	.word	0x732f6c61
    9d20:	682f6372 	.word	0x682f6372
    9d24:	745f6c61 	.word	0x745f6c61
    9d28:	72656d69 	.word	0x72656d69
    9d2c:	0000632e 	.word	0x0000632e
    9d30:	682f2e2e 	.word	0x682f2e2e
    9d34:	732f6c61 	.word	0x732f6c61
    9d38:	682f6372 	.word	0x682f6372
    9d3c:	755f6c61 	.word	0x755f6c61
    9d40:	74726173 	.word	0x74726173
    9d44:	6e79735f 	.word	0x6e79735f
    9d48:	00632e63 	.word	0x00632e63
    9d4c:	682f2e2e 	.word	0x682f2e2e
    9d50:	752f6c61 	.word	0x752f6c61
    9d54:	736c6974 	.word	0x736c6974
    9d58:	6372732f 	.word	0x6372732f
    9d5c:	6974752f 	.word	0x6974752f
    9d60:	6c5f736c 	.word	0x6c5f736c
    9d64:	2e747369 	.word	0x2e747369
    9d68:	00000063 	.word	0x00000063
    9d6c:	682f2e2e 	.word	0x682f2e2e
    9d70:	722f6c70 	.word	0x722f6c70
    9d74:	682f6374 	.word	0x682f6374
    9d78:	725f6c70 	.word	0x725f6c70
    9d7c:	632e6374 	.word	0x632e6374
    9d80:	00000000 	.word	0x00000000

00009d84 <_i2cms>:
    9d84:	00000001 00200014 00000100 00000049     ...... .....I...
    9d94:	00d70000 00f42400 682f2e2e 732f6c70     .....$..../hpl/s
    9da4:	6f637265 70682f6d 65735f6c 6d6f6372     ercom/hpl_sercom
    9db4:	0000632e                                .c..

00009db8 <cm_setting>:
    9db8:	07000100 07000400 07000500 07000600     ................
    9dc8:	07000700 0e010801 0e010a01 0e010c01     ................
    9dd8:	0e010e01 0e011001 0e011201 0e011401     ................
    9de8:	0e011601 07000100 07000100 07000100     ................
    9df8:	07000100 07000100 07000100 07000100     ................
    9e08:	07000100 07000100 07000100 07000100     ................
    9e18:	07000100 07000100 07000100 07000100     ................
    9e28:	07000100 07000100 07000100 07000100     ................
    9e38:	07000100 07000100 07000100 07000100     ................
    9e48:	07000100 07000100 07000100 07000100     ................
    9e58:	07000100 07000100 07000100 07000100     ................

00009e68 <cm7_lut>:
    9e68:	00000000 00007730 00002431 00005d32     ....0w..1$..2]..
    9e78:	00006d33 00002e34 00006b35 00007b36     3m..4...5k..6{..
    9e88:	00002537 00007f38 00002f39 00003f61     7%..8...9/..a?..
    9e98:	00007a62 00005363 00007c64 00005b65     bz..cS..d|..e[..
    9ea8:	00001b66                                f...

00009eac <cm14_lut>:
    9eac:	003a1730 00080231 0028c532 0028c333     0.:.1...2.(.3.(.
    9ebc:	0018c234 0030c335 0030c736 00280237     4...5.0.6.0.7.(.
    9ecc:	0038c738 0038c339 0038c661 0029a362     8.8.9.8.a.8.b.).
    9edc:	00300563 00292364 0030c565 0030c466     c.0.d#).e.0.f.0.
    9eec:	00308767 0018c668 0018c669 0008076a     g.0.h...i...j...
    9efc:	00124c6b 0010056c 001e066d 001c0e6e     kL..l...m...n...
    9f0c:	0038076f 0038c470 00380f71 0038cc72     o.8.p.8.q.8.r.8.
    9f1c:	00304973 00212074 00180775 00121476     sI0.t !.u...v...
    9f2c:	00181e77 00061878 0018c379 0022117a     w...x...y...z.".
    9f3c:	0000c02d 0001e02b 0002102f 0000c13d     -...+.../...=...
    9f4c:	0009e323 0006182a 00000827 00041029     #...*...'...)...
    9f5c:	00020828 00284f40 0031e324 00121225     (...@O(.$.1.%...
    9f6c:	0004085c 0000015f 00000000 00000002     \..._...........
    9f7c:	00000003 00010002 00010003 00040002     ................
    9f8c:	00040003 00050002 00050003 00343332     ............234.
    9f9c:	64636261 68676665 00000000 6c786461     abcdefgh....adxl
    9fac:	5f353433 5f766564 74696e69 3d202928     345_dev_init() =
    9fbc:	6425203e 0000000a 6c786461 5f353433     > %d....adxl345_
    9fcc:	74696e69 3d202928 6425203e 0000000a     init() => %d....
    9fdc:	6c786461 5f353433 706f7473 3d202928     adxl345_stop() =
    9fec:	6425203e 0000000a 6c786461 5f353433     > %d....adxl345_
    9ffc:	5f746573 725f7762 5f657461 28676572     set_bw_rate_reg(
    a00c:	3e3d2029 0a642520 00000000 6c786461     ) => %d.....adxl
    a01c:	5f353433 5f746573 6f666966 6c74635f     345_set_fifo_ctl
    a02c:	6765725f 3d202928 6425203e 0000000a     _reg() => %d....
    a03c:	6c786461 5f353433 72617473 20292874     adxl345_start() 
    a04c:	25203e3d 00000a64 25206425 20646c35     => %d...%d %5ld 
    a05c:	000a6625                                %f..

0000a060 <multipliers_tau_calc>:
    a060:	00130007 00900035                       ....5...

0000a068 <gain_setting_int_cap>:
    a068:	050b1c3f 0a0b0103                                ?.....

0000a06e <PTC_XY_PINS>:
    a06e:	08090a0b 43424645 25240302 29282726     ....EFBC..$%&'()
    a07e:	17161514 1f1e1b5c 07060504 13121110     ....\...........
    a08e:	31380000 311a0000 30d40000 2ff20000     ..81...1...0.../
    a09e:	30d40000 310c0000 30d40000 2ff20000     ...0...1...0.../
    a0ae:	311a0000 311a0000 310c0000 2ff20000     ...1...1...1.../
    a0be:	2fea0000 2fea0000 2fea0000 33500000     .../.../.../..P3
    a0ce:	37980000 36580000 36580000 36540000     ...7..X6..X6..T6
    a0de:	37700000 37700000 37620000 36540000     ..p7..p7..b7..T6
    a0ee:	37700000 37620000 37700000 36540000     ..p7..b7..p7..T6
    a0fe:	37780000 37780000 37780000 397c0000     ..x7..x7..x7..|9
	...

0000a110 <_global_impure_ptr>:
    a110:	20000080 00005072 00005146 00005146     ... rP..FQ..FQ..
    a120:	0000505e 00005146 00005146 00005146     ^P..FQ..FQ..FQ..
    a130:	00005146 00005146 00005146 00005118     FQ..FQ..FQ...Q..
    a140:	00004c2a 00005146 00004c20 00004c34     *L..FQ.. L..4L..
    a150:	00005146 00005068 00004df4 00004df4     FQ..hP...M...M..
    a160:	00004df4 00004df4 00004df4 00004df4     .M...M...M...M..
    a170:	00004df4 00004df4 00004df4 00005146     .M...M...M..FQ..
    a180:	00005146 00005146 00005146 00005146     FQ..FQ..FQ..FQ..
    a190:	00005146 00005146 00005146 00005146     FQ..FQ..FQ..FQ..
    a1a0:	00005146 0000512e 00005082 00005146     FQ...Q...P..FQ..
    a1b0:	00005082 00005146 00005146 00005146     .P..FQ..FQ..FQ..
    a1c0:	00005146 00004fe8 00005146 00005146     FQ...O..FQ..FQ..
    a1d0:	00004ff2 00005146 00005146 00005146     .O..FQ..FQ..FQ..
    a1e0:	00005146 00005146 00005020 00005146     FQ..FQ.. P..FQ..
    a1f0:	00005146 0000504e 00005146 00005146     FQ..NP..FQ..FQ..
    a200:	00005146 00005146 00005146 00005146     FQ..FQ..FQ..FQ..
    a210:	00005146 00005146 00005146 00005146     FQ..FQ..FQ..FQ..
    a220:	00004e34 00004e6a 00005082 00005082     4N..jN...P...P..
    a230:	00005082 00004f12 00004e6a 00005146     .P...O..jN..FQ..
    a240:	00005146 00004f1c 00005146 00004f2e     FQ...O..FQ...O..
    a250:	00005142 00004f5c 00004f86 00005146     BQ..\O...O..FQ..
    a260:	00004f90 00005146 0000513e 00005146     .O..FQ..>Q..FQ..
    a270:	00005146 00004c82 00464e49 00666e69     FQ...L..INF.inf.
    a280:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
    a290:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    a2a0:	37363534 62613938 66656463 00000000     456789abcdef....
    a2b0:	6c756e28 0000296c 00000030              (null)..0...

0000a2bc <blanks.7238>:
    a2bc:	20202020 20202020 20202020 20202020                     

0000a2cc <zeroes.7239>:
    a2cc:	30303030 30303030 30303030 30303030     0000000000000000
    a2dc:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
    a2ec:	00000000                                ....

0000a2f0 <__mprec_bigtens>:
    a2f0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    a300:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    a310:	7f73bf3c 75154fdd                       <.s..O.u

0000a318 <__mprec_tens>:
    a318:	00000000 3ff00000 00000000 40240000     .......?......$@
    a328:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    a338:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    a348:	00000000 412e8480 00000000 416312d0     .......A......cA
    a358:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    a368:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    a378:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    a388:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    a398:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    a3a8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    a3b8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    a3c8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    a3d8:	79d99db4 44ea7843                       ...yCx.D

0000a3e0 <p05.6055>:
    a3e0:	00000005 00000019 0000007d 00000043     ........}...C...
    a3f0:	49534f50 00000058 0000002e              POSIX.......

0000a3fc <_ctype_>:
    a3fc:	20202000 20202020 28282020 20282828     .         ((((( 
    a40c:	20202020 20202020 20202020 20202020                     
    a41c:	10108820 10101010 10101010 10101010      ...............
    a42c:	04040410 04040404 10040404 10101010     ................
    a43c:	41411010 41414141 01010101 01010101     ..AAAAAA........
    a44c:	01010101 01010101 01010101 10101010     ................
    a45c:	42421010 42424242 02020202 02020202     ..BBBBBB........
    a46c:	02020202 02020202 02020202 10101010     ................
    a47c:	00000020 00000000 00000000 00000000      ...............
	...

0000a500 <_init>:
    a500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a502:	46c0      	nop			; (mov r8, r8)
    a504:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a506:	bc08      	pop	{r3}
    a508:	469e      	mov	lr, r3
    a50a:	4770      	bx	lr

0000a50c <__init_array_start>:
    a50c:	00006289 	.word	0x00006289

0000a510 <__frame_dummy_init_array_entry>:
    a510:	000000d1                                ....

0000a514 <_fini>:
    a514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a516:	46c0      	nop			; (mov r8, r8)
    a518:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a51a:	bc08      	pop	{r3}
    a51c:	469e      	mov	lr, r3
    a51e:	4770      	bx	lr

0000a520 <__fini_array_start>:
    a520:	000000a9 	.word	0x000000a9
